---
title: Automatic correction of trajectory data
abstract: Pose data includes multiple pose samples, where each pose sample indicates a reported location of a device at a respective time, and where the multiple pose samples describe a trajectory of the device. To correct the pose data, pose modification data for some of the pose samples is received, indicating respective modifications of the pose samples by a user. Several other pose samples are automatically modified in view of the received pose modification data. To automatically modify the pose samples, one or more user modification constraints are applied, where each user modification constraint seeks to preserve the modification of the location of the device for a respective pose sample. One or more location constraints are also applied, each of which seeks to preserve the reported location of the device for a respective pose sample. Modified pose data is generated in view of the user modification constraints and the location constraints.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08510041&OS=08510041&RS=08510041
owner: Google Inc.
number: 08510041
owner_city: Mountain View
owner_country: US
publication_date: 20110907
---

{"@attributes":{"id":"description"},"RELAPP":[{},{}],"heading":["CROSS-REFERENCE TO A RELATED APPLICATION","FIELD OF THE DISCLOSURE","BACKGROUND","SUMMARY","DETAILED DESCRIPTION"],"p":["This application claims the benefit of U.S. Provisional Patent Application No. 61\/481,423, entitled \u201cAutomatic Correction of Vehicle Trajectory Data\u201d and filed on May 2, 2011, the entire disclosure of which is hereby incorporated by reference herein.","This disclosure relates to automatically correcting data that describes a trajectory of a device in view of one or more user modifications of the data.","The background description provided herein is for the purpose of generally presenting the context of the disclosure. Work of the presently named inventors, to the extent it is described in this background section, as well as aspects of the description that may not otherwise qualify as prior art at the time of filing, are neither expressly nor impliedly admitted as prior art against the present disclosure.","Today, positioning devices, such as Global Positioning Service (GPS) receivers, are widely used to determine a geographic location of a person or an object. For example, a camera equipped with a GPS receiver determines the position of the camera in the GPS coordinate system at the time a photograph is taken and stores the determined GPS coordinates with the photograph as positioning data, which later can be used to determine what is depicted in the photograph (e.g., which building in what city), for example. Further, a GPS receiver may be installed in a vehicle for use in navigation or tracking the vehicle.","However, in some situations, positioning data fails to indicate the geographic location with the desired precision. For example, GPS generally has a margin of error of approximately 15 meters. In so-called \u201curban canyons,\u201d or city locations at which tall buildings obscure or reflect GPS signals, the problem of imprecise coordinates is particularly prevalent.","In an embodiment, a method for correcting pose data stored on a computer-readable medium is implemented in one or more computers. The pose data includes multiple pose samples, where each pose sample indicates at least a reported location of a device at a respective time, and where the multiple pose samples describe a trajectory of the device. The method includes receiving pose modification data for a first set of one or more of the pose samples, such that the received pose modification data indicates a respective modification by a user of each pose sample included in the first set, and automatically modifying a second set of one or more of the pose samples in view of the received pose modification data, where the second set includes at least one pose sample not included in the first set. Automatically modifying the second set includes applying one or more user modification constraints, where each of the one or more user modification constraints seeks to preserve the modification of the location of the device for a respective pose sample in the first set of pose samples, applying one or more location constraints, where each of the one or more location constraints seeks to preserve the reported location of the device for a respective pose sample in the second set, and generating modified pose data in view of the one or more user modification constraints and the one or more location constraints.","In another embodiment, a pose correction engine for modifying a trajectory of a device includes an interface module, a user modification term generator, a location term generator, and a pose optimizer module communicatively coupled to the user modification term generator and to the location term generator. The interface module is configured to receive pose data that includes multiple pose samples, where each pose sample indicates at least a reported location of a device at a respective time, and where the multiple pose samples describe the trajectory of the device, and pose modification data for a first set of one or more of the pose samples, where the received pose modification data indicates a respective modification by a user of each pose sample included in the first set of pose samples. The user modification term generator is configured to generate a respective user modification term for each pose sample in the first set of pose samples, where each user modification term represents a respective user modification constraint that seeks to preserve the modification by the user for the corresponding pose sample. The location term generator is configured to generate a respective location term for each pose sample in a second set of one or more of the plurality of pose samples, where the second set of pose samples includes one or more pose samples not included in the first set of pose samples, and where each location term represents a respective location constraint that seeks to preserve the reported location of the device for the corresponding pose sample. The pose optimizer module is configured to modify each pose sample in the second set using the one or more user modification terms and the one or more location terms to generate modified pose data, whereby the modified pose data optimally agrees with the pose modification data and the received pose data in view of the one or more user modification constraints and the one or more location constraints.","In yet another embodiment, a trajectory correction system includes a database configured to store pose data that includes multiple pose samples, where each pose sample indicates at least a reported location of a device at a respective time, and where the pose samples describe a trajectory of the device in a three-dimensional space. The trajectory correction system also includes a pose rendering engine communicatively coupled to the database and configured to provide an interactive user interface via which a user can modify one or more pose samples, and receive pose modification data from the interactive user interface for a first set of one or more of the pose samples, where the received pose modification data indicates a respective modification of each pose sample included in the first set. The trajectory correction system further includes a pose correction engine communicatively coupled to the database and to the pose rendering engine, where the pose correction engine is configured to receive the pose modification data to automatically modify each pose sample in a second set of one or more of the pose samples in view of the received pose modification data so to generate modified pose data, where the second set includes at least one pose sample not included in the first set.","According to the techniques of the present disclosure, a trajectory of a moving device or object, such as a vehicle travelling along a certain path in three-dimensional space, is automatically modified in view of one or several modifications of the trajectory by an operator (or \u201cuser\u201d) so as to correct large absolute errors while preserving local trajectory shape, when possible. In an embodiment, the trajectory of the vehicle is described by positioning data including multiple samples, each of which indicates the position and the orientation of the vehicle at a respective time (collectively referred to herein as a \u201cpose\u201d). For example, as a car equipped with a Global Positioning Service (GPS) receiver, an Inertial Measurement Unit (IMU), and a wheel odometer travels through a city during an hour-long drive, pose samples including the reported location and orientation of the vehicle in three dimensions typically are obtained once every ten milliseconds using the GPS receiver and the IMU to define a set of 100*60*60=360,000 pose samples. In general, however, the pose samples can be collected at any suitable rate such as 400 Hz or 800 Hz, for example. A set of pose samples corresponding to a trajectory of a certain vehicle may be referred to herein as a \u201cpose run.\u201d After a user modifies one or more pose samples in the pose run, the user modifications are interpolated and\/or extrapolated so that one or more other pose samples are modified in view of the user modifications to generate a corrected trajectory in view of certain constraints. Moreover, in some cases, some or all of the pose samples modified by the user are further modified in view of the constraints as well as the original user modifications. For efficiency, user modifications and automatic correction of pose samples are performed on sub-sampled positioning data, according to some embodiments. Further, in some of these embodiments, vehicle trajectory corrections performed on a sub-sampled version of the positioning data are then automatically extended to the entire set of pose samples.","As discussed in more detail below, the constraints that affect trajectory corrections may be expressed as terms in an optimization framework, where the various terms define constraint violation penalties with different strengths, and where the optimization goal is to minimize the total sum of term penalties. A set of pose samples is then solved for so as to optimally satisfy the constraints using an optimization scheme such as a local search method (e.g., gradient descent, conjugate gradient method, the Levenberg-Marquardt method) while applying the optimization terms. For example, in an embodiment, user modifications to one or more pose samples are expressed as a relatively strong optimization term, and the reported locations included in the pose samples are expressed as a relatively weak optimization term. Additional terms, such as relative translation and relative rotation terms, may be used to accurately and efficiently correct pose run data.","In an embodiment, the trajectory correction techniques of the present disclosure are used to modify pose data corresponding to a series of images collected along a certain path. For example,  illustrates an image positioning system  in which an operator adjusts camera pose data for selected images using an interactive visualization that includes satellite imagery, a street map, a topographic map, or another type of a representation of a geographic area. The image positioning system  includes a vehicle trajectory correction system  that automatically modifies the pose data in view of one or more user adjustments.","For clarity, operation of an image positioning system is discussed first with reference to , and example techniques which a vehicle trajectory correction system  may implement are then discussed with reference to .","Image Positioning System","Generally speaking, the image positioning system  provides an interactive visualization that includes one or more pose indicators, such as pictograms, representing poses in the corresponding locations in the geographic area. The interactive visualization is displayed via a user interface that includes a display device and an input device, for example. The operator uses the pose indicators to select one or more poses that appear to be in wrong locations and, when appropriate, moves the selected poses to the locations in the geographic area where the operator believes the corresponding images likely were obtained. For example, the operator may see that a pose indicator representing a pose that is associated with a certain position of a vehicle is rendered over an image of a building, and conclude that the pose is likely incorrect. The operator may then adjust the position of the pose indicator in the interactive visualization so as to place the corresponding pose into a nearby location in a street. In some cases, the operator may also inspect one or more images associated with a certain pose to more accurately determine whether and how the pose should be adjusted. In response to the user adjusting the location of a pose indicator in the interactive visualization, or accepting as valid the currently displayed location of the pose indicator, user modifications data for the corresponding pose may be generated. For example, if the pose includes GPS coordinates, new GPS coordinates corresponding to the updated location to which the operator has moved the pose indicator may be automatically calculated and stored along with the originally reported GPS coordinates for generating a user modification constraint.","According to an example scenario, a camera mounted on a vehicle traveling along a certain path periodically photographs the surrounding area and obtains pose data, such as GPS coordinates, for each photograph. A series of camera poses collected along the path, or a pose run, corresponds to the trajectory of the vehicle. The photographs and the corresponding poses are then uploaded to an image and pose database . The images and poses stored in the pose database  may be used to provide on demand street-level views of geographic regions, for example, or in other applications. However, because GPS coordinates are not always accurate, one or more operators may use the image positioning system  to verify and, when needed, adjust poses of some of the images stored in the database .","To select and adjust one or more poses in a pose run, the operator may use a computing device  that implements a pose correction user interface (UI) component . In general, the pose correction UI component  displays a visualization of a geographic area and a representation of a pose run superimposed on the visualization of the geographic area on a display device. To represent a pose run, the pose correction UI component  may display pose indicators (e.g., graphic symbols such as circles, alphanumeric symbols, images, etc.) at the locations on the map corresponding to the poses and, in an embodiment, also display lines or arrows interconnecting consecutive pose indicators to illustrate the path the camera has travelled. The pose correction UI component  allows the operator to select and reposition the pose by dragging the corresponding pose indicator over to the desired location on the map, for example. In response to the user repositioning one or several pose indicators, the pose correction UI component , or another software component executing in the computing device , forwards the updated pose information to a pose rendering engine  for further processing.","In an embodiment, the pose rendering engine  operates in a front-end server  to which the pose rendering engine  is communicatively coupled via a network . The front-end server  in turn may be communicatively coupled to the image and pose database , one or several back-end servers  in which corresponding instances of a pose correction engine  operate, and a geographic image database  via a communication link . In this embodiment, the computing device  operates as a client device that receives geographic area data, pose data, etc. from the front-end server  and the back-end server . During operation, the pose rendering engine  may report pose corrections received from the pose correction UI component  to the pose correction engine , receive updated pose run data from the pose correction engine , and provide an updated visualization of the geographic area and the pose run to the pose correction UI component . The pose correction engine  may process the pose corrections received from the pose rendering engine  and, when appropriate, update the image and pose database . For example, the pose correction engine  may determine whether a pose correction submitted by an operator is within an allowable range and whether the pose correction conflicts with another pose correction, submitted by another operator at the same time or previously.","Further, in some embodiments, the pose correction engine  along with pose rendering engine  and the image and pose database  operate in the vehicle trajectory correction system  that automatically adjusts one or more poses in a pose run (e.g., poses , , , and ) based on the received corrections to one or more other poses in the same pose run (e.g., poses  and ). Still further, the pose correction engine  may analyze pose data adjusted or accepted by an operator to detect pose trends, such as a consistent \u201cdrift\u201d in the originally stored GPS coordinates, for example. In an embodiment, the pose correction engine  utilizes the detected trends in automatic correction of pose data. For example, the pose correction engine  may then downweight optimization terms corresponding to the reported locations.","In an embodiment, the pose correction UI component  prompts the operator for authentication information (e.g., login and password) prior to granting the operator access to pose data stored in the image and pose database .","In general, the functionality of the pose correction UI component , the pose rendering engine , and the pose correction engine  can be distributed among various devices operating in the image positioning system  in any suitable manner. For example, if desired, both the pose rendering engine  and the pose correction engine  can be implemented in a single device such as the front-end server . As another example, the pose correction UI component , the pose rendering engine , and the pose correction engine  can be implemented in a single computing device such as a PC. As yet another example, the rendering of a geographic area and a pose run mapped onto the geographic area can be implemented in the computing device . In one such embodiment, a browser plug-in is installed in the computing device  to support the necessary rendering functionality. In another embodiment, the pose correction UI component  is provided in a separate application executing on the computing device .","Depending on the implementation, the network  may be the Internet, an intranet, or any other suitable type of a network. The communication link  may be an Ethernet link or another type of a wired or wireless communication link. Further, as discussed in more detail below, the computing device  may be a desktop personal computer (PC), a laptop PC, a tablet PC, a mobile device such as a smartphone, etc.","Next, an example data structure that may be used to store and process image and pose data for use in the image positioning system  is described with reference to , followed by a discussion of the user interface supported by the image positioning system , as well as various features of the image positioning system  accessible via the pose correction UI , with reference to . In particular,  illustrate several example interactive screens that may be displayed on a display device and using which an operator may verify and adjust image pose data.","First referring to , a data structure  may include several pose records , (i.e., pose records -, -, . . . -K). The image and pose database  illustrated in , for example, may store the pose records  on a computer-readable medium. The pose records  may correspond to one or more pose runs , , . . . N, which may include the same number of pose records or different numbers of pose records, depending on the implementation. Each pose record  may include one or more images  and pose data such as location\/positioning data  and a timestamp . For example, the pose records - includes images --, --, and --, which may be photographs taken at the same time from the same point in space using cameras pointing in different directions. The pose records - and -, generated during or following the same pose run, include similar sets of images. On the other hand, the pose record -K includes a single image -K, which may be a panoramic photograph, for example.","In an embodiment, the location data  includes GPS coordinates. In another embodiment, the location data  includes local positioning service (LPS) data such as an identifier of a proximate WiFi hotspot, for example. In general, the location data  can include any suitable indication of a location with which the one or several images  are associated.","The timestamp  stores time data in any suitable manner. For example, the timestamp  may indicate the year, the month, and the day the corresponding images were obtained. In some implementations, the timestamp  may additionally indicate the hour and the minute, for example. The timestamp  in other implementations may indicate a time relative to a certain event, e.g., the time the first photograph in the corresponding pose run is taken, or the timestamp  may be implemented as any other suitable type of a time metric.","Further, in some embodiments, images and poses may be sequentially labeled to simplify a reconstruction of the order in which the images were collected during a pose run. For example, a certain pose record  may include a sequence number (not shown) to indicate the order of each pose record  within a certain run i relative to other pose records  within the same run i. Still further, the pose records  may include pose run identifiers (not shown) to differentiate between the pose runs , , . . . N. Accordingly, in this embodiment, images collected during the same pose run may be assigned the same pose run identifier.","Still further, in an embodiment, the data structure  includes flags (not shown) indicating whether pose data has been verified and\/or adjusted by one or more operators. For example, a binary flag may be set to a first value (e.g., logical \u201ctrue\u201d) if the corresponding pose data has been verified, and to a second value (e.g., logical \u201cfalse\u201d) if the corresponding pose data has not yet been verified. Depending on the implementation, each of the pose records  may include a record-specific flag, or flags may be set on a per-pose-run basis. In another embodiment, flags are implemented in a configuration database that is physically and\/or logically separate from the image and pose database .","Now referring to , the pose correction UI component  may generate an interactive screen  to allow an operator to adjust image positioning data. Depending on the implementation, the interactive screen  may be displayed in a browser application, in a standalone application, or another type of an application. Further, depending on the configuration or the computing environment in which the software displaying the interactive screen  executes, the operator may interact with the interactive screen  using a mouse, a touchpad, a keyboard, a touch screen, a voice input device, or another suitable type of an input device.","In the example illustrated in , the interactive screen  includes a satellite image  of several city blocks, displayed in the background, and a series of pose indicators  (i.e., -, -, . . . -L) displayed in the foreground. In this example, the number of pose indicators L is eleven. In general, however, any number of pose indicators  can be simultaneously displayed in the interactive screen  or a similar interactive screen. The pose indicators -, -, . . . -L are displayed according to the corresponding pose data, e.g., the GPS coordinates stored in the pose data. For example, referring back to , each of the pose indicators -, -, . . . -L may be superimposed on the satellite image  according to the information in the location data field  in the corresponding pose data record . Arrows  interconnect the pose indicator -, -, . . . -L to indicate the order in which the corresponding images were collected. The interactive screen  may also include a zoom scrollbar  and a navigation control  to allow the operator to zoom in and out of certain portions of the displayed satellite image  and adjust the center of the satellite image , respectively. Depending on the implementation, the interactive screen  also may include other controls, such as a compass control to select the orientation of the satellite image , for example.","In another embodiment, arrows similar to the arrows  are used to indicate the orientation of the vehicle at the time when the corresponding image was collected. In yet another embodiment, arrows that indicate the order of the images as well as arrows that indicate the orientation of the vehicle can be displayed in an interactive screen using different styles or colors, for example.","During operation, the operator may select a certain pose run R via an interactive screen (not shown) provided by the pose correction UI component , for example. The selection of the pose run R may be based on the date and time when the pose run R took place, the identity of a vehicle used to conduct the pose run R, the identity of the driver of the vehicle, a description of the geographic region in which the pose run R took place, etc. In response to the operator selecting the pose run R, the pose rendering engine  (see ) or another component may retrieve the pose records  that describe poses in the selected pose run R from the image and pose database , use the location data  in the retrieved pose records  to determine a geographic area with which the pose records  are generally associated, retrieve the satellite image  or another representation of the geographic area, determine where each pose indicator -, -, . . . -L should be displayed relative to the background satellite image , and display each pose indicator -, -, . . . -L in the corresponding location. Depending on the embodiment, pose pictographs -, -, . . . -L are displayed for every pose in the pose run R or only for a subset of the poses in the pose run R. For example, to reduce clutter on the interactive screen , a respective pose pictograph may be displayed only for every n-th (e.g., fifth, tenth) pose in the pose run R. In general, a pose indicator may be an alphanumeric symbol, a non-textual symbol such as a circle or a triangle, a representative icon, a miniaturization of the photograph corresponding to the pose, or any other type of an indicator. In the example of , each pose indicator -, -, . . . -L is a circle.","If pose data includes GPS coordinates, the pose rendering engine  may utilize both the surface positioning data, e.g., the latitude and the longitude, and the altitude data. The pose correction UI component  accordingly may allow the operator to adjust the position of a pose indicator in three dimensions. Alternatively, the pose rendering engine  may utilize only the surface positioning data.","In some embodiments, the pose rendering engine  automatically determines the size and\/or the zoom level of the satellite image  based on the retrieved pose records . To this end, in one embodiment, the pose rendering engine  identifies which of the poses in the pose run R are at the boundaries of an area that encompasses the entire pose run R. For example, if the satellite image  of  is displayed with the common north-at-the-top orientation, the pose corresponding to the pose indicator - is at the western boundary of the pose run R, the pose corresponding to the pose indicator - defines the southern and the eastern boundaries of the pose run, and the pose corresponding to the pose indicator - corresponds to the northern boundary of the pose run. Upon identifying the area that encompasses the entire pose run, the pose rendering engine  may select a geographic area that includes at least the identified area (e.g., the identified area and a certain offset in each of the four cardinal directions). In another embodiment, the pose rendering engine  determines which of the poses in the pose run R is in the most central position relative to the rest of the pose run R, and centers the satellite image  around the most central pose. In yet another embodiment, the pose rendering engine  determines the centroid of the poses in the pose run R and centers the satellite image  around the determined centroid. Further, in yet another embodiment, the pose correction UI component  and\/or the pose rendering engine  allows the user to select the satellite image  prior to selecting the pose run R.","Using a mouse, for example, the operator may point to the pose indicator -, left-click on the pose indicator -, drag the pose indicator - to a new location, and release the left mouse button. Because the pose indicator - appears to be on a sidewalk, the operator may move the pose indicator - to a new location in the street to define a pose indicator -\u2032, as schematically illustrated in  using dashed lines. Thus, in this scenario, the operator primarily relies on visual cues to determine where the pose indicator - should be moved. Moreover, in a scenario that involves collecting images and pose information using a car, the operator typically can assume that a pose indicator displayed in a pedestrian area is incorrect and accordingly requires adjustment.","The pose correction UI component  may automatically adjust the length and\/or the orientation of the arrows  that interconnect the pose indicator -\u2032 with the neighbor pose indicators - and -. Further, the pose correction UI component  may forward the position of the pose indicator -\u2032 in the interactive screen  to the rendering engine . In response, the rendering engine  and\/or the pose correction engine  may determine a physical location (e.g., in terms of GPS coordinates) to which the pose indicator -\u2032 corresponds or, alternatively, determine the amount and the direction of displacement of the pose indicator -\u2032 relative to the pose indicator -. Information indicative of the displacement and\/or the physical location to which the pose indicator -\u2032 corresponds may be stored along with the originally reported GPS coordinates associated with the pose indicator -. However, in some embodiments, the pose correction UI component  forwards the new positions of pose indicators to the rendering engine  only after a certain number of pose indicators (e.g., three, four, five) have been moved. In another embodiment, the pose correction UI component  forwards adjusted or accepted pose data to the rendering engine  after the operator activates a certain control provided on the interactive screen , such as an \u201caccept\u201d or \u201csubmit\u201d button (not shown), for example. Further, in some embodiments, the automatic adjustment of the arrows  may be implemented in the pose rendering engine  or the pose correction engine  rather than, or in addition to, in the pose correction UI component .","In a certain embodiment, the pose correction UI component  imposes a limit on how far the operator may move a selected pose indicator or otherwise restricts the ability of the operator to correct pose data. For example, if the operator attempts to move the pose indicator - beyond a certain distance from the original position of the pose indicator -, the pose correction UI component  may display a pop-up window (not shown) or another type of a notification advising the operator that the operation is not permitted. Depending on the implementation, the operator may or may not be allowed to override the notification. As another example, the operator may attempt to adjust the position of a pose indicator in the interactive screen  so as to modify the order in which the poses appear in the corresponding pose run. Thus, if a modified position of a pose indicator indicates that the corresponding pose now results in different order in the succession of poses, and thus suggests that the vehicle at some point moved in the opposite direction during the pose run, the pose correction UI component  may prevent the modification or at least flag the modification as being potentially erroneous.","Further, in some embodiments, the pose correction UI component  permits operators to mark certain poses for deletion. An operator may decide that certain pose runs should be partially or fully deleted if, for example, images associated with the poses are of a poor quality, or if the operator cannot determine how pose data should be adjusted. Conversely, an operator may decide that none of the poses in a pose run require correction and accept the currently displayed pose run without any modifications.","In some situations, an operator may wish to view the image (or, when available, multiple images) corresponding to a certain pose indicator prior to moving the pose indicator. For example, referring to an interactive screen  illustrated in , the operator may decide that a pose indicator - probably should be moved, but the operator may not be certain how far the pose indicator - should be moved. In other situations, an operator may not be certain regarding the direction in which a pose indicator should be moved, or the operator may not be entirely convinced that a certain pose indicator should be moved at all. To provide better guidance to the operator, the pose correction UI component  may display a set of images  in response to the operator right-clicking on the pose indicator -, for example. In other embodiments, the pose correction UI component  may provide other controls (e.g., interactive icons, commands in a toolbar, etc.) to allow the operator to view images associated with pose indicators.","As discussed above with reference to , a pose may be associated with a single image, such as a panoramic photograph, or several images collected at the same location, typically but not necessarily at the same time. The set of images  in the example of  includes images - and -, each of which corresponds to a different orientation of a camera mounted on a vehicle during the pose run represented by the pose indicators -, -, etc. The user may scroll through the set  and view several photographs to better estimate a new location of the pose indicator -. However, in some situations, the set  includes a single photograph.","Now referring to , it may be desirable that the operator review a pose run relatively quickly, particularly if the operator is responsible for a large number of pose runs, each including numerous poses. Further, it may be desirable to prevent the operator from overcorrecting the pose run to the point where the local trajectory shape is destroyed. To expedite pose correction, the pose correction UI component  may allow the operator to adjust only non-consecutive poses, or poses separated by no less than N intermediate poses. For example, in an interactive screen , pose indicators -, -, and - are adjustable, but the pose indicators - through -, as well as the pose indicators - through -, are not adjustable. Poses that are not adjustable and poses that are adjustable may be represented by different symbols, e.g., circles of two different colors. In an embodiment, the pose correction UI component  and\/or the pose rendering engine  determine whether a particular pose is adjustable based on the proximity of the pose to a pose that is adjustable, so that an operator can adjust only every eighth pose, for example. In various implementation, other factors, such as the minimum spatial separation between two consecutive adjustable poses can be used.",{"@attributes":{"id":"p-0059","num":"0058"},"figref":["FIG. 6","FIG. 3"],"b":["400","20","100","400","404","8","404","9","404","10","404","8","404","9","404","10","404","8","400","20"]},"Although the interactive screens , , and  discussed above utilize satellite imagery to represent a geographic area, the pose rendering engine  and\/or the pose correction UI component  in other embodiments or configurations may render the geographic area as a street map, a topographic map, or any other suitable type of a map. For example,  illustrates an interactive screen  that includes a street map , displayed in the background, and a series of pose indicators , displayed in the foreground. In an embodiment, the operator can switch between a satellite view and a street map view, for example, according to the operator's preference. Generally speaking, the image positioning system  may provide interactive screens, similar to the examples illustrated in , that can be configured according to the desired type (e.g., satellite, schematic, topographic), level of detail, color, amount and type of labeling, etc.","In general, the image positioning UI component , the pose rendering engine  and the pose correction engine  may be implemented on dedicated hosts such as personal computers or servers, in a \u201ccloud computing\u201d environment or another distributed computing environment, or in any other suitable manner. The functionality of these and other components of the image positioning system  may be distributed among any suitable number of hosts in any desired manner. To this end, the image positioning UI component , the pose rendering engine , and the pose correction engine  may be implemented using software, firmware, hardware, or any combination thereof. To illustrate how the techniques of the present disclosure can be implemented by way of more specific examples, several devices that can be used in the image positioning system  are discussed next with reference to . Further, another embodiment of an image positioning system, in which multiple operators may verify and adjust image positions via a crowdsourcing server, is discussed with reference to .","Referring to , a computing device  may be used as the computing device  in the image positioning system , for example. Depending on the embodiment, the computing device  may be a workstation, a PC (a desktop computer, a laptop computer, a tablet PC, etc.), a special-purpose device for verifying and adjusting image positioning data in the image positioning system , a smartphone, etc. The computing device  includes at least one processor , one or several input devices , one or several output devices , and a computer-readable memory . In an embodiment, the processor  is a general-purpose processor. In another embodiment, the processor  includes dedicated circuitry or logic that is permanently configured (e.g., as a special-purpose processor, such as a field programmable gate array (FPGA) or an application-specific integrated circuit (ASIC)) to perform certain operations. The computing device  may utilize any suitable operating system (OS) such as Android\u2122, for example. Depending on the embodiment, the input device  may include, for example, a mouse, a touchpad, a keyboard, a touchscreen, or a voice input device, and the output device  may include a computer monitor, a touchscreen, or another type of a display device.","The memory  may be a persistent storage device that stores several computer program modules executable on the processor . In an embodiment, the memory  may store a user interface module , a browser engine , an image position correction module . During operation of the computing device , the user interface module  supports the interaction between various computer program modules executable on the processor  and the input device  as well as the output device . In an embodiment, the user interface module  is provided as a component of the OS of the computing device . Similarly, the browser engine  may be provided as a component of the OS or, in another embodiment, as a portion of a browser application executable on the processor . The browser engine  may support one or several communication schemes, such as TCP\/IP and HTTP(S), required to provide communications between the computing device  and another device, e.g., a network host.","With continued reference to , the image position correction module  implements at least a portion of the functionality of the pose correction UI component . Depending on the embodiment, the image position correction module  may be a plugin compatible with a browser application that utilizes the browser engine , or a standalone application that interacts with the browser engine  to communicate with other devices, for example. In operation, the image position correction module  may utilize the user interface  receive and process operator commands and provide interactive screens similar to those illustrated in  to the operator.",{"@attributes":{"id":"p-0065","num":"0064"},"figref":"FIG. 9","b":["650","652","654","650","652","650","652","650","652","650","652","650","652","652","650"]},"The front-end server  may execute a pose processing module  and a map processing module  to retrieve, render, and position foreground pose data and background map data, respectively. Referring back to , the modules  and  may be components of the pose rendering engine . The back-end server  may include a pose correction engine . In an embodiment, the pose correction engine  operates as the pose correction engine . Further, in some embodiments, the back-end server  includes a pose subsampling module  that may be configured to subsample pose data from 100 Hz to 1 Hz or less, for example. Still further, in an embodiment, the back-end server  includes a pose supersampling module  that may be configured to generate a fuller set of poses (e.g., corresponding to the 100 Hz rate) based on a sparse set of poses (e.g., corresponding to the 1 Hz rate or less). The pose correction engine  also may include a pose database, such as the image and pose database  illustrated in , for example, as a component. In other embodiments, the back-end server  may communicate with a pose database implemented in a separate device.","Now referring to , an example image positioning system  includes several computing devices -, -, and -, each of which implements a pose correction UI component , a front-end server  that implements a pose rendering engine , a back-end server  that implements a pose correction engine , an image and pose database , and a geographic image database . A crowdsourcing server  is coupled to the computing devices -, -, and - and the servers  and  via a network  to allow a greater number of human operators to participate in verification and correction of pose data.","In general, the crowdsourcing server  uses human operators to verify and, when necessary, correct image positioning in the image positioning system . The crowdsourcing server  receives human intelligence tasks (HITs) to be completed by operators using the computing devices -, -, and -. In particular, the HITs specify pose runs stored in the image and pose database  that require verification correction. The crowdsourcing server  may support one or several application programming interface functions (APIs) to allow a requestor, such as an administrator responsible for the image and pose database , to specify how a HIT is to be completed. For example, the HIT may automatically link an operator that uses the computing devices - to a site from which the necessary plugin or application (e.g., the image position correction module  of ) can be downloaded, specify which pose runs are available for verification, and list various other conditions for completing a pose run verification task. In an embodiment, the crowdsourcing server  receives a HIT that specifies multiple pose runs, automatically distributes the pose runs among several computing devices, and manages the status of the tasks assigned to the computing devices. Further, according to an embodiment, the crowdsourcing server  receives pose data corresponding to one or several pose runs for each HIT. For example, the back-end server  may retrieve a set of pose data records from the image and pose database , forward the retrieved set to the crowdsourcing server  and, upon completion of the corresponding task at the crowdsourcing server , receive the updated set of pose data from the crowdsourcing server . The back-end server  may then update the image and pose database .","Further, the crowdsourcing server , alone or in cooperation with the servers  and , may automatically determine whether particular operators are qualified for pose run verification. For example, when a candidate operator requests that a certain pose verification task be assigned to her, a component in the image positioning system  may request that the operator provide her residence information (e.g., city and state in which she lives), compare the geographic area with which the pose run is associated to the candidate operator's residence information, and determine whether the operator is likely to be familiar with the geographic area. Additionally or alternatively, the image positioning system  may check the candidate operator's age, his prior experience completing image positioning tasks, etc. The back-end server  or another component of the image positioning system  may periodically poll the crowdsourcing server  to determine which HITs are completed. In an embodiment, the crowdsourcing server  operates as a component in the Mechanical Turk system from Amazon.com, Inc.","Several example methods that may be implemented by the components discussed above are discussed next with reference to . As one example, the methods of  may be implemented as computer programs stored on the tangible, non-transitory computer-readable medium (such as one or several hard disk drives) and executable on one or several processors. Although the methods of  can be executed on individual computers, such as servers or PCs, it is also possible to implement at least some of these methods in a distributed manner using several computers, e.g., using a cloud computing environment.",{"@attributes":{"id":"p-0071","num":"0070"},"figref":["FIG. 11","FIG. 1"],"b":["800","800","20","14","702","1","702","2","702","3","20","704","800","802","22","712","20","704","20","704"]},"At block , visual pose indications are rendered in the interactive screen over the map or other visual representation of the geographic area generated at block . For example, pose indications may be pose indicators that are superimposed on the map in accordance with the corresponding location data. The pose indicators may define an upper layer in the interactive visualization, and the map may define a lower layer in the interactive visualization. In this manner, the pose correction UI component  or  can easily re-render pose indicators in response to operator commands while keeping the background map image static. In some embodiments, the pose rendering engine  or  generates the pose indicators as a raster image, forwards the raster image to the pose correction UI component  or , and the pose correction UI component  or  renders the raster image on the display. In one such embodiment, the pose rendering engine  or  generates a raster image that includes both the map data and the pose indicators. In another embodiment, the pose correction UI component  or  receives a map image from the pose rendering engine  or , superimposes pose indicators onto the received map image, and renders the resulting image on the display.","At block , pose corrections (or adjustments) are received from the operator. For example, the operator may use a pointing device, such as a mouse or a touchpad, to select a pose indicator and move the pose indicator to a new position in the interactive screen. The operating system may process several events received from the pointing device and forward the processed events to the pose correction UI component  or . If needed, the operator may adjust multiple poses at block . Next, at block , pose data is updated in accordance with the adjusted positions of the corresponding pose indicators. According to an embodiment, the operator activates a control in the interactive screen (e.g., a \u201csubmit\u201d button) to trigger an update of the appropriate records in the image and pose database  or . In another embodiment, the image and pose database  or  is updated after the operator adjusts a certain number of poses. In yet another embodiment, the image and pose database  or  is updated periodically, e.g., once every two minutes. Once pose data is updated at block , the flow returns to block , unless the operator terminates the method .",{"@attributes":{"id":"p-0074","num":"0073"},"figref":["FIG. 12","FIG. 11"],"b":["830","800","712","20","704","712","20","704","800","806"]},"At block , an adjusted pose, e.g., a new position of a pose indicator in an interactive screen, is received from an operator via an interactive screen. In response, at block , the pose correction UI component  or  may disable pose correction for N (e.g., five, ten) subsequent poses to prevent the operator from attempting to move every pose that appears to be incorrect. The poses for which correction is disabled may be selected along the direction in which the corresponding pose run progresses or along both directions, depending on the implementation. In an embodiment, the number N is configurable. To indicate that the N poses subsequent or adjacent to the adjusted pose cannot be modified, the corresponding pose indicators may be rendered using a different color, a different pictogram or symbol, or in any other manner. At block , a pose indicator corresponding to the adjusted pose, as well as pose indicators corresponding to the poses for which correction is disabled, are rendered in the appropriate positions in the interactive screen.",{"@attributes":{"id":"p-0076","num":"0075"},"figref":["FIG. 13","FIG. 10"],"b":["850","714","852","854","856","720"]},"Vehicle Trajectory Correction System","Referring back to , in an embodiment, the pose correction engine  operates the in the vehicle trajectory correction system  to automatically modify pose data in view of one or several user modifications so as to develop a corrected trajectory that agrees, as much as possible, with the user modifications, which may be expressed as an optimization constraint, and one or more other constraints. An example of a pose correction engine, that may operate as the pose correction engine  or , is discussed below with reference to . First, however, certain principles that apply to correcting a vehicle trajectory according to the techniques of the present disclosure are generally discussed with reference to .",{"@attributes":{"id":"p-0078","num":"0077"},"figref":["FIG. 14","FIG. 14"],"b":["900","900"],"sub":["1","2","N","i ","i ","i","i ","i"]},"The set of pose samples S may be generated by sub-sampling pose data associated with a pose run. For example, pose data P for a pose run R may include pose samples collected at ten-millisecond intervals. To reduce the number of pose samples to which an optimization technique is applied, the pose data P may be sub-sampled at the rate of 1\/1,000, to consider just one example, to generate the sub-sampled set S. After the trajectory  corresponding to the set S is modified, the changes may be automatically propagated to the rest of pose data P.","Typically, most of the inaccuracies in the approximate trajectory  are due to GPS errors. As discussed above, GPS is often unreliable. On the other hand, IMU and wheel odometry data usually provides reliable and accurate data. As a result, locally, the approximate trajectory  may have a mostly constant shift relative to the actual trajectory of the vehicle. The approximate trajectory  thus may be inaccurate in absolute terms. The shape of the trajectory , however, is likely to be mostly accurate due to the contribution of reliable relative positioning data.","An operator may modify the pose sample susing the interactive interface discussed above with reference to , for example. In the example of , the operator assigns a new location cto the pose sample sand a new location cto the pose sample s. According to some embodiments, the operator modifies the location of the vehicle corresponding to the pose sample sor sin only two dimensions, i.e., on a plane. Further, to make vehicle trajectory correction more efficient, the operator is not permitted to modify the orientation of the vehicle for any of the pose samples, according to an embodiment. However, the vehicle trajectory correction system  or a similar system in some cases may automatically adjust the originally reported orientation reading {tilde over (q)}in view of the operator-assigned location cand one or several adjacent pose samples, as discussed below.","In other embodiments, the operator may be permitted to modify the location of a vehicle for a particular sample in all three dimensions. To this end, the pose correction user interface  or a similar interface may render pose indicators, some of which may be moveable, over a three-dimensional representation of a geographic area.","A pose correction engine or a similar component may generate an optimal set of pose samples X={x, x, . . . , x} that satisfies, as much as possible, a set of constraints C for the N pose samples being optimized. Each pose sample xin the set X indicates a location pof the vehicle in the three-dimensional coordinate system and an orientation qof the vehicle in the three-dimensional coordinate system. In an embodiment, the location pcorresponds to a set of GPS coordinates. In another embodiment, the location pis derived from a set of GPS coordinates, IMU data, and wheel odometry data. The orientation qmay be represented using a set of roll, pitch, and yaw angles, a Rodrigues rotation vector, or a quaternion, for example. In the example embodiments discussed herein, a pose sample xrepresents a transformation of a point pin a local frame of reference L of the vehicle to a point pin the global frame of reference G, and is given by:\n\n()\u00b7\u2003\u2003(Eq. 1)\n\nwhere R(q) is a three-by-three rotation matrix for the quaternion q. However, in other embodiments, a pose sample xmay correspond to other coordinates that may be local, global, relative, etc.\n","The set of constraints C may be expressed through optimization terms having different strengths. In an embodiment, each optimization term is an energy function that enforces the corresponding constraint, and can be expressed as:\n\n=\u0192(())\u2003\u2003(Eq. 2)\n\nwhere S(x) is a subset of the pose samples, and \u0192(S(x)) is a function that defines energy penalty over S(x). Pose samples that violate the constraint T contribute to high energy. The total amount of energy associated with a certain solution may be defined as a sum of the energies contributed by all terms T. Accordingly, the optimal set of pose samples X has the lowest possible total amount of energy due to all terms T corresponding to the set of constraints C.\n","In some embodiments, a vehicle trajectory correction system identifies the actual optimal solution for a set of constraints C. In other embodiments, the vehicle trajectory correction system finds a near-optimal solution, e.g., a solution associated with a total amount of energy that is below a certain threshold value but is not necessarily the optimal solution, so as to reduce the amount of computation and thereby improve user experience. Further, according to some embodiments, a set of pose samples being optimized corresponds to only a sub-set of pose samples defining a certain vehicle trajectory. For example, the set of pose samples being optimized may be generated by sub-sampling the original pose data. In general, according to the techniques of the present disclosure, a set of pose samples X that satisfies the set of constraints C may provide a satisfactory solution to the optimization problem, and may be referred to as being \u201coptimal,\u201d even though a better solution to the optimization problem potentially may exist.","In an embodiment, the optimization terms include a location term that constrains the difference between the reported location (or a component of the reported location) and the automatically generated corrected location for a particular pose sample. More specifically, the location term may represent a location constraint that seeks to preserve the reported location of the vehicle. For example, in an embodiment, the location term is a GPS term. Because GPS typically is associated with a large margin of error, especially in urban canyons, the GPS term may be relatively weak. In other words, the vehicle trajectory correction system may aggressively modify GPS data in pose samples to accommodate other optimization constraints. The GPS term may be a singleton term that is computed over a single pose sample. In an embodiment, the GPS term is given by:\n\n()=()\u03a3()\u2003\u2003(Eq. 3)\n\nwhere gis a reported GPS reading associated with the pose sample x, and where \u03a3is a three-by-three covariance matrix that determines the strength of the term T(which may be relatively low, as indicated above).\n","Further, to robusify the GPS term, the function T(x) in some embodiments is replaced with a function of the form \u03c1(T(x)), where \u03c1 is a Cauchy robust function, Huber robust function, or another suitable robust function. In this manner, GPS outlier readings may be efficiently addressed (e.g., suppressed).","In an embodiment, the optimization terms also include a user correction or modification term that constrains the difference between user modifications and automatically generated corrections for certain pose samples. The user modification term may be a relatively strong term representing a user modification constraint that preserves, to the extent possible, a user modification of a pose sample. In other words, the vehicle trajectory correction system may strongly enforce user modifications relative to other constraints. The user modification term may be expressed as:\n\n()=()\u03a3()\u2003\u2003(Eq. 4))\n\nwhere cis a user-assigned location for a pose sample x. The term T(x) is generally similar to the term T, but the values on the diagonal of the covariance matrix \u03a3are smaller relative to the corresponding values in the matrix \u03a3so as to make the term T(x) stronger than the term T(x). Further, in those embodiments where the operator is limited to modifying pose data in two dimensions only, the z-dimension penalty may be smaller, so that \u03a3(0,0)<\u03a3(2,2), and \u03a3(1,1)<\u03a3(2,2).\n","The optimization terms also may include a relative translation term T(x,x) representing a relative translation constraint that seeks to preserve a relationship between positions of a vehicle corresponding to a pair of pose samples xand x, relative to the originally reported pose samples {tilde over (x)}and {tilde over (x)}. In other words, the relative translation constraint preserves a relative position and orientation between a pair of poses. With continued reference to , the approximate trajectory  may be analogized to a string, in which case the relative translation term T(x,x) prevents excessive deformation or stretching of the string. In an embodiment, the use of the relative translation term T(x,x) allows not using explicit accelerometer, gyrometer, and wheel odometer in vehicle trajectory optimization. In particular, because the pair of pose samples {tilde over (x)}and {tilde over (x)}were obtained using at least some of accelerometer, gyrometer, and wheel odometer data, the pose samples {tilde over (x)}and {tilde over (x)}usually can be assumed to accurately reflect the relative positioning of the vehicle at the corresponding locations. In an embodiment, the original relative orientation term \u0394can be computed as follows:\n\n\u0394()()\u2003\u2003(Eq. 5)\n\nwhere R(q) is a three-by-three rotation matrix corresponding to the quaternion q. The relative translation term T(x,x) is then given by:\n",{"@attributes":{"id":"p-0090","num":"0089"},"maths":{"@attributes":{"id":"MATH-US-00001","num":"00001"},"math":{"@attributes":{"overflow":"scroll"},"mtable":{"mtr":{"mtd":[{"mrow":{"mrow":{"mrow":[{"msub":{"mi":["T","RT"]},"mo":"\u2061","mrow":{"mo":["(",")"],"mrow":{"msub":[{"mi":["x","i"]},{"mi":["x","j"]}],"mo":","}}},{"mfrac":{"mn":"1","msubsup":{"mi":["\u03c3","RT"],"mn":"2"}},"mo":"\u2062","msup":{"mrow":{"mo":["\uf605","\uf606"],"mrow":{"mrow":{"msup":{"mrow":{"mi":"R","mo":"\u2061","mrow":{"mo":["(",")"],"msub":{"mi":["q","i"]}}},"mi":"T"},"mo":"\u2062","mrow":{"mo":["(",")"],"mrow":{"msub":[{"mi":["p","j"]},{"mi":["p","i"]}],"mo":"-"}}},"mo":"-","msub":{"mi":"\u0394","mrow":{"mi":["i","j"],"mo":","}}}},"mn":"2"}}],"mo":"="},"mo":","}},{"mrow":{"mo":["(",")"],"mrow":{"mi":"Eq","mo":[".","\u2062"],"mstyle":{"mspace":{"@attributes":{"width":"0.8em","height":"0.8ex"}}},"mn":"6"}}}]}}}},"br":{},"sub":["RT","RT","i","j","i","i","RT","i","j","i ","j "],"sup":"2 "},"Further, the optimization terms may include a relative rotation term T(x,x) representing a constraint that seeks to preserve a relationship between orientations of a vehicle corresponding to a pair of pose samples xand x, relative to the originally reported pose samples {tilde over (x)}and {tilde over (x)}. To continue with the analogy of a string introduced above, the relative rotation term T(x,x) prevents the string from excessive twisting, similar to the relative translation term T(x,x) preventing the string from excessive stretching. In an embodiment, the original relative orientation \u03a9can be expressed as:\n\n\u03a9\u2003\u2003(Eq. 7)\n\nand the relative rotation term T(x,x) can be expressed as\n",{"@attributes":{"id":"p-0092","num":"0091"},"maths":{"@attributes":{"id":"MATH-US-00002","num":"00002"},"math":{"@attributes":{"overflow":"scroll"},"mtable":{"mtr":{"mtd":[{"mrow":{"mrow":{"mrow":[{"msub":{"mi":["T","RR"]},"mo":"\u2061","mrow":{"mo":["(",")"],"mrow":{"msub":[{"mi":["x","i"]},{"mi":["x","j"]}],"mo":","}}},{"mfrac":{"mn":"1","msubsup":{"mi":["\u03c3","RR"],"mn":"2"}},"mo":"\u2062","msup":{"mrow":{"mo":["\uf605","\uf606"],"mrow":{"mrow":{"mi":"Norm","mo":"\u2061","mrow":{"mo":["(",")"],"mrow":{"msub":[{"mi":"\u03a9","mrow":{"mi":["i","j"],"mo":","}},{"mi":["q","i"]}],"mo":["\u00b7","\u00b7"],"msubsup":{"mi":["q","j"],"mrow":{"mo":"-","mn":"1"}}}}},"mo":"-","msup":{"mrow":{"mo":["[","]"],"mrow":{"mn":["1","0","0","0"],"mo":["\u2062","\u2062","\u2062","\u2062","\u2062","\u2062"],"mstyle":[{"mspace":{"@attributes":{"width":"0.8em","height":"0.8ex"}}},{"mspace":{"@attributes":{"width":"0.8em","height":"0.8ex"}}},{"mspace":{"@attributes":{"width":"0.8em","height":"0.8ex"}}}]}},"mi":"T"}}},"mn":"2"}}],"mo":"="},"mo":","}},{"mrow":{"mo":["(",")"],"mrow":{"mi":"Eq","mo":[".","\u2062"],"mstyle":{"mspace":{"@attributes":{"width":"0.8em","height":"0.8ex"}}},"mn":"8"}}}]}}}},"br":{},"sub":["RR","RR","i","j"],"sup":"2 "},"Still further, the optimization terms may include a gravity preservation term representing a constraint that preserves, to the extent possible, the direction of the gravity force in a local coordinate system of the vehicle for one or several pose samples. In the local coordinate system of the vehicle, the original gravity direction vector may be expressed as:\n\n\u03b3()\u00b7[0 0 1]\u2003\u2003(Eq. 9)\n\nand the gravity preservation term T(x) may be expressed as:\n",{"@attributes":{"id":"p-0094","num":"0093"},"maths":{"@attributes":{"id":"MATH-US-00003","num":"00003"},"math":{"@attributes":{"overflow":"scroll"},"mtable":{"mtr":{"mtd":[{"mrow":{"mrow":[{"msub":{"mi":["T","G"]},"mo":"\u2061","mrow":{"mo":["(",")"],"msub":{"mi":["x","i"]}}},{"mfrac":{"mn":"1","msubsup":{"mi":["\u03c3","G"],"mn":"2"}},"mo":"\u2062","msup":{"mrow":{"mo":["\uf605","\uf606"],"mrow":{"mrow":{"msup":[{"mrow":{"mi":"R","mo":"\u2061","mrow":{"mo":["(",")"],"msub":{"mi":["q","i"]}}},"mi":"T"},{"mrow":{"mo":["[","]"],"mrow":{"mn":["0","0","1"],"mo":["\u2062","\u2062","\u2062","\u2062"],"mstyle":[{"mspace":{"@attributes":{"width":"0.8em","height":"0.8ex"}}},{"mspace":{"@attributes":{"width":"0.8em","height":"0.8ex"}}}]}},"mi":"T"}],"mo":"*"},"mo":"-","msub":{"mi":["\u03b3","i"]}}},"mn":"2"}}],"mo":"="}},{"mrow":{"mo":["(",")"],"mrow":{"mi":"Eq","mo":[".","\u2062"],"mstyle":{"mspace":{"@attributes":{"width":"0.8em","height":"0.8ex"}}},"mn":"10"}}}]}}}},"br":{},"sub":["G","G","i","i","i"],"sup":"2 "},"In an at least some of the embodiments, the parameter \u03c3differs from the parameter \u03c3to enable trade-offs between twisting and stretching of the approximate trajectory . For example, the parameters \u03c3and \u03c3may selected so that during correction, the approximate trajectory  \u201cresists\u201d twisting more than stretching. It is also noted that in other embodiments, optimization terms other than the terms T(x,x), T(x,x), and T(x) may be used to preserve the shape of the approximate trajectory  (or certain portions of the trajectory ).","Referring to , some or all of the optimization terms T(x), T(x), T(x,x), T(x,x), and T(x) discussed above may be used in an optimization scheme to modify the pose samples in the trajectory  in order to generate an optimal set of pose samples X corresponding to a corrected trajectory . In an embodiment, a local search optimization technique, such as a non-linear least-squares solution based on an iterative Levenberg-Marquardt algorithm, is used.","In the example of , the corrected trajectory  and the original approximate trajectory  appear to be separated by a constant or nearly constant offset. In those embodiments where an operator has a selection of two or maps over which pose indicators are displayed, the operator may be provided with an option to select the map that best agrees with the corrected trajectory . Further, in an embodiment, the offset between the trajectories  and  may be automatically computed and used in future trajectory adjustments or map alignment. For example, a certain map may have a constant or nearly constant position offset for a relatively large area, and the detected drift may be used to better align pose indicators or other data with the map.",{"@attributes":{"id":"p-0098","num":"0097"},"figref":["FIG. 16","FIG. 1"],"b":["950","11","950","952","954","960","954","962","964","966","968","970","960","950","980"]},"Referring back to , for example, the pose correction engine  implemented in the back-end server  may use the front-end interface  to receive operator modifications to pose data from the front-end server  that, in turn, communicates with the pose correction user interface . The pose data cache  may store a set of pose samples which the front-end server  also provides to a user via the front-end interface , according to an embodiment. In this manner, the front-end server  may efficiently forward only those pose samples to the pose correction engine  that the user has modified (rather than an entire set of pose samples provided to the user). Each of the front-end server  and the back-end server  in this implementation may maintain the same or, at least, overlapping sets of pose samples in respective memory modules, and the vehicle trajectory correction system in which the servers  and  operate quickly and efficiently corrects vehicle trajectories without frequently transmitting large sets of data between network devices. Further, in at least some of the implementations of the interactive user interface, the set of pose samples provided to the user is a sub-sampled portion of the complete original pose data. As discussed above, pose indicators may be displayed for pose samples that are separated by no less than a certain number of meters (e.g., ten), and only some of the pose indicators displayed on the user interface are moveable in response to an operator command. Accordingly, in an embodiment, the pose correction engine  receives only the sub-sampled portion of the pose data via the front-end interface .","According to another embodiment, the pose correction engine  generates a version of the pose data provided to the front-end interface  by sub-sampling the same original pose data according to the same sampling scheme. For example, to apply trajectory corrections to the rest of the pose data, the sub-sampling module  may be coupled to a database that stores complete pose data, such as the image and pose database  illustrated in . The pose correction engine  accordingly may receive the complete pose data from the image and pose database  via the sub-sampling module . In an embodiment, the sub-sampling module  utilizes the front-end interface  to communicate with image and pose database  and\/or other network devices.","With continued reference to , the optimizer module  may implement a non-linear least-squares optimization scheme, for example, using one, several, or all of the terms generated by the components , , , , and . In an embodiment, the GPS term optimizer  generates a location term according to Eq. 3, the user modification term generator  generates a user modification term according to Eq. 4, the relative translation term generator  generates a relative translation according to Eq. 6, the relative rotation term generator  generates a relative rotation term according to Eq. 8, and the gravity direction preservation term  generates a gravity preservation term according to Eq. 10, for example. As further illustrated in , each of the components , , , , and  may be configurable with a respective constraint strength factor S, S, S, S, or S. The output of the optimizer module  is coupled to the pose data cache , from which corrected pose data may be transferred to a database such as the image and pose database  of , for example.",{"@attributes":{"id":"p-0102","num":"0101"},"figref":["FIG. 17","FIG. 16"],"b":["1000","100","950","1002"]},"At block , several terms corresponding to the respective optimization constraints are generated. For example, in an embodiment, a location term that constrains trajectory corrections in view of the originally reported locations, and a user modification term that constrains trajectory corrections in view of the pose modification data received at block , are generated. As discussed above, additional terms that limit stretching and twisting of the approximate trajectory based on the original pose data, for example, also can be used.","Next, at block , pose data that includes one or more samples not modified by the operator, is adjusted to generate a corrected trajectory of the vehicle using the terms generated at block . In some cases, a pose sample modified by an operator is further modified in view of these terms. However, because the user modification term corresponds to a strong constraint, user modifications have a significant impact on the corrected vehicle trajectory. Further, in some cases, a single modification of a pose sample by an operator will affect the location and orientation data in multiple pose samples associated with the same pose run.","Once the pose data is modified at block , the changes may be provided to the operator for confirmation and\/or additional modifications. Further, in an embodiment, the pose data modified at block  is stored in the image and pose database .","In at least some of the embodiments, pose data that includes pose samples modified at blocks  and  is a sub-sampled version of the original pose data collected during a pose run. Referring to , an example method  for correcting pose samples using a sub-sample set of the pose samples may be implemented in the pose correction engine  or one or more other components of the corresponding vehicle trajectory correction system.","At block , source pose data associated with a pose run is sub-sampled so as to generate a set of pose samples reduced by a factor of 1,000, for example. In an embodiment, pose data is sub-sampled so that for each pose same in the reduced set of pose samples, an image is available in the image and pose database  or a similar database. Thus, each pose sample that an operator may potentially modify has an associated image for an operator to verify, if desired, prior to adjusting the position of the corresponding pose indicator.","The reduced set of pose samples may be cached at the pose correction engine  and provided to a front-end server at the same time. The front-end server in turn may provide some or all of the pose samples in the reduced set to an interactive user interface for user modifications. According to an embodiment, the front-end server further sub-samples the reduced set prior to providing the pose samples to the operator.","At block , the reduced set of pose samples is modified in accordance with the method , for example. Next, at block , the changes to the reduced set of samples are applied to the source pose data (i.e., the high-resolution pose data). To this end, a suitable optimization technique may be used. For example, according to one such technique, the intermediate pose samples included between two pose samples in the reduced set are modified by equally distributing the necessary changes among the intermediate pose samples so as to agree with the modifications at the endpoints. More specifically, if the y-component of the location indicated in one of the pose samples xin the reduced set of pose samples changes by an amount d relative to an adjacent pose sample xin the reduced set, the amount d may be distributed among n pose samples in the source pose data that are included between the pose samples xand x, and y-component of the location in each of the n pose samples may be adjusted by d\/n.","In other embodiments, other algorithms or variations of the algorithm discussed above may be used at block , including those that take into consideration additional factors (such as the speed of the vehicle at the locations corresponding to the pose samples xand x). For example, in an embodiment, the rotational residual is distributed first across the pose samples included the high-resolution pose data, followed by the distribution of location residuals. Further, one or more residuals may be distributed in proportion to the speed of the vehicle, so that pose samples corresponding to instances of time at which the vehicle moves faster are modified more than pose samples corresponding to instances of time at which the vehicle moves slower.","Several examples herein discussed correcting a trajectory of a vehicle. However, it will be understood that the trajectory-correction techniques of the present disclosure are not limited to use only with trajectory data representing movement of one or more vehicles. More generally, the location of a device can be tracked, with its trajectory subsequently corrected, regardless of how the device is moved about.","Additional Considerations","The following additional considerations apply to the foregoing discussion. Throughout this specification, plural instances may implement components, operations, or structures described as a single instance. Although individual operations of one or more methods are illustrated and described as separate operations, one or more of the individual operations may be performed concurrently, and nothing requires that the operations be performed in the order illustrated. Structures and functionality presented as separate components in example configurations may be implemented as a combined structure or component. Similarly, structures and functionality presented as a single component may be implemented as separate components. These and other variations, modifications, additions, and improvements fall within the scope of the subject matter herein.","Certain embodiments are described herein as including logic or a number of components, modules, or mechanisms. Modules may constitute either software modules (e.g., code embodied on a machine-readable medium or in a transmission signal) or hardware modules. A hardware module is tangible unit capable of performing certain operations and may be configured or arranged in a certain manner. In example embodiments, one or more computer systems (e.g., a standalone, client or server computer system) or one or more hardware modules of a computer system (e.g., a processor or a group of processors) may be configured by software (e.g., an application or application portion) as a hardware module that operates to perform certain operations as described herein.","Unless specifically stated otherwise, discussions herein using words such as \u201cprocessing,\u201d \u201ccomputing,\u201d \u201ccalculating,\u201d \u201cdetermining,\u201d \u201cpresenting,\u201d \u201cdisplaying,\u201d or the like may refer to actions or processes of a machine (e.g., a computer) that manipulates or transforms data represented as physical (e.g., electronic, magnetic, or optical) quantities within one or more memories (e.g., volatile memory, non-volatile memory, or a combination thereof), registers, or other machine components that receive, store, transmit, or display information.","As used herein any reference to \u201cone embodiment\u201d or \u201can embodiment\u201d means that a particular element, feature, structure, or characteristic described in connection with the embodiment is included in at least one embodiment. The appearances of the phrase \u201cin one embodiment\u201d in various places in the specification are not necessarily all referring to the same embodiment.","Some embodiments may be described using the expression \u201ccoupled\u201d and \u201cconnected\u201d along with their derivatives. For example, some embodiments may be described using the term \u201ccoupled\u201d to indicate that two or more elements are in direct physical or electrical contact. The term \u201ccoupled,\u201d however, may also mean that two or more elements are not in direct contact with each other, but yet still co-operate or interact with each other. The embodiments are not limited in this context.","As used herein, the terms \u201ccomprises,\u201d \u201ccomprising,\u201d \u201cincludes,\u201d \u201cincluding,\u201d \u201chas,\u201d \u201chaving\u201d or any other variation thereof, are intended to cover a non-exclusive inclusion. For example, a process, method, article, or apparatus that comprises a list of elements is not necessarily limited to only those elements but may include other elements not expressly listed or inherent to such process, method, article, or apparatus. Further, unless expressly stated to the contrary, \u201cor\u201d refers to an inclusive or and not to an exclusive or. For example, a condition A or B is satisfied by any one of the following: A is true (or present) and B is false (or not present), A is false (or not present) and B is true (or present), and both A and B are true (or present).","In addition, use of the \u201ca\u201d or \u201can\u201d are employed to describe elements and components of the embodiments herein. This is done merely for convenience and to give a general sense of the invention. This description should be read to include one or at least one and the singular also includes the plural unless it is obvious that it is meant otherwise.","Upon reading this disclosure, those of ordinary skill in the art will appreciate still additional alternative structural and functional designs for a system and a process for correcting pose image data through the disclosed principles herein. Thus, while particular embodiments and applications have been illustrated and described, it is to be understood that the disclosed embodiments are not limited to the precise construction and components disclosed herein. Various modifications, changes and variations, which will be apparent to those skilled in the art, may be made in the arrangement, operation and details of the method and apparatus disclosed herein without departing from the spirit and scope defined in the appended claims."],"BRFSUM":[{},{}],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"BRIEF DESCRIPTION OF THE DRAWINGS","p":[{"@attributes":{"id":"p-0010","num":"0009"},"figref":"FIG. 1"},{"@attributes":{"id":"p-0011","num":"0010"},"figref":["FIG. 2","FIG. 1"]},{"@attributes":{"id":"p-0012","num":"0011"},"figref":"FIG. 3"},{"@attributes":{"id":"p-0013","num":"0012"},"figref":"FIG. 4"},{"@attributes":{"id":"p-0014","num":"0013"},"figref":"FIG. 5"},{"@attributes":{"id":"p-0015","num":"0014"},"figref":"FIG. 6"},{"@attributes":{"id":"p-0016","num":"0015"},"figref":"FIG. 7"},{"@attributes":{"id":"p-0017","num":"0016"},"figref":["FIG. 8","FIG. 1"]},{"@attributes":{"id":"p-0018","num":"0017"},"figref":["FIG. 9","FIG. 1"]},{"@attributes":{"id":"p-0019","num":"0018"},"figref":"FIG. 10"},{"@attributes":{"id":"p-0020","num":"0019"},"figref":"FIG. 11"},{"@attributes":{"id":"p-0021","num":"0020"},"figref":"FIG. 12"},{"@attributes":{"id":"p-0022","num":"0021"},"figref":"FIG. 13"},{"@attributes":{"id":"p-0023","num":"0022"},"figref":"FIG. 14"},{"@attributes":{"id":"p-0024","num":"0023"},"figref":["FIG. 15","FIG. 14"]},{"@attributes":{"id":"p-0025","num":"0024"},"figref":"FIG. 16"},{"@attributes":{"id":"p-0026","num":"0025"},"figref":"FIG. 17"},{"@attributes":{"id":"p-0027","num":"0026"},"figref":"FIG. 18"}]},"DETDESC":[{},{}]}
