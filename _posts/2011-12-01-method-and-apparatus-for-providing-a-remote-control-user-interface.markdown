---
title: Method and apparatus for providing a remote control user interface
abstract: A method and an apparatus are provided for providing a remote User Interface (UI) to a terminal in a remote UI system. The method includes downloading, by the first terminal, an application from a remote server; driving the application; requesting a new application from the remote server; receiving the new application from the remote server; driving the new application; requesting a second terminal to a change the control UI according to the new application; receiving a message requesting a new control UI for controlling the new application from the second terminal; and providing the new control UI for controlling the new application to the second terminal in response to the message.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09405557&OS=09405557&RS=09405557
owner: Samsung Electronics Co., Ltd
number: 09405557
owner_city: 
owner_country: KR
publication_date: 20111201
---

{"@attributes":{"id":"description"},"BRFSUM":[{},{}],"heading":["PRIORITY","BACKGROUND OF THE INVENTION","SUMMARY OF THE INVENTION","DETAILED DESCRIPTION OF THE EMBODIMENTS OF THE INVENTION"],"p":["This application claims priority under 35 U.S.C. \u00a7119(a) to Korean Application Serial No. 10-2010-0121902, which was filed in the Korean Industrial Property Office on Dec. 2, 2010, the entire content of which is hereby incorporated by reference.","1. Field of the Invention","The present invention relates generally to a remote User Interface (UI) system, and more particularly, to a method and an apparatus for providing a remote UI to a terminal in the remote UI system.","2. Description of the Related Art","Research for enhancing home network technology has been actively advanced by many industry standard organizations, such as Digital Living Network Alliance (DLNA), Home Audio-Video Interoperability (HAVi), Universal Plug and Play (UPnP), etc.","Among this home network technology, Remote UI (RUI) technology may be used by an apparatus to control a function of another apparatus in a home network. RUI technology is based on client-server architecture, in which a user may control an RUI server through a UI of an RUI client.",{"@attributes":{"id":"p-0008","num":"0007"},"figref":"FIG. 1"},"Referring to , the remote UI system includes a remote server , i.e., an RUI server, a first terminal , and a second terminal . The second terminal  controls the first terminal  and includes a UI Control Point (UICP)  for discovering the first terminal . For example, the UICP  is a logical entity. Alternatively, the UICP  may be located outside of the second terminal .","The first terminal  receives a remote server application (not shown) from the remote server , and a handler  therein executes the remote server application. The remote server application has a Remote Control Function (RCF) object for communicate with an RCF plug-in , and therefore, the remote server application provides a control UI to the second terminal  and communicates with the control UI driven in the second terminal .","A request of the second terminal  is transmitted to an embedded server  in the first terminal . The embedded server  transfers the request of the second terminal  to the RCF plug-in , and then, the RCF plug-in  transfers the request to the remote server application having the RCF object.",{"@attributes":{"id":"p-0012","num":"0011"},"figref":"FIGS. 2 and 3"},"Referring to , when the second terminal  is driven, e.g., powered on, in step , the second terminal  discovers the first terminal  and obtains information (i.e., Description information) about the first terminal  in step . In step , the second terminal  requests a remote UI list from the embedded server  and then receives the requested remote UI list from the embedded server . In step , the second terminal  selects a remote UI from the remote UI list. In step , the second terminal  requests the embedded server  of the first terminal  to provide the selected remote UI.","In steps  to , the embedded server  obtains the requested remote UI from the remote server  and transmits the obtained remote UI to the second terminal .","Referring to , when the second terminal  requests a remote server application change from the embedded server  in step , the embedded server  sends the remote server application change to the remote server application  in steps  to . In steps  and , the remote server application  obtains a new remote server application from the remote server , and drives the new remote server application in step . In steps , the remote server application  requests a control UI for controlling the new remote server application from the remote server . In step , the remote server application  receives the requested control UI from the remote server .","In steps  to , the remote server application  transfers the control UI to the second terminal  through the embedded server .","As described above, in the prior art, the first terminal  transfers the control UI to the second terminal , after there is a request for the control UI by the second terminal .",{"@attributes":{"id":"p-0018","num":"0017"},"figref":"FIGS. 4 and 5"},"For example, as illustrated in , when playback soap opera content in the first terminal  is over, a display screen of the first terminal  remains in a state that the soup opera is over. At this time, the user requests a control UI change through the second terminal . Then, the first terminal  first changes a remote server application and provides a control UI for controlling the changed remote server application to the second terminal .","Accordingly, as illustrated in , when a remote server application in the first terminal  is automatically changed into another remote server application without a request by the second terminal , a control UI of the second terminal  is not changed. That is, the second terminal  can no longer control a new remote server application operated in the first terminal .","Accordingly, the present invention is designed to address the above-mentioned problems occurring in the prior art and to provide at least the advantages described below.","An aspect of the present invention is to provide an apparatus and a method for providing a control UI that controls a new remote server application in a second terminal, when a remote server application in a first terminal is changed into the new remote server application, without a request by the second terminal.","In accordance with an aspect of the present invention, a method for providing a control UI in a remote UI system is provided. The method includes downloading, by the first terminal, an application from a remote server; driving the application; requesting a new application from the remote server; receiving the new application from the remote server; driving the new application; requesting a second terminal to a change the control UI according to the new application; receiving a message requesting a new control UI for controlling the new application from the second terminal; and providing the new control UI for controlling the new application to the second terminal in response to the message.","In accordance with another aspect of the present invention, a terminal apparatus for providing a control UI in a remote server is provided. The terminal apparatus includes a handler for driving an application downloaded from the remote server; a Remote Control Function Control Point (RCF CP) for sending a control UI change request to another terminal, when a new application is driven by the handler without a request from the another terminal; and an embedded server for receiving a message requesting a new control UI for controlling the new application from the another terminal and providing the new control UI for controlling the new application to the another terminal.","Hereinafter, various embodiments of the present invention will be described with reference to the accompanying drawings. In the following description, detailed descriptions of known functions and configurations incorporated herein will be omitted to avoid obscuring the subject matter of the present invention. Further, while many of the following terms are defined considering their roles or functions, but these terms may be varied in accordance with intention of a user or an operator, or custom. Therefore, the definition of the terms should be considered based on the whole description of the specification.","In the description below, a terminal to which a control UI is provided is referred to as a second terminal, and a terminal that provides a control UI to the second terminal is referred to as a first terminal. In the embodiments described below, the second terminal corresponds to an RUI client, and the first terminal corresponds to a terminal including an embedded server that provides a control UI to the second terminal. Further, the first terminal includes a handler, which is capable of communicating with a remote server, for receiving a remote server application from the remote server, and driving the received remote server application.","In accordance with an embodiment of the present invention, a scheme of providing a control UI is provided, which controls a new remote server application, in the second terminal, when a remote server application driven in the first terminal is changed into the new remote server application. Accordingly, a need exists for a method of requesting a control UI change from an RCF plug-in, by a remote server application driven within the first terminal, and for defining an entity and its operation for requesting the control UI from second terminal, according to the request by the remote server application.","According to an embodiment of the present invention, by transmitting a request for a control UI change to the first terminal, in order to control a new remote server application that is changed to in the first terminal, the second terminal requests a control UI for controlling the changed new remote server application from the first terminal and obtains the requested control UI from the first terminal.",{"@attributes":{"id":"p-0036","num":"0035"},"figref":["FIG. 6","FIG. 6","FIG. 1"],"b":["115","610","120"]},"Referring to , the second terminal  receives, through an embedded server , the control UI for controlling a remote server application (not shown).","The remote server application, which is driven in a handler , can control the RCF CP  through an Application Programming Interface (API) provided from an RCF plug-in . The RCF CP  receives a command Uniform Resource Identifier (URI) provided by the second terminal , adds a message to the command URI, and transmits it to the second terminal . The second terminal  extracts the message from the command URI transmitted from the RCF CP , and transmits the extracted message to the embedded server  of the first terminal . Thereafter, the extracted message is transferred to the remote server application via the RCF plug-in . The remote server application obtains the control UI from the remote server  and transmits the control UI to the second terminal .",{"@attributes":{"id":"p-0039","num":"0038"},"figref":"FIG. 7"},"Referring to , when the handler  of the first terminal  executes the remote server application  downloaded from the remote server  in step , and the remote server application  requests a new remote server application from the remote server  in step , the remote server  transmits the new remote server application in step , and the new remote server application is executed in the handler  in step .","In step , while the new remote server application is being executed, the remote server application  requests a control UI change from the RCF plug-in , using a request URL parameter value of a \u201cchangeCUI API\u201d. Accordingly, when the second terminal  requests the control UI, the parameter value is transferred to the embedded server  in the first terminal.","As illustrated in , the requestURL parameter value of the \u201cchangeCUI API\u201d may be one of \u201c\/rcf\/request_cui\u201d, \u201c\/rcf\/request_msg\u201d, and \u201c\/rcf\/create_app\u201d. The \u201c\/rcf\/request_cui\u201d is a URL for requesting the control UI and is used for transmitting a control UI request event to the remote server application  of the first terminal , and the remote server application  can acquire requested parameter values together with \u201c\/rcf\/request_cui\u201d by using the event. Further, based on the acquired parameter values, the remote server application  can take the control UI from the remote server and transmit the control UI to the second terminal . Also, the remote server application  may either take a control UI existing in the first terminal  and transmit the taken control UI to the second terminal  or transmit another control UI existing in the remote server application  itself to the second terminal .","The \u201c\/rcf\/request_msg\u201d is a command transmitting URL used for transmitting a command transferring event to the remote server application , and the remote server application  can acquire requested parameter values together with \u201c\/rcf\/request_msg\u201d from this event. Further, based on the acquired parameter values, the remote server application  may execute a particular command, take a control UI based on changed current state information from the remote server , and transmit the taken control UI to the second terminal . Also, the remote server application  may obtain a control UI existing in the first terminal  and transmit the obtained control UI to the second terminal  or transmit another control UI existing in the remote server application  itself to the second terminal .","The \u201c\/rcf\/create_app\u201d is a URL for requesting a creation of a new remote control server application. Based on this URL parameter, the remote server application  may create a new remote server application, obtain a control UI for controlling the new remote server application from the remote server , and transmit the new remote server application to the second terminal .","As described above, the remote server application  transfers a control UI changing request to the RCF IP  through the API provided from the RCF plug-in  in steps  and . In step , the RCF CP  determines whether the first terminal  has \u201cconnectCommandURL\u201d provided from the second terminal . The \u201cconnectCommandURL\u201d may be acquired and stored by the first terminal  during a procedure of capability-mating with the second terminal .","When the first terminal  does not have the \u201cconnectCommandURL\u201d, the RCF CP  obtains \u201cconnectCommandURL\u201d existing in \u201cuiClientInfo\u201d of the second terminal  through a procedure of \u201cDiscovery & Description\u201d through the embedded server  in step .","In step , after adding a message value that is to be used for a request by the second terminal  to the first terminal , to a rear position of \u201cconnectCommandURL\u201d value, the RCF CP  requests a control UI change from the second terminal  through the \u201cconnectCommandURL\u201d value to which the particular message value has been added.","The URL to which the particular message value has been added may have the following forms:","<connectCommandURL>?\/rcf\/request_cui?param1=value1&param2=value2 . . . ,","where a value after the \u201c<connectCommandURL>?\u201d may be changed according to a \u201crequestURL\u201d parameter value of a changeCUI API provided from the RCF plug-in .","Upon receiving the request for the control UI change from the first terminal , in step , the second terminal  transfers \u201cHTTP Request\u201d based on the value following after \u201c<connectCommandURL>?\u201d to the embedded server  of the first terminal . In steps  to , as described above, the first terminal  provides the control UI to the second terminal  according to the value following after \u201c<connectCommandURL>?\u201d.","According to the above-described embodiments of the present invention, an apparatus and a method are provided that can provide a control UI capable of controlling a new remote server application in a second terminal, even when a remote server application in a first terminal is changed into the new remote server application, without a request by the second terminal.","While the present invention has been shown and described with reference to certain embodiments thereof, it will be understood by those skilled in the art that various changes in form and details may be made therein without departing from the spirit and scope of the invention as defined by the appended claims and their equivalents."],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"BRIEF DESCRIPTION OF THE DRAWINGS","p":["The above and other aspects, features, and advantages of certain embodiments of the present invention will be more apparent from the following detailed description taken in conjunction with the accompanying drawing, in which:",{"@attributes":{"id":"p-0026","num":"0025"},"figref":"FIG. 1"},{"@attributes":{"id":"p-0027","num":"0026"},"figref":"FIGS. 2 and 3"},{"@attributes":{"id":"p-0028","num":"0027"},"figref":"FIGS. 4 and 5"},{"@attributes":{"id":"p-0029","num":"0028"},"figref":"FIG. 6"},{"@attributes":{"id":"p-0030","num":"0029"},"figref":"FIG. 7"},{"@attributes":{"id":"p-0031","num":"0030"},"figref":"FIG. 8"}]},"DETDESC":[{},{}]}
