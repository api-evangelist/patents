---
title: Secure installation activation
abstract: A system  for providing credentials to a computational component in a distributed processing network is provided. The system  includes: (a) a plurality of crypto-tokens -, each crypto-token -comprising a unique identifier, optionally a digital certificate comprising a unique public key and the unique identifier, and a private key corresponding to the public key; (b) a provisioning system  comprising a certificate authority  operable to generate the plurality of crypto-tokens -; and (c) a computational component  comprising a drive operable to receive and communicate with a selected crypto-token . The computational component  uses the digital certificate and private key in any of the crypto-tokens -to establish a secured communication session with the provisioning system . Before the establishing operation, any of the plurality of crypto-tokens -can be engaged with the computational component  to establish the secure communication session.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=07707405&OS=07707405&RS=07707405
owner: Avaya Inc.
number: 07707405
owner_city: Basking Ridge
owner_country: US
publication_date: 20040921
---

{"@attributes":{"id":"description"},"BRFSUM":[{},{}],"heading":["CROSS REFERENCE TO RELATED APPLICATION","FIELD OF THE INVENTION","BACKGROUND OF THE INVENTION","SUMMARY OF THE INVENTION","DETAILED DESCRIPTION","Overview of the Provisioning Architecture","The Provisioning Process"],"p":["Cross reference is made to U.S. patent application Ser. Nos. 10\/811,412, filed Mar. 25, 2004, now U.S. Pat. No. 7,272,500, entitled \u201cGlobal Positioning System Hardware Key for Software Licenses\u201d; and 10\/956,861, filed Sep. 30, 2004, entitled \u201cCertificate Distribution Via License Files\u201d, each of which is incorporated herein by this reference.","The invention relates generally to software and\/or hardware and particularly to the application of cryptographic algorithms to software and\/or hardware provisioning.","Distributed software systems that operate over an open network, particularly a Wide Area Network such as the Internet, often have the need for secure communications over the network and authentication between system elements to prevent spoofing and other security breaches. Various protocols have been used to provide such security. Exemplary protocols include the Secure Sockets Layer or SSL, Transport Layer Security or TLS, Secure-HTTP, and IP Security or IPSEC.","Instrumental in these protocols are cryptographic mechanisms. Two primary cryptographic mechanisms are secret key and public key cryptography. Secret key is a type of symmetric encryption in which both parties know and use the same or shared secret key to encrypt and decrypt communications. Encryption algorithms, or ciphers, based on the secret key, mathematically transform or encrypt the plain text in the message into cipher text. The same key and algorithm are used by the other party to decrypt the cipher text. Public key cryptography is a type of asymmetric encryption that uses pairs of different keys, one for encryption and one for decryption. One of the keys or private key is kept secret by a party and the other key or public key is provided freely to other parties. When plain text is converted into ciphertext or encrypted using the private key, it may be converted back into plain text only using the public key and vice versa. The Rivest-Shamir-Adleman or RSA algorithm is one of the most widely used public key algorithms.","The SSL protocol uses the Public Key Infrastructure or PKI, a form of public key cryptography, to secure communications over otherwise unsecured networks. RSA, together with the X.509 standard for digital certificates, form the basis of PKI. A certificate  according to the X.509 standard is shown in . The standard portion  of X.509 includes the version  (which indicates the particular version of the X.509 standard), serial number  (which is assigned by the certificate authority and uniquely identifies the certificate), signature algorithm  (which identifies the algorithm used in the digital signature), issuer or signer  of the certificate (which identifies the certificate authority that issued the certificate), period of validity  for the certificate (which identifies both the earliest and latest times that the certificate is valid), the subject or owner  of the public key, and the public key  of the owner of the certificate. Extensions  provide a location for issuers to add their own private information to the certificate. It can include authority and subject key identifiers, key usage, private key usage period, and a list of permitted use and restrictions on usage for the certificate. The certificate  further includes the digital signature field  (encrypted using the private key of an issuing entity). The digital signature field includes the signature algorithm identifier , a secure hash of the other fields in the certificate, and a digital signature of that hash. When a certificate has been issued and signed by the same entity, that certificate is known as a self-signed certificate or a root certificate. In a certificate chain or chain of trust, a root certificate is always at the top of the chain and is used to validate each of the other lower certificates in the chain. As will be appreciated, a certificate chain of trust is a sequence of certificates, each one of which is signed by the next in order until the last one, or root certificate, is self-signed. A trusted third-party, such as Verisign\u2122, that issues digital certificates used to create digital signatures and public\/private key pairs is known as a certificate authority or CA. As can be seen from the foregoing, to implement PKI each system element in the distributed network requires a unique digital certificate and associated private key.","In a typical application, a computational component receives a digital certificate by interacting with a certificate authority. The computational component generates a public\/private key set and makes a certificate request to the certificate authority. Secure distribution of the private key is not an issue because no distribution is needed (the private key is generated on the target system element). However, this approach is not practical in many cases, since it requires direct communication between the computational component and a certificate authority. This approach also presents security issues, since the certificate request sent from a given computational component can be difficult to validate. If the certificate is granted without sufficient validation, the security that the certificate provides is compromised. More thorough validation is time consuming and potentially expensive.","This problem is compounded in an enterprise network including multiple system elements. Providing each system element with a unique certificate and key pair can be a challenge. There are two key questions that must be addressed. First, how does one get the digital certificate to each system element in the first place? Second, if this is done remotely how does one know that the system element on the other end is the system element that it claims to be? The potential solutions include (a) adding unique credentials at the time of manufacture; (b) staging the equipment to add unique credentials; (c) shipping the credentials separately (e.g., on a crypto-token device such as a smart card or other hardware or media; (d) employing a hardware device (e.g., circuit board) whose personality is or can be made unique; (e) providing access to a secure web site from which credentials can be obtained after suitable login and authorization; and (f) hand carrying the credentials to the device on site.","Each of the solutions typically requires some pre-association of credentials with a specific system element. Such an association is not always possible and\/or is expensive. For example, such an association is often not possible until an electronic address, such an IP address, is assigned to the system element, which is not commonly done until after connection to the network. Moreover, encoding unique credentials into a system element at the time of manufacture is costly, and the credentials can be viewed by a skilled computer technician and are therefore not tamper proof. The solutions further require involvement of trained technical personnel, which is not only expensive but also can delay significantly the provisioning process.","In options (c) and (f) above, providing the credentials to the device on site, such as using a crypto-token, can be problematical. Because this technique requires a prior association between a specific hardware or software product and a specific crypto-token, providing wrong credentials with a product or misplacement of the credentials can prevent the product from being provisioned and\/or licensed until the proper credentials have been provided. This may be time consuming and expensive particularly if the proper credentials have been lost or misplaced and must be recreated.","These and other needs are addressed by the various embodiments and configurations of the present invention. The present invention is directed generally to the use of a generic crypto-token to provide credentials, such as digital certificates and private\/public key pairs, to a computational component in a distributed processing network. As used herein, a \u201ccredential\u201d refers to a set of information (e.g., a unique character or string of characters) which must be provided to a computational component for access to information in that or another computational component to be provided. Examples of credentials include digital certificates, private\/public key pairs, and cipher text and plain text messages.","In a first embodiment of the present invention, a process for providing credentials to a computational component in a distributed processing network is provided that includes the steps of:","(a) generating a plurality of crypto-tokens, each crypto-token including a unique identifier and a public\/private key pair;","(b) engaging the selected crypto-token with the computational component, whereby the computational component and selected crypto-token can electrically communicate with one another; and","(c) based on a digital certificate comprising the public key and unique identifier and private key in any of the crypto-tokens, establishing a secured communication session with the computational component. Before step (c), any of the plurality of crypto-tokens may be engaged with the computational component to establish the secured communication session.","The crypto-tokens can be any human portable medium for storing or otherwise providing credentials. Preferred crypto-tokens include integrated circuits such as smart cards and dongles.","In one configuration, generic host independent certificates are used to establish an initial secure link and thereafter made unique (after installation) rather than the current practice of generating a host associated certificate before installation. \u201cUniqueness\u201d can be effected using a customer- or enterprise-specific or computational component-specific certificate. In the former case, the certificate uniquely identifies the enterprise but not a specific computational component in the enterprise (apart from the component's public key and corresponding token identifier included in the certificate). In the latter case, the certificate uniquely identifies the computational component, and optionally the enterprise, by including appropriate unique identifier(s) in the certificate. A manufacturer or supplier of a computational component generates a stock of crypto-tokens, preferably smart cards. Each crypto-token is unique from the other crypto-tokens; that is, each token contains a unique private cryptographic key along with a unique identifier (e.g., a serial number and name associated with the token). The identifier is within the token and also printed on the outside of the token. The certificate in the token is signed digitally using the private key corresponding to a root certificate of the manufacturer or supplier or of any recognized Certificate Authority, such as Verisign\u2122.","A token is shipped with each computational component from the manufacturer or supplier. Because the tokens are generic and not tied specifically to a computational component, customer, or enterprise network, any token can accompany a selected computational component. Stated another way, the token has no value until a license file and\/or provisioning system data structure authorizes its use for a specific enterprise\/customer\/computational component. Maintenance centers can also have a supply of the tokens. When the computational component arrives at the customer's site, the customer plugs the component into a power source and the enterprise network and inserts the token into the token reader or other type of driver. The computational device obtains an IP address from an address server as well as an IP address of the customer's central provisioning server. The token permits the device to contact the central provisioning server via an encrypted link and authenticated after encrypted, i.e., encrypted and authenticated link. The provisioning server can be assured that it is communicating with the token identified by the certificate exchanged in the secured link because the certificate was signed digitally by the manufacturer\/supplier. The manufacturer's\/supplier's root certificate is resident on the provisioning server or can be obtained from the manufacturer's\/supplier's public Web site. The token is thus securely identified and authenticated to the provisioning server. Administration of the provisioning server allows it to know whether to accept or deny this new device based on the token identifier in the certificate. Once accepted, the provisioning server can perform what ever initialization tasks are required, such as sending data needed by the device, changing its IP address, causing it to reboot or come on line, installing software updates or upgrades, etc.","The administration of the provisioning server can be accomplished ahead of time, knowing that a number of tokens are coming or on demand, via a call from the person plugging in the new device. The information transmitted typically includes at the very least the token's identifier.","There are a number of options to this configuration. If there is no address server, the customer could be prompted for this information which their network administrator would have to supply. If on-line access to the manufacturer\/supplier is available, a secure link between the token and the provisioning server of the manufacturer\/supplier is possible. The provisioning server can communicate directly with the token and change its data through an encrypted link directly to the token. For example, a license could be stored or updated in the token or the certificate itself could be changed.","The present invention can represent a significant cost and time savings during the provisioning process. Currently, to create a digital certificate a request is made from an installed computational component to a certificate authority, such as Verisign\u2122, to request a certificate. The request must include a hostname of the requesting computational component. This can only be known after installation and may require the certificate to be reissued if the name changes. Assuming that the request is approved, the certificate is returned to the computational component a day or so later. The process of the present invention can avoid this delay and dependency on a third party during installation. The use of a generic certificate in the token, or a certificate that contains a random identifier, rather than the hostname of the computational component allows the certificate and token to be generated in advance and therefore can eliminate the delay in installation and the dependency on hostname assignments. Lost or damaged tokens can be exchanged freely for tokens having different identifiers, key pairs, and generic certificates but being freely interoperative with an already deployed computational component. Additionally, the standard or generic certificate can be later updated over a link (whether or not secure) to contain a network host name for the computational component. Thus, network failures or problems due to computational components attempting to register or otherwise communicate with system elements in a different network area or region can be prevented by replacing the generic certificate in the token with a device-specific certificate including not only a hostname but also an enterprise area, or region identifier, module identifier, and\/or system identifier.","The use of a token and a customer-provided address server, which can give a computational component in an enterprise network both its own address and the address of a provisioning server, can be a very simple solution to the complex problems of securely provisioning enterprise network elements. It can allow secure installation, identification, and authentication of computational components in a network without the installers needing to know any \u201csecret\u201d information. It therefore permits relatively unskilled, nontechnical customer personnel to install computational components on site without requiring the assistance of technicians from the manufacturer\/supplier. This can not only allow faster installation service for the customer but also represent a substantial cost savings to the manufacturer\/supplier. Furthermore, this approach affords the administrator final authorization of computational components which possess authenticated tokens.","The identification afforded by tokens is portable. If a computational component fails, the token is moved to the maintenance replacement without delay. The token cannot be duplicated and therefore the service being granted by the token cannot be duplicated. A customer (or hacker) can not operate a second computational component from the same token, thereby avoiding payment of a fee to the manufacturer\/supplier. In cases where there is an on-line link to the provisioning server of the manufacturer\/supplier, the protection of the token allows the inclusion of licenses in the token in a secure manner so that the license is likewise portable with the token during maintenance replacement.","Tokens, such as a smart card, can maintain desired credentials secret and prevent their unauthorized discovery and\/or modification. Integrated circuits can be configured to process input and provide output but have their stored content be otherwise inaccessible to outside devices.","These and other advantages will be apparent from the disclosure of the invention(s) contained herein.","The above-described embodiments and configurations are neither complete nor exhaustive. As will be appreciated, other embodiments of the invention are possible utilizing, alone or in combination, one or more of the features set forth above or described in detail below.","Referring to , the provisioning system  includes a provisioning server  connected by via a network  and business application programming interface , to a database manager . The database manager , in response to queries and commands from the other provisioning system  components and\/or based on predetermined rules or policies, adds, updates, modifies, and validates records in the database . The database  typically includes product and associated customer information, such as product (or computational component) serial numbers and other product identifiers, customer identifiers, material codes, and the like, to a computational component  to be provisioned. The manager  can be any suitable enterprise resource planning software, such as ERP or Enterprise Resource Planning\u2122 software sold by SAP.","The provisioning server  includes a certificate authority or signing agent  for signing certificates with a private key corresponding to a public key in a certificate of the provisioning system  and a token generating agent  to supervise the production of tokens.","The provisioning system  is connected via network  with an enterprise network  including a computational component  to be provisioned. The computational component  can be any hardware device and\/or software module, such as an application program, a server, a receiver, a transmitter, an appliance (a computational component delivered as a \u201cblack box\u201d for a dedicated purpose), and the like. As will be appreciated, the provisioning system  may also be a part of the enterprise network .","The networks  and  can be wired and\/or wireless and packet-switched and\/or circuit-switched. Typically, network  is a local area network while network  is a wide area network, such as the Internet.","Administration personnel in the provisioning system  and enterprise network  are in communication with one another via the first and second communication devices  and . The communication devices  and  may be any suitable communication device, whether wired or wireless or packet- or circuit-switched, such as analog or digital telephones, IP hardphones, IP softphones, and the like. Although  depicts the first and second communication devices  and  as being interconnected by the network , it is to be understood that the devices  and  may be interconnected by a separate and different network.","The provisioning process includes the use of a plurality of crypto-tokens -. An exemplary crypto-token  is shown in . The crypto-token  includes a memory  and processor . The memory  is read-or-write memory, such as EEPROM, flash EEPROM, FRAM, and RAM, or read-only or ROM memory. The processor is preferably a microprocessor. The crypto-token can be any suitable portable device, such as a smart card (e.g., an Integrated Circuit (IC) microprocessor card, Integrated Circuit (IC) memory card, and an optical memory card), a (USB) dongle, and the like.","The memory  includes a public\/private key pair , a unique token identifier or ID  (which is a randomly generated variable that may be numeric, alphabetical, or alphanumeric), optionally a (typically non-signing) generic certificate  (which does not include the private key  but does include the public key ), a key generator  for generating public\/private key pairs, optionally a certificate generator  for generating a token ID  and certificate requests, which include unsigned certificates, and a cryptographic agent  for encrypting plain text and decrypting cipher text using the private key . The token ID  is in typically in the subject field  of the certificate.","When the crypto-token  is manufactured by the provisioning system  and at the time of shipping of the computational component , the crypto-token is not associated with a specific computational component (including the component ), customer, or enterprise network, thus, any crypto-token can be used with any computational component, customer's computational components, or enterprise network's system elements in steps , , and  discussed below. In other words, the standard  and extensions  portions of the certificate do not identify a specific computational component to which the certificate corresponds (e.g., the certificate does not include a host name, electronic address, or other unique identifier of a specific computational component). Although the certificate uniquely identifies the corresponding crypto-token, the certificate  is generic in that it can be used by any computational component for purposes of authentication, such as in a Transport Layer Security or TLS Protocol handshake procedure. The provisioning system's association between the token and a specific computational component is preferably effected during or after installation of the component in the enterprise network. The certificate  is digitally signed by the certificate authority  (using the private key of the certificate authority ). The memory  can includes not only the generic certificate  but also a copy of the issuing certificate authority certificate (not shown) issued to and signed by the certificate authority . With reference to , a typical chain of trust is depicted, such as is included in the token. The chain includes the certificate  of the root certificate authority at the top of the chain, certificate(s)' (not shown) of all intermediate certificate authorities, and a computational component certificate  at the bottom of the chain.","To permit identification of the token by personnel, the token ID  is typically printed on the outside or exterior surface of the token. The token is typically packaged with the computational component prior to sale or delivery to the customer. However, technical personnel may also hand carry the token to the customer's site when the computational component is provisioned.","In a preferred embodiment, the crypto-token is used not only for provisioning and\/or licensing but also for verifying proper operation of the computational component and other applications requiring security. In applications for ensuring proper operation when the crypto-token is removed from the internal or external drive of the computational component during component operation, the computational component will, after a selected time interval and\/or after a link between the component and another component goes off line, automatically go off line until the crypto-token is re-inserted into the drive. This requirement prevents the unlawful or impermissible replacement of the provisioned and licensed computational component with an unprovisioned and\/or unlicensed computational component.","Referring now to , the provisioning process will now be described.","In step , the provisioning system  generates a plurality of crypto-tokens -, each including a unique public\/private key pair, unique token identifier, and a digital certificate incorporating the unique token identifier and the public key in the respective key pair.","A process for manufacturing a typical crypto-token includes a number of steps. The token generating agent  determines to produce N tokens with sequence numbers 1 to N. The agent  prompts the operator\/user to insert a blank token  in a token reader (not shown). The token is assigned the token identifier \u201cX\u201d, where X is between 1 to N. X is selected by the token generating agent  not by the token . The token  generates a public and private key pair. The private key  is not known to the provisioning system  before, during, or after the manufacture of the token . The system  prints an appropriate label on the token, ejects the token  and records in the database  (via the database manager ) the fact that the token was generated. The printed label typically includes the common name of X.","In step , one of the tokens  is transported to the customer's site to be used in provisioning the computational component .","In step , the computational component is connected to the network , plugged in to a power source, and the token  plugged into an internal or external driver in communication with the computational component. As part of the connection process, the computational component is assigned an electronic address, such as an IP address.","In step , the computational component transmits a generic digital certificate to the provisioning server  over an untrusted path. In step , the provisioning server  authenticates the token's generic digital certificate. Once the certificate has been validated, the provisioning server in step  authorizes the computational component via the application interface , data base manager , database  and the subject  (token ID ) and other fields in the received certificate. After successful authentication, the agent  creates a random session key (step ), and encrypts this key with the public key from the generic certificate received from the computational component. In step  the provisioning server sends the encrypted session key to the computational component.","In any of the preceding steps, an entity, whether human or automated, forwards the token ID  corresponding to the token  communicating with the computational component  and optionally a unique identifier in the enterprise network  (e.g. a serial number, an electronic address, a device name, and the like) of the computational component  to the provisioning server . This information is typically communicated out-of-band and not transmitted as part of the handshake procedure. For example, the information may be communicated out-of-band using the first and second communication devices  and . Until at least the token ID  is received by the provisioning server , the provisioning server  does not know whether or not it is proper to proceed further with the computational component  and, if so, what database information corresponds to the computational component currently engaged with the identified token.","Alternatively, the token ID  may be pre-programmed in the server . (That is in the database  and accessed by the provisioning server  through network , business application  and database manager  as previously described.)","In step , the computational component establishes a secure session with the provisioning server  using the received session key. A two way authentication occurs in this process. As will be appreciated, in a TLS handshake procedure the computational component and provisioning server exchange their respective digital certificates and the session key encrypted with their respective public keys so that each side may authenticate the other side. Authentication quality requires each of the components verifying the other component has a valid certificate (by verifying that the certificate was signed by the certificate authority) and that the digital signature is valid.","During session establishment, the computational component encrypts messages using the public key of the provisioning server; the provisioning server, upon receipt of such message decrypts it with the provisioning server's private key. Similarly, the provisioning server encrypts messages using the public key of the computational component (received in the generic certificate of the computational component); the computational component, upon receipt of such message decrypts it with the computational component's private key.","Once the session is established, each side encrypts and decrypts messages using the secret session key exchanged during session establishment.","As will be appreciated, a number of messages are commonly exchanged in this step. Examples can include the Alert, ApplicationData, Certificate, CertificateRequest, CertificateVerify, ChangeCipherSpec, ClientHello, ClientKeyExchange, Finished, HelloRequest, ServerHello, ServerHelloDone, and ServerKeyExchange messages. The various messages can include security protocol version information, a random number used to seed the cryptographic calculations, session ID, cipher suites, compression methods, and public key information.","In step , the token's corresponding identifier  (e.g., X) is used to obtain provisioning information from the data base  through the data base manager  and application interface . This information is used to provision the computational component via the secure session established in .","As can be seen from the foregoing discussion, during the provisioning process, a number of manual steps are performed to lock the computational component and the cryptotoken together logically. Thereafter, two-way authentication can be performed without human involvement. In other words, the computational device has a real identity that can be trusted by the provisioning server and other computational devices communicating with the provisioned computational component.","A second variation of the invention is illustrated in . Following the steps  through , the provisioning server  can replace the generic certificate in token  with a specific certificate that reflects the computational component's true identity or role in the network.","In step , using the secure session established in , the provisioning server  instructs the computational component  to generate a certificate signing request with a specified common name. This name might include the host name or fully qualified domain name of the computational component, an ESID, SID, PID, MID for the computational component, or other values as may be useful in the context in which the computational component operates.","In step , the certificate signing request is transmitted to the provisioning server  using the secure session .","In step , the provisioning server signs the certificate request and returns the signed certificate to the computational component  and crypto-token .","In step , the crypto-token replaces the generic certificate  with the specific signed certificate received through the secure session  from the provisioning server .","As will be appreciated, the new certificate can be constructed to use the same public\/private key pair  or a new public\/private key pair.","Thereafter, computational component  can be identified directly by the information  and other fields in its new certificate directly and without a look-up in data base . That is, without having to translate between a generic token ID and the true identity of the computational component.","As will be appreciated, it is also possible that the original crypto-token  does not contain a digital certificate, but only a public\/private key pair and a token ID. In this case the public\/private key pair is used to establish a secure session  but without the use of digital certificates or using only the certificate of the provisioning server. This secure session can then be used to create a specific certificate for the computation component using the procedures -.","Architecture for Provisioning and Licensing a Telecommunications Enterprise Network","Using the principles set forth above, an architecture for provisioning and licensing a telecommunications enterprise network will now be discussed with reference to . The licensing and provisioning system  is connected with an enterprise network  by way of network . The various processing components of the licensing and provisioning system  are discussed in detail in the copending applications referenced above. The system  includes the token generating agent  and certificate signing agent  of . The enterprise network  includes media server , first, second, . . . nth computational components -, and an address server  (such as a server configured as defined in the Dynamic Host Configuration Protocol), all interconnected by a network .","The media server  can be any telecommunication switch or server, such as an S8700\u2122, S8300\u2122, and S8300\u2122 media server running the COMMUNICATION MANAGER\u2122, all of which are sold by Avaya Inc.","The first, second, . . . nth computational components can be a device, such as media servers serving a variety of functions (e.g., spare processors), gateways, port networks, voice messaging systems, email servers, and instant messaging servers.","The networks  and  can be packet-switched and\/or circuit-switched. Typically, network  is a local area network while network  is a wide area network, such as the Internet.","The media server  includes a license installation agent  that forwards a license file  to the various computational components. The license file defines the enterprise features and feature capacity allocations for the enterprise network .","As will be appreciated, during the transmission of licenses to the various computational components  and later communications between and among the computational components (including the media server) and with the licensing and provisioning system , it is important to provide adequate security to prevent spoofing and other security breaches. Preferably, each of the computational components has a unique, respective, digital certificate and public\/private key pairs. The provision of digital certificates and public\/private key pairs is effected by the use of the crypto-tokens -using the techniques discussed above. Before or after the PKI information has been transferred to a computational component, the pertinent licensing information may be provided to it.","The crypto-tokens  are identical to the crypto-token  of  except that the chain of authority may include additional certificate(s) between the root certificate  and the token certificate . The additional certificate(s), which can be included in the token's memory  for reasons of security, is that of a license generating module in the licensing and provisioning system . The licensing and provisioning system's private key, which corresponds to the public key in the additional certificate, digitally signs the generic crypto-token's certificate. This chain of trust would greatly facilitate and expedite the provisioning and licensing process as the media server, first computational component, and\/or crypto-token could communicate directly with the license generating module rather than the certificate authority\u2014which would in turn communicate with the license generating module. This is particularly advantageous for the crypto-token as no intermediate node in the enterprise network or enterprise administration could view what is in the encrypted message addressed to the token, thereby preventing tampering with the transmitted information.","A database (not shown) maintained by the licensing and provisioning system  comprises a plurality of records corresponding to hardware (e.g., processors or IP services interface cards) sold to customers. In particular, the database typically includes a serial number, serial number status or licensing state, client or purchaser, material code(s) (e.g., a material code in SAP that defines the hardware having the serial number), an Enterprise System ID or ESID that identifies uniquely the enterprise that is the subject of the record, a Module ID or MID that identifies a module in the associated enterprise record, and a System ID that identifies a system in the associated enterprise record. A media server is identified uniquely by the combination of SID and MID. The order database comprises a plurality of records associated with hardware and software corresponding to each customer order. Each order entry typically includes an order number, customer name, address, and contact information, and a series of quantity, material code, and description fields identifying the contents of each order. The databases and data structures are further described in copending U.S. patent application Ser. No. 10\/232,906, filed Aug. 30, 2002, entitled \u201cRemote Feature Activator Feature Extraction\u201d, which is incorporated herein by this reference.","Process for Distributing PKI Information and Installing License Files","The process for distributing PKI information to each of the first, second, . . . nth computational components will now be described with reference to .  assumes that the PKI information and license file  have previously been provided to the media server  by the licensing and provisioning system . The PKI information is preferably provided using the crypto-token such as using the process of . After the PKI information has been installed, the license files can be provided by the licensing and provisioning system  using a trusted and secure pathway.","In step , the first computational component is unpacked, a crypto-token inserted into an internal or external drive of the computational component, and the component connected to a power source and the network . It is then turned on.","In step , during boot-up the first computational component forms a host name from the component's serial number or other identifier, contacts the address server , and obtains an electronic address, typically an IP address and\/or the address of the system  and\/or media server . In one configuration, the component forms the hostname using the unique identifier  of the crypto-token inserted in the drive.","In step , an authenticated and private communication session is created between the provisioning system and the computational component . The process for creating this session is described above in connection with steps  through . After this step, the system  or media server , depending on the entity responsible for administering the first computational component, may register the component and reboot the component after registration is completed to place the component in service.","The information communicated out-of-band to the provisioning system  and\/or administration personnel at the media server  typically includes both the token ID  and information identifying uniquely the first computational component  on the network . If the information is not provided before the initial communication of the first computational component with the media server is made, an alarm will be triggered that will ultimately require the transmission of the identification information. The information is typically transmitted by a shipping clerk at the time of shipment of the first computational component, by the technician when the specific crypto-token to be used for provisioning is selected, or by the installing technician in response to an alarm triggered during installation of the first computational component.","In step , the media server  forwards a request from the first computational component for and receives from the system  enterprise- and\/or product-specific information so that the certificate generating agent in the computational component  can create a new certificate. The requested information, for example, can include the name and\/or serial number of the first computational component and\/or the ESID, SID, and MID associated with the first computational component.","In step , the certificate generating agent in the computational component  is provided with the enterprise- and\/or product-specific information and generates a new certificate request, which is unique to the first computational component. The expiration date of the certificate request is typically the expiration date of the license. The certificate request includes the enterprise- and\/or product-specific information. The certificate request not only identifies the first computational component uniquely within the enterprise network  but also identifies uniquely the first computational component with respect to other computational components in networks touching the enterprise network . For example, the certificate request may include a serial number uniquely identifying the component .","The various fields in the certificate request may be populated completely by the generator using information provided by the computational component  and\/or provisioning system . Alternatively, the fields may be partly populated by the generator and the computational component  with the remainder of the fields being populated by the system  using information received from the database manager . In either event, the new certificate includes information unique to the computational component rather than simply information unique only to the token.","In step , the computational component forwards a certificate signing request including the new certificate request (which is unsigned) to the media server , which forwards the request to the system . The certificate signing agent , using the private key of the token , signs the certificate request. It then returns the signed certificate to the component .","In step , the signed certificate is received by the media server  and forwarded to the first computational component . The first computational component replaces the generic certificate with the signed certificate.","In step , the first computational component receives from the media server  and installs the license file(s) and other provisioning and configuration information.","These steps are repeated for each of the other second . . . nth computational components -to provision\/configure the various functional components in the enterprise network .","A number of variations and modifications of the invention can be used. It would be possible to provide for some features of the invention without providing others.","For example in one alternative embodiment, the various modules referenced herein are implemented as software, hardware (e.g., a logic circuit), or a combination thereof.","In another alternative embodiment, the division of the various functions performed by the various modules in the authentication file system are different.","In another embodiment, the present invention is not limited to licensing and\/or provisioning activities. As will be appreciated, the present invention can be used to convey a digital certificate and private\/public key pair to any computational component for any purpose and in any application. For example, the present invention can be used to provide PKI information to a personal computer or laptop in connection with e-commerce. It can be used to change PKI information on a computational component that has potentially been compromised.","In yet another embodiment, the dispensed private\/public key pair can be used to validate a provided license. As will be appreciated, serial numbers or other unique identifiers are used in the above-referenced patent applications for license validation. In this embodiment, no serial numbers or other unique identifiers are required for license validation. Rather, the system  generates an enterprise master license, determines a hash value over the license contents. The private key of the system  then encrypts the hash value in the form of a digital signature in or appended to the license file. The license can then be provided to the remote media server  in the enterprise network. The crypto-token in communication with the server  uses the public key in the certificate of the system  to decrypt the digital signature while the server determines the hash value of the license file. If the decrypted signature and the determined hash value match, the server knows that the license file has not been tampered with or otherwise altered. This approach may also be used with the server  being the allocation license file generator and the various computational components being the recipients of the generated allocation license files.","The present invention, in various embodiments, includes components, methods, processes, systems and\/or apparatus substantially as depicted and described herein, including various embodiments, subcombinations, and subsets thereof. Those of skill in the art will understand how to make and use the present invention after understanding the present disclosure. The present invention, in various embodiments, includes providing devices and processes in the absence of items not depicted and\/or described herein or in various embodiments hereof, including in the absence of such items as may have been used in previous devices or processes, e.g., for improving performance, achieving ease and\\or reducing cost of implementation.","The foregoing discussion of the invention has been presented for purposes of illustration and description. The foregoing is not intended to limit the invention to the form or forms disclosed herein. In the foregoing Detailed Description for example, various features of the invention are grouped together in one or more embodiments for the purpose of streamlining the disclosure. This method of disclosure is not to be interpreted as reflecting an intention that the claimed invention requires more features than are expressly recited in each claim. Rather, as the following claims reflect, inventive aspects lie in less than all features of a single foregoing disclosed embodiment. Thus, the following claims are hereby incorporated into this Detailed Description, with each claim standing on its own as a separate preferred embodiment of the invention.","Moreover though the description of the invention has included description of one or more embodiments and certain variations and modifications, other variations and modifications are within the scope of the invention, e.g., as may be within the skill and knowledge of those in the art, after understanding the present disclosure. It is intended to obtain rights which include alternative embodiments to the extent permitted, including alternate, interchangeable and\/or equivalent structures, functions, ranges or steps to those claimed, whether or not such alternate, interchangeable and\/or equivalent structures, functions, ranges or steps are disclosed herein, and without intending to publicly dedicate any patentable subject matter."],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"BRIEF DESCRIPTION OF THE DRAWINGS","p":[{"@attributes":{"id":"p-0027","num":"0026"},"figref":"FIG. 1"},{"@attributes":{"id":"p-0028","num":"0027"},"figref":"FIG. 2"},{"@attributes":{"id":"p-0029","num":"0028"},"figref":"FIG. 3"},{"@attributes":{"id":"p-0030","num":"0029"},"figref":"FIG. 4"},{"@attributes":{"id":"p-0031","num":"0030"},"figref":"FIG. 5"},{"@attributes":{"id":"p-0032","num":"0031"},"figref":"FIG. 6"},{"@attributes":{"id":"p-0033","num":"0032"},"figref":"FIG. 7"},{"@attributes":{"id":"p-0034","num":"0033"},"figref":"FIG. 8"}]},"DETDESC":[{},{}]}
