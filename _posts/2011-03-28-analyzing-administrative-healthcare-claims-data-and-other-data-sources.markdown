---
title: Analyzing administrative healthcare claims data and other data sources
abstract: Techniques suitable for identifying potential subjects for a clinical trial and other applications are disclosed. One or more exclusion or inclusion criteria are defined for the clinical trial. One or more specialized searching tables are pre-generated using administrative healthcare claims data and the one or more exclusion or inclusion criteria. The specialized searching tables are searched. Through the searching step, subjects are identified within the administrative healthcare claims data who match the one or more exclusion or inclusion criteria. Through the searching step, a geographical area is identified corresponding to the subjects who match the one or more exclusion or inclusion criteria. A customized report is generated using the identified subjects and geographical area.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08700649&OS=08700649&RS=08700649
owner: OptumInsight, Inc.
number: 08700649
owner_city: Eden Prairie
owner_country: US
publication_date: 20110328
---

{"@attributes":{"id":"description"},"RELAPP":[{},{}],"p":["The present application is a continuation of co-pending application Ser. No. 11\/567,577, filed Dec. 6, 2006, issued Mar. 29, 2011, as U.S. Pat. No. 7,917,525, which claims the priority of U.S. Provisional Patent Application 60\/742,774, filed Dec. 6, 2005, the entire contents of each of which are incorporated herein by reference in their entirety without disclaimer.","1. Field of the Invention","The present invention relates generally to data mining and analysis. More particularly, it concerns mining and analyzing medial claims data to, e.g., (a) assist in the identification of clinical investigators and potential trial subjects for clinical trials or determining feasibility of clinical trials, (b) assist in the identification of medical expert witnesses, medical directors, or other medical professionals, (c) assist in the investigation of medical fraud, and (d) assist in various types of marketing. Even more particularly, it concerns improving the speed of medical-related data mining and analysis of very large data sets such as administrative healthcare data through the creation and use of specialized searching tables (SSTs). It also concerns improving the speed of certain statistical calculations through the creation and use of factorial tables having logarithmic entries, making it possible to reliably work with very large numbers and data sets.","2. Description of Related Art","A wealth of information is contained in administrative healthcare claims data. For example, an administrative healthcare claims database may contain information concerning, but not limited to, patient identification, physician identification, physician history, prescription drug history, medical examination history, medical diagnosis history, medical billing history, medical cost information, health benefit information, medical procedures, etc.","Conventional techniques have been employed to mine at least some of this information. Data mining of healthcare claims data, however, involves a slow, computationally-intensive process that may return useful results only after hours or more of computation time. Lengthy search and analysis times plague the medical data mining field and discourage many from fully utilizing medial claims data for useful applications.","Administrative Healthcare Claims Data and Statistical Calculations","Healthcare organizations and many other organizations lack the ability to rapidly analyze extremely large data sets (e.g., over a billion claim lines), apply statistical analysis protocols, and aggregate output into relevant, actionable answers for a specific need.","When working with very large datasets (like administrative healthcare claims data), it is difficult and time consuming to look for patterns that are non-random. Generally speaking, the process sometimes involves comparing each record (for example in a claim) against every other record, keeping track of differences, and then analyzing the differences for patterns. As data sets get larger, there can be an explosion in the number of unique comparisons that need to be made. For example, if one has 10 million records, then adding one record may mean that there will be 10 million new comparisons that need to be made and tracked. When one has 100 million records and 1 record is added, there may be up to 100 million new comparisons to make. As such, there are entire classes of analysis that are impractical or impossible to perform on very large data sets, no matter how powerful the database engine.","Administrative Healthcare Claims Data for Clinical Trials","Clinical trials rely on voluntary participation of study subjects to evaluate new drugs, medical devices, or other interventions. Trials may also be directed to, among other things, evaluating procedures for detecting or diagnosing a particular disease or finding ways to improve the quality of life for those suffering from a chronic illness. Trials are usually conducted by researchers associated in some way with a pharmaceutical company, university, hospital, foundation, or governmental agency.","A significant challenge in carrying out any clinical trial is recruiting the appropriate number and type of volunteer study subjects. Volunteer study subjects are selected so that they meet one or more exclusion or inclusion criteria defined by a study protocol that has been approved by an ethics review board. These criteria are aimed at investigating the impact of a predefined intervention (e.g., a new drug) on a particular patient population (e.g., include only hypertensive patients and exclude those younger than 18) and thereby characterize the effect of such an intervention on this population. This stage of the clinical trial\u2014patient recruitment\u2014can be costly, for each extra day it takes to identify a pool of subjects may ultimately represent one fewer day a new drug is on the market (and protected by a patent or other intellectual property). For some successful drugs, the cost of delay may approach or even surpass millions of dollars per day.","Some have attempted to use administrative healthcare claims data for the recruitment of subjects for clinical trials. Services in existence today involve researchers submitting a clinical trial protocol including related inclusion and exclusion criteria to a data service. The data service accesses administrative healthcare claims data (often of limited scope) in an attempt to estimate the size of a pool of potential study subjects and estimate their location. The service, however, can take upwards of one-month for results to be returned. This time delay comes about, at least partially, due to the large amount of time necessary for the actual data mining and analysis. Because healthcare claims data can involve millions of records, the searching necessary to identify potential study subjects can be very time consuming and can, in some instances, represent a significant time delay in bringing a drug to market. Additionally, the long delay may compound itself if researchers discover that a first set of inclusion\/exclusion criteria would not yield a large enough potential study subject pool. When the inclusion\/exclusion criteria are modified in an attempt to encompass more participants, the researcher may be forced to wait another month or longer before knowing if the change in criteria will indeed yield an appropriate number of possible study subjects.","Administrative Healthcare Claims Data for Detecting Medical Fraud","Data mining techniques known in the art have been used in an attempt to detect abnormalities in billing practices of physicians, through analysis of underlying claims data. For example, through claims data, one can attempt to determine whether there are any abnormalities or consistent differences in billing practices that would result in higher payments being directed to the physician in question.","Conventional techniques, however, suffer from the same or similar problems discussed above\u2014namely, lengthy analysis times. Additionally, because of the vast amount of data that may be associated with a claims database, traditional techniques have not been able to take advantage of certain statistical techniques that would provide particularly useful information concerning potential fraud. For example, statistical techniques that employ the factorials of extremely large numbers are not undertaken at least because the calculations would cause \u201cdata overflow\u201d errors, or other errors that would slow or stop an analysis.","Administrative Healthcare Claims Data for Other Applications","Mining administrative healthcare claims data for other applications suffers similar problems concerning long computation times and delay. The problems are believed to discourage researchers and others from taking advantage of the full potential of claims data.","The referenced shortcomings of conventional methodologies mentioned above are not intended to be exhaustive, but rather are among many that tend to impair the effectiveness of previously known techniques concerning data mining and aggregated analysis of large amounts of healthcare claims data. Other noteworthy problems may also exist; however, those mentioned here are sufficient to demonstrate that the methodology appearing in the art have not been altogether satisfactory and that a significant need exists for the techniques described and claimed here.","Techniques disclosed here may be used to improve data mining and analysis of administrative healthcare claims data. These techniques are applicable to a vast number of applications, including but not limited to (a) the identification of potential clinical trial investigators, identification of potential subject populations for clinical trial participation or analyzing the feasibility of clinical trials, (b) the identification of medical expert witnesses, medical directors, or other medical professionals, (c) the investigation of medical fraud, and (d) marketing. Medical research applications may also benefit from the techniques of this disclosure. Although focused on administrative healthcare claims data, the same techniques can be applied to other types of data.","In different embodiments, the techniques of this disclosure improve the speed of data mining and analysis of administrative healthcare claims data through the creation and use of specialized searching tables (SSTs). The ability to use certain statistical calculations is provided. Further, those statistical calculations can be accomplished quickly through the creation and use of factorial tables including logarithmic entries, which make it possible to work with very large numbers and data sets. For example, hypergeometric statistical calculations can be performed quicker using these tables than by traditional techniques.","In one respect, the invention involves a computerized method. One or more exclusion or inclusion criteria are defined. One or more specialized searching tables are pre-generated using the one or more exclusion or inclusion criteria. The specialized searching tables are searched. Through the searching step, data is identified within a data set that matches the one or more exclusion or inclusion criteria. Through the searching step, a geographical area is identified corresponding to the data that matches the one or more exclusion or inclusion criteria. A customized report is generated using the identified data and geographical area. The method may also include (a) pre-generating one or more factorial tables, where the factorial tables include logarithmic entries, (b) comparing one or more data records against a plurality of other records, and (c) calculating a hypergeometric statistical result based on the comparing step using the one or more factorial tables.","In another respect, the invention involves a computerized method for identifying potential subjects for a clinical trial. One or more exclusion or inclusion criteria are defined for the clinical trial. One or more specialized searching tables are pre-generated using administrative healthcare claims data and the one or more exclusion or inclusion criteria. The specialized searching tables are searched. Through the searching step, subjects are identified within the administrative healthcare claims data who match the one or more exclusion or inclusion criteria. Through the searching step, a geographical area is identified corresponding to the subjects who match the one or more exclusion or inclusion criteria. A customized report is generated using the identified subjects and geographical area. Defining one or more exclusion or inclusion criteria may include selecting criteria using a Venn diagram. Defining one or more exclusion or inclusion criteria may include selecting one or more medical diagnosis codes. Identifying the geographical area may include identifying a zip code. The customized report may include a map illustrating subjects according to location. The method may also include identifying potential clinical investigators for the clinical trial through searching of the specialized searching tables and generating a customized report using identified investigators and a corresponding geographical area. One or more investigator databases may be used to identify the investigators. The method may also include, prior to the generating of the customized report, defining a minimum subject participation and modifying the one or more exclusion or inclusion criteria if the number of subjects within the administrative healthcare claims data who match the one or more exclusion or inclusion criteria does not meet the minimum subject participation. Such modifying may be done automatically. Such modifying may be done automatically and iteratively until the minimum subject participation is met. This technology may be embodied on a computer readable medium comprising computer executable instructions that, when executed, carry out the techniques described here.","In another respect, the invention involves a computerized method for recruiting a medical professional. One or more exclusion or inclusion criteria are defined for the medical professional. One or more specialized searching tables are pre-generated using administrative healthcare claims data and the one or more exclusion or inclusion criteria. The specialized searching tables are searched. Through the searching step, medical professionals are identified within the administrative healthcare claims data who match the one or more exclusion or inclusion criteria. Through the searching step, a geographical area is identified corresponding to the medical professionals who match the one or more exclusion or inclusion criteria. A customized report is generated using the identified medical professionals and geographical area. Defining one or more exclusion or inclusion criteria may include selecting criteria using a Venn diagram. Defining one or more exclusion or inclusion criteria may include selecting one or more medical diagnosis codes. The medical professionals may include physicians being recruited as an expert witness for litigation. The method may also include determining if one or more of the physicians have previous experience as an expert witness, through correlation with one or more expert databases. This technology may be embodied on a computer readable medium comprising computer executable instructions that, when executed, carry out the techniques described here.","In another respect, the invention involves a computerized method for statistical calculations based on administrative healthcare claims data. Administrative healthcare claims data is searched. One subset of the administrative healthcare claims data is compared against a plurality of other subsets of the administrative healthcare claims data. A hypergeometric statistical result is calculated based on the comparing step using one or more pre-generated factorial tables, the factorial tables including logarithmic entries. Calculating may include one or more calculations using the logarithmic entries followed by one or more exponential operations. The method may also include using the hypergeometric statistical result to detect medical-related fraud. The one subset may include medical coding data associated with a first physician and the plurality of other subsets may include medical coding data associated with a plurality of other physicians. The plurality of other physicians may be selected to be within the same specialty as the first physician. The method may also include generating a customized report comparing the first physician versus the plurality of other physicians. The customized report may include a graph of utilization percentage versus medical code for the first physician and the plurality of other physicians. The method may also include using the hypergeometric statistical result to rate one physician versus other physicians. The method may also include using the hypergeometric statistical result to identify potential subjects for a clinical trial. The method may also include using the hypergeometric statistical result to recruit a medical professional for use as an expert witness for litigation. This technology may be embodied on a computer readable medium comprising computer executable instructions that, when executed, carry out the techniques described here.","In another respect, the invention involves a computerized method, in which one or more specialized searching tables are pre-generated using administrative healthcare claims data. One or more factorial tables are pre-generated, the factorial tables including logarithmic entries. The specialized searching tables are searched. Through the searching step, one or more records are identified within the administrative healthcare claims data that matches one or more search criteria. The one or more records are compared against a plurality of other records of the administrative healthcare claims data. A hypergeometric statistical result is calculated based on the comparing step using the one or more factorial tables. A customized report is generated using the one or more records and the statistical result. The one or more search criteria may include one or more exclusion or inclusion criteria selected using a Venn diagram. The calculating may include one or more calculations using the logarithmic entries followed by one or more exponential operations. This technology may be embodied on a computer readable medium comprising computer executable instructions that, when executed, carry out the techniques described here.","As used in this disclosure, an \u201cinclusion criteria\u201d means a parameter that aims at including certain data in search results. An \u201cexclusion criteria\u201d aims to exclude certain data in search results. Inclusion and exclusion criteria are relative terms\u2014an inclusion criteria may by necessity exclude some data and vice-versa. In general, an exclusion or inclusion criteria is simply a searching parameter. Specifically, exclusion or inclusion criteria can be any parameters that define a search and operate to filter or potentially filter data.","As used in this disclosure the term, \u201cpre-generate\u201d means to generate prior to any searching step.","As used in this disclosure the term, \u201cSpecialized Searching Table\u201d or \u201cSST\u201d means a custom, indexed data table organized according to predefined exclusion or inclusion criteria, the indexed table populated with a subset of information from one or more larger tables. The SST is designed to optimize or speed the searching of data, at the expense of added disk space or other memory, for it reproduces a subset of information from one or more larger tables into a separate table that is then searched. One SST can act in concert with one or more other SSTs to achieve a search. Searching of SSTs can be done in parallel, serially, or a combination thereof. In one embodiment, an SST or set of SSTs may be built with or on a FACT table using a concatenated index (an index containing several fields and leading with the appropriate field(s)). In such an embodiment, optimal queries only use the SST index structure and not interact with the FACT table. In this disclosure, SSTs may also be referred to as \u201cpacked\u201d tables.","As used in this disclosure, \u201cadministrative healthcare claims data\u201d or \u201chealthcare data\u201d is used according to its ordinary meaning in the art and should be interpreted to include, at least, data organized electronically that is searchable via computer algorithm and which contains records associated with one or more medical procedures, prescriptions, diagnoses, medical devices, etc.","As used in this disclosure, \u201cmatch\u201d in the context of a search should be interpreted to include exact matches as well as substantial matches or matches set up with a pre-defined tolerance.","As used in this disclosure the term, \u201ccustomized report\u201d means an output (hard-copy or soft-copy) that is individually tailored for the user (e.g., person or entity) through the inclusion of a result or result summary prompted through user input. A customized report need not be unique to a user.","As used in this disclosure the term, \u201cminimum subject participation\u201d is any quantitative measure of a minimum level of participation such as subject total or subject density.","As used in this disclosure the term, \u201cfactorial table\u201d is an indexed data table whose entries include factorial values for one or more numbers. In a preferred embodiment, a factorial table is an indexed data table whose entries include logarithmic representations of factorial values for one or more numbers.","The term \u201ccode keys,\u201d as used herein, represents any desired searchable attribute.","In one embodiment, \u201ccode keys\u201d may represent diagnosis codes, prescription codes, procedure codes, or medical device codes.","The terms \u201ca\u201d and \u201can\u201d are defined as one or more unless this disclosure explicitly requires otherwise.","The term \u201capproximately\u201d and its variations are defined as being close to as understood by one of ordinary skill in the art. In one non-limiting embodiment the terms are defined to be within 10%, preferably within 5%, more preferably within 1%, and most preferably within 0.5%. The term \u201csubstantially\u201d and its variations are defined as being largely but not necessarily wholly what is specified as understood by one of ordinary skill in the art. In one non-limiting embodiment the terms refer to ranges within 10%, preferably within 5%, more preferably within 1%, and most preferably within 0.5% of what is specified.","The terms \u201ccomprise\u201d (and any form of comprise, such as \u201ccomprises\u201d and \u201ccomprising\u201d), \u201chave\u201d (and any form of have, such as \u201chas\u201d and \u201chaving\u201d), \u201cinclude\u201d (and any form of include, such as \u201cincludes\u201d and \u201cincluding\u201d) and \u201ccontain\u201d (and any form of contain, such as \u201ccontains\u201d and \u201ccontaining\u201d) are open-ended linking verbs. As a result, a method or device that \u201ccomprises,\u201d \u201chas,\u201d \u201cincludes\u201d or \u201ccontains\u201d one or more steps or elements possesses those one or more steps or elements, but is not limited to possessing only those one or more elements. Likewise, a step of a method or an element of a device that \u201ccomprises,\u201d \u201chas,\u201d \u201cincludes\u201d or \u201ccontains\u201d one or more features possesses those one or more features, but is not limited to possessing only those one or more features. Furthermore, a device or structure that is configured in a certain way is configured in at least that way, but may also be configured in ways that are not listed.","The term \u201ccoupled,\u201d as used herein, is defined as connected, although not necessarily directly, and not necessarily mechanically.","Other features and advantages will become apparent with reference to the following detailed description of specific, example embodiments in connection with the accompanying drawings.","Embodiments of this disclosure allow for the computerized identification of clinical trial investigators and potential subject populations for a clinical trial, the computerized identification of medical professionals (e.g., as an expert witness for litigation, as a medical director for large hospitals), determining the feasibility of a clinical trial, marketing, and other purposes. Embodiments of this disclosure also allow for the improved calculation of statistical results using, e.g., pre-generated tables and transforming factorial tables into their logarithmic equivalent. The statistical results can be used to further efforts for recruiting, marketing, and other applications.","Turning first to , an example method  is shown for identifying clinical investigators and potential subject populations for a clinical trial, determining the feasibility of a clinical trial, or recruiting a medical professional.","Defining Exclusion\/Inclusion Criteria","In step  of , one or more exclusion or inclusion criteria are defined. In a preferred embodiment, the exclusion or inclusion criteria are designed to correspond to criteria for a clinical trial or other application such as recruiting a medical professional and may include, but are not limited to, desired characteristics of a person (e.g., age, gender, etc.), a targeted health condition (e.g., possessing a certain diagnosis or being associated with a medical diagnosis code, etc.), or an employment characteristic (e.g., medical specialty, etc.). In a preferred embodiment, exclusion or inclusion criteria are defined through direct input from a user. In other embodiments, criteria may be input from other software (e.g., a parameter may be generated in software and output for use in a search). In still other embodiments, criteria may be pre-stored and loaded or otherwise accessed.",{"@attributes":{"id":"p-0052","num":"0051"},"figref":["FIGS. 4A-4B","FIG. 4A"]},"Criteria may be keywords specifically recognized by software, as shown in , in which software recognizes the terms \u201cGender,\u201d \u201cCondition,\u201d and \u201cAge.\u201d In the illustrated embodiment, \u201cGender\u201d refers to male\/female, \u201cCondition\u201d refers to a recognized medical condition, and \u201cAge\u201d refers to the age of a person. In other embodiments, suitable criteria (and optionally, here, medical conditions) may be chosen through a \u201cpull down\u201d or \u201cdrop down\u201d list or other mechanism known in the art. For example, one may be presented with a link stating, \u201cList possible criteria.\u201d Clicking this link would allow the user to view a list of criteria along with an explanation about each. In different embodiments, the list of criteria may be modifiable by the user, depending on application and depending on the underlying data being searched. For example, if access is provided to a database that has one or more new fields available for search, one may want to add additional search criteria based on those fields. In the embodiment of , software allows one to enter up to five criteria. In other embodiments, more or fewer may be provided. In other embodiments, the user may specify the number of criteria desired for a particular application. In one embodiment, entire groups of criteria may be defined by a \u201cone-click\u201d or other shortcut manner by, e.g., providing a button or menu that allows a user to define groups of criteria by shortcut name, or through reference to previously-used or saved groups of criteria. If a parameter is not recognized, an appropriate alert or error message may be generated.","Operators suitable for use in the illustrated embodiment of  include, but are not limited to, an equal sign (=), the greater-than sign (>), and the less-than sign (<). These operators act on, or modify the \u201cvalue.\u201d In other embodiments, the operator can be any mathematical or logical operator known in the art to assist in searching. For example, standard or customized Boolean-type operations may be permitted. As shown in , the operator for the first and second criteria is the equal sign (=), and the operator for the final parameter is the less-than-or-equal-to combination (<=). If an operator is not recognized, an appropriate alert or error message may be generated.","The \u201cvalue,\u201d acting with the operator and criteria, establishes what search is to be performed. In , the first, second and thirds values are, respectively, Female, Diabetes, and 35. Accordingly, the type of search the user may be interested in involves people who are female, are associated with the Diabetes medical condition, and who are 35 years old or younger. In one embodiment, values are entered directly by a user. In other embodiments, values may be pre-stored and loaded for use, selected individually or in groups, or otherwise entered.  is a list of example indications that can act as a value for a criteria such as \u201cCondition,\u201d which is shown in . More or fewer indications could be used in other embodiments.",{"@attributes":{"id":"p-0056","num":"0055"},"figref":["FIG. 6","FIG. 6","FIG. 6"]},"A Venn diagram or other technique may be used to help the user define or visualize exclusion or inclusion criteria.  illustrates using a Venn diagram for this purpose. The Venn diagram of  is used in conjunction with defining exclusion or inclusion criteria and appears in a \u201cwizard\u201d screen that is called once the user selects \u201cNext\u201d after setting up criteria, operators, and values in . The Venn diagram of  includes three circles, corresponding to the criteria previously defined in  and an additional two studies or groups. In this embodiment, each complete list of inclusion\/exclusion criteria creates one Venn diagram. The Venn diagrams allow users to overlap multiple studies or groups. Thus, the first circle in  corresponds to the entire set of criteria listed in FIG. A\u2014Females with Diabetes age 35 or younger. The second circle in  would correspond with another study\u2014for example, people with hypertension and hepatitis. The third circle in  would correspond with yet another study, trial, or protocol\u2014for example, children under the age of 12 who have received gamma. The Venn capability provides the ability to identify clinical investigators and potential patient populations who reside in the intersection of these three separate studies. The result may therefore be a list of providers who treat one or more patients who are female with diabetes who have hypertension and have had hepatitis who are under 12 and have received a gamma shot. This ability allows users to establish completely separate protocols for different drugs and to combine protocols in the future for new drugs and\/or different indications (potentially identifying off label use, etc.)","Of course, a different number of criteria would lead to a different Venn diagram, with different labels. The Venn diagram allows the user to tailor a search according to any of the exclusion or inclusion criteria alone or in any combination with other exclusion or inclusion criteria. In the illustrated embodiment of , there are seven different possibilities for searching, represented by the seven different checkboxes presented to a user. Here, by way of example only, the user has selected a search aimed at uncovering data that satisfies the Gender criteria (i.e., Female), the \u201cCondition\u201d criteria (i.e., HIV), and the Age criteria (i.e., 35 years old or younger). Had the user wished to search a different combination, he or she could have checked a different box. Additionally, a user may wish to chose more than one box to determine, e.g., the difference in the number of search \u201chits\u201d that would result if different exclusion or inclusion criteria combinations are considered. If more than one box is checked, search output may be arranged or formatted to indicate the search results corresponding to each check box.",{"@attributes":{"id":"p-0059","num":"0058"},"figref":["FIG. 6","FIG. 6","FIG. 6"],"b":"4"},"In one embodiment, the exclusion or inclusion criteria may be chosen to satisfy conditions of a clinical trial so that one may recruit subjects (e.g., so that one may, through the searching process, identify patients who would meet the clinical trial criteria). For example, if a researcher is recruiting patients for a drug study and desires volunteer patients over the age of 40 who have asthma but who are not taking a particular class of blood-pressure medications, those criteria may be entered.","In one embodiment, the criteria may be model criteria, chosen by the researcher simply to see if there would be a suitable subject pool if the model criteria were, in fact, actual requirements. In other words, criteria may be set up to model a clinical trial for potential subject identification. Such modeling may be used to provide a list of potential suggestions that could be implemented to meet clinical trial enrollment targets. Such modeling, discussed more below, may also allow a user to check on whether an investigator's enrollment predictions seem reasonable as well as provide temporal and geographic data on targeted enrollment. Additionally, modeling may allow a user to evaluate whether, based on patient base attrition, an investigator is likely to retain study trial subjects.","In another embodiment, the exclusion or inclusion criteria may be chosen to satisfy job conditions so that one may recruit a medical professional. For example, one may define exclusion or inclusion criteria to find a suitable medical expert witness for litigation. If litigation involves esophagus injuries associated with screws backing out from an anterior cervical plate, one could define exclusion or inclusion criteria designed to locate a surgeon who has performed over 100 cervical plate procedures during the past five years. If one believes that a female expert would \u201cconnect\u201d more with the jury, one could define a Gender criteria to be equal to Female. If one believes that the expert witness should be from Texas, one could set a Medical School criteria to be equal to one or more Texas schools. If one believes that an expert in the 45-65 age range would have the most credibility, an age criteria could be entered accordingly. In the same manner, one could tailor a search according to any desire, and limited only by the underlying data being searched. As with the clinical trial recruitment embodiment, one may define exclusion or inclusion criteria to simply satisfy different \u201cwhat if\u201d scenarios\u2014for example, \u201cwhat if\u201d I was looking for a male expert witness, age 52-55, who went to Baylor College of Medicine, and who has done over 400 cervical plate procedures\u2014how many such people could I possibly identify? If the answer is zero or extremely low, one may realize that expectations need to be modified.","In another embodiment, the exclusion or inclusion criteria may be chosen to satisfy job conditions so that one may recruit a medical professor, executive, researcher, etc. For example, one may define exclusion or inclusion criteria to find an executive with particular experience as a physician working with certain conditions.","These examples illustrate that it may be beneficial to combine data from one database with that of others so that additional criteria may be defined and used for various applications. For example, in the clinical trial recruitment applications, it may be beneficial to use information that identifies physicians as being past investigators for clinical trials so that one may identify not only volunteer study subjects, but also appropriate physicians with experience with trials. This may be accomplished by linking administrative healthcare claims databases with, for instance, an FDA-related database. Additionally, one may identify medical professionals who have testified at trial or deposition by correlating a physician match from a administrative healthcare claims database with a database that keeps track of expert witness experience.","Pre-Generating Specialized Searching Tables","In step  of , specialized searching tables (SSTs) are pre-generated. The SSTs of the present disclosure offer significant benefits in the area of administrative healthcare claims data searching as well as other fields at least because of the marked improvement in searching speed and any associated analysis\u2014albeit at the expense of using more disk space (or other computer memory) and the time associated with pre-generating the tables themselves, which may be done at off-peak times, if desired. In one embodiment, over 18 million patient healthcare claims histories, resulting in over 410 million records, may be \u201cpacked\u201d into SSTs to greatly improve data mining and analysis.","In one embodiment, SSTs may be pre-generated and used as follows. In this example, \u201ccode keys\u201d represent any desired searchable attribute including, but not limited to, Diagnosis codes, Prescription codes, Procedure Codes, etc. In this example, temporal information may also be utilized (e.g., service date) to define encounters in the data set. Those having ordinary skill in the art, having the benefit of this disclosure, will recognize that other types of information may be included for SSTs, according to need. The steps below represent an example only.","Creating SSTs","1. CREATE TABLE PACKED_TABLE as SELECT or INSERT","\/*+append*\/ . . . select distinct code_key, sex, birth date, geographic region, individual_id from fact table of other large table . . . ORDER BY code_key, sex, birth date, geographic region, individual_id setting appropriate block parameters to 0 space for updates","2. Index the PACKED_TABLE by code_key\n\n","1. set#1 is SELECT sex, birth date, geographic region, individual_id from PACKED_TABLE where code_key in (code_key1a, code_key2a, etc)","2. set#2 is SELECT sex, birth date, geographic region, individual_id from PACKED_TABLE where code_key in (code_key1b, code_key2b, etc)","3. set#N is SELECT sex, birth date, geographic region, individual_id from PACKED_TABLE where code_key in (code_key1X, code_key2X, etc)","4. The sets can then be combined via INTERSECT, UNION, MINUS, etc. to yield results corresponding to any\/all Venn region(s). Patient demographic summaries can also be calculated rapidly without requiring joins.","The SSTs of this disclosure can overcome a number of performance obstacles in both the gathering and the processing of large data sets for, e.g., real time statistical probability analysis (a.k.a. signal detection). This method can also contain temporal information (e.g., service date) to define encounters in the data set. Standard warehouse structures hold vast amounts of data and allow access to specific records via bitmapped indexes. However, when large population sets are desired, the shear number of disk seeks required via the bitmapped indexes becomes prohibitive for real-time processing. A solution provided herein is to use SSTs (or standard tables loaded and indexed in a particular way) where each block of each table is rich with the desired information. In other words, if one is searching for possible patients who have had at least one of a set of 10 diabetic medical codes, the user may be directed to a table which contains rows packed by codes. Each physical block read (disk seek) may contain hundreds of the desired individuals, whereas in a standard warehouse a block read will certainly hold at least one desired individual but likely, at most, only a few as dictated by chance.","The SSTs of this disclosure can also overcome statistical processing challenges present in traditional data mining operations. Statistical processing challenges can be encountered once individuals \u201cin play\u201d are ferreted out. For example, if checking for drug safety signals, each attribute of each individual \u201cin play\u201d must be accessed. Also, each outcome for these individuals must be accessed. These two sets may then be permeated against each other, one individual at a time. This process is repeated for each \u201cin play\u201d individual, and the cumulative set is then aggregated for each outcome for each base condition, for each drug in the pairing. For weak filters (filters than don't appreciably narrow the population) this can be a time consuming process. To alleviate this, and according to embodiments of this disclosure, all possible permutation sets may be pre-generated and \u201cpacked\u201d by individual IDs into an SST. The \u201cin play\u201d population may then be extracted from the pre-generated SST for aggregation.","Techniques of this disclosure may be advantageously applied to a wide variety of \u201craw data\u201d to be searched, a preferred embodiment involving administrative healthcare claims data. For example, SSTs can act on virtually any data to improve searching and analysis, and particularly administrative healthcare claims data, regardless of the format and size of the data being mined. In one embodiment, administrative healthcare claims data may be housed on computer servers or other storage devices at one physical location, while in other embodiments, the data may be dispersed about many locations. The data may be accessible via network. The data may be in one or more different formats or layouts. Advantageously, the techniques of this disclosure can lay on top of virtually any data, and the data can be linked together from a variety of sources. Because of inherent TCP transport delays, when dealing with large amounts of data spread across multiple platforms, there is a performance advantage to ensuring that each platform's SST data set be self contained in the sense that only aggregated values are passed to an application server, client or master database server. SSTs have significant performance benefits whenever data sets are primarily accessed by a non-unique field.","SSTs can be updated in a number of ways. In one embodiment, this activity may be done off hours. Updating may be done as follows, which are examples only:","1, Completely reprocess the SST from a FACT table each load cycle.","2. INSERT\/*+APPEND*\/ the new data into the existing table in the desired order. This will not \u201cpack\u201d as tightly as a complete reprocess but will still have most of the performance advantages provided by this disclosure.","Significant storage benefits can be reaped if the database in use allows field compression on leading and even non-leading index fields. Depending on the packing method used, indexes may be dropped prior to loading and re-created post-load. Or, indexes may be allowed to grow during the load process. However, repeated loads (and deletions) can have detrimental effects on index efficiency.","Searching the SSTs","In step  of , the SSTs are searched. The searching step involves the use of the SSTs to filter the underlying administrative healthcare claims data (or other data being searched) according to the exclusion or inclusion criteria defined by the user, and which may be associated with a Venn diagram or other tool. The searching step itself may be carried out according to techniques known by those of ordinary skill in the art.","In one embodiment, searching may be carried out using the techniques of the following example. In this example, one might be interested in determining how many physicians have treated a specific set of diagnoses in a certain way during an encounter (with a specific class of drugs and specific set of procedures) and how many patients each physician has treated in that way, total encounters by physician. This or a similar embodiment may be framed as shown in the following non-limiting scenarios:","1. One class of search only requires that the patient have had certain Dx, Px and Rx codes during an interval regardless of the intervals between the codes (e.g., in the last year which patients have had procedure \u201cA\u201d and drug \u201cB\u201d).","2. Another class of search imposes temporal restrictions on the order and interval between the Dx, Px and Rx codes. A temporal example might be: A novel treatment approach for disease \u201cX\u201d (coded as x1, x2, or x3) is procedure \u201cY\u201d (coded as y1 or y2) and drug \u201cZ\u201d (coded as z1 or z2). One may define this novel treatment as belonging to an \u201cencounter,\u201d which may require the diagnosis \u201cX\u201d to occur on or before \u201cY\u201d and \u201cZ,\u201d and furthermore, \u201cY\u201d must take place on at most 1 day after \u201cX,\u201d and \u201cZ\u201d must be filled on or at most 2 days after \u201cX\u201d. Now, one may find all patients who have had disease \u201cX\u201d in any of its x1, x2 or x3 forms who were treated with procedure \u201cY\u201d in forms y1 or y2 within 1 day and filled drug \u201cZ\u201d in forms z1 or z2 within 2 days.","3. This logic can be further extended into an \u201cepisode\u201d where the procedure \u201cY\u201d might have a much longer interval of treatments and even numerous treatments over this longer interval (same with drug \u201cZ\u201d).","Regardless of the logic, an output common to all three may be, in one embodiment: Count the unique patients that fit this logic, identify and count the providers that treat patients this way; which providers do this treatment the most often, and which providers do not treat patients this way.","One might also be interested in the demographics of the patient population that has participated in three code sets even if they did not happen in the same encounter. In this example one may create two SST structures (this could be done in one denormalized SST with a moderate performance hit due to increased row length).","Some fields in this example are shown with \u201cnatural\u201d values although it is generally desirable to use surrogate keys of the smallest possible length for the desired criteria. After aggregation, the surrogate keys may be joined to descriptive fields.","Demographics of the Patient Population that has Participated in all Three Code Sets Even if They Did not Happen in the Same Encounter:",{"@attributes":{"id":"p-0089","num":"0090"},"tables":{"@attributes":{"id":"TABLE-US-00001","num":"00001"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"thead":{"row":{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"\u2003\u2003SST#1 code_key, birth date, geo region, sex, individual_id"},{"entry":"Ordered by code_key indexed by code_key"},{"entry":"\u2003\u2003-- tally by gender breakout, age and region are similar"},{"entry":"\u2003\u2003Select sex, count(unique individual_id) unique_patients from"},{"entry":"\u2003\u2003("},{"entry":"\u2003\u2003Select birth date, geo region, sex, individual_id from SST#1 where"},{"entry":"dx IN (Dx1,Dx2,...)"},{"entry":"\u2003\u2003INTERSECT"},{"entry":"\u2003\u2003Select birth date, geo region, sex, individual_id from SST#1 where"},{"entry":"px IN (Px1,Px2,...)"},{"entry":"\u2003\u2003INTERSECT"},{"entry":"\u2003\u2003Select birth date, geo region, sex, individual_id from SST#1 where"},{"entry":"px IN (Rx1,Rx2,...)"},{"entry":"\u2003\u2003) group by sex"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}},{"entry":"Note:"},{"entry":"when available, temporary holding structures (e.g., global temp tables, WITH temp AS, etc.) can avoid multi-sourcing."},{"entry":"Analytic functions can also be used."}]}}}},"br":{}},{"@attributes":{"id":"p-0090","num":"0091"},"tables":{"@attributes":{"id":"TABLE-US-00002","num":"00002"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"thead":{"row":{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"WITH temp AS"},{"entry":"\u2003\u2003("},{"entry":"\u2003\u2003\u2003SELECT \/*+ first_rows*\/"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003b.*"},{"entry":"\u2003\u2003\u2003\u2003FROM (SELECT \/*+ index(a)*\/"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003individual_id"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003FROM MASTER_R1D a"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003WHERE a.code_key IN"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003(\u2018DX8648571\u2019,"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2009\u2018DX864857481\u2019,"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2009\u2018DX864857491\u2019,"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2009\u2018DX864857501\u2019,"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2009\u2018DX864857511\u2019,"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2009\u2018DX864857521\u2019,"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2009\u2018DX864857531\u2019,"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2009\u2018DX86485753481\u2019,"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2009\u2018DX86485753491\u2019,"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2009\u2018DX864857541\u2019,"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2009\u2018DX864857551\u2019,"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2009\u2018DX86485755481\u2019,"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2009\u2018DX86485755491\u2019,"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2009\u2018DX864857561\u2019,"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2009\u2018DX86485756481\u2019,"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2009\u2018DX86485756491\u2019,"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2009\u2018DX864857571\u2019,"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2009\u2018DX86485757481\u2019,"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2009\u2018DX86485757491\u2019,"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2009\u2018\u2019"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003)"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003INTERSECT"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003SELECT \/*+ index(a)*\/"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003individual_id"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003FROM MASTER_R1D a"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003WHERE a.code_key IN"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003(\u2018PX48485354541\u2019,"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2009\u2018PX51515349481\u2019,"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2009\u2018PX51515349491\u2019,"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2009\u2018PX51515349501\u2019,"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2009\u2018PX51515349511\u2019,"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2009\u2018PX51515349521\u2019,"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2009\u2018PX51515349541\u2019,"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2009\u2018PX51515349551\u2019,"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2009\u2018PX51515349561\u2019,"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2009\u2018PX51515349571\u2019,"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2009\u2018PX51515350491\u2019,"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2009\u2018PX51515350501\u2019,"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2009\u2018PX51515350511\u2019,"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2009\u2018PX51515351511\u2019,"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2009\u2018PX51515351521\u2019,"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2009\u2018PX51515351531\u2019,"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2009\u2018PX51515351541\u2019,"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2009\u2018\u2019"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003)"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003INTERSECT"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003SELECT \/*+ index(a)*\/"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003individual_id"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003FROM MASTER_R1D a"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003WHERE a.code_key IN (\u2018RX-ZITHROMAX\u2019, \u2018\u2019)) a,"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003INDIVIDUAL_ID_R1D b"},{"entry":"\u2003\u2003\u2003\u2003WHERE a.individual_id = b.individual_id)"},{"entry":"\u2003\u2003SELECT \u22121 ord, \u2018Male\u2019 ATTRIBUTE, SUM (CASE"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003WHEN gender = \u2018M\u2019"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003THEN 1"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003ELSE 0"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003END) counts"},{"entry":"\u2003\u2003\u2003\u2003FROM temp"},{"entry":"\u2003\u2003UNION ALL"},{"entry":"\u2003\u2003SELECT \u22122 ord, \u2018Female\u2019 ATTRIBUTE,"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003SUM (CASE"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003WHEN gender = \u2018F\u2019"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2002THEN 1"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003ELSE 0"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003END) counts"},{"entry":"\u2003\u2003\u2003\u2003FROM temp"},{"entry":"\u2003\u2003UNION ALL"},{"entry":"\u2003\u2003SELECT *"},{"entry":"\u2003\u2003\u2003\u2003FROM (SELECT rn, rn_chr ATTRIBUTE, counts"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003FROM (SELECT TO_CHAR (TRUNC"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003((SYSDATE \u2212 dob) \/ 365.25))"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003ATTRIBUTE,"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003COUNT"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003(UNIQUE CASE"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003WHEN gender = \u2018M\u2019"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003THEN individual_id"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003ELSE NULL"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003END"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003) counts"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003FROM temp"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2009GROUP BY TO_CHAR (TRUNC"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003((SYSDATE \u2212 dob) \/ 365.25))) a, YEARS b"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003WHERE b.rn_chr = a.ATTRIBUTE(+)"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003ORDER BY b.rn ASC)"},{"entry":"\u2003\u2003UNION ALL"},{"entry":"\u2003\u2003SELECT *"},{"entry":"\u2003\u2003\u2003\u2003FROM (SELECT rn + 500, rn_chr ATTRIBUTE, counts"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003FROM (SELECT TO_CHAR (TRUNC"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003((SYSDATE \u2212 dob) \/ 365.25))"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003ATTRIBUTE,"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003COUNT"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003(UNIQUE CASE"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003WHEN gender = \u2018F\u2019"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003THEN individual_id"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003ELSE NULL"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003END"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003) counts"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003FROM temp"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2009GROUP BY TO_CHAR (TRUNC"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003((SYSDATE \u2212 dob) \/ 365.25))) a, YEARS b"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003WHERE b.rn_chr = a.ATTRIBUTE(+)"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003ORDER BY b.rn ASC)"},{"entry":"\u2003\u2003UNION ALL"},{"entry":"\u2003\u2003SELECT *"},{"entry":"\u2003\u2003\u2003\u2003FROM ((SELECT 1000 rn,"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2018ZIP-3:\u2019"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2002|| SUBSTR (zipcode, 1, 3)"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2002||\u2018 \u2019"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2002|| TRIM (city)"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2002|| \u2018,\u2019"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2002|| state ATTRIBUTE,"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2002COUNT (UNIQUE individual_id) counts"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003FROM temp, ZIP3"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003WHERE SUBSTR (zipcode, 1, 3) = ZIP3"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003GROUP BY 1,"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2018ZIP-3:\u2019"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2002|| SUBSTR (zipcode, 1, 3)"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2002|| \u2018 \u2019"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2002|| TRIM (city)"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2002|| \u2018,\u2019"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2002|| state)"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003ORDER BY counts DESC);"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}]}}}}},"Determining how Many Physicians have Treated a Specific Set of Diagnosis in a Certain Way During an Encounter (with a Specific Class of Drugs and Specific Set of Procedures) and how Many Patients Each Physician has Treated in that Way, Total Encounters by Physician",{"@attributes":{"id":"p-0092","num":"0093"},"tables":{"@attributes":{"id":"TABLE-US-00003","num":"00003"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"thead":{"row":{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"\u2003\u2003SST#2 code_key, individual_id, encounter date, provider_key"},{"entry":"ordered by code_key indexed by code_key"},{"entry":"\u2003\u2003Select provider_key,count(unique individual_id) unique_patients,"},{"entry":"count(unique individual_id||encounter_date) total_encounters from"},{"entry":"\u2003\u2003("},{"entry":"\u2003\u2003Select individual_id, encounter date, provider_key from SST#2"},{"entry":"where dx IN (Dx1,Dx2,...)"},{"entry":"\u2003\u2003INTERSECT"},{"entry":"\u2003\u2003Select individual_id, encounter date, provider_key from SST#2"},{"entry":"where px IN (Px1,Px2,...)"},{"entry":"\u2003\u2003INTERSECT"},{"entry":"\u2003\u2003Select individual_id, encounter date, provider_key from SST#2"},{"entry":"where px IN (Rx1,Rx2,...)"},{"entry":"\u2003\u2003) group by provider_key"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}]}}}}},"In one embodiment, SSTs may also work together. Consider a query where one wants to know the ensuing \u201cplay-out\u201d after an individual has had a particular Diagnosis, procedure or drug:","Table SST#3 is code_key, individual_id, encounter_date ordered by code_key, individual_id and indexed by code_key","Table SST#4 is individual_id, encounter_date, code_key ordered by individual_id, encounter_date and indexed by individual_id","Then the combined query becomes (one of ordinary skill in the art will recognize that they are many ways to write the SQL):","Select SST#4* from SST#4, (Select individual_id, min(encounter_date) first_encounter from SST#3 group by individual_id) iv where SST#4.individual_id=iv.individual_id and SST#4.encounter_date>iv.first_encounter","Searching times of course depend on the amount of data involved. However, using SSTs can dramatically cut searching time to a degree where once-impossible or impracticable tasks can be completed\u2014e.g., identification of clinical investigators and potential subject populations for clinical trials in a quick enough manner so that exclusion or inclusion criteria can be modified \u201con the fly\u201d in an attempt to establish appropriate protocols with a feasible subject pool.","To highlight performance difference versus existing warehouse techniques, consider the following example query:",{"@attributes":{"id":"p-0100","num":"0101"},"tables":{"@attributes":{"id":"TABLE-US-00004","num":"00004"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"thead":{"row":{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"\u2003\u2003Select sex, count(unique individual_id) unique_patients from"},{"entry":"\u2003\u2003("},{"entry":"\u2003\u2003Select birth date, geo region, sex, individual_id from SST#1 where"},{"entry":"dx IN (Dx1,Dx2,...)"},{"entry":"\u2003\u2003INTERSECT"},{"entry":"\u2003\u2003Select birth date, geo region, sex, individual_id from SST#1 where"},{"entry":"px IN (Px1,Px2,...)"},{"entry":"\u2003\u2003INTERSECT"},{"entry":"\u2003\u2003Select birth date, geo region, sex, individual_id from SST#1 where"},{"entry":"px IN (Rx1,Rx2,...)"},{"entry":"\u2003\u2003) group by sex"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}]}}}}},"To accommodate itemized costs by procedure and the fact that hundreds of procedures may sometimes define an encounter, administrative healthcare claim tables generally contain a single procedure per line with other fields holding diagnosis codes or pointers to a table listing the diagnosis codes associated with the encounter. Prescription data is often, but not always, held in a separate table. Bitmapped indexes are not tailored to this class of problem because they cannot be directly merged\/ANDed to narrow the output set prior to table access because the codes are not required to be resident on the same line, only on the same patient. Building a claim table holding every triplet permutation over the covered patient interval could leverage bitmapped index power but would be cause the table to be prohibitively large for anything but a small subset of the population. Likewise \u201cx-walking\u201d columns into a single table is not practical when hundreds of codes are possible in an covered period.\n\n","The warehouse version of the query becomes:",{"@attributes":{"id":"p-0103","num":"0106"},"tables":{"@attributes":{"id":"TABLE-US-00005","num":"00005"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"thead":{"row":{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"\u2003\u2003Select p.sex,count(unique individual_id) unique_patients from"},{"entry":"\u2003\u2003("},{"entry":"\u2003\u2003Select individual_id from big_claim_table where px1 in"},{"entry":"(Px1,Px2,...) -- we must pull this set independently since they may not"},{"entry":"occur on the same line\/encounter as the Dx codes"},{"entry":"\u2003\u2003INTERSECT"},{"entry":"\u2003\u2003Select individual_id from big_claim_table where (dx1 IN"},{"entry":"(Dx1,Dx2,...) OR dx2 in (Dx1,Dx2,...) OR dx3 in (Dx1,Dx2,...)"},{"entry":"\u2003\u2003INTERSECT"},{"entry":"\u2003\u2003Select individual_id from big_pharnmacy_table where rx1 in"},{"entry":"\u2003\u2003(Rx1,Rx2,...)"},{"entry":"\u2003\u2003) iv ,patient_lu p where iv.individual_id=p.individual_id group"},{"entry":"\u2003\u2003by sex"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}]}}}}},"This query run on modest code sets compares as follows:",{"@attributes":{"id":"p-0105","num":"0108"},"tables":{"@attributes":{"id":"TABLE-US-00006","num":"00006"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"4"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"21pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"63pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"42pt","align":"center"}},{"@attributes":{"colname":"3","colwidth":"91pt","align":"center"}}],"thead":{"row":[{"entry":[{},{"@attributes":{"namest":"offset","nameend":"3","align":"center","rowsep":"1"}}]},{"entry":[{},"Data Structure","Physical I\/Os","Time to run"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"3","align":"center","rowsep":"1"}}]}]},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":{}}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"4"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"21pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"63pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"42pt","align":"char","char":"."}},{"@attributes":{"colname":"3","colwidth":"91pt","align":"center"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"Warehouse","400000","1000 seconds"]},{"entry":[{},"SST","3300","\u200310 seconds"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"3","align":"center","rowsep":"1"}}]},{"entry":[{},"Or 100 times faster."]}]}}]}},"br":{}},"In step  of , searching yields an identification of data matching the exclusion or inclusion criteria previously defined. Any data fields, portions of data fields, or combinations of data fields may be identified in response to the search. In one embodiment, the identification of data comes about through an exact match with search criteria. In other embodiments, a search \u201chit\u201d may result if there is an approximate or substantial match. For instance, if an exclusion or inclusion criteria seeks physicians who have treated 200 patients having a particular diagnosis, one embodiment would return information for physicians who have treated, e.g., 195 patients. Non-exact matches such as these can be indicated accordingly on a customized report. In one embodiment, the tolerance required to constitute a match may be defined by the user, and the tolerance may be different for different searching criteria.","In one embodiment, patients are identified who may be suitable candidates for a clinical trial, for which clinical trial exclusion or inclusion criteria were defined. In another embodiment, patients are identified for a clinical trial model, in order to determine the number of patients and in order to determine if exclusion or inclusion criteria should be modified to identify even more potential clinical investigators and study subject populations. In another embodiment, one or more medical professionals are identified. For example, a potential medical expert witness, professor, researcher, etc. may be identified.","In one embodiment, information regarding one or more geographic regions is also identified in response to a search. In addition to information that identifies a potential clinical investigator, study subject, or medical professional, the individual's detailed location may be also be identified. The identification of geographic information may be done automatically, with or without the user setting up a geographical search parameter. For example, if the only exclusion or inclusion criteria specified by a user involved the age of a patient, a search may nevertheless return information not only identifying patients matching the age limitation, but also identifying a general geographical region where those patients live. Such information may be pulled from a claims database or other data source being searched. As described more below, the geographic area information may be used advantageously to present search results in map-format.","In one embodiment, identification of individuals through searching is done without revealing any sensitive or protected material. In other words, the techniques of this disclosure may be used in a manner that would not violate privacy rules or laws (e.g., HIPAA regulations). Searching can take place on data that has been \u201cde-identified\u201d to remove reference to, e.g., patient names and social security numbers. Alternatively, searching can take place on original data and then de-identified so that privacy guidelines are met. Techniques known in the art may be used for the de-identification process.","Additional example situations involving the identification of information through searching, and particularly through searching using SSTs are provided below. Those having ordinary skill in the art will recognize that the techniques of this disclosure can be used to identify information for a multitude of other applications, encompassed by the claims.","Generate Customized Report","In step  of , a customized report is generated. The arrangement and format of the customized report may be dictated by the underlying application and desires of the user. In one embodiment, however, one may wish to choose between textual and map-based reports. In , such a choice is presented to a user through the \u201cwizard\u201d interface discussed previously. Here, a user can check for a text report or a map.","A text report may be set up to show the exclusion or inclusion criteria at issue, the search results themselves in columnar or other convenient format, and other information (automatically generated or chosen by the user) that may be pertinent to the analysis. Text reports need not be text-only. A text report can include graphics in the form of pictures, graphs, charts, or the like. A customized report may, if desired, be entirely graphical. Reports may be electronic (e.g., on a computer screen) and may include video clips, animations, or the like.",{"@attributes":{"id":"p-0113","num":"0116"},"figref":["FIG. 7","FIG. 7","FIG. 7"]},"A map-based report takes advantage of geographical information pulled from the underlying data and may advantageously provide a convenient mechanism for a user to quickly determine what area of the country would be a suitable site for a clinical trial, for a job fair, etc. With geographic information accessible, one may study geographic propagation associated with one or more criteria. For example, map based reports may be \u201cput in motion\u201d by employing successive map frames. This may essentially create a \u201cDoppler like\u201d view of the propagation of disease, test subjects, etc. over time. Intensity of the subjects area can be conveyed thematically by color, shading, object size, height, etc. The time period can be aggregated by any desired interval to visibly accent seasonal variations or long term trends.  are examples of map-based, customized reports. In , a United States map is shown, with an HIV patient distribution as an overlay. HIV patient totals are given as a function of region, and information is provided as a function of region for health providers.  is a zoomed-in region of the map of .","Those having ordinary skill in the art will recognize that several other types of customized reports may be generated. In one embodiment, for example, one may generate a customized report that is a provider report. The provider report assists in identifying and enrolling clinical investigators and may be similar to those shown in, e.g., .","It may also be beneficial to link data for clinical trial recruitment applications with data maintained by, e.g., the Center for Disease Control (CDC). This linkage, or other similar linkages, can allow one to calculate different metrics for confirmation of data or for other purposes. For example, by comparing to CDC data, one can determine if the number of hits received for a certain condition in a certain geographical area is \u201cin line\u201d with CDC information for the same condition. If a search indicates that City A has 5,000 adult patients with HIV (out of a total of 400,000 adult patients total for City A residing in the database(s) being searched), a comparison with CDC information regarding HIV rates in City A may serve as a confirmation of the 1.25% HIV rate or an alert if the CDC information indicates a substantially different rate. A confirmation with other data such as CDC data can be indicated on a customized report through a change in color, a confirmation symbol (e.g., a check mark), or the like.","In one embodiment, information pulled to generate a customized report may be linked or compared to information from the U.S. Census to arrive at patient percentage values or the like. For example, if 5,000 adult patients in City A are identified as being associated with HIV diagnoses, and one knows that there are 400,000 adult patients total for City A residing in the database(s) being searched, then one may assume that about 1.25% of City A's adults have an HIV-related diagnosis. If Census data reveals that City A has an adult population of 2.1 million people, one can estimate that there are approximately 2,100,000*0.0125=26,250 adults in City A with HIV-related diagnoses. These types of calculations may be used to effectively normalize data among cities with vastly different populations\u2014i.e., having 200 \u201chits\u201d in a large city may actually indicate that it would be a more difficult recruiting region than a significantly smaller city having the same number of hits. Using data that shows city size, one may readily arrive at density or other metrics, which would indicate the number of patients per square mile, etc. Of course, such techniques are not limited to the identification of clinical investigators and potential trial subjects. They may be applied to any application discussed here or recognized by those having ordinary skill in the art.","Turning now to , an example method  is shown for handling statistical calculations or operations, which can be based on administrative healthcare claims data or other data. In preferred embodiments, the statistical calculations or operations can be used in conjunction with the techniques illustrated in  and described herein.","Pre-Generate Factorial Table","The calculation of certain statistics has historically caused problems. With respect to hypergeometric calculations, there has been a tradeoff between accuracy and speed. In 1993, Wu published an algorithm that addressed a number of performance issues involved in processing, especially in dealing with the large factorial sets needed for hypergeometric calculations. However, while performance using the Wu algorithm may be faster than other conventional techniques, the inventors found it insufficient for, e.g., real time return sets from tens of thousands of attribute\/outcome sets requiring full processing. Also, the Wu code requires over\/under flow logic when generating an initial recursion point H(0).","The cumulative hypergeometric function can be calculated in a number of different ways. Typically each probability \u201cp\u201d value (pdf) is generated in some fashion and the values are summed to compute the cumulative density function (cdf). For large populations, challenges exist in both the pdf and cdf computations. The pdf calculation can be difficult because large factorials must be processed. Wu tackles this issue by breaking the factorial terms into prime numbers with exponents and reducing each prime\/exponent combination to its simplest value. The remaining primes in the numerator and denominator are then processed in such a way that over\/under flow issues will not manifest. Once this first probability term, h(0), is calculated, then the other probability terms can be quickly generated and summed to a cdf using known recursion techniques; again with care to avoid over\/under flow. Issues arise when many cdfs need to be computed and the factorial\u2212>prime sets\u2212>cancellation\u2212>computation process must be processed, and generate accurate results, many thousands of times. This process has limitations but can be coded directly in SQL (below) to return pdf values. Table ALL59701 contains the prime factorization of every factorial 0 through 59,701.",{"@attributes":{"id":"p-0121","num":"0124"},"tables":{"@attributes":{"id":"TABLE-US-00007","num":"00007"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0","pgwide":"1"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"266pt","align":"left"}},"thead":{"row":{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"\u2003\u2003SELECT \u2003value,row_number( ) \u2003over \u2003( \u2003ORDER \u2003BY \u2003value \u2003ASC)"},{"entry":"rank_asc,row_number( ) over ( ORDER BY value DESC) rank_desc"},{"entry":"\u2003\u2003FROM"},{"entry":"\u2003\u2003("},{"entry":"\u2003\u2003SELECT \u2002(POWER(primenumber,((n1_exp+n2_exp)\u2212(d1_exp+d2_exp)))) \u2002value"},{"entry":"FROM"},{"entry":"\u2003\u2003("},{"entry":"\u2003\u2003SELECT primenumber"},{"entry":"\u2003\u2003,SUM(CASE WHEN n1=number_of_interest AND prime_exp IS NOT NULL"},{"entry":"THEN prime_exp ELSE 0 END) N1_exp"},{"entry":"\u2003\u2003,SUM(CASE WHEN n2=number_of_interest AND prime_exp IS NOT NULL"},{"entry":"THEN prime_exp ELSE 0 END) N2_exp"},{"entry":"\u2003\u2003,SUM(CASE WHEN d1=number_of_interest AND prime_exp IS NOT NULL"},{"entry":"THEN prime_exp ELSE 0 END) D1_exp"},{"entry":"\u2003\u2003,SUM(CASE WHEN d2=number_of_interest AND prime_exp IS NOT NULL"},{"entry":"THEN prime_exp ELSE 0 END) D2_exp"},{"entry":"\u2003\u2003FROM"},{"entry":"\u2003\u2003("},{"entry":"\u2003\u2003SELECT\u2003\u2003a.n1,a.n2,a.d1,a.d2,number_of_interest\u2003\u2003\u2003,\u2003\u2003primenumber,"},{"entry":"(prime_exponent) prime_exp FROM (SELECT 866 n1,1591 n2,1745 d1,712 d2 FROM"},{"entry":"dual) a,ALL59701iot b"},{"entry":"\u2003\u2003WHERE \u2003a.d1=b.number_of_interest \u2003OR \u2003a.d2=b.number_of_interest \u2003OR"},{"entry":"a.n1=b.number_of_interest OR a.n2=b.number_of_interest"},{"entry":"\u2003\u2003) GROUP BY primenumber"},{"entry":"\u2003\u2003) WHERE ((n1_exp+n2_exp)\u2212(d1_exp+d2_exp))<>0"},{"entry":"\u2003\u2003) ORDER BY rank_asc*rank_desc"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}]}}}}},"Table ALL59701 showing the representation of 20000! expressed as a series of prime^exp values:",{"@attributes":{"id":"p-0123","num":"0126"},"tables":{"@attributes":{"id":"TABLE-US-00008","num":"00008"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"1","colwidth":"91pt","align":"center"}},{"@attributes":{"colname":"2","colwidth":"56pt","align":"center"}},{"@attributes":{"colname":"3","colwidth":"70pt","align":"center"}}],"thead":{"row":[{"entry":{"@attributes":{"namest":"1","nameend":"3","align":"center","rowsep":"1"}}},{"entry":["NUMBER_OF_INTEREST","PRIMENUMBER","PRIME_EXPONENT"]},{"entry":{"@attributes":{"namest":"1","nameend":"3","align":"center","rowsep":"1"}}}]},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":{}}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"1","colwidth":"91pt","align":"center"}},{"@attributes":{"colname":"2","colwidth":"56pt","align":"char","char":"."}},{"@attributes":{"colname":"3","colwidth":"70pt","align":"char","char":"."}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["20,000","2","19,995"]},{"entry":["20,000","3","9,996"]},{"entry":["20,000","5","4,999"]},{"entry":["20,000","7","3,332"]},{"entry":["20,000","Many others . . .","Many others . . ."]},{"entry":["20,000","19,991","1"]},{"entry":["20,000","19,993","1"]},{"entry":["20,000","19,997","1"]},{"entry":{"@attributes":{"namest":"1","nameend":"3","align":"center","rowsep":"1"}}}]}}]}}},"A faster method that still yields results accurate to 30 decimal places (as tested against published values, e.g., Wu) uses a different form of the factorial table. Instead of expressing factorials as prime^exp pairs, the factorial is expressed as a logarithm (any base). In this case the computation SQL can be written as:",{"@attributes":{"id":"p-0125","num":"0128"},"tables":{"@attributes":{"id":"TABLE-US-00009","num":"00009"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"21pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"196pt","align":"left"}}],"thead":{"row":{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"SELECT \u2003SUM (CASE"]},{"entry":[{},"\u2003\u2003\u2003\u2003WHEN n1c = number_of_interest"]},{"entry":[{},"\u2003\u2003\u2003\u2003\u2002THEN ln_factorial"]},{"entry":[{},"\u2003\u2003\u2003\u2003ELSE 0"]},{"entry":[{},"\u2003\u2003\u2003\u2002END)"]},{"entry":[{},"\u2003\u2003+ SUM (CASE"]},{"entry":[{},"\u2003\u2003\u2003\u2003WHEN n2c = number_of_interest"]},{"entry":[{},"\u2003\u2003\u2003\u2003\u2002THEN ln_factorial"]},{"entry":[{},"\u2003\u2003\u2003\u2003ELSE 0"]},{"entry":[{},"\u2003\u2003\u2003\u2002END)"]},{"entry":[{},"\u2003\u2003\u2212 SUM (CASE"]},{"entry":[{},"\u2003\u2003\u2003\u2003WHEN d1c = number_of_interest"]},{"entry":[{},"\u2003\u2003\u2003\u2003\u2002THEN ln_factorial"]},{"entry":[{},"\u2003\u2003\u2003\u2003ELSE 0"]},{"entry":[{},"\u2003\u2003\u2003\u2002END)"]},{"entry":[{},"\u2003\u2003\u2212 SUM (CASE"]},{"entry":[{},"\u2003\u2003\u2003\u2003WHEN d2c = number_of_interest"]},{"entry":[{},"\u2003\u2003\u2003\u2003\u2002THEN ln_factorial"]},{"entry":[{},"\u2003\u2003\u2003\u2003ELSE 0"]},{"entry":[{},"\u2003\u2003\u2003\u2002END) VALUE"]},{"entry":[{},"\u2003INTO h_accum"]},{"entry":[{},"\u2003FROM (SELECT \/*+ index(b)*\/"]},{"entry":[{},"\u2003\u2003\u2003\u2002n1 n1c, n2 n2c, d1 d1c, d2 d2c, number_of_interest,"]},{"entry":[{},"\u2003\u2003\u2003\u2002ln_factorial"]},{"entry":[{},"\u2003\u2003\u2002FROM ALL_10M b"]},{"entry":[{},"\u2003\u2003\u2002WHERE d1 = b.number_of_interest"]},{"entry":[{},"\u2003\u2003\u2003OR d2 = b.number_of_interest"]},{"entry":[{},"\u2003\u2003\u2003OR n1 = b.number_of_interest"]},{"entry":[{},"\u2003\u2003\u2003OR n2 = b.number_of_interest)"]},{"entry":[{},"GROUP BY n1c, n2c, d1c, d2c;"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}]}}}}},"Where the table ALL10M contains the log value of all factorials 0 through 10,000,000:",{"@attributes":{"id":"p-0127","num":"0130"},"tables":{"@attributes":{"id":"TABLE-US-00010","num":"00010"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0","pgwide":"1"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"105pt","align":"center"}},{"@attributes":{"colname":"2","colwidth":"154pt","align":"center"}}],"thead":{"row":[{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}},{"entry":["NUMBER_OF_INTEREST","LN_FACTORIAL"]},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}}]},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["20000","178075.621737198700312867928177311631722"]},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}}]}}}}},"As a check on the internal representation on the values one can see for this computation of large factorials the value differs from 20001 only in the 31st decimal place. Steps may also be taken to represent logarithmic values in the best possible datatype\/format for a given platform.",{"@attributes":{"id":"p-0129","num":"0132"},"tables":{"@attributes":{"id":"TABLE-US-00011","num":"00011"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"thead":{"row":{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"\u2003\u2003SELECT \u2003EXP(a.LN_FACTORIAL-B.LN_FACTORIAL)||\u2018\u2019"},{"entry":"factorial_check"},{"entry":"FROM"},{"entry":"\u2003\u2003(SELECT a.NUMBER_OF_INTEREST,a.LN_FACTORIAL"},{"entry":"ln_factorial FROM"},{"entry":"ALL_10M a WHERE a.NUMBER_OF_INTEREST=20001)a,"},{"entry":"\u2003\u2003(SELECT a.NUMBER_OF_INTEREST,a.LN_FACTORIAL"},{"entry":"ln_factorial FROM"},{"entry":"ALL_10M a WHERE a.NUMBER_OF_INTEREST=20000) b"},{"entry":"FACTORIAL_CHECK"},{"entry":"20000.9999999999999999999999999999999855"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}]}}}}},"In one embodiment, The table ALL10M may be created and populated in the following manner",{"@attributes":{"id":"p-0131","num":"0134"},"tables":{"@attributes":{"id":"TABLE-US-00012","num":"00012"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"thead":{"row":{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"CREATE TABLE ALL_10M"]},{"entry":[{},"("]},{"entry":[{},"\u2002NUMBER_OF_INTEREST NUMBER\u2003\u2003\u2003\u2003NOT NULL,"]},{"entry":[{},"\u2002LN_FACTORIAL \u2003NUMBER\u2003\u2003\u2003\u2003NOT NULL,"]},{"entry":[{},"\u2002CONSTRAINT PK_ALL_10M"]},{"entry":[{},"\u2002PRIMARY KEY"]},{"entry":[{},"\u2002(NUMBER_OF_INTEREST)"]},{"entry":[{},")"]},{"entry":[{},"ORGANIZATION INDEX"]},{"entry":[{},"NOLOGGING;"]},{"entry":[{},","]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}]}}}},"br":{}},{"@attributes":{"id":"p-0132","num":"0135"},"tables":{"@attributes":{"id":"TABLE-US-00013","num":"00013"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"thead":{"row":{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"CREATE OR REPLACE PROCEDURE Factorial10"]},{"entry":[{},"IS"]},{"entry":[{},"\u2002-- fills all_10M table with pairs of: number, LN(number!)"]},{"entry":[{},"\u2003i\u2003\u2003\u2003NUMBER;"]},{"entry":[{},"last_i\u2003\u2003NUMBER;"]},{"entry":[{},"BEGIN"]},{"entry":[{},"\u2002INSERT INTO ALL_10M"]},{"entry":[{},"\u2003\u2002VALUES (0, 0); -- 0!=1 and LN(1)=0"]},{"entry":[{},"\u2002last_i := LN (1);"]},{"entry":[{},"\u2002FOR i IN 1 .. 10000000"]},{"entry":[{},"\u2002LOOP"]},{"entry":[{},"\u2003INSERT INTO ALL_10M"]},{"entry":[{},"\u2003\u2003VALUES (i, LN (i) + (last_i));"]},{"entry":[{},"\u2003last_i := LN (i) + last_i;"]},{"entry":[{},"\u2003\u2002IF i\/100000=ROUND(i\/100000) THEN -- commit every 100K"]},{"entry":[{},"\u2003\u2002COMMIT;"]},{"entry":[{},"\u2003\u2002dbms_output.put_line( i );"]},{"entry":[{},"\u2003\u2002END IF;"]},{"entry":[{},"\u2002END LOOP;"]},{"entry":[{},"\u2002COMMIT;"]},{"entry":[{},"END Factorial10;"]},{"entry":[{},"\/"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}]}}}}},"Hypergeometric calculations have a wide range of uses. One such use pertains to the generation of probability scores for drug safety measurements. Consider that two populations are very similar except that one group has taken drug \u201cA\u201d and the other group has taken drug \u201cB\u201d (or a placebo, or no drug at all). At the initiation of each drug the index_date is defined. The index date is the beginning of the \u201coutcome\u201d period. Typically, a patient is exposed to a new drug, procedure, diagnosis, event, etc. on the index date. This new condition could be as varied as \u201cstopped smoking,\u201d \u201creceived coronary bypass surgery,\u201d \u201cbegan taking drug X,\u201d \u201cwas diagnosed with a hernia,\u201d \u201cbegan working at a particular location or job,\u201d \u201cbegan seeing a particular physician,\u201d or any other event, medical or non-medical. The index date for each individual in both population set is then normalized to zero. Prior to the index date each member has a set of attributes including but not limited to, gender, age, region, diagnosis, procedure, drug codes, etc. After the initiation of the drugs all following codes are tagged as emergent. These emergent conditions may or may not be related to the index drugs. If the two populations are well matched, one can surmise that adverse drug effects related to, say, drug A, will be more prevalent in the drug A population immediately or after prolonged exposure to drug A. Certain subgroups and even \u201csub-sub\u201d groups may be especially susceptible to these adverse effects. For instance women may be more susceptible to, say, dizziness when taking drug \u201cA\u201d than men taking drug \u201cA\u201d.",{"@attributes":{"id":"p-0134","num":"0137"},"tables":{"@attributes":{"id":"TABLE-US-00014","num":"00014"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"5"},"colspec":[{"@attributes":{"colname":"1","colwidth":"49pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"35pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"35pt","align":"left"}},{"@attributes":{"colname":"4","colwidth":"49pt","align":"left"}},{"@attributes":{"colname":"5","colwidth":"49pt","align":"left"}}],"thead":{"row":[{"entry":{"@attributes":{"namest":"1","nameend":"5","align":"center","rowsep":"1"}}},{"entry":["Cluster","Population","Condition","Signal Drug A","Signal Drug B"]},{"entry":{"@attributes":{"namest":"1","nameend":"5","align":"center","rowsep":"1"}}}]},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["ALL","ALL","Dizziness","weak","none"]},{"entry":["Sub group","Women","Dizziness","moderate","none"]},{"entry":["Sub-sub group","Women","Dizziness","strong","none"]},{"entry":[{},"on"]},{"entry":[{},"Thyroid"]},{"entry":[{},"drugs"]},{"entry":{"@attributes":{"namest":"1","nameend":"5","align":"center","rowsep":"1"}}}]}}}}},"It should be noted that an adverse signal could be actually reflecting the suppression of an outcome by the other comparing drug. (e.g., if drug B happens to cure dizziness in women on thyroid drugs and drug A neither causes or suppresses dizziness then drug A could show a \u201cdizziness\u201d signal even though the symptom was no higher than the rate in women taking thyroid medication in the general population).","Using such techniques and those of the rest of this disclosure, one may be capable of, among other things, rapidly:","a. Creating attribute clusters;","b. Creating outcome clusters;","c. Scoring all permutations of attribute\/outcome clusters (i.e. finding the sub groups with the strongest signals for each emergent condition); and","d. Presenting only the most significant permutations.","In one embodiment, a solution to problems associated with prior algorithms is, in general, two-fold: (1) eliminate the expensive initial factorial operation associated with hypergeometric calculations by using a table containing pre-generated factorials (e.g., caching the natural log(LN) or LOG 10 value (or other differently-based log value) of each factorial), and (2) code the recursion for the H(x) integration entirely in logarithms until a final cumulative P value is computed.","In step  of , one or more factorial tables are pre-generated. In a preferred embodiment, these specialized tables allow for the calculation of hypergeometric statistical results, and they ensure that such calculation proceeds swiftly. The factorial tables may be similar to look-up tables, in which the logarithm of different factorial numbers are listed for quick access. As explained more below, after calculations or other operations are performed using the logarithms, an exponential can be taken.","Search Administrative Healthcare Claims Data","In step  of , administrative healthcare claims data is searched. In other embodiments, different types of data may be searched using the same techniques. In fact, any searchable repository of data (e.g., database) may benefit from this disclosure, and particularly data for which hypergeometric statistical results are desired. The actual execution of the search in step  depends upon what statistical result or analysis the user is seeking to generate. But, in a preferred embodiment, the search step  entails the searching of records so that one subset can be compared against another, as detailed below.","In one embodiment, search step  may entail the searching of one or more SSTs, as detailed above and herein. For example, search step  may encompass the searching of one or more SSTs alone or in combination with the searching of raw data from one or more databases. In the situation in which SSTs are being searched, the user may see even greater speed and efficiency.","Comparing One Subset Versus Others","In step  of , one subset of administrative healthcare claims data is compared against other subsets of the administrative healthcare claims data in order to arrive at a statistical result (see discussion below for embodiments in which the statistical result is based on a hypergeometric calculation). In a preferred embodiment, information associated with one patient or physician is compared against information associated with all other patients or physicians. The first subset may be a single record or group of records associated with an individual, while the other subset may be a million or more records associated with other individuals. In other embodiments, the record or records associated with an individual can be compared against the records of those who have something in common with the individual\u2014for example, the records of one physician can be compared against records of other physicians practicing in the same medical specialty. Or, the record or records of an individual can be compared against the records of other patients who suffer from the same or similar medical condition. Those having ordinary skill in the art will recognize that the selection of different searching subsets can be chosen at will, and according to desire, in accord with the type of statistical result being sought.","Calculating Hypergeometric Statistical Result","In step  of , a hypergeometric statistical result is calculated based on the comparing step , and using the one or more pre-generated factorial tables of step .","To detect fraudulent coding patterns, discussed more below, one may compare the medical coding of an individual doctor against the coding patterns of all other doctors in that specialty, and all the doctors in the top three specialties that have billed against the same diagnostic code. The current state of the art hypergeometric method for doing this analysis against approximately ten million lives would require approximately 100 hours to execute on modern database hardware. As a result, this sort of comprehensive fraud detection would be limited to specific physicians that are suspect of fraudulent behavior.","Using pre-generated factorial tables and the other innovations of this disclosure, however, (1) eliminates the expensive initial factorial operation by using a table containing pre-generated factorials (e.g., caching the LOG 10 value of each factorial) and, (2) coding the recursion for the hypergeometric values entirely in logarithms until a final cumulative value is computed. This process reduces the calculation time for the same fraud screen against approximation ten million lives to approximately six minutes (a speed increase of about 1000 times). As a result, a fraud screen can be continuously run against a much larger number of doctors, and new hypothesis for fraud detection can be developed much more quickly (e.g., six minutes to see if there is a useful signal, instead of 100 hours). With this type of speed, one can apply different \u201cwhat if\u201d tests to extremely large data sets and get answers in minutes and hours, not weeks and months.","Computationally expensive processes in the hypergeometric calculations have been recoded by the inventors using factorial lookups and natural logarithms to yield accurate P values in milliseconds. As specified by Wu (shown here in the two equation sets immediately below) and others, a specific pdf can be obtained by direct calculation of factorials. Below, N is the total population, n is a subgroup of the population, r is the sample set taken form the population without replacement, and x is the number of \u201chits\u201d in the sample set.",{"@attributes":{"id":"p-0150","num":"0153"},"maths":{"@attributes":{"id":"MATH-US-00001","num":"00001"},"math":{"@attributes":{"overflow":"scroll"},"mrow":{"mrow":[{"mrow":{"mi":"h","mo":"\u2061","mrow":{"mo":["(",")"],"mrow":{"mrow":{"mi":["x","r"],"mo":";"},"mo":[",",","],"mi":["n","N"]}}},"mo":"=","mfrac":{"mrow":[{"mrow":[{"mi":"n","mo":"!"},{"mi":"r","mo":"!"},{"mrow":{"mo":["(",")"],"mrow":{"mi":["N","n"],"mo":"-"}},"mo":"!"},{"mrow":{"mo":["(",")"],"mrow":{"mi":["N","r"],"mo":"-"}},"mo":"!"}],"mo":["\u2062","\u2062","\u2062"]},{"mrow":[{"mi":"N","mo":"!"},{"mi":"x","mo":"!"},{"mrow":{"mo":["(",")"],"mrow":{"mi":["n","x"],"mo":"-"}},"mo":"!"},{"mrow":{"mo":["(",")"],"mrow":{"mi":["r","x"],"mo":"-"}},"mo":"!"},{"mrow":{"mo":["(",")"],"mrow":{"mi":["N","n","r","x"],"mo":["-","-","+"]}},"mo":"!"}],"mo":["\u2062","\u2062","\u2062","\u2062"]}]}},{"mrow":[{"mi":"where","mo":["\u2062","\u2062"],"mstyle":{"mspace":{"@attributes":{"width":"0.8em","height":"0.8ex"}}},"mrow":{"mi":"max","mo":"\u2061","mrow":{"mo":["(",")"],"mrow":{"mn":"0","mo":",","mrow":{"mi":["r","N","n"],"mo":["-","+"]}}}}},{"mrow":{"mi":"min","mo":"\u2061","mrow":{"mo":["(",")"],"mrow":{"mi":["r","n"],"mo":","}}},"mo":"."}],"mo":["\u2264","\u2264"],"mi":"x"}],"mo":[",","\u2062"],"mstyle":{"mtext":{}}}}}},"Or, for the simple case when x=0",{"@attributes":{"id":"p-0152","num":"0155"},"maths":[{"@attributes":{"id":"MATH-US-00002","num":"00002"},"math":{"@attributes":{"overflow":"scroll"},"mtable":{"mtr":[{"mtd":{"mrow":{"mrow":{"mi":"h","mo":"\u2061","mrow":{"mo":["(",")"],"mrow":{"mrow":{"mn":"0","mo":";","mi":"r"},"mo":[",",","],"mi":["n","N"]}}},"mo":["=","\u2062"],"mi":{},"mfrac":{"mrow":[{"mrow":[{"mi":"m","mo":"\u2061","mrow":{"mo":["(",")"],"mrow":{"mi":"m","mo":"-","mn":"1"}}},{"mo":["(",")"],"mrow":{"mi":["m","r"],"mo":["-","+"],"mn":"1"}}],"mo":["\u2062","\u2062","\u2062","\u2062"],"mstyle":[{"mspace":{"@attributes":{"width":"0.8em","height":"0.8ex"}}},{"mspace":{"@attributes":{"width":"0.8em","height":"0.8ex"}}}],"mi":"\u2026"},{"mrow":[{"mi":"N","mo":"\u2061","mrow":{"mo":["(",")"],"mrow":{"mi":"N","mo":"-","mn":"1"}}},{"mo":["(",")"],"mrow":{"mi":["N","r"],"mo":["-","+"],"mn":"1"}}],"mo":["\u2062","\u2062","\u2062","\u2062"],"mstyle":[{"mspace":{"@attributes":{"width":"0.8em","height":"0.8ex"}}},{"mspace":{"@attributes":{"width":"0.8em","height":"0.8ex"}}}],"mi":"\u2026"}]}}}},{"mtd":{"mrow":{"mrow":{"mo":["=","\u2062"],"mi":{},"mfrac":{"mrow":[{"mrow":[{"mi":"m","mo":"!"},{"mrow":{"mo":["(",")"],"mrow":{"mi":["N","r"],"mo":"-"}},"mo":"!"}],"mo":"\u2062"},{"mrow":[{"mi":"N","mo":"!"},{"mrow":{"mo":["(",")"],"mrow":{"mi":["m","r"],"mo":"-"}},"mo":"!"}],"mo":"\u2062"}]}},"mo":","}}}]}}},{"@attributes":{"id":"MATH-US-00002-2","num":"00002.2"},"math":{"@attributes":{"overflow":"scroll"},"mrow":{"mrow":[{"mi":["where","m"],"mo":["\u2062","\u2062"],"mstyle":{"mspace":{"@attributes":{"width":"0.8em","height":"0.8ex"}}}},{"mi":"N","mo":"-","mrow":{"mi":"n","mo":"."}}],"mo":"="}}}]},"Prior to recursion, if the starting pdf value (initial recursion point) is not zero because, e.g.,:\n\n",{"@attributes":{"id":"p-0154","num":"0159"},"tables":{"@attributes":{"id":"TABLE-US-00015","num":"00015"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"thead":{"row":{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"\u2003\u2003SELECT SUM (CASE"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003WHEN n1c = number_of_interest"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2002THEN ln_factorial"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003ELSE 0"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2002END)"},{"entry":"\u2003\u2003\u2003\u2003+ SUM (CASE"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003WHEN n2c = number_of_interest"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2002THEN ln_factorial"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003ELSE 0"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2002END)"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003+ SUM (CASE"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003WHEN n3c = number_of_interest"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2002THEN ln_factorial"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003ELSE 0"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2002END)"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003+ SUM (CASE"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003WHEN n4c = number_of_interest"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2002THEN ln_factorial"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003ELSE 0"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2002END)"},{"entry":"\u2003\u2003\u2003\u2003\u2212 SUM (CASE"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003WHEN d1c = number_of_interest"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2002THEN ln_factorial"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003ELSE 0"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2002END)"},{"entry":"\u2003\u2003\u2003\u2003\u2212 SUM (CASE"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003WHEN d2c = number_of_interest"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2002THEN ln_factorial"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003ELSE 0"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2002END)"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2212 SUM (CASE"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003WHEN d3c = number_of_interest"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2002THEN ln_factorial"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003ELSE 0"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2002END)"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2212 SUM (CASE"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003WHEN d4c = number_of_interest"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2002THEN ln_factorial"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003ELSE 0"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2002END)"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2212 SUM (CASE"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003WHEN d5c = number_of_interest"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2002THEN ln_factorial"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003ELSE 0"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2002END) VALUE"},{"entry":"\u2003\u2003\u2003INTO h_accum"},{"entry":"\u2003\u2003\u2003FROM (SELECT \/*+ index(b)*\/"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2002n1 n1c, n2 n2c, n3 n3c, n4 n4c, d1 d1c, d2 d2c,d3 d3c,"},{"entry":"d4 d4c,d5 d5c, number_of_interest,"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2002ln_factorial"},{"entry":"\u2003\u2003\u2003\u2003\u2002FROM ALL_10M B"},{"entry":"\u2003\u2003\u2003\u2003\u2002WHERE d1 = B.number_of_interest"},{"entry":"\u2003\u2003\u2003\u2003\u2003OR d2 = B.number_of_interest"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003OR d3 = B.number_of_interest"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003OR d4 = B.number_of_interest"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003OR d5 = B.number_of_interest"},{"entry":"\u2003\u2003\u2003\u2003\u2003OR n1 = B.number_of_interest"},{"entry":"\u2003\u2003\u2003\u2003\u2003OR n2 = B.number_of_interest"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003OR n3 = B.number_of_interest"},{"entry":"\u2003\u2003\u2003\u2003\u2003OR n4 = B.number_of_interest);"},{"entry":"\u2003\u2003\u2002h_sum := EXP (h_accum);"},{"entry":"\u2003\u2003\u2002h_all := h_accum;"},{"entry":"\u2003\u2003\u2002tail_integration_pt:=1 for typical h(0) starts;"},{"entry":"\u2003\u2003or tail_integration_pt:=(n\u2212(ntot\u2212r))+1 <for starting at first"},{"entry":"\u2003\u2003defined point>;"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}]}}}}},"Once the ln(pdf) is processed, shown here as h_accum, it can be directly converted via exp(h_accum), shown as h_sum. This pdf can then be used to recursively generate the additional terms in one of two ways. If one wishes to avoid over\/under flow issues at the expense of a modest performance hit, the recursion steps can be processed in logarithms.",{"@attributes":{"id":"p-0156","num":"0161"},"tables":{"@attributes":{"id":"TABLE-US-00016","num":"00016"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"56pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"161pt","align":"left"}}],"thead":{"row":{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"FOR i IN tail_integration_pt .. k"]},{"entry":[{},"\u2002LOOP"]},{"entry":[{},"\u2003x := i \u2212 1;"]},{"entry":[{},"\u2003h_all :="]},{"entry":[{},"\u2003\u2003h_all + LN ( (n \u2212 x)"]},{"entry":[{},"\u2003\u2003\u2003\u2003* (r \u2212 x)"]},{"entry":[{},"\u2003\u2003\u2003\u2003\/ (x + 1)"]},{"entry":[{},"\u2003\u2003\u2003\u2003\/ (ntot \u2212 n \u2212 r + x + 1));"]},{"entry":[{},"\u2003h_sum := h_sum + EXP (h_all);"]},{"entry":[{},"\u2002END LOOP;"]},{"entry":[{},"\u2002RETURN h_sum;"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}]}}}}},"Alternately, one can recursively process in natural numbers after the exp conversion taking care to avoid over\/underflow.",{"@attributes":{"id":"p-0158","num":"0163"},"tables":{"@attributes":{"id":"TABLE-US-00017","num":"00017"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"56pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"161pt","align":"left"}}],"thead":{"row":{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"FOR i IN tail_integration_pt .. k"]},{"entry":[{},"\u2002LOOP"]},{"entry":[{},"\u2003x := i \u2212 1;"]},{"entry":[{},"\u2003h_all :="]},{"entry":[{},"\u2003\u2003h_all * ( (n \u2212 x)"]},{"entry":[{},"\u2003\u2003\u2003\u2003* (r \u2212 x)"]},{"entry":[{},"\u2003\u2003\u2003\u2003\/ (x + 1)"]},{"entry":[{},"\u2003\u2003\u2003\u2003\/ (ntot \u2212 n \u2212 r + x + 1));"]},{"entry":[{},"\u2003h_sum := h_sum + (h_all);"]},{"entry":[{},"\u2002END LOOP;"]},{"entry":[{},"\u2002RETURN h_sum;"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}]}}}}},"Yet another possibility is to repeatedly call the master SQL and \u201cexp\u201d and then sum each h(x) term one by one.","Hypergeometric processing has applications in quality control, pattern recognition, cluster validity analysis, tree classifier design, image template matching and other areas.","Techniques of this disclosure allow one to apply statistical methodology to large data sets or dynamic data feeds for real-time consideration of data population statistical characteristics. Table structures may be optimized such that blocks (e.g., ORACLE blocks) are \u201crich\u201d in the desired filter criteria. This enables access of hundreds of thousands of lines of data in a few seconds. One can thus quickly find data of interest, cluster it into appropriate groupings, apply hypergeometric processing to the data sets, and present only the \u201cinteresting\u201d cases, as determined by their hypergeometric score, to a user or other.","Detect Fraud, Rate Physicians, and Other Applications","In step  of , one uses the hypergeometric statistical result to draw some conclusion from the administrative healthcare claims data. In one embodiment, the steps of  may be used to determine whether one or more physicians may be involved with medical fraud. In such an embodiment, the search and comparison steps  and  may involve comparing billing practices (e.g., CPT or other medical codes) associated with the physician against the billing practices of other groups of physicians (e.g., against other groups in total, against groups having the same medical specialty, against groups sharing the same geographic region, against groups of similar age, etc.). In one embodiment, results of the fraud investigation can be output to form a customized report.","In the medical field, fraud detection is an area of interest. Opportunistic behavior by medical staff can manifest in unlikely proportions of lucrative procedures being performed. Rather than merely stating Dr. X performs procedure Y a certain percentage (e.g., 30%) more often than his or her peers, one can compute based on the total population of patients requiring procedure Y, the likelihood that Dr. X would have a certain number of patients (e.g., 30) requiring the procedure. If the likelihood is greater than a certain amount (e.g., 1 in 10,000,000 or other value defined by a user or other entity), action can be taken to look more closely at the case. This can be extended to any pairings of medical codes. For example, this may be extended to scenarios such as:\n\n","An example customized report may constitute a graph of utilization percentage versus medical billing code for a first physician versus a group of other physicians (e.g., others in his or her specialty). An example graph is shown in . There, the red bar (left) represents a physician under investigation. The blue bar (right) represents thousands of other physicians practicing in the same specialty. The data reveals that the physician under investigation utilizes billing code X significantly more than his or her peers. This may signify fraud.","Comparing one subset of individuals versus another and searching for resulting patterns, especially in conjunction with hypergeometric calculations, can be applied to many other applications other than medical fraud detection. In one embodiment, one may use the comparisons and other steps like those in  to rate or score physicians. Any comparison in view of a peer group can constitute a score. For physician quality scoring, one might measure patient wellness (according to one or more of many methods known in the art) across various ETG groupings and determine a physician's quality of care measure against peers treating individuals in similar ETG groups. This could be extended to look for unconventional treatment patterns that yield beneficial results even though they may not conform to existing \u201cbest practices\u201d. This may or may not be a drug related effect, or may involve combination of drugs and procedures. For example, one may generate statistics such as: of the W people with chronic condition \u201cA\u201d who had a typically unrelated procedure \u201cB\u201d, X showed improvement as measured by lab results OC1, hospital stay length OC2, or other wellness indication. Of the total population of Y people with chronic condition \u201cA\u201d who had similar treatments except for procedure \u201cB\u201d, Z showed improvement. Such statistics may point to beneficial results, correlations, may suggest research avenues, etc.","In another embodiment, the comparisons may be used for marketing. One may run comparisons of physicians based on geographical area to determine if there are any patterns concerning drugs being prescribed. If it is found that one region lags behind, marketers may want to focus on that region to bring its statistics in line with other regions. One may run comparisons of physicians based on where they went to medical school to determine if there is a correlation between medical school and drugs being prescribed. Marketers may then want to focus efforts on some schools more than others. Those of ordinary skill in the art, with the benefit of this disclosure, will recognize many other similar marketing applications.","In another embodiment, the comparisons may be used for drug safety studies. The i3 APERIO DRUG REGISTRY product from Ingenix, Inc. can be used for such purposes. By looking at the relevant intersection points of thousands, millions, or billions of data elements, one may answer the question, \u201cIs drug A safer to use than drug B?.\u201d Specifically, the use of a real-time hypergeometric calculation allows one to place billions of data points into their respective numerator\/denominator positions and to identify the most meaningful data intersections needed to answer the question. It is believed that this will open up new signal detection opportunities in at least the drug safety and fraud detection arenas. Combining the innovations with hypergeometric calculations described here with the SST innovations, one may quickly integrate hypergeometric functions with extremely large data sets and scale to even larger data sets, while minimally reducing speed.","SSTs Used in Combination with Hypergeometric Factorial Tables","In different embodiments, both SSTs and factorial tables having logarithmic entries for improved hypergeometric calculations can be used together to provide even more robust data mining and analysis. For example, the hypergeometric may be used to find disease hot spots and physician hot spots. Additionally, both SSTs and factorial tables may be used in conjunction with the identification of potential subjects for clinical trials. Using both SSTs and factorial tables, clinical research organizations are given the ability to pinpoint a population substrate and identify clinical investigators for drug trials to answer questions such as, \u201cWhat is the context of the disease in the U.S. and which sites should be selected for conduct of the study based on disease prevalence?\u201d","Both SSTs and factorial tables can also be applied to applications in which a medical expert witness (or other professional) is being recruited. For example, attorneys and law firms are provided the ability to answer questions such as, \u201cWho can provide medical expert testimony in a case involving medical conditions A, B and C?\u201d","Use of Technology for Modeling","Because one can so quickly mine and analyze massive amounts of administrative healthcare claims data, the techniques of this disclosure allow users to model clinical trials or other application in real-time or near-real-time. For example, individual iterations of modeling may occur approximately once per 10 minutes in one embodiment, once per 5 minutes in another embodiment, once per 2 minutes in another embodiment, once per 1 minute in another embodiment, once per 30 seconds in another embodiment, once per 10 seconds in another embodiment, once per 5 seconds in another embodiment, once per 2 seconds in another embodiment, once per second in another embodiment, once per \u00bd second in another embodiment, once per \u00bc second in another embodiment, and so on. Using clinical trials as an example, one may define exclusion or inclusion criteria, run a search, determine a potential subject pool, and model how that population pool would change by modifying the exclusion or inclusion criteria. In a preferred embodiment, the user compares the potential subject pool returned by a search against a minimum subject participation\u2014a quantitative measure (e.g., total subjects, subject density, etc.). If the potential subject pool is less than the minimum subject participation, the user may modify the exclusion or inclusion criteria until the minimum subject participation is met or exceeded.","In one embodiment, the exclusion or inclusion criteria may be modified automatically until a target subject participation value is at least met or exceeded (or, in other embodiments, until the potential patient pool is less than a given target). The automatic modifications to the exclusion or inclusion criteria may be done within pre-defined ranges set up by the user, according to different priorities assigned by the user, or through other means to ensure that the modified exclusion or inclusion criteria still define a useful criteria for the study. Neural network technology or other computer science principles known in the art may be employed in this modeling process. In embodiments using automatic modifications, the modifications may be done iteratively until a target is met. If the exclusion or inclusion criteria do not meet the target after a pre-determined number of iterations or time period an error or alert may be generated.","Use of Technology for Additional Applications","The numbered list below summarizes some applications already discussed here and includes others that may be readily adapted using the description above. The applications listed below may make use of, e.g., SSTs and\/or factorial tables for searching and statistical calculations, respectively. The applications may track the steps in  or . For example, following , searching criteria may be defined, followed by pre-generation of SSTs, followed by a search, followed by the identification of pertinent \u201chits,\u201d followed by the generation of a customized report presenting or summarizing information about the \u201chits\u201d in a user-convenient format, such as by geography. Likewise for statistical calculations, and following , the applications listed below may pre-generate one or more factorial tables, search data, compare one subset of data versus others, calculate a statistic using the factorial tables, and then reach (or assist the user in reaching or postulating) a conclusion based on the statistic that was calculated.","Those having ordinary skill in the art will recognize that there are many other applications, and those mentioned here are not meant to be an exhaustive list.","1. Clinical trial investigator and potential trial subject identification. Researchers are able to identify potential clinical investigators and subject pools quickly. Geographical or other types of reports may be generated. Due to speed, clinical trials can be modeled to arrive at exclusion or inclusion criteria suitable for enrolling investigators and recruiting an adequate number of subjects in advance of first participant's, first visit. This application can save millions of dollars by avoiding delay during the recruitment phase of a trial.","2. Recruitment of medical directors and expert medical witnesses. Lawyers, legal assistants, hospital and physician recruiting firms, or other users are able to quickly determine where a suitable medical directors and medical expert witnesses may be found or, more directly, who might be a good fit for a particular position or case. Searching parameters may be chosen to ensure that the expert will have the appropriate experience or attributes being sought by the recruiting firm or legal team. Due to speed, modeling may be done\u2014the user can model the number or type of experts depending on changes in searching parameters.","3. Analysis of medical litigation. Through the improved data mining and analysis techniques described here (e.g., use of SSTs and\/or factorial tables), lawyers or other users may assess the validity or likelihood of success of a medical litigation. For example, one may analyze a historic claims profile to identify treatment profiles of subjects similar to a client to determine, e.g., other maladies suffered by such individuals. By comparing the client's treatments against hundreds, thousands, or millions of similarly-situated treatment patterns, the legal team may discover \u201choles\u201d in their case or opportunities for additional arguments\/theories.","4. Counseling of medical school students. By mining and analyzing claims data, one may present to medical school students (or others) an overview of the type of diseases that, on average, are being seen by specific specialties. Such information may be useful to various specialty colleges for recruitment.","5. Ancillary Product Marketing. Through analysis of claims data or other data, one may correlate, e.g., use of a particular drug with other buying habits (e.g., if a person uses drug A, it appears he or she may also use drug\/product X, Y, or Z). This information may be used in marketing. For example, marketers may use the correlations for online advertising\u2014along with links related to drug A, it may be useful to display banner ads for drug\/product X, Y, or Z.","6. Job Placement. One may find suitable job candidates for a variety of different jobs using the techniques described here. For example, pharmaceutical companies may search for a candidate having particular experience as a physician prescribing a certain category of drugs, or investigating certain illnesses.","7. Continuing Medical Education (CME). Techniques of this disclosure may allow CME companies the ability to \u201cmeasure\u201d practice patterns before and after a CME program.","8. Marketing. Techniques of this disclosure may allow marketers the ability to \u201cmeasure\u201d how effective an ad campaign was. For example, if millions of dollars were spent in city X promoting drug Y, one could monitor over a period of time whether the prescribing habits of physicians changed with respect to drug Y in city X. One can monitor for changes in physician treatments, drug penetration, sales volume, growth trends, etc.","9. Regulatory application. Regulatory agencies charged with the responsibility of clinical trial oversight (e.g., FDA in the US, EMEA in the European Union) would be able to modify requirements for registrational trials based on feasibility evidence as well as evaluate how compliant to marketing approval particular drugs are with reports generated from techniques of this disclosure. Agencies such as the CDC or WHO would be able to implement real time surveillance programs of drug resistance and emerging pathogens from techniques of this disclosure.","10. Physician Scorecard. By comparing one physician versus others in virtually any category supported by underlying data, a scorecard system can be created. This, for example, may provide a comparative analysis for each physician of coding practices relative to a chosen benchmark (could be billing, outcomes, script usage, etc.). An \u201calerting\u201d system may be included to trigger an alarm if threshold values are exceeded.","11. PharmaSolutions. Through quick analysis of claims data, one may characterize key issues for a drug prior and after market launch\u2014(1) compliance with regimen compared to others in-class meds, (2) usage of drugs by indication that would provide insight into marketing needs, (3) prescribing habits of particular drugs or drug classes based on physician profiling (e.g., demographics or training institution)]., or (4) evaluation of drug utilization based on demographics or other available claims variables for market characterization.","12. Consumer Preventive Health Solutions. Through analysis of claims data as taught here, a health consumer could effectively \u201csee\u201d his or her future. For example, a person could enter his or her current demographic and disease characteristics and then \u201csee\u201d 5, 10, 15, and 20 years into the future by looking at similar consumers in that age group and look at what types of claims are being captured. Conversely, a health system may want to know what a particular consumer may face in terms of claims in the future. Decisions about such consumers as enrollees can then be made.","13. PhysicianClustering. In another marketing-related, application, one may cluster physicians by age, demographics, place of training and determine if there are marketing holes in their prescribing patterns. Or, one may be alerted to poor training that is responsible for illogical prescribing patterns.","14. HealthConsumer. Through analysis of claims data, one may find the \u201cbest fit\u201d physician for a particular patient. Health consumers would be able to evaluate, in real time, which physician best met their need with respect to (1) geographic location, (2) mix of patient population, (3) quality measure, and (4) outcomes for patient with similar disease profiles.","15. Serendipitous Reporting System (SRS): One may use hypergeometrics and SSTs to compare claims of subjects and retrospectively determine which interventions (procedure or drug) may have had a positive influence on their disease.","16. Disease Surveillance System Network (DSSN): One may use hypergeometrics and SSTs to identify in real time potential outbreaks of disease that would be considered statistically unlikely to be in accord with background rates.","Hardware","Turning now to , a schematic diagram of a computer system , including computer  is shown. Computer readable medium , which is here shown as a disk as an example, can be used to house software suitable for carrying out certain techniques of this disclosure. The software may be written using any of a number of programming languages. Suitable languages include, but are not limited to, BASIC, FORTRAN, PASCAL, C, C++, C#, JAVA, HTML, XML, PERL, SQL, db internal languages (e.g., PL\/SQL), etc. In one embodiment, commercially available software running one or more scripts or routines can be used for carrying out the invention. For example, one may use MICROSOFT EXCEL or another spreadsheet with appropriate database and analysis functionality to carry out the invention. One may use MATLAB or other mathematical packages for carrying out the invention as well. One may use commercial database software, scripting routines, and the like.","Computer readable medium  may be any medium available and which is suitable for storage and which allows for the eventual execution of code by a computing device. Code may be housed on a computer file, a software package, a hard drive, a FLASH device, a floppy disk, a tape, a CD-ROM, a DVD, a network drive, a hole-punched card, an instrument, an ASIC, firmware, a \u201cplug-in\u201d for other software, web-based applications, RAM, ROM, etc.","Computer  may be any computing device including but not limited to a personal computer (e.g., a desktop, laptop, tablet, pen, or other computer operated by a user), a personal digital assistant (PDA), or other devices.","In some embodiments, the computer-readable media  and computer  may be networked. One may use a terminal device running software from a remote server, wired or wirelessly. Input from a user or other coupled system components may be gathered through one or more known techniques such as a keyboard or mouse. Output, if desired, may be achieved through one or more known techniques such as an output file, printer, facsimile, e-mail, web-posting, or the like. Storage may be achieved internally or externally. Any integral or remote display type may be used including but not limited to a cathode ray tube (CRT) or liquid crystal display (LCD). One or more display panels may also constitute a display. In other embodiments, a traditional display may not be required, and the computer-readable media may operate through appropriate voice and\/or key commands.","The following examples are included to demonstrate specific embodiments of this disclosure. It should be appreciated by those of ordinary skill in the art that the techniques disclosed in the examples that follow represent techniques discovered by the inventors to function well in the practice of the invention, and thus can be considered to constitute specific modes for its practice. However, those of ordinary skill in the art should, in light of the present disclosure, appreciate that many changes can be made in the specific embodiments which are disclosed and still obtain a like or similar result without departing from the spirit and scope of the invention.","The code below is directed to one example embodiment and includes background information on the pre-generated tables used in the data mining algorithm.","Pre-Generated Tables with Drug Pair, Version Partitions","The following four tables are pre-populated and partitioned by drug pair and version.","CLUSTER_BASELINE_POPS\n\n",{"@attributes":{"id":"p-0199","num":"0206"},"tables":{"@attributes":{"id":"TABLE-US-00018","num":"00018"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"thead":{"row":{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"CREATE TABLE CLUSTER_BASELINE_POPS"]},{"entry":[{},"("]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"4"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"56pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"77pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"70pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"\u2002PRODUCT_ID","\u2002NUMBER","\u2002NOT NULL,"]},{"entry":[{},"\u2002VERSION_ID","NUMBER","NOT NULL,"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"4"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"56pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"84pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"63pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"\u2002NEWINDV_ID","\u2002VARCHAR2(17 BYTE)","NOT NULL,"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"4"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"56pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"77pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"70pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"\u2002GROUPFLAG","\u2002NUMBER(1)","\u2003NOT NULL,"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"56pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"147pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"\u2002ATTRIBUTE","VARCHAR2(30 BYTE),"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"\u2002ATTRIBUTE_VALUE VARCHAR2(64 BYTE)"]},{"entry":[{},")"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}]}}]}}},"Where product_id, and version_id are partitioning information","Newindv_id is a unique patient identifier","Groupfalg indicates the population set","Attribute and attribute value generalize all possible attributes, e.g.: newindiv_id 17234232 might have:",{"@attributes":{"id":"p-0204","num":"0211"},"tables":{"@attributes":{"id":"TABLE-US-00019","num":"00019"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"77pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"98pt","align":"left"}}],"thead":{"row":[{"entry":[{},{"@attributes":{"namest":"offset","nameend":"2","align":"center","rowsep":"1"}}]},{"entry":[{},"Attribute","Attribute Value"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"2","align":"center","rowsep":"1"}}]}]},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"Gender","Male"]},{"entry":[{},"Dx_code","\u2003410"]},{"entry":[{},"Region","South"]},{"entry":[{},"Px_code","87010"]},{"entry":[{},"Age","\u2003\u200227"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"2","align":"center","rowsep":"1"}}]}]}}}}},"CLUSTER_XD_XC_PREJOIN_DX_OP","This table contains all possible attribute\/outcome pairings for Dx outcome-outpatient events for each study participant.",{"@attributes":{"id":"p-0207","num":"0214"},"tables":{"@attributes":{"id":"TABLE-US-00020","num":"00020"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"thead":{"row":{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"CREATE TABLE CLUSTER_XD_XC_PREJOIN_DX_OP"]},{"entry":[{},"("]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"4"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"56pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"77pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"70pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"\u2002PRODUCT_ID","\u2002NUMBER","\u2002NOT NULL,"]},{"entry":[{},"\u2002VERSION_ID","NUMBER","NOT NULL,"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"4"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"56pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"84pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"63pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"\u2002NEWINDV_ID","\u2002VARCHAR2(17 BYTE)","NOT NULL,"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"4"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"56pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"77pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"70pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"\u2002GROUPFLAG","\u2002NUMBER(1)","\u2003NOT NULL,"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"56pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"147pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"\u2002ATTRIBUTE","VARCHAR2(30 BYTE),"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"\u2002ATTRIBUTE_VALUE VARCHAR2(64 BYTE),"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"70pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"133pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"\u2002OUTCOME_CLASS","\u2002VARCHAR2(22 BYTE),"]},{"entry":[{},"\u2002OUTCOME_TYPE","VARCHAR2(4 BYTE),"]},{"entry":[{},"\u2002DAYS_IN_STUDY","NUMBER"]},{"entry":[{},")"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"2","align":"center","rowsep":"1"}}]}]}}]}}},"Where outcome_class and outcome_type are generic fields for any outcome and days_in_study indicates when the outcome occurred as measured from the index_date, e.g.,:",{"@attributes":{"id":"p-0209","num":"0216"},"tables":{"@attributes":{"id":"TABLE-US-00021","num":"00021"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"4"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"77pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"49pt","align":"center"}},{"@attributes":{"colname":"3","colwidth":"77pt","align":"center"}}],"thead":{"row":[{"entry":[{},{"@attributes":{"namest":"offset","nameend":"3","align":"center","rowsep":"1"}}]},{"entry":[{},"Outcome_class","Outcome_type","days_in_study"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"3","align":"center","rowsep":"1"}}]}]},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"DX_OUTPATIENT","337","103,"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"3","align":"center","rowsep":"1"}}]}]}}}},"br":{},"b":"337"},"CLUSTER_XD_XC_PREJOIN_DX_IP","This table contains all possible attribute\/outcome pairings for Dx outcome-inpatient events for each study participant.","CLUSTER_XD_XC_PREJOIN_RX","This table contains all possible attribute\/outcome pairings for Rx outcome events for each study participant.","The CLUSTER_XD_CD_PREJOIN_{value} tables, such as the two mentioned above, may be of the following example form:",{"@attributes":{"id":"p-0215","num":"0222"},"tables":{"@attributes":{"id":"TABLE-US-00022","num":"00022"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"thead":{"row":{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"CREATE TABLE CLUSTER_XD_XC_PREJOIN_????"]},{"entry":[{},"("]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"4"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"56pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"77pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"70pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"\u2002PRODUCT_ID","\u2002NUMBER","\u2002NOT NULL,"]},{"entry":[{},"\u2002VERSION_ID","NUMBER","NOT NULL,"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"4"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"56pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"84pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"63pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"\u2002NEWINDV_ID","\u2002VARCHAR2(17 BYTE)","NOT NULL,"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"4"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"56pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"77pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"70pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"\u2002GROUPFLAG","NUMBER(1)","\u2003NOT NULL,"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"56pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"147pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"\u2002ATTRIBUTE","VARCHAR2(30 BYTE),"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"\u2002ATTRIBUTE_VALUE VARCHAR2(64 BYTE),"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"70pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"133pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"\u2002OUTCOME_CLASS","\u2002VARCHAR2(22 BYTE),"]},{"entry":[{},"\u2002OUTCOME_TYPE","VARCHAR2(4 BYTE),"]},{"entry":[{},"\u2002DAYS_IN_STUDY","NUMBER"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},")"]},{"entry":[{},"TABLESPACE USERS"]},{"entry":[{},"PCTUSED 0"]},{"entry":[{},"PCTFREE 10"]},{"entry":[{},"INITRANS 1"]},{"entry":[{},"MAXTRANS 255"]},{"entry":[{},"PARTITION BY RANGE (PRODUCT_ID, VERSION_ID)"]},{"entry":[{},"(\u2002partition terms)"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}]}}]}}},"Pre-generated tables not related to drug pairs","Additionally a couple other pre-generated tables are used.","ALL_CODE_XWALK","Contains Dx\/Px\/Rx code descriptions",{"@attributes":{"id":"p-0220","num":"0227"},"tables":{"@attributes":{"id":"TABLE-US-00023","num":"00023"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"175pt","align":"left"}}],"thead":{"row":{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"CREATE TABLE ALL_CODE_XWALK"]},{"entry":[{},"("]},{"entry":[{},"\u2002CODE_TYPE CHAR(2 BYTE),"]},{"entry":[{},"\u2002CODE_SET VARCHAR2(8 BYTE),"]},{"entry":[{},"\u2002CODE_DESC VARCHAR2(220 BYTE)"]},{"entry":[{},")"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}]}}}}},"Where code_type is PX, RX or DX, Code_set is the actual code, and code_desc is the description. Note this can be extended to any attribute requiring a description term.","ALL10M","This table contains the natural log of the factorial of each number from 0 through 10,000,000. This table is called by wu4_function9biot to provide pre-generated factorials for computation of the first P-value from which to integrate (usually zero but accommodates highly skewed sets where zero is not a viable starting pint).",{"@attributes":{"id":"p-0224","num":"0231"},"tables":{"@attributes":{"id":"TABLE-US-00024","num":"00024"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"thead":{"row":{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"CREATE OR REPLACE PROCEDURE Factorial10"]},{"entry":[{},"IS"]},{"entry":[{},"\u2002-- fills all_10M table with pairs of: number, LN(number!)"]},{"entry":[{},"\u2002i\u2003\u2003\u2003NUMBER;"]},{"entry":[{},"\u2002last_i\u2003\u2003NUMBER;"]},{"entry":[{},"BEGIN"]},{"entry":[{},"\u2002INSERT INTO ALL_10M"]},{"entry":[{},"\u2003\u2002VALUES (0, 0); -- 0!=1, ln(1)=0"]},{"entry":[{},"\u2002last_i := LN (1);"]},{"entry":[{},"\u2002FOR i IN 1 .. 10000000"]},{"entry":[{},"\u2002LOOP"]},{"entry":[{},"\u2003INSERT INTO ALL_10M"]},{"entry":[{},"\u2003\u2003VALUES (i, LN (i) + (last_i));"]},{"entry":[{},"\u2003last_i := LN (i) + last_i;"]},{"entry":[{},"\u2003\u2002IF i\/100000=ROUND(i\/100000) THEN"]},{"entry":[{},"\u2003\u2002COMMIT;"]},{"entry":[{},"\u2003dbms_output.put_line( i );"]},{"entry":[{},"\u2003END IF;"]},{"entry":[{},"\u2002END LOOP;"]},{"entry":[{},"\u2002COMMIT;"]},{"entry":[{},"END Factorial10;"]},{"entry":[{},"\/"]},{"entry":[{},"==========================="]},{"entry":[{},"CREATE TABLE ALL_10M"]},{"entry":[{},"("]},{"entry":[{},"\u2002NUMBER_OF_INTEREST NUMBER\u2003\u2003\u2003\u2003\u2003NOT NULL,"]},{"entry":[{},"\u2002LN_FACTORIAL\u2003\u2003NUMBER\u2003\u2003\u2003\u2003\u2003NOT NULL,"]},{"entry":[{},"\u2002CONSTRAINT PK_ALL_10M"]},{"entry":[{},"\u2009PRIMARY KEY"]},{"entry":[{},"\u2009(NUMBER_OF_INTEREST)"]},{"entry":[{},")"]},{"entry":[{},"ORGANIZATION INDEX"]},{"entry":[{},"NOLOGGING;"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}]}}}}},"Clustered Outcomes Processing Example","A client is interested in the outcomes associated with the population of patients taking thyroid hormones prior to their initiation date on the Ketek\/Biaxin drug pair. The user creates the filter \u201cIN Thyroid hormones\u201d and applies it to \u201cDx OUT\u201d in the data mining section for the Ketek\/Biaxin drug pair.","Process will then commence in multiple stages (in order of operation):","Identify, aggregate, join and filter attribute\/outcome pairs","1. Identify the population \u201cin play\u201d for the analysis, e.g., those taking thyroid hormones in the baseline period.","2. Collect all attributes belonging to these individuals in the appropriate pre-joined CLUSTER_BASELINE_POPS partition","3. Aggregate this set counting unique patients in each attribute","a. We'll call this Set \u201cA\u201d (Nd and Nc counts for each attribute)","Set \u201cA\u201d\u2014steps 1, 2, 3, 3a:",{"@attributes":{"id":"p-0234","num":"0241"},"tables":{"@attributes":{"id":"TABLE-US-00025","num":"00025"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"thead":{"row":{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"\u2003\u2003SELECT attribute,attribute_value"},{"entry":"\u2003\u2003,COUNT (UNIQUE CASE WHEN groupflag=1 THEN newindv_id"},{"entry":"ELSE NULL END) nd"},{"entry":"\u2003\u2003,COUNT (UNIQUE CASE WHEN groupflag=0 THEN newindv_id"},{"entry":"ELSE NULL END) nc"},{"entry":"\u2003\u2003FROM"},{"entry":"\u2003\u2003CLUSTER_BASELINE_POPS WHERE product_id=2 AND"},{"entry":"version id=200503 --"},{"entry":"\u2003\u2003AND newindv_id IN ( select distinct newindv_id from"},{"entry":"rx_baseline where drug_desc like \u2018%thyroid hormones%\u2019) -"},{"entry":"could be drug class, NDC codes, etc."},{"entry":"\u2003\u2003GROUP BY attribute,attribute_value;"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}]}}}}},"4. Create a placeholder attribute called \u201cBaseline\u201d and collect all attributes belonging to these individuals in the appropriate pre-joined CLUSTER_BASELINE_POPS partition (using GENDER to prune)","5. Aggregate this set counting unique patients in the \u201cBaseline\u201d","a. We'll call this Set \u201cB\u201d (Nd and Nc counts for \u201cBaseline\u201d, i.e. filter only attribute)","Set \u201cB\u201d\u2014steps 4, 5, 5a:",{"@attributes":{"id":"p-0239","num":"0246"},"tables":{"@attributes":{"id":"TABLE-US-00026","num":"00026"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"203pt","align":"left"}}],"thead":{"row":{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"SELECT attribute,attribute_value,SUM(nd) nd,SUM(nc) nc FROM"]},{"entry":[{},"("]},{"entry":[{},"SELECT \u2018Baseline\u2019 attribute,\u2018 \u2019 attribute_value"]},{"entry":[{},",COUNT (UNIQUE CASE WHEN groupflag=1 THEN newindv_id"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":"ELSE NULL END) nd"}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},",COUNT (UNIQUE CASE WHEN groupflag=0 THEN newindv_id"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":"ELSE NULL END) nc"}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"FROM"]},{"entry":[{},"CLUSTER_BASELINE_POPS WHERE product_id=2 AND"]},{"entry":[{},"version_id=200503"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":"AND"}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"attribute=\u2018GENDER\u2019 AND newindv_id IN ( select distinct"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"newindv_id from rx_baseline where drug_desc like"},{"entry":"\u2018%thyroid hormones%\u2019) - could be drug class, NDC codes, etc."}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"GROUP BY attribute,attribute_value"]},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}}]}}]}}},"6. Merge Sets \u201cA\u201d and \u201cB\u201d into Set \u201cAB\u201d (all Nd and Nc counts)","UNION the two sets together and tag the combined set nd_nc. We have now generated the counts for every possible attribute.","7. Collect all permutation sets belonging to these individuals in the appropriate pre-joined CLUSTER_XD_XC_PREJOIN_DX_OP partition. Now let's collect the outcome sets and count the outcome population for each attribute\/outcome pair.","8. Aggregate this set counting unique patients in each attribute\/outcome pairing","a. This becomes Cluster Set \u201cC\u201d (Xd and Xc counts for each attribute\/outcome pair)","Set \u201cC\u201d",{"@attributes":{"id":"p-0246","num":"0253"},"tables":{"@attributes":{"id":"TABLE-US-00027","num":"00027"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"203pt","align":"left"}}],"thead":{"row":{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"SELECT attribute,attribute_value,outcome_class,outcome_type"]},{"entry":[{},",COUNT (UNIQUE CASE WHEN groupflag=1 THEN newindv_id"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":"ELSE NULL END) xd"}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},",COUNT (UNIQUE CASE WHEN groupflag=0 THEN newindv_id"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":"ELSE NULL END) xc"}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"FROM"]},{"entry":[{},"CLUSTER_XD_XC_PREJOIN_DX_OP -- one of three outcome"]},{"entry":[{},"tables"]},{"entry":[{},"WHERE product_id=2 AND version_id=200503 AND"]},{"entry":[{},"newindv_id IN ( select distinct newindv_id from rx_baseline where"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"drug_desc like \u2018%thyroid hormones%\u2019) - could be drug class,"},{"entry":"NDC codes, etc."}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"GROUP BY attribute,attribute_value,outcome_class,outcome_type"]},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}}]}}]}}},"9. Create a placeholder attribute called \u201cBaseline\u201d and collect all outcome permutation sets belonging to these individuals in the appropriate pre-joined CLUSTER_XD_XC_PREJOIN_DX_OP partition (using GENDER to prune). Again using GENDER to ensure a look at the entire baseline population we'll count the outcome population for each baseline\/outcome pair.","10. Aggregate this set counting unique patients in each \u201cBaseline\u201d\/outcome pairing","a. This becomes Cluster Set \u201cD\u201d (Xd and Xc counts for each \u201cBaseline\u201d\/outcome pair)","Set \u201cD\u201d",{"@attributes":{"id":"p-0251","num":"0258"},"tables":{"@attributes":{"id":"TABLE-US-00028","num":"00028"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"203pt","align":"left"}}],"thead":{"row":{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"SELECT attribute,"]},{"entry":[{},"attribute_value,outcome_class,outcome_type,SUM(xd)"]},{"entry":[{},"xd,SUM(xc) xc"]},{"entry":[{},"FROM ("]},{"entry":[{},"SELECT \u2018Baseline\u2019 attribute,\u2018 \u2019"]},{"entry":[{},"attribute_value,outcome_class,outcome_type"]},{"entry":[{},",COUNT (UNIQUE CASE WHEN groupflag=1 THEN newindv_id"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":"ELSE NULL END) xd"}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},",COUNT (UNIQUE CASE WHEN groupflag=0 THEN newindv_id"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":"ELSE NULL END) xc"}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"FROM"]},{"entry":[{},"CLUSTER_XD_XC_PREJOIN_DX_OP -- one of three outcome"]},{"entry":[{},"tables"]},{"entry":[{},"WHERE product_id=2 AND version_id=200503 AND"]},{"entry":[{},"attribute=\u2018GENDER\u2019 -- Attach filter here AND newindv_id IN"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"( select distinct newindv_id from rx_baseline where drug_desc"},{"entry":"like \u2018%thyroid hormones%\u2019) - could be drug class, NDC codes, etc."}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"GROUP BY attribute,attribute_value,outcome_class,outcome_type"]},{"entry":[{},") GROUP BY attribute,"]},{"entry":[{},"attribute_value,outcome_class,outcome_type"]},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}}]}}]}}},"11. Merge Sets \u201cC\u201d and \u201cD\u201d into Set \u201cCD\u201d (all Xd and Xc count).","Merge the two sets using a UNION and tag as xd_cd","12. Join Set \u201cAB\u201d to Set \u201cCD\u201d by attribute becoming Set \u201cABCD\u201d Where Sets \u201cA\u201d and \u201cC\u201d form the clustered outcomes while sets \u201cB\u201d and \u201cD\u201d comprise the dynamic baseline.","13. Discard trivial cases keeping only rows where nd>3 AND nc>3 AND (xd+xc)>3 AND ((nc+nd)\u2212(xc+xd))>3","Using the code below, one can join the two sets (into \u201cABCD\u201d) and eliminate trivial cases (this is optional if one wants to keep and process such cases).\n\n","14. Process RR and Yates CI for Set \u201cABCD\u201d.","15. Suppress processing of uninteresting cases, processing only those where POWER(ABS(xd\u2212d+xc)*nd\/(nd+nc))\u22120.5,2)>=(4*(xd+xc)*nd\/(nd+nc)*(1-nd\/(nd+nc))) (this is not done at step 13 due to an Oracle nuance)","Begin Cumulative Hypergeometric computation (AKA cdf)","16. Pass Xprime, Nprime, Xtot, Ntot rows from Set \u201cABCD\u201d into the Oracle function wu4_function9biot","The code below works with the population sets in the attribute outcome pairs generated in steps 1 to 13. Drug and comparator values are swapped prior to hypergeometric computation if the comparator has the stronger outcome signal. The log 10 value of these signals are demarked with a flipped score sign. Prior to the hypergeometric calculation Wu4_funtion9biot( ) a case statement performs a secondary filter on uninteresting cases (those that will not have a significant score). This case statement can be removed if all cases are desired to be processed. The Relative Risk and Yates confidence interval are also processed in the code as supplementary information on the population set. The scores from the hypergeometric are converted by log 10 for readability but can be show in their original form if desired.",{"@attributes":{"id":"p-0262","num":"0270"},"tables":{"@attributes":{"id":"TABLE-US-00029","num":"00029"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"203pt","align":"left"}}],"thead":{"row":{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"d.attribute,d.attribute_value,a.code_desc \u201cAttribute value"]},{"entry":[{},"desc\u201d,d.outcome_class,d.outcome_type,o.code_desc \u201cOutcome type"]},{"entry":[{},"desc\u201d,d.xd,d.nd,d.xc,d.nc,"]},{"entry":[{},"CASE WHEN d.xc>0 THEN"]},{"entry":[{},"TO_CHAR( d.xd*d.nc\/(d.xc*d.nd),\u20189999990.9\u2019)"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":"ELSE"}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"\u2018--\u2019 END rr,"]},{"entry":[{},"CASE WHEN (x\u2212plower*x)>0 THEN"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":"(plower*x\/d.nd)\/((x\u2212plower*x)\/d.nc) ELSE 0"}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"END rrlower,"]},{"entry":[{},"CASE WHEN (x\u2212pupper*x)>0 THEN"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":"(pupper*x\/d.nd)\/((x\u2212pupper*x)\/d.nc) ELSE 0"}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"END rrupper,"]},{"entry":[{},"CASE WHEN cumul_hyper>1e\u2212128 THEN"]},{"entry":[{},"score_sign*TRUNC(LOG(10,d.cumul_hyper)) ELSE"]},{"entry":[{},"\u221210*score_sign END score"]},{"entry":[{},"FROM"]},{"entry":[{},"("]},{"entry":[{},"SELECT c.*,(\u2212b_high+SQRT(POWER(b_high,2)\u22124*a*c_high))\/"]},{"entry":[{},"(2*a) pupper,(\u2212b_low-SQRT(POWER(b_low,2)\u22124*a*c_low))\/"]},{"entry":[{},"(2*a) plower, CASE WHEN POWER(ABS(xd\u2212(xd+xc)*nd\/"]},{"entry":[{},"(nd+nc))\u2212.5,2) >= (8*(xd+xc)*nd\/(nd+nc)*(1\u2212nd\/(nd+nc)))"]},{"entry":[{},"THEN"]},{"entry":[{},"aperio.Wu4_Function9biot(x_prime,n_prime,xd+xc,nd+nc)"]},{"entry":[{},"ELSE 1 END cumul_hyper"]},{"entry":[{},"FROM"]},{"entry":[{},"("]},{"entry":[{},"SELECT b.*,1+d a,\u22122*pd_low\u2212d b_low,\u22122*pd_high\u2212d b_high,"]},{"entry":[{},"POWER(pd_low,2) c_low,POWER(pd_high,2) c_high FROM ("]},{"entry":[{},"SELECT a.*,xd+xc x,POWER(1.96,2)\/(xd+xc) d,(Xd\u2212.5)\/(xd+xc)"]},{"entry":[{},"pd_low,(Xd+.5)\/(xd+xc) pd_high FROM"]},{"entry":[{},"("]},{"entry":[{},"SELECT"]},{"entry":[{},"nd_nc.attribute,nd_nc.attribute_value,xd_xc.outcome_class,"]},{"entry":[{},"xd_xc.outcome_type,xd_xc.xd,nd_nc.nd,xd_xc.xc,nd_nc.nc"]},{"entry":[{},",CASE WHEN xd>(xd+xc)*nd\/(nd+nc) THEN xc ELSE xd END"]},{"entry":[{},"x_prime"]},{"entry":[{},",CASE WHEN xd>(xd+xc)*nd\/(nd+nc) THEN nc ELSE nd END"]},{"entry":[{},"n_prime"]},{"entry":[{},",CASE WHEN xd>(xd+xc)*nd\/(nd+nc) THEN \u22121 ELSE CASE"]},{"entry":[{},"WHEN xd= (xd+xc)*nd\/(nd+nc) THEN 0 ELSE 1 END END"]},{"entry":[{},"score_sign"]},{"entry":[{},"FROM"]},{"entry":[{},"Set \u201cABCD\u201d"]},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}}]}}]}}},"17. Wu4_function9biot will determine if the tail starting point is zero or some other value (for sets where zero is not valid)","a. For a zero tail start the natural log of the hypergeometric is computed directly in the All10M SQL call per the Wu (2.1) equation","b. For a non-zero tail start the natural log of the hypergeometric is computed directly in the All10M SQL call per the Wu (1.8) equation","18. These tail starting points are then recursively computed and summed up to the natural log Xprime value per the Wu (1.2) equation. The ln(cdf) is then converted to cdf using EXP( ) and truncated to an integer value.","Output filtering for Score and Dynamic Baseline","At this point in the processing the data set contains intermingled scored values for both clustered outcomes and dynamic baseline data.","19. Re-calculate the dynamic baseline Set \u201cBD\u201d as above for use as a comparison source. Set \u201cBD\u201d is processed and scored. This step is not necessary unless (as shown) one wants to implement logic such as \u201cdiscard any outcomes sets where the baseline data scores higher than the sub-cluster\u201d. Note that some of these sets (e.g., \u201cB\u201d and \u201cD\u201d) can be written to use alternate methods of holding the processed data for later use in the query. Some of these include global temp tables, WITH temp AS, and other constructs that can pool sets into memory\/disk can be used to curtail the reprocessing of the baseline sets","20. Filter out rows in Set \u201cABCD\u201d that have scores below 3.","21. Remove clustered outcome rows with scores>=3 if the dynamic baseline score is equal to or exceeds the clustered outcome score for a given outcome. The following code section is optional and serves the purpose of tagging the attributes and outcomes with descriptive information, showing only scores with an absolute values 3 or greater, and discarding outcome sets that have a lower score than their baseline counterparts.",{"@attributes":{"id":"p-0272","num":"0280"},"tables":{"@attributes":{"id":"TABLE-US-00030","num":"00030"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"thead":{"row":{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":") d, ALL_CODE_XWALK a,ALL_CODE_XWALK o"},{"entry":"..."},{"entry":"WHERE nd>3 AND nc>3 AND (xd+xc)>3 AND ((nc+nd)\u2212(xc+xd))>3"},{"entry":"AND POWER(ABS(xd\u2212(xd+xc)*nd\/(nd+nc))\u2212.5,2) >="},{"entry":"(8*(xd+xc)*nd\/(nd+nc)*(1\u2212nd\/(nd+nc))) -- purposeful Cartesian since the"},{"entry":"top IV returns one row"},{"entry":")) c -- one of three base score tables for filter"},{"entry":"WHERE SUBSTR(d.attribute,1,2)=a.code_type(+) AND"},{"entry":"d.attribute_value=a.code_set(+) AND"},{"entry":"SUBSTR(d.outcome_class,1,2)=o.code_type(+) AND"},{"entry":"d.outcome_type=o.code_set(+)"},{"entry":"AND d.outcome_class= c.outcome_class AND"},{"entry":"d.outcome_type=c.outcome_type"},{"entry":"AND ABS(CASE WHEN cumul_hyper>1e\u2212128 THEN"},{"entry":"score_sign*TRUNC(LOG(10,cumul_hyper)) ELSE \u221210*score_sign"},{"entry":"END)>ABS(c.score)"},{"entry":"AND ABS(CASE WHEN cumul_hyper>1e\u2212128 THEN"},{"entry":"score_sign*TRUNC(LOG(10,cumul_hyper)) ELSE \u221210*score_sign"},{"entry":"END)>=3"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}]}}}}},"The \u201cmaster sql\u201d in Example 3 accesses SSTs and combines them into attribute\/outcome population sets. It then processes these sets into hypergeometric scores, relative risk and Yates confidence intervals as shown in steps 1 through 21 above.","Example 4 creates the SSTs for use by the master SQL. These SSTs are packed by newind_id so the population set in play can be quickly retrieved. This is accomplished for cluster_baseline_pops by the SQL.","Select Distinct","base.product_id, base.version_id, base.newindv_id, base.groupflag, base.attribute, base.attri bute_value FROM","(merged sets)","The first two terms (product_id, version_id) land the data in a partition and the newindv_id field then clusters the data by individual. This SST packing could also be accomplished by using an ORDER BY clause, group by clause, a large concatenated index containing all the terms, or by using an index organized table.","Below, aspects of this example are explained in more detail. Let's step through some of the nuances in the creation of the CLUSTER_BASELINE_POPS table. This table is used to supply counts of the population in any attribute set and via the SST structure will quickly provide processing code with the desired individual's attributes for rapid counting.",{"@attributes":{"id":"p-0279","num":"0287"},"tables":{"@attributes":{"id":"TABLE-US-00031","num":"00031"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0","pgwide":"1"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"245pt","align":"left"}}],"thead":{"row":{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"INSERT \/*+append*\/ INTO CLUSTER_BASELINE_POPS"]},{"entry":[{},"SELECT DISTINCT"]},{"entry":[{},"base.product_id,base.version_id,base.newindv_id,base.groupflag,base.attribute"]},{"entry":[{},",base.attribute_value"]},{"entry":[{},"FROM"]},{"entry":[{},">>>>>This section identifies and tags individuals that were active at least"]},{"entry":[{},">>>>>one day in the outcome period (the vast majority). The tag value \u20181 to"]},{"entry":[{},">>>>>7 days\u2019 will >>>>>be used as an independent attribute and treated in"]},{"entry":[{},">>>>>the code as if were a \u201ctypical\u201d attribute like gender, age, taking drug"]},{"entry":[{},">>>>>\u201cA\u201d, etc. during the baseline period."]},{"entry":[{},"SELECT product_id,version_id,b.NEWINDV_ID,b.groupflag,\u2018Days since first"]},{"entry":[{},"dispensing\u2019 attribute, \u20181 to 7 days\u2019 attribute_value,1 beginning,7"]},{"entry":[{},"ending"]},{"entry":[{},"FROM COHORT b WHERE b.match=1 AND b.termdate\u2212b.indexdt >=1 AND"]},{"entry":[{},"product_id=1"]},{"entry":[{},"AND version_id=200503"]},{"entry":[{},"UNION"]},{"entry":[{},">>>>> We'll append on another section for those active at least 8 days into"]},{"entry":[{},">>>>> the outcome period. etc for other days into segments"]},{"entry":[{},"SELECT product_id,version_id,b.NEWINDV_ID,b.groupflag,\u2018Days since first"]},{"entry":[{},"dispensing\u2019 attribute, \u20188 to 29 days\u2019 attribute_value,8 beginning,29"]},{"entry":[{},"ending"]},{"entry":[{},"FROM COHORT b WHERE b.match=1 AND b.termdate\u2212b.indexdt >=8 AND"]},{"entry":[{},"product_id=1"]},{"entry":[{},"AND version_id=200503"]},{"entry":[{},">>>>> Now we'll populate the gender attribute holding \u201cMale or Female\u201d in"]},{"entry":[{},">>>>> the attribute_value"]},{"entry":[{},"SELECT\u2003\u2003\u2003product_id,version_id,NEWINDV_ID,groupflag,\u2018GENDER\u2019"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"259pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":"attribute,sex"}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"245pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"attribute_value ,0 beginning,99999 ending"]},{"entry":[{},"FROM\u2003COHORT\u2003WHERE\u2003match=1\u2003AND\u2003product_id=1\u2003AND"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"259pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":"version_id=200503"}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"245pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"UNION"]},{"entry":[{},">>>>> Likewise for age or age_group (age can be grouped into logical ranges"]},{"entry":[{},">>>>> as desired),"]},{"entry":[{},"SELECT product_id,version_id,NEWINDV_ID,groupflag,\u2018AGE_GROUP\u2019"]},{"entry":[{},"attribute,b.AGE_GROUP_name attribute_value ,0 beginning,99999 ending"]},{"entry":[{},"FROM\u2003COHORT\u2003a,\u2003AGE_GROUP\u2003b\u2003WHERE\u2003a.AGE\u2003BETWEEN"]},{"entry":[{},"b.AGE_GROUP_START_YR AND"]},{"entry":[{},"b.AGE_GROUP_END_YR\u2003AND\u2003a.match=1\u2003AND\u2003product_id=1\u2003AND"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"259pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":"version_id=200503"}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"245pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"UNION"]},{"entry":[{},">>>>> Now codesets like diagnosis, procedure, prescription can be tagged"]},{"entry":[{},">>>>> (diagnosis shown). Medical code sets can be either actual codes,"]},{"entry":[{},">>>>> truncated codes, classes of codes, etc. There is no limitation on how"]},{"entry":[{},">>>>> an attribute can be classified."]},{"entry":[{},"SELECT product_id,version_id,NEWINDV_ID,groupflag,\u2018DX Baseline\u2019"]},{"entry":[{},"attribute,dx"]},{"entry":[{},"attribute_value ,0 beginning,99999 ending FROM DXBASE WHERE match=1"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"259pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":"AND"}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"245pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"product_id=1 AND version_id=200503 AND indexflag=0 and drhlinpat=1"]},{"entry":[{},">>>> Note ANY attribute can be presented in this format including but not"]},{"entry":[{},">>>> limited to race, ethnicity, genetic information, family history,"]},{"entry":[{},">>>> height, weight, profession, smoker, etc."]},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}}]}}]}}},"Let's step through some of the nuances in the creation of the CLUSTER_XD_XC_PREJOIN_DX_OP table (The other outcome tables are similar). The purpose of this table is to permeate all possible attribute with all possible outcomes individual by individual. Each attribute\/outcome pair is tagged by an individual id. This allows for complete flexibility when including or excluding sets of individuals by any desired criteria (single or multiple).",{"@attributes":{"id":"p-0281","num":"0289"},"tables":{"@attributes":{"id":"TABLE-US-00032","num":"00032"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0","pgwide":"1"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"245pt","align":"left"}}],"thead":{"row":{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},">>>> again we are creating an SST using the distinct clause which will sort"]},{"entry":[{},">>>> by field order. The first two fields in this case will define a"]},{"entry":[{},">>>> partition and the newindv_id will cluster data into the blocks by"]},{"entry":[{},">>>> individual."]},{"entry":[{},"INSERT \/*+ append*\/ INTO CLUSTER_XD_XC_PREJOIN_DX_OP"]},{"entry":[{},"SELECT DISTINCT"]},{"entry":[{},"base.product_id,base.version_id,base.newindv_id,base.groupflag,base.attribute"]},{"entry":[{},",base.attribute_value,emergent.outcome_class,emergent.outcome_type,"]},{"entry":[{},"emergent.days_in_study"]},{"entry":[{},"FROM"]},{"entry":[{},">>>> Outcomes will be expressed in terms of base attributes so this table"]},{"entry":[{},">>>> will fist find attributes much like what was done in"]},{"entry":[{},">>>> cluster_baseline_pops. However this time we will tag each"]},{"entry":[{},">>>> attribute\/outcome pair with an individual_id instead of just each"]},{"entry":[{},">>>> attribute with an individual_id."]},{"entry":[{},">>>> This section is finding the outcomes for each person based on when the"]},{"entry":[{},">>>> outcome occurred. Each persons attribute are then permeated by that"]},{"entry":[{},">>>> person's outcomes via the join \u201cbase.newindv_id=emergent.newindv_id\u201d"]},{"entry":[{},">>>> and placed in the appropriate time range \u201cemergent.days_in_study"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"259pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":"BETWEEN"}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"245pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},">>>> base.beginning AND base.ending\u201d. Note in this example the Dx codes are"]},{"entry":[{},">>>> truncated to widen the outcome group. This is optional depending on the"]},{"entry":[{},">>>> desired outcome granularity. Also we only use matched patients to"]},{"entry":[{},">>>> mitigate confounding of the results where each person in the study set"]},{"entry":[{},">>>> requires a pair sharing key attribute characteristics."]},{"entry":[{},"(SELECT DISTINCT product_id, version_id, a.newindv_id, a.groupflag,"]},{"entry":[{},"\u2018DX_OUTPATIENT\u2019 outcome class,"]},{"entry":[{},"CASE"]},{"entry":[{},"WHEN LENGTH (TRIM (a.dx_emerg)) = 4"]},{"entry":[{},"AND SUBSTR (dx_emerg, 1, 1) <> \u2018E\u2019"]},{"entry":[{},"THEN SUBSTR (dx_emerg, 1, 3)"]},{"entry":[{},"ELSE TRIM (dx_emerg)"]},{"entry":[{},"END outcome_type,"]},{"entry":[{},"days_in_study"]},{"entry":[{},"FROM dxemerg a"]},{"entry":[{},"WHERE a.match = 1"]},{"entry":[{},"AND a.product_id=1"]},{"entry":[{},"AND a.version_id = 200503"]},{"entry":[{},"AND siteflag = 2 ) emergent"]},{"entry":[{},"WHERE base.newindv_id=emergent.newindv_id AND emergent.days_in_study"]},{"entry":[{},"BETWEEN"]},{"entry":[{},"base.beginning AND base.ending;"]},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}}]}}]}}},"As described earlier, these tables can be used to quickly process and \u201cscore\u201d massive permutation sets of attribute\/outcome pairs. Statistically interesting combinations can easily by floated to the top by sorting on score. Coupled with the filtering capability to select any sub-population this question can be extended into:","Are women who are on thyroid medications more likely to have headaches when taking drug \u201cA\u201d than drug \u201cB\u201d?","Are males between 50 and 59 who have had bypass surgery more likely to have strokes when taking drug \u201cA\u201d than drug \u201cB\u201d","Does drug \u201cB\u201d have an unforeseen benefit in reducing a common disease in women who live in the south (e.g. Sinusitis)?","This powerful technique can also be extended to attribute sub clusters and outcome pairs (AKA syndromes). In other words we can permeate every combination of attributes and find these important pieces of information and float them to the top automatically. Also, pair of outcomes can be automatically coupled into syndromes and mined. This sub-attribute clustering can also be coupled with syndromes to mine and score for information as complex as:","Women taking NSAIDs are more likely to show headache and vomiting when taking drug \u201cB\u201d vs drug \u201cA\u201d. In other words, with no filtering criteria the previously mentioned attribute\/outcome pairs would automatically score the following sets.","Set#1 Drug \u201cA\u201d vs. Drug \u201cB\u201d\u2014Women experiencing headache","Set#2 Drug \u201cA\u201d vs. Drug \u201cB\u201d\u2014Women experiencing vomiting","Set#3 Drug \u201cA\u201d vs. Drug \u201cB\u201d\u2014All on NSAIDs experiencing headache","Set#4 Drug \u201cA\u201d vs. Drug \u201cB\u201d\u2014All on NSAIDs experiencing vomiting","The sub-cluster sets and syndrome processing would also test, score and present:","Set#5 Drug \u201cA\u201d vs. Drug \u201cB\u201d\u2014Women on NSAIDs experiencing headache","Set#6 Drug \u201cA\u201d vs. Drug \u201cB\u201d\u2014Women on NSAIDs experiencing vomiting","Set#7 Drug \u201cA\u201d vs. Drug \u201cB\u201d\u2014Women on NSAIDs experiencing headache and vomiting","Set#8 Drug \u201cA\u201d vs. Drug \u201cB\u201d\u2014Women experiencing headache and vomiting","Set#9 Drug \u201cA\u201d vs. Drug \u201cB\u201d\u2014All on NSAIDs experiencing headache and vomiting","Set#10 Drug \u201cA\u201d vs. Drug \u201cB\u201d\u2014Women experiencing headache and vomiting","The example below walks through the generation of set#5 and set#6 (and all other possible permutations of attribute)\/attribute2\/outcome triplets)","By sourcing the CLUSTER_BASELINE_POPS table twice, one can create and store all attribute sub-cluster permutations as shown below into table","ALL_PROD2b_DOUBLET NS. This table contains the attribute\/attribute counts.",{"@attributes":{"id":"p-0302","num":"0310"},"tables":{"@attributes":{"id":"TABLE-US-00033","num":"00033"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"203pt","align":"left"}}],"thead":{"row":{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"CREATE TABLE ALL_PROD2b_DOUBLET_NS AS"]},{"entry":[{},"SELECT a.ATTRIBUTE a1,"]},{"entry":[{},"a.ATTRIBUTE_VALUE av1,b.ATTRIBUTE a2,"]},{"entry":[{},"b.ATTRIBUTE_VALUE av2"]},{"entry":[{},",COUNT(UNIQUE CASE WHEN a.groupflag=1 THEN"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":"a.newindv_id ELSE NULL END)"}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"nd"]},{"entry":[{},",COUNT(UNIQUE CASE WHEN a.groupflag=0 THEN"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":"a.newindv_id ELSE NULL END )"}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"nC"]},{"entry":[{},"FROM"]},{"entry":[{},"CLUSTER_BASELINE_POPS a,CLUSTER_BASELINE_POPS b"]},{"entry":[{},"WHERE a.product_id=2 AND b.product_id=2"]},{"entry":[{},"AND \/* a.ATTRIBUTE_VALUE=\u2018F\u2019 AND"]},{"entry":[{},"b.attribute_value=\u2018WEST\u2019 AND *\/"]},{"entry":[{},"a.attribute||a.attribute_value>b.attribute||b.attribute_value AND"]},{"entry":[{},"a.newindv_id=b.newindv_id \/*AND"]},{"entry":[{},"a.attribute_value>b.attribute_value don't"]},{"entry":[{},"double return set*\/"]},{"entry":[{},"GROUP BY a.ATTRIBUTE , a.ATTRIBUTE_VALUE ,"]},{"entry":[{},"b.ATTRIBUTE , b.ATTRIBUTE_VALUE"]},{"entry":[{},"HAVING COUNT(UNIQUE CASE WHEN a.groupflag=1"]},{"entry":[{},"THEN a.newindv_id"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":"ELSE NULL"}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"END)>3\u2003AND\u2003COUNT(UNIQUE\u2003CASE\u2003WHEN"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":"a.groupflag=0\u2003THEN a.newindv_id ELSE"}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"NULL"]},{"entry":[{},"END ) >3"]},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}}]}}]}}},"Now we can create the complimentary table containing all the outcomes counts","for each attribute\/attribute pair. This table contains the attribute\/attribute outcome counts.",{"@attributes":{"id":"p-0305","num":"0313"},"tables":{"@attributes":{"id":"TABLE-US-00034","num":"00034"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0","pgwide":"1"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"266pt","align":"left"}}],"thead":{"row":{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"CREATE TABLE ALL_PROD2b_DOUBLET_XS"]},{"entry":[{},"SELECT * FROM"]},{"entry":[{},"("]},{"entry":[{},"SELECT a1,av1,a2,av2 ,outcome_class,outcome_type"]},{"entry":[{},",COUNT(UNIQUE CASE WHEN groupflag=1 THEN newindv_id ELSE NULL"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"280pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":"END) xd"}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"266pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},",COUNT(UNIQUE CASE WHEN groupflag=0 THEN newindv_id ELSE NULL"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"280pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":"END ) xC"}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"266pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"FROM"]},{"entry":[{},"("]},{"entry":[{},"SELECT x.attribute a1,x.attribute_value av1,y.attribute"]},{"entry":[{},"a2,y.attribute_value"]},{"entry":[{},"av2,x.outcome_class,x.outcome_type,x.newindv_id,x.groupflag FROM"]},{"entry":[{},"("]},{"entry":[{},"SELECT DISTINCT"]},{"entry":[{},"a.ATTRIBUTE,a.ATTRIBUTE_VALUE,a.outcome_class,a.outcome_type,"]},{"entry":[{},"newindv_id,groupflag"]},{"entry":[{},"FROM CLUSTER_XD_XC_PREJOIN_DX_OP a WHERE a.PRODUCT_ID=2 )"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"280pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":"x,"}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"266pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"("]},{"entry":[{},"SELECT DISTINCT"]},{"entry":[{},"a.ATTRIBUTE,a.ATTRIBUTE_VALUE,a.outcome_class,a.outcome_type,newindv_id,"]},{"entry":[{},"groupflag"]},{"entry":[{},"FROM CLUSTER_XD_XC_PREJOIN_DX_OP a WHERE a.PRODUCT_ID=2 )"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"280pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":"y"}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"266pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"WHERE x.attribute||x.attribute_value>y.attribute||y.attribute_value AND"]},{"entry":[{},"x.newindv_id=y.newindv_id \/* don't double return set*\/"]},{"entry":[{},"AND x.outcome_class=y.outcome_class AND x.outcome_type=y.outcome_type"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"280pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":")"}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"266pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"GROUP BY a1,av1,a2,av2 ,outcome_class,outcome_type"]},{"entry":[{},")"]},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}}]}}]}}},"These two tables can then be combined and scored often yielding powerful insight into hidden attribute combinations that have interesting properties.",{"@attributes":{"id":"p-0307","num":"0315"},"tables":{"@attributes":{"id":"TABLE-US-00035","num":"00035"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"thead":{"row":{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"CREATE TABLE spir_dx_ip_doublet_scores AS"},{"entry":"SELECT iv2.*, CASE WHEN POWER(ABS(xd\u2212(xd+xc)*nd\/"},{"entry":"(nd+nc))\u2212.5,2) >= (4*(xd+xc)*nd\/(nd+nc)*(1\u2212nd\/(nd+nc))) THEN"},{"entry":"Wu4_Function9biot(x_prime,n_prime,xd+xc,nd+nc) ELSE 1 END"},{"entry":"cumul_hyper"},{"entry":"FROM"},{"entry":"("},{"entry":"SELECT iv.*,a.nd,a.nc"},{"entry":",CASE WHEN xd>(xd+xc)*nd\/(nd+nc) THEN xc ELSE xd END x_prime"},{"entry":",CASE WHEN xd>(xd+xc)*nd\/(nd+nc) THEN nc ELSE nd END n_prime"},{"entry":",CASE WHEN xd>(xd+xc)*nd\/(nd+nc) THEN \u22121 ELSE CASE WHEN"},{"entry":"xd= (xd+xc)*nd\/(nd+nc) THEN 0 ELSE 1 END END score_sign"},{"entry":"FROM"},{"entry":"ALL_PROD2b_DOUBLET_XS iv,ALL_PROD2b_DOUBLET_NS a"},{"entry":"WHERE iv.a1=a.a1 AND iv.a2=a.a2 AND iv.av1=a.av1 AND"},{"entry":"iv.av2=a.av2 AND (xd+xc)>3 AND nd>3 AND nc>3 AND"},{"entry":"((nc + nd) \u2212 (xc + xd)) > 3 AND POWER(ABS(xd\u2212(xd+xc)*nd\/"},{"entry":"(nd+nc))\u2212.5,2) >= (4*(xd+xc)*nd\/(nd+nc)*(1\u2212nd\/(nd+nc)))"},{"entry":") iv2 ORDER BY cumul_hyper ASC"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}]}}}}},{"@attributes":{"id":"p-0308","num":"0316"},"tables":{"@attributes":{"id":"TABLE-US-00036","num":"00036"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0","pgwide":"1"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"266pt","align":"left"}},"thead":{"row":{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"SELECT * FROM"},{"entry":"("},{"entry":"SELECT 2 product_id,200503 version_id,"},{"entry":"d.attribute,d.attribute_value,a.code_desc \u201cAttribute value"},{"entry":"desc\u201d,d.outcome_class,d.outcome_type,o.code_desc \u201cOutcome type"},{"entry":"desc\u201d,d.xd,d.nd,d.xc,d.nc,"},{"entry":"CASE WHEN d.xc>0 THEN TO_CHAR( d.xd*d.nc\/(d.xc*d.nd),\u20189999990.9\u2019) ELSE"},{"entry":"\u2018--\u2019 END rr,"},{"entry":"CASE WHEN (x\u2212plower*x)>0 THEN (plower*x\/d.nd)\/((x\u2212plower*x)\/d.nc) ELSE 0"},{"entry":"END rrlower,"},{"entry":"CASE WHEN (x\u2212pupper*x)>0 THEN (pupper*x\/d.nd)\/((x\u2212pupper*x)\/d.nc) ELSE 0"},{"entry":"END rrupper,"},{"entry":"CASE WHEN cumul_hyper>1e\u2212128 THEN"},{"entry":"score_sign*TRUNC(LOG(10,d.cumul_hyper)) ELSE \u221210*score_sign END score"},{"entry":"FROM"},{"entry":"("},{"entry":"SELECT c.*,(\u2212b_high+SQRT(POWER(b_high,2)\u22124*a*c_high))\/(2*a)"},{"entry":"pupper,(\u2212b_low\u2212SQRT(POWER(b_low,2)\u22124*a*c_low))\/(2*a) plower,"},{"entry":"CASE WHEN POWER(ABS(xd\u2212(xd+xc)*nd\/(nd+nc))\u2212.5,2) >="},{"entry":"(8*(xd+xc)*nd\/(nd+nc)*(1\u2212nd\/(nd+nc))) THEN"},{"entry":"aperio.Wu4_Function9biot(x_prime,n_prime,xd+xc,nd+nc) ELSE 1 END"},{"entry":"cumul_hyper"},{"entry":"FROM"},{"entry":"("},{"entry":"SELECT b.*,1+d a,\u22122*pd_low\u2212d b_low,\u22122*pd_high\u2212d b_high,POWER(pd_low,2)"},{"entry":"c_low,POWER(pd_high,2) c_high FROM ("},{"entry":"SELECT a.*,xd+xc x,POWER(1.96,2)\/(xd+xc) d,(Xd\u2212.5)\/(xd+xc)"},{"entry":"pd_low,(Xd+.5)\/(xd+xc) pd_high FROM"},{"entry":"("},{"entry":"SELECT"},{"entry":"nd_nc.attribute,nd_nc.attribute_value,xd_xc.outcome_class,xd_xc.outcome"},{"entry":"type,xd_xc.xd,nd_nc.nd,xd_xc.xc,nd_nc.nc"},{"entry":",CASE WHEN xd>(xd+xc)*nd\/(nd+nc) THEN xc ELSE xd END x_prime"},{"entry":",CASE WHEN xd>(xd+xc)*nd\/(nd+nc) THEN nc ELSE nd END n_prime"},{"entry":",CASE WHEN xd>(xd+xc)*nd\/(nd+nc) THEN \u22121 ELSE CASE WHEN xd="},{"entry":"(xd+xc)*nd\/(nd+nc) THEN 0 ELSE 1 END END score_sign"},{"entry":"FROM"},{"entry":"("},{"entry":"SELECT attribute,attribute_value"},{"entry":",COUNT (UNIQUE CASE WHEN groupflag=1 THEN newindv_id ELSE NULL END)"},{"entry":"nd"},{"entry":",COUNT (UNIQUE CASE WHEN groupflag=0 THEN newindv_id ELSE NULL END)"},{"entry":"nc"},{"entry":"FROM"},{"entry":"CLUSTER_BASELINE_POPS WHERE product_id=2 AND version_id=200503 --"},{"entry":"Attach filter here AND newindv_id IN ( )"},{"entry":"GROUP BY attribute,attribute_value"},{"entry":"UNION"},{"entry":"SELECT attribute,attribute_value,SUM(nd) nd,SUM(nc) nc FROM"},{"entry":"("},{"entry":"SELECT \u2018Baseline\u2019 attribute,\u2018 \u2019 attribute_value"},{"entry":",COUNT (UNIQUE CASE WHEN groupflag=1 THEN newindv_id ELSE NULL END)"},{"entry":"nd"},{"entry":",COUNT (UNIQUE CASE WHEN groupflag=0 THEN newindv_id ELSE NULL END)"},{"entry":"nc"},{"entry":"FROM"},{"entry":"CLUSTER_BASELINE_POPS WHERE product_id=2 AND version_id=200503 AND"},{"entry":"attribute=\u2018GENDER\u2019 -- Attach filter here AND newindv_id IN ( )"},{"entry":"GROUP BY attribute,attribute_value"},{"entry":") GROUP BY attribute,attribute_value"},{"entry":") nd_nc"},{"entry":","},{"entry":"("},{"entry":"SELECT attribute,attribute_value,outcome_class,outcome_type"},{"entry":",COUNT (UNIQUE CASE WHEN groupflag=1 THEN newindv_id ELSE NULL END)"},{"entry":"xd"},{"entry":",COUNT (UNIQUE CASE WHEN groupflag=0 THEN newindv_id ELSE NULL END)"},{"entry":"xc"},{"entry":"FROM"},{"entry":"CLUSTER_XD_XC_PREJOIN_DX_OP -- one of three outcome tables"},{"entry":"WHERE product_id=2 AND version_id=200503 -- Attach filter here AND"},{"entry":"newindv_id IN ( )"},{"entry":"GROUP BY attribute,attribute_value,outcome_class,outcome_type"},{"entry":"UNION"},{"entry":"SELECT attribute, attribute_value,outcome_class,outcome_type,SUM(xd)"},{"entry":"xd,SUM(xc) xc"},{"entry":"FROM ("},{"entry":"SELECT \u2018Baseline\u2019 attribute,\u2018 \u2019"},{"entry":"attribute_value,outcome_class,outcome_type"},{"entry":",COUNT (UNIQUE CASE WHEN groupflag=1 THEN newindv_id ELSE NULL END)"},{"entry":"xd"},{"entry":",COUNT (UNIQUE CASE WHEN groupflag=0 THEN newindv_id ELSE NULL END)"},{"entry":"xc"},{"entry":"FROM"},{"entry":"CLUSTER_XD_XC_PREJOIN_DX_OP -- one of three outcome tables"},{"entry":"WHERE product_id=2 AND version_id=200503 AND attribute=\u2018GENDER\u2019 --"},{"entry":"Attach filter here AND newindv_id IN ( )"},{"entry":"GROUP BY attribute,attribute_value,outcome_class,outcome_type"},{"entry":") GROUP BY attribute, attribute_value,outcome_class,outcome_type"},{"entry":") xd_xc"},{"entry":"WHERE nd_nc.attribute=xd_xc.attribute AND"},{"entry":"nd_nc.attribute_value=xd_xc.attribute_value AND nd>3 AND nc>3 AND"},{"entry":"(xd+xc)>3 AND ((nc+nd)\u2212(xc+xd))>3"},{"entry":") a"},{"entry":") b"},{"entry":") c"},{"entry":") d, ALL_CODE_XWALK a,ALL_CODE_XWALK o"},{"entry":"("},{"entry":"SELECT outcome_class,outcome_type,CASE WHEN"},{"entry":"POWER(ABS(xd\u2212(xd+xc)*nd\/(nd+nc))\u2212.5,2) >="},{"entry":"(8*(xd+xc)*nd\/(nd+nc)*(1\u2212nd\/(nd+nc))) THEN"},{"entry":"score_sign*TRUNC(LOG(10,GREATEST(aperio.Wu4_Function9biot(x_prime,n_prime"},{"entry":",xd+xc,nd+nc), 1e\u2212128))) ELSE 0 END score"},{"entry":"FROM"},{"entry":"(SELECT"},{"entry":"nd_nc.attribute,nd_nc.attribute_value,xd_xc.outcome_class,xd_xc.outcome"},{"entry":"type,xd_xc.xd.nd_nc.nd,xd_xc.xc,nd_nc.nc"},{"entry":",CASE WHEN xd>(xd+xc)*nd\/(nd+nc) THEN xc ELSE xd END x_prime"},{"entry":",CASE WHEN xd>(xd+xc)*nd\/(nd+nc) THEN nc ELSE nd END n_prime"},{"entry":",CASE WHEN xd>(xd+xc)*nd\/(nd+nc) THEN \u22121 ELSE CASE WHEN xd="},{"entry":"(xd+xc)*nd\/(nd+nc) THEN 0 ELSE 1 END END score_sign"},{"entry":"FROM"},{"entry":"("},{"entry":"SELECT attribute,attribute_value,SUM(nd) nd,SUM(nc) nc FROM"},{"entry":"("},{"entry":"SELECT \u2018Baseline\u2019 attribute,\u2018 \u2019 attribute_value"},{"entry":",COUNT (UNIQUE CASE WHEN groupflag=1 THEN newindv_id ELSE NULL END)"},{"entry":"nd"},{"entry":",COUNT (UNIQUE CASE WHEN groupflag=0 THEN newindv_id ELSE NULL END)"},{"entry":"nc"},{"entry":"FROM"},{"entry":"CLUSTER_BASELINE_POPS WHERE product_id=2 AND version_id=200503 AND"},{"entry":"attribute=\u2018GENDER\u2019 -- Attach filter here AND newindv_id IN ( )"},{"entry":"GROUP BY attribute,attribute_value"},{"entry":") GROUP BY attribute,attribute_value"},{"entry":") nd_nc"},{"entry":","},{"entry":"("},{"entry":"SELECT attribute, attribute_value,outcome_class,outcome_type,SUM(xd)"},{"entry":"xd,SUM(xc) xc"},{"entry":"FROM ("},{"entry":"SELECT \u2018Baseline\u2019 attribute,\u2018 \u2019"},{"entry":"attribute_value,outcome_class,outcome_type"},{"entry":",COUNT (UNIQUE CASE WHEN groupflag=1 THEN newindv_id ELSE NULL END)"},{"entry":"xd"},{"entry":",COUNT (UNIQUE CASE WHEN groupflag=0 THEN newindv_id ELSE NULL END)"},{"entry":"xc"},{"entry":"FROM"},{"entry":"CLUSTER_XD_XC_PREJOIN_DX_OP -- one of three outcome tables"},{"entry":"WHERE product_id=2 AND version_id=200503 AND attribute=\u2018GENDER\u2019 --"},{"entry":"Attach filter here AND newindv_id IN ( )"},{"entry":"GROUP BY attribute,attribute_value,outcome_class,outcome_type"},{"entry":") GROUP BY attribute, attribute_value,outcome_class,outcome_type"},{"entry":") xd_xc"},{"entry":"WHERE nd>3 AND nc>3 AND (xd+xc)>3 AND ((nc+nd)\u2212(xc+xd))>3 AND"},{"entry":"POWER(ABS(xd\u2212(xd+xc)*nd\/(nd+nc))\u2212.5,2) >="},{"entry":"(8*(xd+xc)*nd\/(nd+nc)*(1\u2212nd\/(nd+nc))) -- purposeful cartesian since the"},{"entry":"top IV returns one row"},{"entry":")) c -- one of three base score tables for filter"},{"entry":"WHERE SUBSTR(d.attribute,1,2)=a.code_type(+) AND"},{"entry":"d.attribute_value=a.code_set(+) AND"},{"entry":"SUBSTR(d.outcome_class,1,2)=o.code_type(+) AND"},{"entry":"d.outcome_type=o.code_set(+)"},{"entry":"AND d.outcome_class=c.outcome_class AND d.outcome_type=c.outcome_type"},{"entry":"AND ABS(CASE WHEN cumul_hyper>1e\u2212128 THEN"},{"entry":"score_sign*TRUNC(LOG(10,cumul_hyper)) ELSE \u221210*score_sign"},{"entry":"END)>ABS(c.score)"},{"entry":"AND ABS(CASE WHEN cumul_hyper>1e\u2212128 THEN"},{"entry":"score_sign*TRUNC(LOG(10,cumul_hyper)) ELSE \u221210*score_sign END)>=3"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}]}}}}},{"@attributes":{"id":"p-0309","num":"0317"},"tables":{"@attributes":{"id":"TABLE-US-00037","num":"00037"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0","pgwide":"1"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"259pt","align":"left"}},"thead":{"row":{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"delete from CLUSTER_BASELINE_POPS where product_id=1 AND"},{"entry":"version_id=200503;"},{"entry":"commit;"},{"entry":"INSERT \/*+append*\/ INTO CLUSTER_BASELINE_POPS"},{"entry":"SELECT DISTINCT"},{"entry":"base.product_id,base.version_id,base.newindv_id,base.groupflag,base.attribute,"},{"entry":"base.attribute_value FROM"},{"entry":"(SELECT product_id,version_id,b.NEWINDV_ID,b.groupflag,\u2018Days since first"},{"entry":"dispensing\u2019 attribute, \u20181 to 7 days\u2019 attribute_value,1 beginning,7 ending"},{"entry":"FROM COHORT b WHERE b.match=1 AND b.termdate-b.indexdt >=1 AND"},{"entry":"product_id=1 AND version_id=200503"},{"entry":"UNION"},{"entry":"SELECT product_id,version_id,b.NEWINDV_ID,b.groupflag,\u2018Days since first"},{"entry":"dispensing\u2019 attribute, \u20188 to 29 days\u2019 attribute_value,8 beginning,29 ending"},{"entry":"FROM COHORT b WHERE b.match=1 AND b.termdate-b.indexdt >=8 AND"},{"entry":"product_id=1 AND version_id=200503"},{"entry":"UNION"},{"entry":"SELECT product_id,version_id,b.NEWINDV_ID,b.groupflag,\u2018Days since first"},{"entry":"dispensing\u2019 attribute, \u201830 to 89 days\u2019 attribute_value,30 beginning,89 ending"},{"entry":"FROM COHORT b WHERE b.match=1 AND b.termdate-b.indexdt >=30 AND"},{"entry":"product_id=1 AND version_id=200503"},{"entry":"UNION"},{"entry":"SELECT product_id,version_id,b.NEWINDV_ID,b.groupflag,\u2018Days since first"},{"entry":"dispensing\u2019 attribute, \u201890 to 365 days\u2019 attribute_value,90 beginning,365 ending"},{"entry":"FROM COHORT b WHERE b.match=1 AND b.termdate-b.indexdt >=90 AND"},{"entry":"product_id=1 AND version_id=200503"},{"entry":"UNION"},{"entry":"SELECT product_id,version_id,NEWINDV_ID,groupflag,\u2018GENDER\u2019 attribute,sex"},{"entry":"attribute_value ,0 beginning,99999 ending"},{"entry":"FROM COHORT WHERE match=1 AND product_id=1 AND version_id=200503"},{"entry":"UNION"},{"entry":"SELECT product_id,version_id,NEWINDV_ID,groupflag,\u2018AGE_GROUP\u2019"},{"entry":"attribute,b.AGE_GROUP name attribute_value ,0 beginning,99999 ending"},{"entry":"FROM COHORT a, AGE_GROUP b WHERE a.AGE BETWEEN"},{"entry":"b.AGE_GROUP_START_YR AND b.AGE_GROUP_END_YR AND a.match=1 AND"},{"entry":"product_id=1 AND version_id=200503"},{"entry":"UNION"},{"entry":"SELECT product_id,version_id,NEWINDV_ID,groupflag,\u2018REGION\u2019 attribute,region"},{"entry":"attribute_value ,0 beginning,99999 ending"},{"entry":"FROM COHORT WHERE match=1 AND product_id=1 AND version_id=200503"},{"entry":"UNION"},{"entry":"SELECT product_id,version_id,NEWINDV_ID,groupflag,\u2018DX Baseline\u2019 attribute,dx"},{"entry":"attribute_value ,0 beginning,99999 ending"},{"entry":"FROM DXBASE WHERE match=1 AND product_id=1 AND version_id=200503 AND"},{"entry":"indexflag=0 and drhlinpat=1"},{"entry":"UNION"},{"entry":"SELECT product_id,version_id,NEWINDV_ID,groupflag,\u2018PX Baseline\u2019"},{"entry":"attribute,proc_catcode attribute_value ,0 beginning,99999 ending"},{"entry":"FROM pxbase WHERE match=1 AND product_id=1 AND version_id=200503 AND"},{"entry":"indexflag=0"},{"entry":"UNION"},{"entry":"SELECT product_id,version_id,NEWINDV_ID,groupflag,\u2018RX Baseline\u2019,THERSPC"},{"entry":"attribute_value ,0 beginning,99999 ending"},{"entry":"FROM rxbase WHERE match=1 AND product_id=1 AND version_id=200503 AND"},{"entry":"indexflag=0) base;"},{"entry":"commit;"},{"entry":"delete from CLUSTER_XD_XC_PREJOIN_DX_OP where product_id=1 AND"},{"entry":"version_id=200503;"},{"entry":"commit;"},{"entry":"INSERT \/*+ append*\/ INTO CLUSTER_XD_XC_PREJOIN_DX_OP"},{"entry":"SELECT DISTINCT"},{"entry":"base.product_id,base.version_id,base.newindv_id,base.groupflag,base.attribute,base."},{"entry":"attribute_value,emergent.outcome_class,emergent.outcome_type,emergent.days_in_study"},{"entry":"FROM"},{"entry":"(SELECT product_id,version_id,b.NEWINDV_ID,b.groupflag,\u2018Days since first"},{"entry":"dispensing\u2019 attribute, \u20181 to 7 days\u2019 attribute_value,1 beginning,7 ending"},{"entry":"FROM COHORT b WHERE b.match=1 AND b.termdate-b.indexdt >=1 AND"},{"entry":"product_id=1 AND version_id=200503"},{"entry":"UNION"},{"entry":"SELECT product_id,version_id,b.NEWINDV_ID,b.groupflag,\u2018Days since first"},{"entry":"dispensing\u2019 attribute, \u20188 to 29 days\u2019 attribute_value,8 beginning,29 ending"},{"entry":"FROM COHORT b WHERE b.match=1 AND b.termdate-b.indexdt >=8 AND"},{"entry":"product_id=1 AND version_id=200503"},{"entry":"UNION"},{"entry":"SELECT product_id,version_id,b.NEWINDV_ID,b.groupflag,\u2018Days since first"},{"entry":"dispensing\u2019 attribute, \u201830 to 89 days\u2019 attribute_value,30 beginning,89 ending"},{"entry":"FROM COHORT b WHERE b.match=1 AND b.termdate-b.indexdt >=30 AND"},{"entry":"product_id=1 AND version_id=200503"},{"entry":"UNION"},{"entry":"SELECT product_id,version_id,b.NEWINDV_ID,b.groupflag,\u2018Days since first"},{"entry":"dispensing\u2019 attribute, \u201890 to 365 days\u2019 attribute_value,90 beginning,365 ending"},{"entry":"FROM COHORT b WHERE b.match=1 AND b.termdate-b.indexdt >=90 AND"},{"entry":"product_id=1 AND version_id=200503"},{"entry":"UNION"},{"entry":"SELECT product_id,version_id,NEWINDV_ID,groupflag,\u2018GENDER\u2019 attribute,sex"},{"entry":"attribute_value ,0 beginning,99999 ending"},{"entry":"FROM COHORT WHERE match=1 AND product_id=1 AND version_id=200503"},{"entry":"UNION"},{"entry":"SELECT product_id,version_id,NEWINDV_ID,groupflag,\u2018AGE GROUP\u2019"},{"entry":"attribute,b.AGE_GROUP name attribute_value ,0 beginning,99999 ending"},{"entry":"FROM COHORT a, AGE_GROUP b WHERE a.AGE BETWEEN"},{"entry":"b.AGE_GROUP_START_YR AND b.AGE_GROUP_END_YR AND a.match=1 AND"},{"entry":"product_id=1 AND version_id=200503"},{"entry":"UNION"},{"entry":"SELECT product_id,version_id,NEWINDV_ID,groupflag,\u2018REGION\u2019 attribute,region"},{"entry":"attribute_value ,0 beginning,99999 ending"},{"entry":"FROM COHORT WHERE match=1 AND product_id=1 AND version_id=200503"},{"entry":"UNION"},{"entry":"SELECT product_id,version_id,NEWINDV_ID,groupflag,\u2018DX Baseline\u2019 attribute,dx"},{"entry":"attribute_value ,0 beginning,99999 ending"},{"entry":"FROM DXBASE WHERE match=1 AND product_id=1 AND version_id=200503 AND"},{"entry":"indexflag=0 and drhlinpat=1"},{"entry":"UNION"},{"entry":"SELECT product_id,version_id,NEWINDV_ID,groupflag,\u2018PX Baseline\u2019"},{"entry":"attribute,proc_catcode attribute_value ,0 beginning,99999 ending"},{"entry":"FROM pxbase WHERE match=1 AND product_id=1 AND version_id=200503 AND"},{"entry":"indexflag=0"},{"entry":"UNION"},{"entry":"SELECT product_id,version_id,NEWINDV_ID,groupflag,\u2018RX Baseline\u2019,THERSPC"},{"entry":"attribute_value ,0 beginning,99999 ending"},{"entry":"FROM rxbase WHERE match=1 AND product_id=1 AND version_id=200503 AND"},{"entry":"indexflag=0) base"},{"entry":","},{"entry":"(SELECT DISTINCT product_id, version_id, a.newindv_id, a.groupflag,"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2018DX_OUTPATIENT\u2019 outcome_class,"},{"entry":"\u2003\u2003\u2003\u2003\u2003CASE"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003WHEN LENGTH (TRIM (a.dx emerg)) = 4"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003AND SUBSTR (dx emerg, 1, 1) <> \u2018E\u2019"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003THEN SUBSTR (dx emerg, 1, 3)"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003ELSE TRIM (dx emerg)"},{"entry":"\u2003\u2003\u2003\u2003\u2003END outcome_type,"},{"entry":"\u2003\u2003\u2003\u2003\u2003days_in_study"},{"entry":"\u2003\u2003\u2003FROM dxemerg a"},{"entry":"\u2003\u2003\u2003WHERE a.match = 1"},{"entry":"\u2003\u2003\u2003\u2003AND a.product_id=1"},{"entry":"\u2003\u2003\u2003\u2003AND a.version_id = 200503"},{"entry":"\u2003\u2003\u2003\u2003AND siteflag = 2 ) emergent"},{"entry":"WHERE base.newindv_id=emergent.newindv_id AND emergent.days_in_study"},{"entry":"BETWEEN base.beginning AND base.ending;"},{"entry":"commit;"},{"entry":"delete from BASE_SCORE_FILTER_3DX_OP where product_id=1 AND"},{"entry":"version_id=200503;"},{"entry":"commit;"},{"entry":"INSERT \/*+append*\/ INTO_BASE_SCORE_FILTER_3DX_OP"},{"entry":"SELECT 1 product_id,200503 version_id,"},{"entry":"\u2018Baseline\u2019 attribute, \u201cattribute_value,\u201d \u201cAttribute value"},{"entry":"desc\u201d,d.outcome_class,d.outcome_type,o.code desc \u201cOutcome type desc\u201d,xd,nd,xc,nc,"},{"entry":"CASE WHEN xc>0 THEN TO_CHAR( d.xd*d.nc\/(d.xc*d.nd),\u20189999990.9\u2019) ELSE \u2018--\u2019"},{"entry":"END rr,"},{"entry":"CASE WHEN (x\u2212plower*x)>0 THEN (plower*x\/nd)\/((x\u2212plower*x)\/nc) ELSE 0 END"},{"entry":"rrlower,"},{"entry":"CASE WHEN (x\u2212pupper*x)>0 THEN (pupper*x\/nd)\/((x\u2212pupper*x)\/nc) ELSE 0 END"},{"entry":"rrupper,"},{"entry":"CASE WHEN cumul_hyper>1e\u2212128 THEN score_sign*TRUNC(LOG(10,cumul_hyper))"},{"entry":"ELSE \u221210*score_sign END score"},{"entry":"FROM"},{"entry":"("},{"entry":"SELECT c.*,(\u2212b_high+SQRT(POWER(b_high,2)\u22124*a*c_high))\/(2*a) pupper,(\u2212b_low\u2212"},{"entry":"SQRT(POWER(b_low,2)\u22124*a*c_low))\/(2*a) plower,"},{"entry":"\u2002Wu4_Function9biot(x_prime,n_prime,xd+xc,nd+nc) cumul_hyper"},{"entry":"FROM"},{"entry":"("},{"entry":"SELECT b.*,1+d a,\u22122*pd_low\u2212d b_low,\u22122*pd_high\u2212d b_high,POWER(pd_low,2)"},{"entry":"c_low,POWER(pd_high,2) c_high FROM ("},{"entry":"SELECT a.*,xd+xc x,POWER(1.96,2)\/(xd+xc) d,(Xd\u2212.5)\/(xd+xc)"},{"entry":"pd_low,(Xd+.5)\/(xd+xc) pd_high FROM"},{"entry":"("},{"entry":"SELECT"},{"entry":"xd_xc.outcome_class,xd_xc.outcome_type,xd_xc.xd,nd_nc.nd,xd_xc.xc,nd_nc.nc"},{"entry":",CASE WHEN xd>(xd+xc)*nd\/(nd+nc) THEN xc ELSE xd END x_prime"},{"entry":",CASE WHEN xd>(xd+xc)*nd\/(nd+nc) THEN nc ELSE nd END n_prime"},{"entry":",CASE WHEN xd>(xd+xc)*nd\/(nd+nc) THEN \u22121 ELSE CASE WHEN xd="},{"entry":"(xd+xc)*nd\/(nd+nc) THEN 0 ELSE 1 END END score_sign"},{"entry":"FROM"},{"entry":"("},{"entry":"SELECT"},{"entry":"COUNT (UNIQUE CASE WHEN groupflag=1 AND match=1 THEN newindv_id ELSE"},{"entry":"NULL END) nd"},{"entry":",COUNT (UNIQUE CASE WHEN groupflag=0 AND match=1 THEN newindv_id"},{"entry":"ELSE NULL END) nc"},{"entry":"FROM"},{"entry":"cohort WHERE product_id=1 AND version_id=200503"},{"entry":") nd_nc"},{"entry":","},{"entry":"("},{"entry":"SELECT outcome_class,outcome_type"},{"entry":",COUNT (UNIQUE CASE WHEN groupflag=1 THEN newindv_id ELSE NULL END)"},{"entry":"xd"},{"entry":",COUNT (UNIQUE CASE WHEN groupflag=0 THEN newindv_id ELSE NULL END)"},{"entry":"xc"},{"entry":"FROM"},{"entry":"CLUSTER_XD_XC_PREJOIN_DX_OP"},{"entry":"WHERE product_id=1 AND version_id=200503"},{"entry":"GROUP BY outcome_class,outcome_type"},{"entry":") xd_xc"},{"entry":"WHERE nd>3 AND nc>3 AND (xd+xc)>3 AND ((nc+nd)\u2212(xc+xd))>3"},{"entry":") a WHERE POWER(( x_prime \u2212 (xd+xc) * (n_prime\/(nd+nc) )) ,2)>= 1.6 * (xd+xc)*"},{"entry":"(n_prime\/(nd+nc)) * ( 1\u2212(n_prime\/(nd+nc) ))"},{"entry":") b"},{"entry":") c"},{"entry":") d, ALL_CODE_XWALK o"},{"entry":"WHERE SUBSTR(d.outcome_class,1,2)=o.code_type(+) AND"},{"entry":"d.outcome_type=o.code_set(+)"},{"entry":";"},{"entry":"commit;"},{"entry":"delete from NOFILTER_PRESCORE_DX_OP where product_id=1 AND"},{"entry":"version_id=200503;"},{"entry":"commit;"},{"entry":"INSERT \/*+append*\/ INTO NOFILTER_PRESCORE_DX_OP"},{"entry":"SELECT * FROM"},{"entry":"("},{"entry":"SELECT 1 product_id,200503 version_id,"},{"entry":"d.attribute,d.attribute_value,a.code_desc \u201cAttribute value"},{"entry":"desc\u201d,d.outcome_class,d.outcome_type,o.code_desc \u201cOutcome type"},{"entry":"desc\u201d,d.xd,d.nd,d.xc,d.nc,"},{"entry":"CASE WHEN d.xc>0 THEN TO_CHAR( d.xd*d.nc\/(d.xc*d.nd),\u20189999990.9\u2019) ELSE\u2018--\u2019"},{"entry":"END rr,"},{"entry":"CASE WHEN (x\u2212plower*x)>0 THEN (plower*x\/d.nd)\/((x\u2212plower*x)\/d.nc) ELSE 0 END"},{"entry":"rrlower,"},{"entry":"CASE WHEN (x\u2212pupper*x)>0 THEN (pupper*x\/d.nd)\/((x\u2212pupper*x)\/d.nc) ELSE 0 END"},{"entry":"rrupper,"},{"entry":"CASE WHEN cumul_hyper> 1e\u2212128 THEN"},{"entry":"score_sign*TRUNC(LOG(10,d.cumul_hyper)) ELSE \u221210*score_sign END score"},{"entry":"FROM"},{"entry":"("},{"entry":"SELECT c.*,(\u2212b_high+SQRT(POWER(b_high,2)\u22124*a*c_high))\/(2*a) pupper,(\u2212b_low\u2212"},{"entry":"SQRT(POWER(b_low,2)\u22124*a*c_low))\/(2*a) plower,"},{"entry":"\u2002Wu4_Function9biot(x_prime,n_prime,xd+xc,nd+nc) cumul_hyper"},{"entry":"FROM"},{"entry":"("},{"entry":"SELECT b.*,la,\u22122*pd_low\u2212d b_low,\u22122*pd_high\u2212d b_high,POWER(pd_low,2)"},{"entry":"c_low,POWER(pd_high,2)c_high FROM ("},{"entry":"SELECT a.*,xd+xc x,POWER(1.96,2)\/(xd+xc) d,(Xd\u2212.5)\/(xd+xc)"},{"entry":"pd_low,(Xd+.5)\/(xd+xc) pd_high FROM"},{"entry":"("},{"entry":"SELECT"},{"entry":"nd_nc.attribute,nd_nc.attribute_value,xd_xc.outcome_class,xd_xc.outcome_type,xd_xc.x"},{"entry":"d,nd_nc.nd,xd_xc.xc,nd_nc.nc"},{"entry":",CASE WHEN xd>(xd+xc)*nd\/(nd+nc) THEN xc ELSE xd END x_prime"},{"entry":",CASE WHEN xd>(xd+xc)*nd\/(nd+nc) THEN nc ELSE nd END n_prime"},{"entry":",CASE WHEN xd>(xd+xc)*nd\/(nd+nc) THEN \u22121 ELSE CASE WHEN xd="},{"entry":"(xd+xc)*nd\/(nd+nc) THEN 0 ELSE 1 END END score_sign"},{"entry":"FROM"},{"entry":"("},{"entry":"SELECT attribute,attribute_value"},{"entry":",COUNT (UNIQUE CASE WHEN groupflag=1 THEN newindv_id ELSE NULL END)"},{"entry":"nd"},{"entry":",COUNT (UNIQUE CASE WHEN groupflag=0 THEN newindv_id ELSE NULL END)"},{"entry":"nc"},{"entry":"FROM"},{"entry":"CLUSTER_BASELINE_POPS WHERE product_id=1 AND version_id=200503"},{"entry":"GROUP BY attribute,attribute_value"},{"entry":") nd_nc"},{"entry":","},{"entry":"("},{"entry":"SELECT attribute,attribute_value,outcome_class,outcome_type"},{"entry":",COUNT (UNIQUE CASE WHEN groupflag=1 THEN newindv_id ELSE NULL END)"},{"entry":"xd"},{"entry":",COUNT (UNIQUE CASE WHEN groupflag=0 THEN newindv_id ELSE NULL END)"},{"entry":"xc"},{"entry":"FROM"},{"entry":"CLUSTER_XD_XC_PREJOIN_DX_OP"},{"entry":"WHERE product_id=1 AND version_id=200503"},{"entry":"GROUP BY attribute,attribute_value,outcome_class,outcome_type"},{"entry":") xd_xc"},{"entry":"WHERE nd_nc.attribute=xd_xc.attribute AND"},{"entry":"nd_nc.attribute_value=xd_xc.attribute_value AND nd>3 AND nc>3 AND (xd+xc)>3"},{"entry":"AND ((nc+nd)\u2212(xc+xd))>3"},{"entry":") a WHERE POWER(( x_prime \u2212 (xd+xc) * (n_prime\/(nd+nc) )) ,2)>= 1.6 * (xd+xc)*"},{"entry":"(n_prime\/(nd+nc)) * ( 1\u2212(n_prime\/(nd+nc) ))"},{"entry":") b"},{"entry":") c"},{"entry":") d, ALL_CODE_XWALK a,ALL_CODE_XWALK"},{"entry":"o,BASE_SCORE_FILTER_3DX_OP c"},{"entry":"WHERE SUBSTR(d.attribute,1,2)=a.code_type(+) AND"},{"entry":"d.attribute_value=a.code_set(+) AND SUBSTR(d.outcome_class,1,2)=o.code_type(+)"},{"entry":"AND d.outcome_type=o.code_set(+)"},{"entry":"AND d.outcome_class= c.outcome_class(+) AND d.outcome_type=c.outcome_type(+)"},{"entry":"AND c.version_id(+)=200503 AND c.product_id(+)=1"},{"entry":"AND ABS(CASE WHEN cumul_hyper>1e\u2212128 THEN"},{"entry":"score_sign*TRUNC(LOG(10,cumul_hyper)) ELSE \u221210*score_sign"},{"entry":"END)>ABS(nvl(c.score,0))"},{"entry":"AND ABS(CASE WHEN cumul_hyper>le\u2212128 THEN"},{"entry":"score_sign*TRUNC(LOG(10,cumul_hyper)) ELSE \u221210*score_sign END)>=3"},{"entry":"UNION"},{"entry":"SELECT * FROM BASE_SCORE_FILTER_3DX_OP WHERE product_id=1 AND"},{"entry":"version_id=200503 AND ABS(score)>=3"},{"entry":")"},{"entry":"ORDER BY ABS(score) DESC,xd+xc DESC;"},{"entry":"commit;"},{"entry":"delete from CLUSTER_XD_XC_PREJOIN_DX_IP where product_id=1 AND"},{"entry":"version_id=200503;"},{"entry":"commit;"},{"entry":"INSERT \/*+append*\/ INTO CLUSTER_XD_XC_PREJOIN_DX_IP"},{"entry":"SELECT DISTINCT"},{"entry":"base.product_id,base.version_id,base.newindv_id,base.groupflag,base.attribute,base."},{"entry":"attribute_value,emergent.outcome_class,emergent.outcome_type,emergent.days_in_study"},{"entry":"FROM"},{"entry":"(SELECT product_id,version_id,b.NEWINDV_ID,b.groupflag,\u2018Days since first"},{"entry":"dispensing\u2019 attribute, \u20181 to 7 days\u2019 attribute_value,1 beginning,7 ending"},{"entry":"FROM COHORT b WHERE b.match=1 AND b.termdate-b.indexdt >=1 AND"},{"entry":"product_id=1 AND version_id=200503"},{"entry":"UNION"},{"entry":"SELECT product_id,version_id,b.NEWINDV_ID,b.groupflag,\u2018Days since first"},{"entry":"dispensing\u2019 attribute, \u20188 to 29 days\u2019 attribute_value,8 beginning,29 ending"},{"entry":"FROM COHORT b WHERE b.match=1 AND b.termdate-b.indexdt >=8 AND"},{"entry":"product_id=1 AND version_id=200503"},{"entry":"UNION"},{"entry":"SELECT product_id,version_id,b.NEWINDV_ID,b.groupflag,\u2018Days since first"},{"entry":"dispensing\u2019 attribute, \u201830 to 89 days\u2019 attribute_value,30 beginning,89 ending"},{"entry":"FROM COHORT b WHERE b.match=1 AND b.termdate-b.indexdt >=30 AND"},{"entry":"product_id=1 AND version_id=200503"},{"entry":"UNION"},{"entry":"SELECT product_id,version_id,b.NEWINDV_ID,b.groupflag,\u2018Days since first"},{"entry":"dispensing\u2019 attribute, \u201890 to 365 days\u2019 attribute_value,90 beginning,365 ending"},{"entry":"FROM COHORT b WHERE b.match=1 AND b.termdate-b.indexdt >=90 AND"},{"entry":"product_id=1 AND version_id=200503"},{"entry":"UNION"},{"entry":"SELECT product_id,version_id,NEWINDV_ID,groupflag,\u2018GENDER\u2019 attribute,sex"},{"entry":"attribute_value ,0 beginning,99999 ending"},{"entry":"FROM COHORT WHERE match=1 AND product_id=1 AND version_id=200503"},{"entry":"UNION"},{"entry":"SELECT product_id,version_id,NEWINDV_ID,groupflag,\u2018AGE GROUP\u2019"},{"entry":"attribute,b.AGE GROUP name attribute_value ,0 beginning,99999 ending"},{"entry":"FROM COHORT a, AGE GROUP b WHERE a.AGE BETWEEN"},{"entry":"b.AGE GROUP START YR AND b.AGE GROUP END YR AND a.match=1 AND"},{"entry":"product_id=1 AND version_id=200503"},{"entry":"UNION"},{"entry":"SELECT product_id,version_id,NEWINDV_ID,groupflag,\u2018REGION\u2019 attribute,region"},{"entry":"attribute_value ,0 beginning,99999 ending"},{"entry":"FROM COHORT WHERE match=1 AND product_id=1 AND version_id=200503"},{"entry":"UNION"},{"entry":"SELECT product_id,version_id,NEWINDV_ID,groupflag,\u2018DX Baseline\u2019 attribute,dx"},{"entry":"attribute_value ,0 beginning,99999 ending"},{"entry":"FROM DXBASE WHERE match=1 AND product_id=1 AND version_id=200503 AND"},{"entry":"indexflag=0 and drhlinpat=1"},{"entry":"UNION"},{"entry":"SELECT product_id,version_id,NEWINDV_ID,groupflag,\u2018PX Baseline\u2019"},{"entry":"attribute,proc_catcode attribute_value ,0 beginning,99999 ending"},{"entry":"FROM pxbase WHERE match=1 AND product_id=1 AND version_id=200503 AND"},{"entry":"indexflag=0"},{"entry":"UNION"},{"entry":"SELECT product_id,version_id,NEWINDV_ID,groupflag,\u2018RX Baseline\u2019,THERSPC"},{"entry":"attribute_value ,0 beginning,99999 ending"},{"entry":"FROM rxbase WHERE match=1 AND product_id=1 AND version_id=200503 AND"},{"entry":"indexflag=0) base"},{"entry":","},{"entry":"(SELECT DISTINCT product_id, version_id, a.newindv_id, a.groupflag,"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2018DX_INPATIENT\u2019 outcome_class,"},{"entry":"\u2003\u2003\u2003\u2003\u2003CASE"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003WHEN LENGTH (TRIM (a.dx emerg)) = 4"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003AND SUBSTR (dx emerg, 1, 1) <> \u2018E\u2019"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003THEN SUBSTR (dx emerg, 1, 3)"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003ELSE TRIM (dx emerg)"},{"entry":"\u2003\u2003\u2003\u2003\u2003END outcome_type,"},{"entry":"\u2003\u2003\u2003\u2003\u2003days_in_study"},{"entry":"\u2003\u2003\u2003\u2009FROM dxemerg a"},{"entry":"\u2003\u2003\u2003WHERE a.match = 1"},{"entry":"\u2003\u2003\u2003\u2003AND a.product_id=1"},{"entry":"\u2003\u2003\u2003\u2003AND a.version_id = 200503"},{"entry":"\u2003\u2003\u2003\u2003AND siteflag = 1 ) emergent"},{"entry":"WHERE base.newindv_id=emergent.newindv_id AND emergent.days_in_study"},{"entry":"BETWEEN base.beginning AND base.ending;"},{"entry":"commit;"},{"entry":"delete from BASE_SCORE_FILTER_3DX_IP where product_id=1 AND"},{"entry":"version_id=200503;"},{"entry":"commit;"},{"entry":"INSERT \/*+append*\/ INTO BASE_SCORE_FILTER_3DX_IP"},{"entry":"SELECT 1 product_id,200503 version_id,"},{"entry":"\u2018Baseline\u2019 attribute,\u201c attribute_value,\u201d \u201cAttribute value"},{"entry":"desc\u201d,d.outcome_class,d.outcome_type,o.code desc \u201cOutcome type desc\u201d,xd,nd,xc,nc,"},{"entry":"CASE WHEN xc>0 THEN TO_CHAR( d.xd*d.nc\/(d.xc*d.nd),\u20189999990.9\u2019) ELSE \u2018--\u2019"},{"entry":"END rr,"},{"entry":"CASE WHEN (x\u2212plower*x)>0 THEN (plower*x\/nd)\/((x\u2212plower*x)\/nc) ELSE 0 END"},{"entry":"rrlower,"},{"entry":"CASE WHEN (x\u2212pupper*x)>0 THEN (pupper*x\/nd)\/((x\u2212pupper*x)\/nc) ELSE 0 END"},{"entry":"rrupper,"},{"entry":"CASE WHEN cumul_hyper>1E\u2212128 THEN"},{"entry":"score_sign*TRUNC(LOG(10,cumul_hyper)) ELSE \u221210*score_sign END score"},{"entry":"FROM"},{"entry":"("},{"entry":"SELECT c.*,(\u2212b_high+SQRT(POWER(b_high,2)\u22124*a*c_high))\/(2*a) pupper,(\u2212b_low\u2212"},{"entry":"SQRT(POWER(b_low,2)\u22124*a*c_low))\/(2*a) plower,"},{"entry":"\u2002Wu4 Function9biot(x_prime,n_prime,xd+xc,nd+nc) cumul_hyper"},{"entry":"FROM"},{"entry":"("},{"entry":"SELECT b.*,1+d a,\u22122*pd_low\u2212d b_low,\u22122*pd_high\u2212d b_high,POWER(pd_low,2)"},{"entry":"c_low,POWER(pd_high,2) c_high FROM ("},{"entry":"SELECT a.*,xd+xc x,POWER(1.96,2)\/(xd+xc) d,(Xd\u2212.5)\/(xd+xc)"},{"entry":"pd_low,(Xd+.5)\/(xd+xc) pd_high FROM"},{"entry":"("},{"entry":"SELECT"},{"entry":"xd_xc.outcome_class,xd_xc.outcome_type,xd_xc.xd,nd_nc.nd,xd_xc.xc,nd_nc.nc"},{"entry":",CASE WHEN xd>(xd+xc)*nd\/(nd+nc) THEN xc ELSE xd END x_prime"},{"entry":",CASE WHEN xd>(xd+xc)*nd\/(nd+nc) THEN nc ELSE nd END n_prime"},{"entry":",CASE WHEN xd>(xd+xc)*nd\/(nd+nc) THEN \u22121 ELSE CASE WHEN xd="},{"entry":"(xd+xc)*nd\/(nd+nc) THEN 0 ELSE 1 END END score_sign"},{"entry":"FROM"},{"entry":"("},{"entry":"SELECT"},{"entry":"COUNT (UNIQUE CASE WHEN groupflag=1 AND match=1 THEN newindv_id ELSE"},{"entry":"NULL END) nd"},{"entry":",COUNT (UNIQUE CASE WHEN groupflag=0 AND match=1 THEN newindv_id"},{"entry":"ELSE NULL END) nc"},{"entry":"FROM"},{"entry":"cohort WHERE product_id=1 AND version_id=200503"},{"entry":") nd_nc"},{"entry":","},{"entry":"("},{"entry":"SELECT outcome_class,outcome_type"},{"entry":",COUNT (UNIQUE CASE WHEN groupflag=1 THEN newindv_id ELSE NULL END)"},{"entry":"xd"},{"entry":",COUNT (UNIQUE CASE WHEN groupflag=0 THEN newindv_id ELSE NULL END)"},{"entry":"xc"},{"entry":"FROM"},{"entry":"CLUSTER_XD_XC_PREJOIN_DX_IP"},{"entry":"WHERE product_id=1 AND version_id=200503"},{"entry":"GROUP BY outcome_class,outcome_type"},{"entry":") xd_xc"},{"entry":"WHERE nd>3 AND nc>3 AND (xd+xc)>3 AND ((nc+nd)\u2212(xc+xd))>3"},{"entry":") a WHERE POWER(( x_prime \u2212 (xd+xc) * (n_prime\/(nd+nc) )) ,2)>= 1.6 * (xd+xc)*"},{"entry":"(n_prime\/(nd+nc)) * ( 1\u2212(n_prime\/(nd+nc) ))"},{"entry":") b"},{"entry":") c"},{"entry":") d, ALL_CODE_XWALK o"},{"entry":"WHERE SUBSTR(d.outcome_class,1,2)=o.code_type(+) AND"},{"entry":"d.outcome_type=o.code_set(+)"},{"entry":"commit;"},{"entry":"delete from NOFILTER_PRESCORE_DX_IP where product_id=1 AND"},{"entry":"version_id=200503;"},{"entry":"commit;"},{"entry":"INSERT \/*+append*\/ INTO NOFILTER_PRESCORE_DX_IP"},{"entry":"SELECT * FROM"},{"entry":"("},{"entry":"SELECT 1 product_id,200503 version_id,"},{"entry":"d.attribute,d.attribute_value,a.code_desc \u201cAttribute value"},{"entry":"desc\u201d,d.outcome_class,d.outcome_type,o.code_desc \u201cOutcome type"},{"entry":"desc\u201d,d.xd,d.nd,d.xc,d.nc,"},{"entry":"CASE WHEN d.xc>0 THEN TO_CHAR( d.xd*d.nc\/(d.xc*d.nd),\u20189999990.9\u2019) ELSE\u2018--\u2019"},{"entry":"END rr,"},{"entry":"CASE WHEN (x\u2212plower*x)>0 THEN (plower*x\/d.nd)\/((x\u2212plower*x)\/d.nc) ELSE 0 END"},{"entry":"rrlower,"},{"entry":"CASE WHEN (x\u2212pupper*x)>0 THEN (pupper*x\/d.nd)\/((x\u2212pupper*x)\/d.nc) ELSE 0 END"},{"entry":"rrupper,"},{"entry":"CASE WHEN cumul_hyper>1E\u2212128 THEN"},{"entry":"score_sign*TRUNC(LOG(10,d.cumul_hyper)) ELSE \u221210*score_sign END score"},{"entry":"FROM"},{"entry":"("},{"entry":"SELECT c.*,(\u2212b_high+SQRT(POWER(b_high,2)\u22124*a*c_high))\/(2*a) pupper,(\u2212b_low\u2212"},{"entry":"SQRT(POWER(b_low,2)\u22124*a*c_low))\/(2*a) plower,"},{"entry":"\u2002Wu4 Function9biot(x_prime,n_prime,xd+xc,nd+nc) cumul_hyper"},{"entry":"FROM"},{"entry":"("},{"entry":"SELECT b.*,1+d a,\u22122*pd_low\u2212d b_low,\u22122*pd_high\u2212d b_high,POWER(pd_low,2)"},{"entry":"c_low,POWER(pd_high,2) c_high FROM ("},{"entry":"SELECT a.*,xd+xc x,POWER(1.96,2)\/(xd+xc) d,(Xd\u2212.5)\/(xd+xc)"},{"entry":"pd_low,(Xd+.5)\/(xd+xc) pd_high FROM"},{"entry":"("},{"entry":"SELECT"},{"entry":"nd_nc.attribute,nd_nc.attribute_value,xd_xc.outcome_class,xd_xc.outcome_type,xd_xc.x"},{"entry":"d,nd_nc.nd,xd xc.xc,nd_nc.nc"},{"entry":",CASE WHEN xd>(xd+xc)*nd\/(nd+nc) THEN xc ELSE xd END x_prime"},{"entry":",CASE WHEN xd>(xd+xc)*nd\/(nd+nc) THEN nc ELSE nd END n_prime"},{"entry":",CASE WHEN xd>(xd+xc)*nd\/(nd+nc) THEN \u22121 ELSE CASE WHEN xd="},{"entry":"(xd+xc)*nd\/(nd+nc) THEN 0 ELSE 1 END END score_sign"},{"entry":"FROM"},{"entry":"("},{"entry":"SELECT attribute,attribute_value"},{"entry":",COUNT (UNIQUE CASE WHEN groupflag=1 THEN newindv_id ELSE NULL END)"},{"entry":"nd"},{"entry":",COUNT (UNIQUE CASE WHEN groupflag=0 THEN newindv_id ELSE NULL END)"},{"entry":"nc"},{"entry":"FROM"},{"entry":"CLUSTER_BASELINE_POPS WHERE product_id=1 AND version_id=200503"},{"entry":"GROUP BY attribute,attribute_value"},{"entry":") nd_nc"},{"entry":","},{"entry":"("},{"entry":"SELECT attribute,attribute_value,outcome_class,outcome_type"},{"entry":",COUNT (UNIQUE CASE WHEN groupflag=1 THEN newindv_id ELSE NULL END)"},{"entry":"xd"},{"entry":",COUNT (UNIQUE CASE WHEN groupflag=0 THEN newindv_id ELSE NULL END)"},{"entry":"xc"},{"entry":"FROM"},{"entry":"CLUSTER_XD_XC_PREJOIN_DX_IP"},{"entry":"WHERE product_id=1 AND version_id=200503"},{"entry":"GROUP BY attribute,attribute_value,outcome_class,outcome_type"},{"entry":") xd_xc"},{"entry":"WHERE nd_nc.attribute=xd_xc.attribute AND"},{"entry":"nd_nc.attribute_value=xd_xc.attribute_value AND nd>3 AND nc>3 AND (xd+xc)>3"},{"entry":"AND ((nc+nd)\u2212(xc+xd))>3"},{"entry":") a WHERE POWER(( x_prime \u2212 (xd+xc) * (n_prime\/(nd+nc) )) ,2)>= 1.6 * (xd+xc)*"},{"entry":"(n_prime\/(nd+nc)) * ( 1\u2212(n_prime\/(nd+nc) ))"},{"entry":") b"},{"entry":") c"},{"entry":") d, ALL_CODE_XWALK a,ALL_CODE_XWALK"},{"entry":"o,BASE_SCORE_FILTER_3DX_IP c"},{"entry":"WHERE SUBSTR(d.attribute,1,2)=a.code_type(+) AND"},{"entry":"d.attribute_value=a.code_set(+) AND SUBSTR(d.outcome_class,1,2)=o.code_type(+)"},{"entry":"AND d.outcome_type=o.code_set(+)"},{"entry":"AND d.outcome_class= c.outcome_class(+) AND d.outcome_type=c.outcome_type(+)"},{"entry":"AND c.version_id(+)=200503 AND c.product_id(+)=1"},{"entry":"AND ABS(CASE WHEN cumul_hyper>1E\u2212128 THEN"},{"entry":"score_sign*TRUNC(LOG(10,cumul_hyper)) ELSE \u221210*score_sign"},{"entry":"END)>ABS(nvl(c.score,0))"},{"entry":"AND ABS(CASE WHEN cumul_hyper>1E\u2212128 THEN"},{"entry":"score_sign*TRUNC(LOG(10,cumul_hyper)) ELSE \u221210*score_sign END)>=3"},{"entry":"UNION"},{"entry":"SELECT * FROM BASE_SCORE_FILTER_3DX_IP WHERE product_id=1 AND"},{"entry":"version_id=200503 AND ABS(score)>=3"},{"entry":")"},{"entry":"ORDER BY ABS(score) DESC,xd+xc DESC;"},{"entry":"commit;"},{"entry":"delete from CLUSTER_XD_XC_PREJOIN_RX where product_id=1 AND"},{"entry":"version_id=200503;"},{"entry":"commit;"},{"entry":"INSERT \/*+ append*\/ INTO CLUSTER_XD_XC_PREJOIN_rx"},{"entry":"SELECT DISTINCT"},{"entry":"base.product_id,base.version_id,base.newindv_id,base.groupflag,base.attribute,base."},{"entry":"attribute_value,emergent.outcome_class,emergent.outcome_type,emergent.days_in_study"},{"entry":"FROM"},{"entry":"(SELECT product_id,version_id,b.NEWINDV_ID,b.groupflag,\u2018Days since first"},{"entry":"dispensing\u2019 attribute, \u20181 to 7 days\u2019 attribute_value,1 beginning,7 ending"},{"entry":"FROM COHORT b WHERE b.match=1 AND b.termdate-b.indexdt >=1 AND"},{"entry":"product_id=1 AND version_id=200503"},{"entry":"UNION"},{"entry":"SELECT product_id,version_id,b.NEWINDV_ID,b.groupflag,\u2018Days since first"},{"entry":"dispensing\u2019 attribute, \u20188 to 29 days\u2019 attribute_value,8 beginning,29 ending"},{"entry":"FROM COHORT b WHERE b.match=1 AND b.termdate-b.indexdt >=8 AND"},{"entry":"product_id=1 AND version_id=200503"},{"entry":"UNION"},{"entry":"SELECT product_id,version_id,b.NEWINDV_ID,b.groupflag,\u2018Days since first"},{"entry":"dispensing\u2019 attribute, \u201830 to 89 days\u2019 attribute_value,30 beginning,89 ending"},{"entry":"FROM COHORT b WHERE b.match=1 AND b.termdate-b.indexdt >=30 AND"},{"entry":"product_id=1 AND version_id=200503"},{"entry":"UNION"},{"entry":"SELECT product_id,version_id,b.NEWINDV_ID,b.groupflag,\u2018Days since first"},{"entry":"dispensing\u2019 attribute, \u201890 to 365 days\u2019 attribute_value,90 beginning,365 ending"},{"entry":"FROM COHORT b WHERE b.match=1 AND b.termdate-b.indexdt >=90 AND"},{"entry":"product_id=1 AND version_id=200503"},{"entry":"UNION"},{"entry":"SELECT product_id,version_id,NEWINDV_ID,groupflag,\u2018GENDER\u2019 attribute,sex"},{"entry":"attribute_value ,0 beginning,99999 ending"},{"entry":"FROM COHORT WHERE match=1 AND product_id=1 AND version_id=200503"},{"entry":"UNION"},{"entry":"SELECT product_id,version_id,NEWINDV_ID,groupflag,\u2018AGE GROUP\u2019"},{"entry":"attribute,b.AGE_GROUP_name attribute_value ,0 beginning,99999 ending"},{"entry":"FROM COHORT a, AGE_GROUP b WHERE a.AGE BETWEEN"},{"entry":"b.AGE_GROUP_START_YR AND b.AGE_GROUP_END_YR AND a.match=1 AND"},{"entry":"product_id=1 AND version_id=200503"},{"entry":"UNION"},{"entry":"SELECT product_id,version_id,NEWINDV_ID,groupflag,\u2018REGION\u2019 attribute,region"},{"entry":"attribute_value ,0 beginning,99999 ending"},{"entry":"FROM COHORT WHERE match=1 AND product_id=1 AND version_id=200503"},{"entry":"UNION"},{"entry":"SELECT product_id,version_id,NEWINDV_ID,groupflag,\u2018DX Baseline\u2019 attribute,dx"},{"entry":"attribute_value ,0 beginning,99999 ending"},{"entry":"FROM DXBASE WHERE match=1 AND product_id=1 AND version_id=200503 AND"},{"entry":"indexflag=0 and drhlinpat=1"},{"entry":"UNION"},{"entry":"SELECT product_id,version_id,NEWINDV_ID,groupflag,\u2018PX Baseline\u2019"},{"entry":"attribute,proc_catcode attribute_value ,0 beginning,99999 ending"},{"entry":"FROM pxbase WHERE match=1 AND product_id=1 AND version_id=200503 AND"},{"entry":"indexflag=0"},{"entry":"UNION"},{"entry":"SELECT product_id,version_id,NEWINDV_ID,groupflag,\u2018RX Baseline\u2019,THERSPC"},{"entry":"attribute_value ,0 beginning,99999 ending"},{"entry":"FROM rxbase WHERE match=1 AND product_id=1 AND version_id=200503 AND"},{"entry":"indexflag=0) base"},{"entry":","},{"entry":"(SELECT DISTINCT product_id, version_id, a.newindv_id, a.groupflag,"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2018RX\u2019 outcome_class,"},{"entry":"\u2003\u2003\u2003\u2003\u2003rx emerg outcome_type,"},{"entry":"\u2003\u2003\u2003\u2003\u2003days_in_study"},{"entry":"\u2003\u2003\u2003\u2009FROM rxemerg a"},{"entry":"\u2003\u2003\u2003WHERE a.match = 1"},{"entry":"\u2003\u2003\u2003\u2003AND a.product_id=1"},{"entry":"\u2003\u2003\u2003\u2003AND a.version_id = 200503"},{"entry":") emergent"},{"entry":"WHERE base.newindv_id=emergent.newindv_id AND emergent.days_in_study"},{"entry":"BETWEEN base.beginning AND base.ending;"},{"entry":"commit;"},{"entry":"delete from BASE_SCORE_FILTER_RX where product_id=1 AND version_id=200503;"},{"entry":"commit;"},{"entry":"INSERT \/*+append*\/ INTO BASE_SCORE_FILTER_RX"},{"entry":"SELECT 1 product_id,200503 version_id,"},{"entry":"\u2018Baseline\u2019 attribute,\u201c attribute_value,\u201d \u201cAttribute value"},{"entry":"desc\u201d,d.outcome_class,d.outcome_type,o.code desc \u201cOutcome type desc\u201d,xd,nd,xc,nc,"},{"entry":"CASE WHEN xc>0 THEN TO CHAR( d.xd*d.nc\/(d.xc*d.nd),\u20189999990.9\u2019) ELSE \u2018--\u2019"},{"entry":"END rr,"},{"entry":"CASE WHEN (x\u2212plower*x)>0 THEN (plower*x\/nd)\/((x\u2212plower*x)\/nc) ELSE 0 END"},{"entry":"rrlower,"},{"entry":"CASE WHEN (x\u2212pupper*x)>0 THEN (pupper*x\/nd)\/((x\u2212pupper*x)\/nc) ELSE 0 END"},{"entry":"rrupper,"},{"entry":"CASE WHEN cumul_hyper>1E\u2212128 THEN"},{"entry":"score_sign*TRUNC(LOG(10,cumul_hyper)) ELSE \u221210*score_sign END score"},{"entry":"FROM"},{"entry":"("},{"entry":"SELECT c.*,(\u2212b_high+SQRT(POWER(b_high,2)\u22124*a*c_high))\/(2*a) pupper,(\u2212b_low\u2212"},{"entry":"SQRT(POWER(b_low,2)\u22124*a*c_low))\/(2*a) plower,"},{"entry":"\u2002Wu4 Function9biot(x_prime,n_prime,xd+xc,nd+nc) cumul_hyper"},{"entry":"FROM"},{"entry":"("},{"entry":"SELECT b.*,la,\u22122*pd_low\u2212d b_low,\u22122*pd_high\u2212d b_high,POWER(pd_low,2)"},{"entry":"c_low,POWER(pd_high,2) c_high FROM ("},{"entry":"SELECT a.*,xd+xc x,POWER(1.96,2)\/(xd+xc) d,(Xd\u2212.5)\/(xd+xc)"},{"entry":"pd_low,(Xd+.5)\/(xd+xc) pd_high FROM"},{"entry":"("},{"entry":"SELECT"},{"entry":"xd_xc.outcome_class,xd_xc.outcome_type,xd_xc.xd,nd_nc.nd,xd_xc.xc,nd_nc.nc"},{"entry":",CASE WHEN xd>(xd+xc)*nd\/(nd+nc) THEN xc ELSE xd END x_prime"},{"entry":",CASE WHEN xd>(xd+xc)*nd\/(nd+nc) THEN nc ELSE nd END n_prime"},{"entry":",CASE WHEN xd>(xd+xc)*nd\/(nd+nc) THEN \u22121 ELSE CASE WHEN xd="},{"entry":"(xd+xc)*nd\/(nd+nc) THEN 0 ELSE 1 END END score_sign"},{"entry":"FROM"},{"entry":"("},{"entry":"SELECT"},{"entry":"COUNT (UNIQUE CASE WHEN groupflag=1 AND match=1 THEN newindv_id ELSE"},{"entry":"NULL END) nd"},{"entry":",COUNT (UNIQUE CASE WHEN groupflag=0 AND match=1 THEN newindv_id"},{"entry":"ELSE NULL END) nc"},{"entry":"FROM"},{"entry":"cohort WHERE product_id=1 AND version_id=200503"},{"entry":") nd_nc"},{"entry":","},{"entry":"("},{"entry":"SELECT outcome_class,outcome_type"},{"entry":",COUNT (UNIQUE CASE WHEN groupflag=1 THEN newindv_id ELSE NULL END)"},{"entry":"xd"},{"entry":",COUNT (UNIQUE CASE WHEN groupflag=0 THEN newindv_id ELSE NULL END)"},{"entry":"xc"},{"entry":"FROM"},{"entry":"CLUSTER_XD_XC_PREJOIN_RX"},{"entry":"WHERE product_id=1 AND version_id=200503"},{"entry":"GROUP BY outcome_class,outcome_type"},{"entry":") xd_xc"},{"entry":"WHERE nd>3 AND nc>3 AND (xd+xc)>3 AND ((nc+nd)\u2212(xc+xd))>3"},{"entry":") a WHERE POWER(( x_prime \u2212 (xd+xc) * (n_prime\/(nd+nc) )) ,2)>= 1.6 * (xd+xc)*"},{"entry":"(n_prime\/(nd+nc)) * ( 1\u2212(n_prime\/(nd+nc) ))"},{"entry":") b"},{"entry":") c"},{"entry":") d, ALL_CODE_XWALK o"},{"entry":"WHERE SUBSTR(d.outcome_class,1,2)=o.code_type(+) AND"},{"entry":"d.outcome_type=o.code_set(+)"},{"entry":";"},{"entry":"commit;"},{"entry":"delete from NOFILTER_PRESCORE_RX where product_id=1 AND"},{"entry":"version_id=200503;"},{"entry":"commit;"},{"entry":"INSERT \/*+append*\/ INTO NOFILTER_PRESCORE_RX"},{"entry":"SELECT * FROM"},{"entry":"("},{"entry":"SELECT 1 product_id,200503 version_id,"},{"entry":"d.attribute,d.attribute_value,a.code_desc \u201cAttribute value"},{"entry":"desc\u201d,d.outcome_class,d.outcome_type,o.code_desc \u201cOutcome type"},{"entry":"desc\u201d,d.xd,d.nd,d.xc,d.nc,"},{"entry":"CASE WHEN d.xc>0 THEN TO_CHAR( d.xd*d.nc\/(d.xc*d.nd),\u20189999990.9\u2019) ELSE\u2018--\u2019"},{"entry":"END rr,"},{"entry":"CASE WHEN (x\u2212plower*x)>0 THEN (plower*x\/d.nd)\/((x\u2212plower*x)\/d.nc) ELSE 0 END"},{"entry":"rrlower,"},{"entry":"CASE WHEN (x\u2212pupper*x)>0 THEN (pupper*x\/d.nd)\/((x\u2212pupper*x)\/d.nc) ELSE 0 END"},{"entry":"rrupper,"},{"entry":"CASE WHEN cumul_hyper>1E\u2212128 THEN"},{"entry":"score_sign*TRUNC(LOG(10,d.cumul_hyper)) ELSE \u221210*score_sign END score"},{"entry":"FROM"},{"entry":"("},{"entry":"SELECT c.*,(\u2212b_high+SQRT(POWER(b_high,2)\u22124*a*c_high))\/(2*a) pupper,(\u2212b_low\u2212"},{"entry":"SQRT(POWER(b_low,2)\u22124*a*c_low))\/(2*a) plower,"},{"entry":"\u2002Wu4_Function9biot(x_prime,n_prime,xd+xc,nd+nc) cumul_hyper"},{"entry":"FROM"},{"entry":"("},{"entry":"SELECT b.*,1+d a,\u22122*pd_low\u2212d b_low,\u22122*pd_high\u2212d b_high,POWER(pd_low,2)"},{"entry":"c_low,POWER(pd_high,2) c_high FROM ("},{"entry":"SELECT a.*,xd+xc x,POWER(1.96,2)\/(xd+xc) d,(Xd\u2212.5)\/(xd+xc)"},{"entry":"pd_low,(Xd+.5)\/(xd+xc) pd_high FROM"},{"entry":"("},{"entry":"SELECT"},{"entry":"nd_nc.attribute,nd_nc.attribute_value,xd_xc.outcome_class,xd_xc.outcome_type,xd_xc.x"},{"entry":"d,nd_nc.nd,xd_xc.xc,nd_nc.nc"},{"entry":",CASE WHEN xd>(xd+xc)*nd\/(nd+nc) THEN xc ELSE xd END x_prime"},{"entry":",CASE WHEN xd>(xd+xc)*nd\/(nd+nc) THEN nc ELSE nd END n_prime"},{"entry":",CASE WHEN xd>(xd+xc)*nd\/(nd+nc) THEN \u22121 ELSE CASE WHEN xd="},{"entry":"(xd+xc)*nd\/(nd+nc) THEN 0 ELSE 1 END END score_sign"},{"entry":"FROM"},{"entry":"("},{"entry":"SELECT attribute,attribute_value"},{"entry":",COUNT (UNIQUE CASE WHEN groupflag=1 THEN newindv_id ELSE NULL END)"},{"entry":"nd"},{"entry":",COUNT (UNIQUE CASE WHEN groupflag=0 THEN newindv_id ELSE NULL END)"},{"entry":"nc"},{"entry":"FROM"},{"entry":"CLUSTER_BASELINE_POPS WHERE product_id=1 AND version_id=200503"},{"entry":"GROUP BY attribute,attribute_value"},{"entry":") nd_nc"},{"entry":","},{"entry":"("},{"entry":"SELECT attribute,attribute_value,outcome_class,outcome_type"},{"entry":",COUNT (UNIQUE CASE WHEN groupflag=1 THEN newindv_id ELSE NULL END)"},{"entry":"xd"},{"entry":",COUNT (UNIQUE CASE WHEN groupflag=0 THEN newindv_id ELSE NULL END)"},{"entry":"xc"},{"entry":"FROM"},{"entry":"CLUSTER_XD_XC_PREJOIN_RX"},{"entry":"WHERE product_id=1 AND version_id=200503"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}]}}}}},"Techniques of this disclosure address a number of challenges in data manipulation encountered in both the medical space and other areas.","Data Acquisition","All Attributes and outcomes may be stored in a coded manner that allows complete flexibility to accommodate all manner of terms (e.g., attributes like \u201cMale\u201d, \u201cValium\u201d and \u201cAge\u201d can occupy the same attribute field and be processed identically). SSTs provider rapid working sets of data, reducing physical I\/Os by presenting the data in a \u201crich\u201d format where each database block holds many rows of the desired data. For cluster investigations, SSTs can be created that hold all possible attribute\/outcome permutation sets. Sub-clusters (double attributes) and syndromes (double outcomes) can also be processed if desired.","Data Reduction","Logarithms may be used in both the generation of the initial recursion point (logarithmic factorial table) and in the recurring of successive terms (to avoid over\/under flow). Attribute\/outcome sets are quickly mingled and counted using the pre-permeated tables. Uninteresting cases may be filtered out prior to processing if desired.","Data Presentation","Scores sets can be presented to the user in order of signal strength. Geographic charts can be used to provider \u201cbird's eye\u201d views of disease clusters, provider clusters, and the trending of both.",{"@attributes":{"id":"p-0317","num":"0325"},"tables":{"@attributes":{"id":"TABLE-US-00038","num":"00038"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"91pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"126pt","align":"left"}}],"thead":{"row":[{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}},{"entry":["Problem",{}]},{"entry":["(in order of explanation)","Example Solution"]},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}}]},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["Attribute mixed forms","Create attribute table that allow co-"]},{"entry":["(Male and DX = 250)","mingling of all possible attribute types"]},{"entry":["Physical Disk I\/Os required","Packed tables containing only the fields"]},{"entry":["for data retrieval","desired (DB blocks are \u201crich\u201d and field-"]},{"entry":[{},"efficient)"]},{"entry":["Hash Join of attribute\/","Pre-permeated (and packed)"]},{"entry":["outcomes","attribute\/outcome table sets"]},{"entry":["Large number of permutation","Elimination of uninteresting sets prior to"]},{"entry":["sets","processing (per Walker input)"]},{"entry":["Hypergeometric:","Work entirely in logarithms"]},{"entry":"Numeric Over\/under flow"},{"entry":["Hypergeometric: Factorial","Pre-generate, cached table of all factorials"]},{"entry":["generation","(values held in LOG form, 4 cached I\/Os"]},{"entry":[{},"to create initial recursion point)"]},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}}]}}}}},"Though SQL set based operations (MINUS, UNION, INTERSECT) are fast, it is possible to realize even faster results if the set variables are limited to only those needed for the set based operation. For example, if one is interested in the gender distribution of patients with diabetes who are also on LIPITOR but have not had coronary bypass surgery in the last year, one can construct the SQL as below. A key point is that, in such an example, the \u201cindividual_id\u201d is all that is required for the set intersection while \u201cgender\u201d is a piggyback variable defined as useful in segmenting the counts (e.g. male and female below). When the SQL is coded in this way, the database is forced to hash both patient_id and gender when checking for individuals in both sets. Gender is redundant and not needed for this particular comparison operation. After the comparisons are made, gender is need to count individuals in the various segments.",{"@attributes":{"id":"p-0319","num":"0327"},"tables":{"@attributes":{"id":"TABLE-US-00039","num":"00039"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0","pgwide":"1"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"266pt","align":"left"}},"thead":{"row":{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"SELECT COUNT(UNIQUE a.individual_id) -- Set based (MINUS\/INTERSECT)"},{"entry":",count(unique case when gender=\u2018M\u2019 then individual_id else null end) males"},{"entry":",count(unique case when gender=\u2018F\u2019 then individual_id else null end) females FROM ("},{"entry":"Select individual_id, gender from attribute_table where attribute=\u2018DIABETES\u2019"},{"entry":"INTERSECT -- DB forced to process gender here Select individual_id, gender from"},{"entry":"attribute_table where attribute=\u2018LIPITOR\u2019"},{"entry":"MINUS -- DB forced to process gender here Select individual_id, gender from"},{"entry":"attribute_table where attribute=\u2018CABG\u2019"},{"entry":")"},{"entry":"\u2003\u2003If, however, the SQL is coded with inline views as below, the database does not"},{"entry":"have to match \u201cgender\u201d when determining valid individuals i.e. only using \u201cgender\u201d in"},{"entry":"the\u2003final\u2003segmentation\u2003case\u2003statements.\u2003\u2003The\u2003predicate\u2003\u201cWHERE"},{"entry":"iv1.inidividual_id=iv2.individual_id\u201d is more quickly doing the (above) INTERSECT"},{"entry":"and the \u201cWHERE NOT EXISTS...\u201d is more quickly doing the (above) MINUS operation."},{"entry":"SELECT COUNT(UNIQUE a.individual_id) -- Set based (MINUS\/INTERSECT)"},{"entry":",count(unique case when gender=\u2018M\u2019 then individual_id else null end) males"},{"entry":",count(unique case when gender=\u2018F\u2019 then individual_id else null end) females FROM ("},{"entry":"Select iv1.individual_id,iv1.gender FROM (Select individual_id, gender from"},{"entry":"attribute_table where attribute=\u2018DIABETES\u2019 )iv1 ,(Select individual_id, gender from"},{"entry":"attribute_table\u2003\u2003where\u2003\u2003attribute=\u2018LIPITOR\u2019)\u2003\u2003iv2\u2003\u2003WHERE"},{"entry":"iv1.inidividual_id=iv2.individual_id ) iv12 WHERE NOT EXISTS SELECT \u2018X\u2019 FROM"},{"entry":"attribute_table z WHERE z.attribute=\u2018CABG\u2019 and z.individual_id=iv12.individual_id"},{"entry":")"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}]}}}}},"In practice the two approaches might appear as below. The inline view version gives the same results as the set based SQL and, in this example, returns the data four times faster than the set based SQL. Performance is likely to be even more pronounced between the two approaches if more piggyback variables are in play.",{"@attributes":{"id":"p-0321","num":"0329"},"tables":{"@attributes":{"id":"TABLE-US-00040","num":"00040"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0","pgwide":"1"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"308pt","align":"left"}},"thead":{"row":{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"SELECT COUNT(UNIQUE a.individual_id) -- Set based (MINUS\/INTERSECT)"},{"entry":",count(unique case when gender=\u2018M\u2019 then individual_id else null end) males"},{"entry":",count(unique case when gender=\u2018F\u2019 then individual_id else null end) females"},{"entry":",count(unique case when gender not in (\u2018F\u2019,\u2018M\u2019) then individual_id else null end) unknown"},{"entry":"FROM ( SELECT a.INDIVIDUAL_ID, a.DOB, a.GENDER, a.ZIP5, SUBSTR(a.ZIP5,"},{"entry":"1,\u20033)\u2003ZIP3\u2003FROM\u2003INDIVIDUAL_ID\u2003a\u2003WHERE\u2003a.CODE_KEY\u2003IN"},{"entry":"(\u2018DX5053481\u2019,\u2018DX505348481\u2019,\u2018DX50534848481\u2019,\u2018DX50534848491\u2019,\u2018DX505348491\u2019,\u2018DX505348511"},{"entry":"\u2019,\u2018DX50534851481\u2019,\u2018DX50534851491\u2019,\u2018DX505348551\u2019,\u2018DX505348561\u2019"},{"entry":",\u2018DX505348571\u2019,\u2018DX505351531\u2019,\u2018DX515355501\u2019,\u2018DX515450481\u2019,\u2018DX51545048491\u2019,\u2018DX51545452491"},{"entry":"\u2019,\u2018DX535656491\u2019,\u2018DX545256481\u2019,\u2018DX54525648481\u2019,\u2018DX54525648491\u2019,\u2018DX54525648501"},{"entry":"\u2019"},{"entry":",\u2018DX54525648511\u2019,\u2018DX54525648521\u2019,\u2018DX555553481\u2019,\u2018DX555553491\u2019,\u2018DX864956481\u2019,\u2018DX865555491"},{"entry":"\u2019,\u2018PX65535348481\u2019,\u2018PX65535348491\u2019,\u2018PX65535348501\u2019,\u2018PX65535348511\u2019"},{"entry":",\u2018PX65535348521\u2019,\u2018PX65535348531\u2019,\u2018PX65535348541\u2019,\u2018PX65535348551\u2019,\u2018PX65535348561"},{"entry":"\u2019,\u2018PX71484948561\u2019,\u2018PX71484948571\u2019,\u2018PX83574952481\u2019,\u2018PX83574952491\u2019"},{"entry":",\u2018PX83575253531\u2019,\u2018PX83575254481\u2019,\u2018PX83575254531\u2019,\u2018PX89525451481\u2019)"},{"entry":"INTERSECT"},{"entry":"SELECT a.INDIVIDUAL_ID, a.DOB, a.GENDER, a.ZIP5, SUBSTR(a.ZIP5, 1, 3) ZIP3"},{"entry":"FROM INDIVIDUAL_ID a WHERE a.CODE_KEY IN (\u2018RX-7101552337652\u2019, \u2018RX-"},{"entry":"710155341\u2019,\u2003\u2018RX-7101554037652\u2019, \u2018RX-7101562337652\u2019, \u2018RX-7101564037652\u2019,\u2018RX-"},{"entry":"7101572337652\u2019,\u2018RX-710157731\u2019,\u2018RX-7101582337652\u2019,\u2018RX-710158731\u2019)"},{"entry":"MINUS"},{"entry":"SELECT a.INDIVIDUAL_ID, a.DOB, a.GENDER, a.ZIP5, SUBSTR(a.ZIP5, 1, 3) ZIP3"},{"entry":"FROM\u2003\u2003INDIVIDUAL_ID\u2003\u2003a\u2003\u2003WHERE\u2003\u2003a.CODE_KEY\u2003\u2003IN"},{"entry":"(\u2018PX48485354541\u2019,\u2018PX51515349481\u2019,\u2018PX51515349491\u2019,\u2018PX51515349501\u2019,\u2018PX51515349511"},{"entry":"\u2019,\u2018PX51515349521\u2019,\u2018PX51515349541\u2019,\u2018PX51515349551\u2019,\u2018PX51515349561\u2019"},{"entry":",\u2018PX51515349571\u2019,\u2018PX51515350491\u2019,\u2018PX51515350501\u2019,\u2018PX51515350511\u2019,\u2018PX51515351511"},{"entry":"\u2019,\u2018PX51515351521\u2019,\u2018PX51515351531\u2019,\u2018PX51515351541\u2019)"},{"entry":") a"},{"entry":"SELECT COUNT(UNIQUE individual_id) -- Inline View based ,count(unique case"},{"entry":"when gender=\u2018M\u2019 then individual_id else null end) males ,count(unique case when"},{"entry":"gender=\u2018F\u2019 then individual_id else null end) females ,count(unique case when gender not"},{"entry":"in\u2003(\u2018F\u2019,\u2018M\u2019)\u2003then\u2003individual_id\u2003else\u2003null\u2003end)\u2003unknown\u2003FROM\u2003( SELECT"},{"entry":"a.individual_id,a.gender FROM ( SELECT a.INDIVIDUAL_ID, a.DOB, a.GENDER,"},{"entry":"a.ZIP5,\u2003SUBSTR(a.ZIP5,\u20031,\u20033)\u2003ZIP3\u2003FROM\u2003INDIVIDUAL_ID\u2003a\u2003WHERE"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"273pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"35pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":["a.CODE_KEY","IN"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"308pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"(\u2018DX5053481\u2019,\u2018DX505348481\u2019,\u2018DX50534848481\u2019,\u2018DX50534848491\u2019,\u2018DX505348491\u2019,\u2018DX505348511"},{"entry":"\u2019,\u2018DX50534851481\u2019,\u2018DX50534851491\u2019,\u2018DX505348551\u2019,\u2018DX505348561\u2019"},{"entry":",\u2018DX505348571\u2019,\u2018DX505351531\u2019,\u2018DX515355501\u2019,\u2018DX515450481\u2019,\u2018DX51545048491\u2019,\u2018DX51545452491"},{"entry":"\u2019,\u2018DX535656491\u2019,\u2018DX545256481\u2019,\u2018DX54525648481\u2019,\u2018DX54525648491\u2019,\u2018DX54525648501"},{"entry":"\u2019"},{"entry":",\u2018DX54525648511\u2019,\u2018DX54525648521\u2019,\u2018DX555553481\u2019,\u2018DX555553491\u2019,\u2018DX864956481\u2019,\u2018DX865555491"},{"entry":"\u2019,\u2018PX65535348481\u2019,\u2018PX65535348491\u2019,\u2018PX65535348501\u2019,\u2018PX65535348511\u2019"},{"entry":",\u2018PX65535348521\u2019,\u2018PX65535348531\u2019,\u2018PX65535348541\u2019,\u2018PX65535348551\u2019,\u2018PX65535348561"},{"entry":"\u2019,\u2018PX71484948561\u2019,\u2018PX71484948571\u2019,\u2018PX83574952481\u2019,\u2018PX83574952491\u2019"},{"entry":",\u2018PX83575253531\u2019,\u2018PX83575254481\u2019,\u2018PX83575254531\u2019,\u2018PX89525451481\u2019)"},{"entry":") a,"},{"entry":"("},{"entry":"SELECT a.INDIVIDUAL_ID, a.DOB, a.GENDER, a.ZIP5, SUBSTR(a.ZIP5, 1, 3) ZIP3"},{"entry":"FROM INDIVIDUAL_ID a WHERE a.CODE_KEY IN (\u2018RX-7101552337652\u2019, \u2018RX-"},{"entry":"710155341\u2019,\u2003\u2002\u2018RX-7101554037652\u2019, \u2018RX-7101562337652\u2019, \u2018RX-7101564037652\u2019,\u2018RX-"},{"entry":"7101572337652\u2019,\u2018RX-710157731\u2019,\u2018RX-7101582337652\u2019,\u2018RX-710158731\u2019)"},{"entry":") b"},{"entry":"WHERE a.individual_id=b.individual_id"},{"entry":") d WHERE NOT EXISTS ("},{"entry":"SELECT\u2003\u2018X\u2019\u2003FROM\u2003INDIVIDUAL_ID\u2003z\u2003WHERE\u2003z.CODE_KEY\u2003IN"},{"entry":"(\u2018PX48485354541\u2019,\u2018PX51515349481\u2019,\u2018PX51515349491\u2019,\u2018PX51515349501\u2019,\u2018PX51515349511"},{"entry":"\u2019"},{"entry":",\u2018PX51515349521\u2019,\u2018PX51515349541\u2019,\u2018PX51515349551\u2019,\u2018PX51515349561\u2019,\u2018PX51515349571"},{"entry":"\u2019,\u2018PX51515350491\u2019,\u2018PX51515350501\u2019,\u2018PX51515350511\u2019,\u2018PX51515351511\u2019"},{"entry":",\u2018PX51515351521\u2019,\u2018PX51515351531\u2019,\u2018PX51515351541\u2019)"},{"entry":"AND zindividual_id=dindividual_id);"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}]}}]}}},"With the benefit of the present disclosure, those having ordinary skill in the art will comprehend that techniques claimed here may be modified and applied to a number of additional, different applications, achieving the same or a similar result. The claims cover all such modifications that fall within the scope and spirit of this disclosure.","Each of the following references is hereby incorporated by reference in its entirety:\n\n"],"BRFSUM":[{},{}],"heading":["BACKGROUND OF THE INVENTION","SUMMARY OF THE INVENTION","DESCRIPTION OF ILLUSTRATIVE EMBODIMENTS","***","EXAMPLE 1","EXAMPLE 2","EXAMPLE 3","Master sql, Including Hypergeometric Call","EXAMPLE 4","Filename: r4product_id1_opiprx.sql","EXAMPLE 5","EXAMPLE 6","Alternate Coding: Inline Views vs. Set Based","***","References"],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"BRIEF DESCRIPTION OF THE DRAWINGS","p":["The following drawings form part of the present specification and are included to further demonstrate certain aspects of the present invention. The drawings do not limit the invention but simply offer examples.",{"@attributes":{"id":"p-0040","num":"0039"},"figref":["FIG. 1","FIG. 1"]},{"@attributes":{"id":"p-0041","num":"0040"},"figref":["FIG. 2","FIG. 2"]},{"@attributes":{"id":"p-0042","num":"0041"},"figref":"FIG. 3"},{"@attributes":{"id":"p-0043","num":"0042"},"figref":"FIGS. 4A-4C"},{"@attributes":{"id":"p-0044","num":"0043"},"figref":"FIG. 5"},{"@attributes":{"id":"p-0045","num":"0044"},"figref":"FIG. 6"},{"@attributes":{"id":"p-0046","num":"0045"},"figref":"FIG. 7"},{"@attributes":{"id":"p-0047","num":"0046"},"figref":"FIGS. 8-9"},{"@attributes":{"id":"p-0048","num":"0047"},"figref":"FIG. 10"}]},"DETDESC":[{},{}]}
