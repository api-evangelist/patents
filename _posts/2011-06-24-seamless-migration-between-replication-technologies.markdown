---
title: Seamless migration between replication technologies
abstract: Traditional methods for migrating between replication technologies require stopping the old replication technology and starting with the new replication technology from scratch. Replicated data sizes can be very large (e.g., on the order of a petabyte) which can take a considerable amount of time, often several weeks, to read. During this time, replication is unavailable. Example embodiments of the present invention provide a method, apparatus and computer-program product for seamless migration from a preexisting replication service to a new replication service by configuring the new replication service, disabling the preexisting replication service enabling the new replication service. Example embodiments of the present invention also provide for querying storage to determine available replication sets, presenting a graphical user interface to a user to enable the user to select a replication set for migration and automatically performing the migration.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08521691&OS=08521691&RS=08521691
owner: EMC Corporation
number: 08521691
owner_city: Hopkinton
owner_country: US
publication_date: 20110624
---

{"@attributes":{"id":"description"},"BRFSUM":[{},{}],"p":["A portion of the disclosure of this patent document may contain command formats and other computer language listings, all of which are subject to copyright protection. The copyright owner has no objection to the facsimile reproduction by anyone of the patent document or the patent disclosure, as it appears in the Patent and Trademark Office patent file or records, but otherwise reserves all copyright rights whatsoever.","This application relates to data replication.","Computer data is vital to today's organizations, and a significant part of protection against disasters is focused on data protection. As solid-state memory has advanced to the point where cost of memory has become a relatively insignificant factor, organizations can afford to operate with systems that store and process terabytes of data.","Conventional data protection systems include tape backup drives, for storing organizational production site data on a periodic basis. Such systems suffer from several drawbacks. First, they require a system shutdown during backup, since the data being backed up cannot be used during the backup operation. Second, they limit the points in time to which the production site can recover. For example, if data is backed up on a daily basis, there may be several hours of lost data in the event of a disaster. Third, the data recovery process itself takes a long time.","Another conventional data protection system uses data replication, by creating a copy of the organization's production site data on a secondary backup storage system, and updating the backup with changes. The backup storage system may be situated in the same physical location as the production storage system, or in a physically remote location. Data replication systems generally operate either at the application level, at the file system level, or at the data block level.","Current data protection systems try to provide continuous data protection, which enable the organization to roll back to any specified point in time within a recent history. Continuous data protection systems aim to satisfy two conflicting objectives, as best as possible; namely, (i) minimize the down time, in which the organization production site data is unavailable, during a recovery, and (ii) enable recovery as close as possible to any specified point in time within a recent history.","Continuous data protection typically uses a technology referred to as \u201cjournaling,\u201d whereby a log is kept of changes made to the backup storage. During a recovery, the journal entries serve as successive \u201cundo\u201d information, enabling rollback of the backup storage to previous points in time. Journaling was first implemented in database systems, and was later extended to broader data protection.","Traditional methods for migrating between replication technologies require stopping the old replication technology (i.e., the replication technology being replaced) and starting with the new replication technology from scratch. For example, consider a storage array with several volumes replicated using a preexisting replication technology. If a user desires to continue replication but using a new replication technology, such as RecoverPoint by EMC Corporation of Hopkinton, Mass., traditional migration methods require resynchronizing data between the production site and the replication site using the new replication technology once it is brought online. Replicated data sizes can be very large (e.g., on the order of a petabyte) thereby causing resynchronization to take a considerable amount of time, often several weeks, to read. During this time, replication is unavailable.","Example embodiments of the present invention provide a method, apparatus and computer-program product for seamless migration from a preexisting replication service to a new replication service by configuring the new replication service, disabling the preexisting replication service enabling the new replication service.","Journaling uses significant amounts of the volume on which the journal is stored. Conventionally, replication systems dynamically add storage for a journal, as described in U.S. Pat. No. 7,840,536, entitled \u201cMETHODS AND APPARATUS FOR DYNAMIC JOURNAL EXPANSIONASSIGNED,\u201d issued on Nov. 23, 2010 and assigned to EMC Corporation of Hopkinton, Mass., which is hereby incorporated by reference in its entirety. However, such conventional journaling mechanisms lack efficient methods to decrease the size of the journal.","Accordingly, example embodiments of the present invention leverage the punch command and thin LUNs in order to create a fully dynamic journal which can shrink and grow on demand. The journal may be assigned a maximum allowed size, as well as a journal protection window defining a period for which the journal should retain journal information. A set of currently used blocks will be used and, if protection window is large enough, the oldest data blocks from an undo stream will be punched out from the stream. The blocks may be large journal blocks of a direct LUN (DLUN). DLUNs are LUNs which thin having large volume chunks (e.g., 128 MB or 1 GB). Accordingly, the punch command punches large slices out of the LUN; however, the chunks are big enough that sequential I\/Os remain sequential, thereby increasing performance. A manager may monitor how much free space there is in the storage pool and regulate the journal growth if the pool is nearly empty. Additionally, the journal capacity may also depend on the actual usage of the replicated LUNs if the replicated LUNs are thin (i.e., maintain the journal at a particular percentage of the used storage capacity).","The following definitions are employed throughout the specification and claims.","BACKUP SITE\u2014a facility where replicated production site data is stored; the backup site may be located in a remote site or at the same location as the production site;","CLONE\u2014a clone may be a copy or clone of the image or images, drive or drives of a first location at a second location;","DELTA MARKING STREAM\u2014may mean the tracking of the delta between the production and replication site, which may contain the meta data of changed locations, the delta marking stream may be kept persistently on the journal at the production site of the replication, based on the delta marking data the DPA knows which locations are different between the production and the replica and transfers them to the replica to make both sites identical;","DPA\u2014a computer or a cluster of computers that serve as a data protection appliance, responsible for data protection services including inter alia data replication of a storage system, and journaling of I\/O requests issued by a host computer to the storage system;","HOST\u2014at least one computer or networks of computers that runs at least one data processing application that issues I\/O requests to one or more storage systems; a host is an initiator with a SAN;","HOST DEVICE\u2014an internal interface in a host, to a logical storage unit;","IMAGE\u2014a copy of a logical storage unit at a specific point in time;","INITIATOR\u2014a node in a SAN that issues I\/O requests;","JOURNAL\u2014a record of write transactions issued to a storage system; used to maintain a duplicate storage system, and to rollback the duplicate storage system to a previous point in time;","LOGICAL UNIT\u2014a logical entity provided by a storage system for accessing data from the storage system;","LUN\u2014a logical unit number for identifying a logical unit;","PHYSICAL STORAGE UNIT\u2014a physical entity, such as a disk or an array of disks, for storing data in storage locations that can be accessed by address;","PRODUCTION SITE\u2014a facility where one or more host computers run data processing applications that write data to a storage system and read data from the storage system;","SAN\u2014a storage area network of nodes that send and receive I\/O and other requests, each node in the network being an initiator or a target, or both an initiator and a target;","SOURCE SIDE\u2014a transmitter of data within a data replication workflow, during normal operation a production site is the source side; and during data recovery a backup site is the source side;","SNAPSHOT\u2014a Snapshot may refer to differential representations of an image, i.e. the snapshot may have pointers to the original volume, and may point to log volumes for changed locations. Snapshots may be combined into a snapshot array, which may represent different images over a time period;","SPLITTER\/PROTECTION AGENT\u2014may be an agent running either on a production host a switch or a storage array which can intercept I\/O and split them to a DPA and to the storage array, fail I\/O redirect I\/O or do any other manipulation to the I\/O;","STORAGE SYSTEM\u2014a SAN entity that provides multiple logical units for access by multiple SAN initiators;","TARGET\u2014a node in a SAN that replies to I\/O requests;","TARGET SIDE\u2014a receiver of data within a data replication workflow; during normal operation a back site is the target side, and during data recovery a production site is the target side; and","WAN\u2014a wide area network that connects local networks and enables them to communicate with one another, such as the Internet.",{"@attributes":{"id":"p-0043","num":"0042"},"figref":["FIG. 1","FIG. 1"],"b":["100","100"]},"During normal operations, the direction of replicate data flow goes from source side to target side. It is possible, however, for a user to reverse the direction of replicate data flow, in which case Site I starts to behave as a target backup site, and Site II starts to behave as a source production site. Such change of replication direction is referred to as a \u201cfailover\u201d. A failover may be performed in the event of a disaster at the production site, or for other reasons. In some data architectures, Site I or Site II behaves as a production site for a portion of stored data, and behaves simultaneously as a backup site for another portion of stored data. In some data architectures, a portion of stored data is replicated to a backup site, and another portion is not.","The production site and the backup site may be remote from one another, or they may both be situated at a common site, local to one another. Local data protection has the advantage of minimizing data lag between target and source, and remote data protection has the advantage is being robust in the event that a disaster occurs at the source side.","The source and target sides communicate via a wide area network (WAN) , although other types of networks are also adaptable for use with the present invention.","In accordance with an embodiment of the present invention, each side of system  includes three major components coupled via a storage area network (SAN); namely, (i) a storage system, (ii) a host computer, and (iii) a data protection appliance (DPA). Specifically with reference to , the source side SAN includes a source host computer , a source storage system , and a source DPA . Similarly, the target side SAN includes a target host computer , a target storage system , and a target DPA .","Generally, a SAN includes one or more devices, referred to as \u201cnodes\u201d. A node in a SAN may be an \u201cinitiator\u201d or a \u201ctarget\u201d, or both. An initiator node is a device that is able to initiate requests to one or more other devices; and a target node is a device that is able to reply to requests, such as SCSI commands, sent by an initiator node. A SAN may also include network switches, such as fiber channel switches. The communication links between each host computer and its corresponding storage system may be any appropriate medium suitable for data transfer, such as fiber communication channel links.","In an embodiment of the present invention, the host communicates with its corresponding storage system using small computer system interface (SCSI) commands. System  includes source storage system  and target storage system .","Each storage system includes physical storage units for storing data, such as disks or arrays of disks. Typically, storage systems  and  are target nodes. In order to enable initiators to send requests to storage system , storage system  exposes one or more logical units (LU) to which commands are issued. Thus, storage systems  and  are SAN entities that provide multiple logical units for access by multiple SAN initiators.","Logical units are a logical entity provided by a storage system, for accessing data stored in the storage system. A logical unit is identified by a unique logical unit number (LUN). In an embodiment of the present invention, storage system  exposes a logical unit , designated as LU A, and storage system  exposes a logical unit , designated as LU B.","In an embodiment of the present invention, LU B is used for replicating LU A. As such, LU B is generated as a copy of LU A. In one embodiment, LU B is configured so that its size is identical to the size of LU A. Thus for LU A, storage system  serves as a backup for source side storage system . Alternatively, as mentioned hereinabove, some logical units of storage system  may be used to back up logical units of storage system , and other logical units of storage system  may be used for other purposes. Moreover, in certain embodiments of the present invention, there is symmetric replication whereby some logical units of storage system  are used for replicating logical units of storage system , and other logical units of storage system  are used for replicating other logical units of storage system .","System  includes a source side host computer  and a target side host computer . A host computer may be one computer, or a plurality of computers, or a network of distributed computers, each computer may include inter alia a conventional CPU, volatile and non-volatile memory, a data bus, an I\/O interface, a display interface and a network interface. Generally a host computer runs at least one data processing application, such as a database application and an e-mail server.","Generally, an operating system of a host computer creates a host device for each logical unit exposed by a storage system in the host computer SAN. A host device is a logical entity in a host computer, through which a host computer may access a logical unit. In an embodiment of the present invention, host device  identifies LU A and generates a corresponding host device , designated as Device A, through which it can access LU A. Similarly, host computer  identifies LU B and generates a corresponding device , designated as Device B.","In an embodiment of the present invention, in the course of continuous operation, host computer  is a SAN initiator that issues I\/O requests (write\/read operations) through host device  to LU A using, for example, SCSI commands. Such requests are generally transmitted to LU A with an address that includes a specific device identifier, an offset within the device, and a data size. Offsets are generally aligned to 512 byte blocks. The average size of a write operation issued by host computer  may be, for example, 10 kilobytes (KB); i.e., 20 blocks. For an I\/O rate of 50 megabytes (MB) per second, this corresponds to approximately 5,000 write transactions per second.","System  includes two data protection appliances, a source side DPA  and a target side DPA . A DPA performs various data protection services, such as data replication of a storage system, and journaling of I\/O requests issued by a host computer to source side storage system data. As explained in detail hereinbelow, when acting as a target side DPA, a DPA may also enable rollback of data to an earlier point in time, and processing of rolled back data at the target site. Each DPA  and  is a computer that includes inter alia one or more conventional CPUs and internal memory.","For additional safety precaution, each DPA is a cluster of such computers. Use of a cluster ensures that if a DPA computer is down, then the DPA functionality switches over to another computer. The DPA computers within a DPA cluster communicate with one another using at least one communication link suitable for data transfer via fiber channel or IP based protocols, or such other transfer protocol. One computer from the DPA cluster serves as the DPA leader. The DPA cluster leader coordinates between the computers in the cluster, and may also perform other tasks that require coordination between the computers, such as load balancing.","In the architecture illustrated in , DPA  and DPA  are standalone devices integrated within a SAN. Alternatively, each of DPA  and DPA  may be integrated into storage system  and storage system , respectively, or integrated into host computer  and host computer , respectively. Both DPAs communicate with their respective host computers through communication lines such as fiber channels using, for example, SCSI commands.","In accordance with an embodiment of the present invention, DPAs  and  are configured to act as initiators in the SAN; i.e., they can issue I\/O requests using, for example, SCSI commands, to access logical units on their respective storage systems. DPA  and DPA  are also configured with the necessary functionality to act as targets; i.e., to reply to I\/O requests, such as SCSI commands, issued by other initiators in the SAN, including inter alia their respective host computers  and . Being target nodes, DPA  and DPA  may dynamically expose or remove one or more logical units.","As described hereinabove, Site I and Site II may each behave simultaneously as a production site and a backup site for different logical units. As such, DPA  and DPA  may each behave as a source DPA for some logical units, and as a target DPA for other logical units, at the same time.","In accordance with an embodiment of the present invention, host computer  and host computer  include protection agents  and , respectively. Protection agents  and  intercept SCSI commands issued by their respective host computers, via host devices to logical units that are accessible to the host computers. In accordance with an embodiment of the present invention, a data protection agent may act on an intercepted SCSI commands issued to a logical unit, in one of the following ways:\n\n","A protection agent may handle different SCSI commands, differently, according to the type of the command. For example, a SCSI command inquiring about the size of a certain logical unit may be sent directly to that logical unit, while a SCSI write command may be split and sent first to a DPA associated with the agent. A protection agent may also change its behavior for handling SCSI commands, for example as a result of an instruction received from the DPA.","Specifically, the behavior of a protection agent for a certain host device generally corresponds to the behavior of its associated DPA with respect to the logical unit of the host device. When a DPA behaves as a source site DPA for a certain logical unit, then during normal course of operation, the associated protection agent splits I\/O requests issued by a host computer to the host device corresponding to that logical unit. Similarly, when a DPA behaves as a target device for a certain logical unit, then during normal course of operation, the associated protection agent fails I\/O requests issued by host computer to the host device corresponding to that logical unit.","Communication between protection agents and their respective DPAs may use any protocol suitable for data transfer within a SAN, such as fiber channel, or SCSI over fiber channel. The communication may be direct, or via a logical unit exposed by the DPA. In an embodiment of the present invention, protection agents communicate with their respective DPAs by sending SCSI commands over fiber channel.","In an embodiment of the present invention, protection agents  and  are drivers located in their respective host computers  and . Alternatively, a protection agent may also be located in a fiber channel switch, or in any other device situated in a data path between a host computer and a storage system.","What follows is a detailed description of system behavior under normal production mode, and under recovery mode.","In accordance with an embodiment of the present invention, in production mode DPA  acts as a source site DPA for LU A. Thus, protection agent  is configured to act as a source side protection agent; i.e., as a splitter for host device A. Specifically, protection agent  replicates SCSI I\/O requests. A replicated SCSI I\/O request is sent to DPA . After receiving an acknowledgement from DPA , protection agent  then sends the SCSI I\/O request to LU A. Only after receiving a second acknowledgement from storage system  will host computer  initiate another I\/O request.","When DPA  receives a replicated SCSI write request from data protection agent , DPA  transmits certain I\/O information characterizing the write request, packaged as a \u201cwrite transaction\u201d, over WAN  to DPA  on the target side, for journaling and for incorporation within target storage system .","DPA  may send its write transactions to DPA  using a variety of modes of transmission, including inter alia (i) a synchronous mode, (ii) an asynchronous mode, and (iii) a snapshot mode. In synchronous mode, DPA  sends each write transaction to DPA , receives back an acknowledgement from DPA , and in turns sends an acknowledgement back to protection agent . Protection agent  waits until receipt of such acknowledgement before sending the SCSI write request to LU A.","In asynchronous mode, DPA  sends an acknowledgement to protection agent  upon receipt of each I\/O request, before receiving an acknowledgement back from DPA .","In snapshot mode, DPA  receives several I\/O requests and combines them into an aggregate \u201csnapshot\u201d of all write activity performed in the multiple I\/O requests, and sends the snapshot to DPA , for journaling and for incorporation in target storage system . In snapshot mode DPA  also sends an acknowledgement to protection agent  upon receipt of each I\/O request, before receiving an acknowledgement back from DPA .","For the sake of clarity, the ensuing discussion assumes that information is transmitted at write-by-write granularity.","While in production mode, DPA  receives replicated data of LU A from DPA , and performs journaling and writing to storage system . When applying write operations to storage system , DPA  acts as an initiator, and sends SCSI commands to LU B.","During a recovery mode, DPA  undoes the write transactions in the journal, so as to restore storage system  to the state it was at, at an earlier time.","As described hereinabove, in accordance with an embodiment of the present invention, LU B is used as a backup of LU A. As such, during normal production mode, while data written to LU A by host computer  is replicated from LU A to LU B, host computer  should not be sending I\/O requests to LU B. To prevent such I\/O requests from being sent, protection agent  acts as a target site protection agent for host Device B and fails I\/O requests sent from host computer  to LU B through host Device B.","In accordance with an embodiment of the present invention, target storage system  exposes a logical unit , referred to as a \u201cjournal LU\u201d, for maintaining a history of write transactions made to LU B, referred to as a \u201cjournal\u201d. Alternatively, journal LU  may be striped over several logical units, or may reside within all of or a portion of another logical unit. DPA  includes a journal processor  for managing the journal.","Journal processor  functions generally to manage the journal entries of LU B. Specifically, journal processor  (i) enters write transactions received by DPA  from DPA  into the journal, by writing them into the journal LU, (ii) applies the journal transactions to LU B, and (iii) updates the journal entries in the journal LU with undo information and removes already-applied transactions from the journal. As described below, with reference to FIGS.  and A-D, journal entries include four streams, two of which are written when write transaction are entered into the journal, and two of which are written when write transaction are applied and removed from the journal.",{"@attributes":{"id":"p-0078","num":"0082"},"figref":"FIG. 2","b":["200","120","120"]},"Write transaction  generally includes the following fields:\n\n","Write transaction  is transmitted from source side DPA  to target side DPA . As shown in , DPA  records the write transaction  in four streams. A first stream, referred to as a DO stream, includes new data for writing in LU B. A second stream, referred to as an DO METADATA stream, includes metadata for the write transaction, such as an identifier, a date & time, a write size, a beginning address in LU B for writing the new data in, and a pointer to the offset in the do stream where the corresponding data is located. Similarly, a third stream, referred to as an UNDO stream, includes old data that was overwritten in LU B; and a fourth stream, referred to as an UNDO METADATA, include an identifier, a date & time, a write size, a beginning address in LU B where data was to be overwritten, and a pointer to the offset in the undo stream where the corresponding old data is located.","In practice each of the four streams holds a plurality of write transaction data. As write transactions are received dynamically by target DPA , they are recorded at the end of the DO stream and the end of the DO METADATA stream, prior to committing the transaction. During transaction application, when the various write transactions are applied to LU B, prior to writing the new DO data into addresses within the storage system, the older data currently located in such addresses is recorded into the UNDO stream.","By recording old data, a journal entry can be used to \u201cundo\u201d a write transaction. To undo a transaction, old data is read from the UNDO stream in a reverse order, from the most recent data to the oldest data, for writing into addresses within LU B. Prior to writing the UNDO data into these addresses, the newer data residing in such addresses is recorded in the DO stream.","The journal LU is partitioned into segments with a pre-defined size, such as 1 MB segments, with each segment identified by a counter. The collection of such segments forms a segment pool for the four journaling streams described hereinabove. Each such stream is structured as an ordered list of segments, into which the stream data is written, and includes two pointers\u2014a beginning pointer that points to the first segment in the list and an end pointer that points to the last segment in the list.","According to a write direction for each stream, write transaction data is appended to the stream either at the end, for a forward direction, or at the beginning, for a backward direction. As each write transaction is received by DPA , its size is checked to determine if it can fit within available segments. If not, then one or more segments are chosen from the segment pool and appended to the stream's ordered list of segments.","Thereafter the DO data is written into the DO stream, and the pointer to the appropriate first or last segment is updated. Freeing of segments in the ordered list is performed by simply changing the beginning or the end pointer. Freed segments are returned to the segment pool for re-use.","A journal may be made of any number of streams including less than or more than 5 streams. Often, based on the speed of the journaling and whether the back-up is synchronous or a synchronous a fewer or greater number of streams may be used.","Delta Marking","A delta marker stream may contain the locations that may be different between the latest I\/O data which arrived to the remote side (the current remote site) and the latest I\/O data which arrived at the local side. In particular, the delta marking stream may include metadata of the differences between the source side and the target side. For example, every I\/O reaching the data protection appliance for the source  may be written to the delta marking stream and data is freed from the delta marking stream when the data safely arrives at both the source volume of replication  and the remote journal  (e.g. DO stream). Specifically, during an initialization process no data may be freed from the delta marking stream; and only when the initialization process is completed and I\/O data has arrived to both local storage and the remote journal data, may be I\/O data from the delta marking stream freed. When the source and target are not synchronized, data may not be freed from the delta marking stream. The initialization process may start by merging delta marking streams of the target and the source so that the delta marking stream includes a list of all different locations between local and remote sites. For example, a delta marking stream at the target might have data too if a user has accessed an image at the target site.","The initialization process may create one virtual disk out of all the available user volumes. The virtual space may be divided into a selected number of portions depending upon the amount of data needed to be synchronized. A list of \u2018dirty\u2019 blocks may be read from the delta marker stream that is relevant to the area currently being synchronized to enable creation of a dirty location data structure. The system may begin synchronizing units of data, where a unit of data is a constant amount of dirty data, e.g., a data that needs to be synchronized.","The dirty location data structure may provide a list of dirty location until the amount of dirty location is equal to the unit size or until there is no data left. The system may begin a so-called ping pong process to synchronize the data. The process may transfer the differences between the production and replica site to the replica.","A discussion of mirroring may be found in U.S. Pat. No. 7,346,805, entitled \u201cPROTECTION OF MIRRORED DATA,\u201d issued on Mar. 18, 2008 and assigned to EMC Corporation of Hopkinton, Mass., which is hereby incorporated by reference in its entirety.","A discussion of journaling and some techniques associated with journaling may be found in U.S. Pat. No. 7,516,287, entitled \u201cMETHODS AND APPARATUS FOR OPTIMAL JOURNALING FOR CONTINUOUS DATA REPLICATION,\u201d issued on Apr. 7, 2009 and assigned to EMC Corporation of Hopkinton, Mass., which is hereby incorporated by reference in its entirety.","A discussion of dynamically adding storage for a journal may be found in U.S. Pat. No. 7,840,536, entitled \u201cMETHODS AND APPARATUS FOR DYNAMIC JOURNAL EXPANSION,\u201d issued on Nov. 23, 2010 and assigned to EMC Corporation of Hopkinton, Mass., which is hereby incorporated by reference in its entirety.","Seamless Migration Between Replication Technologies","Traditional methods for migrating between replication technologies require stopping the old replication technology (i.e., the replication technology being replaced) and starting with the new replication technology from scratch. For example, consider a storage array with several volumes replicated using a preexisting replication technology. If a user desires to continue replication but using a new replication technology, such as RecoverPoint by EMC Corporation of Hopkinton, Mass., traditional migration methods require resynchronizing data between the production site and the replication site using the new replication technology once it is brought online. Replicated data sizes can be very large (e.g., on the order of a petabyte) thereby causing resynchronization to take a considerable amount of time, often several weeks, to read. During this time, replication is unavailable.",{"@attributes":{"id":"p-0094","num":"0104"},"figref":["FIGS. 3A-3C","FIGS. 3A-3C"]},"The flow diagrams of  may be read in conjunction with the block diagram of  illustrating a replication environment  according to the new replication service, which includes a splitter  and a production site replication appliance (i.e., data protection appliance (DPA))  at a production site and a splitter  and a replication appliance (i.e., DPA)  at the replication site. The production site and the replications site may be connected over a wide area network (WAN) . It should be noted that the DPAs ,  do not have to be physical devices and may be a set of processes on the respective storage arrays ,  or virtual machines running inside the storage array ,  or at any external host , . It also should be noted that, although the splitters ,  in  are illustrated as being resident in the storage arrays , , the splitters ,  also may reside in the switches ,  or in the hosts , .",{"@attributes":{"id":"p-0096","num":"0106"},"figref":"FIG. 3A","b":["310","436","456","320","330"]},{"@attributes":{"id":"p-0097","num":"0107"},"figref":["FIG. 3B","FIG. 3A","FIG. 3B","FIG. 4"],"b":["310","310","436","410","456","450","311","436"],"sub":"o"},"Accordingly, with the production volume  attached as clean (), the splitter  may begin splitting I\/Os to the DPA  at the production site and the production volume . However, it is important to note that, in a preferred embodiment, replication using the new replication service does not yet begin. Rather, the DPA  at the production site tracks commands received at the splitter  at the production site in a production site delta marking stream stored in a production site journal (i.e., journal volume)  ().","Likewise, the DPA  at the replication site tracks commands received at the replication site in a replication site delta marking stream stored in a replication site journal  ().","In a particular embodiment, the DPA  at the production site may capture changes to the production volume  at the production site, including after the preexisting replication service is disabled (). Additionally, the DPA  may continue to operate in marking mode and the old replication service may be permitted to complete one replication round (i.e., for asynchronous replication technologies, such as EMC Celerra Replicator and EMC MirrorView\/Asynchronous, both by EMC Corporation of Hopkinton, Mass.), thereby providing a full consistent image, including a current timestamp that has arrived at the replication site. The preexisting replication service then may be disabled, as described below with respect to . The DPA  then may enable the new replication service and synchronizing the changes made to the production volume  captured at the production site with the replication volume  at the replication site.",{"@attributes":{"id":"p-0101","num":"0111"},"figref":["FIG. 3C","FIG. 3A","FIG. 3C","FIG. 4"],"b":["320","321","408","412","412"],"sub":"1"},"For example, a command may be provided by the DPA  to the storage via an application programming interface (API) to stop replication using the preexisting replication service. The DPA  may then receive confirmation via the API that the intermediate storage has been flushed () and remove preexisting replication devices at the production site and at the replication site from the configuration of the preexisting replication service (). The new replication service may then be enabled () (as described above with respect to ).","The DPA  can know whether the current replication scheme is synchronous or asynchronous by querying the storage array .","After a point in time newer than the point in time the DPA  started tracking the changes arrives at the replication site, the delta marker stream in respective journals ,  on both sites includes all the locations which may differ between the production and replication sites. Once the new replication service is enabled, the replication site splitter  moves from split mode to fail all mode, thereby preventing new I\/Os from arriving at the replication volume  other than I\/Os generated by the DPA, an initialization process begins, as described above regarding delta marking. The DPA  merges the marking streams in the replication and production sites and transfers the locations suspected as different between production and replication sites. Once the initialization process ends, the replication remains continuous.","After configuration, the splitters ,  track changes occurring in both the production and replication sites. However, prior to disabling the preexisting replication service, it is desirable to make sure that all data which arrived in the replication environment  before tracking started in the new replication service arrived to the replication site. Accordingly, once the new replication service has an image which is after the time it started tracking changes, the new replication service may start replicating and may disable the old replication because the delta marking streams include all the locations suspected as different.","For synchronous replication services, disabling the preexisting replication service and enabling the new replication service may take approximately one second or less. Additionally, only I\/Os tracked during that time will need to be synchronized. However, for asynchronous replication services, it may take up to several hours or more for the latest image to arrive at the replication site, depending on the configuration of the asynchronous replication service. Changes tracked during this longer period of time will then need to be synchronized. However, this does not amount to a degradation of service because those same changes required synchronization under the preexisting asynchronous replication service. Accordingly, migration from a preexisting replication service to a new replication service is seamless to the user.",{"@attributes":{"id":"p-0107","num":"0117"},"figref":["FIG. 5","FIG. 5","FIG. 4"],"b":["420","405","405","510","520","410","420","410","530"]},{"@attributes":{"id":"p-0108","num":"0118"},"figref":"FIG. 6","b":["635","690","695","680","681","682","683","660"]},"The methods and apparatus of this invention may take the form, at least partially, of program code (i.e., instructions) embodied in tangible non-transitory media, such as floppy diskettes, CD-ROMs, hard drives, random access or read only-memory, or any other machine-readable storage medium. When the program code is loaded into and executed by a machine, such as the computer of , the machine becomes an apparatus for practicing the invention. When implemented on one or more general-purpose processors, the program code combines with such a processor to provide a unique apparatus that operates analogously to specific logic circuits. As such a general purpose digital machine can be transformed into a special purpose digital machine.",{"@attributes":{"id":"p-0110","num":"0120"},"figref":"FIG. 7","b":["755","760","700"]},"The logic for carrying out the method may be embodied as part of the aforementioned system, which is useful for carrying out a method described with reference to embodiments shown in, for example, . For purposes of illustrating the present invention, the invention is described as embodied in a specific configuration and using special logical arrangements, but one skilled in the art will appreciate that the device is not limited to the specific configuration but rather only by the claims included with this specification.","Although the foregoing invention has been described in some detail for purposes of clarity of understanding, it will be apparent that certain changes and modifications may be practiced within the scope of the appended claims. Accordingly, the present implementations are to be considered as illustrative and not restrictive, and the invention is not to be limited to the details given herein, but may be modified within the scope and equivalents of the appended claims.","In reading the above description, persons skilled in the art will realize that there are many apparent variations that can be applied to the methods and systems described. In the foregoing specification, the invention has been described with reference to specific exemplary embodiments thereof. It will, however, be evident that various modifications and changes may be made to the specific exemplary embodiments without departing from the broader spirit and scope of the invention as set forth in the appended claims. Accordingly, the specification and drawings are to be regarded in an illustrative rather than a restrictive sense."],"heading":["TECHNICAL FIELD","BACKGROUND","SUMMARY","DETAILED DESCRIPTION","DESCRIPTION OF EMBODIMENTS USING A FIVE STATE JOURNALING PROCESS"],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"BRIEF DESCRIPTION OF THE DRAWINGS","p":["The above and further advantages of the present invention may be better under stood by referring to the following description taken into conjunction with the accompanying drawings in which:",{"@attributes":{"id":"p-0012","num":"0011"},"figref":"FIG. 1"},{"@attributes":{"id":"p-0013","num":"0012"},"figref":"FIG. 2"},{"@attributes":{"id":"p-0014","num":"0013"},"figref":"FIGS. 3A-3C"},{"@attributes":{"id":"p-0015","num":"0014"},"figref":"FIG. 4"},{"@attributes":{"id":"p-0016","num":"0015"},"figref":"FIG. 5"},{"@attributes":{"id":"p-0017","num":"0016"},"figref":"FIG. 6"},{"@attributes":{"id":"p-0018","num":"0017"},"figref":"FIG. 7"}]},"DETDESC":[{},{}]}
