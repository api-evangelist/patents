---
title: Name database server, name resolution system, entry search method and entry search program
abstract: A node information storage means stores an entry of node information in which at least an address and a record type are associated with a host name. A search target record deciding means decides a record type of an entry of a search target from a received virtual record type based on a search rule that is a rule specifying a record type of a search target according to a virtual record type. An entry searching means searches the node information storage means, and specifies an entry that corresponds to the entry specifying information received from the terminal device and has the record type decided by the search target record deciding means. A search result transmitting means transmits node information included in the entry specified by the entry searching means to the terminal device.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09378245&OS=09378245&RS=09378245
owner: NEC CORPORATION
number: 09378245
owner_city: Tokyo
owner_country: JP
publication_date: 20111011
---

{"@attributes":{"id":"description"},"BRFSUM":[{},{}],"heading":["CROSS REFERENCE TO RELATED APPLICATIONS","TECHNICAL FIELD","BACKGROUND ART","CITATION LIST","Patent Literature","SUMMARY OF INVENTION","Technical Problem","Solution to Problem","Advantageous Effects of Invention","DESCRIPTION OF EMBODIMENTS","First Exemplary Embodiment","Second Exemplary Embodiment","Third Exemplary Embodiment","Fourth Exemplary Embodiment","INDUSTRIAL APPLICABILITY","REFERENCE SIGNS LIST"],"p":["This application is a National Stage of International Application No. PCT\/JP2011\/005687 filed Oct. 11, 2011, claiming priority based on Japanese Patent Application No. 2010-233412 filed Oct. 18, 2010, the contents of all of which are incorporated herein by reference in their entirety.","The present invention relates to a name database server, a name resolution system, an entry search method, a name resolution method, and an entry search program, which are used when name resolution is performed in a mixed communication environment of a plurality of record types.","Internet Protocol version 6 (IPv6)-based communication environment has newly been introduced into the Internet that has started from Internet Protocol version 4 (IPv4)-based communication environment. The current Internet is in the process of introducing IPv6 environment. For this reason, in the process of introduction, a plurality of types of communication devices such as communication devices that only support IPv4, communication devices in which a part of a function corresponding to IPv6 is implemented in addition to a function corresponding to current IPv4, and communication devices in which a function corresponding to IPv6 is completely implemented, and all functions corresponding to IPv4 and IPv6 are usable are present.",{"@attributes":{"id":"p-0005","num":"0004"},"figref":["FIG. 15","FIG. 15","FIG. 15"]},"Meanwhile, in order to introduce a new function of IPv6 into an environment in which a plurality of types of communication devices described above are present, various requirements need to be satisfied. First, in the currently operating existing environment, a problem in which it is difficult to perform communication should not be caused. Further, when both information of IPv4 and information of IPv6 are present, information of new IPv6 may be selected as a priority.","There have been proposed various kinds of methods of performing name resolution in a mixed communication environment of IPv4 and IPv6.  is an explanatory diagram illustrating an example of information stored in a DNS server in a mixed communication environment of IPv4 and IPv6. Hereinafter, a record type of an IPv6 address is referred to as \u201cAAAA,\u201d and a record type of an IPv4 address is referred to as \u201cA.\u201d  illustrates that a total of four entries, that is, two entries of IPv4 addresses p and q whose record type is \u201cA\u201d and two entries of IPv6 addresses s and t whose record type is \u201cAAAA\u201d are registered to a DNS (domain name system) server with respect to a host name \u201chostX.\u201d Hereinafter, when name resolution is performed in a mixed communication environment of IPv4 and IPv6, the DNS server is assumed to store information illustrated in .","Here, an application programming interface (API) used by a device (for example, a client terminal) that queries an address in a DNS will be described. A resolver library which is a set of low-class APIs performing primitive processing is used for a name resolution process in a DNS. Specifically, in a DNS, a command (for example, nslookup, dig, or host) performing low-class processing of directly extracting data stored in a database included in a server side is included in the resolver library.","Meanwhile, a communication application used in a user land usually uses a high-class API without directly calling the resolver library. The resolver library is used inside the high-class API, but the user needs not be aware of an API in the inside.","Specifically, gethostbyname( ) is used as a high-class API in an IPv4-only communication environment. However, with the appearance of IPv6, gethostbyname( ) corresponding to the IPv4-only communication environment is not used, and getaddrinfo( ) is currently used. getaddrinfo( ) is a function corresponding to protocols (multi-protocol) of both IPv4 and IPv6. In the getaddrinfo( ) function, a record type (specifically, an address family representing the type of a network address) is designated, and a query is performed. As the address family, any one of IPv4(PF_INET), IPv6(PF_INET6), and either-is-okay (PF_UNSPEC) is designated. The query result (address) will be returned in the form of a list.","At the application side of the user land, a query is expected to be performed without regard to a record type. However, at the DNS server side, it is necessary to manage both addresses of IPv4 and IPv6. Thus, ultimately, the client side is assumed to perform a query in which PF_UNSPEC is designated as the address family in a state in which the DNS server manages both addresses of IPv4 and IPv6.","Specifically, in the high-class API, a communication application (designating, for example, PF_UNSPEC) is generated without being aware of a record type. Meanwhile, when the high-class API calls the resolver library, the resolver library designates a record type for name resolution and queries the DNS server about an address. It is because an address and a record type are necessary when the DNS server searches for an entry.",{"@attributes":{"id":"p-0013","num":"0012"},"figref":"FIGS. 17 to 21"},"A method illustrated in  is a method of first querying a DNS server about an A record corresponding to a host name and then querying an AAAA record after a response is received (that is, after being on standby until a response is received). In the method illustrated in , first, a client transmits a DNS query packet by which a host name \u201chostX\u201d and a record type \u201cA\u201d are designated to a DNS server. Then, the DNS server searches for corresponding IPv4 addresses p and q, and transmits a packet including the searched addresses to the client. Next, the client that has received the packet including the IPv4 addresses transmits a DNS query packet by which a host name \u201chostX\u201d and a record type \u201cAAAA\u201d are designated to the DNS server. Then, the DNS server searches for corresponding IPv6 addresses s and t, and transmits a packet including the searched addresses to the client.","A method illustrated in  is a method of first querying a DNS server about an A record corresponding to a host name and determining whether or not to query an AAAA record depending on received response content. In other words, the method illustrated in  is different from the method illustrated in  in that it is determined whether or not to query the AAAA record depending on response content of the IPv4 addresses p and q. In the method illustrated in , first, the client transmits a DNS query packet by which a host name \u201chostX\u201d and a record type \u201cA\u201d are designated to a DNS server. Then, the DNS server searches for corresponding IPv4 addresses p and q, and transmits a packet including the searched addresses to the client. The client that has received the packet including the IPv4 addresses determines whether or not to transmit a DNS query packet by which a host name \u201chostX\u201d and a record type \u201cAAAA\u201d are designated to the DNS server depending on content included in the packet. Here, when it is determined that the DNS query packet is to be transmitted to the DNS server, a subsequent process is the same as in the method illustrated in .","A method illustrated in  is a method of first querying a DNS server about an A record corresponding to a host name and then querying an AAAA record without waiting for a response. In the method illustrated in , first, a client transmits a DNS query packet by which a host name \u201chostX\u201d and a record type \u201cA\u201d are designated to a DNS server. Then, the client transmits a DNS query packet by which a host name \u201chostX\u201d and a record type \u201cAAAA\u201d are designated to the DNS server before receiving a packet including an IPv4 address. Here, content of the packet to be transmitted from the DNS server to the client according to the received DNS query packet is the same as the content illustrated in .","A method illustrated in  is a method of first querying a DNS server about an AAAA record corresponding to a host name and then querying an A record after a response is received. In other words, the method illustrated in  is different from the method illustrated in  in that sequences of querying the A record and the AAAA record are reversed. Specifically, first, a client transmits a DNS query packet by which a host name \u201chostX\u201d and a record type \u201cAAAA\u201d are designated to a DNS server. Then, the DNS server searches for corresponding IPv6 addresses s and t, and transmits a packet including the searched addresses to the client. Next, the client that has received the packet including the IPv6 addresses transmits a DNS query packet by which a host name \u201chostX\u201d and a record type \u201cA\u201d are designated to the DNS server. Then, the DNS server searches for corresponding IPv4 addresses p and q, and transmits a packet including the searched addresses to the client.","A method illustrated in  is a method of first querying a DNS server about an AAAA record corresponding to a host name and then querying an A record without waiting for a response. In the method illustrated in , first, a client transmits a DNS query packet by which a host name \u201chostX\u201d and a record type \u201cAAAA\u201d are designated to a DNS server. Then, the client transmits a DNS query packet by which a host name \u201chostX\u201d and a record type \u201cA\u201d are designated to the DNS server before receiving a packet including an IPv6 address. Here, content of the packet to be transmitted from the DNS server to the client according to the received DNS query packet is the same as the content illustrated in .","As described above, when the DNS server stores both entries of the IPv4 address and the IPv6 address corresponding to the host name, the client transmits the DNS query packet by which the host name and the record type of the IPv4 address are designated and the DNS query packet by which the host name and the record type of the IPv6 address are designated, respectively. As a result, the client can acquire both of the IPv4 address and the IPv6 address corresponding to the host name.","A communication device that performs name resolution in an environment in which both an IPv4 address and an IPv6 address are present is discussed in Patent Literature 1. The communication device discussed in Patent Literature 1 first requests a DNS server, which performs name resolution in an IPv4 address space, to perform name resolution. When an IPv4 address has not been obtained, the communication device requests a DNS proxy server, which queries a DNS server performing name resolution in an IPv6 address space, to perform name resolution again.","PTL 1: JP 2010-183242 A","Due to the new introduction of an IPv6-based communication environment, the method used when only an IPv4 address is present remains, and the method of performing a new query for an IPv6 address is added independently of the above method as illustrated in . For this reason, as a consequence, a query about one host name has been performed once until now, but in the methods illustrated in , a query is performed twice.","Meanwhile, since a query needs to be performed twice, a plurality of query patterns are present as a query pattern of each address. Further, when the method of deciding a subsequent process according to content of a response to a prior query is considered, a processing method becomes more complicated.","In addition, since the server transmits separate responses in response to respective queries, it is difficult for the client to collect the response content at a time. For this reason, one side is on standby until the response is received from the other side, and thus it takes a long time until the reply is completed. In addition, when a case in which a packet used for the query of the other side is lost is considered, the process considering the response content becomes more complicated. Since the process is complicated, a problem that is not expected in the beginning occurs.","Further, since a query is generated twice, a network traffic amount generated by a query becomes twice. The number of queries simply increases by one, but many matters need to be considered.","In the communication device discussed in Patent Literature 1, similarly to the method illustrated in , a query is generated twice or more depending on content of a response to a query of one side. Thus, it is desirable to acquire node information of a plurality of record types by a single query without employing the above-mentioned complicated configuration.","In this regard, an exemplary object of the present invention is to provide a name database server, a name resolution system, an entry search method, a name resolution method, and an entry search program, which are capable of acquiring node information of a plurality of record types by a single query.","A name database server according to the present invention includes a node information storage means that stores an entry of node information in which at least an address and a record type are associated with a host name, a search target record deciding means that decides a record type of an entry of a search target from a virtual record type received from a terminal device that transmits a virtual record type and entry specifying information that is information specifying an entry and queries node information corresponding to the entry specifying information based on a search rule that is a rule specifying a record type of a search target according to a virtual record type, an entry searching means that searches the node information storage means, and specifies an entry that corresponds to the entry specifying information received from the terminal device and has the record type decided by the search target record deciding means, and a search result transmitting means that transmits node information included in the entry specified by the entry searching means to the terminal device.","A name resolution system according to the present invention includes a terminal device that performs a query about node information and a name database server that receives a query from the terminal device, in which the terminal device includes an address querying means that transmits entry specifying information specifying an entry stored in the name database server and a virtual record type to the name database server, and performs a query about the node information, and the name database server includes a node information storage means that stores an entry of node information in which at least an address and a record type are associated with a host name, a search target record deciding means that decides a record type of an entry of a search target from a received virtual record type based on a search rule that is a rule specifying a record type of a search target according to a virtual record type, an entry searching means that searches the node information storage means, and specifies an entry that corresponds to the entry specifying information received from the terminal device and has the record type decided by the search target record deciding means, and a search result transmitting means that transmits node information included in the entry specified by the entry searching means to the terminal device.","An entry search method according to the present invention includes deciding a record type of an entry of a search target from a virtual record type received from a terminal device that transmits entry specifying information that is information specifying an entry of node information in which at least an address and a record type are associated with a host name and a virtual record type and queries node information corresponding to the entry specifying information based on a search rule that is a rule specifying a record type of a search target according to a virtual record type, searching a node information storage means storing the entry, and specifying an entry that corresponds to the entry specifying information received from the terminal device and has the decided record type, and transmitting node information included in the specified entry to the terminal device.","A name resolution method according to the present invention includes transmitting, by a terminal device that performs a query about node information, entry specifying information specifying an entry stored in a name database server that transmits node information in response to the query and a virtual record type to the name database server and querying the node information, by the name database server, deciding a record type of an entry of a search target from a received virtual record type based on a search rule that is a rule specifying a record type of a search target according to a virtual record type, searching a node information storage means that stores an entry of node information in which at least an address and a record type are associated with a host name, and specifying an entry that corresponds to the entry specifying information received from the terminal device and has the decided record type, and transmitting node information included in the specified entry to the terminal device.","An entry search program according to the present invention is an entry search program applied to a computer including a node information storage means that stores an entry of node information in which at least an address and a record type are associated with a host name and causes the computer to execute: a search target record deciding process of deciding a record type of an entry of a search target from a virtual record type received from a terminal device that transmits a virtual record type and entry specifying information that is information specifying an entry and queries node information corresponding to the entry specifying information based on a search rule that is a rule specifying a record type of a search target according to a virtual record type, an entry searching process of searching the node information storage means, and specifying an entry that corresponds to the entry specifying information received from the terminal device and has the record type decided by the search target record deciding process, and a search result transmitting process of transmitting node information included in the entry specified by the entry searching process to the terminal device.","According to the present invention, host information of a plurality of record types can be acquired by a single query.","Hereinafter, exemplary embodiments of the present invention will be described with reference to the accompanying drawings.","First, an outline of a name resolution system according to a first exemplary embodiment will be described with reference to .  is an explanatory diagram illustrating an example of an operation of performing name resolution. In the name resolution system according to the first exemplary embodiment, first, a client transmits a DNS query packet by which a host name (\u201chostX\u201d in ) of a target performing name resolution and a record type (\u201cAAAA+A\u201d in ) are designated to a DNS server. Here, the designated record type \u201cAAAA+A\u201d is a virtual record type which is different from a record type stored in a DNS server such as \u201cA\u201d or \u201cAAAA.\u201d","Arbitrary information may be set to the virtual record type. For example, a record type which is not present in the existing DNS may be newly defined, and information representing the record type may be used as the virtual record type. In the following description, for the sake of convenience, the virtual record type is referred to as \u201cAAAA+A.\u201d Here, the virtual record type is not limited to one type of \u201cAAAA+A,\u201d and a plurality of types may be used. The virtual record type is decided in advance by the user or the like. The virtual record type refers to a record type which is designated as a portion designating a record by a query packet but has not originally been defined in the DNS.","Next, the DNS server that has received the DNS query packet decides a record type of a search target according to a predetermined rule corresponding to the designated virtual record type \u201cAAAA+A.\u201d Then, the DNS server searches for an entry corresponding to the decided record type and the received host name. In the example of , an entry of record types \u201cAAAA\u201d and \u201cA\u201d is searched. Then, the DNS server transmits a response packet including an IPv6 address and an IPv4 address (s, t, p, and q in ) included in the searched entry to the client.","In other words, the name resolution system according to the first exemplary embodiment transmits a packet by which information (for example, a host name and an address; hereinafter, referred to as an \u201centry specifying information\u201d) specifying an entry and the record type \u201cAAAA+A\u201d are designated to the DNS server once and thus can acquire a packet including corresponding node information (for example, an IPv6 address, an IPv4 address, and a host name) at a time. In the following description, an example of resolving a corresponding IP address from a domain name (a lookup case) will be described. Here, the name resolution system according to the present exemplary embodiment can be applied to an example of resolving a corresponding host name from an IP address (a reverse lookup case). Content of the name resolution system according to the first exemplary embodiment will be described below in detail.",{"@attributes":{"id":"p-0060","num":"0059"},"figref":"FIG. 2","b":["10","20","20","20"]},"The terminal device  includes an address querying means . The address querying means  performs a query about corresponding node information by transmitting the virtual record type and the entry specifying information (for example, a host name or an address of a target performing name resolution) to the name database server . Further, predetermined information (that is, the above-described \u201cAAAA+A\u201d) that has not been present as the record type stored in a node information storage means  which will be described later is designated to the virtual record type.","For example, the address querying means  is implemented by a central processing unit (CPU) of a computer (the terminal device ) operating according to a program.","The entry specifying information to be transmitted from the address querying means  to the name database server  is not limited to the host name or the address and virtual record type. For example, the address querying means  may transmit an address of the terminal device  or the like to the name database server . For example, the record type about which the address querying means  queries the name database server  is designated by another high-class API (not illustrated) or the like.","The name database server  includes the node information storage means , a search target record deciding means , an entry searching means , and a search result transmitting means .","The node information storage means  stores an entry of node information in which at least an address and a record type are associated with a host name. Specifically, the node information storage means  stores an entry in which at least an IPv6 address and an IPv4 address are associated with a host name. For example, the node information storage means  is implemented by a magnetic disk or the like. Information to be associated with each address and record type is not limited to a host name. The node information storage means  may store an entry in which another information representing host information of a domain is associated with each address and record type such as a zone file.","For example, entries stored in the node information storage means  are sequentially updated using a structure such as a DNS dynamic update.","The search target record deciding means  decides a record type of an entry of a search target based on a virtual record type received from the terminal device . Specifically, a rule (hereinafter, \u201csearch rule\u201d) specifying a record type of a search target according to a virtual record type is set in advance. The search target record deciding means  decides a record type of an entry of a search target based on the received virtual record type according to the search rule. Specifically, \u201ca record type of a search target is \u201cAAAA\u201d and \u201cA,\u201d when a character string \u201cAAAA+A\u201d is designated as a record type\u201d is set as the search rule. Through this setting, the entry searching means  which will be described later can search for entries of the record types \u201cAAAA\u201d and \u201cA\u201d even when the virtual record type \u201cAAAA+A\u201d is received.","By searching the node information storage means , the entry searching means  specifies an entry which corresponds to the received entry specifying information and has a record type decided by the search target record deciding means . For example, the search target record deciding means  is assumed to decide the record types of the entry of the search target as \u201cAAAA\u201d and \u201cA.\u201d In this case, the entry searching means  searches the node information storage means , and specifies an entry including an IPv4 address and an IPv6 address corresponding to a host name received from the terminal device .","As described above, the designated virtual record type is used as information specifying a record type of a search target. In addition, the virtual record type may also be used as information instructing the DNS server to search a search target. In other words, the record type \u201cAAAA+A\u201d undertakes a command instructing the DNS server to search a record type of a search target. Further, it is possible to prevent an existing system from being influenced since a record type different from a record type stored in a DNS server is used when a query is performed.","The search result transmitting means  transmits node information included in the entry specified by the entry searching means  to the terminal device . Further, when an entry of a target has not been present, the search result transmitting means  may transmit a packet including information representing that node information corresponding to a host name has not been present to the terminal device .","The search target record deciding means , the entry searching means , and the search result transmitting means  are implemented by a CPU of a computer operating according to a program (an entry search program). For example, the program may be stored in a storage unit (not illustrated) of the name database server , and the CPU may read the program and operate as the search target record deciding means , the entry searching means  and the search result transmitting means  according to the program. Alternatively, each of the search target record deciding means , the entry searching means , and the search result transmitting means  may be implemented by dedicated hardware.","Next, an operation in which a DNS server transmits both an IPv4 address and an IPv6 address back to a client when the client designates a host name and a record type \u201cAAAA+A\u201d and transmits a query about an address will be described. The client corresponds to the terminal device , and the DNS server corresponds to the name database server .",{"@attributes":{"id":"p-0073","num":"0072"},"figref":"FIG. 3","b":["11","1","22","2"]},"Next, the entry searching means  searches the node information storage means , and specifies entries of the record type \u201cAAAA\u201d and \u201cA\u201d corresponding to the received host name (step S). Specifically, the entry searching means  specifies entries including an IPv4 address and an IPv6 address.","Then, the search result transmitting means  transmits a packet including an IPv4 address and an IPv6 address of the entries specified by the entry searching means  to the client (step S).","As described above, according to the present exemplary embodiment, the address querying means  of the terminal device  transmits the virtual record type and the entry specifying information to the name database server , and queries node information corresponding to the entry specifying information. The search target record deciding means  of the name database server  decides a record type of an entry of a search target based on the search rule serving as a rule that specifies a record type of a search target according to a virtual record type. The entry searching means  searches the node information storage means , and specifies an entry which corresponds to the received entry specifying information and has the record type decided by the search target record deciding means . Then, the search result transmitting means  transmits node information included in the entry specified by the entry searching means  to the terminal device .","Thus, node information of a plurality of record types can be acquired by a single query. Specifically, even in the mixed communication environment of IPv4 and IPv6, name resolution on both IPv4 and IPv6 can be performed by querying a host name once. For example, by transmitting a DNS query packet by which a single record type is designated once, addresses of a plurality of record types (both IPv4 and IPv6) corresponding to a host name can be acquired.","Further, since the client side process is completed by performing a single query, it is efficient. Further, each process becomes simple, and thus the occurrence of various problems can be suppressed. Furthermore, the client side waits for a response to a single query compared to when a plurality of queries are performed. Thus, the processing is performed at a high speed. In addition, the traffic amount occurring due to a query is reduced.","Next, an outline of a name resolution system according to a second exemplary embodiment will be described with reference to .  is an explanatory diagram illustrating an example of an operation of performing name resolution. In the name resolution system according to the second exemplary embodiment, first, a client transmits a DNS query packet by which a host name (\u201chostX\u201d in ) of a target performing name resolution and a record type (\u201cAAAA\u201d in ) of an IPv6 address are designated to a DNS server. Next, the DNS server that has received the DNS query packet searches for an entry of the record type \u201cA\u201d as well as an entry of the designated record type \u201cAAAA\u201d among entries of the received host name. In the example illustrated in , as a result, addresses p, q, s, and t included in the entries matching the host name \u201chostX\u201d are specified.","Then, the DNS server translates the IPv4 addresses p and q having the record type \u201cA\u201d into an IPv6 address which is an address of the received record type. Hereinafter, IPv6 addresses translated from the addresses p and q are represented as p\u2032 and q\u2032. Then, the DNS server transmits a packet including the IPv6 addresses s, t, p\u2032, and q\u2032 to the client. The client that has received the IPv6 address translates the translated addresses p\u2032 and q\u2032 to recover the IPv4 addresses p and q before translation.","As the method of translating an IPv4 address into an IPv6 address, for example, a method of translating the IPv4 address into an IPv4 mapped IPv6 Address (hereinafter, referred to as an \u201cIPv4 mapped Address\u201d) is used. A process of translating an IPv4 mapped Address into an IPv4 address is performed by a typical kernel. For this reason, as an IPv4 address is translated into an IPv4 mapped Address, a recovery translating process is not necessary in an application in the user land at the client side.","As described above, the name resolution system according to the second exemplary embodiment transmits the packet by which a host name and a record type of an IPv6 address are designated to the DNS server once and thus can acquire a packet including an address corresponding to the host name through the designated record type at a time. In addition, the translated address is translated to recover the address before translation, and thus the translated address can be used as an original address. Next, content of the name resolution system according to the second exemplary embodiment will be described in detail.",{"@attributes":{"id":"p-0083","num":"0082"},"figref":["FIG. 5","FIG. 2"],"b":["30","40","40","40"]},"The name database server  includes a node information storage means , an entry searching means , an address translating means , and a search result transmitting means . The node information storage means  is the same as in the first exemplary embodiment, and thus a description thereof will not be made.","The entry searching means  searches the node information storage means  and specifies an entry corresponding to a host name received from the terminal device . Specifically, when a packet representing the record type \u201cAAAA\u201d is received from the terminal device , the entry searching means  specifies an entry corresponding to the received host name and the record type \u201cAAAA.\u201d Further, the entry searching means  specifies an entry corresponding to the received host name and the record type \u201cA.\u201d","The address translating means  translates an address of a record type different from a record type received from the terminal device  among addresses included in the entry specified by the entry searching means  into an address of the received record type based on a predetermined rule. Specifically, when the packet representing the record type \u201cAAAA\u201d is received from the terminal device , the address translating means  translates an address (an IPv4 address) of the record type \u201cA\u201d among addresses included in the entry specified by the entry searching means  into an address (an IPv6 address) of the record type \u201cAAAA\u201d based on a predetermined rule. A rule used to translate an address of a record type different from a received record type into an address of the received record type is preferably set in advance for each record type.","For example, a rule by which an IPv4 address is translated into an IPv4 mapped Address may be set as a rule used to translate an IPv4 address into an IPv6 address. Specifically, when the record type \u201cAAAA\u201d is received from the terminal device , the address translating means  translates an IPv4 address specified by the entry searching means  into an IPv6 address based on a format defined as an IPv4 mapped Address.","The definition of the IPv4 mapped Address is stated in the following Reference Literature 1 \u201c2.5.5.2. IPv4-Mapped IPv6 Address.\u201d Further, a method (function) of using the IPv4 mapped Address is stated in the following Reference Literature 2. Thus, a detail description thereof will not be made.\n\n","A method of translating an IPv4 address into an IPv6 address is not limited to the method of translating an IPv4 address into an IPv4 mapped Address. Any other translation algorithm may be used as long as an original IPv4 address is extracted at the client side (the terminal device ). Specifications on the translating method are not limited to the above format as long as the specifications are decided between devices that exchange data. For example, an IPv4 address may be translated into an IPv6 address such that an arbitrary bit pattern is added to front and rear parts of an IPv4 address. It is because an IPv6 address space is extremely large, and so an IPv4 address can easily be included in an IPv6 address space.","The search result transmitting means  transmits an address corresponding to the received host name and the record type to the terminal device . Specifically, the search result transmitting means  transmits the address translated by the address translating means  and an address which is not translated by the address translating means  among addresses included in the entry specified by the entry searching means  to the terminal device . Further, when it is difficult for the entry searching means  to specify an entry, the search result transmitting means  preferably transmits a packet including information representing that an address corresponding to a host name has not been present to the terminal device .","As described above, the name database server  according to the present exemplary embodiment translates an address according to the query received from the terminal device . For this reason, the name resolution method according to the present exemplary embodiment can be called a dynamic translation method. For example, information understood for the first time when DNS query is performed is used in a rule for address translation, the dynamic translation method is effective.","The entry searching means , the address translating means , and the search result transmitting means  are implemented by a CPU of a computer operating according to a program (an entry search program). Further, each of the entry searching means , the address translating means , and the search result transmitting means  may be implemented by dedicated hardware.","The terminal device  includes an address querying means  and a translation address retranslating means . The address querying means  transmits a record type and a host name of a target performing name resolution to the name database server , and performs a query about an address corresponding to the host name. For example, a record type \u201cAAAA\u201d representing an IPv6 address is designated as the record type.","The translation address retranslating means  translates an address translated based on a predetermined rule among addresses included in the packet received from the name database server  into the address before translation. Specifically, the translation address retranslating means  translates the address in which the IPv4 address is translated into the IPv6 address into the IPv4 address before translation.","The translation address retranslating means  may specify an address having a predetermined format among the received addresses as an address to be translated into the address before translation. For example, the address translating means  is assumed to translate an IPv4 address into an IPv6 address according to the format of the IPv4 mapped Address. In this case, the translation address retranslating means  may specify an address with the format of the IPv4 mapped Address among the received IPv6 addresses as an address of a translation target. At this time, the translation address retranslating means  preferably translates an IPv6 address with the format of the IPv4 mapped Address into the IPv4 address before translation.","Generally, when a communication application of the user land uses the IPv4 mapped Address, the kernel determines whether or not the address is the IPv4 mapped Address. Then, when it is determined that the address is the IPv4 mapped Address, the kernel recognizes the address and translates the address into an IPv4 address.","Typically, a general kernel has this function. For this reason, when the existing structure (kernel) and the IPv4 mapped Address are used, it is unnecessary for an application of the client to perform another recovery translating process (that is, the process of translating an IPv6 address into an IPv4 address). Thus, the communication application side needs not be aware whether an IPv6 address is an IPv4 mapped Address or a typical IPv6 address, and needs not perform a translation process. In other words, even when an IPv6 address is mixed with the IPv4 mapped Address and the typical IPv6 address, the communication application side can handle the IPv6 address, similarly to the typical IPv6 address. In other words, when the communication application side uses the IPv4 mapped Address, an IPv6 address can automatically be translated into an IPv4 address. Thus, when an IPv4 address is translated into an IPv6 address, it is preferable that an IPv4 address be translated into an IPv4 mapped Address.","The address querying means  is the same as the address querying means  according to the first exemplary embodiment, and thus a description thereof will not be made.","The address querying means  and the translation address retranslating means  are implemented by a CPU of a computer operating according to a program (name resolution program). Each of the address querying means  and the translation address retranslating means  may be implemented by dedicated hardware.","Next, an operation in which a DNS server transmits an IPv6 address and an address in which an IPv4 address is translated into an IPv6 address back to a client when the client designates a host name and a record type \u201cAAAA\u201d and transmits a query about an address will be described. The client corresponds to the terminal device , and the DNS server corresponds to the name database server .",{"@attributes":{"id":"p-0101","num":"0102"},"figref":"FIG. 6","b":["31","11","41","21","12","41","42","41","13","43","14"]},"When the client receives the packet including the address, the translation address retranslating means  translates the IPv4 address translated into the IPv6 address among the addresses received from the DNS server into the IPv4 address before translation (step S).","As described above, according to the present exemplary embodiment, the address querying means  of the terminal device  transmits a record type and a host name of a target performing name resolution to the name database server , and queries an address corresponding to the host name. The entry searching means  searches the node information storage means , and specifies an entry corresponding to the host name received from the terminal device . The address translating means  translates an address of a record type different from the record type received from the terminal device  among addresses included in the entry specified by the entry searching means  into an address of the received record type based on a predetermined rule. Then, the search result transmitting means  transmits the address of the received record type included in the specified entry and the address translated by the address translating means  to the terminal device .","Specifically, the address querying means  transmits a record type \u201cAAAA\u201d and a host name of a target performing name resolution to the name database server , and queries an address corresponding to the host name. The entry searching means  searches the node information storage means , and specifies an entry corresponding to the host name received from the terminal device  and the record type \u201cAAAA.\u201d Further, the entry searching means  specifies an entry corresponding to the host name received from the terminal device  and the record type \u201cA.\u201d The address translating means  translates an IPv4 address into an IPv6 address based on a predetermined rule. Then, the search result transmitting means  transmits the IPv6 address included in the specified entry and the IPv6 address translated by the address translating means  to the terminal device .","Through the above-described configuration, similarly to the effects of the first exemplary embodiment, even in the mixed communication environment of IPv4 and IPv6, name resolution on both IPv4 and IPv6 can be performed by querying a host name once.","Further, the translation address retranslating means  translates an address translated based on a predetermined rule among addresses received from the name database server  into the address before translation. Thus, the terminal device  can acquire an address of the required record type and use the address before translation.","Further, when the terminal device  designates a record type representing an IPv6 address as a record type, the address translating means  may translate an IPv4 address extracted from the node information storage means  into an IPv4 mapped Address. In this case, a translation function of an IPv4 mapped Address and an IPv4 address implemented in the typical kernel can be used. For this reason, another recovery translating process needs not be added to the client application side. Thus, influence on a plurality of client applications can be suppressed. Further, in this case, since an appropriate measure can be taken by implementing the function according to the present exemplary embodiment at the name database server  (for example, the DNS server) side, and an influence range can be reduced.","Next, a modified example of the second exemplary embodiment will be described. The second exemplary embodiment has been described in connection with the example in which the address translating means  translates an IPv4 address into an IPv6 address, and the translation address retranslating means  translates a post-translation IPv6 address into an IPv4 address before translation. In this modified example, an example in which the address translating means  performs other processing as well as address translation will be described.","In the second exemplary embodiment, when a query about an address corresponding to a host name is received from the terminal device , the address translating means  performs a process of translating an address. In this modified example, the address translating means  performs a process (hereinafter, referred to as a \u201cspecifying process\u201d) of causing a query result to be used by only a specific terminal device in addition to the process of translating an address. At this time, the translation address retranslating means  performs a process corresponding to the specifying process. Hereinafter, a process of causing a query result which has been subjected to the specifying process to become a usable state is referred to as a \u201crecovery translating process.\u201d","When specifications on the specifying process are agreed between the terminal device  and the name database server , although the terminal device  has performed the specifying process, the name database server  can recognize the recovery translating process on the performed specifying process. However, the terminal device  that does not know the specifying process by the name database server  does not know a method of coping with the specifying process, and thus it is difficult to use information which has been subjected to the specifying process. As described above, an agreement on the specifying process is performed between the terminal device  and the name database server , and thus a terminal that performs address translation or the specifying process can be limited to a specific client (the terminal device ) that has performed the agreement.","Further, the address translating means  may perform the specifying process that causes the recovery translating process to be performed by any device. In this case, the address translating means  adds additional information which can be recognized by only the specific terminal device  to information which has been subjected to the recovery process. For example, the address translating means  may add the additional information to a tail part of the information, and may add the additional information in a watermark manner. This method can be called a check digit method or an invisible ink method. The terminal device  that recognizes the check digit method or the invisible ink method can use the additional information.","Further, the address translating means  may perform a process of encrypting information using a specific key possessed by the terminal device  performing the recovery translating process as the specifying process when address translation is performed. At this time, for example, encapsulating security payload (ESP) using a public key encryption scheme or authentication header (AH) using a public key encryption scheme is used as a protocol for an encryption process and an authentication process. At this time, the terminal device  may decrypt information using a decryption key corresponding to the specific key possessed by the terminal device  as the recovery translating process. However, the protocol used for the encryption process and the authentication process is not limited to the above content.","Further, the name resolution system may use an authentication scheme based on challenge\/response authentication for the specifying process. Specifically, when the terminal device  (specifically, the address querying means ) transmits an authentication request to the name database server , the name database server  (for example, the address translating means ) transmits a challenge back thereto. Then, the address querying means  generates a response in which the received challenge and a password are converted according to a specific algorithm, and transmits the response to the name database server . The address translating means  generates a response based on the transmitted challenge and a previously registered password of the terminal device  in the same manner. Then, when the response matches the response received from the terminal device , the address translating means  performs address translation.","Besides, the name resolution system may use an authentication method based on a check digit or an authentication method using a one-time password for the specifying process. The authentication scheme based on the challenge\/response authentication, the authentication method based on a check digit, and the authentication method using a one-time password are widely known, and thus a detailed description thereof will not be made.","Next, the recovery process performed by the terminal device  will be described. The process of translating an IPv4 address into an IPv4 mapped Address described in the second exemplary embodiment is usually performed in the kernel. For this reason, it is unnecessary for the application of the user land to be aware of this translation process. However, when the terminal device  performs processing other than the process of translating into the IPv4 mapped Address, a portion that receives a response packet to a DNS query or a transfer destination of the response packet executes the recovery translating process.","The response packet is received by the resolver library. For this reason, the recovery translating process is preferably implemented in the resolver library. The resolver library other than the kernel is the process in the user land. However, as the recovery translating process is implemented in the resolver library commonly used by communication applications, efforts of adding the recovery translating process to individual communication applications can be reduced.","As described above, as processing other than the address translating process is performed by the terminal device  and the name database server , the name resolution system can have a new added value in addition to the name resolution.","Next, an outline of a name resolution system according to a third exemplary embodiment will be described with reference to .  is an explanatory diagram illustrating an example of an operation of performing name resolution. The name resolution system according to the third exemplary embodiment generates an entry in which an IPv4 address is translated into an IPv6 address in advance when entries of both an IPv6 address and an IPv4 address are present on a host name. Specifically,  illustrates that IPv4 addresses p and q are translated (static-translated) into IPv6 addresses p\u2032 and q\u2032 at a predetermined timing, and then held in a magnetic disk or the like. In a table, a hatched portion represents a translated record.","In this state, first, a client transmits DNS query packet by which a host name (\u201chostX\u201d in ) of a target performing name resolution and a record type (\u201cAAAA\u201d in ) of an IPv6 address are designated to a DNS server. Next, the DNS server that has received the DNS query packet searches for an entry corresponding to the received host name and the record type \u201cAAAA.\u201d In the example of , as a result, addresses s, t, p\u2032, and q\u2032 of the entry corresponding to the host name \u201chostX\u201d and the record type \u201cAAAA\u201d are specified. Then, the DNS server transmits a packet including the IPv6 addresses s, t, p\u2032, and q\u2032 to the client. The client that has received the IPv6 addresses translates the translated addresses p\u2032 and q\u2032 to recover the IPv4 addresses p and q before translation.","As the method of translating an IPv4 address into an IPv6 address, for example, a method of translating the IPv4 address into an IPv4 mapped IPv6 Address (hereinafter, referred to as an \u201cIPv4 mapped Address\u201d) is used. The process of translating an IPv4 mapped Address into an IPv4 address is usually performed in the kernel, and thus as an IPv4 address is translated into an IPv4 mapped Address, an application in the user land at the client side needs not perform the recovery translating process.","As described above, the name resolution system according to the third exemplary embodiment transmits the packet by which a host name and a record type of an IPv6 address are designated to the DNS server once and thus can acquire a packet including an address corresponding to the host name through the designated record type at a time. In addition, the translated address is translated to recover the address before translation, and thus the translated address can be used as an original address. Next, content of the name resolution system according to the third exemplary embodiment will be described in detail.",{"@attributes":{"id":"p-0122","num":"0123"},"figref":["FIG. 8","FIG. 5"],"b":["30","50","30"]},"The name database server  includes a node information storage means , a translation address storage means , an address translating means , an entry searching means , and a search result transmitting means . The node information storage means  is the same as in the first and second exemplary embodiments, and thus a description thereof will not be made.","The translation address storage means  stores an entry in which an address (hereinafter, referred to as a \u201ctranslation address\u201d) in which an IPv4 address stored in the node information storage means  is translated into an IPv6 address and an IPv6 address stored in the node information storage means  are associated with a host name. For example, the translation address storage means  is implemented by a magnetic disk or the like. Further, information associated with each address is not limited to a host name. The translation address storage means  may store an entry in which another information representing host information of a domain is associated with each address such as a zone file, similarly to the node information storage means . The entry stored in the translation address storage means  is stored by the address translating means  which will be described later.","The address translating means  translates an address of one record type among addresses stored in the node information storage means  into an address of another record type based on a predetermined rule. Then, the address translating means  causes both an entries including a translated address and an entry including a non-translated address among entries stored in the node information storage means  to be stored in the translation address storage means .","Specifically, the address translating means  translates an IPv4 address stored in the node information storage means  into an IPv6 address based on a predetermined rule. Then, the address translating means  causes both an entry including a translated IPv6 address (that is, translation address) and an entry including a non-translated IPv6 address stored in the node information storage means  to be stored in the translation address storage means .","The address translating means  may translate an address at predetermined intervals or a predetermined timing. Alternatively, the address translating means  may translate the address at a timing at which an entry is added to the node information storage means . Further, an entry stored in the translation address storage means  by the address translating means  may be a difference from a previous translation process or all entries serving as a target.","The entry searching means  searches the translation address storage means , and specifies an entry corresponding to a host name and record type received from the terminal device . For example, when the record type \u201cAAAA\u201d is received from the terminal device , the entry searching means  specifies an entry (that is, an entry including an IPv6 address) whose record type is \u201cAAAA\u201d among entries corresponding to a host name.","The search result transmitting means  transmits an address corresponding to a host name to the terminal device . Specifically, the search result transmitting means  transmits an address included in an entry specified by the entry searching means  to the terminal device . Further, when it is difficult for the entry searching means  to specify an entry, the search result transmitting means  may transmit information representing that an address corresponding to a host name has not been present to the terminal device .","The present exemplary embodiment is different from the second exemplary embodiment in that a post-translation address is stored in the translation address storage means  in advance. In other words, the name database server  according to the present exemplary embodiment translates and stores an address in advance regardless of the presence or absence of a query from the terminal device . For this reason, the name resolution method according to the present exemplary embodiment can be called a static translation method.","Further, the present exemplary embodiment has been described in connection with the example in which the name database server  includes the node information storage means  and the translation address storage means . As described above, as the node information storage means  is separated from the translation address storage means , it is unnecessary to change the structure to update an entry of a zone file (corresponding to the node information storage means ) when applied to a general DNS. Then, in the process of specifying an entry, it is sufficient that a search destination of an entry is merely changed from the zone file to the translation address storage means .","Alternatively, the name database server  may include only the node information storage means . In this case, for example, when an entry of a zone file (corresponding to the node information storage means ) is updated by applying a DNS dynamic update, the address translating means  may translate a record type together and then cause an entry including a translated address to be stored in the node information storage means . As described above, as a record type is translated together before an entry is updated on the node information storage means , it is unnecessary to change a search destination of an entry. Thus, the existing DNS can be used as is.","The address translating means  may use a rule of translating an IPv4 address into an IPv4 mapped Address as a predetermined rule. The IPv4 mapped Address is one in which an IPv4 address is translated into an IPv6 address. For this reason, a problem does not occur when a translated address is registered to a database of a DNS.","The method of translating an IPv4 address into an IPv6 address at a predetermined timing as necessary and holding the translated IPv6 address can be called a hybrid translation method. The reality of the hybrid translation method is a dynamic translation method. The static translation method can be regarded as a method (hereinafter, referred to as a \u201cprior translation method\u201d) of translating information of a file (which may be a database information file) including address information in advance. In the dynamic translation method, it is unnecessary to be aware of whether information stored as database information serving as a target is information translated by the prior translation method or information translated by the static translation method. In other words, the static translation method and the dynamic translation method are translation methods independently of each other. Meanwhile, the hybrid translation method is a method in which both the static translation method and the dynamic translation method are enabled.","The present exemplary embodiment has been described in connection with the example in which the name database server  includes the address translating means , and the address translating means  translates an address stored in the node information storage means  at a predetermined timing, and causes an entry including the translated address to be stored in the translation address storage means . However, an external device (not illustrated) may translate an address stored in the node information storage means  at a predetermined timing, and cause an entry including the translated address to be stored in the translation address storage means . In this case, the name database server  may not include the address translating means .","The address translating means , the entry searching means , and the search result transmitting means  are implemented by a CPU of a computer operating according to a program (an entry search program). Further, each of the address translating means , the entry searching means , and the search result transmitting means  may be implemented by dedicated hardware.","Next, an operation in which a DNS server transmits an IPv6 address and an address in which an IPv4 address is translated into an IPv6 address back to a client when the client designates a host name and a record type \u201cAAAA\u201d and transmits a query about an address will be described. The client corresponds to the terminal device , and the DNS server corresponds to the name database server .",{"@attributes":{"id":"p-0138","num":"0139"},"figref":"FIG. 9","b":["52","21","52","51","21"]},"Meanwhile, the address querying means  of the client transmits a DNS query packet in which a host name and a record type \u201cAAAA\u201d are designated to the DNS server, and queries an address corresponding to the host name (step S). Upon receiving the DNS query packet from the client, the entry searching means  searches the translation address storage means , and specifies an entry corresponding to the received host name and the record type \u201cAAAA\u201d (step S). Then, the search result transmitting means  transmits a packet including an address of the specified entry to the client (step S).","When the client receives the packet including the address, the translation address retranslating means  translates the IPv4 address translated into the IPv6 address among the addresses received from the DNS server into the IPv4 address before translation (step S).","As described above, according to the present exemplary embodiment, the translation address storage means  stores an entry in which an address (that is, a translation address) in which an address (an IPv4 address) of a first record type is translated into an address (IPv6 address) of a second record type based on a predetermined rule and the second record type are associated with a host name. Then, when the second record type (IPv6 address) is received from the terminal device , the entry searching means  searches the translation address storage means , and specifies an entity of the second record type (\u201cAAAA\u201d) corresponding to the host name. Then, the search result transmitting means  transmits the address (IPv6 address) of the second record type included in the specified entry to the terminal device . Thus, similarly to the effects of the first exemplary embodiment, even in the mixed communication environment of IPv4 and IPv6, name resolution on both IPv4 and IPv6 can be performed by querying a host name once.","In addition, the name database server  stores a previously translated address. For this reason, in addition to the effects of the second exemplary embodiment, it is unnecessary to perform the translating process each time a query is received from the terminal device . Thus, an effect by which a load of the name database server  (DNS server) is reduced is obtained.","Further, the address translating means  may translate the address (IPv4 address) of the first record type into the address (IPv6 address) of the second record type based on a predetermined rule. Then, the address translating means  may cause the translated address to be stored in the node information storage means .","Next, an outline of a name resolution system according to a fourth exemplary embodiment will be described with reference to .  is an explanatory diagram illustrating an example of an operation of performing name resolution. In the name resolution system according to the fourth exemplary embodiment, first, a client transmits a DNS query packet by which a host name (\u201chostX\u201d in ) of a target performing name resolution and a record type (\u201cA, AAAA\u201d in ) of an IPv4 address and an IPv6 address are designated to a DNS server. Next, the DNS server that has received the DNS query packet searches for an entry of the designated record type \u201cA\u201d and an entry of the record type \u201cAAAA\u201d among entries of the received host name. In the example illustrated in , as a result, addresses p, q, s, and t included in entries matching the host name \u201chostX\u201d and the designated record types are specified. Then, the DNS server transmits a packet including the addresses p, q, s, and t to the client.","In a general DNS, when a query about an address is performed, a plurality of record types are not designated. However, in the name resolution system according to the fourth exemplary embodiment, by transmitting the packet by which the host name and a plurality of record types are designated to the DNS server once, a packet including an address corresponding to the host name can be acquired at a time. Further, in the fourth exemplary embodiment, since the translating process is not performed on an address, the client side that has received the address needs not translate the received address. Next, content of the name resolution system according to the fourth exemplary embodiment will be described in detail.",{"@attributes":{"id":"p-0146","num":"0147"},"figref":["FIG. 11","FIG. 2"],"b":["60","70","70","70"]},"The terminal device  includes an address querying means . The address querying means  transmits a host name and a plurality of record types to the name database server , and performs a query about an address corresponding to the host name. A record type stored in the node information storage means  is designated as a record type to be transmitted. Specifically, the address querying means  transmits a host name and \u201cA\u201d and \u201cAAAA\u201d (that is, a record type representing an IPv4 address and a record type representing an IPv6 address) to the name database server . For example, the address querying means  is implemented by a CPU of a computer (the terminal device ) operating according to a program.","The name database server  includes a node information storage means , an entry searching means , and a search result transmitting means . The node information storage means  is the same as in the first exemplary embodiment, and thus a description thereof will not be made.","The entry searching means  searches the node information storage means , and specifies an entry of a record type that matches a host name received from the terminal device  and matches any one of a plurality of record types. For example, the entry searching means  receives the packet including the host name and the record types \u201cA\u201d and \u201cAAAA\u201d from the terminal device . At this time, the entry searching means  searches the node information storage means , and specifies an entry that corresponds to the host name and has the record type of \u201cA\u201d or \u201cAAAA.\u201d","The search result transmitting means  transmits an address of the entry specified by the entry searching means  to the terminal device . Here, when an entry of a target has not been present, the search result transmitting means  may transmit a packet including information representing that an address corresponding to the host name has not been present to the terminal device .","The entry searching means  and the search result transmitting means  are implemented by a CPU of a computer operating according to a program (an entry search program). Further, each of the entry searching means  and the search result transmitting means  may be implemented by dedicated hardware.","Next, an operation in which a DNS server transmits both an IPv4 address and an IPv6 address back to a client when the client designates a host name and record types \u201cA\u201d and \u201cAAAA\u201d and transmits a query about an address will be described. The client corresponds to the terminal device , and the DNS server corresponds to the name database server .",{"@attributes":{"id":"p-0153","num":"0154"},"figref":"FIG. 12","b":["61","31","71","21","32","72","33"]},"As described above, according to the present exemplary embodiment, the address querying means  transmits the host name and a plurality of record types to the name database server . Then, the entry searching means  searches the node information storage means , and specifies an entry that matches the received host name and matches any one of a plurality of record types. Then, the search result transmitting means  transmits an address included in the specified entry to the terminal device .","Through the above configuration, even in the mixed communication environment of IPv4 and IPv6, name resolution on both IPv4 and IPv6 can be performed by querying a host name once. Further, unlike the second and third exemplary embodiments, since the translating process is not performed by the name database server  (server side), the terminal device  (client side) needs not perform the translating process for recovering an address.","Next, a minimum configuration of the present invention will be described.  is a block diagram illustrating an example of a minimum configuration of a name resolution system according to the present invention.  is a block diagram illustrating an example of a minimum configuration of a name database server according to the present invention.","The name resolution system illustrated in  includes a terminal device  (for example, the terminal device ) that performs a query about node information and a name database server  (for example, the name database server ) that receives the query from the terminal device .","The terminal device  includes an address querying means  (for example, the address querying means ) that transmits entry specifying information specifying an entry to be stored in the name database server and a virtual record type (for example, \u201cAAAA+A\u201d) to the name database server , and performs a query about the node information.","The name database server  includes a node information storage means  (for example, the node information storage means ) that stores an entry of node information in which at least an address and a record type are associated with a host name, a search target record deciding means  (for example, the search target record deciding means ) that decides a record type (for example, \u201cA\u201d and \u201cAAAA\u201d) of an entry of a search target from a received virtual record type (for example, \u201cAAAA+A\u201d) based on a search rule which is a rule specifying a record type of a search target according to a virtual record type, an entry searching means  (for example, the entry searching means ) that searches the node information storage means  and specifies an entry that corresponds to entry specifying information received from the terminal device  and has the record type decided by the search target record deciding means , and a search result transmitting means  (for example, the search result transmitting means ) that transmits node information (for example, an IPv4 address and an IPv6 address) included in the entry specified by the entry searching means  to the terminal device .","The name database server illustrated in  includes a node information storage means  (for example, the node information storage means ), a search target record deciding means  (for example, the search target record deciding means ), an entry searching means  (for example, the entry searching means ), and a search result transmitting means  (for example, the search result transmitting means ). Contents of the node information storage means , the search target record deciding means , the entry searching means , and the search result transmitting means  are the same as the contents illustrated in .","Through the above configuration, node information of a plurality of record types can be acquired by a single query.","Further, the search target record deciding means  may decide a record type from a virtual record type received from the terminal device  based on a search rule that specifies a record type of a search target according to a virtual record type (for example, \u201cAAAA+A\u201d) different from a character string representing a record type stored in the node information storage means . As described above, as a record type different from a virtual record type stored in the DNS server is used when a query is performed, influence on the existing structure can be suppressed.","Further, when a virtual record type and a host name are received, the search target record deciding means  may decide a record type (for example, \u201cAAAA\u201d) representing an IPv6 address and a record type (for example, \u201cA\u201d) representing an IPv4 address as a record type of an entry of a search target, and the entry searching means  may search the node information storage means  and specify an entry that corresponds to the host name received from the terminal device  and has a record type representing an IPv6 address and a record type representing an IPv4 address.","The present invention has been described with reference to the exemplary embodiments and examples, but the present invention is not limited to the exemplary embodiment and examples. Further, various changes that person having ordinary skill in the art can understand can be made on the configuration or details of the present invention within the scope of the present invention.","This application claims priority to and the benefit of Japanese Patent Application No. 2010-233412 filed on Oct. 18, 2010, the disclosure of which is incorporated by reference herein.","The present invention is appropriately applied to a name database server used to perform name resolution in a communication environment in which a plurality of record types are present.",{"@attributes":{"id":"p-0167","num":"0000"},"ul":{"@attributes":{"id":"ul0002","list-style":"none"},"li":{"@attributes":{"id":"ul0002-0001","num":"0000"},"ul":{"@attributes":{"id":"ul0003","list-style":"none"},"li":[{"@attributes":{"id":"ul0003-0001","num":"0168"},"b":["10","30","60"]},{"@attributes":{"id":"ul0003-0002","num":"0169"},"b":["11","31","61"]},{"@attributes":{"id":"ul0003-0003","num":"0170"},"b":["20","40","50","70"]},{"@attributes":{"id":"ul0003-0004","num":"0171"},"b":"21"},{"@attributes":{"id":"ul0003-0005","num":"0172"},"b":"22"},{"@attributes":{"id":"ul0003-0006","num":"0173"},"b":["24","43","54","72"]},{"@attributes":{"id":"ul0003-0007","num":"0174"},"b":"32"},{"@attributes":{"id":"ul0003-0008","num":"0175"},"b":["23","41","53","71"]},{"@attributes":{"id":"ul0003-0009","num":"0176"},"b":["42","52"]},{"@attributes":{"id":"ul0003-0010","num":"0177"},"b":"51"}]}}}}],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"BRIEF DESCRIPTION OF DRAWINGS","p":[{"@attributes":{"id":"p-0034","num":"0033"},"figref":"FIG. 1"},{"@attributes":{"id":"p-0035","num":"0034"},"figref":"FIG. 2"},{"@attributes":{"id":"p-0036","num":"0035"},"figref":"FIG. 3"},{"@attributes":{"id":"p-0037","num":"0036"},"figref":"FIG. 4"},{"@attributes":{"id":"p-0038","num":"0037"},"figref":"FIG. 5"},{"@attributes":{"id":"p-0039","num":"0038"},"figref":"FIG. 6"},{"@attributes":{"id":"p-0040","num":"0039"},"figref":"FIG. 7"},{"@attributes":{"id":"p-0041","num":"0040"},"figref":"FIG. 8"},{"@attributes":{"id":"p-0042","num":"0041"},"figref":"FIG. 9"},{"@attributes":{"id":"p-0043","num":"0042"},"figref":"FIG. 10"},{"@attributes":{"id":"p-0044","num":"0043"},"figref":"FIG. 11"},{"@attributes":{"id":"p-0045","num":"0044"},"figref":"FIG. 12"},{"@attributes":{"id":"p-0046","num":"0045"},"figref":"FIG. 13"},{"@attributes":{"id":"p-0047","num":"0046"},"figref":"FIG. 14"},{"@attributes":{"id":"p-0048","num":"0047"},"figref":"FIG. 15"},{"@attributes":{"id":"p-0049","num":"0048"},"figref":"FIG. 16"},{"@attributes":{"id":"p-0050","num":"0049"},"figref":"FIG. 17"},{"@attributes":{"id":"p-0051","num":"0050"},"figref":"FIG. 18"},{"@attributes":{"id":"p-0052","num":"0051"},"figref":"FIG. 19"},{"@attributes":{"id":"p-0053","num":"0052"},"figref":"FIG. 20"},{"@attributes":{"id":"p-0054","num":"0053"},"figref":"FIG. 21"}]},"DETDESC":[{},{}]}
