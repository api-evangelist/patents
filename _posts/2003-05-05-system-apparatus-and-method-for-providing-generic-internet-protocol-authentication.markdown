---
title: System, apparatus, and method for providing generic internet protocol authentication
abstract: Generic Internet Protocol (IP) authentication is provided by authentication server (). Application Programming Interface (API) () detects the protocol type of an incoming authentication request and invokes one of a number of authentication mechanisms (-) depending on the protocol type detected. A localized repository () is provided to store Subscriber Identity Module (SIM) information and other algorithm data as required to facilitate the authentication session.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=07421732&OS=07421732&RS=07421732
owner: Nokia Corporation
number: 07421732
owner_city: Espoo
owner_country: FI
publication_date: 20030505
---

{"@attributes":{"id":"description"},"BRFSUM":[{},{}],"heading":["FIELD OF THE INVENTION","BACKGROUND OF THE INVENTION","SUMMARY OF THE INVENTION","DETAILED DESCRIPTION OF THE INVENTION"],"p":["This invention relates in general to providing generic Internet Protocol (IP) authentication, and more particularly, to providing authorization and authentication for an IP Multimedia Subsystem (IMS).","The mobile industry has experienced a period of exceptional growth during the last several years, where mobile voice and simple SMS text messaging have provided some of the primary drivers for that growth. As the next generation of mobile network growth evolves, services will be offered, where rich content as well as voice will be transported throughout a combination of mobile and internet environments, using an integrated IP network layer.","An ALL-IP network enables seamless network integration of different access options, e.g., broadband, mobile Internet, fixed Internet, and existing mobile systems, into a single IP layer. As such, all communication services may be carried over a single network infrastructure, thus enabling the integration of voice, data, and multimedia services. Carriers on the ALL-IP networks will glean a number of important benefits as well, including cost savings, scalability, flexibility, efficient network operations, and new revenue opportunities.","The ALL-IP communication system is to be fully compliant with the Third Generation Partnership Project (3GPP) release 5 and 6 standards, with open interfaces and IP Version 6 (IPv6) support. Accordingly, Session Initiation Protocol (SIP) is introduced as a key ingredient in providing support for multimedia services across the Web and Internet domain for IP enabled terminals. For a consumer, for example, this means integrated voice, video, and browsing experience in a single call. With SIP, numerous applications can be implemented which combine traditional telephony with messaging and multimedia. In particular, SIP applications and services may be combined in order to complement and supplement each other in order to provide a more fulfilling and reduced workload experience for the consumer. As applications and services become integrated, they each become readily available to supplement each other's shortcomings. Additionally, however, authentication and authorization of users that access those applications and services becomes increasingly challenging.","Authenticating the identity and authorization of users with a high degree of certainty in open environments has been one of the most significant functional problems encountered when developing services accessible over the Internet. Many different schemes for establishing the desired result have been devised, with varying degrees of certainty, security and user friendliness. Properties of every good identity authentication and authorization mechanism should at least possess, for example: correctness; preservation of anonymity; speed; resistance to attack; low expense; user friendliness; and universality. In order to preserve anonymity, the user authentication and authorization mechanisms should not have direct access to the security credentials of each user. They should, rather, be implemented via Subscriber Identity Module (SIM) or Application Protocol Data Unit (APDU) servers that have direct communications with the associated operating systems.","Within IMS, however, varying signaling protocols exist for authenticating the user, where each protocol may implement its own algorithm, such as the Advanced Encryption Standard (AES) or Digest. The signaling protocols that require authentication when accessing the network include Session Initiation Protocol (SIP), HyperText Transfer Protocol (HTTP), IP via Wireless Local Area Network (WLAN), Extensible Authentication Protocol (EAP), etc. Currently, these IMS protocols implement their own security solutions, where access to the security credentials is facilitated through the use of separated systems such as the Public Key Infrastructure (PKI).","As the ALL-IP communication system develops, a consolidated authentication system is desired, which is able to adapt to the specific bearer mechanism being used. Additionally, the consolidated authentication system should be able to perform multiple algorithms and create the appropriate messages that encapsulate the results of those algorithms depending upon the bearer protocol that requested the authentications. Thus, the consolidated authentication system should have access to the SIM information and other algorithm data within the same platform in order to perform the right calculation. The different applications installed on the platform should register the security algorithms, protocols and credentials that are required for performing each authentication procedure. Once registered, the security information may be accessed by the requesting party from the platform. Such an access would then result in the execution of the correct algorithm and correct result delivery encapsulated into the correct envelope as required by the requesting entity.","Accordingly, there is a need in the communications industry for a system, apparatus and method that facilitates consolidated authentication. The consolidated authentication should have the capability to service authentication procedures from any number of IP bearer protocols and return the results of the authentication procedures in the correct format as required by the requesting entities.","To overcome limitations in the prior art, and to overcome other limitations that will become apparent upon reading and understanding the present specification, the present invention discloses a system, apparatus, and method for providing generic authentication services in an IP network.","In accordance with one embodiment of the invention, a method is provided for facilitating generic authentication within an IP network. The network comprises receiving an authentication request, detecting an authentication mechanism associated with the received authentication request, selecting one of a plurality of authentication modules in response to the detected authentication mechanism, and accessing data that is required to support the authentication module.","In accordance with another embodiment of the invention, an authentication system is provided. The authentication system comprises a plurality of network elements each employing a different authentication protocol. The authentication system further comprises an authentication server arranged to provide authentication service in response to received authentication requests from the network elements. The authentication server further comprises a data server arranged to provide data to the authentication server to support the authentication service. The authentication service performed depends upon the authentication protocol employed by the requesting network element, which is detected by an Application Programming Interface (API) that allows the applications to utilize the services provided by the authentication system.","In accordance with another embodiment of the invention, a server within a network is provided to authenticate network elements within an IP network. The server comprises means for receiving authentication requests having various protocol types from the network elements, means for detecting the various protocol types, means for invoking an authentication mechanism depending upon the protocol type of the authentication request, and means for accessing data in support of the authentication of the network elements.","In accordance with another embodiment of the invention, a computer-readable medium having instructions stored thereon which are executable by an authentication server for facilitating authentication of network elements is provided to perform steps comprising receiving authentication requests having various protocol types from the network elements, detecting the various protocol types, invoking an authentication mechanism depending upon the protocol type of the authentication request, and accessing data in support of the authentication of the network elements.","These and various other advantages and features of novelty which characterize the invention are pointed out with greater particularity in the claims annexed hereto and form a part hereof. However, for a better understanding of the invention, its advantages, and the objects obtained by its use, reference should be made to the drawings which form a further part hereof, and to accompanying descriptive matter, in which there are illustrated and described specific examples of a system and method in accordance with the invention.","In the following description of the exemplary embodiment, reference is made to the accompanying drawings which form a part hereof, and in which is shown by way of illustration various embodiments in which the invention may be practiced. It is to be understood that other embodiments may be utilized, as structural and operational changes may be made without departing from the scope of the present invention.","Generally, the present invention is directed to a system, apparatus, and method to provide authorization and authentication services within an IP based network. Identification and authentication are critical functions for practically all services offered by the IP based network. A consumer and a client, for example, need to be identified and authenticated before gaining access to services offered by mobile networks, WLANs, corporate intranets, and valuable Wireless Application Protocol (WAP) and Web sites on the Internet. It is equally important that the consumer trust the service, so that no sensitive information is provided to unknown parties.","The present invention provides a mechanism through which a number of protocols and standards for authentication may be serviced. The mechanism according to the principles of the present invention is intended to provide an open standard and API for identification and authentication for a variety of service types. In so doing, the present invention enables subscribers to: identify themselves with an appropriate level of traceability and security; disclose some of their private data to various services in a controlled and confidential manner so that personal services can be provided; authorize services and other agents to use brokers; and achieve single sign-on.","The identification and authentication system provides client authentication that has adequate security to satisfy the carrier or service provider policies for service access or for the transaction being undertaken. Additionally, the identification and authentication system provides management and authorization tools to simplify provisioning and configuration of the consumer accounts and devices. Further, the identification and authentication system provides development tools to aid smooth deployment of the authentication and identification system and to enable third-party application developers to use the system more easily.","An exemplary system level diagram of ALL-IP system  architecture in accordance with the present invention is shown in . ALL-IP core  provides the common, IP based signaling core utilized by system  to integrate various fixed, mobile, and Internet networks. ALL-IP core  allows all communication services to be carried over a single network infrastructure, thus enabling the integration of voice, data, and multimedia services. Further, ALL-IP core  allows network resources to be used more efficiently, where increased capacity may be deployed as necessary to meet demand.","ALL-IP system  is optimized to support multimedia services, where Call State Control Function (CSCF)  implementing SIP is a key ingredient in providing the multimedia services to all IP enabled devices. Although SIP's primary objective was meant for multimedia sessions, its scope may be extended to presence, gaming, and IM, as well. Numerous applications can be implemented using SIP, allowing the combination of traditional telephony with messaging and multimedia. For example, SIP can enhance the concept of caller identification from one of simply displaying the number of the calling party to terminal , for example, to one of rich content identification. The calling party may, for example, display his personalized logo or business card information to terminal  and deliver the subject of the pending call in text, video, or picture format, depending upon the capabilities of terminal .","The wireless terminal  may represent any of a number of ALL-IP mobile communication devices, such as a cellular telephone , a personal digital assistant (PDA) , a notebook or laptop computer , or any other type of ALL-IP wireless terminal represented by device . 3G Radio Access Network (RAN)  represents a combination of all mobile radio standards, such as Global System for Mobile Communications (GSM)\/Enhanced Data Rates for Global Evolution (EDGE) and Wideband Code Division Multiple Access (WCDMA). Each mobile radio standard having its own distinct network architectures and transport mechanisms that are fully integrated using the IP protocol, where Serving General Packet Radio Service (GPRS) Support Node (SGSN)  and Gateway GPRS Support Node  provides the RAN interface to ALL-IP core .","Network  provides WLAN, Digital Subscriber Line (DSL), and cable access to ALL-IP core  by Remote Access Server (RAS) . RAS  may include, for example, a Digital Subscriber Line Access Multiplexer (DSLAM) or a cable head end controller. To provide access to ALL-IP core  over a cable network, a head-end controller device (not shown) within RAS  connects to an IP router (not shown) that sends and receives the data from ALL-IP core . The controller interprets the data it receives from individual customers and keeps track of the services offered to each of them. The controller also modulates the data received from ALL-IP core  so that the head-end equipment can send it to a specific cable subscriber within network .","ALL-IP system  supports Legacy Cellular systems  that offers communication support to non ALL-IP terminal , for example. Signaling gateway  performs all necessary Signaling System No. 7 (SS7) and Mobile Application Part (MAP) signaling conversions as necessary to provide SS7 over IP access from PSTN  and MAP over IP access from Legacy Cellular system  to ALL-IP core . In addition, signaling gateway  provides Short Message Service Center (SMSC) support and Multimedia Message Service Center (MMSC) support for any SMS and MMS operations as required by mobile terminal .","Internet  access from ALL-IP core  is provided through internet gateway  to allow accesses defined by Uniform Resource Locator (URL) and Uniform Resource Identifier (URI) address definitions. Home Subscriber Server (HSS)  provides ALL-IP core  with the many database functions that are required in ALL-IP networks. HSS , for example, includes Home Location Register (HLR) and Domain Name Server (DNS).","Service capability servers  provide consumer applications and services that are not easily provided within the circuit switched or packet core networks by themselves. Service groups having major relevance in 3G ALL-IP networks include information and entertainment content providers, communication, productivity enhancing services and business solutions. Accordingly, services that are timely, personalized, simple to complete, and location specific are provided to all consumers of ALL-IP system .","Authentication server  provides localized identification, authentication, and authorization functions for any terminal having access to ALL-IP core . Authentication server  is hierarchically attached to ALL-IP core via, for example, the IP, SIP, EAP, or HTTP stacks and it provides the required authentication mechanisms depending upon the bearer's capability used at any particular instant. Authentication server  performs the multiple algorithms and creation of the appropriate messages that encapsulate the results of those algorithms depending on the protocol that requested the authentications. For example, if authentication is requested from a WLAN access point, e.g., RAS , authentication server  receives information about the algorithm and protocol and will return the security tokens formatted into the indicated protocol, such as the Extensible Authentication Protocol (EAP).","Similarly, if the requesting protocol is SIP, authentication server  accesses the SIM information, either directly or via a SIM server (not shown), and performs the appropriate calculation for obtaining the integrity and confidentiality keys requested by the IMS. The integrity and confidentiality keys are then formatted into the correct SIP structure that is included in the SIP header. Alternately, if authentication is requested via a SIP procedure for accessing services provided within ALL-IP core , then calculation of the security credentials may involve a different algorithm and the results would involve a different structure that would be placed into the SIP header.","SIP enabled call\/authentication control within ALL-IP system  is provided by CSCF , where SIP is hierarchically located in the session layer of the Open System Integration (OSI) model of protocol stack communication.  illustrates SIP and related protocols as they are hierarchically related within the Internet Multimedia Architecture (IMA) as defined by the Internet Engineering Task Force (IETF). Internet layer  resides at the bottom of the IMA layered protocol stack above the physical layer (not shown). A portion of Internet layer  is comprised of IP layer , e.g., IPv4 or IPv6, which runs over every network technology and provides the basic connectionless, packet delivery service for any layer above it. Included with the IP layer is a mobility mechanism, Mobile IP , which allows mobile terminals to move freely between different mobile networks. Mobile IP  hides the changes in the point-of-attachment to the network from the layers above. Mobile IP  also enables mobile devices to receive IP packets via their home networks regardless of which network they happen to be roaming in at the time.","A multicasting agent, IP Multicasting , also resides within the IP layer which allows, for example, a mobile subscriber to deliver a packet simultaneously to multiple receivers, easing the scalability of large conferences or media streaming. Security is also provided within the IP layer, i.e., IPSec , which provides confidentiality and integrity protection for all traffic. RSVP  is a signaling protocol for flow state establishment. A flow is a stream of packets classified by a flow classifier where each packet is subject to a queuing policy. Each packet may be considered individually, for example, to check their conformance to the bandwidth limit associated with each packet in the packet stream.","Above the IP layer resides transport protocol layer , which operates end-to-end between hosts or terminals. Exemplary transport protocols include Transmission Control Protocol (TCP)  that allows connection-oriented reliable delivery with congestion control and retransmission for data recovery. Another transport protocol is User Datagram Protocol (UDP) , which allows a connectionless datagram service where connection setup is not needed or when overhead should be reduced. Another transport within transport layer  is the Stream Control Transmission Protocol (SCTP) (not shown) which provides connection-oriented service to multiple interfaces\/IP addresses. SCTP allows multiple streams to avoid head of line blocking and is also message oriented, so that protocols running on top of SCTP do not need to worry about message alignment. Transport Layer Security (TLS)  provides communications privacy over connection-oriented transport protocols. TLS  allows one or both of the end points to be authenticated with certificates and provides keys enabling encryption of all the data in the transport connection. A common use for TLS  and its predecessor, Secure Sockets Layer (SSL), is to secure Web transactions.","Above transport protocol layer  resides session protocol layer . HTTP  performs session control for browsing and enables management of transport layer connections for content transfer. The connections are addressed either to a proxy HTTP server or directly to the server identified by the host part of the Uniform Resource Locator (URL). E-mail type store and retrieve messaging sessions are managed with Simple Mail Transfer Protocol (SMTP)  and the Internet Message Access Protocol (IMAP) . Layers above transport layer  can utilize the Internet Domain Name System (DNS) to translate mnemonic names to numeric addresses required by those layers. Voice and other multimedia content, such as video or animation for example, are transported by Real-Time Transport Protocol\/Real-Time Transport Control Protocol (RTP\/RTCP) , which runs on top of UDP transport . RTP\/RTCP  also offers synchronization of data streams it carries by including a sequence number and a timestamp header.","Session Initiation Protocol\/Session Description Protocol (SIP\/SDP)  is utilized for instant messaging and rich call session control. SIP\/SDP  facilitates end-to-end capability negotiation for real-time multimedia communication sessions, where the real-time media is transported over RTP with the aid of RTP\/RTCP . Addressing for SIP sessions is based on the SIP URLs. SIP user agents are reachable through their registration to the rich session control element in the home network, which is identified by the domain portion of the consumer's SIP URL. Real time transport resources are managed independently by each session participant for his or her own access network.","Presentation layer  comprises Multipurpose Internet Mail Extensions (MIME) , which defines the rules for labeling and transmission of different data types within SMTP messages and their attachments. MIME  also forms the basis for the transmission of streaming data, such as audio and video messages. RTP Payload Formats  supports grouping of payload types for specific applications, such as for audio\/video conferencing. Payload types identify specific codecs, such as for Moving Pictures Expert Group Version 4 (MPEG-4) streams, or Enhanced Variable Rate Codec (EVRC) speech. Application layer  is situated on top of the transport and session layer protocols, providing the various mobile applications with basic application domain independent services, such as user interface, application inter-working, and service access security.","The protocol hierarchy of  should be largely encompassed by software architectures that are employed to facilitate internet telephony. Internet telephony consists not only of transmitting speech over packet-based networks, but also includes many other aspects of communications: easy-to-remember addressing, user and service mobility, network presence, instant messaging, and multimedia. In addition to peer-to-peer communications, seamless integration with Web browsing and real-time multimedia streaming are needed for a rich user experience.",{"@attributes":{"id":"p-0044","num":"0043"},"figref":["FIG. 3","FIG. 2"],"b":["300","302","330","304","338","340","308","344","328","304"]},"Communications subsystem  incorporates the operating system abstraction (not shown) and transport protocols SCTP , TCP , UDP  and TLS . Application Programming Interfaces (API) - supports the end-to-end application environment that includes both server side and terminal side application environments. On the terminal side, the application environment includes the APIs provided by the terminal. The standard, easy to use APIs allow developers to write applications once and run them easily in a large variety of terminals compliant with the endorsed standards. Use of technologies, such as Java 2 Micro Edition (J2ME), make it possible for developers to write applications that automatically adapt to different types of mobile devices, screen sizes, colors, and other device properties. On the server side, software architecture  includes the APIs provided by the Service Provisioning Infrastructure (SPI), which includes the software for hosting applications and content. Portability across multi-vendor SPIs and different hardware platforms is a major benefit that is provided by the APIs.","Authentication module  and associated API  provides a centralized authorization and authentication function according to the present invention. Various authentication mechanisms, e.g. -, are contained within authentication module  and they are invoked depending upon the bearer mechanisms requesting them. For example, if authentication is requested from a WLAN network  via RAS  in , then authentication module  receives information about the algorithm and protocol and returns security tokens formatted according to the requirements of WLAN network . Alternately, when the protocol requesting the authentication is SIP, authentication module  accesses the required SIM information from key storage  and then performs the appropriate calculation for obtaining the integrity and confidentiality keys.","In case the authentication module is unable to identify the specific authentication mechanism required, or is unable to access the required user information, e.g., security credentials, authentication module  will return an error notification indicating the reason of the failure. Such failure reasons may include, for example, the inability of authentication module  to access SIM information, or the inability to access specific user information that is required by the authentication mechanism of the request, etc. The application or protocol stack that receives the error notification may then treat the error accordingly and prompt the user to supply additional information, or simply just inform the user about the error. It is apparent to one of ordinary skill in the art that actions based on the reported errors from authentication module  are implementation dependant and may include any number of options.","IPsec Security Associations (SA) Manager  of authentication module  uses two protocols to provide traffic security: Authentication Header (AH) and Encapsulating Security Payload (ESP). The IP Authentication Header (AH) provides connectionless integrity, data origin authentication, and an optional anti-replay service. The Encapsulating Security Payload (ESP) protocol may provide confidentiality, e.g., encryption, and limited traffic flow confidentiality. Both AH and ESP are vehicles for access control, based on the distribution of cryptographic keys and the management of traffic flows relative to these security protocols.","IMS\/Authentication and Key Agreement (AKA)  of authentication module  produces an Authentication Vector (AV), based on a shared secret K and a sequence number (SQN). The AV contains a random challenge (RAND), network authentication token (AUTN), expected authentication result (XRES), a session key for integrity check (IK), and a session key for encryption (CK), each of which is contained within key storage . The authentication module  creates an authentication request, which contains the random challenge RAND, and the network authenticator token AUTN and is then delivered to the requesting client in the format required by the requesting client. Using the shared secret K and the sequence number SQN, the client verifies the AUTN. If the verification is successful, the network has been authenticated. The client then produces an authentication response RES, using the shared secret K and the random challenge RAND.","The PPP (Point-Point Protocol) Extensible Authentication Protocol (EAP)  of authentication module  is a general protocol for PPP authentication, which supports multiple authentication mechanisms. EAP  does not select a specific authentication mechanism at link control phase, but rather postpones the selection until the authentication phase. This allows API  to request more information before determining the specific authentication mechanism. After the link establishment phase is complete, authentication module  sends one or more requests to authenticate the client. The request has a type field to indicate what is being requested. Examples of request types include Identity, Message Digest 5 (MD5) challenge, One-Time Passwords, Generic Token Card, etc. Typically, authentication module sends an initial identity request followed by one or more requests for authentication information. However, an initial identity request is not required, and may be bypassed in cases where the identity is presumed, e.g., leased lines, dedicated dial-ups, etc. The client sends a response packet in reply to each request. Authentication module  ends the authentication phase with a success or failure packet.","Liberty Manager  of authentication module  specifies mechanisms for achieving identity federation, single sign-on, termination of identity federation, as well as single logout. When a single sign-on service is made available, for example, a user who has already authenticated himself with one service provider, need not authenticate himself with a second service provider. Instead, the sign-on at the first service provider lends itself to the second service provider, thus allowing a single sign-on. Liberty manager  separates the message schemas from their associated profiles and bindings. Message schemas are proposed for the single sign-on and federation protocol, the federation termination notification protocol, as well as the single log-out protocol. Associated with the single message schema, liberty manager  specifies several profiles and bindings. Depending on the particular scenario, the appropriate liberty profile may be applied. Such scenarios include cases where the client is using either a Web browser, a Wireless Application Protocol (WAP) browser, or a liberty-enabled browser.","HTTP\/Digest  of authentication module  is based on a simple challenge-response paradigm. The digest scheme challenges by using a nonce value. The response contains a checksum, e.g., MD5 checksum of the username, password, the given nonce value, the HTTP method, and the requested URI. In this way, the password is never sent in the clear. HTTP\/Digest  utilizes modified WWW-Authenticate and WWW-Authorization headers along with the WWW-Authentication-Info header to perform authorization on requests for access-protected objects. It should be noted that the authentication mechanisms are not limited only to those illustrated to be within authentication module . It is apparent to one of ordinary skill in the art that other mechanisms such as HTTP\/Basic or Kerberos, for example, may also be implemented within authentication module .","According to one embodiment of the present invention, authentication module , key storage , and API  are each co-located within a SIM server, user security profile storage, or other implementation specific storage for secure user information, e.g., Pretty Good Privacy (PGP) ring, etc., such as may be exemplified by authentication server  of . In such an instance, authentication server  provides local access to SIM information and other algorithm data within the same platform, in order to perform the correct calculation regardless of the requesting entity. The different applications installed on authentication server  register their respective security algorithms, protocols and credentials that are required for performing each authentication procedure. In another embodiment according to the present invention, authentication server  is separated from the SIM server, but maintains a security channel that is compliant with the Target of Evaluation (TOE) specifications from the European Union (EU) commission.","The specific modules that perform the authentication procedure within authentication module  should register their API to the authentication module in a plug in approach. Initially, for example, authentication module  may perform an older version of Liberty Alliance Identity checking, but when new versions are available, authentication module  may incorporate a new plug in that will perform the newest version of Liberty Alliance. Thus, new security modules could be embedded within authentication module , thus requiring that the modules be trusted, e.g., appropriately certificated in order to ensure that the module is legitimate and can be incorporated to the authentication module. Similarly, the applications requesting authentication service from authentication module  should be checked for legitimacy, where the channel between the applications and the authentication module is secure and tamper resistant by TOE standards.","Authentication server , employing authentication modules -, provides generic IP authentication to ALL-IP system  according to the present invention. Any protocol requiring authentication prior to its access of ALL-IP system  is able to initiate an authentication algorithm according to its particular protocol. Once initiated, API  of  passes the request to the authentication server, which recognizes the authentication algorithm required to process the request. API  then accesses the required authentication module as necessary and transacts the authorization\/authentication session to completion. Any signaling protocols in use by ALL-IP system  may be accepted by authentication server , where the signaling protocols include, but are not limited to, SIP, HTTP, RTP and IP via WLAN.","In accordance with an exemplary mode of operation, authentication server  provides SIP authentication support using SIP digest, plain text and AKA procedure. The authentication server may also provide an authorization token that may be requested by the SIP protocol to be included in the SDP messages for media authorization. SIP messages have substantially the same structure as HTTP messages, and contain a request line or status line followed by at least six header fields. SIP supports the Multi-Purpose Internet Mail Extension (MIME) for describing the content in the message body. In most cases, the message body consists of an SDP message that describes the media transfer after the call setup signaling is completed. The SDP message has a MIME subtype of application\/sdp and other MIME subtypes such as text\/plain or image\/gif may also exist within the message body. The SDP also contains a \u201ck=\u201d parameter that allocates security information used for authorizing the media transaction or access to the service specified in the SDP message.","All requests from a SIP User Agent (UA) contain a method in the request line as shown in Table 1. The response from a UA server has the same structure as in HTTP responses and contains response codes that belong to one of six response code classes that are listed in Table 2. Other SIP applications that can handle SIP messages include proxy servers, redirect servers, registration servers, and gateways. Proxy servers",{"@attributes":{"id":"p-0058","num":"0057"},"tables":{"@attributes":{"id":"TABLE-US-00001","num":"00001"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"70pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"133pt","align":"left"}}],"thead":{"row":[{"entry":[{},"TABLE 1"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"2","align":"center","rowsep":"1"}}]},{"entry":[{},"METHOD NAME","DESCRIPTION"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"2","align":"center","rowsep":"1"}}]}]},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"INVITE","Invites UA server to a call and establishes"]},{"entry":[{},{},"a new connection. Media capabilities may"]},{"entry":[{},{},"also be contained within the message."]},{"entry":[{},"ACK","Used to acknowledge a received INVITE"]},{"entry":[{},{},"request."]},{"entry":[{},"BYE","Terminates the media session between two"]},{"entry":[{},{},"UAs."]},{"entry":[{},"REGISTER","Used for registering information about"]},{"entry":[{},{},"a UA client's location."]},{"entry":[{},"CANCEL","Terminates a non-acknowledged"]},{"entry":[{},{},"invitation."]},{"entry":[{},"OPTION","Used to get information about supported"]},{"entry":[{},{},"capabilities."]},{"entry":[{},"MESSAGE","Used to exchange messages and may"]},{"entry":[{},{},"include plain text or MIME types."]},{"entry":[{},"UPDATE","Used for media negotiation and may"]},{"entry":[{},{},"include SDP with media"]},{"entry":[{},{},"authorization data."]},{"entry":[{},"SUBSCRIBE","Used to subscribe to certain events."]},{"entry":[{},"NOTIFY","Used to notify about certain events."]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"2","align":"center","rowsep":"1"}}]}]}}}}},{"@attributes":{"id":"p-0059","num":"0058"},"tables":{"@attributes":{"id":"TABLE-US-00002","num":"00002"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"70pt","align":"center"}},{"@attributes":{"colname":"2","colwidth":"147pt","align":"left"}}],"thead":{"row":[{"entry":"TABLE 2"},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}},{"entry":["CLASS","DESCRIPTION"]},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}}]},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["1xx","Provisional or informational: Request is"]},{"entry":[{},"progressing, but not yet complete."]},{"entry":["2xx","Success: Request has completed"]},{"entry":[{},"successfully."]},{"entry":["3xx","Redirection: Request should be tried at"]},{"entry":[{},"another location."]},{"entry":["4xx","Client error: Request was not completed due"]},{"entry":[{},"to error in request, can be retried when"]},{"entry":[{},"connected."]},{"entry":["5xx","Server error: Request was not completed"]},{"entry":[{},"due to error in recipient, can be retried at"]},{"entry":[{},"another location."]},{"entry":["6xx","Global failure: Request has failed and"]},{"entry":[{},"should not be retried again."]},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}}]}}}},"br":{}},"In particular, the message flow diagram of  illustrates an exemplary SIP Digest authentication message flow between, for example, SIP enabled lap top computer  and authentication server  of . The message exchange is used to ultimately establish an authenticated media session between lap top computer  and service capability server . Authentication server  is utilized to support SIP Digest authentication, whereby the authentication module , API  and key storage  are each co-located within authentication server . User Agent A in  represents SIP enabled lap top computer  of , User Agent B in  represents service capability server  of , and Authentication server in  represents authentication server  of . Once User Agent A has been authenticated, the media session is allowed to progress between User Agent A and User Agent B.","User Agent A sends an INVITE message to its designated proxy server (not shown) via message . The INVITE message, however, contains no authorization credentials, but is forwarded anyway to authentication server  via message . The proxy server submits a 100 TRYING message back to User Agent A via message  to indicate call set-up progression. API  executing on authentication server  detects that a SIP INVITE message is pending and, therefore, invokes HTTP\/DIGEST module  to support the authentication session. Since the INVITE request submitted by user agent A attempts to access a restricted domain within User Agent B, authentication server  provides a 401 UNAUTHORIZED challenge via message  to the proxy server. The proxy server then proxies the 401 UNAUTHORIZED challenge to User Agent A via message . Each 401 UNAUTHORIZED challenge is acknowledged via ACK messages  and .","The 401 UNAUTHORIZED challenge message from authentication server  contains the WWW-Authenticate header field as described in Table 3. User Agent B may have several protected domains and, therefore, the realm field specifies the challenge for the specific protected domain within User Agent B. The realm value cannot be excluded because the User Agent A's credentials are based on it. The optional domain field specifies each URI that is a party to the specific protected domain within User Agent B. The nonce value is important because it specifies the current challenge. The format of the nonce value is implementation dependant with the restriction that it should be unique. The nonce value is effective against replay attacks when used in conjunction with the stale parameter. In such an instance, if the nonce value is changed for each new request, then the stale parameter may be set to indicate a rejected message due to a stale nonce value. The algorithm parameter is an optional parameter which may be used to specify which algorithm is to be used for checksum calculations, e.g., MD5. The qop-options parameter is optional depending upon backward compatibility with older versions of Digest authentication. It should be used, however, because it",{"@attributes":{"id":"p-0063","num":"0062"},"tables":{"@attributes":{"id":"TABLE-US-00003","num":"00003"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"84pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"133pt","align":"left"}}],"thead":{"row":[{"entry":"TABLE 3"},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}},{"entry":["NAME OF PARAMETER","DESCRIPTION"]},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}}]},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["realm","String associated with the protection"]},{"entry":[{},"domain."]},{"entry":["domain (optional)","List of URIs that define the protection"]},{"entry":[{},"domain."]},{"entry":["nonce","Unique string that is created by the server"]},{"entry":[{},"for each 401 response."]},{"entry":["opaque (optional)","A string of data specified by the server"]},{"entry":[{},"which should be returned by the client"]},{"entry":[{},"unchanged."]},{"entry":["stale (optional)","A flag that specifies if the previous request"]},{"entry":[{},"from the client is rejected because the nonce"]},{"entry":[{},"was stale."]},{"entry":["algorithm (optional)","Specifies the algorithm to use for the"]},{"entry":[{},"checksum calculations."]},{"entry":["qop-options (optional)","Specifies the quality of protection that the"]},{"entry":[{},"server supports. It can either be \u201cauth-int\u201d"]},{"entry":[{},"or \u201cauth\u201d depending on the server's"]},{"entry":[{},"capabilities."]},{"entry":["auth-param (optional)","Future extensions."]},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}}]}}}},"br":{},"b":"134"},"When User Agent A receives the 401 UNAUTHORIZED challenge via message , it uses its password and some of the parameters contained within the WWW-Authenticate header field to calculate the checksum. The checksum is then included in the response portion of the Authorization header field as illustrated in Table 4. An exemplary",{"@attributes":{"id":"p-0065","num":"0064"},"tables":{"@attributes":{"id":"TABLE-US-00004","num":"00004"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"84pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"133pt","align":"left"}}],"thead":{"row":[{"entry":"TABLE 4"},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}},{"entry":["NAME OF PARAMETER","DESCRIPTION"]},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}}]},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["username","Client's username for specified realm."]},{"entry":["realm","String associated with the protection"]},{"entry":[{},"domain. Must contain the same value as the"]},{"entry":[{},"realm value of the 401 UNAUTHORIZED"]},{"entry":[{},"response from authentication server."]},{"entry":["nonce","Unique string that is created by the"]},{"entry":[{},"authentication server for each 401 response."]},{"entry":[{},"Should contain that same value as the nonce"]},{"entry":[{},"value in the 401 response from the"]},{"entry":[{},"authentication server."]},{"entry":["digest URI","The URI from the request URI of the"]},{"entry":[{},"request line."]},{"entry":["response","The calculated checksum that is"]},{"entry":[{},"hexadecimal encoded."]},{"entry":["algorithm (optional)","Specifies the algorithm to use for the"]},{"entry":[{},"checksum calculations."]},{"entry":["cnonce (optional)","If the qop-options in the received 401"]},{"entry":[{},"response is not empty, this value is used by"]},{"entry":[{},"the authentication server to authenticate"]},{"entry":[{},"itself to User Agent A by using the"]},{"entry":[{},"Authentication-Info header field. The value"]},{"entry":[{},"is generated by the client and it should be"]},{"entry":[{},"unique. If the qop-options is empty in the"]},{"entry":[{},"received 401 response, then this value must"]},{"entry":[{},"not be used."]},{"entry":["opaque (optional)","A string of data specified by the"]},{"entry":[{},"authentication server that should be returned"]},{"entry":[{},"by User Agent A unchanged."]},{"entry":["message-qop (optional)","Specifies the quality of protection that User"]},{"entry":[{},"Agent A has applied to the message. It"]},{"entry":[{},"must be equal to one of the qop-options"]},{"entry":[{},"values specified in the 401 response from"]},{"entry":[{},"the server."]},{"entry":["nonce count (optional)","Specifies the number of requests that have"]},{"entry":[{},"used the nonce specified in this header field."]},{"entry":["auth-param (optional)","Future extensions."]},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}}]}}}},"br":{},"b":"416"},{"@attributes":{"id":"p-0066","num":"0065"},"tables":{"@attributes":{"id":"TABLE-US-00005","num":"00005"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0","pgwide":"1"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"133pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"133pt","align":"left"}}],"thead":{"row":[{"entry":"TABLE 5"},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}},{"entry":["LINE","DESCRIPTION"]},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}}]},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["INVITE sip:userB@domain.com SIP\/2.0","Method = INVITE;"]},{"entry":[{},"SIP URI = sip:userB@domain.com"]},{"entry":[{},"SIP Version = 2.0"]},{"entry":["Via:SIP\/2.0\/TCP userA@domain.com","Originator = userA@domain.com at port"]},{"entry":["5060;","5060"]},{"entry":["branch = sipproxy.domain.com 5061.","Forwarding server = sipproxy.domain.com"]},{"entry":[{},"at port 5061"]},{"entry":["To: User B","Display Name = User B"]},{"entry":["<sip: userB@domain.com>","Destination URL = <userB@domain.com>"]},{"entry":["From: User A","Display Name = User A"]},{"entry":["<sip: userA@domain.com>","Origination URL = <userA@domain.com>"]},{"entry":["Call-ID: asd88asd77a@1.2.3.4","Unique Identifier = asd88asd77a"]},{"entry":[{},"Globally Unique IP Address = 1.2.3.4"]},{"entry":["CSeq: 1 INVITE","Command Sequence Number = 1"]},{"entry":[{},"Request Method = INVITE"]},{"entry":["Authorization: Digest username = \u201cUser A\u201d,","Authorization header field as defined in"]},{"entry":["realm = \u201cUser B\u201d, nonce =","Table 4"]},{"entry":"\u201ce288df84f1cec434lade6e5a359\u201d, digest"},{"entry":"URI = \u201csip:userB@domain.com\u201d, response ="},{"entry":"\u201c1d19580cd833064324a787ecc\u201d,"},{"entry":"algorithm = \u201c \u201d, cnonce = \u201c \u201d, opaque = \u201c \u201d,"},{"entry":"message-qop = \u201c \u201d, nonce count = \u201c \u201d, auth-"},{"entry":"param = \u201c \u201d"},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}}]}}}}},"The first line of the SIP message shown in Table 5 does not contain headers, but starts with the name of the method, e.g., INVITE, followed by the INVITE URI, e.g., \u201csip:userB@domain.com\u201d, which is the destination address of the message. The current version of SIP used then follows, e.g., version 2.0. The next line of Table 5 displays the Via header, which also indicates the SIP version and transport mode, e.g., TCP, followed by the host name, e.g., \u201cuserA@domain.com\u201d, of the originator of the message followed by the originator's port number, e.g., 5060. Each server that forwards the message enters its own forwarding address, e.g., \u201csipproxy.domain.com\u201d, to the header as well as its designated port number. Any responses as a result of the message then are able to follow the Via path, thus obviating the need for address resolution in the reverse direction.","Next, the To\/From headers display the display name, e.g., UserB\/UserA, and the URL of the destination\/origination enclosed in brackets < >. The Call-ID header contains a unique identifier for the current call. All subsequent requests and responses during the call will contain the same unique identifier. CSeq represents the command sequence number of the current command, followed by the request method, e.g., INVITE. Each successive request or response will have a higher CSeq number, where the called and calling parties each maintain there own CSeq counts. The Authorization header field follows (as defined in Table 4), where the response portion contains User A's response to the challenge presented by authentication server . The INVITE response message is proxied to authentication server  via message . Authentication server  then compares User A's response by calculating its own checksum using the parameters sent to User A in message . If the checksum value matches User A's response value, then User A is authenticated to access the protected domain within User B and access is granted by the 200 OK message sent via message .","Since authentication server  is trusted by User Agent B, the INVITE message illustrated in Table 5 is proxied to User Agent B via message  and is signaled as progressing through 100 TRYING message . User Agent B provides 180 RINGING message  to the proxy server, which is then proxied to User Agent A via message . After several handshaking messages occur (not shown), the authenticated media session commences as in message .","It should be noted that the authentication service that is provided in accordance with the present invention, contemplates both an apparatus that may reside within the proxy server, as part of the proxy server or collocated with the proxy server, and an apparatus included in the terminal, e.g. user agent A, for providing multiple authentication mechanisms that may be required in the terminal. When considering the authentication service provided in the terminal, it can be implemented as any other support module, such as the keyboard server that receives all the inputs from the keyboard and passes it to the application that is running. When any application running on the terminal requires calculation of some authentication procedure: it contacts the authentication server through the authentication server's API; the authentication server then calculates the necessary credentials; and then returns them to the application running on the terminal.","Similarly, the same authentication procedure applies when the authentication server is implemented as a module collocated with the proxy server, as depicted for example, by the message flow of . The proxy server receives a message, e.g. SIP or HTTP, from the terminal and then authenticates the message through the use of the authentication server. The proxy server passes the content included in the Authorization header to the authentication server. The authentication server then determines the authentication mechanism to be used for performing the authentication, calculates the security information, and passes it back to the proxy server via, for example, the WWW-Proxy Authorization header contained within the 401 Unauthorized response that will be sent to user agent A. The communication between the proxy server and the authentication server may be implemented using any specific API configured to transfer the messages, e.g., INVITE, 401 Unauthorized, etc., as indicated in . The communication may also be implemented using any proprietary communications channel that only includes the content of the headers in those messages. In any case, the authentication server's API should communicate with the proxy server via a TOE compliant secure channel.","The authentication service according to the present invention is offered either on the client side in response to the received authentication requests from the network elements, or on the network side. When the authentication service is operating on the network side, the authentication server provides the authentication service to a network element that is being accessed by a client, who must first be authenticated. In that case, the network element receives the attempt to access the network from another user supplying his own security credentials, and then forwards them to the authentication server for validation. The authentication server will insure that the security credentials provided are correct according to the specific authentication protocol selected for the process.","The message flow diagram of  illustrates SIP Digest authentication that is recognized by API . API  then invokes HTTP\/DIGEST  to support the authentication protocol as required by SIP enabled terminal User Agent A. It is apparent to one of ordinary skill in the art that the number of authentication mechanisms supported by API , key storage , and authentication module  is limited only by the number of authentication mechanisms executing within authentication module . Therefore, the authentication services offered by the present invention may be added as necessary to support the particular application.","In one embodiment according to the present invention, for example, a non-SIP scheme of transaction security is required at the transport layer. IPsec SA Manager  of authentication module  is invoked to interact with the corresponding IPsec layer of its communication peer. In such a case, API  recognizes that an IP-layer security scheme is desired, where encryption and signing of IP packets is implemented to support secure transmission across ALL-IP system  of .","In another embodiment according to the present invention, SIM authentication is supported by authentication server , whereby Virtual Private Network (VPN) certificates may be kept by key storage . In such an instance, the VPN certificates are used for WLAN authentication, whereby the 802.11 b standard provides link level authentication between stations. In addition, authentication server , in conjunction with the 802.11b authentication standards of the WLAN, supports shared key authentication with the Wired Equivalent Privacy (WEP) option.","In order to provide the necessary key, certificate and signature information to support the various authentication mechanisms, a local repository of SIM data is defined to exist in accordance with the present invention.  illustrates one embodiment of computer architecture  used to implement this repository of SIM data. SIM card  provides the capability to create crypto keys and enhance security for mobile transactions by providing subscriber authentication and encryption for mobile communications. By moving the storage of the subscription parameters away from the mobile terminal to SIM card , and eventually to SIM server , a robust, secure method of communication is facilitated.","Hardware (HW) driver  facilitates information transfer from SIM card  to APDU server  via serial link . The information is transferred via data records called Application Protocol Data Units (APDU), the format of which is illustrated in Table 6.",{"@attributes":{"id":"p-0078","num":"0077"},"tables":{"@attributes":{"id":"TABLE-US-00006","num":"00006"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"4"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"21pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"49pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"49pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"98pt","align":"left"}}],"thead":{"row":[{"entry":[{},"TABLE 6"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"3","align":"center","rowsep":"1"}}]},{"entry":[{},"CODE","NAME","DESCRIPTION"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"3","align":"center","rowsep":"1"}}]}]},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"CLA","Class","Class of instruction"]},{"entry":[{},"INS","Instruction","Instruction code"]},{"entry":[{},"P1","Parameter","Instruction Parameter #1"]},{"entry":[{},"P2","Parameter","Instruction Parameter #2"]},{"entry":[{},"P3","Parameter","Instruction Parameter #3"]},{"entry":[{},"Lc","Length","Number of bytes present in"]},{"entry":[{},{},{},"the data field of the"]},{"entry":[{},{},{},"command"]},{"entry":[{},"DATA","Data","String of bytes sent in the"]},{"entry":[{},{},{},"data field of the command"]},{"entry":[{},"Le","Length","Maximum number of bytes"]},{"entry":[{},{},{},"expected in the data field of"]},{"entry":[{},{},{},"the response to the"]},{"entry":[{},{},{},"command"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"3","align":"center","rowsep":"1"}}]}]}}}},"br":{}},"Links  and  represent APDU flow via Operating System (OS) messaging between HW driver  and APDU server . Connection manager  connects to connectivity layer  via path  and encapsulates the APDU message received from SIM card  into an ISI message. Once encapsulated, the ISI message may transfer to connection manager  of SIM server  via path . The data portion of the APDU encapsulated within the ISI message may then be stored within SIM server  for subsequent access by applications -. Applications - may represent any application executing on authentication server  of , for example, that requires access to SIM data in support of authentication module  of .","A generic authentication method is thus implemented by the present invention in which any number of protocols may complete an authentication session no matter what authentication mechanism is being employed by the protocol. In particular,  illustrates an exemplary flow diagram of such a generic authentication method. Configuration of an authentication system as in step  comprises as a first step, loading SIM data into, for example, SIM server  of  via APDU server . As a second step, authentication modules such as those illustrated in authentication module  of , e.g., EAP , IMS\/AKA , HTTP\/Digest , Liberty Manager , and IPsec SA Manager , are installed on SIM server  and brought on-line. As a third step, the authentication mechanisms of authentication module  are registered so that the security algorithms, protocols, and credentials that are required for performing each authentication procedure may be known by prospective clients of the authentication system.","In operation according to the principles of the present invention, an authentication request is received in step . The authentication request may use any IP based authentication protocol previously registered in step . The receiving API, e.g. API  of , determines the authentication mechanism required by the authentication request as depicted at block , and invokes the correct authentication mechanism to be used, e.g., modules - of . If authentication certificates, keys or signatures are required, as in step , in order to present a challenge to the request as shown at block , the necessary authentication data is retrieved  from, for example, SIM server  of . Once the response to the challenge is received in step , it is compared to an expected response. If the received response is equal to the expected response computed by the authentication mechanism, then the YES path from step  is taken, whereby the session being authenticated is established . Otherwise, the session is terminated as in step .","Using the description provided herein, the invention may be implemented as a machine, process, or article of manufacture by using standard programming and\/or engineering techniques to produce programming software, firmware, hardware or any combination thereof. Any resulting program(s), having computer-readable program code, may be embodied on one or more computer-usable media, such as disks, optical disks, removable memory devices, semiconductor memories such as RAM, ROM, PROMS, etc. Articles of manufacture encompassing code to carry out functions associated with the present invention are intended to encompass a computer program that exists permanently or temporarily on any computer-usable medium or in any transmitting medium which transmits such a program. Transmitting mediums include, but are not limited to, transmissions via wireless\/radio wave communication networks, the Internet, intranets, telephone\/modem-based network communication, hard-wired\/cabled communication network, satellite communication, and other stationary or mobile network systems\/communication links. From the description provided herein, those skilled in the art will be readily able to combine software created as described with appropriate general purpose or special purpose computer hardware to create an authentication system, apparatus, and method in accordance with the present invention.","The network servers or other systems for providing authentication functions in connection with the present invention may be any type of computing device capable of processing and communicating digital information. The network servers utilize computing systems to control and manage the authentication activity. An example of a representative computing system capable of carrying out operations in accordance with the invention is illustrated in . Hardware, firmware, software or a combination thereof may be used to perform the various authentication functions and operations described herein. The computing structure  of  is an example computing structure that can be used in connection with such an authentication system.","The example computing arrangement  suitable for performing the authentication activity in accordance with the present invention includes authentication server , which includes a central processor (CPU)  coupled to random access memory (RAM)  and read-only memory (ROM) . The ROM  may also be other types of storage media to store programs, such as programmable ROM (PROM), erasable PROM (EPROM), etc. The processor  may communicate with other internal and external components through input\/output (I\/O) circuitry  and bussing , to provide control signals and the like. For example, a SIP INVITE message such as that exemplified in Table 5 may be received by authentication server , which invokes authentication module HTTP\/Digest  of , to authenticate the Authorization header of the INVITE message. External data storage devices, such as SIM servers, may be coupled to I\/O circuitry  to facilitate authentication functions according to the present invention. Alternatively, such databases may be locally stored in the storage\/memory of the server , or otherwise accessible via a local network or networks having a more extensive reach such as the Internet . The processor  carries out a variety of functions as is known in the art, as dictated by software and\/or firmware instructions.","Authentication server  may also include one or more data storage devices, including hard and floppy disk drives , CD-ROM drives , and other hardware capable of reading and\/or storing information such as DVD, etc. In one embodiment, software for carrying out the authentication operations in accordance with the present invention may be stored and distributed on a CD-ROM , diskette  or other form of media capable of portably storing information. These storage media may be inserted into, and read by, devices such as the CD-ROM drive , the disk drive , etc. The software may also be transmitted to authentication server  via data signals, such as being downloaded electronically via a network, such as the Internet. Authentication server  is coupled to a display , which may be any type of known display or presentation screen, such as LCD displays, plasma display, cathode ray tubes (CRT), etc. A user input interface  is provided, including one or more user interface mechanisms such as a mouse, keyboard, microphone, touch pad, touch screen, voice-recognition system, etc.","The authentication server  may be coupled to other computing devices, such as the landline and\/or wireless terminals via a network. The server may be part of a larger network configuration as in a global area network (GAN) such as the Internet , which allows ultimate connection to the various landline and\/or mobile client\/watcher devices.","The foregoing description of the various embodiments of the invention has been presented for the purposes of illustration and description. It is not intended to be exhaustive or to limit the invention to the precise form disclosed. Many modifications and variations are possible in light of the above teaching. Thus, it is intended that the scope of the invention be limited not with this detailed description, but rather determined from the claims appended hereto."],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"BRIEF DESCRIPTION OF THE DRAWINGS","p":["The invention is described in connection with the embodiments illustrated in the following diagrams.",{"@attributes":{"id":"p-0017","num":"0016"},"figref":"FIG. 1"},{"@attributes":{"id":"p-0018","num":"0017"},"figref":["FIG. 2","FIG. 1"]},{"@attributes":{"id":"p-0019","num":"0018"},"figref":"FIG. 3"},{"@attributes":{"id":"p-0020","num":"0019"},"figref":"FIG. 4"},{"@attributes":{"id":"p-0021","num":"0020"},"figref":"FIG. 5"},{"@attributes":{"id":"p-0022","num":"0021"},"figref":"FIG. 6"},{"@attributes":{"id":"p-0023","num":"0022"},"figref":"FIG. 7"}]},"DETDESC":[{},{}]}
