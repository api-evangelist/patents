---
title: Method for handling requests in a storage system and a storage node for a storage system
abstract: According to an embodiment there is provided a method for handling requests in a storage system including a plurality of storage nodes connected to each other via a communications network. A first storage node of the plurality of storage nodes may store a reference to a set of at least one collection object stored in the storage system. Each collection object of the set may include at least one of a reference to another collection object stored in the storage system and a reference to at least one data file stored in the storage system. The method may include receiving a first request at the first storage node. The first storage node, for each collection object of the set, may send a second request to a storage node storing the collection object. According to a second aspect there is also provided a storage node.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09626378&OS=09626378&RS=09626378
owner: COMPUVERDE AB
number: 09626378
owner_city: 
owner_country: SE
publication_date: 20110902
---

{"@attributes":{"id":"description"},"BRFSUM":[{},{}],"heading":["CROSS-REFERENCE TO RELATED APPLICATIONS","TECHNICAL FIELD","BACKGROUND","SUMMARY OF THE INVENTION","DETAILED DESCRIPTION"],"p":["This application includes subject matter that may be related to subject matter included in the following applications: U.S. patent application Ser. No. 13\/224,393 entitled \u201cA Method And Device For Maintaining Data In A Data Storage System Comprising A Plurality Of Data Storage Nodes,\u201d filed Sep. 2, 2011; U.S. patent application Ser. No. 13\/224,404 entitled \u201cMethod And Device For Writing Data To A Data Storage System Comprising A Plurality Of Data Storage Nodes,\u201d filed Sep. 2, 2011; U.S. patent application Ser. No. 13\/224,415 entitled \u201cMethod For Data Maintenance,\u201d filed Sep. 2, 2011; U.S. patent application Ser. No. 13\/224,433 entitled \u201cMethod For Data Retrieval From A Distributed Data Storage System,\u201d filed Sep. 2, 2011; and U.S. patent application Ser. No. 13\/224,446 entitled \u201cMethod For Updating Data In A Distributed Data Storage System,\u201d filed Sep. 2, 2011.","The present inventive concept relates to a method for handling requests in a storage system and a storage node for a storage system.","Both companies and personal users rely increasingly on off-site storage systems for storing important data such as databases, media files, digital photos, document files, backups etc. Such storage systems may include a plurality of storage nodes connected to each other via a communication network, such as a Local Area Network, a Wide Area Network or the Internet, and the data may be distributed between the storage nodes. In a variety of applications there exists a need to process requests in the storage system relating to stored data, e.g. a request for information regarding stored data, a request to perform file operations on stored data etc. There is thus a need for methods of handling requests in the storage system.","A method and a storage node for efficiently handling requests in a storage system comprising a plurality of storage nodes are disclosed.","For example, a method for handling requests in a storage system is disclosed. The storage system may include a plurality of storage nodes connected to each other via a communications network. A first storage node of said plurality of storage nodes may store a reference to a set of at least one collection object stored in the storage system. Each collection object of the set may include at least one of a reference to another collection object stored in the storage system. Each collection object may also include a reference to at least one data file, other than a collection object, stored in the storage system. The method for handling the request may include receiving a first request at the first storage node. The first storage node, for each collection object of said set, may send a second request to a storage node storing said collection object of said set.","A first request may be received by the first storage node which in turn may handle the first request and send a further second request to any number of further storage nodes which may store data relevant for the request. The processing resulting from the first request may be distributed to the relevant storage nodes in a recursive manner. The workload and processing performed by the originator of the first request and the first storage node may thereby be advantageously reduced.","For example, by utilizing the collection objects the data may be organized in a hierarchical structure or a directory tree wherein a collection object referred to by the first storage node may represent a subdirectory or subfolder in relation to the directory or folder represented by the first storage node. The first storage node may for example represent the root of the directory tree and include references to the subdirectories of the root directory.","Requests may be handled even in storage systems where no centralized register of the stored data and the storage structure is maintained.","For each collection object of the set, the second request may be sent in response to receiving the first request at the first storage node.","According to one embodiment the method further includes the first storage node transmitting a multicast message requesting that storage nodes storing a collection object of said set to respond. The first storage node may receive a response from another storage node that received the multicast message. The first storage node may send a second request to the responding storage node. The first storage node may thus determine which other storage nodes to send the second request to even if the first storage node, when receiving the first request, was unaware of other storage node ins the storage system stored the referenced collection object. For the purpose of handling requests, each storage node may discover storage nodes that store a referenced collection object.","According to one embodiment the first storage node may store, for a collection object of said set, an indication which indicates the identity of another storage node that stores said collection object. The method of handling requests may also include the first storage node sending the second request to a storage node based on the indication. The storage node may thus, without any additional preceding communications, send the second request to a correct storage node. This embodiment may be combined with the preceding embodiment wherein the first storage node may perform the method of the preceding embodiment for a first collection object, for which the first storage node has no a prior knowledge of a storage location, and use the indication for a second collection object for which the first storage node stores an indication of a storage location.","According to one embodiment a collection object of said set is stored at least two storage nodes of the storage system, the method further comprising: the first storage node sending the second request to one of said at least two storage nodes. A collection object may thus be stored in a redundant manner in the storage system wherein the data security may be improved. Moreover, the first storage node may send the second request to only one of the at least two storage nodes. This may be advantageous in that redundant and identical responses to the second request from the second and third storage node may be avoided.","In another example, the method further includes the first storage node transmitting a multicast message requesting storage nodes storing the redundantly stored collection object to respond. The first storage node may receive a response from at least two storage nodes. The first storage node may send the second request to one of said at least two storage nodes. The first storage node may determine which further storage nodes to send the second request to even if the first storage node, when receiving the first request, is unaware of at which storage nodes the redundantly stored collection object is stored. Moreover, sending requests to multiple storage nodes storing copies of the same data may be avoided. The number of instances of the second request may hence be reduced wherein, in turn, the load on the storage system and the communications network may be reduced.","In another example, the first storage node may store an indication of which at least two storage nodes store the redundantly stored collection object. The first storage node may send the second request to one of the at least two storage nodes using the indication. The first storage node may thus, without any additional preceding communications, send the second request to one of the at least two storage nodes.","According to one embodiment a collection object of said set is stored on a second storage node of the storage system. The collection object may include a reference to an additional set of at least one collection object stored in the storage system. The second storage node, for each collection object of the additional set, may send a third request to a storage node storing said collection object of the additional set. A third request may thus be sent by the second storage node to further storage nodes storing referenced collection objects. The third request may be sent in response to the second storage node receiving the second request. The request may thus be distributed in a recursive manner in the storage system to storage nodes storing collection objects representing different levels of the directory tree. The third request may be based on the second request. Each collection object of the additional set may include at least one of a reference to another collection object stored in the storage system and a reference to at least one data file, other than a collection object, stored in the storage system.","According to another example, the first storage node may process the first request. For example, the first storage node may determine a first result based on the processing. The first storage node may sending the first result to an originator of the first request. The originator of the first request may thus receive a result of the first request.","According to one embodiment the first storage node may store a reference to a set of at least one data file, other than a collection object, stored in the storage system. The processing of the first request at the storage node may include processing the data files referenced in the collection objects in accordance with the first request.","According to one embodiment, each storage node receiving the second request may process the second request and determine a second result based on the processing. The node may then send the second result, for example to the first storage node. A result may thus be determined also at storage nodes receiving the second request. For example, the storage node be considered to store collection objects representing lower levels of the directory tree. The processing of the second request may include processing data files referenced in the collection object at the storage node in accordance with the second request.","According to one embodiment the second result is sent to the first storage node. Thereby the first storage node may ascertain that the second request has been received by other storage nodes. Moreover the first storage node may take the second result into account when determining the first result to be sent to the originator of the query.","According to one embodiment the method further includes the first storage node, in response to receiving the second result from a recipient of the second request, determining the first result based on the processing of the first request and the second result. The first storage node may also send the first result to the originator of the first request. The first result may include a combination of the result of the processing of the first request and the second result. The combination may be an aggregate of the results. The combination may be a concatenation of the results. The combination may be a sum of the results.","According to one embodiment the second result is sent to an originator of the first request. The second result determined at a storage node may thus be sent directly to the originator of the first request. Therefore the party interested in the result of the first request, e.g., the originator of the first request, may receive the result. Storage nodes, for example the first storage node, may not handle results from each of the plurality of storage nodes.","According to one embodiment the first request indicates a request for information regarding data stored in the storage system. The first request may for example indicate a request for a number of one or more data files or collection objects of a certain type, including a certain attribute, name, content or time stamp. In another example, the first request may indicate a request for an operation to be performed on data stored in the storage system.","According to one embodiment the second request is based on the first request. The second request may thus pertain to a same or corresponding request as the first request albeit optionally adapted for the recipient of the second request. Analogously the third request may be based on the second request.","The second request may be identical to the first request. Additionally, the third request may be identical to the second request. This makes it possible to implement the method in a true recursive fashion wherein the amount of processing needed to be performed by each storage node may be reduced.","According to one embodiment the first request pertains to data referenced at the first storage node and the second request pertains to data referenced in a collection object stored at a storage node receiving the second request. Analogously the third request sent by the above-mentioned second storage node may pertain to data referenced in a collection object stored at a storage node receiving the third request.","According to an embodiment, there is provided a storage node for a storage system comprising a plurality of storage nodes connected to each other via a communications network. A tangible storage medium storing a first collection object including a reference to a second collection object stored on a second storage node of the storage system may be include in the storage system. A third collection object stored on a third storage node of the storage system may also be included. A receiver configured to receive a first request from a fourth storage node of the storage system, the first request pertaining to data referenced in the first collection object may be included. A transmitter configured to send a second request to the second storage node and a third request to the third storage node may be included. The second and third requests may be based on the first request.","The second aspect may generally present the same or corresponding advantages as the first aspect.","Detailed embodiments of aspects of the present inventive concept will now be described with reference to the drawings. The present disclosure is related to a distributed data storage system comprising a plurality of storage nodes. The structure of the system and the context in which it is used is outlined in .","A user computer  may access, for example via the Internet , an application  running on a server . The user context, as illustrated here, may therefore be a regular client-server configuration. However, it should be noted that the data storage system to be disclosed may be useful also in other configurations.","In the illustrated case, two applications ,  run on the server . Of course however, this number of applications may be different. Each application may have an API (Application Programming Interface)  which provides an interface in relation to the distributed data storage system  and supports requests, typically write and read requests, from the applications running on the server . Data, such as the collection objects  and the data files  described below, may be read from and written to the storage system using the methods described in detail in U.S. patent application Ser. No. 13\/125,524, filed Apr. 21, 2011, the contents of which are hereby incorporated by reference herein. Such methods of reading and writing of data will therefore not be further elaborated upon herein. From an application's point of view, reading or writing information from\/to the data storage system  may appear to be done transparently, for instance in a manner similar to a file server or a hard drive. The server  may be considered to form part of the distributed storage system  or it may be considered to be a party external from the distributed storage system .","Each API  may communicate with storage nodes  in the data storage system , and the storage nodes may communicate with each other. Each storage node includes a network interface card (NIC)  having receiver and transmitter functionality wherein a storage node may receive and send data to\/from other storage nodes and the server. These communications may be based on TCP (Transmission Control Protocol) and UDP (User Datagram Protocol). These concepts are well known to the skilled person, and are not explained further herein.","The present disclosure relates to methods which may be carried out in the server  and in the storage nodes . Those methods will primarily be embodied as software\/hardware combinations, which for example may be implementations which are run on the server  and the storage nodes , respectively.","Although in  the server  is illustrated as a party which is separate from the storage nodes  it should be noted that the server  very well may be a storage node including server functionality.","The storage node  may typically be embodied by a file server which is provided with a number of functional blocks. The storage node may thus comprise a tangible storage medium , which typically comprises of a number of internal (e.g. connected via an IDE or a SATA interface) or external hard drives (e.g. connected via a USB or a Firewire interface), optionally configured as a RAID (Redundant Array of Independent Disk) system. Other types of storage media are however conceivable as well.","Each storage node  may include a processing entity  for controlling the storage node in accordance with the methods. The processing entity  may for example be a central processing unit configured to execute software instructions implementing the methods.","Each storage node  may contain a node list including the IP addresses of all or some storage nodes in its set or group of storage nodes. The number of storage nodes in a group may vary from a few to hundreds or thousands of storage nodes.","The tangible storage medium  may store one or more computer-readable collection objects  including a set of computer-readable references. The tangible storage medium may not be a radio signal. A collection object  may include a reference to data of the storage system , the data including at least one of a set of one or more collection objects  and a set of one or more data files , other than a collection object. A reference may include a pointer (e.g. a memory address) to a storage location at a storage node . A reference may include an identifier of the collection object or data file referred to.","A collection object  may be embodied as a directory in a file system of a storage node. Data files  referenced in the collection object  may be data files stored in the directory. Collection objects  referenced in the collection object may represent subdirectories stored in the directory.","A collection object  may also be embodied as a file having a predetermined format. The file may be a special file in the file system of the storage medium . Alternatively, the file may be a data file in the file system of the storage medium . Such a file may be readable using the same routines of the file system as the data files . For example the file may be a plain text file including references to collection objects  and\/or data files .",{"@attributes":{"id":"p-0047","num":"0046"},"figref":"FIG. 2","b":["19","19","20","20","20","19","20","19","15","19","19","20"],"i":["a ","a ","a","a ","a ","a","a ","a ","a","a ","a. "]},"The collection object includes a field with the identifier of the collection object . The collection object may thus include a reference to the collection object . The collection object may be stored on the same storage node as the collection object or on another storage node than the collection object . The storage system may use the identifier in the field to locate and access the collection object as will be described below.","Similarly to the collection object , the collection object includes a field with the identifier of the collection object . The collection object includes a field with the identifier of the data file ","By appointing the collection object as a root collection object, the collection object may represent a root directory of the storage system. Analogously the collection object may represent a subdirectory of the root directory . The collection object may represent a subdirectory of the subdirectory . The data file may represent a data file stored in the subdirectory . The collection objects -may thus define a hierarchical storage structure. The structure may be referred to as a directory tree.","The collection objects  may be files, and the data may be stored in a flat storage structure, e.g. without any subdirectories or within a single directory, wherein a virtual hierarchical storage structure conveniently may be created by adding collection objects  including references to other collection objects  and\/or data files . Each such set of collection objects may define a separate storage structure. Some of the data files may be referred to in more than one of the sets. It thus allows the same data to be organized in several different virtual hierarchical storage structures by using different sets of collection objects.","According to one example, multicast communication may be used to communicate simultaneously with a plurality of storage nodes . By a multicast or IP multicast is here meant a point-to-multipoint communication which is accomplished by sending a message to an IP address which is reserved for multicast applications. For example, a message may be sent to such an IP address (e.g. 244.0.0.1), and a number of recipient parties are registered as subscribers to that IP address. Each of the recipient parties may have its own IP address. When a switch in the network receives the message directed to 244.0.0.1, the switch may forward the message to the IP addresses of each party registered as a subscriber. In principle, only one party may be registered as a subscriber to a multicast address, in which case a point-to-point, communication is achieved. However, in the context of this disclosure, such a communication may nevertheless be considered a multicast communication since a multicast scheme is employed.","According to the present embodiment, unicast communication refers to a communication with a single recipient. A unicast communication initiated by a party of the network may be directed to a single specific recipient.","With reference to -, a method for handling requests in the storage system  may comprise the storage node receiving a request (box ). The storage node may receive the request from the server . The request may be generated using the API  following a request from the user computer . The request may alternatively be received from another storage node of the storage system . The request will in the following be referred to as the first request.","As illustrated by the dashed arrows the storage node includes a collection object referring to data files stored on the storage node and data files stored on the storage node . The collection object may further include a reference to a collection object stored on the storage node . For the purpose of the first request, the storage node may be considered as a root storage node wherein the collection object may represent the root directory. According to the illustrated embodiment the first request may ask for the number of text files stored in the directory tree having a root defined by the collection object of the storage node . It should be noted that the storage node may store additional collection objects defining other hierarchical storage structures which need not be considered when processing the request. The first request may indicate (e.g. using by the identity of the collection object) which collection object the request pertains to.","The storage node may generate a second request based on the first request (box ). As illustrated in the example of the second request may be identical to the first request. In other words the second request may pertain to a same request as the first request, e.g., the request may ask for the number of text files stored in the directory tree defined by the collection object of the receiving storage node.","The storage node may analyze the collection object and may determine that it includes a reference to another collection object. The storage node may determine (box ) the storage node storing the referenced collection object. The determination may proceed as described below. The storage node may send (box ) the second request (or in other words an instance of the second request) to the determined storage node . The second request may indicate (e.g. using by the identity of the collection object) which collection object the request pertains to.","The storage node may also send the second request (or in other words an instance of the second request) to the storage node wherein the storage node may process the second request. Alternatively, the storage node may, based on the references comprised in the collection object stored at the storage node , determine the number of text files stored on the storage node . The collection object stored at the storage node may for example indicate the type of each data file referenced in the collection object.","The storage node may process the first request (box ) and may determine the number of text files stored at the storage node (and optionally also the storage node ) by analyzing the collection object and the types of the referenced data files. In the following example, for purposes of illustration the storage node may store 10 text files and that the storage node may store 15 text files.","The storage node may receive the second request. Analogously to the storage node , the storage node may analyze the collection object stored at the storage node and may determine that it includes references to a collection object stored on the storage node and a collection object stored on the storage node . The storage node may generate a third request based on the second request. As illustrated in the example of the third request may be identical to the second request. In other words the third request may pertain to a same request as the second request, e.g. the request may ask for the number of text files stored in the directory tree defined by the collection object of the receiving storage node. The storage node may send (an instance of) the third request to each of the storage node and . The third request may indicate (e.g. by using the identity of the collection object) which collection object the request pertains to. The instance of the third request sent to the storage node may indicate that it pertains to the collection object of the storage node . The instance of the third request sent to the storage node may indicate that it pertains to the collection object of the storage node ","The storage node may process the second request and may determine the number of text files stored at the storage node , for example by analyzing the collection object stored at the storage node and the types of the referenced data files. For purposes of illustration, it may be assumed that the collection object at the storage node does not refer to any text files.","At the storage nodes and the method may proceed in a manner similar to the operations at the storage node . However, in an example the collection object stored at the storage node and the collection object stored at the storage node may not include a reference to a collection object. Hence, the storage nodes and may not generate and send any requests to any further storage nodes. The collection objects of the storage nodes and may thus correspond to subdirectories not including any further subdirectories. The storage nodes representing the lowest levels of the hierarchical storage structure may have thus been reached. In another example storage nodes and may continue the recursive signaling, for example if they include a reference to a collection object including further subdirectories.","The storage node may process the third request and may determine the number of text files stored at the storage node , for example by analyzing the collection object stored at the storage node and the types of the referenced data files. A similar processing may be performed at the storage node . For purposes of illustration, it may be assumed that the collection objects of the storage node and refers to 35 text files and 120 text files, respectively.","With reference to , in response to determining the result of the processing of the third request, the storage node may send the result to the storage node which may be the originator of the third request. Analogously the storage node may send its result to the storage node ","In response to receiving the result from the storage node and the storage node , the storage node may determine a result by adding the received results to the number of text files stored at the storage node as determined above. The storage node may sends the determined result to the storage node which may be the originator of the second request.","In response to receiving the result from the storage node (box ) the storage node may determine a result by adding the received result to the number of text files stored at the storage node (and optionally the storage node ) as determined above. The storage node may then send the determined result to the originator of the first request (box ). The result determined at the storage node may be the number of text files stored in the hierarchical storage structure formed by the collection objects of the storage nodes -","In the above, the result determined at each storage node  may be sent to the originator of a request received at a respective storage node . According to another example, the result may be sent directly from a storage node -to the storage node receiving the first request. This may result in a quicker communication of the results. Each storage node -may for example include an indication of which storage node is the root storage node (e.g. the storage node ). The indication may include the IP-address of the root storage node. According to a further example embodiment the result may be sent directly to the originator of the first request, e.g. the server . Each storage node  may for example include an indication of which network entity is the server . The indication may include the IP-address of the server .","In the following, methods of a storage node  for determining a recipient of a request will be described. The methods may be described with reference to storage node but they are equally applicable to the further storage nodes  of the storage system.","In response to determining that the collection object of the storage node includes a reference to another collection object the storage node may transmit a multicast message to the other storage nodes -, for example requesting a storage node storing the referenced collection object to respond. The multicast message may for example include the identifier of the desired collection object. Each storage node , in response to receiving the multicast message, may scan its storage medium  after a collection object having said identifier. If found the storage node (in the storage node ) may indicate to the storage node that it stores the referenced collection object. The indication may be sent using unicast communication. The storage node may then send the second request to the storage node . The second request may be sent using unicast communication.","According to an alternative method the storage node may store an indication of a storage node storing the referenced collection object. For example the collection object of the storage node may in addition to the identifier store the IP-address of the storage node storing the referenced collection object. The storage node may thus send the second request to the storage node in accordance with the indication without any preceding multicast message. The second request may be sent using unicast communication.","For data security reasons, some or all data stored in the storage system  (i.e. the collection objects  and the data files ) may be stored redundantly in the storage system. Copies or instances of each collection object  and data file  may be stored at two or more storage nodes . Each instance of a collection object  or data file  may be associated with the same identifier. In such a case, a redundantly stored collection object may be retrieved from either one of or all of the storage nodes storing the collection object.","For purposes of illustration, it may be assumed that the collection object referenced in the collection object of the storage node may be stored at both the storage node and . The storage node may then determine the recipient for the second request as follows. The storage node may send a multicast message to the other storage nodes -requesting a storage node storing the referenced collection object to respond. The multicast message may for example include the identifier of the desired collection object. Each storage node -, in response to receiving the multicast message, may scan its storage medium  after a collection object having said identifier. Each storage node storing a collection object associated with said identifier (e.g., storage nodes and ) may indicate to the storage node that it stores the indicated collection object. The indication may be sent using unicast communication. The storage node may then send the second request to one of the storage nodes and . The second request may be sent using unicast communication. The storage node may have access to load information for the storage nodes and or information regarding a geographical location of the storage nodes and . The storage node may then select the recipient based on the load information and\/or location information. For example the storage node having the lowest load or the storage node being closest to the storage node may be selected as the recipient for the second request. The information may for example be included in the indication from the storage nodes and ","According to another example method the storage node may store an indication of the storage nodes storing the referenced collection object. For example the collection object of the storage node may in addition to the identifier store the IP-address of the storage nodes and storing the referenced collection object. The storage node may select one of the storage nodes and as recipient for the second request and may send the second request in accordance with the indication. As described above the storage node may have access to load information or geographical location information to use as a basis for the selection. The geographical location information may for example be stored at the storage node . The load information may for example be previously received from the storage nodes and . Alternatively the server  may regularly monitor the loads of the storage nodes -and distribute the load information to the storage nodes -","A request received at a storage node  may, as in the illustrated embodiment, ask for the number of text files stored in the storage system . It should be noted however that this request is exemplary and constitutes an example and that many other types of requests are contemplated. By way of example the request may ask a storage node to provide one or more of a number or files or a list of files of a certain type; a number or a list of collection objects; a number or a list of files and\/or collection objects including a certain phrase; a number or a list of files including a certain data set; and\/or a number or a list of files including a certain file attribute (e.g. read-only, read-write, permissions, hidden, time stamps). Alternatively or additionally the request may ask a storage node to perform an operation on the stored data such as change a file attribute (e.g. read-only, read-write, permissions, hidden, time stamps); change a file name; alter a file header; and\/or to add or delete a file or collection object to\/from each directory and subdirectory etc. The request may ask a storage node to perform such an operation on all stored data or to a subset of the stored data (e.g. data of a certain type, data files having a certain file attribute, files having a certain time stamp etc.).","The result determined at a storage node may, as in the illustrated embodiment, include a sum of the results received at the storage node. More generally, the result determined at a storage node may include an aggregate of the results received at the storage node. With reference to the result determined by a storage node may for example indicate for each collection object, the number of text files contained therein. In case the information asked for is a list, the result provided by a storage node may be a concatenation of the lists received as results at the storage node and the list(s) resulting from the analysis at the storage node. In case the query asks the storage node to perform an operation on the stored data, the result provided by a storage node may be a number of modified or created files, a value indicating success (e.g. 0) or failure (e.g. 1), or a simply a default value.","In the embodiment of and the first, second and third requests were identical in that they pertain to a same request. A request sent by a storage node may be different than a request received by the storage node. For example the first request may include an indication of the number of levels of the directory tree that is to be visited. The storage node may then generate a second request wherein the number of further levels that is to be visited is reduced by one. Similarly the storage node may generate a third request wherein the number of further levels that is to be visited is reduced by one. A storage node receiving a request indicating that no further levels are to be visited may then not generate a further request but simply process the received request and send the result in accordance with any of the alternatives described above. The depth of the recursion may thus be controlled.","In the above the invention has mainly been described with reference to a limited number of examples. However, as is readily appreciated by a person skilled in the art, other examples than the ones disclosed above are equally possible within the scope of the invention, as defined by the appended claims."],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":["BRIEF DESCRIPTION OF THE DRAWINGS","BRIEF DESCRIPTION OF THE DRAWINGS"],"p":["In addition to the host list, each storage node further contains a node list including the IP addresses of all or some storage nodes in its set or group of storage nodes. The number of storage nodes in a group may vary from a few to hundreds of storage nodes. The node list may further have a version number.","The above, as well as additional objects, features and advantages of the present inventive concept, will be better understood through the following illustrative and non-limiting detailed description of preferred embodiments of the present inventive concept, with reference to the appended drawings, where like reference numerals will be used for like elements, wherein:",{"@attributes":{"id":"p-0031","num":"0030"},"figref":"FIG. 1"},{"@attributes":{"id":"p-0032","num":"0031"},"figref":"FIG. 2"},{"@attributes":{"id":"p-0033","num":"0032"},"figref":"FIG. 3"},{"@attributes":{"id":"p-0034","num":"0033"},"figref":"FIGS. 4and 4"}]},"DETDESC":[{},{}]}
