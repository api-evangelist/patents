---
title: Solution-specific business object view
abstract: A computer-implemented system may include one or more storage devices storing first metadata defining an instance of a first metaobject, second metadata defining an instance of a solution supplement metaobject, wherein the second metadata comprises annotations to the first metadata, and wherein the first metaobject and the solution supplement metaobject are instances of a meta-metaobject. Also stored is executable program code of a service to determine merged metadata based on the first metadata and the annotations to the first metadata. A processor is included to execute the executable program code.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08370400&OS=08370400&RS=08370400
owner: SAP AG
number: 08370400
owner_city: Walldorf
owner_country: DE
publication_date: 20100719
---

{"@attributes":{"id":"description"},"BRFSUM":[{},{}],"heading":["FIELD","BACKGROUND","DETAILED DESCRIPTION"],"p":["Some embodiments relate to enterprise services based on business objects and supported by an application platform. More specifically, some embodiments relate to solution-specific views on business objects to facilitate development of business applications using an application platform.","A business object is a software model representing real-world items used during the transaction of business. For example, a business object may represent a business document such as a sales order, a purchase order, or an invoice. A business object may also represent master data objects such as a product, a business partner, or a piece of equipment. Particular ones of such master data objects (e.g., SalesOrder SO435539, ACME corporation) are represented by instances of their representing business object, or business object instances.","A business object may specify business logic and\/or data having any suitable structure. The structure of a business object may be determined based on the requirements of a business scenario in which the business object is to be deployed. A business application for a particular business scenario may require many business objects, where the structure of each business object has been determined based on the requirements of the particular business scenario.","A business process platform, or application platform, typically exposes a complex business object model. The business object model describes many business objects, their relations and dependencies. The business object model may be used by several business applications, or solutions, to access data and logic of business object instances. The applications, in turn, provide such data to end-users through user interfaces, reports, etc.","An application platform is typically intended as a basis for different business solutions applicable for small-, medium-, and large-sized companies. In order to provide all the business functionality required by these target groups, the business objects of the platform's business object model may contain more functionality than is required by a business solution sold to small- and medium-sized companies.","Moreover, the business objects of a typical application platform are modeled and implemented in a strictly normalized way focused on service provisioning. These normalized business objects are typically not designed in order to facilitate their manipulation and use by a customer. A business object model also contains many entities which are for internal use by the platform developer.","For at least the foregoing reasons, it is not desirable to directly expose a customer to a business object model of an application platform. The complexity of the business object model may provide flexibility in developing applications, but a customer is primarily focused on use-case specific views, including joined data of other business objects, which may be used by the customer to develop user interfaces, forms, agents, or analytics.",{"@attributes":{"id":"p-0021","num":"0020"},"figref":["FIG. 1","FIG. 1"],"b":["100","100"]},"System  includes metadata repository (MDRS) , which in turn includes data store  and MDRS services . MDRS  may be implemented in an application platform as is known in the art. Data store  includes metadata of various metadata models . For purposes of the foregoing description, these metadata models  will be referred to as metaobjects  which are defined by metadata.","Metaobjects  may include generic models of a BI view, a floorplan (i.e., a user interface layout), a business object, user interface text, a solution supplement, and a solution, but embodiments are not limited thereto. An instance of a business object metaobject, for example, may comprise a SalesOrder object model or an Organization object model. The metaobjects may be embodied in any type of data structure, including but not limited to eXtensible Markup Language files.","As mentioned above, metadata defining the specific metaobjects are stored in data store . As in the conventional storage of object instance data, the metadata defining the specific metaobjects may be stored in database tables and\/or any other suitable format.","Each of metaobjects  may comprise an instance of a same meta-metadata model (or meta-metaobject). The meta-metaobject may consist of nodes, composite associations, associations, elements structure and attribute properties. Development of specific business object metaobjects, specific solution supplement metaobjects, etc. may therefore proceed using the same development technologies. Moreover, access and lifecycle issues of the various specific metaobjects may be managed using similar (or identical) mechanisms.","For example, system  also includes one or more design tool . As illustrated, design tool(s)  use a Meta Data Solution View (MDSV) API to access views of metaobjects . MDRS services  may include program code executable to implement the MDSV API.","The view of a metaobject  provided to design tool(s)  may comprise a simplified view of the metaobject . For example,  illustrates design-time model hierarchy  within MDRS  according to some embodiments. Platform model  may comprise a conventional platform model such as that described above. Platform model  shows business object metaobjects BO and BO, although embodiments are not limited to simplified views of business object metaobjects.","Simplified model  may comprise solution-specific views of BO and BO of platform model , and may provide features to facilitate the development of business applications (i.e., solutions) having some common requirements. Simplified model  may be used in place of platform model  during development of all business applications (i.e., service consumers) such as, but not limited to a user interface layer, Web services (i.e., Compound Services), and forms.","Simplified model  may reflect a determination of which entities (e.g., nodes\/attributes, etc.) or combinations of entities are often required by an application for proper functioning of the relevant business objects. The features of a simplified model  described herein benefit a user during design-time. The user can be a developer on the application side, a partner, or the customer (e.g., adding extension fields to a screen). During runtime, an application developed using simplified model  typically interacts with an application platform without regard to simplified model .","MDRS services  may calculate a simplified view of a metaobject instance (e.g., a SalesOrder Object model) by filtering based on properties of the metaobject instance, additional properties and solution-specific supplementary annotations, and use-case specific heuristics. The MDSV API may therefore be used by any design-time tool to access a business object metaobject. The API may support filter parameters to allow the calculation of different business object views for different use-cases (e.g., partner development, customer extensibility, SAP in-house development, etc.).","Annotations according to some embodiments include, but are not limited to, a release status code (such as those described in commonly-assigned, co-pending U.S. application Ser. No. 12\/639,698), a relevant for solution indicator defining whether the element is published for customers of a given solution, a special element path, a public write access indicator, a source foreign key path, a code extension supported indicator, a determined by system indicator, a transformation rule annotation, an allowed code values per usage annotation, and an action usage code.","The API may implement rules to calculate business object views based on such annotations. For example, a calculated view of a metaobject instance may only include non-disabled entities, entities which are marked as released or deprecated (e.g., using a release status code annotation), and\/or entities which are marked as public (e.g., using a relevant for solution indicator annotation).","In other examples of calculation rules, a view according to some embodiments includes a reduced-depth object tree. For example, the reduced-depth object tree might hide all or some cross-business object associations. Also or alternatively, the reduced-depth object tree might hide all or some 1:C associations.","Simplified metaobject instance views according to some embodiments include elements of 1:C associations together with elements of parent nodes (e.g., by merging the 1:C association paths into the element tree of the parent node). In some embodiments, only node elements are joined in the parent nodes, while actions, queries, associations, and other entities are not handled in this manner. A calculated view may show only the relevant elements and not all elements in the case of navigation association-specific reduction of the target node. Transformation definitions and user interface texts of transformed fields may also be included according to some embodiments.","According to some embodiments, additional properties and solution-specific annotations for a metaobject instance are maintained by a separate \u201csolution supplement\u201d metaobject (e.g., MDRS_BO_SOLUTION_SUPPLEMENT) which is associated with the metaobject in MDRS . These annotations may be associated with one or more elements (Root, Node, Node Element, Association, Action, Action Parameter Element, Status Schema, Query, Query Parameter Element) of the metaobject instance.","Specific annotations according to some embodiments will now be described. Embodiments are not limited to the described annotations.","A Public Write Access indicator may indicate whether an associated entity may be written to. In some embodiments, the public write access indicator does not override other platform restrictions. In other words, the public write access indicator can be set to \u201cYes\u201d only if write access to the entity is not otherwise restricted.","An Action Usage Code annotation may have values of Default Usage, Internal Check Action, Action Only Callable by Inbound Agent, and Action only callable by Outbound Agent. Actions specified as Default Usage are typically part of the user interface and may be exposed in the calculated view. Actions with an Internal Check Action code are not exposed, and are only called internally by the instance of the metaobject itself. Actions having the codes Action Only Callable by Inbound Agent and Action Only Callable by Outbound Agent are usually not exposed in the calculated view. They may be closely related to process consistency.","The Code Extension Supported Annotation is relevant for a node element but may also be a characteristic of the data type.","In many cases all released elements of a target node of an association are visible in the calculated view. Accordingly, the same elements which are visible during navigation of the composition association are also relevant during navigation of via another association. The Special Element Path annotation allows restriction of a view depending on the association from which navigation began.","An element path is either directly an element of a target node of a first association, or it is an element of a node which can be reached via associations of the target node (or associations of their target nodes, etc.). In case no user interface text is specified in the special element path, the user interface text of the element is considered valid.","Example A with special element path:","The metaobject instance SalesOrder includes a 1:C association BUYER_PARTY at the root node. Assuming a request to view all fields which are visible on the QAF, and only two fields are visible on the QAF (even though the party includes many more fields), a list of special element paths may be defined:",{"@attributes":{"id":"p-0044","num":"0043"},"tables":{"@attributes":{"id":"TABLE-US-00001","num":"00001"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"thead":{"row":{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"PARTY_KEY---PARTY_ID---CONTENT with UI Text \u201cAccount ID\u201d"},{"entry":"USED_ADDRESS---FORMATTED_ADDRESS---"},{"entry":"FORMATTED_NAME"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}]}}}},"br":{}},"Example B without special element path:","The metaobject instance SalesOrder includes a 1:C association to the DO ATTACHMENT FOLDER. The DO attachment folder includes details (nodes, fields, actions, . . . ) which are published in the solution. Since all business objects in the solution use the attachment folder always in the same way, no special view is needed. The association is included in the view without overwriting the default using a special element path.","Example C with truncated special element path:","The metaobject instance SalesOrder includes a 1:C association BUYER_PARTY at the root node. All the fields of the UI-Building Block of the Address are desired for inclusion in the view, but not all the fields of the party node. The BO Used Address is annotated as described herein so that all the fields of the UI-Building Block are included, and the special element path is defined:",{"@attributes":{"id":"p-0049","num":"0048"},"tables":{"@attributes":{"id":"TABLE-US-00002","num":"00002"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"thead":{"row":{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"PARTY_KEY---PARTY_ID---CONTENT with UI Text \u201cAccount ID\u201d"},{"entry":"USED_ADDRESS"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}]}}}}},"For a released implemented association or cross-DU association, a Source Foreign Key Path annotation indicates to which elements (e.g., ID, code value) the association is actually pointing.","The Determined by System Indicator describes whether application logic exists for determining the value of this node element. If this indicator is set, documentation may be provided to explain how this determination works (e.g. \u201cThis value is defaulted based on the field xyz at the customer master\u201d.)","The Transformation Rule annotation is to derive a transformed element out of a given core business object element without adding a new transformed element to the core business object. The user interface text of the transformed field may be maintainable as well, so that the customer or key user is able to find the correct transformation.","The Allowed Code Values per Usage annotations specifies which of the code values of the code list provider are actually allowed for the associated business object element. This annotation may be solution-independent.","A solution supplement metaobject maintains solution-specific annotations for its corresponding metaobject. For each business object metaobject instance (e.g., SalesOrder) used in a solution, a corresponding solution supplement metaobject instance exists. This solution supplement metaobject instance contains only additional content associated with the solution context.","The solution supplement metaobject refers to the relevant entities of the business object metaobject and the UI Text metaobject via associations. The content for the solution can be maintained in a software layer other than that of the corresponding business object metaobject, which implies that the solution content shall be transportable as separate development unit.","In order to support more than one solution within a given application platform, a \u201csolution\u201d metaobject (e.g., MDRS_SOLUTION) is also available in MDRS . An instance of the solution metaobject describes a specific solution, such as those known in the art. Each instance of the solution supplement metaobject has a foreign key association to a specific solution metaobject instance. The solution key is part of a solution supplement alternative key to ensure that more than one solution can be maintained in one application platform.",{"@attributes":{"id":"p-0057","num":"0056"},"figref":"FIG. 3","b":["300","330","320","310","340","110","320","310","320","340"]},"Solution Supplement metaobject  may provide the maintenance of annotations for specific instances of metaobjects in addition to business objects. In some embodiments, a separate solution supplement metaobject may be provided for each metaobject in MDRS ",{"@attributes":{"id":"p-0059","num":"0058"},"figref":"FIG. 4","b":["400","420","420","430","440","410","420"]},"The Item node has an association to UI text metaobject  if the text is overwritten by the solution. The Item node also includes associations to the corresponding business object entities association, node, node action, node query, node element, etc. Each Item node instance includes the annotations for exactly one corresponding business object entity.","Some embodiments provide for the removal of technical and unnecessary associations from a business object view by specifying an annotation on the association. On the other hand, it may be useful to join information of other business objects into Business Object metaobject . For example, the address information of a buyer in a sales order may be made visible in the simplified sales order view even though this address information is not currently part of the SalesOrder business object.","Some embodiments provide definition, by virtue of BO Solution Supplement metaobject , of a special element path based on associations to a cross-business object node or cross-business object node element which is merged with the current business object view metadata. The end of the special element path can either be a node element or an association. If the end is an association, all released entities of the target node of the association including node elements, node actions, and associations from this target node may be visible in the business object view. If the end of the special path element is a node element, then only the element may be visible in the business object view.","Extensibility for Business Object instances is supported by an Extension BO metaobject of MDRS . Multiple Extension BO instances can exist for each Business Object instance. A BO Solution Supplement instance may exist for each Extension BO instance. Relationship  of  illustrates one possible scenario based on these parameters.","The content of an Extension BO instance is additive and the content of the corresponding BO Solution Supplement instance can contain additional information for the Extension BO items. Some embodiments do not allow a BO Solution Supplement instance corresponding to an Extension BO to overwrite items of a BO Solution Supplement instance of the source Business Object. In some embodiments, BO Solution Supplement instances for more than one solution may be present in one system. Usage of a solution key allows for the maintenance and reading of the appropriate solution-specific metadata.",{"@attributes":{"id":"p-0065","num":"0064"},"figref":"FIG. 6","b":["600","114","600"]},"Initially, at S, a request for metadata of an instance of a first metaobject is received from a requestor. For example, a design tool  may call the MDSV API to request metadata of a SalesOrder business object. Next, at S, an instance of a solution supplement metaobject associated with the instance of the first metaobject is identified. As described above, the identified instance of the solution supplement metaobject includes solution-specific annotations of the metadata of the instance of the first metaobject.","Merged metadata is determined based on the annotations and on metadata of the instance of the first metaobject at S, and the merged metadata is returned to the requestor at S. Determination of the merged data according to some embodiments will be described in detail below.","The merged metadata is typically a subset of the metadata of the instance of the first metaobject. The merged metadata may be used by the requestor to present a simplified denormalized view on the instance of the first metaobject.",{"@attributes":{"id":"p-0069","num":"0068"},"figref":"FIGS. 7 through 10"},"As shown in user interface  of , the elements located directly at the node Root of the Solution metaobject are defined by the data type SolutionElements. These elements include: Name (e.g., the name of the solution); SemanticalName (e.g., the semantical name of the solution); and PrefixName (e.g., the prefix or ABAP namespace of the solution).","User interface  of  illustrates elements of a Business Object Solution Supplement metaobject according to some embodiments. The elements located directly at the node Root of the Solution Supplement metaobject are defined by the data type SolutionSupplementElements. These elements include: SolutionBusinessObjectKey (e.g., key defined by the solution name and the business object name; SolutionProxyName (e.g., the proxy name of the solution to which the solution supplement belongs; and BusinessObjectProxyName (e.g., the proxy name of the business object to which the solution supplement belongs). In this regard, one Solution Supplement instance is associated with only one Business Object and only one Solution. The elements of the Business Object Solution Supplement metaobject also include the annotations AccessPublishedIndicator and SolutionUsedIndicator.","The Item Node of the Business Object Solution Supplement metaobject, illustrated in user interface  of , includes associations to all Business Object entities for which annotations are available.","The elements located directly at the node Item are defined by the data type SolutionSupplementItemElements. These elements include: Key (e.g., the key of the item of the business object solution); SolutionSupplementKey: (e.g., the key of the business object solution supplement to which the item belongs; NodeProxyName: (e.g., the proxy name of the business object node); ActionProxyName: (e.g., the proxy name of the business object action); QueryProxyName: (e.g., the proxy name of the business object query) AssociationProxyName: (e.g., the proxy name of the business object association); DataTypeElementPathProxyName: (e.g., the data element path of the element proxy names of the corresponding business object entity); and TypeCode: (e.g., the coded representation of the item type\u2014either Business Object Node, Business Object Node Element, Business Object Action, Business Object Action Parameter, Business Object Query, Business Object Query Parameter, Business Object Association, Business Object Association Filter Parameter).","Elements associated with annotations include: SolutionUsedIndicator: (e.g., indicates whether the corresponding business object entity is used in the solution or not); AccessPublishedIndicator: (e.g., indicates whether the corresponding business object entity was published of the solution for access or not); and CodeExtensionSupportedIndicator: (e.g., indicates whether the corresponding business object entity supports code extensibility or not). In some embodiments, the CodeExtensionSupportedIndicator is only available for the types \u201cNode Element\u201d, \u201cAction Parameter\u201d, \u201cQuery Parameter\u201d, or \u201cAssociation Filter Parameter\u201d.",{"@attributes":{"id":"p-0075","num":"0074"},"figref":"FIG. 10","b":"1000"},"A special element path item is one part of a special element path that is built by associations, by a closing node element and\/or by a further special element path item of a different special element path. The special element path item can be related to an association or to a node element in the case of end points of the path or to a special element path item of one other navigation path. The former case allows a type of special element path reuse. The kind of relationship is given by the type code of the special element path item.","The special element path item is assigned to a predecessor special element path item. If no predecessor is given, then the special element path is the starting point of one path for that item. Every special element path item of type \u201cBusiness Object Association\u201d can have one or more successors.","One special element path is build by traversing from one special element item to one of the successor special element path items starting with a special element without a predecessor and ending with a corresponding node element of the last special element path item or a target node of a corresponding association of the last special element path item.","Use In many cases all released elements of the target node of an association are visible in the BO explorer. Or in other words the same elements which are visible if you navigate via the composition association are also relevant if you navigate via another association. However, in several cases you need to restrict further dependent on which association you started to navigate with. This functionality allows for selecting special navigation paths, to improve understanding and for display in the BO explorer.","An element path is either directly an element of the target node of the association you start with, or it is an element of a node which can be reached via associations of the target node (or associations of their target nodes and so on). The same mechanism can also be used to specify exactly which parts of a DO are really to be released in a given BO and which UI-text is used. In case no UI text is specified in the special element path, the UI text of the element is valid.","The elements located at the node Special Element Path Item are defined by the data type: BusinessObjectSolutionSupplementSpecialPathElements. These elements include: Key (e.g., the key of the special element path item); SolutionSupplementKey (e.g., the key of the business object solution supplement to which the item belongs); NodeProxyName: (e.g., the proxy name of the business object node); ActionProxyName (e.g., the proxy name of the business object action); QueryProxyName (e.g., the proxy name of the business object query); AssociationProxyName (e.g., the proxy name of the business object association); DataTypeElementPathProxyName (e.g., the data element path of the element proxy names of the corresponding business object entity); Name: (e.g., the proxy name of the special element path item; and TypeCode (e.g., coded representation of the type of the business object special element path item).","The type of the business object special element path item specified by TypeCode controls the kind of navigation through the successor path item. Three types are contemplated, Business Object Node Element, Business Object Association, and Business Object Solution Supplement Special Element Path Item.","A Business Object Node Element-type special element path item is related to a business object node element. That business object can be different from the assigned business object of the business object solution supplement. This path item is always the last item of a path (i.e., no successor path item exists).","A Business Object Association-type special element path item is related to a business object association. That business object can be different from the assigned business object of the business object solution supplement. This path item can be a starting or ending point of a special element path. The entities of the target business object node of the related association will be joined to the corresponding node of the current item in case that the special element path item is the ending point of that special element path.","A Business Object Solution Supplement Special Element Path Item-type special element path item is related to a business object solution supplement special element path item. The business object solution supplement can be different from the current business object solution supplement, but it must be assigned to the same solution. This path item is always the last item of a path (i.e., no successor path item exists).",{"@attributes":{"id":"p-0086","num":"0085"},"figref":"FIG. 11","b":"1100"},"The common entry point for all metaobject types is realized with one factory. The factory provides a list of all supported metaobject types for which solution-specific views are available. In addition, the name of the interface fa\u00e7ade for each metaobject type will be provided in the list of solution views.","As mentioned above, the MDSV API provides a calculated Business Object View based on an evaluation of Business Object metadata and Business Object Solution Supplement metadata. The leading metadata entity is the Business Object and the Business Object Solution Supplements are only handled as additional information. The MDSV API is ABAP class-based according to some embodiments, but the MDSV API may be implemented in any programming language.","Referring to , the ABAP class CL_MDSV_FACTORY provides an access point to MDSV facades of metaobject types in the MDRS. The fa\u00e7ades may be realized as ABAP interfaces.","The abstract ABAP interface IF_MDSV_COMMON_FACADE provides the common part of the metaobject fa\u00e7ade. The interface IF_MSDV_BO_FACADE is derived from IF_MSDV_COMMON_FACADE. The interface IF_MSDV_BO_FACADE is the access point to the concrete MDSVs of the Business Objects. The concrete MDSV information of a Business Object is provided by the ABAP interface IF_MDSV_BO.","The CL_MDSV_FACTORY class forms a generic entry point of the solution view read API. Primarily, it provides two methods:","GET_FACADE_LIST: lists all supported metaobjects for which a solution view API is available in the system in terms of metaobject name, corresponding solution supplement name and the names of the corresponding metaobject\/solution supplement specific interface names of the fa\u00e7ade.","GET_FACADE: returns the access fa\u00e7ade for a specific metaobject as an implementation of interface","IF_MDSV_COMMON_FACADE\/IF_MDRS_COMMON_[<MO_NAME>].","The fa\u00e7ade IF_MDSV_COMMON_FACADE provides access to the metaobject-specific solution view read API and to apply particular filter parameters on this read API (e.g., the solution name, detailed parameters on how to explode the MO structure with the solution supplement).","The interface IF_MDSV_BO_FACADE includes the common interface IF_MDRS_COMMON_INTERFACE and can add metaobject-specific functionality such as providing a list of metaobject instance-based filter criteria (e.g., solution).","The interface IF_MDSV_BO defines the drill-down methods required to explode the metadata solution view on the Business Object metaobject. Each interface instance is created using the filter parameters set when invoking the GET_INSTANCE method of the fa\u00e7ade, so the filter parameters need not be passed with each method call.","An explanation of relevant methods now follows. The explanation concerns Business Object metaobjects, but embodiments may be used in conjunction with other metaobjects. Initially, it is assumed that a request for metadata of an instance of a metaobject is received, and that the request includes a name of the instance (e.g., SalesOrder), a filter parameter setting and a solution.","GET_ROOT","This method returns a Business Object root instance and a root instance of a corresponding Business Object Solution Supplement as specified by the Business Object ABAP\/proxy name.",{"@attributes":{"id":"p-0099","num":"0098"},"tables":{"@attributes":{"id":"TABLE-US-00003","num":"00003"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"thead":{"row":{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"TYPES:"},{"entry":"\u2003BEGIN OF ty_gs_root,"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"84pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"133pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["\u2003\u2003mo_root ","TYPE"]},{"entry":[{},"if_mdrs_business_object=>ty_root,"]},{"entry":["\u2003\u2003solution_suppl_root","TYPE zif_mdrs_bo_sol_sup=>ty_root,"]},{"entry":"\u2003END OF ty_gs_root ."}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":"TYPES:"}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"84pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"133pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["\u2003ty_gt_root","TYPE STANDARD TABLE OF"]},{"entry":[{},"ty_gs_root."]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"METHODS get_root"},{"entry":"\u2003IMPORTING"},{"entry":"\u2003\u2003!iv_bo_name TYPE if_mdrs_business_object=>ty_key-root-key-"},{"entry":"\u2003\u2003name"},{"entry":"\u2003EXPORTING"},{"entry":"\u2003\u2003!es_root\u2003\u2003TYPE ty_gs_root ."},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}]}}]}},"br":{}},"This method returns a list of Business Object root instances and corresponding Business Object BO solution supplement root instances according to the filter parameter setting and the requested solution.","GET_ROOT_NODE","This method returns the root node instance of a given Business Object and a corresponding item instance of the Solution Supplement metaobject.",{"@attributes":{"id":"p-0102","num":"0101"},"tables":{"@attributes":{"id":"TABLE-US-00004","num":"00004"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"thead":{"row":{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":"TYPES:"}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"91pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"126pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["\u2003ty_gt_path","TYPE STANDARD TABLE OF"]},{"entry":[{},"\u2002if_mdrs_business_object=>"]},{"entry":[{},"ty_key-association-key"]},{"entry":[{},"WITH DEFAULT KEY ."]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"TYPES:"},{"entry":"\u2003BEGIN OF ty_gs_node,"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"91pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"126pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["\u2003\u2003mo_node","TYPE if_mdrs_business_object=>"]},{"entry":[{},"ty_node,"]},{"entry":["\u2003\u2003solution_suppl_item","TYPE zif_mdrs_bo_sol_sup=>ty_item,"]},{"entry":["\u2003path","TYPE ty_gt_path,"]},{"entry":"END OF ty_gs_node ."},{"entry":"TYPES:"},{"entry":["\u2003ty_gt_node","TYPE STANDARD TABLE OF"]},{"entry":[{},"ty_gs_node ."]},{"entry":"METHODS get_root_node"},{"entry":"\u2003IMPORTING"},{"entry":["\u2003\u2003!iv_bo_name","TYPE zif_mdrs_business_object=>"]},{"entry":"ty_key-root-key-name"},{"entry":"\u2002EXPORTING"},{"entry":["\u2003\u2003!es_root_node","TYPE ty_gs_node ."]},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}}]}}]}},"br":{}},"This method allows drilling down the node hierarchy based on the filter parameters. Starting from a parent node instance, the child nodes within the solution view are calculated. The method returns a set of child nodes based on the instance of the Business Object node, Item instances of the corresponding Business Object Solution Supplement, and path information formed by the sequence of association keys connecting the parent node with the child nodes.","Path information introduced within the GET_SUBNODES method is relevant for the following methods as well, since a child in the solution view may result from a metaobject instance found along a path composed of a set of associations, or a child can be reached by multiple associations (e.g., party-buyer or seller-party associations). Through knowledge of the Business Object metaobject source instance, the Business Object metaobject target instance (i.e., child in the solution view), and the path given by the list of association keys, the information is completely available to the consumer.",{"@attributes":{"id":"p-0105","num":"0104"},"tables":{"@attributes":{"id":"TABLE-US-00005","num":"00005"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"thead":{"row":{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"METHODS get_subnodes"},{"entry":"\u2003IMPORTING"},{"entry":"\u2003\u2003!iv_node_key TYPE if_mdrs_business_object=>ty_key-node-key"},{"entry":"\u2003EXPORTING"},{"entry":"\u2003\u2003!et_node TYPE ty_gt_node ."},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}]}}}},"br":{}},"This method returns a set of top level node elements of a Business Object node and corresponding item instances of the Business Object Solution Supplement metaobject. Due to the requested structure compression, a top level node element may result from a node instance, found by an association or association chain. The method returns a table with a structure consisting of the Business Object node element, a corresponding Solution Supplement item and the path.","GET_NODE_SUB_ELEMENTS","This method returns the set of child node elements of a node element. This method also returns corresponding item instances of the Business Object Solution Supplement metaobject. Since the data type hierarchy is represented in the Key of the Business Object node element, this part of the hierarchy is not redundantly represented in the path.","The following methods relate to other elements in the Business Object metaobject, and may be applied to those elements analogously to the methods described above:",{"@attributes":{"id":"p-0109","num":"0108"},"tables":{"@attributes":{"id":"TABLE-US-00006","num":"00006"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"175pt","align":"left"}}],"thead":{"row":{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"GET_ACTIONS"]},{"entry":[{},"GET_ACTION_TOP_LEVEL_PARAMS"]},{"entry":[{},"GET_ACTION_SUB_PARAMS"]},{"entry":[{},"GET_QUERIES"]},{"entry":[{},"GET_QUERY_TOP_LEVEL_PARAMS"]},{"entry":[{},"GET_QUERY_SUB_PARAMS"]},{"entry":[{},"GET_ASSOCS"]},{"entry":[{},"GET_ASSOC_TOP_LEVEL_PARAMS"]},{"entry":[{},"GET_ASSOC_SUB_PARAMS"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}]}}}}},{"@attributes":{"id":"p-0110","num":"0109"},"figref":"FIG. 12","b":["1200","1200","1200","110","1200"]},"Apparatus  includes processor  operatively coupled to communication device , data storage device , one or more input devices , one or more output devices  and memory .","Communication device  may facilitate communication with external devices, such as an external design tool. Input device(s)  may comprise, for example, a keyboard, a keypad, a mouse or other pointing device, a microphone, knob or a switch, an infra-red (IR) port, a docking station, and\/or a touch screen. Input device(s)  may be used, for example, to enter information into apparatus . Output device(s)  may comprise, for example, a display (e.g., a display screen) a speaker, and\/or a printer.","Data storage device  may comprise any appropriate persistent storage device, including combinations of magnetic storage devices (e.g., magnetic tape, hard disk drives and flash memory), optical storage devices, Read Only Memory (ROM) devices, etc., while memory  may comprise Random Access Memory (RAM).","MDRS services  of data storage device  includes program code for execution by processor  to provide functions attributed herein to MDRS services . Embodiments are not limited to execution of these functions by a single apparatus. Metadata  may include metadata defining metaobjects (e.g., Business Object, Business Object Solution Supplement) and instances thereof (e.g., SalesOrder) as described herein. Data storage device  may also store data and other program code for providing additional functionality and\/or which are necessary for operation thereof, such as device drivers, operating system files, etc.","Each system and device described herein may be implemented by any number of devices in communication via any number of other public and\/or private networks. Two or more of devices of may be located remote from one another and may communicate with one another via any known manner of network(s) and\/or a dedicated connection. Moreover, each device may comprise any number of hardware and\/or software elements suitable to provide the functions described herein as well as any other functions. Other topologies may be used in conjunction with other embodiments.","All systems and processes discussed herein may be embodied in program code stored on one or more computer-readable media. Such media may include, for example, a floppy disk, a CD-ROM, a DVD-ROM, a Flash drive, magnetic tape, and solid state RAM or ROM memories. Embodiments are therefore not limited to any specific combination of hardware and software.","The embodiments described herein are solely for the purpose of illustration. Those in the art will recognize other embodiments may be practiced with modifications and alterations limited only by the claims."],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"BRIEF DESCRIPTION OF THE DRAWINGS","p":[{"@attributes":{"id":"p-0009","num":"0008"},"figref":"FIG. 1"},{"@attributes":{"id":"p-0010","num":"0009"},"figref":"FIG. 2"},{"@attributes":{"id":"p-0011","num":"0010"},"figref":"FIG. 3"},{"@attributes":{"id":"p-0012","num":"0011"},"figref":"FIG. 4"},{"@attributes":{"id":"p-0013","num":"0012"},"figref":"FIG. 5"},{"@attributes":{"id":"p-0014","num":"0013"},"figref":"FIG. 6"},{"@attributes":{"id":"p-0015","num":"0014"},"figref":"FIG. 7"},{"@attributes":{"id":"p-0016","num":"0015"},"figref":"FIG. 8"},{"@attributes":{"id":"p-0017","num":"0016"},"figref":"FIG. 9"},{"@attributes":{"id":"p-0018","num":"0017"},"figref":"FIG. 10"},{"@attributes":{"id":"p-0019","num":"0018"},"figref":"FIG. 11"},{"@attributes":{"id":"p-0020","num":"0019"},"figref":"FIG. 12"}]},"DETDESC":[{},{}]}
