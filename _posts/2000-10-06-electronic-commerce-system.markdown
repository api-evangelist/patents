---
title: Electronic commerce system
abstract: A method of brokering a transaction between a consumer and a vendor by a broker, wherein the consumer, the broker and the vendor are all attached to a public network, the consumer having a secure token containing a true consumer identity. The method comprising the steps of: the consumer obtaining a temporary identity from the broker by using the true consumer identity from the secure token; the consumer selecting a purchase to be made from the vendor; the consumer requesting the purchase from the vendor and providing the temporary identity to the vendor; the vendor requesting transaction authorisation from the broker by forwarding the request and the temporary identity to the broker; the broker matching the temporary identity to a current list of temporary identities, and obtaining the true consumer identity; the broker providing authorisation for the transaction based on transaction details and true consumer identity.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=07096204&OS=07096204&RS=07096204
owner: Hewlett-Packard Development Company, L.P.
number: 07096204
owner_city: Houston
owner_country: US
publication_date: 20001006
---

{"@attributes":{"id":"description"},"BRFSUM":[{},{}],"p":["The subject matter of the present application may also be related to the following U.S. patent applications: \u201cTrusted Identities on a Trusted Computing Platform,\u201d Ser. No. 10\/208,716, filed Jul. 29, 2002; and \u201cMethod and Apparatus for User Profiling,\u201d Ser. No. 10\/241,893, filed Sep. 12, 2002.","This invention relates to a system for enacting electronic commerce.","Purchasing goods using a public network, such as the Internet, plays an increasingly important role in modern society, and necessarily involves the establishment of the appropriate business relationships amongst consumers, vendors and authorisation providers.","Existing online vendors use the model described in . This is described in greater detail below, but in summary the consumer uses the Internet Service Provider (ISP) as a connection provider and connects to the vendor's online store. The vendor is connected to the consumer's bank through a payment gateway. The payment gateway is a broker\u2014it is used to authorise transactions and update the consumer's account. In this model the vendor will not ship the goods until it receives payment, made with a debit or credit card, which needs to be verified by or on behalf of the vendor. The distribution channel is, typically, conventional mail.","The following problems exist apply to the existing model:\n\n","Accordingly, there is provided a method of brokering a transaction between a consumer and a vendor by a broker, wherein the consumer, the broker and the vendor are all attached to a public network, the consumer having a secure token containing a true consumer identity, the method comprising the steps of: the consumer obtaining a temporary identity from the broker by using the true consumer identity from the secure token; the consumer selecting a purchase to be made from the vendor; the consumer requesting the purchase from the vendor and providing the temporary identity to the vendor; the vendor requesting transaction authorisation from the broker by forwarding the request and the temporary identity to the broker; the broker matching the temporary identity to a current list of temporary identities, and obtaining the true consumer identity; the broker providing authorisation for the transaction based on transaction details and true consumer identity.","To address one or more of the problems of the prior art, the present inventors have proposed the method above. Embodiments of the method reduce security risks, and appropriate business relationships between consumers and vendors are set up through the use of ISPs as trusted brokers. Typically, the relationship involves a trust relationship between the broker and the consumers, and between the broker and the vendors, but not (directly) between the vendors and the consumers. Preferred embodiments of the invention involve mutual authentication and integrity checks. Particularly preferred embodiments utilise a novel method of separating payment and distribution of goods. The (financial) identity of the consumer is needed for payment, but this is revealed only to the broker and not the vendor. This does not prevent delivery of goods\u2014electronic goods can simply be downloaded, but physical goods can be sent to the consumer's delivery address, which can be sent without compromising his financial data.","Particularly preferred embodiments of the invention make use of trusted computing platform technology (by which operation of a computing platform can be made demonstrably reliable to a user or other interacting party) in order to develop verifiable trust relationships between consumers and their platforms, between consumer and ISP, and between ISPs and vendors. Trusted computing platforms are described in detail below.","In a preferred method, each consumer needs only one contract with an ISP, and with this contract he or she can buy goods from many different vendors. Each vendor also would need only one contract with the ISP, and could with this contract sell goods (including downloadable electronic goods) or services to many different consumers.","In arrangements in accordance with the present invention, the authorisation gateway moves to the ISP and thus cost and effort for vendors is reduced. In preferred arrangements, the purchase procedure does not involve revealing any of the consumer's secret information to the vendor. The ISP, acting as broker, preferably controls billing to the consumer and also controls access to different services by adopting a security policy agreed by all parties.","An embodiment of the present invention will now be described, by way of example. A part of the system of this preferred embodiment is a client platform will be described which contains a trusted component, the trusted component allowing secure and reliable interaction with the client platform by users or other parties communicating with the client platform. Such a trusted component is described below, but is more fully described in the applicant's copending International Patent Application No. PCT\/GB 00\/00528 entitled \u201cTrusted Computing Platform\u201d filed on 15 Feb. 2000 and incorporated by reference herein. The trusted component in the client platform also controls the client platform display, so the user can be confident that what is seen on the display has not been subverted by an unauthorised process operating on the client platform. This aspect of the trusted component is also described below, but is more fully described in the applicant's copending International Patent Application No. PCT\/GB 00\/01996 entitled \u201cSystem for Digitally Signing a Document\u201d filed on 25 May 2000 and incorporated by reference herein. The system also employs in preferred embodiments a trusted token personal to a user\u2014in the embodiment described in detail here, the trusted token is a user smart card. In addition, in the embodiment described, not only the client platform but also the server contains a trusted component (though this does need to have trusted display functionality).","Certain elements of the system\u2014the trusted component, including trusted display functionality, and the user smart card\u2014will now be described in detail with reference to . The skilled person will appreciate that in the context of the present invention, the specific form of trusted computing platform (and trusted component), trusted display and smart card are not critical, and may be modified without departing from the scope of the invention as claimed. In the present invention, use of such a computing platform is indeed strongly preferred, but not essential.","To achieve a trusted computing platform, there is incorporated into the computing platform a physical trusted device whose function is to bind the identity of the platform to reliably measured data that provides an integrity metric of the platform. The trusted device may also (as is described below) act as a trusted display processor. The trusted display processor (or a device with similar properties) is associated with video data at a stage in the video processing beyond the point where data can be manipulated by standard host computer software. This allows the trusted display processor to display data on a display surface without interference or subversion by the host computer software. Thus, the trusted display processor can be certain what image is currently being displayed to the user. The identity and the integrity metric are compared with expected values provided by a trusted party (TP) that is prepared to vouch for the trustworthiness of the platform. If there is a match, the implication is that at least part of the platform is operating correctly, depending on the scope of the integrity metric.","A user verifies the correct operation of the platform before exchanging other data with the platform. A user does this by requesting the trusted device to provide its identity and an integrity metric. (Optionally the trusted device will refuse to provide evidence of identity if it itself was unable to verify correct operation of the platform.) The user receives the proof of identity and the identity metric, and compares them against values which it believes to be true. Those proper values are provided by the TP or another entity that is trusted by the user. If data reported by the trusted device is the same as that provided by the TP, the user trusts the platform. This is because the user trusts the entity. The entity trusts the platform because it has previously validated the identity and determined the proper integrity metric of the platform.","Once a user has established trusted operation of the platform, he exchanges other data with the platform. For a local user, the exchange might be by interacting with some software application running on the platform. For a remote user, the exchange might involve a secure transaction. In either case, the data exchanged is \u2018signed\u2019 by the trusted device. The user can then have greater confidence that data is being exchanged with a platform whose behaviour can be trusted.","The trusted device uses cryptographic processes but does not necessarily provide an external interface to those cryptographic processes. Also, a most desirable implementation would be to make the trusted device tamperproof, to protect secrets by making them inaccessible to other platform functions and provide an environment that is substantially immune to unauthorised modification. Since tamper-proofing is impossible, the best approximation is a trusted device that is tamper-resistant, or tamper-detecting. The trusted device, therefore, preferably consists of one physical component that is tamper-resistant.","Techniques relevant to tamper-resistance are well known to those skilled in the art of security. These techniques include methods for resisting tampering (such as appropriate encapsulation of the trusted device), methods for detecting tampering (such as detection of out of specification voltages, X-rays, or loss of physical integrity in the trusted device casing), and methods for eliminating data when tampering is detected. Further discussion of appropriate techniques can be found at http:\/\/www.cl.cam.ac.uk\/\u02dcmgk25\/tamper.html. It will be appreciated that, although tamper-proofing is a most desirable feature of the present invention, it does not enter into the normal operation of the invention and, as such, is beyond the scope of the present invention and will not be described in any detail herein.","The trusted device is preferably a physical one because it must be difficult to forge. It is most preferably tamper-resistant because it must be hard to counterfeit. It typically has an engine capable of using cryptographic processes because it is required to prove identity, both locally and at a distance, and it contains at least one method of measuring some integrity metric of the platform with which it is associated.",{"@attributes":{"id":"p-0031","num":"0035"},"figref":["FIG. 1","FIG. 1","FIG. 1"],"b":["100","105","110","115","120","125","130","122"]},{"@attributes":{"id":"p-0032","num":"0036"},"figref":["FIG. 2","FIG. 1"]},"According to , the host computer  comprises a central processing unit (CPU) , or main processor, connected to main memory, which comprises RAM  and ROM , all of which are mounted on a motherboard  of the host computer . The CPU in this case is a Pentium\u2122 processor. The CPU is connected via a PCI (Peripheral Component Interconnect) bridge  to a PCI bus , to which are attached the other main components of the host computer . The bus  comprises appropriate control, address and data portions, which will not be described in detail herein. For a detailed description of Pentium processors and PCI architectures, which is beyond the scope of the present description, the reader is referred to the book, \u201cThe Indispensable PC Hardware Handbook\u201d, 3rd Edition, by Hans-Peter Messmer, published by Addison-Wesley, ISBN 0-201-40399-4. Of course, the present embodiment is in no way limited to implementation using Pentium processors, Windows\u2122 operating systems or PCI buses.","The other main components of the host computer  attached to the PCI bus  include: a SCSI (small computer system interface) adaptor connected via a SCSI bus  to a hard disk drive  and a CD-ROM drive ; a LAN (local area network) adaptor  for connecting the host computer  to a LAN , via which the host computer  can communicate with other host computers (not shown), such as file servers, print servers or email servers, and the Internet ; an 10 input\/output) device , for attaching the keyboard , mouse  and smartcard reader ; and a trusted device  (which incorporates the trusted display processor function). The trusted display processor handles all standard display functions plus a number of further tasks, which will be described in detail below. \u2018Standard display functions\u2019 are those functions that one would normally expect to find in any standard host computer , for example a PC operating under the Windows NT\u2122 operating system, for displaying an image associated with the operating system or application software.","All the main components, in particular the trusted device , are preferably also integrated onto the motherboard  of the host computer , although, sometimes, LAN adapters  and SCSI adapters  can be of the plugin type.","Typically, in a personal computer the BIOS program is located in a special reserved memory area , the upper K of the first megabyte of the system memory (addresses F\u00d8\u00d8\u00d8h to FFFFh), and the main processor is arranged to look at this memory location first, in accordance with an industry wide standard.","The significant difference between the platform and a conventional platform is that, after reset, the main processor is initially controlled by the trusted device, which then hands control over to the platform-specific BIOS program, which in turn initialises all input\/output devices as normal. After the BIOS program has executed, control is handed over as normal by the BIOS program to an operating system program, such as Windows NT\u2122, which is typically loaded into main memory from a hard disk drive.","Clearly, this change from the normal procedure requires a modification to the implementation of the industry standard, whereby the main processor  is directed to address the trusted component (also described as trusted device)  to receive its first instructions. This change may be made simply by hard-coding a different address into the main processor . Alternatively, the trusted device  may be assigned the standard BIOS program address, in which case there is no need to modify the main processor configuration.","It is highly desirable for the BIOS boot block to be contained within the trusted device . This prevents subversion of the obtaining of the integrity metric (which could otherwise occur if rogue software processes are present) and prevents rogue software processes creating a situation in which the BIOS (even if correct) fails to build the proper environment for the operating system.","Although, in the preferred form to be described, the trusted device  is a single, discrete component, it is envisaged that the functions of the trusted device  may alternatively be split into multiple devices on the motherboard, or even integrated into one or more of the existing standard devices of the platform. For example, it is feasible to integrate one or more of the functions of the trusted device into the main processor itself, provided that the functions and their communications cannot be subverted. This, however, would probably require separate leads on the processor for sole use by the trusted functions. Additionally or alternatively, although in the present embodiment the trusted device is a hardware device that is adapted for integration into the motherboard , it is anticipated that a trusted device may be implemented as a \u2018removable\u2019 device, such as a dongle, which could be attached to a platform when required. Whether the trusted device is integrated or removable is a matter of design choice. However, where the trusted device is separable, a mechanism for providing a logical binding between the trusted device and the platform should be present.","After system reset, the trusted device  performs a secure boot process to ensure that the operating system of the platform  (including the system clock and the display on the monitor) is running properly and in a secure manner. During the secure boot process, the trusted device  acquires an integrity metric of the computing platform . The trusted device  can also perform secure data transfer and, for example, authentication between it and a smart card via encryption\/decryption and signature\/verification. The trusted device  can also securely enforce various security control policies, such as locking of the user interface. Moreover, in this arrangement the trusted device  also acts as a trusted display processor, providing the standard display functions of a display processor and the extra, non-standard functions for providing a trusted user interface.","According to , the trusted device  comprises:\n\n","A certificate typically contains such information, but not the public key of the CA. That public key is typically made available using a \u2018Public Key Infrastructure\u2019 (PKI). Operation of a PKI is well known to those skilled in the art of security.","The certificate Certis used to supply the public key of the trusted device  to third parties in such a way that third parties are confident of the source of the public key and that the public key is a part of a valid public-private key pair. As such, it is unnecessary for a third party to have prior knowledge of, or to need to acquire, the public key of the trusted device .","The certificate T(or, optionally, a further certificate) contains not only the public key of the trusted device  but also an authenticated value of the platform integrity metric measured by the trusted party (TP). In later communications sessions, a user of the platform  can verify the integrity of the platform  by comparing the acquired integrity metric with the authentic integrity metric in the certificate. If there is a match, the user can be confident that the platform  has not been subverted. Knowledge of the TP's generally-available public key enables simple verification of the certificate.","The trusted device  is equipped with at least one method of reliably measuring or acquiring the integrity metric of the computing platform  with which it is associated. In the present embodiment, the integrity metric is acquired by the measurement function  by generating a digest of the BIOS instructions in the BIOS memory. Such an acquired integrity metric, if verified as described above, gives a potential user of the platform  a high level of confidence that the platform  has not been subverted at a hardware, or BIOS program, level. Other known processes, for example virus checkers, will typically be in place to check that the operating system and application program code has not been subverted.","The measurement function  has access to: non-volatile memory , for storing a hash program  and a private key SDP of the trusted device , and volatile memory  for storing acquired integrity metric in the form of a digest . In appropriate embodiments, the volatile memory  may also be used to store the public keys and associated ID labels \u2013of one or more authentic smart cards  that can be used to gain access to the platform .","In one preferred implementation, as well as the digest, the integrity metric includes a Boolean value, which is stored in volatile memory  by the measurement function , for reasons that will become apparent.","A preferred process for acquiring an integrity metric will now be described with reference to .","In step , at switch-on, the measurement function  monitors the activity of the main processor  on the PCI bus  to determine whether the trusted device  is the first memory accessed. Under conventional operation, a main processor would first be directed to the BIOS memory first in order to execute the BIOS program. However, in accordance with the arrangement shown, the main processor  is directed to the trusted device , which acts as a memory. In step , if the trusted device  is the first memory accessed, in step , the measurement function  writes to volatile memory  a Boolean value which indicates that the trusted device  was the first memory accessed. Otherwise, in step , the measurement function writes a Boolean value which indicates that the trusted device  was not the first memory accessed.","In the event the trusted device  is not the first memory accessed, there is of course a chance that the trusted device  will not be accessed at all. This would be the case, for example, if the main processor  were manipulated to run the BIOS program first. Under these circumstances, the platform would operate, but would be unable to verify its integrity on demand, since the integrity metric would not be available. Further, if the trusted device  were accessed after the BIOS program had been accessed, the Boolean value would clearly indicate lack of integrity of the platform.","In step , when (or if) accessed as a memory by the main processor , the main processor  reads the stored native hash instructions  from the measurement function  in step . The hash instructions  are passed for processing by the main processor  over the data bus . In step , main processor  executes the hash instructions  and uses them, in step , to compute a digest of the BIOS memory , by reading the contents of the BIOS memory  and processing those contents according to the hash program. In step , the main processor  writes the computed digest  to the appropriate non-volatile memory location  in the trusted device . The measurement function , in step , then calls the BIOS program in the BIOS memory , and execution continues in a conventional manner.","Clearly, there are a number of different ways in which the integrity metric may be calculated, depending upon the scope of the trust required. The measurement of the BIOS program's integrity provides a fundamental check on the integrity of a platform's underlying processing environment. The integrity metric should be of such a form that it will enable reasoning about the validity of the boot process\u2014the value of the integrity metric can be used to verify whether the platform booted using the correct BIOS. Optionally, individual functional blocks within the BIOS could have their own digest values, with an ensemble BIOS digest being a digest of these individual digests. This enables a policy to state which parts of BIOS operation are critical for an intended purpose, and which are irrelevant (in which case the individual digests must be stored in such a manner that validity of operation under the policy can be established).","Other integrity checks could involve establishing that various other devices, components or apparatus attached to the platform are present and in correct working order. In one example, the BIOS programs associated with a SCSI controller could be verified to ensure communications with peripheral equipment could be trusted. In another example, the integrity of other devices, for example memory devices or co-processors, on the platform could be verified by enacting fixed challenge\/response interactions to ensure consistent results. Where the trusted device  is a separable component, some such form of interaction is desirable to provide an appropriate logical binding between the trusted device  and the platform. Also, although in the present embodiment the trusted device  utilises the data bus as its main means of communication with other parts of the platform, it is feasible to provide alternative communications paths, such as hard-wired paths or optical paths\u2014such an arrangement is described in greater detail below with reference to . Further, although in the present embodiment the trusted device  instructs the main processor  to calculate the integrity metric in other embodiments, the trusted device itself is arranged to measure one or more integrity metrics.","Preferably, the BIOS boot process includes mechanisms to verify the integrity of the boot process itself. Such mechanisms are already known from, for example, Intel's draft \u201cWired for Management baseline specification v 2.0-BOOT Integrity Service\u201d, and involve calculating digests of software or firmware before loading that software or firmware. Such a computed digest is compared with a value stored in a certificate provided by a trusted entity, whose public key is known to the BIOS. The software\/firmware is then loaded only if the computed value matches the expected value from the certificate, and the certificate has been proven valid by use of the trusted entity's public key. Otherwise, an appropriate exception handling routine is invoked.","Optionally, after receiving the computed BIOS digest, the trusted device  may inspect the proper value of the BIOS digest in the certificate and not pass control to the BIOS if the computed digest does not match the proper value. Additionally, or alternatively, the trusted device  may inspect the Boolean value and not pass control back to the BIOS if the trusted device  was not the first memory accessed. In either of these cases, an appropriate exception handling routine may be invoked.",{"@attributes":{"id":"p-0057","num":"0069"},"figref":["FIG. 5","FIG. 5","FIG. 5","FIG. 6"],"b":"260"},"At the first instance, a TP, which vouches for trusted platforms, will inspect the type of the platform to decide whether to vouch for it or not. This will be a matter of policy. If all is well, in step , the TP measures the value of integrity metric of the platform. Then, the TP generates a certificate, in step , for the platform. The certificate is generated by the TP by appending the trusted device's public key, and optionally its ID label, to the measured integrity metric, and signing the string with the TP's private key.","The trusted device  can subsequently prove its identity by using its private key to process some input data received from the user and produce output data, such that the input\/output pair is statistically impossible to produce without knowledge of the private key. Hence, knowledge of the private key forms the basis of identity in this case. Clearly, it would be feasible to use symmetric encryption to form the basis of identity. However, the disadvantage of using symmetric encryption is that the user would need to share his secret with the trusted device. Further, as a result of the need to share the secret with the user, while symmetric encryption would in principle be sufficient to prove identity to the user, it would insufficient to prove identity to a third party, who could not be entirely sure the verification originated from the trusted device or the user.","In step , the trusted device  is initialised by writing the certificate into the appropriate non-volatile memory locations of the trusted device . This is done, preferably, by secure communication with the trusted device  after it is installed in the motherboard . The method of writing the certificate to the trusted device  is analogous to the method used to initialise smart cards by writing private keys thereto. The secure communications is supported by a \u2018master key\u2019, known only to the TP, that is written to the trusted device (or smart card) during manufacture, and used to enable the writing of data to the trusted device ; writing of data to the trusted device  without knowledge of the master key is not possible.","At some later point during operation of the platform, for example when it is switched on or reset, in step , the trusted device  acquires and stores the integrity metric of the platform.","When a user wishes to communicate with the platform, in step , he creates a nonce, such as a random number, and, in step , challenges the trusted device  (the operating system of the platform, or an appropriate software application, is arranged to recognise the challenge and pass it to the trusted device , typically via a BIOS-type call, in an appropriate fashion). The nonce is used to protect the user from deception caused by replay of old but genuine signatures (called a \u2018replay attack\u2019) by untrustworthy platforms. The process of providing a nonce and verifying the response is an example of the well-known \u2018challenge\/response\u2019 process.","In step , the trusted device  receives the challenge and creates an appropriate response. This may be a digest of the measured integrity metric and the nonce, and optionally its ID label. Then, in step , the trusted device  signs the digest, using its private key, and returns the signed digest, accompanied by the certificate Cert, to the user.","In step , the user receives the challenge response and verifies the certificate using the well known public key of the TP. The user then, in step , extracts the trusted device's  public key from the certificate and uses it to decrypt the signed digest from the challenge response. Then, in step , the user verifies the nonce inside the challenge response. Next, in step , the user compares the computed integrity metric, which it extracts from the challenge response, with the proper platform integrity metric, which it extracts from the certificate. If any of the foregoing verification steps fails, in steps , ,  or , the whole process ends in step  with no further communications taking place.","Assuming all is well, in steps  and , the user and the trusted platform use other protocols to set up secure communications for other data, where the data from the platform is preferably signed by the trusted device .","Further refinements of this verification process are possible. It is desirable that the challenger becomes aware, through the challenge, both of the value of the platform integrity metric and also of the method by which it was obtained. Both these pieces of information are desirable to allow the challenger to make a proper decision about the integrity of the platform. The challenger also has many different options available\u2014it may accept that the integrity metric is recognised as valid in the trusted device , or may alternatively only accept that the platform has the relevant level of integrity if the value of the integrity metric is equal to a value held by the challenger (or may hold there to be different levels of trust in these two cases).","The techniques of signing, using certificates, and challenge\/response, and using them to prove identity, are well known to those skilled in the art of security and therefore need not be described in any more detail herein.","In preferred arrangements of the system, a user employs a smart card  to verify a trusted platform. The processing engine of a smartcard suitable for use in accordance with the preferred embodiment is illustrated in . The processing engine comprises a processor  for enacting standard encryption and decryption functions, to support verification of information received from elsewhere. In the present embodiment, the processor  is an 8-bit microcontroller, which has a built-in operating system and is arranged to communicate with the outside world via asynchronous protocols specified through ISO 7816-3, 4, T=O, T=1 and T=14 standards. The smartcard also comprises non-volatile memory , for example flash memory, containing an identifier Iof the smartcard , a private key S, used for digitally signing data, and a certificate Cert, provided by a trusted third party certification agency, which binds the smartcard with public-private key pairs and includes the corresponding public keys of the smartcard  (the same in nature to the certificate Certof the trusted device ). Further, the smartcard contains \u2018seal\u2019 data SEAL in the non-volatile memory , which can be represented graphically by the trusted display processor  to indicate to the user that a process is operating securely with the user's smartcard, as will be described in detail below. In the present embodiment, the seal data SEAL is in the form of an image pixmap, which was originally selected by the user as a unique identifier, for example an image of the user himself, and loaded into the smartcard  using well-known techniques. The processor  also has access to volatile memory , for example RAM, for storing state information (such as received keys) and providing a working area for the processor , and an interface , for example electrical contacts, for communicating with a smart card reader.","Seal images can consume relatively large amounts of memory if stored as pixmaps. This may be a distinct disadvantage in circumstances where the image needs to be stored on a smartcard , where memory capacity is relatively limited. The memory requirement may be reduced by a number of different techniques. For example, the seal image could comprise: a compressed image, which can be decompressed by the trusted device ; a thumb-nail image that forms the primitive element of a repeating mosaic generated by the trusted device ; a naturally compressed image, such as a set of alphanumeric characters, which can be displayed by the trusted device  as a single large image, or used as a thumb-nail image as above. In any of these alternatives, the seal data itself may be in encrypted form and require the trusted device  to decrypt the data before it can be displayed. Alternatively, the seal data may be an encrypted index, which identifies one of a number of possible images stored by the host computer  or a network server. In this case, the index would be fetched by the trusted device  across a secure channel and decrypted in order to retrieve and display the correct image. Further, the seal data could comprise instructions (for example PostScript\u2122 instructions) that could be interpreted by an appropriately programmed trusted device  to generate an image.","As indicated above,  shows the flow of actions in an example of verification of platform integrity by a user interacting with the trusted platform with a smart card . As will be described, the process conveniently implements a challenge\/response routine. There exist many available challenge\/response mechanisms. The implementation of an authentication protocol used in the present embodiment is mutual (or 3-step) authentication, as described in ISO\/IEC 9798-3, \u201cInformation technology\u2014Security Techniques\u2014Entity authentication; Part 3: Mechanisms using digital signature techniques\u201d, International Organization for Standardization, 1998. Of course, there is no reason why other authentication procedures cannot be used, for example 2-step or 4-step, as also described in this reference.","Initially, the user inserts their smart card  into the smart card reader  of the platform in step .","Beforehand, a platform configured for use by users of in this way will typically be operating under the control of its standard operating system and executing the authentication process, which waits for a user to insert their smart card . Apart from the smart card reader  being active in this way, such a platform is typically rendered inaccessible to users by \u2018locking\u2019 the user interface (i.e. the screen, keyboard and mouse).","When the smart card  is inserted into the smart card reader , the trusted device  is triggered to attempt mutual authentication in step by generating and transmitting a nonce A to the smart card  in step . A nonce, such as a random number, is used to protect the originator from deception caused by replay of old but genuine responses (called a \u2018replay attack\u2019) by untrustworthy third parties.","In response, in step , the smart card  generates and returns a response comprising the concatenation of: the plain text of the nonce A, a new nonce B generated by the smart card , an ID of the trusted device  and some redundancy; the signature of the plain text, generated by signing the plain text with the private key of the smart card ; and a certificate containing the ID and the public key of the smart card .","The trusted device  authenticates the response by using the public key in the certificate to verify the signature of the plain text in step . If the response is not authentic, the process ends in step . If the response is authentic, in step  the trusted device  generates and sends a further response including the concatenation of: the plain text of the nonce A, the nonce B, an ID of the smart card  and the acquired integrity metric; the signature of the plain text, generated by signing the plain text using the private key of the trusted device ; and the certificate comprising the public key of the trusted device  and the authentic integrity metric, both signed by the private key of the TP.","The smart card  authenticates this response by using the public key of the TP and comparing the acquired integrity metric with the authentic integrity metric, where a match indicates successful verification, in step . If the further response is not authentic, the process ends in step .","If the procedure is successful, both the trusted device  has authenticated the smart card  and the smart card  has verified the integrity of the trusted platform and, in step , the authentication process executes the secure process for the user.","In certain types of interaction, the authentication process can end at this point. However, if a session is to be continued between the user and the trusted platform, it is desirable to ensure that the user remains authenticated to the platform.","Where continued authentication is required, the authentication process sets an interval timer in step . Thereafter, using appropriate operating system interrupt routines, the authentication process services the interval timer periodically to detect when the timer meets or exceeds a pre-determined timeout period in step .","Clearly, the authentication process and the interval timer run in parallel with the secure process. When the timeout period is met or exceeded, the authentication process triggers the trusted device  to re-authenticate the smart card , by transmitting a challenge for the smart card  to identify itself in step . The smart card  returns a certificate including its ID and its public key in step . In step , if there is no response (for example, as a result of the smart card  having been removed) or the certificate is no longer valid for some reason (for example, the smart card has been replaced with a different smart card), the session is terminated by the trusted device  in step . Otherwise, in step , the process from step  repeats by resetting the interval timer.","Additionally, or alternatively, in some embodiments it may be required that the user profile is encrypted and signed to protect privacy and integrity. If so, a secure data transfer protocol may be needed between the trusted device  and the smart card . There exist many available mechanisms for transferring secure credentials between two entities. A possible implementation, which may be used in the present embodiment, is secure key transport mechanisms from ISO\/IEC DIS 11770-3, \u201cInformation technology\u2014Security techniques\u2014Key management\u2014Part 3: Mechanisms using asymmetric techniques\u201d, International Organization for Standardization, March 1997.","Modifications of this verification process using other well-known challenge and response techniques can easily be achieved by the skilled person. Similarly, alternative verification processes can be used by parties interacting with the platform in a different manner (that is, other than as a user equipped with a smart card).","As described above, the trusted device  lends its identity and trusted processes to the host computer and the trusted display processor has those properties by virtue of its tamper-resistance, resistance to forgery, and resistance to counterfeiting. Only selected entities with appropriate authentication mechanisms are able to influence the processes running inside the trusted device . Neither an ordinary user of the host computer, nor any ordinary user or any ordinary entity connected via a network to the host computer may access or interfere with the processes running inside the trusted device . The trusted device  has the property of being \u201cinviolate\u201d.","It will be apparent from  that the frame buffer memory  is only accessible by the trusted display processor  itself, and not by the CPU . This is an important feature of the preferred embodiment, since it is imperative that the CPU , or, more importantly, subversive application programs or viruses, cannot modify the pixmap during a trusted operation. Of course, it would be feasible to provide the same level of security even if the CPU  could directly access the frame buffer memory , as long as the trusted display processor  were arranged to have ultimate control over when the CPU  could access the frame buffer memory . Obviously, this latter scheme would be more difficult to implement.","A typical process by which graphics primitives are generated by a host computer  will now be described by way of background. Initially, an application program, which wishes to display a particular image, makes an appropriate call, via a graphical API (application programming interface), to the operating system. An API typically provides a standard interface for an application program to access specific underlying display functions, such as provided by Windows NT\u2122, for the purposes of displaying an image. The API call causes the operating system to make respective graphics driver library routine calls, which result in the generation of graphics primitives specific to a display processor, which in this case is the trusted display processor . These graphics primitives are finally passed by the CPU  to the trusted display processor . Example graphics primitives might be \u2018draw a line from point x to point y with thickness z\u2019 or \u2018fill an area bounded by points w, x, y and z with a colour a\u2019.","The control program of the microcontroller  controls the microcontroller to provide the standard display functions to process the received graphics primitives, specifically:\n\n","Apart from the standard display functions, the control program includes a function to mix display image data deceived from the CPU  with trusted image data to form a single pixmap. The control program also manages interaction with the cryptographic processor.","The trusted display processor  forms a part of the overall \u2018display system\u2019 of the host computer ; the other parts typically being display functions of the operating system, which can be \u2018called\u2019 by application programs and which access the standard display functions of the graphics processor, and the VDU . In other words, the \u2018display system\u2019 of a host computer  comprises every piece of hardware or functionality which is concerned with displaying an image.","An embodiment of the present invention, which utilises trusted platform technology as described above with reference to , will now be described with reference to . Firstly, a conventional model for purchase of goods on the Internet will be described with reference to .",{"@attributes":{"id":"p-0090","num":"0104"},"figref":"FIG. 8","b":["101","109","1","106","103","110","1","106","101","103","102","111","104","112","113","103","1","106","105","114","115","118"]},{"@attributes":{"id":"p-0091","num":"0105"},"figref":["FIG. 9","FIG. 5"],"b":["1201","1209","1","1206","1201","1219","1202","1220","1202","1202","1201","1201","1210","1","1206","1202","1221","1203","1201","1203","1202","1211","1203","1202","1206","1205","1214","1215","1218"]},{"@attributes":{"id":"p-0092","num":"0106"},"figref":"FIG. 10","b":["1305","1301","1302","1306","1301","1304","1307","1302","1304","1309","1303","1304","1308","1303","1302"]},"While, as the skilled person will appreciate, the ideas of the invention have broader application for ease of discussion preferred embodiments are considered. In such preferred embodiments, smart cards are the security tokens held by consumers which interact with a trusted computing platform. The consumer platform connects with another trusted computing platform acting as an ISP (a broker) during the registration and payment procedures, and connects with the third trusted computing platform acting as a vendor. The following is an example of a scenario:","A trusted computing platform (e.g. a desktop PC) is based in a public place such as a coffee-house. A consumer wishes to buy some electronic goods (e.g. tickets, a newspaper, a magazine or music) which are supplied by the vendor. The public desktop PC runs continually so that any user may access the services provided. An icon depicting the service of purchasing electronic goods is offered.","If the consumer double-clicks on this icon with a mouse, a window appears asking him to insert his smart card or else cancel the request. If the consumer inserts his smart card into the reader, in a preferred arrangement an image with a special seal generated by the smart card and previously unknown to the PC is displayed on the screen, confirming to the consumer that the smart card is satisfied that the local PC can be trusted (using the functionality of a trusted display processor and a smart card seal image discussed above with reference to ). Optionally, this special image can further confirm to the consumer that the smart card is satisfied that the remote ISP platform can be trusted as well.","The consumer uses his favourite web browser (e.g. Internet Explorer or Netscape) to access the vendor's home page and to search for information of the particular goods he needs. After finding goods of a satisfactory price and quality, the consumer clicks, using the mouse, on a \u201cBuy Now\u201d icon. Then, an image with another special seal, again generated by the smart card and previously unknown to the PC, is displayed on the screen, confirming to the consumer that the smart card knows the price and product information. Associated with this image is a button, probably a hardware switch that the consumer must press in order to authorise continuing the procedure of purchasing goods. In response to pressing the button, the electronic goods are transferred to the PC. The consumer is able to read it or copy it to his floppy disk or send it to his home PC, but only with his smart card still inserted into the smart card reader.","In this preferred arrangement, there are five entities involved in the procedure of purchasing goods. They are an off-line certificate authority (CA), a consumer with a smart card (SC, for which name is User), a local PC (e.g. a public consumer PC) with a trusted component (TC), a remote ISP platform with a trusted component (TC) and a remote vendor platform with a trusted component (TC). The architecture and functionality of the trusted component and of the smart card are as discussed above with reference to .","For the purpose of authentication and key distribution, each entity has the following asymmetric key pairs: that CA has a RSA key pair for signature and verification, that SC has a RSA key pair for signature and verification and each of TC, TC and TC has two RSA key pairs respectively for signature-verification and encryption-decryption.","The following assumptions are made for trust relationships among the above entities:\n\n","A preferred protocol for implementing the preferred embodiment of the present invention is described blow. In the protocol, the following notations will be used:\n\n","Part 1 (TC and TC authenticate each other and check each other's integrity of platforms)",{"@attributes":{"id":"p-0102","num":"0131"},"tables":{"@attributes":{"id":"TABLE-US-00001","num":"00001"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"140pt","align":"center"}},{"@attributes":{"colname":"2","colwidth":"77pt","align":"left"}}],"thead":{"row":{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["1. TC3 \u2192 TC2:","CMD,"]},{"entry":[{},"N,"]},{"entry":[{},"Cert(TC3)"]},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}}]}}}}},"TC initiates the authentication protocol by sending TC a command CMD, a newly generated nonce Nand its certificate Cert(TC) (if TC hasn't got this certificate yet).",{"@attributes":{"id":"p-0104","num":"0133"},"tables":{"@attributes":{"id":"TABLE-US-00002","num":"00002"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"77pt","align":"center"}},{"@attributes":{"colname":"2","colwidth":"140pt","align":"left"}}],"thead":{"row":{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["2. TC2 \u2192 TC3:","N,"]},{"entry":[{},"IM,"]},{"entry":[{},"Cert(TC2),"]},{"entry":[{},"S(CMD, N, N, TC3, IM)"]},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}}]}}}}},"Upon receipt of Message , TC replies TC with another newly generated nonce N, the integrity metric of the ISP platform IM, its certificate Cert(TC) (if TC hasn't got this certificate yet) and a signature on a concatenation of CMD, N, N, TC and IM, i.e. S(CMD, N, N, TC, IM).",{"@attributes":{"id":"p-0106","num":"0135"},"tables":{"@attributes":{"id":"TABLE-US-00003","num":"00003"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"77pt","align":"center"}},{"@attributes":{"colname":"2","colwidth":"140pt","align":"left"}}],"thead":{"row":{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["3. TC3 \u2192 TC2:","IM,"]},{"entry":[{},"S(CMD, N, N, TC2, IM)"]},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}}]}}}}},"After receiving Message , TC verifies the signature by using the certified public key and integrity metric. If the verification is successful, TC replies TC with the integrity metric of the vendor platform IMand a signature on a concatenation of CMD, N, N, TC and IM, i.e. S(CMD, N, N, TC, IM). TC then verifies this signature in the same way. If the verification passes, TC and TC complete the authentication and integrity check.","This part of the protocol can be run when the ISP platform and the vendor platform start communicating to each other, and also can repeat during their communications.","Part 2 (authentication amongst SC, TC and TC, integrity check of platforms with TC and TC, and establishment of a temporary identity for TC and two session keys)","The consumer inserts the smart card in the consumer PC to make a purchase request, then",{"@attributes":{"id":"p-0111","num":"0140"},"tables":{"@attributes":{"id":"TABLE-US-00004","num":"00004"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"140pt","align":"center"}},{"@attributes":{"colname":"2","colwidth":"77pt","align":"left"}}],"thead":{"row":{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["4. TC1 \u2192 SC:","CMD,"]},{"entry":[{},"N,"]},{"entry":[{},"Cert(TC1)"]},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}}]}}}}},"TC initiates this part of the protocol by sending SC a command CMD, a newly generated nonce N, and its certificate Cert(TC) (if SC hasn't got this certificate yet).",{"@attributes":{"id":"p-0113","num":"0142"},"tables":{"@attributes":{"id":"TABLE-US-00005","num":"00005"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"140pt","align":"center"}},{"@attributes":{"colname":"2","colwidth":"77pt","align":"left"}}],"thead":{"row":{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["5. SC \u2192 TC1:","N,"]},{"entry":[{},"TC2,"]},{"entry":[{},"Cert(SC)"]},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}}]}}}}},"Upon receipt of Message , SC replies TC with another newly generated nonce N, the name of TC and its certificate Cert(SC) (if TC hasn't got this certificate yet). After receiving Message , the consumer PC connects to the remote ISP server, then",{"@attributes":{"id":"p-0115","num":"0144"},"tables":{"@attributes":{"id":"TABLE-US-00006","num":"00006"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"140pt","align":"center"}},{"@attributes":{"colname":"2","colwidth":"77pt","align":"left"}}],"thead":{"row":{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["6. TC2 \u2192 TC1:","N,"]},{"entry":[{},"Cert(TC2)"]},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}}]}}}}},"TC replies TC with a newly generated nonce Nand its certificate Cert(TC) (if TC hasn't got this certificate yet).",{"@attributes":{"id":"p-0117","num":"0146"},"tables":{"@attributes":{"id":"TABLE-US-00007","num":"00007"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"140pt","align":"center"}},{"@attributes":{"colname":"2","colwidth":"77pt","align":"left"}}],"thead":{"row":{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["7. TC1 \u2192 TC2:","CMD,"]},{"entry":[{},"N,"]},{"entry":[{},"Cert(SC),"]},{"entry":[{},"Cert(TC1)"]},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}}]}}}}},"To reply Message , TC sends TC the command CMD, the nonce Nand a certificate Cert(SC) forwarded from SC's message and its own certificate Cert(TC) (if TC does not have this certificate).",{"@attributes":{"id":"p-0119","num":"0148"},"tables":{"@attributes":{"id":"TABLE-US-00008","num":"00008"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"70pt","align":"center"}},{"@attributes":{"colname":"2","colwidth":"147pt","align":"left"}}],"thead":{"row":{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["8. TC2 \u2192 TC1:","IM,"]},{"entry":[{},"E(TID, SK1),"]},{"entry":[{},"S(CMD, N, N, User, TC1, IM,"]},{"entry":[{},"\u2003\u2003E(TID, SK1))"]},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}}]}}}}},"Upon receipt of Message , TC generates a random number as a temporary identity of TC, TID, and another random number as a session key, SK, and sends them to TC with the integrity metric of the ISP platform IMand a signature STC(CMD, N,N, User, TC, IM, E(TID, SK)).",{"@attributes":{"id":"p-0121","num":"0150"},"tables":{"@attributes":{"id":"TABLE-US-00009","num":"00009"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"70pt","align":"center"}},{"@attributes":{"colname":"2","colwidth":"147pt","align":"left"}}],"thead":{"row":{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["9. TC1 \u2192 SC:","N,"]},{"entry":[{},"IM,"]},{"entry":[{},"IM,"]},{"entry":[{},"Cert(TC2),"]},{"entry":[{},"E(SK2),"]},{"entry":[{},"S(CMD, N, N, User, TC2, IM,"]},{"entry":[{},"\u2003\u2003E(SK2)),"]},{"entry":[{},"E(TID, SK1),"]},{"entry":[{},"S(CMD, N, N, User, TC1, IM,"]},{"entry":[{},"E(TID, SK1))"]},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}}]}}}}},"After receiving Message , TC generates a random number as another session key which will be used to establish a secure channel between the consumer platform and the ISP platform, and then sends Message  to SC.",{"@attributes":{"id":"p-0123","num":"0152"},"tables":{"@attributes":{"id":"TABLE-US-00010","num":"00010"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"70pt","align":"center"}},{"@attributes":{"colname":"2","colwidth":"147pt","align":"left"}}],"thead":{"row":{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["10. SC \u2192 TC1:","S(CMD, N, N, N, TC1, TC2,"]},{"entry":[{},"\u2003\u2003E(TID, SK1), E(SK2))"]},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}}]}}}}},"Upon receipt of Message , SC verifies both signatures signed by TC and TC for two purposes of authentication and integrity check. If the verification passes, SC makes a signature S(CMD, N, N, N, TC, TC, E(TID, SK), E(SK)) including all the nonces being used in this session and two encrypted data respectively for TC and TC. Note that although SC is not able to decrypt these two encrypted data values it can verify that they have been included in the signatures signed by TC or TC. SC sends this signature to TC.",{"@attributes":{"id":"p-0125","num":"0154"},"tables":{"@attributes":{"id":"TABLE-US-00011","num":"00011"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"70pt","align":"center"}},{"@attributes":{"colname":"2","colwidth":"147pt","align":"left"}}],"thead":{"row":{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["11. TC1 \u2192 TC2:","E(SK2),"]},{"entry":[{},"S(CMD, N, N, N, TC1, TC2,"]},{"entry":[{},"\u2003\u2003E(TID, SK1), E(SK2))"]},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}}]}}}}},"After receiving Message , TC forwards the signature to TC with an encrypted session key E(SK). Then both TC and TC will verify SC's signature and decrypt the secret information. If this part of the protocol succeeds, TC and TC will share three secret data values TID, SK and SK.","Part 3 (purchase by using the temporary identity with on-line service provided by TC)","The consumer PC contacts the vendor platform to make a purchase request in the following way.",{"@attributes":{"id":"p-0129","num":"0158"},"tables":{"@attributes":{"id":"TABLE-US-00012","num":"00012"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"70pt","align":"center"}},{"@attributes":{"colname":"2","colwidth":"147pt","align":"left"}}],"thead":{"row":{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["12. TC1 \u2192 TC3:","CMD"]},{"entry":[{},"N,"]},{"entry":[{},"TC2,"]},{"entry":[{},"E(CMD, TC3, User, TID,"]},{"entry":[{},"\u2003\u2003S(CMD, N, User, TC3, TID))"]},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}}]}}}}},"TC generates a command CMD, a nonce Nand a signature S(CMD, N, User, TC, TID) including its temporary identity TID, and encrypts this signature with the public encryption key of TC. TC sends Message  to TC.",{"@attributes":{"id":"p-0131","num":"0160"},"tables":{"@attributes":{"id":"TABLE-US-00013","num":"00013"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"70pt","align":"center"}},{"@attributes":{"colname":"2","colwidth":"147pt","align":"left"}}],"thead":{"row":{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["13. TC3 \u2192 TC2:","CMD,"]},{"entry":[{},"N,"]},{"entry":[{},"N,"]},{"entry":[{},"TC3,"]},{"entry":[{},"E(CMD, N, TC3, User, TID,"]},{"entry":[{},"\u2003\u2003S(CMD, N, User, TC3, TID))"]},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}}]}}}}},"After receiving Message , TC is not able to decrypt it to get TC's signature. TC forwards the message to TC in Message  with a newly generated nonce N.",{"@attributes":{"id":"p-0133","num":"0162"},"tables":{"@attributes":{"id":"TABLE-US-00014","num":"00014"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"84pt","align":"center"}},{"@attributes":{"colname":"2","colwidth":"133pt","align":"left"}}],"thead":{"row":{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["14. TC2 \u2192 TC3:","E(CMD, TID, SK1,"]},{"entry":[{},"\u2003\u2003S(CMD3, N, TID, SK1))"]},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}}]}}}}},"Upon receipt of Message , TC decrypts it, verifies the signature and checks TID against the list of current temporary identities. If these verification checks all pass, TC signs TID and SK and encrypts the signature with the public encryption key of TC and sends the encryption data to TC.",{"@attributes":{"id":"p-0135","num":"0164"},"tables":{"@attributes":{"id":"TABLE-US-00015","num":"00015"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"77pt","align":"center"}},{"@attributes":{"colname":"2","colwidth":"140pt","align":"left"}}],"thead":{"row":{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["15. TC3 \u2192 TC1:","N,"]},{"entry":[{},"E\u2032(CMD, N, N, TID, TC3)"]},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}}]}}}}},"After receiving Message , TC decrypts it and verifies the signature included. If the verification is successful, it retrieves TID and SK as secret information shared with TC. Then TC generates a nonce Nfor challenging TC and sends Message  to TC.",{"@attributes":{"id":"p-0137","num":"0166"},"tables":{"@attributes":{"id":"TABLE-US-00016","num":"00016"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"133pt","align":"center"}},{"@attributes":{"colname":"2","colwidth":"70pt","align":"left"}}],"thead":{"row":{"entry":[{},{"@attributes":{"namest":"offset","nameend":"2","align":"center","rowsep":"1"}}]}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"16. TC1 \u2192 SC:","CMD,"]},{"entry":[{},{},"N"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"2","align":"center","rowsep":"1"}}]}]}}}}},"After receiving Message , TC decrypts it by using the shared session key SK and checks if the message has the correct format and includes a proper TID and nonce N. If the check succeeds, TC sends Message  to SC to get the consumer's confirmation of the purchase. CMDincludes all information needed for the purchase. Before sending Message  the consumer verifies that he wants to continue with the transaction by displaying information contained in CMDand using a special confirmation switch (this technique has been disclosed in the prior patent application EP 99304164.9).",{"@attributes":{"id":"p-0139","num":"0168"},"tables":{"@attributes":{"id":"TABLE-US-00017","num":"00017"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"105pt","align":"center"}},{"@attributes":{"colname":"2","colwidth":"112pt","align":"left"}}],"thead":{"row":{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["17. SC \u2192 TC1:","S(CMD, N, TC1)"]},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}}]}}}}},"The SC signs related information and sends this signature to TC in Message .",{"@attributes":{"id":"p-0141","num":"0170"},"tables":{"@attributes":{"id":"TABLE-US-00018","num":"00018"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"91pt","align":"center"}},{"@attributes":{"colname":"2","colwidth":"126pt","align":"left"}}],"thead":{"row":{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["18. TC1 \u2192 TC3:","E\u2032(CMD, N, N, TC2)"]},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}}]}}}}},"After receiving Message  and verifying the signature included, TC sends an acknowledgement to TC.","Note that during the flow of this protocol, if any verification or check is not successful, the corresponding verifier will make an announcement to let the other entities know what happens and then the protocol aborts.","Alternative protocols can be employed without deviating from the present invention. The skilled man will appreciate that the use of hardware to ensure confidence in trusted relationships allows for a particularly effective method for brokering transactions as shown above, by allowing trusted relationships to be leveraged without proliferation of exchanges of personal information."],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"p":["Embodiments of the present invention will now be described, by way of example, with reference to the accompanying drawings, in which:",{"@attributes":{"id":"p-0013","num":"0017"},"figref":"FIG. 1"},{"@attributes":{"id":"p-0014","num":"0018"},"figref":["FIG. 2","FIG. 1"]},{"@attributes":{"id":"p-0015","num":"0019"},"figref":"FIG. 3"},{"@attributes":{"id":"p-0016","num":"0020"},"figref":"FIG. 4"},{"@attributes":{"id":"p-0017","num":"0021"},"figref":"FIG. 5"},{"@attributes":{"id":"p-0018","num":"0022"},"figref":"FIG. 6"},{"@attributes":{"id":"p-0019","num":"0023"},"figref":["FIG. 7","FIG. 6"]},{"@attributes":{"id":"p-0020","num":"0024"},"figref":"FIG. 8"},{"@attributes":{"id":"p-0021","num":"0025"},"figref":"FIG. 9"},{"@attributes":{"id":"p-0022","num":"0026"},"figref":["FIG. 10","FIG. 9"]}]},"DETDESC":[{},{}]}
