---
title: Simulation system including a simulator and a case manager adapted for organizing data files for the simulator in a non-conventional tree like structure
abstract: A simulation system includes a case manager adapted for organizing and managing a plurality of sets of input data being used by the simulation system. The case manager includes a plurality of case scenarios organized in a tree-like structure, some case scenarios being supersets of other case scenarios in the tree-like structure. An operator selects one or more of the case scenarios in the case manager. A case builder receives keywords associated with the one or more of the case scenarios selected by the operator allowing the operator to edit or change the keywords from the selected case scenarios when necessary and generates a set of edited keywords representing edited case scenarios. A run manager submits the edited case scenarios to a simulator which generates a set of simulation results that are stored in a results file for subsequent display and viewing.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=07561997&OS=07561997&RS=07561997
owner: Schlumberger Technology Corporation
number: 07561997
owner_city: Houston
owner_country: US
publication_date: 19990316
---

{"@attributes":{"id":"description"},"BRFSUM":[{},{}],"heading":["BACKGROUND OF THE INVENTION","SUMMARY OF THE INVENTION","DETAILED DESCRIPTION OF THE PREFERRED EMBODIMENT"],"p":["The subject matter of the present invention relates to a reservoir simulator apparatus and associated method responsive to a set of data for simulating an earth formation located in the vicinity of an oilfield reservoir and for displaying a set of simulation results in response to the simulation, and, more particularly, to a system including a case manager apparatus adapted for organizing and managing a set of test data used by the reservoir simulator, the simulator generating a set of simulation results and displaying the simulation results in response to the data.","Reservoir modeling is performed in order to predict the degree of underground deposits of hydrocarbon bearing formations in an earth formation. Typically, well logging operations are performed in the formation thereby producing well log data, and seismic operations are performed on the formation thereby producing seismic data. The seismic data is reduced thereby producing reduced seismic data. The well log data and the reduced seismic data are introduced, as input data, to a computer workstation which stores a gridding software and a simulator software. A gridding software, hereinafter known as \u201cthe Flogrid software\u201d or the \u201cFlogrid gridding software\u201d, is disclosed in prior pending U.S. patent application Ser. No. 09\/034,701, filed in the U.S. on Mar. 4, 1998, which is based on a Great Britain patent application number 9727288.4 filed Dec. 24, 1997, the disclosure of which is incorporated by reference into this specification. The \u201cFlogrid\u201d gridding software includes another gridding software known as \u201cPetragrid\u201d. The \u201cPetragrid\u201d gridding software is disclosed in prior pending U.S. patent application Ser. No. 08\/873,234 filed Jun. 11, 1997, the disclosure of which is also incorporated by reference into this specification. The gridding software will respond to the reduced seismic data and the well log data by gridding the earth formation which was subjected to the well log operation and the seismic operation. The type of grids imposed on the earth formation include structured (approximately rectangular) grids and unstructured (tetrahedral) grids. A property, such as permeability or water saturation, is assigned to each cell or grid block of the grid. As a result, a set of output data is generated by the gridding software, the set of output data including the plurality of cells\/grid blocks of the grid and the respective plurality of properties associated with each of the cells of the grid. The set of output data from the gridding software are introduced, as input data, to a reservoir simulator software. The reservoir simulator software will respond to the set of output data from the gridding software by generating a plurality of simulation results which are associated, respectively, with the plurality of cells\/grid blocks of the grid received from the gridding software. The plurality of simulation results and the plurality of cells\/grid blocks associated therewith, generated by the reservoir simulator software, will be displayed on a 3D viewer of the workstation for observation by a workstation operator. Alternatively, the plurality of simulation results and the plurality of cells\/grid blocks associated therewith can be recorded for observation by a workstation recorder.","The reservoir simulator software can model an oilfield reservoir. For example, in the Society of Petroleum Engineers (SPE) publication number 28545, concerning a transient tool for multiphase pipeline and well simulation, dated 1994, the authors have solved for pressure losses along a single pipeline using a technique related to conservation of material and conservation of pressure.","A similar technique has been applied to a network of pipelines or flowlines in the Society of Petroleum Engineers (SPE) publication number 29125, authored by Litvak and Darlow. In this publication, the authors (Litvak and Darlow) have taken a network model (i.e., a network of pipelines) in which the pressure losses along the network branches can either be calculated from tables or from an analytical model, and the analytical model solves for three (3) conservations and pressures. In addition, in an article by the \u201cSociety of Petroleum Engineers\u201d (SPE) 12259, each well being modeled in that article was characterized by three (3) variables: pressure, water fraction, and gas fraction.","As noted above, the set of output data from the gridding software (including the plurality of cells\/grid blocks of the grid and the respective plurality of properties associated with each of the cells of the grid) are introduced, as input data, to the reservoir simulator software, and, responsive thereto, the reservoir simulator will generate a first set of simulation results which will be displayed for viewing by an operator. Another set of input data will subsequently be input to the reservoir simulator, and a second set of simulation results will be displayed for viewing by the operator. Still another set of input data will subsequently be input to the reservoir simulator, and a third set of simulation results will be displayed for viewing by the operator.","However, advances in technology over the last few years have meant that today's reservoir engineer is faced with managing more data and making better informed decisions in a shorter time than ever before. Technology has enabled more data to be incorporated, more complex models to be built, and more realizations to be studied. As a result, more data must be managed, more models must be created, and more results must be analyzed. Consequently, a reservoir engineer must continuously remember and keep track of a multitude of sets of input data which are being input to a reservoir simulator.","Therefore, some type of method and apparatus for automatically organizing and managing the input data (which are being input to the reservoir simulator) is necessary, and that apparatus would allow the reservoir engineer to efficiently manage the input data while creating new models and analyzing the results generated from those models.","Accordingly, it is a primary object of the present invention to provide a new and novel method and apparatus, hereinafter called a \u201ccase manager\u201d, for automatically organizing and managing a plurality of sets of input data which are being provided to a reservoir simulator in order to allow a reservoir engineer to efficiently organize and manage that input data while creating new models and analyzing a plurality of sets of results generated from those new models.","In accordance with the above referenced object, it is a primary aspect of the present invention to provide a simulation system and associated method, which is responsive to a plurality of sets of input data, for simulating an earth formation located in the vicinity of an oilfield reservoir, generating a set of simulation results in response to the simulation, and displaying the set of simulation results, the simulation system including a case manager adapted for organizing and managing the plurality of sets of input data being used by the simulation system.","It is a further aspect of the present invention to provide the above referenced simulation system, wherein the case manager includes a plurality of case scenarios organized in a tree-like structure, some case scenarios being supersets of other case scenarios in the tree-like structure, an operator selecting one or more of the case scenarios in the case manager for submission to a simulator.","It is a further aspect of the present invention to provide the above referenced simulation system, wherein the simulation system further includes a case builder adapted for receiving the one or more of the case scenarios selected by the operator via the case manager, editing and\/or changing a set of data disposed within the selected case scenarios in response to editing actions taken by the operator, and, responsive thereto, for generating a set of edited case scenarios for submission to the simulator.","It is a further aspect of the present invention to provide the above referenced simulation system, wherein the simulation system further includes said simulator adapted to be executed, a run manager interposed between the case builder and the simulator and responding to the set of edited case scenarios from the case builder for submitting the edited case scenarios from the case builder to the simulator and monitoring the edited case scenarios submitted to the simulator, and a results viewer\/report generator for viewing and reporting the simulation results generated by the simulator, the simulator using the edited case scenarios during its execution to thereby generate a set of simulation results, the set of simulation results from the simulator being stored in a results file, the results viewer displaying the set of simulation results stored in the results file, the set of simulation results in the results file being transmitted back to the run manager, the run manager enabling the operator to compare the edited case scenarios being submitted by the case builder to the simulator with the set of simulation results generated by the simulator and stored in the results file thereby allowing the operator to select one or more additional case scenarios via the case manager, as desired, for submission to the case builder, to the run manager, and to the simulator.","It is a further aspect of the present invention to provide the above referenced simulation system, wherein the simulation system responds to the set of simulation results generated by the simulator by displaying or reporting those simulation results, the simulation system including the results viewer for displaying the set of simulation results generated by the simulator and a report generator for generating one or more reports which record the set of simulation results, the results viewer displaying not only the set of simulation results but also any instantaneous changes being made to the set of simulation results at any point in time.","In accordance with these and other aspects of the present invention, a \u201csimulation system\u201d includes a workstation and a simulator (called \u201cEclipse\u201d) which is a software package that is adapted to be stored in a memory of the workstation. The \u201cEclipse\u201d simulator is originally stored on a CD-Rom, the simulator being subsequently loaded from the CD-Rom and stored in the memory of the workstation. The simulator will respond to certain \u201cinput data\u201d during the pendency of its execution, and a resultant set of simulation results will be displayed on a 3D viewer.","In a prior pending application, a gridding software, known as \u201cFlogrid\u201d, generated a set of output data, the set of output data including a plurality of cells\/grid blocks of a grid and a respective plurality of properties associated with each of the cells of the grid. The set of output data from \u201cFlogrid\u201d are introduced, as the \u201cinput data\u201d, to the simulator. The simulator responds to that \u201cinput data\u201d by generating a plurality of simulation results which are associated, respectively, with the plurality of cells\/grid blocks of the grid received from the \u201cFlogrid\u201d gridding software. The plurality of simulation results and the plurality of cells\/grid blocks associated respectively therewith, generated by the simulator, are displayed on a 3D viewer of a workstation for observation by a workstation operator. The prior pending application is U.S. patent application Ser. No. 09\/034,701, filed in the U.S. on Mar. 4, 1998 based on Great Britain patent application number 9727288.4 filed Dec. 24, 1997, the disclosure of which has already been incorporated by reference into this specification.","However, in addition to the \u201cEclipse\u201d simulator, the \u201csimulation system\u201d further includes a \u201cdisplay means\u201d operatively connected to the simulator for displaying or reporting the set of simulation results generated by the simulator and an \u201corganizing and managing system\u201d (known as \u201cEclipse Office\u201d), in accordance with the present invention, operatively interconnected between the Flogrid gridding software and the simulator for organizing and managing the \u201cinput data\u201d from the gridding software that is ultimately input to the simulator and for enabling a comparison of the set of simulation results generated by the simulator with other types of the \u201cinput data\u201d. The Eclipse Office \u201corganizing and managing system\u201d, in accordance with the present invention, further includes the following components: a case\/project manager in accordance with one aspect of the present invention adapted for organizing and managing a set of input data being introduced as input data to the simulator, the case manager organizing and managing the set of input data by storing the set of input data in the case manager in the form of a \u201ctree like structure\u201d, a case builder\/data manager, a run manager, and a results file. The \u201cdisplay means\u201d is operatively connected to the results file and further includes a results viewer and a report generator.","In operation, the case\/project manager of the simulation system in accordance with one aspect of the present invention stores a plurality of different scenarios of test \u201cinput data\u201d, that test \u201cinput data\u201d being stored in the case\/project manager in the form of a \u201ctree-like\u201d structure. As a result of the tree-like structure, the case\/project manager will neatly organize and manage, for the operator, the test input data thereby enabling an operator of the workstation to select one or more of the different sets or supersets of the test input data stored in the tree like structure for introduction to the simulator. When the operator selects one or more of the test input data in the tree like structure of the case\/project manager, that input data is temporarily stored in the case builder\/data manager. The operator can now edit, via the case builder, the test input data that is temporarily stored in the case builder\/data manager. Alternatively, other input data from other \u201cpre-processor\u201d programs (in addition to the input data from \u201cFlogrid\u201d) can be temporarily stored in the case builder\/data manager and can be edited by the operator via the case builder\/data manager. Alternatively, other \u201craw data\u201d can be temporarily stored in the case builder\/data manager and the operator can edit, via the case builder, that other raw data. When the \u201cinput data\u201d in the case builder\/data manager has been edited as desired by the operator, that \u201cedited input data\u201d is sent to the run manager, the run manager submitting that \u201cedited input data\u201d to the simulator. The run manager will monitor the \u201cedited input data\u201d submitted to the simulator. A processor of the workstation will execute the simulator software and, during that execution, the processor will simultaneously use the \u201cedited input data\u201d supplied to the simulator by the run manager. When the execution of the simulator software is complete, a \u201cset of simulation results\u201d will be generated by the simulator. That \u201cset of simulation results\u201d will be stored in a \u201cresults file\u201d of the simulation system. That \u201cset of simulation results\u201d stored in the \u201cresults file\u201d will be transmitted back to the run manager where the operator will be able to compare via the run manager the \u201cset of simulation results\u201d stored in the results file with the \u201cedited input data\u201d being supplied by the case builder to the simulator. In addition, the \u201cset of simulation results\u201d stored in the results file will be simultaneously transmitted from the results file to the results viewer thereby allowing the workstation operator to view the \u201cset of simulation results\u201d stored in the results file. Based on that comparison, the operator at the workstation can then select \u201cother test input data\u201d stored in the tree like structure of the case\/project manager and run that \u201cother test input data\u201d through the simulator in order to generate \u201cother sets of simulation results\u201d which can be stored in the results file and monitored via the run manager. That \u201cother set of simulation results\u201d from the results file can be sent to a results viewer on a workstation display for displaying the \u201cother set of simulation results\u201d and the \u201cother set of simulation results\u201d can be sent to a report generator for recording that \u201cother set of simulation results\u201d in the form of a written report that can be provided to the operator.","Further scope of applicability of the present invention will become apparent from the detailed description presented hereinafter. It should be understood, however, that the detailed description and the specific examples, while representing a preferred embodiment of the present invention, are given by way of illustration only, since various changes and modifications within the spirit and scope of the invention will become obvious to one skilled in the art from a reading of the following detailed description.","Referring to , a method and apparatus for performing a seismic operation is illustrated. During a seismic operation, a source of acoustic energy or sound vibrations , such as an explosive energy source , produces a plurality of sound vibrations. In , one such sound vibration  reflects off a plurality of horizons  in an earth formation . The sound vibration(s)  is (are) received in a plurality of geophone-receivers  situated on the earth's surface, and the geophones  produce electrical output signals, referred to as \u201cdata received\u201d  in , in response to the received sound vibration(s)  representative of different parameters (such as amplitude and\/or frequency) of the sound vibration(s) . The \u201cdata received\u201d  is provided as \u201cinput data\u201d to a computer of a recording truck , and, responsive to the \u201cinput data\u201d, the recording truck computer generates a \u201cseismic data output record\u201d . Later in the processing of the seismic data output record , such seismic data undergoes \u201cdata reduction\u201d  in a mainframe computer, and a \u201creduced seismic data output record\u201d is generated from that data reduction operation .","Referring to , another method and apparatus for performing a seismic operation is illustrated.  was taken from a book entitled \u201cSeismic Velocity Analysis and the Convolutional Model\u201d, by Enders A. Robinson, the disclosure of which is incorporated by reference into this specification.","In , the seismic operation of  is performed 10 different times. For example, when the explosive or acoustic energy source  is located at position  (the first position or position \u201c\u201d along the surface of the earth) in , a first plurality of electrical signals from the geophones  are stored in the computer in the recording truck . The explosive energy source is moved to position . When the explosive energy source  is located in position  (the second position or position \u201c\u201d along the surface of the earth), a second plurality of electrical signals are stored in the computer in the recording truck . The explosive energy source  is repeatedly and sequentially moved from positions \u201c\u201d to \u201c\u201d in  until it is located at position  (i.e.\u2014position \u201c\u201d which is the tenth position) on the surface of the earth. When the explosive energy source  is located in position  (the tenth position along the surface of the earth), a tenth plurality of electrical signals are stored in the computer in the recording truck . As a result, in , the recording truck  of  records a \u201cset of 3D seismic data\u201d which consists of the 10 traces or ten sets of electrical signals, where each set of electrical signals comprises a plurality of electrical signals that originated from subsurface locations situated between position  and position  along the surface of the earth. A seismic data output record  will be generated by the computer in the recording truck  which includes the \u201cset of 3D seismic data\u201d received from the geophones . The method and apparatus described above with reference to  an  represent a \u201c3D seismic operation\u201d.","Referring to , the seismic data output record  of  is provided as \u201cinput data\u201d to a mainframe computer  where the data reduction operation  of  is performed. A mainframe processor will execute a data reduction software stored in a mainframe storage . When the execution of the data reduction software is complete, the reduced seismic data output record of  is generated.","Referring to and , a flowchart of the data reduction software stored in the mainframe storage of the mainframe computer  of  is illustrated. The data reduction software flowchart of and is taken from a book entitled \u201cSeismic Velocity Analysis and the Convolutional Model\u201d by Enders A. Robinson, the disclosure of which has already been incorporated by reference into this specification.","In and , the flowchart of the data reduction software includes the following blocks: a demultiplexing block  connected to the input, a sorting block , a gain removal block , a frequency filtering block , a resampling block , a trace selection block , an output  labelled \u201cselected gathers (velocity analyses)\u201d, amplitude correction , deconvolution , a second output  labelled \u201cCMP sorted traces after deconvolution\u201d, a time corrections block , an AGC block , a stacking block , a third output  labelled \u201cstacked traces (unfiltered)\u201d, a frequency filtering block , another AGC block , a fourth output  labelled \u201cstacked traces (filtered)\u201d, a second input labelled \u201cdip information\u201d , a trace interpolation block , a migration block , a fifth output  labelled \u201cmigrated traces (unfiltered)\u201d, a frequency filtering block , an AGC block , a sixth output  labelled \u201cmigrated traces (filtered)\u201d, a time to depth correction block , and a seventh output  labelled \u201cmigrated traces (depth migrated)\u201d. In the flowchart of and , any of the outputs , , , , , , and  can be used as the \u201creduced seismic data output record\u201d which is being provided as input data to the workstation discussed below and illustrated in  of the drawings.","Referring to , a well logging operation is illustrated. During the well logging operation, a well logging tool  is lowered into the earth formation  of  which is penetrated by a borehole . In response to the well logging operation, well log data  is generated from the well logging tool , the well log data  being provided as \u201cinput data\u201d to a computer of a well logging truck . Responsive to the well log data , the well logging truck computer produces a \u201cwell log output record\u201d .","Referring to , a workstation  is illustrated in . A storage medium , such as a CD-Rom , stores software, and that software can be loaded into the workstation  for storage in the memory of the workstation. In , the workstation  includes a workstation memory , the software stored on the storage medium (CD-Rom)  being loaded into the workstation  and stored in the workstation memory . A workstation processor will execute the software stored in the workstation memory in response to certain input data provided to the workstation processor , and then the processor will display or record the results of that processing on the workstation \u201crecorder or display or 3D viewer\u201d . The input data, that is provided to the workstation  in , includes the well log output record  and the reduced seismic data output record . The \u201cwell log output record\u201d  represents the well log data generated during the well logging operation in an earth formation of , and the \u201creduced seismic data output record\u201d represents data-reduced seismic data generated by the mainframe computer  in  in response to the seismic operation illustrated in . In , the software stored on the storage medium (CD-Rom)  in  includes a \u201cFlogrid\u201d software and an \u201cEclipse\u201d simulator software . When the storage medium (CD-Rom)  is inserted into the workstation  of , the \u201cFlogrid\u201d software and the \u201cEclipse\u201d simulator software , stored on the CD-Rom , are both loaded into the workstation  and stored in the workstation memory . The \u201cFlogrid\u201d software is fully described and set forth in pending U.S. patent application Ser. No. 09\/034,701, filed in the U.S. on Mar. 4, 1998, which is based on prior pending Great Britain patent application number 9727288.4 filed Dec. 24, 1997, the disclosure of which is incorporated by reference into this specification. When the workstation processor executes the Flogrid software and the Eclipse simulator software , the \u201cEclipse\u201d simulator software responds to a set of more accurate grid cell property information associated with a respective set of grid blocks of a structured simulation grid generated by the \u201cFlogrid\u201d software by further generating a set of more accurate simulation results which are associated, respectively, with the set of grid blocks of the simulation grid. Those simulation results are displayed on the 3D viewer of  and can be recorded on a recorder ","Referring to , referring initially to , the Flogrid software and the Eclipse simulator software are illustrated as being stored in the workstation memory of . In addition, in , the \u201csimulation results\u201d, which are output from the Eclipse simulator software in , are illustrated as being received by and displayed on the 3D viewer of .","In , the Flogrid software includes a reservoir data store, a reservoir framework, a structured gridder, an unstructured gridder, and an upscaler, all of which are fully discussed in the above referenced prior pending U.S. patent application Ser. No. 09\/034,701, filed in the U.S. on Mar. 4, 1998, the disclosure of which has already been incorporated by reference into this specification. A set of \u201csimulation grids and properties associated with the grids\u201d , generated by the upscaler and the \u201cPetragrid\u201d unstructured gridder, are received in the Eclipse simulator software . In response, the Eclipse simulator software generates a \u201cset of simulation results associated, respectively, with a set of grid blocks of the simulation grids\u201d , and the simulation results and the associated grid blocks  are displayed on the 3D viewer ","In , an example of the \u201cset of simulation results associated, respectively, with a set of grid blocks of the simulation grids\u201d , which are displayed on the 3D viewer of the workstation  of , , and , is illustrated.","Referring to , the Eclipse Office software of the present invention is discussed in the following paragraphs with reference to  of the drawings.","In , the workstation  of  is illustrated again. However, in , the storage medium (CD-Rom)  stores the Flogrid software , the Eclipse simulator software , and the Eclipse Office software of the present invention interposed between the Flogrid software and the Eclipse simulator software . When the CD-Rom  is inserted into the workstation , the Eclipse Office software in addition to the Flogrid software and the Eclipse simulator software are loaded from the storage medium (CD-Rom)  into the workstation memory of . As a result, as shown in , the workstation memory now stores three software packages: the Flogrid software , the Eclipse office software of the present invention, and the Eclipse simulator software ","In , the Flogrid software , the Eclipse office software and the Eclipse simulator software stored in the workstation memory of  is again illustrated. In operation, referring to , the Flogrid software passes certain data files to the Eclipse office software of the present invention. In response, the Eclipse office software passes edited versions of those same data files to the Eclipse simulator software . When the Eclipse simulator software is executed by the workstation processor of , the simulator software uses the edited versions of the data files received from the Eclipse office software . In response, simulation results are generated by the Eclipse simulator software , and those simulation results are passed back to the Eclipse office software , the Eclipse office software displaying the simulation results on a recorder or display or 3D viewer . The recorder or display or 3D viewer functions to \u201cdisplay or report results\u201d . Consequently, the simulation results generated by the Eclipse simulator software and passed through the Eclipse office software will be displayed or reported via the \u201cdisplay or report results\u201d  in .","In operation, in , the Eclipse Office software receives the data files associated with the raw data  and the data files generated by the pre-processor programs  and, responsive thereto, the Eclipse Office software will collect all such data files and pass edited versions of such data files to the Eclipse simulator software . The Eclipse simulator software is executed by workstation processor of . However, during the execution of the Eclipse simulator software by the workstation processor of , the Eclipse simulator software will receive and utilize the data files associated with the raw data  of  and\/or the data files generated by the pre-processor programs  of ; and, during that execution of the Eclipse simulator software , in response to these aforementioned data files, the Eclipse simulator software will be generating a \u201cset of simulation results\u201d. That \u201cset of simulation results\u201d will be passed back from the Eclipse simulator software to the Eclipse Office software . When the Eclipse Office software receives that \u201cset of simulation results\u201d, the Eclipse Office software will be re-transmitting that \u201cset of simulation results\u201d to the \u201crecorder or display or 3D viewer\u201d of  for displaying and\/or recording that \u201cset of simulation results\u201d on the 3D viewer at each instantaneous point in time. Bear in mind that the \u201cset of simulation results\u201d will be generated from the Eclipse simulator software during its execution by the workstation processor , and that \u201cset of simulation results\u201d will be instantaneously displayed, by the Eclipse Office software at each point in time, on the \u201crecorder or display or 3D viewer\u201d of . As a result, the Eclipse Office software will instantaneously \u201cdisplay or report results\u201d  in response to the raw data files  and\/or in response to the data files provided by the pre-processor programs , both during and after the execution of the Eclipse simulator software by the workstation processor . Refer now to  for a more complete description of this functional operation.","The SCAL pre-processor program , licensed and\/or sold by GeoQuest, a division of Schlumberger Technology Corporation, is a tool to help engineers effectively use lab derived relative permeability and capillary pressure measurements in reservoir simulation. The Schedule  pre-processor program , also licensed and\/or sold by GeoQuest, a division of Schlumberger Technology Corporation, enables engineers to accurately and efficiently prepare well production and completion data that is used by the Eclipse simulator software . The Schedule program  helps users to access well data from industry standard and company databases and transform it into well and group control keywords that the Eclipse simulator software understands. The VFPi pre-processor program  (\u201cVertical Flow Performance Modeling Program\u201d) enables engineers to construct the comprehensive lift curves used by the Eclipse simulator software to calculate pressure losses in wells and gathering system networks.","In operation, in , the Eclipse Office software receives the data files associated with the raw data  and the data files generated by the pre-processor programs  and, responsive thereto, the Eclipse Office software will collect all such data files and pass edited versions of such data files to the Eclipse simulator software . The Eclipse simulator software be executed by workstation processor of . However, during the execution of the Eclipse simulator software by the workstation processor of , the Eclipse simulator software will receive and utilize the data files associated with the raw data  of  and\/or the data files generated by the pre-processor programs  of ; and, during that execution of the Eclipse simulator software , in response to these aforementioned data files, the Eclipse simulator software will be generating a \u201cset of simulation results\u201d. That \u201cset of simulation results\u201d will be passed back from the Eclipse simulator software to the Eclipse Office software . When the Eclipse Office software receives that \u201cset of simulation results\u201d, the Eclipse Office software will be re-transmitting that \u201cset of simulation results\u201d to the \u201crecorder or display or 3D viewer\u201d of  for displaying and\/or recording that \u201cset of simulation results\u201d on the 3D viewer at each instantaneous point in time. Bear in mind that the \u201cset of simulation results\u201d will be generated from the Eclipse simulator software during its execution by the workstation processor , and that \u201cset of simulation results\u201d will be instantaneously displayed, by the Eclipse Office software at each point in time, on the \u201crecorder or display or 3D viewer\u201d of . As a result, the Eclipse Office software will instantaneously \u201cdisplay or report results\u201d  in response to the raw data files  and\/or in response to the data files provided by the pre-processor programs , both during and after the execution of the Eclipse simulator software by the workstation processor . Refer now to  for a more complete description of this functional operation.","In , the Eclipse Office software of  includes a case\/project manager , a case builder\/data manager , a run manager , and a results file . The \u201cdisplay or report results\u201d  generated on the \u201crecorder or display or 3D viewer\u201d  of  includes a results viewer A and a report generator B. In , in response to an \u201coutput\u201d generated from the run manager  (where said \u201coutput\u201d consists of a plurality of data files, possibly including a plurality of \u2018test data\u2019 files compiled by the case manager , intended to be used by the Eclipse simulator software during its execution), the Eclipse simulator software will be executed by the workstation processor of  and, responsive to that execution, the Eclipse simulator software of  will generate a \u201cset of simulation results\u201d. That \u201cset of simulation results\u201d will be stored in the \u201cresults file\u201d  of the Eclipse office software . That \u201cset of simulation results\u201d stored in the results file  will be read by the results viewer A and the report generator B of . As a consequence, the results viewer A will display a \u201cset of results\u201d and the report generator B will report or record that \u201cset of results\u201d on the \u201crecorder or display or 3D viewer\u201d of .","The functions provided by the case manager , the case builder , the run manager , and the results files  in addition to the results viewer A and the report generator B, will become evident in the following paragraphs with reference to  of the drawings.","In , a dialog or screen display, which is produced on the \u201crecorder or display or 3D viewer\u201d of  by the case\/project manager  of , is illustrated. This screen display depicts the manner by which the case\/project manager  structures the storage therein of the various data files or \u201ccase scenarios\u201d that are used by the simulator software . In , the screen display which is generated by the case\/project manager  of  consists of a plurality of \u201ctest data files\u201d or \u201ccase scenarios\u201d arranged in a \u201ctree-like structure\u201d. For example, in , one test data file is called \u201cnew\u201d . The \u201cnew\u201d test data file  can be divided into two sub-parts: a first subpart test data file \u201cnew-\u201d  and a second subpart test data file \u201cnew-\u201d , the \u201cnew-\u201d  and the \u201cnew-\u201d  data files being two different supersets of the \u201cnew\u201d  data file. The first subpart\/test data file \u201cnew-\u201d  is subdivided into two further test data files: \u201cnew--\u201d  and \u201cnew--\u201d , each being a different superset of the \u201cnew-\u201d  data file. The \u201cnew--\u201d test data file  can be subdivided into two further sub-parts\/data files: a \u201cnew---\u201d test data file  and a \u201cnew---\u201d test data file , each being a different superset of the \u201cnew--\u201d  data file. The other subparts\/data files are also subdivided in a similar manner; for example, the \u201cnew--\u201d subpart\/data file  is divided into two further data files: the \u201cnew---\u201d subpart\/data file  and the \u201cnew---\u201d subpart\/data file , each being a different superset of the \u201cnew--\u201d  data file. The \u201cnew-\u201d subpart\/data file  is divided into three other subparts\/data files: the \u201cnew--\u201d  data file, the \u201cnew--\u201d  data file, and the \u201cnew--\u201d  data file, each being a different superset of the \u201cnew-\u201d data file ; and the subpart\/data file \u201cnew--\u201d  is itself subdivided into yet another subpart\/data file: the \u201cnew---\u201d  which is a superset of the \u201cnew--\u201d  data file.","In accordance with one major aspect of the present invention, the subdivisions of \u201ctest data files\u201d or \u201ccase scenarios\u201d illustrated in the case\/project manager  screen display of  indicate that the case\/project manager  of  stores therein a \u201cplurality of test data files\u201d or \u201ccase scenarios\u201d, and those test data files\/case scenarios are subdivided into further subdivisions of test data files, and those further subdivisions of test data files can be subdivided into yet further subdivisions of test data files. In other words, the \u201cplurality of test data files\u201d stored in the case\/project manager  of  are stored in the case\/project manager  in the form of a particular structure that can only be described as a \u201ctree like structure\u201d. The operator sitting at the workstation  of  can select one or more subparts or subdivisions of those \u201ctest data files\u201d  through  of  as desired, the selected subparts of subdivisions of data files being used by the Eclipse simulator software , during the execution of the Eclipse simulator software , to generate the results file  of . For example, in , the operator at workstation  can select the \u201cnew\u201d data file ; or the operator can select the \u201cnew-\u201d data file ; or the operator can select the \u201cnew-\u201d data file ; or the operator can select the \u201cnew---\u201d data file , etc. The function performed by the case\/project manager  (in storing the test data files therein in the form of a \u201ctree like structure\u201d and enabling the operator to select various sets and supersets of the stored test data files for use by the simulator software ) will become more evident from a reading of the following description of the Eclipse Office software of the present invention.","In , a functional block diagram of the case builder\/data manager  of  is illustrated. The case builder\/data manager  includes a reservoir description  consisting of a storage medium supplied with keywords (\u201cK\u201d) originating from either the \u201ccase definition\u201d  or the Flogrid preprocessor program , a PVT storage medium  consisting of keywords (K) supplied by the PVTi preprocessor program , a SCAL storage medium  consisting of keywords (K) supplied by the SCAL preprocessor program , an \u201cInitialization\u201d block , a Schedule\/Production storage medium  supplied with keywords (K) originating from the Schedule  and the VFPi  preprocessor programs , a \u201cSummary\u201d block , and a \u201cSimulation file\u201d block  consisting of a collection of keywords (K). The Summary block  contains keywords which identify which vectors the operator wants to be output by the Eclipse simulator software during the execution of the simulator. More particularly, the Summary block  allows the operator at workstation  to select one or more of a multitude of outputs or \u201cvectors\u201d generated from the Eclipse simulator software ; and this is significant since, when the one or more outputs or vectors from the simulator software are selected, those particular selected outputs or vectors are stored in the Results file  of . The Initialization block  contains keywords which instruct exactly how to initialize the model. The case definition  consists of a collection of keywords (K) supplied by the case\/project manager . Those keywords, initially stored in the case definition , are supplied to the various storage media , , , , , and . Keywords \u201cK\u201d , , , , and  are supplied, respectively, by the Flogrid , PVTi , SCAL , Schedule , and VFPi  pre-processor programs, and are transmitted to for storage in the Reservoir Description , the PVT , the SCAL , and the Schedule\/Production  storage mediums. Keywords \u201cK\u201d are already stored in the \u201cInitialization\u201d  storage medium and the \u201cSummary\u201d  storage medium. In operation, in , the operator at workstation  of  can now edit the keywords \u201cK\u201d stored in any one or more of the following \u201cparticular storage media\u201d: Reservoir Description , PVT , SCAL , Initialization , Schedule\/Production , and Summary . When the keywords \u201cK\u201d in the one or more of the \u201cparticular storage media\u201d have been edited by the operator at workstation , a set of \u201cnewly edited keywords\u201d (K) , , , , , and  are generated from the \u201cparticular storage media\u201d and those \u201cnewly edited keywords\u201d (as represented by \u201cAll Keywords\u201d  in ) are stored in the Simulation File  in . The \u201cnewly edited keywords\u201d stored in the Simulation File  are now available to and are transmitted to the Run Manager .","In , a functional block diagram of the run manager  of  is illustrated. The run manager  can select vectors if applicable, block  of . If the simulation file  from the case builder  is too large, in order to avoid overloading memory, the run manager  can select certain vectors  associated with only a \u201csubset of the simulation file\u201d , and then the run manager  will \u201csubmit run\u201d ; that is, the run manager  will submit only that particular \u201csubset of the simulation file\u201d  (which was selected via the \u2018select vectors\u2019 ) to the Eclipse simulator for use by the simulator during its execution by the workstation processor of  (block  of ). In addition, the run manager  will monitor the \u201crun submitted to the simulator \u201d (see the \u201cmonitor run\u201d block  in ). As a result, in response to the receipt by the simulator of only that particular \u201csubset of the simulation file\u201d , when the simulator is executed, a \u201csubset of results\u201d will be generated from the simulator , the \u201csubset of results\u201d corresponding to the particular \u201csubset of the simulation file\u201d . The \u201csubset of results\u201d, corresponding to the particular \u201csubset of the simulation file\u201d , will be stored in the results file  of . In , the \u201csubset of results\u201d stored in the results file  of  will be transmitted back to \u201cmonitor run\u201d block . Now, the \u201cmonitor run\u201d block  is receiving both the \u201crun submitted to the simulator \u201d and the \u201csubset of results\u201d stored in the results file  thereby allowing the operator to compare the run being submitted by the case builder to the simulator with the \u201csubset of results\u201d being generated by the simulator . In addition, that \u201csubset of results\u201d stored in the results file  will also be displayed on the results viewer A of the \u201crecorder or display or 3D viewer\u201d of  and\/or the \u201csubset of results\u201d will be reported to the operator via the report generator B.","In any event, in , the simulation file , or the \u201csubset of the simulation file\u201d , will be submitted to the Eclipse simulator software , block  in . During the execution of the Eclipse simulator software by the workstation processor , the simulation file  (or the \u201csubset of the simulation file\u201d ) will be used by the simulator , and, responsive to that execution of the simulator software , a display will be produced on the \u201crecorder or display or 3D viewer\u201d of , that display representing and corresponding to the test data in the \u201csimulation file\u201d , or to the test data in the \u201csubset of the simulation file\u201d . In , the run manager  will monitor (via the \u201cmonitor run\u201d block  in ) the \u201crun submitted to the simulator \u201d and said \u201cmonitor run\u201d block  will enable the operator to compare the run being submitted to the simulator with the set of simulation results being generated by the simulator. In addition, the results viewer A will instantaneously display the \u201csubset of results\u201d which are generated from the simulator in response to the \u201crun submitted to the simulator ","In , a functional block diagram of the \u201cdisplay or report results\u201d  of  and of the \u201cresults file\u201d  of  is illustrated. In , the results file  will include the following information: \u201csimulation results\u201d which pertain to grids , a summary , restart , and initialization . In , the \u201cdisplay or report results\u201d  includes the results viewer A and the report generator B of . However, in addition, the \u201cdisplay or report results\u201d  of  will also \u201copen the summary\u201d C (that is, it will open the summary results file ), \u201cselect vectors or solutions\u201d D (which will select certain of the summary information ), \u201copen grids\u201d E (that is, open the \u201cgrids\u201d results file), \u201cselect vectors or select solutions\u201d F (which will select certain of the grids information ), \u201copen restart and initialization\u201d G (that is, open the restart and the initialization results files), and \u201cselect vectors or select solutions\u201d H (which will select certain of the restart and initialization information and ), prior to displaying the selected summary information C and the selected grids information E and the selected restart and initialization information G on the results viewer A and\/or reporting that same information on the report generator B. As a result, in , when the summary results file is opened by the open summary block C, and the grids results file is opened by open grid block E, and the restart results file and the initialization results file are opened by the open restart and initialization block G of , all the selected \u201csimulation results\u201d stored in the results files  of  will be made available to the results viewer A (which will display those \u201csimulation results\u201d), and all the selected \u201csimulation results\u201d stored in the results files  will be made available to the report generator B (which will select reports and solutions and interpolate vectors and generate a written report for management that will document those \u201csimulation results\u201d).","A functional description of the operation of the Eclipse Office software of  of the present invention, and, in particular, the case\/project manager software  of  of the Eclipse Office software of the present invention, will be set forth in the following paragraphs with reference to  of the drawings.","In , a program storage device, such as the CD-Rom , has stored thereon the Flogrid software , the Eclipse office software , and the Eclipse simulator software . That CD-Rom  is inserted into the workstation  of , and the Flogrid software , the Eclipse office software , and the Eclipse simulator software are loaded from the CD-Rom  for storage into the workstation memory of the workstation  of . When the Flogrid, Eclipse simulator, and Eclipse Office software are stored in the workstation memory , one configuration of that software stored in memory is illustrated in . In , certain \u201craw data\u201d  is provided to the Eclipse Office software . In addition, certain other input data, provided by the preprocessor programs  of , are also provided to the Eclipse Office software . In , that raw data  and the other input data from the preprocessor programs  are provided as \u201cinput data\u201d to the case builder\/data manager  of .","However, in addition to the input \u201craw data\u201d  and the other input data originating from the preprocessor programs  (which are all being made available to the case builder  of ), the case\/project manager  of , in accordance with one major aspect of the present invention, also contains a plurality of additional \u201ctest data files\u201d which can also be made available to the case builder\/data manager . Those additional \u201ctest data files\u201d are illustrated in . In , those additional \u201ctest data files\u201d are stored in the case\/project manager  in a \u201ctree-like\u201d fashion. That is, those \u201ctest data files\u201d are stored in the case\/project manager  of  in the form of a \u201ctree\u201d. For example, the broadest category of the test data files or \u201ccase scenarios\u201d stored in the case\/project manager  is the \u201cnew\u201d  test data file of . However, if the user\/operator wants to select certain other supersets of that \u201cnew\u201d  test data file, the operator would then select either the \u201cnew-\u201d  superset test data file, or the \u201cnew-\u201d  superset test data file. On the other hand, if the operator wants to select still other supersets of the \u201cnew-\u201d  superset test data file or the \u201cnew-\u201d  superset test data file, the operator can select any one or more of the following supersets of the superset test data files  or : supersets , , , , ,  for the superset test data file , and supersets , , , or  for the superset test data file  of . Each superset of the test data files of the case manager  of  contains certain unique parameters which are useful when running the Eclipse simulator software . As a result, the operator sitting at the workstation  of  may want to select one or more of the supersets of test data files  through  in  in order to study the resulting \u201cresults\u201d stored in the results files  of  which are generated when the selected one or more supersets of test data files  through  are used by the simulator . The operator can study those \u201cresults\u201d, stored in the results files , by viewing those \u201cresults\u201d on the results viewer A of  or reading a report of those results on a report generated by the report generator B of .","In any event, in , if the raw data  is received by the case builder , the case builder  will allow the operator to edit that raw data , and the case builder  of  will present the edited raw data to the run manager  for submission of that edited raw data to the Eclipse simulator . On the other hand, if the keyword data from the preprocessor programs  are received by the case builder , the case builder  will allow the operator to edit the preprocessor program  keyword data, and the edited preprocessor program keyword data will be submitted by the case builder  to the run manager  for submission of that data to the Eclipse simulator . However, if the operator selects one or more of the sets or supersets of the test data files  through  in the case manager  of , the one or more selected sets or supersets of test data files in the case manager  (one or more of -) will be submitted by the case manager  to the case builder  of , and the case builder  will allow the operator sitting at the workstation  to edit those test data files. The resulting edited test data files will be submitted by the case builder  to the run manager  for submission of the edited test data files to the Eclipse simulator ","In , the case builder  will receive a case definition , consisting of a collection of keywords, from the case manager  of . Recall that the case definition  contains a collection of keywords representing the one or more sets or supersets of test data files that were selected by the operator via one or more of the \u201csets\u201d or \u201csupersets\u201d of data files stored in the case manager \u201ctree like structure\u201d of . The case definition  keywords are made available to the various storage media , , , , , and  in . In addition, the keywords , , , , and  from the pre-processor programs  (and from the raw data ) are also made available to the various storage media , , , and  in . The operator at the workstation  of  can now edit, as desired, the keywords stored in the various storage media , , , , , and  in . As a result, when this editing operation performed by the operator is complete, a set or collection of \u201cedited keywords\u201d  of  (keywords  through ) are stored in the simulation file  of . These \u201cedited keywords\u201d  of , stored in the simulation file , now represent a set of \u201cedited test data files\u201d which will be submitted by the case builder  to the run manager .","The \u201cedited test data files\u201d will be submitted by the case builder  to the run manager . The run manager , in , will submit the edited test data files to the Eclipse simulator (see the \u201csubmit run\u201d block  in ), and the run manager  will monitor the \u201cedited test data files\u201d (see \u201cmonitor run\u201d block  of ). When the simulator is executed in response to the \u201cedited test data files\u201d, a set of \u201csimulation results\u201d will be generated from the simulator , and those \u201csimulation results\u201d will be stored in the results file . Furthermore, those \u201csimulation results\u201d stored in the results files  will be made available to the results viewer A and\/or the report generator B in . As a result, the \u201csimulation results\u201d will be displayed on the results viewer A of the \u201crecorder or display or 3D viewer\u201d of , and the \u201csimulation results\u201d can be recorded on a report via the report generator B. However, in , in addition, the \u201csimulation results\u201d stored in the results files  will be transmitted back from the results files  to the \u201cmonitor run\u201d block  of the run manager . Since the \u201cmonitor run\u201d block  is already monitoring the \u201cedited test data files\u201d being submitted by the case builder  to the simulator , the operator at workstation  of  is able to visually compare, via the \u2018monitor run\u2019 block  of the run manager , the \u201cedited test data files\u201d (or case scenarios) being submitted to the simulator with the \u201csimulation results\u201d being generated from the simulator . At this point, as a result of the aforementioned visual comparison being performed by the run manager , the operator can now select other test data files or case scenarios stored in the case manager  thereby sending these other case scenarios to the case builder  for editing and submitting the edited other case scenarios from the case builder  to the simulator ","In , when either the edited raw data , or the edited preprocessor program data , or the edited test data (-) are submitted to the Eclipse simulator software , and when the Eclipse simulator software is executed by the workstation processor in response to that data, the Eclipse simulator software will generate a set of \u201cresults files\u201d  in . Those \u201cresults files\u201d  will be made available to the results viewer A (of the display of ) and to the report generator B (of the recorder of ). The operator sitting at the workstation  can view those results on the display via the results viewer A, or he can read a report of those results, which report is generated by the report generator B. In actual practice, in , the \u201cdisplay or report results\u201d  will open the summary results file , open the grids results file , open the restart results file , and open the initialization results file . At this point, all the set of \u201csimulation results\u201d files which are stored in the \u201cresults file\u201d  will be opened, and these \u201csimulation results\u201d are made available to the results viewer A, and to the report generator B. As a result, during the execution of the Eclipse simulator software in , certain \u201csimulation results\u201d will be stored in the results files , and those \u201csimulation results\u201d will instantaneously be made available for viewing by the operator at workstation  by instantaneously displaying those \u201csimulation results\u201d in the results files  on the results viewer A, and instantaneously reporting those \u201csimulation results\u201d in the results files  on a written report which is generated via the report generator B.","A more detailed description of the structure and the functional operation of the Eclipse Office software of  of the present invention will be set forth in the following \u201cEclipse Office software Functional Specification\u201d with reference to  of the drawings.","Eclipse Office Software Functional Specification","Refer now to .","As a result of advances in technology over the last few years, the reservoir engineer must manage more data and make better informed decisions in a shorter period of time. That technology has enabled more data to be incorporated, more complex models to be built, and more realizations to be studied. However, as a further result, more data must be managed, more models must be created, and more results must be analyzed. The Eclipse Office software of  provides the tools which allows the reservoir engineer to efficiently manage these tasks and thus concentrate on the engineering input and analysis. Consequently, the Eclipse Office software will allow the reservoir engineer to create his model quickly, manage his data efficiently, and control his run effectively. The Eclipse Office software : (1) allows for the import of raw data required for a simulation, (2) contains a suite of base level tools allowing the creation and manipulation of engineering data required for a simulation, and (3) provides a means for using more advanced tools within external packages to manipulate the data. Therefore, the Eclipse Office software will provide an environment for all simulation related tasks (create\/view\/edit\/manage data, view\/analyze results, control\/submit runs, and generate reports). Furthermore, the Eclipse Office product software removes the need for manual editing of data, removes the need for macros to run individual programs, it is intuitive for a novice user, and it is complete for the experienced user.","1.0 Introduction","The Eclipse Office software of  will provide the user with an environment within which engineering analysis can be conducted. These analyses will initially be focused on numerical simulation; however, the Eclipse Office software design allows other engineering techniques to be used should new modules be developed. The following paragraphs will set forth both the engineering requirements and the specifications of the Eclipse Office software , and establish its relationships to other products.","User Profile","The Eclipse Office software of  will become the preferred method of performing simulation related activities, and it will be an environment within which it will be possible to easily and efficiently conduct the full range of reservoir engineering tasks.","The expected users of the Eclipse Office software will be petroleum engineers. The end users must have knowledge of the process of simulation, since the natural flow of the Eclipse Office product will follow this process.","2.0 Requirements","Major limitations restricting the growth of reservoir simulation are in its ease of use, level of required experience, and quantity of input data. These impact the market in different ways but all reinforce the idea that simulation is difficult and time consuming. In addition, reservoir engineering analysis (such as decline curve, material balance, or simple network analysis) are often conducted using spreadsheets, and yet the raw data for these are the same as the raw data for simulation. While the Eclipse Office software is a self contained product, in terms of its data generation and analysis tools, it requires a knowledge of the system in which it is installed, and the availability of other software products, especially the simulator engines. The main work path through the Eclipse Office product software is illustrated in .","Referring to , the Eclipse Office software workflow or functional block diagram is illustrated. In , the Eclipse Office software workflow starts with project setup, , followed by case definition, . The next step involves defining and analyzing reservoir properties, . The model is run, . The operator will now manage the run, , analyze the results and produce a scenario report, , and produce a case report . When analyzing the results and producing the scenario report (), different scenarios  can be selected (see case\/project manager  in ) and steps  through  can be repeated.","The Eclipse Office software concept provides three main functions: (1) it provides a structured, easy to use means to generate numerical reservoir models quickly, (2) it manages input and output data, and (3) it executes existing pre and post processors. The integration of existing, other software products into the Eclipse Office environment allows those other products to provide their fully advanced functionality in a seamless fashion. The construction of a simulation grid, for example, can be achieved simply with the tools available in Eclipse Office, however, more advanced and complex geological models could be constructed by called Grid and Flogrid as submodules.","Functional Requirements","It is essential that base functionality is both simple to use and robust. The Eclipse Office product software will be used across the hardware range from PC's to UNIX workstations, and therefore it should not require high end graphics performance. The Eclipse Office software should be as memory efficient as possible, ideally being able to run on a minimum configuration of a 486\/66 PC with 20 Mb of RAM.","Data Management","The Eclipse Office software of  is capable of doing the following:\n\n","Reservoir Description  of ","The Eclipse Office software provides tools to allow for the generation of grid geometry and grid properties, including maps, faults, boundaries, wells, aquifers, layers, grid properties, simulation grid builder, and other general abilities. Each of these will be discussed in detail, as follows:\n\n","Fluid Properties","PVT (see block  of )","The Eclipse Office software of  will:\n\n","SCAL (see block  in )","The Eclipse Office software of  will:\n\n","Specification of Initial Contacts and Pressures","The Eclipse Office software of  will support three ways to specify initial conditions: (1) Equilibration, (2) Enumeration, and (3) Restart (Standard and SAE\/LOAD). Each of these three ways, plus an additional general set of support conditions, will be discussed below, as follows:","Equilibration\u2014The Eclipse Office software of  will:\n\n","Enumeration\u2014The Eclipse Office software of  will support the setting of all relevant arrays through one of the following means:\n\n","Restart\u2014In , block \u201cRestart\u201d, the Eclipse Office software of  will support the restarting of a run (using the same grid) from its base run. Restart () should be date or report step specified, and the user should see all available restart dates. The Eclipse Office software must ensure that the Schedule section is in line with this date through use of the SKIPREST keyword.","General\u2014The Eclipse Office software of :\n\n","Set Up of Well and Gathering Tree Information","General:","The Eclipse Office software of  will support the intuitive and easy to use interface of areal well locations, the ability to double click for item editing, and drag and drop (where appropriate). Editing can be facilitated by double clicking on a well (etc) or clicking with the right mouse button for a drop down menu. The Eclipse Office software will support an easy method of setting controls for multiple wells\/groups at a time. This could be achieved by rubber banding, CTRL-clicking, wildcarding or some other means. In addition, the Eclipse Office software will call the VFPi preprocessor program ( of ) to construct pipeline and well lift curves.","Wells:","The Eclipse Office software of  will:\n\n","Groups:","The Eclipse Office software of  will:\n\n","Networks:","The Eclipse Office software of  will:\n\n","Output Controls","In general, the role of the ASCII print file should be de-emphasized. All tabular output should be able to be generated from the graphics\/restart files. The Eclipse Office software will generate a standard list of output which will ensure the standard engineering analyses can be conducted. Specifically, this list needs to contain: (1) field, group and well rates (oil, water, gas, liquid), (2) field, group and well pressures (field datum average pressure, node pressures well bhp, thp if setup), (3) field, group and well cumulatives, and (4) cell pressures (datum corrected) and phase saturations.","The Eclipse Office software will support the selection features by topic and automatically generate a list of applicable (optional) output for this run\u2014e.g., if tracers are present in the run, then automatically select all tracer outputs, but allow user to disable those if required. This list should also contain simulator performance vectors. In addition, the Eclipse Office software will support panel selection for grid based properties. These should be written to graphics files for subsequent viewing graphically or in a tabular form.","Multiple Scenarios","Once enabled, the multiple scenario option should simply present the end user with a list of variables that can be \u201cscenarioised\u201d (i.e., made into scenarios). Individual scenarios are then created simply by changing the relevant section to reflect the ranges of that parameter to be used.","The Eclipse Office software will support the ability to \u201cscenarioise\u201d the following parameters: (1) fault multipliers, (2) grid properties (including correlation parameters\u2014to allow support for calculator generated properties), (3) grid cell size (for regular Cartesian grids), (4) relative permeability curves (Corey exponents and table end points), (5) initial contact depths, (6) initial pressures, (7) aquifer parameters (size, strength), (8) PVT correlation parameters, (9) well targets and limits (rates and pressures), (10) group targets, (11) drilling queues, and (12) well workover parameters (water cut\/GOR limits, etc).","The Eclipse Office software will support the use of different include files for each scenario\u2014note: this will allow support of external products to setup multiple scenarios (e.g. PVT or GRID). The Eclipse Office software will keep track of these scenarios and allow submission of all or a particular grouping automatically.","Job Submission and Control","The Eclipse Office software of :\n\n","Viewing and Analysis of Results","This module must be available while a simulation model is proceeding. The viewing and analysis of results needs to be highly intuitive\u2014extensive use should be made of mouse clicks to obtain point\/cell values or to set particular attributes (e.g. line or axis attributes).","The Eclipse Office software of  will:\n\n","Report Generation","The Eclipse Office software of  will:\n\n","The following two examples are presented which will demonstrate the usefulness of the Eclipse Office software of :","Case 1\u2014New Model","A user is running on a networked personal computer.","First, define the project. This includes the title, directory, areal extent, and primary units system.","Second, create the case. This includes defining phases, and selecting treatment (isothermal, compositional, etc).","Third, define data. This includes:\n\n","Fourth, run the simulation model. Observe results, and decide that the run has fallen off plateaux rate too early, so kill the job. Modify existing scenario to add drilling queue. Re-run through to the end.","Fifth, plot and analyze the results. Generate plots of: field oil rate vs time, cumulative oil vs time, field oil rate vs cumulative oil, field pressure vs cumulative oil, and average well bhp over all producers against time and add field pressure to plot. Create a standard report including plots in relevant places.","Case 2\u2014Existing Data Model","First, define the project. This includes title, directory, areal extent, and primary unites system.","Second, create the case\u2014initialize all data.","Third, create a new multiple scenario. This includes the following:\n\n","3.0 Specifications","The Eclipse Office Data Model","In the Eclipse Office software of  data model, there will be a database to hold the structure of the project. The project is made up of a base case, which is a simulator input file. From the base case, many cases and scenarios can arise in a \u201ctree like structure\u201d (see ). The cases and scenarios in the \u201ctree like structure\u201d of  are, in fact, simulator input files. For each case, the database will hold the following information:","1. case definition, and","2. Include filenames for each section of the simulator input.","Each section of the Case Builder\/Data Manager  of  in the Eclipse Office software will produce an Include file for the case (the grid geometry and the properties will be separate from the Include files). The Include files produced by the Eclipse Office software contain additional information as comments, e.g., PVT correlation types, Temperature, Gas Gravity, etc. Although the user can save intermediate files as Include files, there is no method for tracking these, e.g., saving different PVT correlations.","Application Layout","Refer now to  for a dialog depicting the Eclipse Office software application layout.","In , a screen display is illustrated, and the screen display of  is displayed on the \u201crecorder or display or 3D viewer\u201d of  upon start-up. There will also be a log window displayed. The main window of , however, consists of a menu bar, preprocessor pushbuttons (Flogrid, PVTi, SCAL, Schedule, VFPi) and post processor push buttons (Graf, RTView, HM), and Eclipse Office software modules displayed as push buttons (Project, Data, Execute, Results, Report, Exit).","Menu Bar Items\u2014referring to the Application Layout of ","File\n\n","Module\n\n","Options\n\n","Utilities\n\n","Window\n\n","Help\n\n","Pre\/Post Processor Push Buttons\n\n","Eclipse Office Software Modules of the Application Layout of ","Pressing the Eclipse Office module pushbuttons of  (i.e., the \u201cProject\u201d module pushbutton, the \u201cData\u201d module pushbutton, the \u201cExecute\u201d module pushbutton, the \u201cResults\u201d module pushbutton, the \u201cReport\u201d module pushbutton, and the Exit module pushbutton in ) will bring to the front the selected module. Let us now consider each of the Eclipse Office modules individually below.","\u201cProject\u201d Module of FIG. \u2014the Case\/Project Manager  of  and ","Workflow","In , a workflow or functional block diagram associated with the Case\/Project manager  of  is illustrated. In , the functional block diagram of the Case manager  includes the following: (1) problem definition , (2) Project Specification (units, directories, areal location) , (3) Under Project specification, Specification of phases and treatment , and (4) Under Project Specification, specification of optional extensions .","Layout","In , a dialog depicting the Case\/Project manager  layout is illustrated. The Case\/Project manager  layout (or \u201cwindow screen display\u201d) consists of a Menu Bar, Icons, and the current Project displayed as a hierarchical \u201ctree like structure\u201d. In , the screen display of  is displayed on the \u201crecorder or display or 3D viewer\u201d of  upon entry to the \u201cCase\/Project manager\u201d if an existing project has been opened. The display area will be blank if the project is empty.","Nomenclature\n\n","Case and Scenarios will be color coded.","Menu Bar Items","File\n\n","Case\n\n","Options\n\n","\u201cData\u201d Module of the Application Layout of FIG. \u2014the Case Builder\/Data Manager  of ","Workflow","In and , a workflow or functional block diagram associated with the Case Builder\/Data manager  of  is illustrated.","Refer now to for the initial blocks of the functional block diagram of the Case Builder .","1. Define and Analyze Reservoir Properties\u2014block \n\n","Refer now to for the remaining blocks of the functional block diagram of the Case Builder .","1. Define and Analyze Reservoir Properties\u2014Block \n\n","Layout","Refer now to  which illustrates a dialog depicting the Case Builder\/Data Manager ( of ) layout.","In , the Case Builder\/Data Manager ( of ) window or screen display consists of a menu bar, preprocessor push buttons, icons and a display of the current model (case\/scenario) representing the model area together with the wells. This will be blank if a new project.","Menu Bar Items in ","File\n\n","Section\n\n","Modules","Case Definition\u2014the case definition section consists of \u201cMenu Bar Items\u201d and \u201cFolder Items\u201d specifying the simulator, model type, phases and other options\n\n","Reservoir Description  of ","Refer now to  which illustrates a dialog depicting the Reservoir Description () layout. The Reservoir Description  is shown in .","Additional options will include:","1. import and display of corner point and block centered geometry","2. simple gridding options, e.g., x meter spaced grid","3. re-gridding of corner point model to PEBI grid","4. aquifer support","PVT  of ","Refer now to  which illustrates a dialog depicting the PVT () layout. The PVT storage medium  is shown in .","Additional options (not shown in ) will include:","1. import of PVT data from existing dataset","2. support for more than one PVT region","3. compositional and thermal keywords","4. region painter","Menu Bar Items","File\n\n","View\n\n","Region\n\n","SCAL  of ","Refer now to  which illustrates a dialog depicting the SCAL () layout. The SCAL storage medium  is shown in .","Additional options (not shown in ) will include:","1. import of SCAL data from existing dataset","2. support for more than one SCAL region","3. three phase relative permeability correlation","4. region painter","Menu Bar Items","File\n\n","View\n\n","Region\n\n","Initialization  of ","Initialization\u2014The Initialization section consists of a Menu Bar and Icons.","Menu Bar Items","File\n\n","Method\n\n","Restart","This will display a panel of the saved restart numbers and dates from which the user can select the appropriate one.","Enumeration","This will display a window allowing input of initial values.","Menu Bar Items","File\n\n","Options\n\n","Equilibration","This will display a window for contact depth input","Menu Bar Items","File\n\n","Options\n\n","Schedule\/Production Database  of ","Refer now to  which illustrates a dialog depicting the Schedule database () layout. The Schedule\/Production storage medium  is shown in .","The Schedule window of  consists of a Menu Bar, Icons, and a display of the current model (case\/scenario) representing the model area together with the wells and their group hierarchy.","Menu Bar Items","File\n\n","Edit\n\n","Group\n\n","Time\n\n","Control\n\n","Output","The output window consists of a Menu Bar and Icons. The main display area is blank.","Menu Bar Items","File\n\n","Vector\n\n","Multiple Scenarios","The multiple scenarios window consists of a Menu Bar and Icons. The main display area is blank. This section will allow the user to easily specify a number of realizations to be run on this case\/scenario. These realizations will be specified in an engineering terminology, e.g., poro\/perm relationship, well rates, different PVT data, etc. This will ensure that the Grid Geometry of the model cannot be changed and therefore the runs can be compared.","Run Manager  of  and ","Refer now to  which illustrates a workflow or functional block diagram illustrating the function of the Run Manager  of .","The functional block diagram of the Run Manager , which is shown in , is duplicated below as follows:","Run Model\u2014block \n\n","Layout","The \u201cJanus\u201d program will form the basis of the Run Manager  within the Eclipse Office software . Currently, \u201cJanus\u201d submits, controls and monitors multiple simulator runs through the PVM interface.","Refer now to  which illustrates the Run Manager  window.  illustrates a view of \u201cJanus\u201d, which forms the basis of the Run Manager. The Run Manager  window of  consists of a menu bar and icons.","Results Viewer A of ","Refer now to  for the workflow or functional block diagram of the Results viewer A of . The functional block diagram of the results viewer A of  is duplicated below, as follows:","1. Run Manager (monitor and control)\u2014block ","2. Results viewer (real time updates)\u2014high quality hardcopy\u2014block \n\n","The results viewer A window (screen display) consists of a Menu Bar, Post Processor pushbuttons, Icons, and a display of the current model (case\/scenario) representing the model area together with the wells. This will be blank if a no case\/scenario is selected.","Report Generator B of ","Refer now to  for the workflow or functional block diagram of the Report Generator B of . The functional block diagram of the report generator B of , as shown in , is duplicated below, as follows:","Report Generator\u2014block \n\n","Layout","The report generator B window (screen display) consists of a Menu Bar, Icons, and a display of the current model (case\/scenario) representing the model area together with the wells. This will be blank if a no case\/scenario is selected.","The invention being thus described, it will be obvious that the same may be varied in many ways. Such variations are not to be regarded as a departure from the spirit and scope of the invention, and all such modifications as would be obvious to one skilled in the art are intended to be included within the scope of the following claims."],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"BRIEF DESCRIPTION OF THE DRAWINGS","p":["A full understanding of the present invention will be obtained from the detailed description of the preferred embodiment presented hereinbelow, and the accompanying drawings, which are given by way of illustration only and are not intended to be limitative of the present invention, and wherein:",{"@attributes":{"id":"p-0021","num":"0020"},"figref":["FIGS. 1 and 2","FIG. 1"]},{"@attributes":{"id":"p-0022","num":"0021"},"figref":["FIGS. 3","FIG. 1"],"b":["4","4"],"i":["a","b "]},{"@attributes":{"id":"p-0023","num":"0022"},"figref":"FIG. 5"},{"@attributes":{"id":"p-0024","num":"0023"},"figref":"FIGS. 6 and 7"},{"@attributes":{"id":"p-0025","num":"0024"},"figref":["FIG. 8","FIG. 7"]},{"@attributes":{"id":"p-0026","num":"0025"},"figref":["FIG. 9","FIG. 8","FIG. 8"]},{"@attributes":{"id":"p-0027","num":"0026"},"figref":["FIG. 10","FIGS. 6","FIG. 10"],"b":"7"},{"@attributes":{"id":"p-0028","num":"0027"},"figref":["FIGS. 11 and 12","FIG. 10","FIG. 10"]},{"@attributes":{"id":"p-0029","num":"0028"},"figref":["FIG. 13","FIGS. 11 and 12","FIG. 10","FIG. 13","FIG. 10"]},{"@attributes":{"id":"p-0030","num":"0029"},"figref":["FIG. 14","FIG. 13"]},{"@attributes":{"id":"p-0031","num":"0030"},"figref":["FIG. 15","FIG. 13"]},{"@attributes":{"id":"p-0032","num":"0031"},"figref":["FIG. 16","FIG. 13"]},{"@attributes":{"id":"p-0033","num":"0032"},"figref":["FIG. 17","FIG. 13"]},{"@attributes":{"id":"p-0034","num":"0033"},"figref":["FIG. 18","FIG. 11"]},{"@attributes":{"id":"p-0035","num":"0034"},"figref":"FIG. 19"},{"@attributes":{"id":"p-0036","num":"0035"},"figref":"FIG. 20"},{"@attributes":{"id":"p-0037","num":"0036"},"figref":"FIG. 21"},{"@attributes":{"id":"p-0038","num":"0037"},"figref":"FIG. 22","i":["a","a"],"b":["1","22","2"]},{"@attributes":{"id":"p-0039","num":"0038"},"figref":["FIG. 22","FIG. 22"],"i":["b","b","a "],"b":["1","22","2"]},{"@attributes":{"id":"p-0040","num":"0039"},"figref":"FIG. 23"},{"@attributes":{"id":"p-0041","num":"0040"},"figref":"FIG. 24"},{"@attributes":{"id":"p-0042","num":"0041"},"figref":"FIG. 25"},{"@attributes":{"id":"p-0043","num":"0042"},"figref":"FIG. 26"},{"@attributes":{"id":"p-0044","num":"0043"},"figref":"FIG. 27"},{"@attributes":{"id":"p-0045","num":"0044"},"figref":"FIG. 28"},{"@attributes":{"id":"p-0046","num":"0045"},"figref":"FIG. 29"},{"@attributes":{"id":"p-0047","num":"0046"},"figref":["FIG. 30","FIG. 13"]},{"@attributes":{"id":"p-0048","num":"0047"},"figref":["FIG. 31","FIG. 13"]}]},"DETDESC":[{},{}]}
