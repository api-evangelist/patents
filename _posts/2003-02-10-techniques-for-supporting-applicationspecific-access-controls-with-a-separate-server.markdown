---
title: Techniques for supporting application-specific access controls with a separate server
abstract: Techniques for supporting access controls on application-specific operations performed by an application include receiving first data at a server distinct from the application. The first data describes a first set of privileges for performing a first set of application-specific operations. Second data is also received at the server. The second data associates a first user of the application with a privilege in the first set of privileges. In response to receiving a request at the server from the application, it is determined whether a particular user may have the application perform a particular application-specific operation based on the first data and the second data. The request indicates the particular user and the particular application-specific operation. A response is sent to the application. The response indicates whether the particular user may have the application perform the particular application-specific operation.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=07020653&OS=07020653&RS=07020653
owner: Oracle International Corporation
number: 07020653
owner_city: Redwood Shores
owner_country: US
publication_date: 20030210
---

{"@attributes":{"id":"description"},"RELAPP":[{},{}],"heading":["CROSS REFERENCE TO RELATED APPLICATION","BACKGROUND OF THE INVENTION","DETAILED DESCRIPTION OF THE INVENTION","Structural Overview","Functional Overview","Method for Supporting Access Controls on Application-Specific Operations","Representing User Privileges with Bitmaps","Hardware Overview"],"p":["The present application claims priority to U.S. Provisional Patent Application No. 60\/424,543, filed Nov. 6, 2002, entitled \u201cTechniques for Managing Hierarchical Information in a Database,\u201d by Sivasankaran Chandrasekar, Ravi Murthy, Nipun Agarwal, Eric Sedlar, Sam Idicula, Fei Ge, the entire contents of which are incorporated herein by reference for all purposes, and is related to U.S. patent application Ser. No. 10\/259,176, filed Sep. 27, 2002, entitled MECHANISM FOR UNIFORM ACCESS CONTROL IN A DATABASE SYSTEM, by Ravi Murthy, Eric Sedlar, Nipun Agarwal, Sam Idicula, Nicolas Montoya (hereinafter \u201cMurthy\u201d), the entire contents of which are incorporated herein by reference for all purposes.","The client-server model of computer process interaction is widely used. According to the client-server model, a client process sends a message including a request to a server process, and the server process responds by providing a service. The server process may also return a message with a response to the client process. Often the client process and server process execute on different computer devices, called hosts, and communicate via a network using one or more protocols for network communications.","The term \u201cserver\u201d is conventionally used to refer to the process that provides the service, or the host computer on which the process operates. Similarly, the term \u201cclient\u201d is conventionally used to refer to the process that makes the request, or the host computer on which the process operates. As used herein, the terms \u201cclient\u201d and \u201cserver\u201d refer to the processes, rather than the host computers, unless otherwise clear from the context.","A database server provides database services in response to requests from a database client. For example, the database server writes data received in the request into one or more data containers in a particular database managed by the database server; or, the database server retrieves data from one or more of those containers that satisfy conditions specified in the request; or, it does both. In many circumstances the database client is a mid-tier application, distinct from the database server, which performs other services, such as accounting services, for one or more application users. The application itself may be configured for client-server operations, so that application users operate application clients that make application requests to an application server.","Not all users of a database server are granted access to all data in all the database objects managed by the database server. Consequently, it is common for a database server to implement access controls that control access of database users to the data in the database. Many access control mechanisms are known; for example, a uniform access control mechanism described in Murthy provides access controls for data content that appears to a database user to be organized in a hierarchy of storage containers, or in a relational database of tables with defined columns, or both.","The access controls are often implemented as privileges to perform database operations, with a set of one or more privileges associated with each user of the database for a particular data item or group of data items in the database. For example, basic privileges are defined for performing basic database operations, such as operations to read, insert, delete data of a data item, which may reside in a database object such as a table, or operations to create, modify or delete database objects themselves.","A privilege to perform a basic database operation may be associated with a particular level of the several levels of the database. The levels of a database include, for example, a level of a data item, a level of a database object of several data items, a level of a node of a hierarchy of several database objects, and a level of a parent node of several descendent nodes of database objects. When a privilege is associated with a particular level, the privilege may apply to all items at that level.","In some database management systems, a hierarchy of privileges may be defined, each node in the hierarchy representing the privilege to perform a certain combination of basic operations on one or more levels of the database. To support this hierarchy of privileges, the database servers in some database management systems provide infrastructure to describe privileges, to associate users and data items with privileges, and to efficiently store and retrieve information in a fast memory cache about the privileges to determine quickly whether the database user may perform a requested database operation on a requested data item or database object.","An infrastructure that supports access control to a database based on privileges to perform database operations provides the access control at the granularity of database operations. However, the ability to provide access control at the database-operation level of granularity is not particularly useful when one wants to control access based on operations defined in an application that uses the database. Such operations are referred to herein as \u201capplication-specific\u201d operations.","For example, in an application to manage purchase orders for an enterprise, application-specific operations include: creating a new purchase order, approving the purchase order, issuing the purchase order to make a purchase, associating an invoice with a particular purchase order, confirming acceptance of an order delivered, and clearing the purchase order by paying the associated invoice. If certain application users are to be given privileges to perform some of these application-specific operations but not others, then access control must be provided at the application-specific-operation level of granularity. Since this level of granularity of access control is not provided by the database server, the developer of each application that uses application-specific-operation privileges must design and implement access control software that manages different privileges for different users.","There are several disadvantages to developing access control software for each application. One disadvantage is that the cost of developing the application is increased because development resources are consumed to generate the software to implement the access controls. The more sophisticated the access controls, the more costly the development costs. Conversely, the less spent on developing access controls, the less sophisticated are the access controls implemented. Another disadvantage is that access controls developed for the new application are often less efficient than access controls already developed for some systems and servers over many years. For example, some database servers have evolved with access controls that use minimal computational resources, including using efficient caching of data indicating user privileges.","Furthermore, administrators of multiple applications with independently developed access control mechanisms may have to contend with disparate interfaces for expressing the hierarchy of privileges and expressing the associations of application users and data items with those privileges. If the same access control infrastructure were available across multiple applications, the administrator for those multiple applications could more readily enter information about privileges and associated users and data items, with less concentration and fewer errors.","Based on the foregoing description, there is a clear need for making available to database applications the efficient access control mechanisms of database servers. In general, there is a need for making available to any application the sophisticated and efficient access, control mechanisms already implemented in a separate server.","The approaches described in this section could be pursued, but are not necessarily approaches that have been previously conceived or pursued. Therefore, unless otherwise indicated herein, the approaches described in this section are not to be considered prior art to the claims in this application merely due to the presence of these approaches in this background section.","A method and apparatus are described for supporting access controls on application-specific operations with a separate server. In the following description, for the purposes of explanation, numerous specific details are set forth in order to provide a thorough understanding of the present invention. It will be apparent, however, that the present invention may be practiced without these specific details. In other instances, well-known structures and devices are shown in block diagram form in order to avoid unnecessarily obscuring the present invention.","Certain embodiments are described in the following in the context of a database server and an application that is a database client. In this context, the application uses the database server not only to store data for the application, but also to support access controls for operations that are not database operations, but instead are operations specific to the application. Embodiments of the invention are not limited to this context, but may include any application relying on any separate server to support access controls on application-specific operations. Although the application and server are separate processes, in some embodiments both may execute on the same computer host.","According to one embodiment, access control for application-specific operations is achieved by the application sending to a server data that describes a first hierarchy of privileges for performing a first set of application-specific operations. The application also sends the server data that associates a first user of the application with a privilege in the first hierarchy of privileges. To determine whether a particular user is allowed to perform a particular application-specific operation, the application sends a request to the server. The request indicates the particular user and the particular application-specific operation. In response to receiving a request, the server determines, based on the data previously received from the application, whether a particular user may have the application perform a particular application-specific operation. A response is sent to the application. The response indicates whether the particular user may have the application perform the particular application-specific operation.","In some embodiments of these techniques, the data sent to the server by the application associates the first user of the application with a privilege in the first hierarchy for a specific type of data item that is stored in the server. In some embodiments, the application may provide to the server privilege information for several different users, or several different data items, or both.","Access controls can generally be expressed as a hierarchy of privileges to perform operations. Hierarchies are well-known mathematical constructs. In general, a hierarchy is composed of nodes at multiple levels. The nodes at each level are each linked to one or more nodes at a different level. Each node at a level below the top level is a child node of one or more of the parent nodes at a level above. In a tree hierarchy, each child node has only one parent node, but a parent node may have multiple child nodes. In a tree hierarchy, a node that has no parent node linked to it is the root node, and a node that has no child nodes linked to it is a leaf node. A tree hierarchy typically has a single root node. Tree hierarchies can be used to describe parent privileges that include one or more child privileges.","In a hierarchy of privileges, each leaf node corresponds to a privilege to perform one application-specific operation for which access is to be controlled. A privilege to perform more than one application-specific operation corresponds to an ancestor node in the hierarchy for the leaf nodes that correspond to the more than one application-specific operations.",{"@attributes":{"id":"p-0027","num":"0026"},"figref":"FIG. 1","b":["100","100","110","111"]},"Each leaf node in hierarchy  corresponds to each privilege to perform one of the application-specific operations for which access is to be controlled. In the illustrated embodiment, the privileges for single application-specific operations, and the corresponding leaf nodes, are listed in Table 1. Any of these privileges may be granted to any user of the application, at the discretion of an administrator for the application.",{"@attributes":{"id":"p-0029","num":"0028"},"tables":{"@attributes":{"id":"TABLE-US-00001","num":"00001"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"center"}},"thead":{"row":{"entry":"TABLE 1"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}},{"entry":"Example hierarchy of privileges."}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"1","colwidth":"35pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"70pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"112pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},{},"Single application-specific"]},{"entry":["Leaf Node","Privilege Name","operation allowed"]},{"entry":{"@attributes":{"namest":"1","nameend":"3","align":"center","rowsep":"1"}}},{"entry":["110b","Generate_PO","create a PO with a vendor name and"]},{"entry":[{},{},"address and a list of items"]},{"entry":[{},{},"from that vendor"]},{"entry":["110g","Approve_Services","provide authorization to use a PO"]},{"entry":[{},{},"for purchase of services"]},{"entry":["110h","Approve_Equipment","provide authorization to use a PO"]},{"entry":[{},{},"for purchase of capital equipment"]},{"entry":["110i","Approve_Supplies","provide authorization to use a PO"]},{"entry":[{},{},"for purchase of supplies"]},{"entry":["110d","Purchase","make a purchase from a vendor by"]},{"entry":[{},{},"sending an approved purchase order"]},{"entry":[{},{},"to the vendor"]},{"entry":["110j","Accept_Services","indicate that services delivered under"]},{"entry":[{},{},"a PO are acceptable"]},{"entry":["110k","Accept_Equipment","indicate that capital equipment"]},{"entry":[{},{},"delivered under a PO are acceptable"]},{"entry":["110l","Accept_Supplies","indicate that supplies delivered under"]},{"entry":[{},{},"a PO are acceptable"]},{"entry":["110f","Pay_under_PO","send payment for accepted deliveries"]},{"entry":[{},{},"under a PO to the vendor"]},{"entry":{"@attributes":{"namest":"1","nameend":"3","align":"center","rowsep":"1"}}}]}}]}}},"The hierarchy  also includes parent nodes that represent privileges for more than one application-specific operation. The privilege named Approve_PO at parent node includes the privileges at nodes , , to approve services, equipment, and supplies, respectively. The privilege named Accept_Delivery at parent node includes the privileges at nodes , , to accept delivered services, equipment, and supplies, respectively. Privileges at such parent nodes may be granted to certain supervisory users of the application, such as department heads. The privilege for PO_ALL at node includes the privileges at nodes , , , , to generate POs, approve POs, make purchases with approved POs, accept deliveries of purchases under POs, and make payments for delivered purchases under POs, respectively. The privilege for PO_ALL includes the privileges to perform all the application-specific operations regarding purchase orders.",{"@attributes":{"id":"p-0031","num":"0030"},"figref":"FIG. 2","b":["200","200","220","210","230","220","210"]},"Database server  manages a database of one or more database objects for application . Database server  includes persistent storage  and a cache  in the fast but volatile memory of the database server . Note that database server  is a process. The persistent storage  and cache  are portions of the host persistent storage and host memory that are allocated to the database server process . As a consequence application  and database server  may execute on the same host using different portions of the host's persistent storage and different portions of the host's memory or the same portions of the host's memory at different times. Within the database server persistent storage , the database server  stores one or more data structures ,  and one or more data items in one or more database objects (not shown). Data structure  holds data that represents one or more privilege hierarchies for application . Data structure  holds data that associates one or more users of application  and one or more data items with one or more privileges in the one or more privilege hierarchies represented in data structure  for application . Although shown as two data structures in , in other embodiments the data in data structures ,  may be stored in more or fewer data structures.","According to the illustrated embodiments, before application  performs, for a client, an application-specific operation for which access is controlled, application  sends a request to database server  to determine whether a user associated with the client has a privilege that allows the application  to perform the application-specific operation on a particular data item. Based on the request and information stored in data structures , , the database server  returns a response to the application . The response includes data that indicates whether the user has a privilege that allows the application  to perform the application-specific operation on the particular data item.","An administrator for the application  provides the information in data structures , . In the illustrated embodiments, the application administrator uses an eXtensible Markup Language (XML) document to store data that describe the hierarchies. XML is a well-known and widely-used markup language defined by standards promulgated by the World Wide Web Consortium (W3C) for describing structured data, and allows an arbitrary tree hierarchy of data elements. The application administrator then interacts with an interface provided by database server . The interface allows the application administrator to indicate the XML document that describes the hierarchies that apply to each data item or group of data items, and to indicate one or more privileges in each hierarchy, which apply to each user of the application .","In some embodiments, each of several privilege hierarchies for one application is associated with corresponding types of data items upon which the application-specific operations operate. For example, the privilege hierarchy  is associated with data items that represent purchase orders for an enterprise, but not with data items that represent personnel records for the same enterprise. Privileges to operate on personnel records are indicated in a second privilege hierarchy (not shown) different from privilege hierarchy . In such embodiments, the data in data structure  associates each privilege hierarchy with one or more types of data items upon which operate the operations allowed by those privileges.","To illustrate this method, an example embodiment is described. In the example embodiment, an application administrator generates an eXtensible Markup Language (XML) document that describes the hierarchy of privileges for application-specific operations on purchase order objects. In other embodiments, other structured data formats may be used to represent a hierarchy of privileges.","In the example embodiment, each XML element corresponds to a node representing a privilege in the hierarchy of privileges. Table 2 illustrates portions of an example XML document that describes the example hierarchy  illustrated in FIG. .",{"@attributes":{"id":"p-0038","num":"0037"},"tables":{"@attributes":{"id":"TABLE-US-00002","num":"00002"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"center"}},"thead":{"row":{"entry":"TABLE 2"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}},{"entry":"Portion of XML document describing example hierarchy of privileges."}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"21pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"70pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"126pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"Line number","XML line"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"2","align":"center","rowsep":"1"}}]},{"entry":[{},"\u20021",". . ."]},{"entry":[{},"\u20022","<PO_ALL>"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"21pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"84pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"112pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"\u20023","<Generate_PO\/>"]},{"entry":[{},"\u20024","<Approve_PO>"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"21pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"98pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"98pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"\u20025","<Approve_Services\/>"]},{"entry":[{},"\u20026","<Approve_Equipment\/>"]},{"entry":[{},"\u20027","<Approve_Supplies\/>"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"21pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"84pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"112pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"\u20028","<\/Approve_PO>"]},{"entry":[{},"\u20029","<Purchase\/>"]},{"entry":[{},"10","<Accept_Delivery>"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"21pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"98pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"98pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"11","<Accept_Services\/>"]},{"entry":[{},"12","<Accept_Equipment\/>"]},{"entry":[{},"13","<Accept_Supplies\/>"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"21pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"84pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"112pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"14","<\/Accept_Delivery>"]},{"entry":[{},"15","<Pay_under_PO\/>"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"21pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"70pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"126pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"16","<\/PO_ALL>"]},{"entry":[{},"17",". . ."]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"2","align":"center","rowsep":"1"}}]}]}}]}},"br":{},"b":"220"},"The ellipses depicted in lines  and  of Table 2 represent XML lines in the XML document that precede or follow lines  through . The XML lines - indicate the XML element named \u201cPO_ALL\u201d that corresponds to the PO_ALL privilege. The PO_ALL element includes five child elements: Generate_PO in line ; Approve_PO in lines -; Purchase in line ; Accept_Delivery in lines -; and Pay_under_PO in line . The Approve_element in lines - includes three child elements: Approve_Services in line ; Approve_Equipment in line ; and Approve_Supplies in line . The Accept_Delivery element in lines - includes three child elements: Accept_Services in line ; Accept_Equipment in line ; and Accept_Supplies in line . Thus the XML document with portions depicted in Table 2 describes the hierarchy  of privileges for purchase order operations depicted in FIG. .",{"@attributes":{"id":"p-0040","num":"0039"},"figref":["FIG. 3","FIG. 3"],"b":["300","310","320"]},"In step , the server receives data indicating a hierarchy of privileges for performing application-specific operations on types of data items. Any method for receiving the hierarchy of privileges may be used. For example, during step , an application administrator forms the XML document with the lines shown in Table 2, stores the document in the file POprivileges.xml, and employs the database server access control interface to indicate application-specific access controls should be supported by the database server using the hierarchy of privileges in file POprivileges.xml. In some embodiments, the database server access control interface is a graphical user interface, such as a HyperText Markup Language (HTML) page, well-known in the art, that prompts a user for input to specify application-specific access controls. In some embodiments, the database server access control interface is an application programming interface (API) well-known in the art, that comprises names and types of routines and parameters that are invoked to perform database server access control functions. In other embodiments, other interfaces to a server are employed.","In some embodiments, more than one privilege hierarchy is received for the same application. For example, if the application is an enterprise system, the application may include not only a hierarchy of privileges for a purchase order system, but also a hierarchy of privileges for other systems, such as a human resources system, a facilities management system, a product fabrication tracking system, and a wholesale sales system. The hierarchies that apply to the various systems often refer to application-specific operations on different types of data items stored by the application in the database. For example, the hierarchy of privileges depicted in  refer to operations listed in Table 1 that operate on purchase order database objects in the database, while a hierarchy of privileges for human resources refer to operations on personnel database objects in the database.","In some embodiments with more than one privilege hierarchy, during step , each privilege hierarchy is associated with a type of data item, and the type of data item is also received with the data that indicates the hierarchy of privileges. For example, the hierarchy indicated by the XML lines in Table 2 is associated with purchase order database objects in a database managed for the application by the database server . In some embodiments the association is made within the XML document; in some embodiments, the association is made at the interface to the database server access control system. In some embodiments, different hierarchies for the same application are distinguished by other means, such as a hierarchy name.","In step , the server receives data indicating privileges for each user and data item or group of data items. Any method for receiving such data may be used. For example, during step , an application administrator forms a second XML document associating a user identification (\u201cuser ID\u201d) with one or more privileges in the hierarchy  of privileges, and employs the database server access control interface to indicate the second XML document associates users with privileges. The interface may be a graphical user interface, such as a HTML page, an API, or some other interface for supplying data to the server. In some embodiments, the XML document specifies an access control list (ACL) for the Uniform Access Control System of Murthy, using XML lines such as those shown below in Table 3. In Table 3, a user who causes a client to command an application to do something that causes a controlled application-specific operation to be requested is called a \u201cprincipal;\u201d one principal has the user ID \u201cSCOTT\u201d and another principal has the user ID \u201cPETER.\u201d In Table 3, each ACL includes one or more access control elements (ACE). Each ACE includes one principal element, naming a principal, and one privileges element. The privileges element includes a list of one or more privileges that are identified by their names in the hierarchy of privileges. The ellipses in lines  and  indicate other XML lines before and after the ACL. The ellipsis in line  indicates other XML lines specifying other ACEs.",{"@attributes":{"id":"p-0045","num":"0044"},"tables":{"@attributes":{"id":"TABLE-US-00003","num":"00003"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"center"}},"thead":{"row":{"entry":"TABLE 3"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}},{"entry":"Portion of XML document describing privileges for each user."}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"63pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"140pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"Line number","XML line"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"2","align":"center","rowsep":"1"}}]},{"entry":[{},"\u20021",". . ."]},{"entry":[{},"\u20022","<ACL>"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"77pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"126pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"\u20023","<ACE>"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"91pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"112pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"\u20024","<principal>SCOTT <\/principal>"]},{"entry":[{},"\u20025","<privileges>"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"105pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"98pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"\u20026","<Generate_PO\/>"]},{"entry":[{},"\u20027","<Accept_Supplies\/>"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"91pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"112pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"\u20028","<\/privileges>"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"77pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"126pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"\u20029","<\/ACE>"]},{"entry":[{},"10","<ACE>"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"91pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"112pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"11","<principal>PETER <\/principal>"]},{"entry":[{},"12","<privileges>"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"105pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"98pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"13","<Approve_PO\/>"]},{"entry":[{},"14","<Pay_under_PO\/>"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"91pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"112pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"15","<\/privileges>"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"77pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"126pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"16","<\/ACE>"]},{"entry":[{},"17","..."]},{"entry":[{},"18","<\/ACL>"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"63pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"140pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"19",". . ."]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"2","align":"center","rowsep":"1"}}]}]}}]}},"br":{}},"In embodiments with multiple hierarchies, the privileges of a user in each of the hierarchies are specified during step . For example, if ACLs are used, there would be one set of ACLs specifying privileges in the purchase order hierarchy that applies to purchase order data items and another set of ACLs specifying privileges in a human resources hierarchy that supplies human resource data items.","In step , the server receives an access control request from the application. The request includes data that indicates a particular user and a particular application-specific operation and the data item on which the operation is to be performed. In embodiments with only one hierarchy that applies to all data items, the data item may be omitted. In embodiments with multiple hierarchies for one application, the privilege hierarchy to be used is inferred from the data item based on the type of the data item. A type of a data item indicates one or more data items or database objects. In some embodiments, the data indicating the particular application-specific operation is data that indicates a particular privilege for one or more of the application-specific operations.","For purposes of illustration, it is assumed that user SCOTT operates application  through client , and that user PETER operates application  through client . It is further assumed that user SCOTT has attempted to approve a particular purchase order, designated hereinafter as \u201cPO,\u201d which user SCOTT has just generated for office supplies. This causes the application  to generate an access control request including data that indicates the user SCOTT is attempting to perform, on a purchase order data item PO, an application-specific operation that requires the Approve_Services privilege. The database server receives the request during step .","In step , the server determines whether the application may perform the particular operation for the particular user based on the privileges associated with the particular user for the particular data item. For example, database server  determines whether the application  may perform the operation that requires the Approve_Services privilege for SCOTT based on the privileges associated with SCOTT for purchase order data items in the hierarchy associated with purchase order data items.","During step , the server determines the appropriate hierarchy. For example, database server  determines that PO is a purchase order type database object based on database metadata maintained by the database server . Database server  then determines that the hierarchy of privileges received during step , in the XML document partially listed in Table 2, is the appropriated hierarchy.","During step , the server determines whether the user has the privilege indicated in the request. For example, the database server  determines that the user SCOTT appears in the ACL listed in Table 3 in the ACE at lines - for purchase order data items, but that the privilege Approve_Services is not listed among the privileges listed in lines -. Therefore, the user SCOTT does not have the privilege to perform this application-specific operation.","In step , the server returns a response to the application. The response includes data that indicates whether the application may perform the particular operation for the particular user. For example, database server  returns to application  a response indicating that the application  should not perform the approve services operations for user SCOTT associated with client . Based on this response, the application does not perform the operation. In some embodiments, the application sends a message to the user's client that the user is not allowed to perform the application-specific operation, based on this response. For example, based on the response, the application  sends a message to client that the user SCOTT is not allowed to approve a purchase order for services.","During step , as described above, the server determines whether the user has the privilege indicated in the request. It is advantageous to maintain privileges of users operating active clients of the application in a cache of fast memory. The more user privileges stored in cache, the more rapidly the server can respond to requests to support access control of application-specific operations. The more compactly the user privileges can be represented, the more users may be stored in the cache. According to an embodiment, the server represents the privileges associated with each user in cache using bitmaps. For example, database server  stores user privileges in cache  using bitmaps.","In this embodiment, the server associates each leaf node in a hierarchy with a bit position. For example, the nine leaf nodes listed in Table 1 for hierarchy  are associated with bit positions  through . When the server receives data indicating the privileges granted to a particular user (including reading such data from persistent storage), the server sets bits that correspond to the granted privileges to an \u201cON\u201d value, e.g. \u201c1,\u201d and sets bits that correspond to privileges not granted to an \u201cOFF\u201d value, e.g., \u201c0.\u201d When a privilege corresponding to a parent node is granted, the bits corresponding to all leaf nodes that are descendents of that parent node are set to the ON value. For example, the privileges granted to users SCOTT and PETER in the XML lines listed in Table 3 are represented by the bitmaps listed in Table 4, where bit positions count from right (least significant bit) to left (most significant).",{"@attributes":{"id":"p-0055","num":"0054"},"tables":{"@attributes":{"id":"TABLE-US-00004","num":"00004"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"center"}},"thead":{"row":{"entry":"TABLE 4"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}},{"entry":"Example bitmaps representing granted privileges in"},{"entry":"hierarchy of "}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"49pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"77pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"91pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"User ID","Bitmap"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"2","align":"center","rowsep":"1"}}]},{"entry":[{},"SCOTT","010000001"]},{"entry":[{},"PETER","100001110"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"2","align":"center","rowsep":"1"}}]}]}}]}},"br":{},"b":["110","110","110","110","110","110","110","110","100"],"i":["b","l","g","h","i ","g","h","i ","f"],"sup":["th ","th "]},"In some embodiments with multiple hierarchies, the leaf nodes of all the hierarchies are assembled into a single bitmap. In other embodiments, leaf nodes of different hierarchies are assembled in different bitmaps. In some embodiments, bit positions may be determined using a hash function based on the hierarchy name and the privilege name.","In an example embodiment using bitmaps, during step , the database server  determines if the bitmap of a particular user for a particular data item is already in cache . If so, an operation to retrieve the bitmap from data stored on permanent storage  can be avoided. If not, a bitmap for the user is retrieved from permanent storage  and added to cache . If there is not sufficient space in cache  to place the retrieved bitmap, then space in cache is freed using any method known in the art. For example, the memory allocated to the least recently used bitmap is made available for the bitmap of the particular user.","The database server  then determines the bit position associated with the privilege for the application-specific operation, or privilege, indicated in the access control request received in step . For example, using the hierarchy represented in Table 2, the database server determines that the approve services operation associated with the Approve_Services privilege is associated with the second leaf node and therefore the second bit of the bitmap.","During step , the database server  then determines whether the bit in that bit position is set to the ON value. For example, the database server determines that the second bit is not set to the ON value in the bitmap for SCOTT listed in Table 4. Therefore, the database server determines that SCOTT does not have the privilege to approve services.","If the database server  receives a request from PETER to approve PO, during step  the database server  determines that the second bit is set to the ON value in the bitmap for PETER listed in Table 4. Therefore, the database server determines that PETER does have the privilege to approve services","The use of cache  and bitmaps for determining the privileges of a user, as described here, is very efficient. An application developer may make use of such efficient determinations of privileges by a separate server, such as a database or content management server, without extensive software development. An application administrator simply provides the hierarchy of privileges and user privileges to the separate server one time, often using an interface already built for the separate server. A new application is developed, or an existing application is modified, simply to send access control requests to the separate server. The application does not need to be developed to efficiently determine whether privileges are available for an application-specific operation. For example, the application does not need to be developed to manage cache  or to form bitmaps of user privileges.",{"@attributes":{"id":"p-0062","num":"0061"},"figref":"FIG. 4","b":["400","400","402","404","402","400","406","402","404","406","404","400","408","402","404","410","402"]},"Computer system  may be coupled via bus  to a display , such as a cathode ray tube (CRT), for displaying information to a computer user. An input device , including alphanumeric and other keys, is coupled to bus  for communicating information and command selections to processor . Another type of user input device is cursor control , such as a mouse, a trackball, or cursor direction keys for communicating direction information and command selections to processor  and for controlling cursor movement on display . This input device typically has two degrees of freedom in two axes, a first axis (e.g., x) and a second axis (e.g., y), that allows the device to specify positions in a plane.","The invention is related to the use of computer system  for implementing the techniques described herein. According to one embodiment of the invention, those techniques are performed by computer system  in response to processor  executing one or more sequences of one or more instructions contained in main memory . Such instructions may be read into main memory  from another computer-readable medium, such as storage device . Execution of the sequences of instructions contained in main memory  causes processor  to perform the process steps described herein. In alternative embodiments, hard-wired circuitry may be used in place of or in combination with software instructions to implement the invention. Thus, embodiments of the invention are not limited to any specific combination of hardware circuitry and software.","The term \u201ccomputer-readable medium\u201d as used herein refers to any medium that participates in providing instructions to processor  for execution. Such a medium may take many forms, including but not limited to, non-volatile media, volatile media, and transmission media. Non-volatile media includes, for example, optical or magnetic disks, such as storage device . Volatile media includes dynamic memory, such as main memory . Transmission media includes coaxial cables, copper wire and fiber optics, including the wires that comprise bus . Transmission media can also take the form of acoustic or light waves, such as those generated during radio-wave and infra-red data communications.","Common forms of computer-readable media include, for example, a floppy disk, a flexible disk, hard disk, magnetic tape, or any other magnetic medium, a CD-ROM, any other optical medium, punchcards, papertape, any other physical medium with patterns of holes, a RAM, a PROM, and EPROM, a FLASH-EPROM, any other memory chip or cartridge, a carrier wave as described hereinafter, or any other medium from which a computer can read.","Various forms of computer readable media may be involved in carrying one or more sequences of one or more instructions to processor  for execution. For example, the instructions may initially be carried on a magnetic disk of a remote computer. The remote computer can load the instructions into its dynamic memory and send the instructions over a telephone line using a modem. A modem local to computer system  can receive the data on the telephone line and use an infra-red transmitter to convert the data to an infra-red signal. An infra-red detector can receive the data carried in the infra-red signal and appropriate circuitry can place the data on bus . Bus  carries the data to main memory , from which processor  retrieves and executes the instructions. The instructions received by main memory  may optionally be stored on storage device  either before or after execution by processor .","Computer system  also includes a communication interface  coupled to bus . Communication interface  provides a two-way data communication coupling to a network link  that is connected to a local network . For example, communication interface  may be an integrated services digital network (ISDN) card or a modem to provide a data communication connection to a corresponding type of telephone line. As another example, communication interface  may be a local area network (LAN) card to provide a data communication connection to a compatible LAN. Wireless links may also be implemented. In any such implementation, communication interface  sends and receives electrical, electromagnetic or optical signals that carry digital data streams representing various types of information.","Network link  typically provides data communication through one or more networks to other data devices. For example, network link  may provide a connection through local network  to a host computer  or to data equipment operated by an Internet Service Provider (ISP) . ISP  in turn provides data communication services through the world wide packet data communication network now commonly referred to as the \u201cInternet\u201d . Local network  and Internet  both use electrical, electromagnetic or optical signals that carry digital data streams. The signals through the various networks and the signals on network link  and through communication interface , which carry the digital data to and from computer system , are exemplary forms of carrier waves transporting the information.","Computer system  can send messages and receive data, including program code, through the network(s), network link  and communication interface . In the Internet example, a server  might transmit a requested code for an application program through Internet , ISP , local network  and communication interface .","The received code may be executed by processor  as it is received, and\/or stored in storage device , or other non-volatile storage device , or other non-volatile storage for later execution. In this manner, computer system  may obtain application code in the form of a carrier wave.","In the foregoing specification, the invention has been described with reference to specific embodiments thereof. It will, however, be evident that various modifications and changes may be made thereto without departing from the broader spirit and scope of the invention. The specification and drawings are, accordingly, to be regarded in an illustrative rather than a restrictive sense."],"BRFSUM":[{},{}],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"BRIEF DESCRIPTION OF THE DRAWINGS","p":["The present invention is illustrated by way of example, and not by way of limitation, in the figures of the accompanying drawings and in which like reference numerals refer to similar elements and in which:",{"@attributes":{"id":"p-0017","num":"0016"},"figref":"FIG. 1"},{"@attributes":{"id":"p-0018","num":"0017"},"figref":"FIG. 2"},{"@attributes":{"id":"p-0019","num":"0018"},"figref":"FIG. 3"},{"@attributes":{"id":"p-0020","num":"0019"},"figref":"FIG. 4"}]},"DETDESC":[{},{}]}
