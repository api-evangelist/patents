---
title: Hierarchical model for web browser navigation
abstract: Embodiments of the present invention enable navigation in a web browser to be supported by a session browse history. In embodiments, a session browse history may be an n-ary tree data structure. Embodiments of the present invention integrated into a browser enable a user to access a session browse history tree via browser UI displays such as a navigation bar, a main tool bar, or a combination thereof. In embodiments, a session browse history tree may be exported to persistent storage, and may be imported into and integrated with an active session browse history tree. In embodiments, a stored session browse history tree may be updated in response to handling a caught browser event such as a “browser refresh” event, and in response to processing a user-initiated “go to” request from the browser UI. In embodiments, a currently stored session browse history tree may be returned in response to a request received from the browser UI.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08433996&OS=08433996&RS=08433996
owner: Oracle International Corporation
number: 08433996
owner_city: Redwood Shores
owner_country: US
publication_date: 20090915
---

{"@attributes":{"id":"description"},"BRFSUM":[{},{}],"heading":["COPYRIGHT NOTICE","BACKGROUND","SUMMARY OF THE INVENTION","DETAILED DESCRIPTION OF THE PREFERRED EMBODIMENTS"],"p":["A portion of the disclosure of this patent document contains material which is subject to copyright protection. The copyright owner has no objection to the facsimile reproduction by anyone of the patent document, as it appears in the Patent and Trademark Office patent file or records, but otherwise reserves all copyright rights whatsoever.","A. Technical Field","The present invention pertains generally to web browsers, and relates more particularly to a hierarchical model for navigation in web browsers.","B. Background of the Invention","The widespread availability of a graphical web browser was in a large part responsible for the rapid expansion of the World Wide Web. Deployed as a software application, a web browser provides a user with a graphical user interface (GUI) from which to access information published to the Internet.","The GUI design of the pioneering web browser NCSA Mosaic was so intuitive that the browser made access to the web possible even for users who were not experienced with networks and software applications. Although many different web browser implementations exist today, and browsers are now used to access many different kinds of electronically published content, the current set of browsers all have a set of common GUI features that were present originally in NCSA Mosaic.","A large subset of the common browser GUI features support a user's navigation to electronically published content. Each piece of published content is identified by a Uniform Resource Identifier (URI), and a browser can be directed to a piece of content in response to a user entering that URI into the address bar of the browser GUI. Studies of web browser usage behavior have shown that, during a web browsing session, a typical user's navigation pattern (the user's web session browse history) is to visit and then re-visit a set of URIs frequently. Since URIs often are long and complex, it would be very tedious and time-consuming if the only way for a user to re-visit a URI required the user to re-enter the URI into the address bar of the browser's GUI. This is why an important subset of common browser GUI features enables a user to access a portion of the web session browse history so that a user may re-visit a URI by selecting from a displayed list of URIs that were previously visited during the browse session. Examples of these features include the navigation bar (\u201cnavbar\u201d), presenting a Forward Button and a Back Button, and the session history display accessed from the main toolbar of the browser GUI.","Electronically published content is increasing in both amount and complexity. Because of the ubiquitous use of browsers to access electronically published content, it is important for a browser GUI to be able to provide optimally efficient navigation support to a user. Being able to provide efficient access to a comprehensive web session browse history is one way to accomplish this goal.","Embodiments of the present invention enable navigation in a web browser to be supported by a session browse history. In embodiments, a session browse history may be an n-ary tree data structure. Embodiments of the present invention integrated into a browser enable a user to access a session browse history tree via browser UI displays such as a navigation bar, a main tool bar, or a combination thereof. In embodiments, a session browse history tree may be exported to persistent storage, and may be imported into and integrated with an active session browse history tree. In embodiments, a stored session browse history tree may be updated in response to handling a caught browser event such as a \u201cbrowser refresh\u201d event, and in response to processing a user-initiated \u201cgo to\u201d request from the browser UI. In embodiments, a currently stored session browse history tree may be returned in response to a request received from the browser UI.","In embodiments, a browser user interface (UI) comprising a navigation display that provides access to browse history may comprise a session forward icon that, in response to a user's selection of the icon, causes the navigation display to display a first portion of a tree-based session browse history comprising link nodes, the first portion corresponding to a set of link nodes that have been visited by the user after a currently visited link node; and a session backward icon that, in response to a user's selection of the icon, causes the navigation display to display a second portion of a tree-based session browse history comprising link nodes, the second portion corresponding to a set of link nodes that have been visited by the user before a currently visited link node. In embodiments, a tree-based session browse history may comprise link nodes, where each link node is associated with a Universal Resource Identifier (URI), and selection of a link node causes the browser to navigate to the URI associated with the link node. In embodiments, a first link node in the tree-based session browse history may have a set of one or more child link nodes, and the navigation display may comprise the first link node and an icon representing the presence of the set of child link nodes where, in response to the user selecting the icon, the navigation display is updated to comprise the first link node and at least some of the set of child link nodes.","In embodiments, the browser UI may further comprise a session browsing history icon that, in response to a user's selection of the icon, causes the navigation display to provide access to a complete tree-based session browse history. In embodiments, access to the complete tree-based session browse history may be provided by displaying a portion of the complete tree-based session browse history and an indicator that provides access to an undisplayed portion of the complete tree-based session browse history. In embodiments, the undisplayed portion is displayed in response to the user's selection of the indicator. In embodiments, the navigation display adjusts around a link node that is selected by the user.","In embodiments, the browser UI may further comprise a \u201csave\u201d icon that causes the tree-based session browse history to be saved in response to the user's selection of the \u201csave\u201d icon; and an \u201copen\u201d icon that, in response to the user's selection of the \u201copen\u201d icon, allows the user to select a previously saved browser session history, and causes the selected session browse history to be added to the tree-based session browse history. In embodiments, the navigation display may be updated to display at least a portion of the saved tree-based session browse history that was imported.","In embodiments, the browser UI may further comprise a \u201cback\u201d session navigation icon that causes the browser to perform sequential navigation to a link node visited just prior to the currently visited link node in response to a user's selection of the icon; and a \u201cforward\u201d session navigation icon that causes the browser to perform sequential navigation to a link node visited just after the currently visited link node in response to the user's selection of the icon. In embodiments, the \u201cback\u201d or \u201cforward\u201d link node may be identified based on a current value of a path property of the tree-based session browse history.","In embodiments, a computer processing system for providing a navigation display within a browser UI may comprise a UI processor that dispatches a task processing request associated with input data to a request handler in response to receiving the input data from the browser UI, and that provides the navigation display within the browser UI in response to receiving a task processing result from a request handler; the request handler that generates a processing task result by executing a task comprising accessing the tree-based browse history in response to receiving the processing task request associated with the input data; and a browse history manager that accesses a stored representation of the tree-based browse history in response to receiving a browse history access request from the request handler. In embodiments, the navigation display may comprise a session forward icon that, in response to a user's selection of the icon, causes the navigation display to display a first portion of a tree-based session browse history comprising link nodes, the first portion corresponding to a set of link nodes that have been visited by the user after a currently visited link node; and a session backward icon that, in response to a user's selection of the icon, causes the navigation display to display a second portion of a tree-based session browse history comprising link nodes, the second portion corresponding to a set of link nodes that have been visited by the user before a currently visited link node. In embodiments, a tree-based session browse history may comprise link nodes, where each link node is associated with a URI.","In embodiments, the processing task request specifies updating the tree-based session browse history, and executing the processing task may comprise retrieving a stored representation of the tree-based session browse history from data storage; adding a link node associated with a URI that is not represented by a link node in the tree-based session browse history if the input data comprises the URI; updating a set of properties associated with the tree-based session browse history; and storing a representation of the updated tree-based history in data storage. In embodiments, the set of properties may comprise \u201ccurrent node\u201d and \u201ccurrent path.\u201d In embodiments, adding a link node to the tree-based session browse history may comprise creating the link node; identifying a second link node within the tree-based session browse history that is currently being visited by the browser; and adding the first link node to a set of child link nodes associated with the second link node.","In embodiments, the computer processing system may further comprise an on-event listener that dispatches a task processing request associated with a browser-generated event to the request handler in response to receiving the event.","In embodiments, a computer program product may provide a method for providing a navigation display that provides access to browse history, and the method may comprise providing a session forward icon that, in response to a user's selection of the icon, causes the navigation display to display a first portion of a tree-based session browse history comprising link nodes, the first portion corresponding to a set of link nodes that have been visited by the user after a currently visited link node; and providing a session backward icon that, in response to a user's selection of the icon, causes the navigation display to display a second portion of a tree-based session browse history comprising link nodes, the second portion corresponding to a set of link nodes that have been visited by the user before a currently visited link node. In embodiments, a tree-based session browse history may comprise link nodes, where each link node is associated with a Universal Resource Identifier (URI), and selection of a link node causes the browser to navigate to the URI associated with the link node. In embodiments, a first link node in the tree-based session browse history may have a set of one or more child link nodes, and the navigation display may comprise the first link node and an icon representing the presence of the set of child link nodes where, in response to the user selecting the icon, the navigation display is updated to comprise the first link node and at least some of the set of child link nodes.","In embodiments, the method may further comprise providing a session browsing history icon that, in response to a user's selection of the icon, causes the navigation display to provide access to a complete tree-based session browse history. In embodiments, access to the complete tree-based session browse history may be provided by displaying a portion of the complete tree-based session browse history and an indicator that provides access to an undisplayed portion of the complete tree-based session browse history. In embodiments, the undisplayed portion is displayed in response to the user's selection of the indicator. In embodiments, the navigation display adjusts around a link node that is selected by the user.","In embodiments, the method may further comprise providing a \u201csave\u201d icon that causes the tree-based session browse history to be saved in response to the user's selection of the \u201csave\u201d icon; and providing an \u201copen\u201d icon that, in response to the user's selection of the \u201copen\u201d icon, allows the user to select a previously saved browser session history, and causes the selected session browse history to be added to the tree-based session browse history. In embodiments, the navigation display may be updated to display at least a portion of the saved tree-based session browse history that was imported.","In embodiments, the method may further comprise providing a \u201cback\u201d session navigation icon that causes the browser to perform sequential navigation to a link node visited just prior to the currently visited link node in response to a user's selection of the icon; and providing a \u201cforward\u201d session navigation icon that causes the browser to perform sequential navigation to a link node visited just after the currently visited link node in response to the user's selection of the icon. In embodiments, the \u201cback\u201d or \u201cforward\u201d link node may be identified based on a current value of a path property of the tree-based session browse history.","Some features and advantages of the invention have been generally described in this summary section; however, additional features, advantages, and embodiments are presented herein or will be apparent to one of ordinary skill in the art in view of the drawings, specification, and claims hereof. Accordingly, it should be understood that the scope of the invention shall not be limited by the particular embodiments disclosed in this summary section.","In the following description, for purposes of explanation, specific details are set forth in order to provide an understanding of the invention. It will be apparent, however, to one skilled in the art that the invention can be practiced without these details. Furthermore, one skilled in the art will recognize that embodiments of the present invention, described below, may be implemented in a variety of ways, including software, hardware, or firmware, or combinations thereof. Accordingly, the figures described herein are illustrative of specific embodiments of the invention and are meant to avoid obscuring the invention.","Components, or modules, shown in block diagrams are illustrative of exemplary embodiments of the invention and are meant to avoid obscuring the invention. It shall also be understood that throughout this discussion that components may be described as separate functional units, which may comprise sub-units, but those skilled in the art will recognize that various components, or portions thereof, may be divided into separate components or may be integrated together, including integrated within a single system or component.","Furthermore, connections between components within the figures are not intended to be limited to direct connections. Rather, data between these components may be modified, re-formatted, or otherwise changed by intermediary components. Also, additional or fewer connections may be used. It shall also be noted that the terms \u201ccoupled\u201d or \u201ccommunicatively coupled\u201d shall be understood to include direct connections, indirect connections through one or more intermediary devices, and wireless connections.","Reference in the specification to \u201cone embodiment,\u201d \u201cpreferred embodiment,\u201d \u201can embodiment,\u201d or \u201cembodiments\u201d means that a particular feature, structure, characteristic, or function described in connection with the embodiment is included in at least one embodiment of the invention and may be in more than one embodiment. The appearances of the phrases \u201cin one embodiment,\u201d \u201cin an embodiment,\u201d or \u201cin embodiments\u201d in various places in the specification are not necessarily all referring to the same embodiment or embodiments.","The use of certain terms in various places in the specification is for illustration and should not be construed as limiting. Usage of the term \u201cservice\u201d is not limited to describing a single function; usage of the term also may refer to a grouping of related functions or functionality. Similarly, usage of the term \u201cresource\u201d is not limited to describing a single resource; the term also may be used to refer to a set of resources that may either be distributed or aggregated within a computing environment.","A. Overview","It is well known to those skilled in the art that a web browser user typically re-visits web pages (each page (\u201clink\u201d) is identified by a Uniform Resource Identifier (\u201cURI\u201d)) during a web browsing session. The user's link navigation behavior may be represented as a user's session browse history data structure comprising a set of URIs visited by the user during a web browsing session. A user that has access to his\/her session browse history is able to re-visit links more rapidly during the browsing session because the user desiring to re-visit a link is able to select the link from the browse history instead of being required to re-enter the link URI into the browser. Therefore, a navigation display such as a navigation bar (\u201cnavbar\u201d), which facilitates link navigation by displaying a session browse history to a web browser user, is a ubiquitous user interface (UI) feature provided by web browsers.","An exemplary browser navigation display includes support for two types of user link navigation behavior based on a session browse history: 1) Sequential navigation in which a user may re-visit the links visited just prior to and\/or just after the link currently displayed; and 2) Random access navigation in which a user may re-visit a link selected from a display of previously visited links.","Sequential navigation commonly is supported by providing icons called the \u201cForward Button\u201d (enabling re-visiting of a link added to the browse history immediately after the currently displayed link) and the \u201cBack Button\u201d (enabling re-visiting of a link added to the browse history immediately before the currently displayed link). In various embodiments, each user selection (e.g., via a left-button mouse click) of a Forward Button icon navigates the browser to a link visited just after the link currently displayed, and each user selection of a Back Button icon navigates the browser to a link visited just prior to the link currently displayed.","Random access navigation commonly is supported within a navigation display by drop-down displays associated with the Forward Button and\/or the Back Button icons. In an exemplary navbar random access navigation scenario, a user activates a drop-down display of a set of links in the order of visitation just prior to or just after the currently displayed link by selecting (e.g., via a right-button mouse click) either the Back Button or the Forward Button, respectively. The user then may select to re-visit any link within the drop-down display.","An exemplary user web browsing scenario based on using a navigation display is depicted in Table 1, and will be referenced for illustration purposes and not for limitation. The scenario starts at page A (the \u201croot\u201d page).",{"@attributes":{"id":"p-0053","num":"0052"},"tables":{"@attributes":{"id":"TABLE-US-00001","num":"00001"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"center"}},"thead":{"row":{"entry":"TABLE 1"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}},{"entry":"An exemplary link navigation scenario."}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"63pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"154pt","align":"center"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["Link Navigation","Currently Displayed Link (After Step Completion)"]},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}},{"entry":["1. A","page A"]},{"entry":["2. A -> B -> C","page C"]},{"entry":["3. Back Button","page B"]},{"entry":["4. B -> D -> E","page E"]},{"entry":["5. Back Button","page D"]},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}}]}}]}}},"1. Stack-Based Browse History","A typical browser stores the URIs of the set of links visited by a user in a browse history data structure that is based on a stack model. It is well-known to those skilled in the art that a \u201cstack\u201d is a LIFO (last in, first out) data structure in which the elements are ordered linearly according to how recently they were added to the data structure. An element being added to a stack is \u201cpushed\u201d onto the stack (added to the top of the stack), and an element being removed from a stack is \u201cpopped\u201d from the stack (removed from the top of the stack). A stack-based model of a browse history is a linear representation of the links visited by a user, with the most recently visited links being at the top of the stack. A \u201ccurrent\u201d stack pointer is associated with the link currently being displayed in the browser to the user.","Employing sequential navigation via an exemplary navigation display based on a stack-based browse history, each user selection of a Forward Button icon would move the current stack pointer one position towards the top of the stack, and each user selection of a Back Button icon would move the current stack pointer one position towards the bottom of the stack. Employing random access navigation via an exemplary navigation display based on a stack-based browse history, the drop-down display of links associated with the Back Button contains the ordered set of links between the current stack pointer and the bottom of the stack. The drop-down display of links associated with the Forward Button contains the ordered set of links between the current stack pointer and the top of the stack.",{"@attributes":{"id":"p-0057","num":"0056"},"figref":"FIG. 1","b":["2","1"]},"Column  of  illustrates a limitation associated with link navigation that is based on a stack-based browse history. In Step , beginning when the current stack pointer indicates page B (i.e., page B is the page currently displayed by the browser), any links between the current stack pointer and the top of the stack (page C in this example) must be popped off the stack before the new links (pages D and E) that are added after the current stack pointer can be pushed onto the stack. Thus, after the completion of Step , page C has been removed from the browse history and no longer can be reached by either sequential or random access navigation based on that browse history. Using a navigation history based on a stack-based browse history, a user's selection of the Forward Button after Step  would navigate the user to page E, which the user also would see in a drop-down display associated with the Forward Button. A user's selection of the Back Button again after the completion of Step  would navigate the user to page B, and the user would see pages B and A in a drop-down display associated with the Back Button.","2. Hierarchical Tree-Based Browse History","As is well known to those skilled in the art, a tree-based data structure contains a hierarchical ordering of linked data nodes. A tree-based data structure is a connected graph, where each tree node is linked to a set of zero or more child nodes and at most one parent node. Each child node may be considered to represent a tree branch that originates from the parent node. An n-ary tree structure is one in which the tree can have any number of branches. A tree-based data structure begins with a \u201croot\u201d node (having no parent node) and grows (i.e., nodes are added) away from the root. In embodiments, a user's session browse history may be represented as an n-ary tree data structure. Each node of the structure comprises the URI of a visited link, and the node link has at most one parent node (the link visited just prior to the node link) and a set of zero or more child nodes (links visited just after the node link). Since an n-ary tree node may have more than one child node, a tree-based browse history does not share the limitation of a stack-based browse history in which branches from a link node are lost when new link nodes are added to the browse history.","Column  in  depicts a hierarchical tree-based browse history of the exemplary link navigation scenario depicted in Table 1. The solid arrows represent new child links added to the data structure, and the dashed arrows represent updated properties of the tree. The currently displayed page after completion of each step is underlined. It should be noted that, in contrast to the stack-based browse history depicted in column , the branch from page B to page C is not removed so that page C remains accessible within the tree-based browse history.","In embodiments, a browse history link node may further comprise a set of properties that provide additional information about the user's web browsing behavior. In embodiments, an exemplary property set may comprise a \u201cpath\u201d property as well as \u201ccurrent path\u201d and \u201ccurrent node\u201d properties to represent navigation behavior that does not require adding new nodes to the tree. The dotted arrows depicted in Steps - of column  illustrate updating properties within the browse history after a \u201cback\u201d navigation step that does not require addition of new tree nodes.","3. Navigation Display of a Tree-Based Browse History","Embodiments of the present invention may be incorporated into a web browser to provide a navigation display of a tree-based browse history. , B, C, , and  illustrate exemplary views of a tree-based browse history of a navigation display within a web browser UI, which are presented for purposes of illustration and not for limitation. A web browser UI may present one or more views of a navigation display to a user. Those skilled in the art will recognize that there are a variety of designs for a navigation display, and that the choices for number and types of navigation display designs to incorporate into a web browser UI are not critical to the invention.","a) Web Browser Navbar Display",{"@attributes":{"id":"p-0066","num":"0065"},"figref":"FIG. 2A","b":["110","115","120","125","130"]},"In embodiments, a user's selection of the navbar Back Button icon  and\/or the Forward Button icon  facilitates sequential navigation to re-visit links within the tree-based browse history. At the completion of Step  in the exemplary link navigation scenario illustrated in , page D is the link currently displayed in the browser, and selection of the Back Button icon would navigate the browser to page B (the previously visited link in both the stack-based and tree-based browse histories) while selection of the Forward Button icon would navigate the browser to page E (the next visited link in both browse histories).","As previously discussed, a stack-based browse history stores the most recent linear browse history within a session, while a tree-based browse history stores all of the browse history branches created during the session. Thus, determination of the previous and subsequently visited links can be made directly from a stack-based browse history, but, in various embodiments, this determination may be derived from a tree-based browse history. For example, the determination may be based on properties, such as \u201ccurrent path\u201d and \u201ccurrent node,\u201d of the tree-based browse history. Turning to the tree-based browse history illustrated for Step  in the link navigation scenario depicted in column  of , page B has two child nodes, page C and page D (i.e., page B is associated with two forward branches). If page B were the currently displayed link (\u201ccurrent node\u201d), a \u201ccurrent path\u201d property may be used to determine which of the child nodes was visited just prior to page B. Alternatively, in various embodiments, a separate stack-based path history may be maintained in addition to the tree-based browse history. Those skilled in the art will recognize that the implementation choice of path history maintenance is not critical to the invention.",{"@attributes":{"id":"p-0069","num":"0068"},"figref":["FIGS. 2B and 2C","FIG. 1","FIG. 2B","FIG. 2C","FIG. 2D"],"b":["5","3","5","115","125","120","120","210","220","4","2","215","218","215","5","115","210","120","215","220","225","215"]},{"@attributes":{"id":"p-0070","num":"0069"},"figref":"FIG. 3","b":["330","130","330","5","3"]},"The exemplary session browse history  is displayed as an \u201cinverted tree\u201d which has the root node at the top and each child link node on the \u201ctrunk\u201d displayed below its parent link node. A child link node on a branch (such as page C in this example) is displayed horizontally adjacent to its parent link node. The currently displayed link (page D) is designated by color in this example. In embodiments, a tree-based session history display may be updated in response to a user's selection of a link on a branch (i.e., the selected link becomes the current node), so that the displayed tree centers on the newly selected current node.","Those skilled in the art will recognize that there are a variety of designs for a tree display, and that a choice of tree display design attributes is not critical to the invention. For example, in various embodiments of the invention, a tree display may be within a drop-down menu, a page frame display showing a hierarchical file tree display (such as the Microsoft Windows File Explorer display), a \u201ctool tip\u201d type of popup window, and\/or displayed as a new browser page.","b) Web Browser Toolbar Drop-down Menu Display",{"@attributes":{"id":"p-0074","num":"0073"},"figref":"FIG. 4","b":["410","420","210","220","420"]},"In embodiments, a user may be provided with an interactive view of a tree-based browse session history  in response to selection of a \u201cBrowse History\u201d choice  presented in the \u201cHistory\u201d drop-down menu .  illustrates an exemplary display , returned in response to selection of a \u201cBrowse History\u201d choice , of the tree-based session browse history at the conclusion of Step  of the link navigation scenario (See column ). As previously described, the session browse history contains two branches from page B, and it was noted that a traditional stack-based browse history has a limitation because it does not contain both branches. In the exemplary display , each level of the hierarchy is represented as a column, with the \u201croot\u201d node being at column  (the far left). Thus, a parent-child link connects the parent (column N) with the child (column N+1) along a row. In the diagram , page A (column ) is linked to one child node, page B (column ), and that is designated with an arrow icon. Page B also has child links, designated by an arrow icon. The two child links of page B (representing the two branches in the browse history) begin on separate rows in column . Page D, the link currently being displayed by the web browser, may be designated by color, as in this example, or another graphic design attribute.","In embodiments, one or more properties may be associated with a node within a tree-based session browse history, and at least a subset of the properties may be provided in a graphical display of the browse history to a user. For example, a number representing the number of times a link was visited during a browse session may be associated with the link title and\/or URI. In various embodiments, lines and\/or color may be used to encode other session history properties such as paths, frequency of re-visits, and the presence of a link in the user's browser bookmarks\/favorites (along with an option to add the link to the browser bookmarks\/favorites if it is not present).","In embodiments, the browser and\/or its hosting computer may have limiting display capabilities that would prevent display of an entire session browse history. Therefore, a user may be provided with a means to select portions of the browse history tree display to expand or minimize, such as selecting the arrow icon associated with a node to display all of its child nodes.","In various embodiments, the browse history display  launched from the web browser main toolbar  may be the same display as the browse history display  launched from the browse session history icon  on the web browser navbar. Thus, a web browser UI may provide a user with multiple options to launch an interactive display of an entire browse session history.","4. Session Browse History Import\/Export","In various embodiments, a tree-based user browse history instance may be represented as at least one XML document, although those skilled in the art will recognize that a variety of data representational schemes exist, and that the data representation scheme choice is not critical to the invention. In embodiments, a user browse history instance may be cached in the browser or on the computing platform on which the browser is executing while, in other embodiments, a user browse history instance may be exported to a persistent data store, such as a database, computer file system, or other external medium, so that the browse history instance may be archived.","In embodiments, a browse history instance that is stored in an industry standard representational scheme, such as XML, may be retrieved, interpreted, and then integrated into the browse history of an active browser session. In embodiments, a stored browse history instance may be retrieved and then transmitted to one or more browser instances that are executing on a variety of types of computing platforms that include personal computers and mobile computing devices.",{"@attributes":{"id":"p-0082","num":"0081"},"figref":"FIG. 5A","b":"510"},"In embodiments, an exemplary policy for integrating an imported tree-based browse history instance into an active tree-based browse history is to make the currently displayed node of the active browse history the parent of the root node of the imported browse history instance.  depicts, for purposes of illustration and not limitation, an exemplary display of a tree-based browse history into which an imported tree-based browse history has been integrated. Following the exemplary policy just described, an imported tree-based browse history  has been made a new branch from the currently displayed node (page D) of the currently active browse history .","B. System Implementations",{"@attributes":{"id":"p-0085","num":"0084"},"figref":"FIG. 6","b":["600","630","605","615","600","610","640","650","610","640","630","620","650","630","600","645","600"]},"1. Browser Navigation Module",{"@attributes":{"id":"p-0087","num":"0086"},"figref":"FIG. 7","b":["700","705","700","600","700","705","705","700"]},"In various embodiments, browser navigation module  may receive input from a web browser as browser events  and\/or from a web browser user  via the browser UI elements (such as graphical user interface (GUI) widgets in the web browser application programming interface (API)). In embodiments, a request handler  is coupled  to an on-event listener  and coupled  to a UI elements processor  in order to receive processing requests and return processing results . In embodiments, an on-event listener  may generate a processing request in response to any of a designated subset of browser events that may include types of events generated directly by the browser (e.g., a browser refresh event) and types of events generated in response to processing a user request (e.g., a \u201cgo to\u201d navigation event). In embodiments, a UI elements processor may generate a processing request in response to input from a set of one or more browser UI elements.","In various embodiments, a session browse history  may be cached within the web browser or its host computing platform, and\/or the session browse history  may be stored persistently within data storage such as a database or file system. In embodiments, data within a stored session browse history may be accessed (e.g., updated and retrieved) by a browse history manager . In embodiments, a request handler  may access a browse history  via communication  with a browse history manager .","2. System for Handling Browser Events",{"@attributes":{"id":"p-0091","num":"0090"},"figref":"FIG. 8","b":["600","630","605"]},"It is well known to those skilled in the art that a browser refresh event  (e.g., an event that signals updating the content of the currently displayed page) may be generated in response to different types of browse session tasks. In embodiments, a browser refresh event  may be categorized as 1) a \u201cdirect\u201d event that is generated while processing a direct request by the user (e.g., a request entered by the user that specifies navigation to a new URI); and 2) an \u201cindirect\u201d event that is generated while processing the user's sequential navigation interaction with the Back Button and\/or Forward Button, or processing the user's random access navigation request via selection from a display (such as a drop-down display or tree-based display) of session history links.","In embodiments, a browser refresh event  comprising browser refresh data  is received by the on-event listener . In embodiments, the browser refresh event type and the browser refresh data  are received by request handler , which transmits a browse history update  request to browse history manager . If the received browser refresh event  is a \u201cdirect\u201d refresh event, the browse history update  comprises adding a new node to the browse history tree and updating tree properties such as current node and path. If the received browser refresh event  is an \u201cindirect\u201d refresh event, the browse history update  comprises updating tree properties such as current node and path, but the update does not comprise adding a new node to the browse history tree.","3. System for Handling UI Input",{"@attributes":{"id":"p-0095","num":"0094"},"figref":"FIGS. 9 and 10","b":["620","615"]},{"@attributes":{"id":"p-0096","num":"0095"},"figref":"FIG. 9","b":["905","650","925","955"]},"In embodiments, a generated browser refresh event  may be caught by on-event listener . Those skilled in the art will recognize that a variety of implementation choices exist for insuring that catching a generated browser refresh event  will not result in a second update of the browse history. For example, in embodiments, the \u201cgo to\u201d request data  from the UI elements processor  may comprise the URI of the page from which the request initiated, and, during processing of the \u201cgo to\u201d request data , the request handler  may cache that URI as the value of a \u201clast browser page UI request\u201d property. If the browser refresh data  of a subsequently received browser refresh event  comprise the same initiating page URI as the cached value of the \u201clast browser page UI request\u201d property, the request handler  will recognize that it had previously generated the browser refresh event . In embodiments, the request handler  will clear the cached property and will not process the event.",{"@attributes":{"id":"p-0098","num":"0097"},"figref":"FIG. 10","b":["1005","1045","1015","1015","650","1025","1035","1015","650","1025","630","630","1035","650","1015","630","1015"]},"C. Method Implementations","The following sections describe embodiments of methods for maintaining a tree-based browse session history in response to browser events and\/or web browser user input via the browser UI according to various embodiments of the invention. The method embodiments may be implemented in embodiments of browser navigation system .","1. Method for Handling Browser Events",{"@attributes":{"id":"p-0102","num":"0101"},"figref":["FIG. 11","FIG. 8"],"b":["1100","630","605","1100","600","805"]},"A browser event  having a type belonging to a specified set of browser event types is captured  by an event listener . As previously described, a browser event may be categorized as a \u201cdirect\u201d event that is generated while processing a direct request by the user, or as an \u201cindirect\u201d event that is generated while processing the user's sequential or random access navigation interaction with the web browser UI.","In embodiments, the user's stored session browse history tree is updated using a set of data associated with the event. If the received browser event  is determined to be a \u201cdirect\u201d event , at least one new node is added  to the stored session browse history tree, and tree properties (such as current node and path) are updated . If the received browser event  is determined to be an \u201cindirect\u201d event , tree properties (such as current node and path) are updated , but no new node is added to the stored session browse history tree.","2. Methods for Handling UI Input","The following sections describe embodiments of methods for processing received web browser user input via the browser UI  according to various embodiments of the invention. The methods may be implemented in embodiments of browser navigation system .","a) Method for Processing a User-Initiated \u201cGo To\u201d Navigation Request",{"@attributes":{"id":"p-0108","num":"0107"},"figref":["FIG. 12","FIG. 9"]},"As previously described, a user may interact with the web browser UI to initiate a direct navigation request (e.g., a request entered by the user that specifies navigation to a URI). In embodiments, processing a \u201cgo to\u201d request  that is received  from the web browser UI includes updating  the user's stored session browse history tree in the same way as an update is performed during processing of a \u201cdirect\u201d event (steps  and  in method ). In embodiments, processing a received \u201cgo to\u201d request  also comprises generating a \u201cbrowser refresh\u201d event  to be handled by the web browser.","As previously described, a \u201cbrowser refresh\u201d browser event may be captured by embodiments of browser navigation system , and handling the captured event may comprise updating the user's stored session browse history tree (steps  and  in method ).","In embodiments, request handler  may implement synchronization between method  and method  to insure that catching a browser refresh event  generated by browser system  will not result in a second update of the browse history. For example, in embodiments, the \u201cgo to\u201d request data  from the UI elements processor  may comprise the URI of the page from which the request initiated, and, during processing (method ) of the \u201cgo to\u201d request data , the request handler  may cache that URI as the value of a \u201clast browser page UI request\u201d property. If the browser refresh data  of a subsequently received browser refresh event  comprise the same initiating page URI as the cached value of the \u201clast browser page UI request\u201d property, the request handler  will recognize that it had previously generated the browser refresh event . In embodiments, the request handler  processing the recognized browser event (method ) may comprise clearing the cached property and will not comprise updating the browse history .","b) Method for Processing a UI Request for a Current Browse History",{"@attributes":{"id":"p-0113","num":"0112"},"figref":["FIG. 13","FIG. 10"],"b":"1300"},"In embodiments, an instance of the user's stored session browse history tree is returned  in response to receiving  a request from the web browser UI. In embodiments, the instance of the user's stored session browse history tree may be retrieved  as a \u201cpull\u201d operation from a persistent data store in response to receiving  a data fetch request . In other embodiments, the instance of the user's stored session browse history tree may be retrieved  from a cached instance of the tree in response to receiving  the data fetch request . In embodiments, the cached instance of the tree is replaced with an instance of the stored browse history  after receipt of a notification (e.g., via an event generated by the browse history  and\/or by polling the browse history ) that the stored browse history has been updated.","D. Computing System Implementations","It shall be noted that the present invention may be implemented in any instruction-execution\/computing device or system capable of processing data. The present invention may also be implemented into other computing devices and systems. Furthermore, aspects of the present invention may be implemented in a wide variety of ways including software, hardware, firmware, or combinations thereof. For example, the functions to practice various aspects of the present invention may be performed by components that are implemented in a wide variety of ways including discrete logic components, one or more application specific integrated circuits (ASICs), and\/or program-controlled processors. It shall be noted that the manner in which these items are implemented is not critical to the present invention.",{"@attributes":{"id":"p-0117","num":"0116"},"figref":["FIG. 14","FIG. 14"],"b":["1400","1402","1402","1404","1402","1404","1404","1402","1404","1406","1402","1404","1402","1400"]},"An addressable memory , coupled to processor , may be used to store data and software instructions to be executed by processor . Memory  may be, for example, firmware, read only memory (ROM), flash memory, non-volatile random access memory (NVRAM), random access memory (RAM), or any combination thereof. In one embodiment, memory  stores a number of software objects, otherwise known as services, utilities, components, or modules. One skilled in the art will also recognize that storage  and memory  may be the same items and function in both capacities. In an embodiment, one or more of the components of  may be modules stored in memory ,  and executed by processor .","In an embodiment, computing system  provides the ability to communicate with other devices, other networks, or both. Computing system  may include one or more network interfaces or adapters ,  to communicatively couple computing system  to other networks and devices. For example, computing system  may include a network interface , a communications port , or both, each of which are communicatively coupled to processor , and which may be used to couple computing system  to other computer systems, networks, and devices.","In an embodiment, computing system  may include one or more output devices , coupled to processor , to facilitate displaying graphics and text. Output devices  may include, but are not limited to, a display, LCD screen, CRT monitor, printer, touch screen, or other device for displaying information. Computing system  may also include a graphics adapter (not shown) to assist in displaying information or images on output device .","One or more input devices , coupled to processor , may be used to facilitate user input. Input device  may include, but are not limited to, a pointing device, such as a mouse, trackball, or touchpad, and may also include a keyboard or keypad to input data or instructions into computing system .","In an embodiment, computing system  may receive input, whether through communications port , network interface , stored data in memory \/, or through an input device , from a scanner, copier, facsimile machine, or other computing device.","In embodiments, computing system  may include one or more databases, some of which may store data used and\/or generated by programs or applications. In embodiments, one or more databases may be located on one or more storage devices  resident within a computing system . In alternate embodiments, one or more databases may be remote (i.e. not local to the computing system ) and share a network  connection with the computing system  via its network interface . In various embodiments, a database may be a relational database, such as an Oracle database, that is adapted to store, update, and retrieve data in response to SQL-formatted commands.","One skilled in the art will recognize no computing system is critical to the practice of the present invention. One skilled in the art will also recognize that a number of the elements described above may be physically and\/or functionally separated into sub-modules or combined together.","It shall be noted that embodiments of the present invention may further relate to computer products with a computer-readable medium that have computer code thereon for performing various computer-implemented operations. The media and computer code may be those specially designed and constructed for the purposes of the present invention, or they may be of the kind known or available to those having skill in the relevant arts. Examples of computer-readable media include, but are not limited to: magnetic media such as hard disks, floppy disks, and magnetic tape; optical media such as CD-ROMs and holographic devices; magneto-optical media; and hardware devices that are specially configured to store or to store and execute program code, such as application specific integrated circuits (ASICs), programmable logic devices (PLDs), flash memory devices, and ROM and RAM devices. Examples of computer code include machine code, such as produced by a compiler, and files containing higher level code that are executed by a computer using an interpreter. Embodiments of the present invention may be implemented in whole or in part as machine-executable instructions that may be in program modules that are executed by a computer. Examples of program modules include libraries, programs, routines, objects, components, and data structures. In distributed computing environments, program modules may be physically located in settings that are local, remote, or both.","While the invention is susceptible to various modifications and alternative forms, specific examples thereof have been shown in the drawings and are herein described in detail. It should be understood, however, that the invention is not to be limited to the particular forms disclosed, but to the contrary, the invention is to cover all modifications, equivalents, and alternatives falling within the scope of the appended claims."],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"BRIEF DESCRIPTION OF THE DRAWINGS","p":["Reference will be made to embodiments of the invention, examples of which may be illustrated in the accompanying figures. These figures are intended to be illustrative, not limiting. Although the invention is generally described in the context of these embodiments, it should be understood that it is not intended to limit the scope of the invention to these particular embodiments.",{"@attributes":{"id":"p-0024","num":"0023"},"figref":"FIG. 1"},{"@attributes":{"id":"p-0025","num":"0024"},"figref":"FIG. 2A"},{"@attributes":{"id":"p-0026","num":"0025"},"figref":"FIG. 2B"},{"@attributes":{"id":"p-0027","num":"0026"},"figref":"FIG. 2C"},{"@attributes":{"id":"p-0028","num":"0027"},"figref":"FIG. 2D"},{"@attributes":{"id":"p-0029","num":"0028"},"figref":"FIG. 3"},{"@attributes":{"id":"p-0030","num":"0029"},"figref":"FIG. 4"},{"@attributes":{"id":"p-0031","num":"0030"},"figref":"FIG. 5A"},{"@attributes":{"id":"p-0032","num":"0031"},"figref":"FIG. 5B"},{"@attributes":{"id":"p-0033","num":"0032"},"figref":"FIG. 6"},{"@attributes":{"id":"p-0034","num":"0033"},"figref":"FIG. 7"},{"@attributes":{"id":"p-0035","num":"0034"},"figref":"FIG. 8"},{"@attributes":{"id":"p-0036","num":"0035"},"figref":"FIG. 9"},{"@attributes":{"id":"p-0037","num":"0036"},"figref":"FIG. 10"},{"@attributes":{"id":"p-0038","num":"0037"},"figref":"FIG. 11"},{"@attributes":{"id":"p-0039","num":"0038"},"figref":"FIG. 12"},{"@attributes":{"id":"p-0040","num":"0039"},"figref":"FIG. 13"},{"@attributes":{"id":"p-0041","num":"0040"},"figref":"FIG. 14"}]},"DETDESC":[{},{}]}
