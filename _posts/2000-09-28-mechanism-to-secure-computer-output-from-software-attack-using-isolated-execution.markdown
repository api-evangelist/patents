---
title: Mechanism to secure computer output from software attack using isolated execution
abstract: A method and platform for maintaining the security of output data in an isolated execution environment. A system memory has an isolated output area readable only by secure output controllers having an isolated execution mode. The output controllers may make a request for access to the isolated output area, upon proper authentication if the request access is granted. The output device may either DMA the content of the isolated output area to an output end point, such as a display, or load it into local storage, the security of which is guaranteed by the controller.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=07389427&OS=07389427&RS=07389427
owner: Intel Corporation
number: 07389427
owner_city: Santa Clara
owner_country: US
publication_date: 20000928
---

{"@attributes":{"id":"description"},"BRFSUM":[{},{}],"heading":["BACKGROUND","DETAILED DESCRIPTION"],"p":["(1) Field of the Invention","The invention relates to data security. More specifically, the invention relates to securing output data in an isolated execution environment.","(2) Background","Data security is increasingly important in this data-driven society. To that end, multilevel platforms have been developed to support both a normal execution mode and an isolated execution mode. A section of memory is allocated for use only in the isolated execution mode. Encryption and authentication are used any time isolated data is moved into a non-isolated section of the memory. In this manner, data used and maintained in isolated execution mode is not security compromised. However, when an isolated data is output to an output device, such as a display, it may be possible for insecure software to access the displayed data from the display when displayed in isolated execution mode or after the system returns to normal mode. This avenue of attack may compromise the security of isolated data.","The present invention relates to a platform and method for maintaining the remote security of output data. A processor executing in isolated execution \u201cIsoX\u201d mode may have output such as display data. That data may be conveyed through a graphic card to a display. The graphic card may be enabled to operate in an IsoX mode and access a specially partitioned portion of memory to retrieve output data when the platform is in IsoX mode. The graphics card may be allowed to direct memory access (DMA), the data for each screen refresh, or it may store it in a secure bit plane on the graphics card for output. By \u201csecure\u201d bit plane, it is meant that only the graphics card (or possibly very special isolated components, such as the operating system nub described below) may access the bit plane. This IsoX graphics card is required to restrict access by all non-secure components of the system.","In the following description, certain terminology is used to discuss features of various embodiments of the invention. For example, a \u201cplatform\u201d includes components that perform different functions on stored information. Examples of a platform include, but are not limited or restricted to a computer (e.g., desktop, a laptop, a hand-held, a server, a workstation, etc.), desktop office equipment (e.g., printer, scanner, a facsimile machine, etc.), a wireless telephone handset, a television set-top box, and the like. Examples of a \u201ccomponent\u201d include hardware (e.g., an integrated circuit, etc.) and\/or one or more software modules. A \u201csoftware module\u201d is code that, when executed, performs a certain function. This code may include an operating system, an application, an applet or even a nub being a series of code instructions, possibly a subset of code from an applet. A \u201clink\u201d is broadly defined as one or more information-carrying mediums (e.g., electrical wire, optical fiber, cable, bus, or air in combination with wireless signaling technology) to establish a communication pathway. This pathway is deemed \u201cprotected\u201d when it is virtually impossible to modify information routed over the pathway without detection.","In addition, the term \u201cinformation\u201d is defined as one or more bits of data, address, and\/or control and a \u201csegment\u201d is one or more bytes of information. A \u201cmessage\u201d is a grouping of information, possibly packetized information. \u201cKeying material\u201d includes any information needed for a specific cryptographic algorithm such as a Digital Signature Algorithm. A \u201cone-way function\u201d is a function, mathematical or otherwise, that converts information from a variable-<length to a fixed-length (referred to as a \u201chash value\u201d or \u201cdigest\u201d). The term \u201cone-way\u201d indicates that there does not readily exist an inverse function to recover any discernible portion of the original information from the fixed-length hash value. Examples of a hash function include MD5 provided by RSA Data Security of Redwood City, Calif., or Secure Hash Algorithm (SHA-1) as specified in a 1995 publication Secure Hash Standard FIPS 180-1 entitled \u201cFederal Information Processing Standards Publication\u201d (Apr. 17, 1995).","I. Architecture Overview","In one embodiment, a platform utilizing the present invention may be configured with an isolated execution (IsoX\u2122) architecture. The IsoX\u2122 architecture includes logical and physical definitions of hardware and software components that interact directly or indirectly with an operating system of the platform. Herein, the operating system and a processor of the platform may have several levels of hierarchy, referred to as rings, which correspond to various operational modes. A \u201cring\u201d is a logical division of hardware and software components that are designed to perform dedicated tasks within the platform. The division is typically based on the degree or level of privilege, namely the ability to make changes to the platform. For example, a ring- is the innermost ring, being at the highest level of the hierarchy. Ring- encompasses the most critical, privileged components. Ring- is the outermost ring, being at the lowest level of the hierarchy. Ring- typically encompasses user level applications, which are normally given the lowest level of privilege. Ring- and ring- represent the intermediate rings with decreasing levels of privilege.",{"@attributes":{"id":"p-0016","num":"0015"},"figref":"FIG. 1A","b":["50","50","50","0","10","1","20","2","30","3","40","52","50","52"]},"Ring-  includes two portions: a normal execution Ring-  and an isolated execution Ring- . The normal execution Ring-  includes software modules that are critical for the operating system, usually referred to as the \u201ckernel\u201d. These software modules include a primary operating system  (e.g., kernel), software drivers , and hardware drivers . The isolated execution Ring-  includes an operating system (OS) nub  and a processor nub  as described below. The OS nub  and the processor nub  are instances of an OS executive (OSE) and processor executive (PE), respectively. The OSE and the PE are part of executive entities that operate in a protected environment associated with the isolated area  and the IsoX mode. The processor nub loader  is a bootstrap loader code that is responsible for loading the processor nub  from the processor or chipset into an isolated area as will be explained later.","Similarly, ring- , ring- , and ring-  include normal execution ring- , ring- , ring- , and isolated execution ring- , ring- , and ring- , respectively. In particular, normal execution ring- includes N applications -and isolated execution ring- includes Mapplets -(where \u201cN\u201d and \u201cM\u201d are positive whole numbers).","One concept of the IsoX\u2122 architecture is the creation of an isolated region in the system memory, which is protected by components of the platform (e.g., the processor and chipset). This isolated region, referred to herein as an \u201cisolated area,\u201d may also be in cache memory that is protected by a translation look aside (TLB) access check. Access to this isolated area is permitted only from a front side bus (FSB) of the processor, using special bus cycles (referred to as \u201cisolated read and write cycles\u201d) issued by the processor executing in IsoX mode. In one embodiment, a second isolated area, referred to herein as the isolated output area, is partitioned within main memory. In one embodiment, the isolated output area is only readable by an output device in an isolated execution mode and writeable by the OS nub  via the output driver .","Typically shared links may be used within the platform for isolated output operations. Examples of these shared links include a Peripheral Component Interconnect (PCI) bus, an accelerated graphics port (AGP) bus, an Industry Standard Architecture (ISA) bus, a Universal Serial Bus (USB) bus and the like.","The IsoX mode is initialized using a privileged instruction in the processor, combined with the processor nub loader . The processor nub loader  verifies and loads a ring- nub software module (e.g., processor nub ) into the isolated area. For security purposes, the processor nub loader  is non-modifiable, tamper-resistant and non-substitutable. In one embodiment, the processor nub loader  is implemented in read only memory (ROM).","One task of the processor nub  is to verify and load the ring- OS nub  into the isolated area. The OS nub  provides links to services in the primary operating system  (e.g., the unprotected segments of the operating system), provides page management within the isolated area, and has the responsibility for loading ring- application modules , including applets to , into protected pages allocated in the isolated area. The OS nub  may also support paging of data between the isolated area and ordinary (e.g., non-isolated) memory. If so, then the OS nub  is also responsible for the integrity and confidentiality of the isolated area pages before evicting the page to the ordinary memory, and for checking the page contents upon restoration of the page. The OS nub  may also contain an output driver  to fill the isolated output area  with secure output data. In one embodiment, the output driver  writes a display bit map into the isolated output area for any data to be displayed when the platform is in isolated execution mode.","Referring now to , a diagram of the illustrative elements associated with the operating system  and the processor for one embodiment of the invention is shown. For illustration purposes, only elements of ring-  and ring-  are shown. The various elements in the logical operating architecture  access an accessible physical memory  according to their ring hierarchy and the execution mode.","The accessible physical memory  includes an isolated area , an isolated output area  and a non-isolated area . The isolated area  includes applet pages  and nub pages . The non-isolated area  includes application pages  and operating system pages . The isolated area  is accessible only to components of the operating system and processor operating in the IsoX mode. The non-isolated area  is accessible to all elements of the ring- operating system and processor. In one embodiment, the isolated output area  may only be accessed by the OS nub  and secure output devices. In some embodiments, access to the isolated output area  may be write-only for the OS nub  and read-only for the output device.","The normal execution ring-  including the primary OS , the software drivers , and the hardware drivers , can access both the OS pages  and the application pages . The normal execution ring-, including applications , to , can access only to the application pages . Neither the normal execution ring-  nor normal execution ring-  can access the isolated area  or the isolated output area .","The isolated execution ring- , including the OS nub  and the processor nub , can access the isolated area , including both the applet pages  and the nub pages , and the non-isolated area , including the application pages  and the OS pages . The isolated execution ring- , including applets to , can access only to the application pages  and the applet pages . The applets to reside in the isolated area .","Referring to , a block diagram of an illustrative embodiment of a platform utilizing the present invention is shown. In this embodiment, platform  comprises a processor , a chipset , a system memory  and peripheral components (e.g., tokens \/ coupled to a token link  and\/or a token reader ) in communication with each other. It is further contemplated that the platform  may contain optional components such as a non-volatile memory (e.g., flash)  and additional peripheral components. Examples of these additional peripheral components include, but are not limited or restricted to a mass storage device  and one or more input\/output (I\/O) devices . For clarity, the specific links for these peripheral components (e.g., PCI bus, AGP bus, ISA bus, USB bus, wireless transmitter\/receiver combinations, etc.) are not shown.","In general, the processor  represents a central processing unit of any type of architecture, such as complex instruction set computers (CISC), reduced instruction set computers (RISC), very long instruction word (VLIW), or hybrid architecture. In one embodiment, the processor  includes multiple logical processors. A \u201clogical processor,\u201d sometimes referred to as a thread, is a functional unit within a physical processor having an architectural state and physical resources allocated according to a specific partitioning functionality. Thus, a multi-threaded processor includes multiple logical processors. The processor  is compatible with the Intel Architecture (IA) processor, such as a PENTIUM\u00ae series, the IA-32\u2122 and IA-64\u2122. It will be appreciated by those skilled in the art that the basic description and operation of the processor  applies to either a single processor platform or a multi-processor platform.","The processor  may operate in a normal execution mode or an IsoX mode. In particular, an isolated execution circuit  provides a mechanism to allow the processor  to operate in an IsoX mode. The isolated execution circuit  provides hardware and software support for the IsoX mode. This support includes configuration for isolated execution, definition of the isolated area, definition (e.g., decoding and execution) of isolated instructions, generation of isolated access bus cycles, and generation of isolated mode interrupts.","As shown in , a host link  is a front side bus that provides interface signals to allow the processor  to communicate with other processors or the chipset . In addition to normal mode, the host link  supports an isolated access link mode with corresponding interface signals for isolated read and write cycles when the processor  is configured in the IsoX mode. The isolated access link mode is asserted on memory accesses initiated while the processor  is in the IsoX mode if the physical address falls within the isolated area address range. The isolated access link mode is also asserted on instruction pre-fetch and cache write-back cycles if the address is within the isolated area address range. The processor  responds to snoop cycles to a cached address within the isolated area address range if the isolated access bus cycle is asserted.","The chipset  includes a memory control hub (MCH)  and an input\/output control hub (ICH)  described below. The MCH  and the ICH  may be integrated into the same chip or placed in separate chips operating together.","With respect to the chipset , a MCH  provides control and configuration of memory and input\/output devices such as the system memory  and the ICH . The MCH  provides interface circuits to recognize and service isolated memory read and write cycles and\/or isolated output read and write cycles. In addition, the MCH  has memory range registers (e.g., base and length registers) to represent the isolated area and isolated output area in the system memory . The isolated output area and isolated area need not be contiguous. Similarly, the MCH  aborts any access to the isolated output area when the isolated output link mode is not asserted. Once configured, the MCH  aborts any access to the isolated area when the isolated access link mode is not asserted.","The system memory  stores code and data. The system memory  is typically implemented with dynamic random access memory (DRAM) or static random access memory (SRAM). The system memory  includes the accessible physical memory  (shown in ). The accessible physical memory  includes the isolated area , isolated output area , and the non-isolated area  as shown in . The isolated area  is the memory area that is defined by the processor  when operating in the IsoX mode. Access to the isolated area  is restricted and is enforced by the processor  and\/or the chipset  that integrates the isolated area functionality. Access to the isolated output memory will typically be controlled by the chipset  and more particularly the MCH . The non-isolated area  includes a loaded operating system (OS). The loaded OS  is the portion of the operating system that is typically loaded from the mass storage device  via some boot code in a boot storage such as a boot read only memory (ROM). Of course, the system memory  may also include other programs or data which are not shown.","As shown in , the ICH  supports isolated execution in addition to traditional I\/O functions. In this embodiment, the ICH  comprises at least the processor nub loader  (shown in ), a hardware-protected memory , an isolated execution logical processing manager , and a token link interface . For clarity, only one ICH  is shown although platform  may be implemented with multiple ICHs. When there are multiple ICHs, a designated ICH is selected to control the isolated area configuration and status. This selection may be performed by an external strapping pin. As is known by one skilled in the art, other methods of selecting can be used.","The processor nub loader , as shown in , includes a processor nub loader code and its hash value (or digest). After being invoked by execution of an appropriated isolated instruction (e.g., ISO_INIT) by the processor , the processor nub loader  is transferred to the isolated area . Thereafter, the processor nub loader  copies the processor nub  from the non-volatile memory  into the isolated area , verifies and places a representation of the processor nub  (e.g., a hash value) into the protected memory . Herein, the protected memory  is implemented as a memory array with single write, multiple read capability. This non-modifiable capability is controlled by logic or is part of the inherent nature of the memory itself. For example, as shown, the protected memory  may include a plurality of single write, multiple read registers.","As shown in , the protected memory  is configured to support an audit log . An \u201caudit log\u201d  is information concerning the operating environment of the platform ; namely, a listing of data that represents what information has been successfully loaded into the system memory  after power-on of the platform . For example, the representative data may be hash values of each software module loaded into the system memory . These software modules may include the processor nub , the OS nub , and\/or any other critical software modules (e.g., ring- modules) loaded into the isolated area . Thus, the audit log  can act as a fingerprint that identifies information loaded into the platform (e.g., the ring- code controlling the isolated execution configuration and operation), and is used to attest or prove the state of the current isolated execution.","In another embodiment, both the protected memory  and unprotected memory (e.g., a memory array in the non-isolated area  of the system memory  of ) may collectively provide a protected audit log . The audit log  and information concerning the state of the audit log  (e.g., a total hash value for the representative data within the audit log ) are stored in the protected memory .","Referring still to , the non-volatile memory  stores non-volatile information. Typically, the non-volatile memory  is implemented in flash memory. The non-volatile memory  includes the processor nub  as described above. Additionally, the processor nub  may also provide application programming interface (API) abstractions to low-level security services provided by other hardware and may be distributed by the original equipment manufacturer (OEM) or operating system vendor (OSV) via a boot disk.","The mass storage device  stores archive information such as code (e.g., processor nub ), programs, files, data, applications (e.g., applications -), applets (e.g., applets to ) and operating systems. The mass storage device  may include a compact disk (CD) ROM , a hard drive , or any other magnetic or optic storage devices. The mass storage device  also provides a mechanism to read platform-readable media. When implemented in software, the elements of the present invention are stored in a processor readable medium. The \u201cprocessor readable medium\u201d may include any medium that can store or transfer information. Examples of the processor readable medium include an electronic circuit, a semiconductor memory device, a read only memory (ROM), a flash memory, an erasable programmable ROM (EPROM), a 2 fiber optic medium, a radio frequency (RF) link, and any platform readable media such as a floppy diskette, a CD-ROM, an optical disk, a hard disk, etc.",{"@attributes":{"id":"p-0040","num":"0039"},"figref":"FIG. 2","b":["210","216","217","210","230","230","240","290","280","270","216","270"]},"When the CPU  is operating in isolated execution mode the output driver  sends isolated output request cycles to the MCH  for access to the isolated output area . Isolated output cycles are identified as such by the MCH  based on the status of the system and whether an isolated attribute is attached to the request. If the request is identified by the MCH , as containing the appropriate isolated attribute, write access to the isolated output area  may be granted. In that context, the output driver  will then drive output data, for example, a bit map, into the isolated output area . In some embodiments of the invention, the OS nub  is permitted write-only access to the isolated output area.","In some embodiments, a graphics card  is coupled by a secure AGP bus  to MCH . The OS nub should be able to write to the graphics card to permit the OS nub to provide the base address and size of the isolated output area. In one embodiment, the graphics card is provided with an isolated direct memory access (DMA) controller , which sends isolated DMA requests through AGP  to the MCH for read access to the isolated output area . The MCH authenticates the request before granting access to the isolated output area. The isolated DMA controller  may then DMA, for example the bit map contained in the isolated output area  directly to an output end point such as display .","In some embodiments of the invention, the graphics card  includes one or more isolated bit planes  and one or more normal bit planes . In such embodiment, where the graphics card  is permitted to store isolated output data in the isolated bit planes , the graphics card must guarantee security of those isolated bit planes from software attack and\/or access by non-Iso software. Such protection may be because the graphics card denies all external access to the isolated bit planes . In another embodiment, only the OS nub  is permitted to access the isolated bit planes  from outside the graphics card . In such embodiments it is contemplated that the isolated DMA controller  may DMA the output data to the isolated bit planes. Subsequent refreshes of the display may be conducted from the isolated bit planes . It is also within the scope and contemplation of the invention that the isolated bit planes may be loaded other than by DMA controller .","One form of possible attack is for rogue software to establish an environment on the display that mimics the secure environment to appear as the proper target for the secure output or input data from a user. In one embodiment, hardware on the graphics card ensures that the user sees and the output goes to the secure window. In some embodiments of the invention, upon entering isolated execution mode, the graphics card will occlude existing windows on the display  by overlaying an occlusion window . An isolated execution focus window  may then be tiled over occlusion window . In this manner, reliability of delivery of the isolated output data to the focus window is enhanced. Additionally, the isolated focus window may be itself occluded, e.g., grayed out when the graphics card leaves the isolated execution mode. In any case, the graphics card  is responsible for preventing software access to isolated data on the display.","It should be noted that while the above description is conducted in the context of a display, or graphical output, the invention may readily be extended to other forms of output, such as for example, audio output. Thus, such extension is within the scope and contemplation of the invention.","In the foregoing specification, the invention has been described with reference to specific embodiments thereof. It will, however, be evident that various modifications and changes can be made thereto without departing from the broader spirit and scope of the invention as set forth in the appended claims. The specification and drawings are, accordingly, to be regarded in an illustrative rather than a restrictive sense."],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"BRIEF DESCRIPTION OF THE DRAWINGS","p":["The invention is illustrated by way of example and not by way of limitation in the figures of the accompanying drawings in which like references indicate similar elements. It should be noted that references to \u201can\u201d or \u201cone\u201d embodiment in this disclosure are not necessarily to the same embodiment, and such references mean at least one.",{"@attributes":{"id":"p-0007","num":"0006"},"figref":"FIG. 1A"},{"@attributes":{"id":"p-0008","num":"0007"},"figref":"FIG. 1B"},{"@attributes":{"id":"p-0009","num":"0008"},"figref":"FIG. 1C"},{"@attributes":{"id":"p-0010","num":"0009"},"figref":"FIG. 2"}]},"DETDESC":[{},{}]}
