---
title: Conditional logic for delivering computer-executable program instructions and content
abstract: A tag/content management system delivers customized content and/or program instructions to a user terminal. The system may deliver several groups of program executable instructions, including instructions that are global to all web domains controlled by a client server and those that are specific to a web page/group of web pages. The program instructions and/or content may also be delivered to the user terminal based on the evaluation of one or more conditions, including those related to the location of the user terminal, various HTTP header fields, the presence of specific HTML objects in a web page accessed by the user terminal, and the screen resolution of the user terminal, among other things.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09268547&OS=09268547&RS=09268547
owner: Ensighten, Inc.
number: 09268547
owner_city: San Jose
owner_country: US
publication_date: 20111128
---

{"@attributes":{"id":"description"},"RELAPP":[{},{}],"heading":["CROSS REFERENCE TO RELATED APPLICATIONS","TECHNICAL FIELD","BACKGROUND","BRIEF SUMMARY ","DETAILED DESCRIPTION"],"p":["This application is a continuation-in-part of U.S. application Ser. No. 12\/685,268, entitled, \u201cEnhanced Delivery of Content and Program Instructions,\u201d filed Jan. 11, 2010, which is herein incorporated by reference in its entirety.","Aspects of the disclosure generally relate to delivery of content and\/or program instructions to user terminals based on conditional logic. In particular, various aspects of the disclosure include customizing the program instructions\/content delivered to a user terminal based on numerous criteria, including the IP address of the user terminal, the information requested from the user terminal, and\/or others.","Web pages are generally written in Hypertext Markup Language (HTML). They are written using HTML elements that include \u201ctags\u201d surrounded by angle brackets; information in the tag tells the web browser how to interpret the HTML element (e.g., as text, for insertion of an image into the webpage, for running a script, etc.). These tags can, among other things, include or can load scripts in languages such as JavaScript\u2122.","Meanwhile, web analytics is a field in which data about customers is collected and analyzed for a variety of purposes. To obtain data for web analytics, a population of users visits a web page and\/or starts an application that causes certain program instructions to be executed. Usually, data is collected for web analytics purposes through a variety of mechanisms, including the setting of a cookie and\/or by running scripts in the HTML document. The scripts may perform a variety of functions, including grabbing variables from the document object model (DOM) and\/or sending back an image request to a data collection server either internally or externally hosted.","The program instructions for web analytics are generally authored and run by a variety of vendors, including Omniture\u2122, Google\u2122, Yahoo\u2122, and Webtrends\u2122, among others, in order to be able to capture data such as web page load times, \u201cmouse overs\u201d (i.e., moving a mouse over a particular object on the web page), and the page requestor's IP address. A medium complexity web page may include 5-10 tags with a reference to computer scripts that are run on servers managed by different vendors.","When a marketer associated with an organization decides that she wants to change the code to measure and analyze different features, the process is often tedious and challenging. In many situations, to perform this update, the marketer must create a new custom variable in the program instructions, define what the new variable is, and specify what data the modified code must capture for the web page. Since the marketer is generally not skilled in how to perform these modifications, she must interface with her information technology (IT) department or other similar agency. Sometimes, even the IT department may not adequately understand the syntax of the web analytics program instructions to properly modify the code, especially given that the myriad web analytics vendors, advertisers, survey researchers, and marketers all have their own custom computer code for effectuating the collection of data for analysis. In other situations, the IT department may not have the appropriate bandwidth to modify the code for deployment on schedule (e.g., for an advertisement campaign deadline, etc). These problems are only exacerbated when a client's website has many pages and\/or many different types of program instructions for collecting various data about a user.","In light of the foregoing background, the following presents a simplified summary of the present disclosure in order to provide a basic understanding of some aspects of the invention. This summary is not an extensive overview of the invention. It is not intended to identify key or critical elements of the invention or to delineate the scope of the invention. The following summary merely presents some concepts of the invention in a simplified form as a prelude to the more detailed description provided below.","Aspects of the disclosure address one or more of the issues mentioned above by disclosing methods, computer readable media, and apparatuses for systematically managing the delivery of program instructions and content based on predefined conditions.","With another aspect of the disclosure, the delivery of program instructions may be based on predefined rules related to received data, location, time, and other factors.","Aspects of the disclosure may be provided in a computer-readable medium having computer-executable instructions to perform one or more of the process steps described herein.","This Summary is provided to introduce a selection of concepts in a simplified form that are further described below in the Detailed Description. The Summary is not intended to identify key features or essential features of the claimed subject matter, nor is it intended to be used to limit the scope of the claimed subject matter.","As discussed above, there are problems associated with the delivery of program instructions for capturing data for use in areas such as web analytics and\/or the delivery of customized content to individuals. A more systematic approach to deploying content and program executable instructions is needed to avoid the errors\/latencies involved with the way that present methods work.","In accordance with various aspects of the disclosure, methods, computer-readable media, and apparatuses are disclosed in which an entity manages the delivery of content and program instructions that have been customized for each individual and\/or web page. This entity (e.g., a web consulting company) may use aspects of the disclosure to route customized content\/instructions to a web browser and\/or other computer applications. In general, aspects of the disclosure may be used to manipulate existing objects and add new objects to web pages. Within this context, an object may include both visual and non-visual elements on a web page. As part of the content\/instruction delivery vehicle, a front-end user interface may facilitate a non-technical user to describe and implement object creation and manipulation. To provide these services, the entity may take advantage of both internal and external computing and storage capabilities. One example of program instructions delivered to a web browser and\/or other application includes those related to initiate the capture of web analytics data when a user terminal accesses a client web page. This collected data may include the name of the web page visited, the download time of the web page, a setting of a cookie for the web page, and the movement of a mouse over a particular object (i.e., \u201cmouse overs\u201d) on a web page. In addition, content such as advertisements, modified images, buttons, and other graphics may be customized to a particular user through this service.","Certain embodiments of this disclosure allow for a content\/tag management system\/method\/program executable instructions that is\/are referenced with a single line of computer code that is inserted as a single tag and references a JavaScript\u2122 file. The execution of program instructions in the JavaScript\u2122 file may take care of all tag management, updates, configuration changes, and any other customizations that clients may wish to perform. Third-party vendors may be removed from a client website to allow the manager to take responsibility for delivering the correct program instructions\/content at the correct time.","In the following description of the various embodiments of the disclosure, reference is made to the accompanying drawings, which form a part hereof, and in which is shown by way of illustration, various embodiments in which the disclosure may be practiced. It is to be understood that other embodiments may be utilized and structural and functional modifications may be made.",{"@attributes":{"id":"p-0024","num":"0023"},"figref":"FIG. 1","b":["101","100","101","103","101","105","107","109","115"]},"I\/O  may include a microphone, keypad, touch screen, and\/or stylus through which a user of device  may provide input, and may also include one or more of a speaker for providing audio output and a video display device for providing textual, audiovisual and\/or graphical output. Software may be stored within memory  to provide instructions to processor  for enabling manager  to perform various functions. For example, memory  may store software used by the manager , such as an operating system , application programs , and an associated database . Processor  and its associated components may allow the manager  to run a series of computer-readable instructions to deploy program instructions according to the type of request that the manager receives. For instance, if a client requests that program instructions for capturing mouse movements for complete session replay be executed, manager  may transmit the appropriate instructions to a user's computer when that user visits the client's website.","The manager  may operate in a networked environment supporting connections to one or more remote computers, such as terminals  and . The terminals  and  may be personal computers or servers that include many or all of the elements described above relative to the manager . Alternatively, terminal  and\/or  may be part of a \u201ccloud\u201d computing environment located with or remote from manager  and accessed by manager . The network connections depicted in  include a local area network (LAN)  and a wide area network (WAN) , but may also include other networks. When used in a LAN networking environment, the manager  is connected to the LAN  through a network interface or adapter . When used in a WAN networking environment, the server  may include a modem  or other means for establishing communications over the WAN , such as the Internet . It will be appreciated that the network connections shown are illustrative and other means of establishing a communications link between the computers may be used. The existence of any of various well-known protocols such as TCP\/IP, Ethernet, File Transfer Protocol (FTP), Hypertext Transfer Protocol (HTTP) and the like is presumed.","Additionally, an application program  used by the manager  according to an illustrative embodiment of the disclosure may include computer executable instructions for invoking functionality related to delivering program instructions and\/or content.","Computing device  and\/or terminals  or  may also be mobile terminals including various other components, such as a battery, speaker, and antennas (not shown).","The disclosure is operational with numerous other general purpose or special purpose computing system environments or configurations. Examples of well known computing systems, environments, and\/or configurations that may be suitable for use with the disclosure include, but are not limited to, personal computers, server computers, hand-held or laptop devices, multiprocessor systems, microprocessor-based systems, set top boxes, programmable consumer electronics, network PCs, minicomputers, mainframe computers, and distributed computing environments that include any of the above systems or devices, and the like.","The disclosure may be described in the general context of computer-executable instructions, such as program modules, being executed by a computer. Generally, program modules include routines, programs, objects, components, data structures, etc. that perform particular tasks or implement particular abstract data types. The disclosure may also be practiced in distributed computing environments where tasks are performed by remote processing devices that are linked through a communications network. In a distributed computing environment, program modules may be located in both local and remote computer storage media including memory storage devices.","Referring to , an illustrative system  for implementing methods according to the present disclosure is shown. As illustrated, system  may include one or more workstations . Workstations  may be local or remote, and are connected by one or more communications links  to computer network  that is linked via communications links  to tag\/content manager . In certain embodiments, workstations  may be different storage\/computing devices for storing and delivering client-specific program instructions or in other embodiments workstations  may be user terminals that are used to access a client website and\/or execute a client-specific application. In system , manager  may be any suitable server, processor, computer, or data processing device, or combination of the same. Throughout this disclosure, tag\/content manager  will be used to reference both the server\/terminal that stores program instructions for tag\/content management and the tag\/content management program instructions themselves.","Computer network  may be any suitable computer network including the Internet, an intranet, a wide-area network (WAN), a local-area network (LAN), a wireless network, a digital subscriber line (DSL) network, a frame relay network, an asynchronous transfer mode (ATM) network, a virtual private network (VPN), or any combination of any of the same. Communications links  and  may be any communications links suitable for communicating between workstations  and server , such as network links, dial-up links, wireless links, hard-wired links, etc.","The steps that follow in the Figures may be implemented by one or more of the components in  and\/or other components, including other computing devices.",{"@attributes":{"id":"p-0034","num":"0033"},"figref":"FIG. 3","b":["300","301","303","305","301","303","303","101","301","305","204","305","303","305","204"]},"The arrows interconnecting user terminal , client server , and cloud  indicate the method performed by network  in accordance with certain embodiments of the disclosure. The method may start at step  where the user terminal  requests a web page from the client server . Upon receiving such a request, client server  may return the web page (e.g., an HTML page) to the user terminal  in step . The HTML web page returned to user terminal  may include a tag statement that references the location of the tag\/content manager  within cloud . An example tag statement may be as follows:\n\n<script src=\u201c\/\/INSERT PATH OF TAG\/CONTENT MANAGER FOR CLIENT\u201dtype=\u201ctext\/javascript\u201d><\/script>\u2003\u2003(A)\n","Of course, variations of this tag may be possible for a variety of reasons; for example, the script referenced may not be written in JavaScript\u2122, the website may require secure connections (e.g., via HTTPS:\/\/), etc. Notice that the above line of code may reference a tag\/content manager  for a particular client web server. For instance, a different JavaScript\u2122 program may exist on cloud  for the CNN website versus one for the FOX News website. In other embodiments, the same tag manager  may be used for all web domains.","The tag line shown in (A) may be placed into the header, body, footer, or combinations of locations of the HTML source file for a particular web page accessed by user terminal . In certain embodiments, the tag line shown in (A) may be placed in the header to allow the tag line to execute early on during the loading of the web page accessed by user terminal . Generally, when a request for a web page is made by a user terminal , the entire HTML page may be downloaded to the terminal . Then a parser within the browser of user terminal  may parse each element (head, body, footer) of the HTML file into a document object by using the hierarchical HTML structure described in the document object model (DOM). Once parsed, the document objects of the HTML file may be programmatically accessed quickly and easily.","When the code in (A) executes, the method then moves to step  where the user terminal  may request the tag manager program  from cloud . If the tag manager program  is written in JavaScript\u2122 (i.e., a client-side script), program  may be downloaded into a memory  of user terminal . Once downloaded onto user terminal , manager program  may execute for a variety of applications, including data collection for web analytics purposes, content delivery, etc. This tag\/content delivery method may optionally move to step  where the tag manager program  may request program executable instructions specific to the particular web page being viewed by user terminal . If web page specific instructions exist on cloud , these instructions may also be downloaded into a memory  of user terminal  for execution. The tag\/content manager program  and the page specific instructions (if they exist) may both reside at separate locations on the cloud computing facility .","In one embodiment, the request of page-specific code in step  may involve a two-step process. In the first step, the tag manager program  may request a PHP, Perl, Python, C, etc. file from the cloud . The requested file may subsequently be used to dynamically generate a JavaScript\u2122 program to the user terminal . This two step process may help to ensure that the page-specific JavaScript\u2122 instructions are properly sent to and executed on the appropriate user terminal .",{"@attributes":{"id":"p-0040","num":"0039"},"figref":"FIG. 4","b":["204","204","301","204","204","204"]},"In conventional JavaScript\u2122 implementations, try-catch statements are often used to prevent interference with other JavaScript\u2122 on a web page so that user terminal  will not crash if scripts called during the page load are run prematurely or out of order (e.g., when a method in a library of methods is called before the library has finished loading, etc.). In accordance with an aspect of the disclosure, some embodiments obviate the need for try-catch \u201cband-aids\u201d by including functions that require methods to execute only after other methods have loaded or other significant events (parsing, loading of the DOM) have occurred. Through a series of callbacks to methods based on vendor-specific libraries already being loaded, the tag manager program  ensures that the program instructions are not executed prematurely or out of order. In addition, the order in which methods are executed can be configured by a user. For instance, a user may define an event in relation to which a method may be required to execute. Alternatively, a user may specify the order in which methods are executed in relation to each other. Clients may define the order of execution for these methods through an interface to the tag\/content manager . The tag manager program  also includes objects that may allow program instructions to be delivered\/executed based on significant events that have occurred when a web page is requested by a user terminal . For instance, when a web page is requested, program instructions may be executed after the document objects within the HTML file have been parsed by the web browser. In addition, program instructions may be executed after the document objects have been loaded by the web browser. The tag manager program  may \u201clisten\u201d for these events and execute program instructions after receiving confirmation that the events have occurred.","As another example, consider an individual who has completed an ecommerce transaction that a client  wishes to track on a specific web page. To perform this task, the web analytics code may need certain variables to be available from\/to the web page; otherwise the code may not be able to collect the necessary data. For instance, if the web analytics code executes before the total order value is produced by the ecommerce engine, the web analytics code may miss the order. To prevent such scenarios, the tag manager  may implement functions that ensure that program instructions are executed in the correct order and at the correct time. As mentioned earlier, the program instructions may be executed in an order that may be controlled by the client.","Once a user terminal  has requested the tag manager program  and the manager program  has been parsed by a browser on user terminal , the method in  starts out at step  where the tag manager program  downloaded to user terminal  may execute program instructions that are global to all web domains that fall under the purview of the client web server being accessed. In some embodiments, tag manager  may request the global code from a separate location on the cloud . In other embodiments, the global code may be directly inserted into tag manager . Then the method may move to step  where the tag manager program  requests a \u201cserver component\u201d  for page specific instructions for the uniform resource locator (URL) requested by the user terminal . The server component may be a server (e.g., workstation , computing device , etc.) residing within or separate from computing cloud . The \u201cserver component\u201d may determine if page specific instructions exist for the URL requested in step . If the server component determines that no page specific instructions exist for the URL requested, the process may end in step . Alternatively, if the server component determines that page specific instructions exist for the URL requested, the tag manager program  may request the relevant page specific code in step . Once tag manager  receives the page specific code, the code may be executed on user terminal  in step  (after the browser has parsed the new document object generated from the code). As mentioned earlier, it should be noted that page specific content (e.g., modified images, HTML text, etc.) may be requested from the server component  on cloud  just as easily as page specific code.",{"@attributes":{"id":"p-0044","num":"0043"},"figref":"FIG. 5","b":["204","501","501","413","305","413","503","413","505","507","204","509"]},"As mentioned earlier, it should be noted that the executable code running on the server component  may be written in a server-side scripting language such as PHP. Use of a server-side (rather than client-side) scripting language such as PHP ensures that when the server component  is called, code is actually run on the server component  itself. The results of the executed code (a JavaScript\u2122 file) may then be sent back to the tag manager program . Meanwhile, the files containing data for use by the tag manager  and\/or the server component  may be written in a markup language such as XML.",{"@attributes":{"id":"p-0046","num":"0045"},"figref":"FIG. 6","b":["204","204","204","301","303","303","303","301","303"]},"Rules may also include the need for delivering certain program instructions only after others have properly loaded to avoid errors in the loading of a web page. For instance, some rules may simply load JavaScript\u2122 libraries from certain vendors for use by other rules. Other rules require execution of program instructions only in the header, body, and\/or footer of a HTML file. Ultimately, the tag manager  may incorporate the sophistication of all of these rules through the program instructions directly included in the manager  and\/or through programs\/data that the manager  accesses (e.g., page specific code files, page correlation XML files, etc.)","As such, the method in  may start out at step  with an entity understanding client needs and gathering existing client tags to execute program instructions from third party vendors. This entity may be in charge of the creation and development of the tag manager . Based on these needs, the entity may then in step  formalize these needs in a \u201crules file\u201d that details answers to questions such as what type of data (mouse overs, page loads, etc.) the client would like to collect on his website, whether or not there are any page specific rules, whether or not the rules are to be executed on the completion of significant events (DOM parsing, the execution of other rules, etc.), among others. This \u201crules file\u201d may be created in any text editor, including an XML editor. Alternatively, a client may directly defines rules through a user interface to the tag\/content manager  either by writing code into a predefined area in the interface or by using an automatic code generation mechanism accessed through the user interface. The interface\/backend may then generate the associated JavaScript\u2122 for the rules without requiring manual client intervention. Once all of the rules have been defined (by whichever process), the backend may generate the XML file for a code generator to process. In this way, the XML rules file may serve as a translation from easy-to-understand rules to computing-language specific code that may be executed as program instructions.","Finally, a code generator program residing in the memory  of a computing device  associated with the entity may codify the formalized rules into program executable instructions (i.e., into scripts such as JavaScript\u2122, PHP, etc.) in step . The code generator program may use the \u201crules file\u201d to generate the tag manager program  and page specific code files used by the tag manager program . In addition, the code generator may generate data that correlates client URLs with the name of the program file that should be run when a user terminal  tries to access the URL. In some embodiments, the tag\/content manager  may also manage the collection of data and\/or the distribution of content in non-browser applications. For instance, desktop applications built\/written in Adobe\u2122 Integrated Runtime (AIR), Adobe\u2122 Flex, Adobe\u2122 Flash, C\/C++, Java\u2122, and\/or applications for mobile platforms like iPhone\u2122, Android\u2122, Windows Mobile\u2122, and\/or Blackberry\u2122 may request a tag\/content manager  to download and execute a library of program instructions from cloud . The execution of the library of program instructions may in turn cause the transmission of a request to an entity responsible for creating the tag manager , asking for rules describing what should be done inside of the flash application. In addition to performing tracking\/analytics, this paradigm may result in all the functionality associated with the web solution (e.g., creating and modifying elements within the flash application, etc.). This paradigm may also result in the ability to dynamically load configuration during an application run time based on various events (e.g., upon an \u201cAutosave\u201d of a document, opening of a new document, etc.) within the application. For example, in flash applications, in addition to loading a rules file, the system may request additional instructions on how to respond to specific events. These instructions may dynamically be generated upon request based on some predefined logic, piece of existing data, or data provided by the application in the request.","In certain aspects, the server component  may include\/access executable instructions that govern when computer-readable program instructions and\/or content should be sent to a user terminal . The conditional logic used to deploy computer-readable program instructions may include one or more simple and\/or sophisticated conditions designed to tailor deployment of these instructions for a given scenario. For instance, as mentioned previously, computer-readable program instructions may be sent to a user terminal  based on the URL visited by the user terminal  (e.g., a webpage hosted by client server ).","Server component  may also analyze the constituent parts of a URL to decide which set of program instructions should be sent to terminal . For instance, consider the example URL www.host.com\/path\/path\/file.html?query1=value1&query2=value2#hash. The constituent parts of this URL include the host (www.host.com), path (\/path\/path), file (file.html), query parameters (query1=value1, and query2=value2), and hash (#hash). Server component  may send user terminal  a given set of computer-readable program instructions and\/or content when any one of these fields, more than one of these fields, or all of these fields matches one or more predetermined values. Each constituent part of a URL may be matched in various ways. In one example, a direct comparison involving an expression to determine if the string of characters for one or more fields matches a predetermined value may be made (e.g., does www.host.com=www.host.com). In another example, a check involving regular expressions (e.g., expressions that are used to match a set of character strings according to specific syntax rules and\/or patterns) may be made (e.g., does www\\..+\\.com=www[any string of characters].com). One of ordinary skill in the art after review of the entirety disclosed herein would recognize that server component  may support any number of computing languages involving regular expressions and their associated metacharacters.","As an example, consider a scenario where a client of an entity managing the tag manager program  (e.g., a web analytics company, etc.) wishes to deliver the same page specific instructions\/content for two different URLs (e.g., www.example.com and example.com). In this case, the host part of the URL may be defined to be a regular expression (e.g., REGEXP: ^(?:www.)?example.com$) that encompasses both www.example.com and example.com to deploy a predetermined set of page specific instructions.","The server component  may also deliver computer-readable program instructions\/content to the given user terminal  based on specific data passed to the server component  as part of a regular HTTP request (e.g., step  in ). In particular, various HTTP headers may be matched using the two comparison techniques discussed above (e.g., direct comparison and those involving regular expressions). For instance, the user-agent, cookie, and\/or referrer field (e.g., specifies the last web page user terminal  visited) in the HTTP header may be matched to some predetermined values to determine if a given set of program instructions\/content should be delivered to a user terminal . One of ordinary skill in the art after review of the entirety disclosed herein would recognize that any number of HTTP header fields may be matched to determine delivery of program instructions\/content. A partial list of HTTP header fields may be found at http:\/\/en.wikipedia.org\/wiki\/List_of_HTTP_header_fields#Requests, which is herein incorporated by reference in its entirety. One of ordinary skill the art after review of the entirety disclosed herein would recognize that any one of these or other fields may be used with aspects of this disclosure.","For instance, consider an example where a user terminal  should receive different program instructions when a given client server  is accessed by a mobile browser versus a standard browser on user terminal . A client managing client server  may determine that this is necessary in order to deliver a smaller or more compatible set of program instructions for a mobile browser, among other reasons. In one scenario, the server component  may access page-specific instructions that determines when a URL is accessed by a mobile browser user agent such as an iPhone\u2122 browser. In this example, the server component  may target JavaScript\u2122 specifically to iPhone browsers. This ability to target specific program instructions to a particular type of mobile browser may be useful because some of these browsers may not support the same type of JavaScript\u2122 or data collection methodologies as a standard browser.","In another example, assume that the referrer field in the HTTP header is used to provide a given set of program instructions\/content to user terminal . Assume also that the referrer field identifies a competitor of a client managing client server . In this scenario, based on the particular competitor's website visited, the server component  may deliver specific content to a user terminal  for a client managing client server . For instance, the server component  may deliver content (e.g., a customized pop-up window) that may explain the benefits of its products over the products of the competitor identified in the referrer field of the HTTP header.","In other aspects, program instructions\/content may be transmitted to the user terminal  based on data that may exist within a browser located on the user terminal . A computing device associated with an entity managing tag manager program  may run computer-readable program instructions (e.g., JavaScript\u2122) in an end-user's browser to gather this data. Upon gathering this data, this computing device may retrieve and execute more computer-readable program instructions in any of various ways.","In a first embodiment, the computer-readable program instructions necessary to check if the data gathered in a browser associated with user terminal  matches one or more predefined conditions may have been sent to the browser with the initial request for program instructions (e.g., with the initial request for a tag manager program  and\/or from the page specific instructions transmitted by server component ). If a match to the conditional is found, a processor associated with the entity managing tag manager program  may request program instructions\/content that corresponds to the matched conditional. In this way, program instructions may be executed on a user terminal  that may result in a computing device associated with the entity managing tag manager program  making a request outside of the normal process (e.g., outside of the request for a tag manager program  and the request for page-specific instructions by the server component .)","To illustrate this first embodiment, consider a scenario where a client associated with client server  wishes to track when a user associated with user terminal  has successfully completed an event (e.g., such as filling out a form for signing up for an account, etc.) on a webpage associated with the client server . In this scenario, a predetermined piece of data (e.g., an HTML object, etc.) may be added to the webpage when the user associated with user terminal  completes the form. When the HTML object is generated (e.g., when the web browser on the user terminal  determines that the form has been completed), the user terminal  may report the form completion event back to a computing device associated with the entity (e.g., a web analytics company, etc.) managing tag manager program . The computing device may then return a predefined set of program instructions\/content to the user terminal.","In a second embodiment, the check to determine if the data gathered in a browser associated with user terminal  matches one or more predefined conditions may be performed at the server component . If one or more predefined conditions are met, the server component  may transmit a predetermined response (e.g., program instructions, content, etc.) to the user terminal .","To illustrate this second embodiment, consider a scenario where a client associated with client server  wants to identify which web domain associated with the client is being accessed by users of user terminals . Because cookies are set on a domain-by-domain basis and may only be accessed from the domain where the cookie was set, one solution to this problem may include a check to determine if a cookie exists when a given webpage loads on an associated web domain of a client. If a cookie does not exist, a request may be made to server component  to determine if the user terminal  that loaded the client webpage has a cookie set on the web domain associated with the entity managing tag manager  and\/or server component  (assuming that the entity has only one domain). If a cookie is found for the user associated with user terminal , the server component  may transmit the cookie value (e.g., as a JavaScript\u2122 variable, etc.) to the user terminal . Once received, the cookie may be set on the client web domain. If no cookie is found for the user associated with user terminal , the server component  may transmit a new cookie value to the user terminal . In this way, data (e.g., a message to query whether or not a cookie for a given user associated with a user terminal  has been set, etc.) may be sent to the server component  and the server component  may perform a conditional check to respond with a preexisting or new cookie for a user of user terminal .","One of ordinary skill in the art after review of the entirety disclosed herein would recognize that data stored in a web browser associated with user terminal  for matching various conditions may include a wide variety of things, including data related to conditionals based on which HTML elements\/objects exist on a webpage accessed by the user terminal  and data related to conditionals based on information gathered from the web browser itself. In particular, data related to conditionals based on which HTML elements exist on a webpage accessed by the user terminal  may include data that answers questions such as \u201cdoes a specified HTML element exist?\u201d and\/or \u201cdoes a specified HTML element have some particular property or set of properties?\u201d, among other things. Data related to conditionals based on information gathered from the web browser itself includes screen resolution of the user terminal , the JavaScript\u2122 (or other computing language) version used by user terminal , the Flash\u2122 version used by user terminal , etc. In some aspects, all properties of HTML elements may be available to the web analytics environment (e.g., JavaScript\u2122-based, etc.) discussed herein and as a web browser supports new HTML element types and properties, new conditionals may be created to analyze these element types\/properties. In other words, any data that may be collected from a user terminal  (e.g., a device loading a web page, running an iOS\u2122 application, etc.) may be used in creating a conditional.","As an example, consider a case in which a client associated with client server  wants to send different JavaScript\u2122 program instructions based on what version of JavaScript\u2122 a browser stored on user terminal  supports. If a check to determine which JavaScript\u2122 version is supported by a browser reveals an older version of JavaScript\u2122, the user terminal  may request computer-readable program instructions from server component  that define functions in a newer version of JavaScript\u2122. This process may allow a client associated with client server  to make sure that a standard set of JavaScript\u2122 functions are available on all of the webpages associated with the client.","In yet other aspects, program instructions\/content may be transmitted to the user terminal  based on data acquired from an external data source. A computing device associated with the entity managing tag manager program  may gather data from sources outside of the entity's control via application programming interfaces (APIs) associated with the external data sources. A conditional match may then be performed based on the external data, which may include data from an analytics tool associated with a client managing client server , data from databases associated with a client managing client server , and data from a third party (e.g., an end-user's geolocation as ascertained by a third party application that matches IP addresses to geographic locations). As an example, if an external data source that maps IP ranges to specific geographic locations is accessed, a computing device associated with an entity managing tag manager program  may send program instructions and\/or content to user terminals  in predetermined geographic regions.","As another example, consider a scenario where a client associated with client server  wishes to determine how many times a rule has been executed. For instance, a client associated with client server  may use website optimization tools that would test to determine if various versions of the same element perform differently (e.g., answering the question of a preferred color for a \u201csign up\u201d button located on their website). Because running a test to determine the answer to these types of questions costs money, clients associated with client servers  may calculate how many test cases they need to reach statistical significance and decide to perform only those number of tests to reach statistical significance. Data related to identifying the number of times that a rule for tests such as the determination of a color associated with a \u201csign up\u201d button may be stored in an external data source. A computing device associated with the entity managing tag manager program  may retrieve this data from the external data source and may use the data to determine if program instructions for performing the test should be sent to user terminal  (e.g., if the rule for determining the color associated with a \u201csign up\u201d button has run less times than are needed for statistical significance.)","The aforementioned ways are merely illustrative embodiments of ways in which content\/program instructions may be delivered to user terminals  based on one or more predefined conditions (e.g., time at which the request is made, geographic region, language preferences, maximum\/minimum number of delivery instances, etc.) that are evaluated either at computing devices located at the entity managing tag manager program  and\/or at the user terminals  themselves. For instance, an example of a time-based condition includes a scenario in which a client managing client server  may want to deploy special deals on a webpage associated with the client during traditionally slow periods in an attempt to generate more sales. As another example, a client may want to set an expiration date for a tag created to track a particular campaign so that even if an entity tasked with managing the tag forgets that it has been deployed, the tag\/content management system  may stop serving the tag after conclusion of the campaign. One of ordinary skill in the art after review of the entirety disclosed herein would recognize numerous other ways of customized delivery of program instructions\/content that are within the scope of the disclosure.","Whether data is being collected from a web browser or a non-browser application, the program instructions within the tag\/content manager  may facilitate the collection of data such as mouse-overs, page loads, and mouse movements. The collection of data may occur when program instructions from third party vendors (e.g., Omniture, Webtrends, Yahoo, Google, etc.) are delivered in a timely fashion based on the rules that have been translated into program instructions by a code generator. The collected data may also include data generated by the client's backend server . For instance, a content management system (CMS) local to the client server  which manages a client's web page may generate various types of data (e.g., like what template a page is based upon, how long it took to render a page, etc.). This solution may also facilitate the collection of this type of data.","Once collected, the data may be processed in one of two ways. In the first scenario, the collected data may simply be routed to the appropriate third-party vendor (i.e., if an Omniture tag is delivered and executed, then the data collected from the execution of this tag would be routed to an Omniture server.) The third-party vendors may then process and analyze the collected data in a way of their choosing based on client needs.","Alternatively, the collected data may be routed back to and stored on the cloud  for access and analysis by computing resources in cloud  and\/or other computing resources available local to an organization overseeing the creation and development of the tag manager . This collected data may be supplemented by collecting and storing additional data about a user of the user terminal  from call logs and transaction histories. In this scenario, the organization behind the tag\/content manager  may provide even more value to its clients  because the organization would be providing both management and data analysis services.","The data analysis may encompass a variety of techniques, including data mining algorithms and multivariate testing. As suggested earlier, the output of the data analysis may be fed back into the system to generate new or modified rules (and thus, generate a modified tag manager  and\/or page specific code files) for delivering program instructions and\/or content to a user terminal . A simple example of data analysis may include the ability of the system to check to see if there are any records of a user that has loaded a client's web page (i.e., a return visitor). For instance, assume that a user is revisiting a website with the URL www.acme.com. The standard welcome message for first-time visitors to www.acme.com may read as, \u201cWelcome to www.acme.com.\u201d If there is a record of a user John Doe having visited www.acme.com, the welcome message may then be modified to \u201cWelcome back to www.acme.com John Doe.\u201d","In addition, security protocols (passwords, biometric scanning, motion detection, etc.) may be put in place to prevent unauthorized individuals from accessing and manipulating tag manger  and its associated helper programs either on the cloud  and\/or on other computing facilities associated with the entity that develops and modifies the tag manager .","The entity generating\/modifying the tag manger  and its associated components may also implement a front end display\/communication module to report results of collected data, communicate recent news and events within the tag\/content management and analysis fields, and\/or interface with other data including logs from a call center system, offline sales data, offline marketing spend, and others. The front end display may allow access to much\/all of the information\/analysis generated through the implementation of the tag manager . Also, the front end display may allow clients  to easily add program instructions representing new rules (via check boxes, buttons, etc) to their web sites\/products.","In addition, the interface may allow clients  to generate a tag manager program  with program instructions representing new rules for testing purposes. For instance, consider that an online retail store wishes to modify its tracking code to collect data on mouse movements for complete session replay. This new rule may be used to generate a modified tag manager  for the retail store. The modified tag manager  may include code for tracking mouse movements. To ensure that this newly inserted code does not \u201cbreak\u201d the site (i.e., cause the website to crash), the modified tag manager  may be sent only to a specific URL (i.e., a URL used specifically for testing the new code). All other URLs may receive the unmodified version of the tag manager . In this way, this implementation may help to dynamically create test environments for use by clients  in testing new code, content, and\/or any other modifications to their websites, software products, etc.","In summary, tag manager  may provide a platform to asynchronously deliver program instructions and\/or content to a web page\/non-browser application. In other words, manager  should not interrupt the execution of the application upon which it has the power to act. As an example, if a user accidentally\/intentionally implements a rule that endlessly loops, tag manager  may be modular and robust enough to continue to execute. In addition, manager  may handle potential errors gracefully (i.e., continuing to load the rest of the web page requested, letting a user decide on how to move forward, etc.).","The manager  may also make full use of any techniques that reduce latency for the end-user (e.g., via browser caching, etc.). As detailed in the description above, tag\/content manager  may control, with a great deal of granularity, the order in which the code it is deploying executes. Through the implementation of a user-friendly web interface, the manager  may safely be accessible to non-technical users (e.g., no need for users to hand write XML rules files, no need for users to know JavaScript\u2122\/programming, etc.). Along these lines, the manager  may control workflow related to the deployment of code and impose constraints in any other way possible to prevent the execution of code that may be harmful (e.g., may cause the application to hang or abort prematurely, etc.) to the application in which the manager  is deployed.","Aspects of the invention have been described in terms of illustrative embodiments thereof. Numerous other embodiments, modifications and variations within the scope and spirit of the appended claims will occur to persons of ordinary skill in the art from a review of this disclosure. For example, one of ordinary skill in the art will appreciate that the steps illustrated in the illustrative figures may be performed in other than the recited order, and that one or more steps illustrated may be optional in accordance with aspects of the invention."],"BRFSUM":[{},{}],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"BRIEF DESCRIPTION OF THE DRAWINGS","p":["The present invention is illustrated by way of example and is not limited in the accompanying figures in which like reference numerals indicate similar elements and in which:",{"@attributes":{"id":"p-0014","num":"0013"},"figref":"FIG. 1"},{"@attributes":{"id":"p-0015","num":"0014"},"figref":"FIG. 2"},{"@attributes":{"id":"p-0016","num":"0015"},"figref":"FIG. 3"},{"@attributes":{"id":"p-0017","num":"0016"},"figref":"FIG. 4"},{"@attributes":{"id":"p-0018","num":"0017"},"figref":"FIG. 5"},{"@attributes":{"id":"p-0019","num":"0018"},"figref":"FIG. 6"}]},"DETDESC":[{},{}]}
