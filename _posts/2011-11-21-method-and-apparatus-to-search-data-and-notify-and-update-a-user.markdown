---
title: Method and apparatus to search data and notify and update a user
abstract: The present invention allows a user to subscribe to multiple concurrent channels of syndicated content published over the internet. The user receives notification of the content which is new since the previous time that the user accessed a channel. The user can select the frequency of checking for new content and the user can specify how far back in time to check. In addition, the user can specify a maximum number of changes to be presented.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08589376&OS=08589376&RS=08589376
owner: 
number: 08589376
owner_city: 
owner_country: 
publication_date: 20111121
---

{"@attributes":{"id":"description"},"RELAPP":[{},{}],"heading":["CROSS REFERENCE TO RELATED APPLICATIONS","COPYRIGHT NOTICE","REFERENCE TO COMPUTER PROGRAM LISTING APPENDIX","FIELD OF THE INVENTION","BACKGROUND OF THE INVENTION","SUMMARY OF THE INVENTION","DETAILED DESCRIPTION OF THE INVENTION","APPENDIX","REFERENCE TO COMPUTER PROGRAM LISTING APPENDICES"],"p":["This application claims the benefit under 35 USC 119(e) of U.S. Provisional Application No. 61\/458,442 filed Nov. 23, 2010 by Larry Deutsch, which is incorporated by reference in its entirety.","A portion of the disclosure of this patent document contains material which is subject to copyright protection. The copyright owner has no objection to the facsimile reproduction of the patent document or the patent disclosure, as it appears in the Patent and Trademark Office patent file or records, but otherwise reserves all copyright rights whatsoever.","This application includes a computer program listing appendix submitted on compact disc, which is hereby incorporated herein by reference. The total number of compact discs submitted herewith including identical duplicates is two.","Broadly stated, disclosed in some embodiments is a method and apparatus for searching a community\/classified posting service.","Community\/classified posting internet sites, on which users publish items for sale or make notifications and related web content available publicly, are popular. Tens of millions of people make tens of billions visits every month to these sites. Sections on the these sites may be devoted to jobs and resumes, housing, personals, items for sale, services, community issues, gigs and entertainment, and discussion forums.","In one embodiment of the invention, an application, commonly referred to as an \u201capp,\u201d is described. The app preferably runs on a mobile device, such as a mobile (cellular) telephone, a tablet device, a notebook computer, or a laptop computer. The purpose of the app is to connect to a community\/classified posting site, search for items using user specified sections and keywords, parse information relating to the items, select relevant data, and display selected data in a format suitable for viewing on the particular device. In addition, the app optionally can run in the background, monitoring the site for newly posted information, and informing a user of a new item. This background search permits the user to respond in a rapid and timely way to an item as it becomes available, thus maximizing the user's chances of obtaining it.","In more technical language, some embodiments of this app permit the user to subscribe to multiple concurrent channels of syndicated content published over the internet. A web services application programming interface (API) such as simple object access protocol (SOAP) is not required to be supported by the posting service. Instead, the method disclosed herein relies on a combination of web harvesting (e.g., markup language scraping) and parsing of syndicated content to extract and associate data from the posting service. The user receives notification of the content which is new since the previous time that the user accessed a channel. The user can select the frequency of checking for new content while the app conducts a background search. And the user can specify how far back in time to check for content. In addition, the user can specify a maximum number of changes to be presented.","Such an app has to overcome numerous obstacles. For example, mobile devices may have batteries of limited capacity and life, may have limited size displays, and may have limited computing memory and power. In addition, there may be network and communication issues such as limited bandwidth and unreliable network connections.","Referring to , a sample device display shows how, in one embodiment, the user may set up a search, via the device, of items available on the posting site. Preferably, a graphic user interface for the device comprises menu selectors such as icons, tabs, and pull down widgets.","Selector , as described above, notifies the user that new search results are available. A status indicator  may indicate that the device is performing background searches and show the time interval between each search.","One embodiment of the display shown in  is a selector  that facilitates a search of the posting site. The selector  brings up a screen and interface that shows search options and allows the user to enter parameters for an immediate search or a background search.","Location selector  brings up a screen (not shown) and interface that allows the user to narrow search results to items located within a specific geographic area. This location may be saved as a favorite accessible by selector .","Favorites selector  brings up a screen (not shown) and interface that may allow the user to select previously saved search requests, to access bookmarked search results, and to perform the following operations:\n\n","Contact item poster via email, SMS messages, or telephone","Respond to posting service","Display a geographic map of the location of posted item","Submit an auction bid","The search keyword selector option  allows the user to enter a keyword to narrow search results to those posted items whose descriptions contain the keyword.","Search category selector option  allows the user to enter a general category (such as \u201cfree,\u201d \u201cfor sale,\u201d or \u201cfor lease\u201d) to narrow search results to those posted items within the category.","Search sub-category selector option  allows the user to enter a specific category (in this example \u201cboats\u201d) to narrow search results to those posted items within the sub-category.","Favorite location selector  allows the user to choose a geographic area previously saved by invoking selector  (see above). Selector  or  optionally may access a current location of the user via global positioning satellite or other geo-location mechanism to use as a favorite.","Filter selector option  allows the user to further narrow search results to parameters (in this example minimum price and maximum price) within a range or other specifications.","Search selector  allows the user to initiate an immediate search. A screen displaying results, as shown in  in one embodiment, may automatically appear.","View results selector  allows the user to view the results of a background search.","Search preferences selector  directs the user to one or more screens (not shown) that allow the user to display and edit various search parameters such as, in some embodiments:","Enable or disable display of thumbnails on a result screen (such as shown in )","Specify a maximum number of search results to return","Specify a look-back time interval (e.g., do not return items posted before a specified time)","Enable or disable background searches for newly posted items","Enable or disable visual, audible, or tactile forms of notification of new results","Set a time interval between each background search","The time between search intervals is a trade-off, in some embodiments, between receiving search results as soon as possible after postings are listed and extending battery life of the device. The shorter the period between search intervals, the larger the drain on a battery. However, the longer the interval, the less likely the user will be able to submit a quick enough response to obtain a posted item. Obviously, this tradeoff not a factor for plugged in devices.","Another selector, a clear saved data option (not shown), may direct the user to one or more screens (not shown) that allow the user, in some embodiments, to perform one or more of the following functions:","Delete background search results","Delete favorite search requests","Delete preferred locations","Delete bookmarks and\/or bookmarked results","Clear web cache","Referring to , a sample device display shows how, in one embodiment, the app may display search results, gathered from a posting site, to the user.","Notification selector , when displayed, indicates to the user that new search results are available on the device. This app permits background searches to be performed at periodic intervals while other app's and functions are running on the device. Selector  may appear on a status line while the user is running another app, while using the device for a phone call, or while the device is in idle mode. In addition to a visual selector, the user may be notified of new search results by a sound (e.g. a ring tone) or a vibration, for example. Upon receiving selector , the user may review updated search results.","Optional image thumbnail  displays a photograph, picture, or drawing on the device of an item (e.g. a good or service), offered on the posting site, selected from a user specified category and\/or keyword. Reasons that the thumbnail  may not be shown include lack of a photograph, picture, or drawing of the item on the posting site, a user decision not to show thumbnails on the device (which can reduce the size of data to be communicated from the posting site to the device and save memory on the device), image is too big to download, target website temporary not responding, temporary loss of communications, and lack of relevance of a thumbnail to the requested information.","Contents  include details of the posted item. Specifically, contents  may include title of the item, date and time posted, price, description, location, and condition. The most relevant details may include a short summary description and date. By \u201cclicking\u201d on the details, the user may select the item to display a full posting. The user may scroll through multiple postings, if they exist.","Aspects of this specification, comprising routines and data structures, in addition to contributing to the operation of the app, are relevant to other types of apps. One embodiment of the invention, included in Appendix A, comprises Java and XML user interface specifications.","While this invention is susceptible of embodiment in many different forms, there is shown in the drawings and will herein be described in detail specific embodiments, with the understanding that the present disclosure is to be considered as an example of the principles of the invention and not intended to limit the invention to the specific embodiments shown and described. In the description below, like reference numerals are used to describe the same, similar or corresponding parts in the several views of the drawings.","As used in this application, the generic term \u201ccontent reference\u201d includes the concept of uniform resource locator (URL) and equivalents.","As used in this application, the generic term \u201cmarkup language\u201d includes the concept of hyper-text markup language (HTML) and equivalents.","As used in this application, the generic term \u201csyndicated content\u201d includes the concept of RDF Site Summary (RSS) sometimes known as \u201creally simple syndication\u201d and equivalents. \u201cRSS\u201d is a family of web feed formats used to publish frequently updated works. RSS is a web content syndication format that is a dialect of XML 1.0. The RSS 2.0 specification was released through Harvard under a Creative Commons license on Jul. 15, 2003 which is available on the internet at the cyber law Harvard RSS website.","As used in this application, the term \u201cdata store\u201d includes but is not limited to the concept of a database. A data store may be any type of information depository known in the art accessible by data processing apparatus.","Referring initially to , a system is shown which includes a digital processing apparatus . This system is preferably a mobile device (such as a cellular telephone, notebook computer, tablet computer, or laptop computer). The example apparatus in  includes provision for input power  (such as a battery and power management IC), application processor(s) , RAM memory , and internal memory  (e.g., non-volatile memory such as flash memory, hard drive, CD-ROM drive, or DVD drive). Communications may be provided by optional network adapter , and\/or optional Wi-FI adapter , to a local area network  or to a point-to-point network . In addition, optional connectivity to cellular network  may be provided via baseband processor  (a CPU that manages cellular network  communications), transceiver  which handles the broadcast and reception of radio signals with network or subscriber equipment, and one or more power amplifiers  which increase signal power up to levels required for wireless communication.","Electronic visual display  typically comprises an LCD touch screen and preferably supports graphics. Data input may be through one or more of the following agencies: keyboard  (soft or hard), touch interface or pointing device , voice (not shown), disk storage (optionally comprising internal memory ), local area network , point-to-point network , and cellular network .","One or more features of the computer as shown may be omitted while still permitting the practice of the invention. For example, apparatus pointing device , such as a mouse, is not required where the apparatus  is a cellular telephone.",{"@attributes":{"id":"p-0065","num":"0065"},"figref":"FIG. 12","b":["1000","1480","1000","1030","1410","1480","1475","1480","1465","1475","1470","1470","1465"],"i":"a "},"Content parsing logic engine  generates a content reference  based on user selected and\/or defined preferences (e.g., parameters saved in data store ). Then engine  uses reference  in executing a first query on posting site to retrieve markup language content . Next, the engine  generates map  where posting site item identifiers  are mapped to item data . The engine then uses content reference  in its execution of a second query of the posting site to retrieve syndicated content . This content is used to generate information to be included in appropriate item data  locations resulting in a modified map .","The content parsing logic engine passes the modified map  to the query engine  which in turn stores these results in data store , if the search is a background search. Otherwise, if the search is a foreground search, these results are displayed to the user.","The flow charts herein illustrate the structure of the logic of the present invention as embodied in computer program software. Those skilled in the art will appreciate that the flow charts illustrate the structures of logic elements, such as computer program code elements or electronic logic circuits which function according to this invention. Manifestly, the invention is practiced in its essential embodiment by a machine component that renders the logic elements in a form that instructs digital processing apparatus  (that is, a computer) to perform a sequence of function steps corresponding to those shown.","Logic elements may be contained on a computer program product which includes but is not necessarily limited to a disk, volatile or non-volatile memory, flash memory, and ROM for storing program modules. Program modules may comprise a computer program that is executed by processor(s)  within the apparatus  as a series of computer-executable instructions. In an illustrative embodiment of the invention, the computer-executable instructions may be lines of compiled Java code.",{"@attributes":{"id":"p-0070","num":"0070"},"figref":"FIG. 1","b":["110","114","146","134"]},"Step  is a high level representation of a method for initiating a search (shown in detail in ). At step , if new search results are found, they are processed. Otherwise, proceed to step  which in turn proceeds to sleep state  or to a wait state for user input at step .","If there are new results at step , record the results in a table at step  that executes the steps  to  (returning to step  at step ) (see  and accompanying description). Then the user is notified of new results at step  that executes the steps  to  (returning to step  at step ) (see  and accompanying description). This notification, in some embodiments, can be a display of a selector in a status area, a sound, a vibrate alarm, or notification \u201cwidget\u201d on the user's home screen. As defined in the internet online service Wikipedia: \u201cIn computer programming, a widget (or control) is an element of a graphical user interface (GUI) that displays an information arrangement changeable by the user, such as a window or a text box. The defining characteristic of a widget is to provide a single interaction point for the direct manipulation of a given kind of data. In other words, widgets are basic visual building blocks which, combined in an application, hold all the data processed by the application and the available interactions on this data.\u201d","Some embodiments of this invention display search results via a widget on a pop up window while the user is executing other applications.","Upon exiting sleep state  (when it is time to search), the process proceeds to step . Otherwise a decision is made to either proceed to sleep state  again or to wait state step . Upon exiting the wait state step , it is determined at step  whether there is a new user request. If there is a request, the process proceeds to sleep state  to wait for the next time to search. Otherwise, the process may proceed either to wait again for user input at step  or to sleep state  for the next time to search.","In , step  is detailed. At step , if the search service is enabled proceed to step  to continue with the search. Otherwise, return to the sleep state . At step , a list is obtained of search request objects from a data set. These are searches and associated criteria input by the user. Typically, search request objects would be stored in a relational database, but this is not required. A search request object comprises:\n\n","The data store can be on a file system, or some other data storage mechanism. The data can be represented a simple name-value pair association. A battery operated device can go into \u201cDeep Sleep\u201d mode to save battery life. The time since last boot is the absolute amount of time since the device was lasted powered on, and includes the time that the device was in Deep Sleep mode. This time is used to determine when to schedule the service to run, and is used in process retry logic step  (shown in detail in ).","The process at step  obtains polling time interval, according to user preference, from the data store. The polling interval is specified by the user as the number of hours and seconds in which to periodically run the automatic searches.","The process at step  obtains an error count. The error count is the number of failed attempts to contact the server data feed since the last successful connection. This is used in the process retry logic at step .","The process determines at step  the ability of the device to connect to the network. The network comprises the cellular network , the local area network , the point-to-point network .","The process at step  reads battery status from the device. This would typically be the percentage of maximum capacity remaining on the device.","The process at step  decides if the device can connect to the network. If not, the process performs the process retry logic at step . Also the process performs the process retry logic step  if the battery capacity is insufficient. Battery sufficiency can be determined by processing the charging status and the capacity remaining on the device. The result of a step  operation determines when to the schedule the next attempt to connect to the network and execute background search processing.","If the process at step  decides that the device can connect to the network, the process proceeds to reset error count at step . The error count is reset to a value, such as zero, which indicates that no errors are outstanding. The value is saved in a data store for the next time that the background search is executed.","The process next starts an asynchronous thread at step  executing the steps from step  to  (returning to step  at step ) (shown in more detail in ). Step  will execute the background search.",{"@attributes":{"id":"p-0084","num":"0091"},"figref":"FIGS. 3A and 3B","b":"240"},"Step  checks for low battery. If battery is low, perform low battery processing at step . If not, perform process retry logic (steps  to ) based on polling interval and error count.","At low battery processing step , perform low battery processing based on charging status and capacity remaining. For example, if battery capacity is less than 50% and polling interval is less than one hour, the next attempt might be delayed until twice the polling interval. Alternatively, a lookup table can be configured with the rows representing battery life, and the columns representing the retry interval. Each cell could contain a rule determining when to retry the next search.","If battery is not low, perform get polling interval step ; read polling interval user preference from a data store such as a database.","Step  determines if polling interval is less than a first threshold. For example, the first threshold might be 20 minutes","Typically, server data feed is only updated at a limited time frequency (for example, 15 minutes). It would be wasteful to try more frequently than a data feed update frequency at which the first threshold is approximately set. Thus, if the user's preferred polling interval is less than the first threshold, retry at the expiration of the user's next preferred polling interval.","At step , it is determined if the polling interval is less than the first threshold (e.g., the polling interval is less than 20 minutes). If it is, proceed to step  where error count is reset and saved in a data store. Then proceed to step  and run the service at its next regularly scheduled polling interval. Next proceed to step .","Otherwise, if at step  the polling interval is greater than or equal to the first threshold, proceed to step .","At step , if the polling interval is less than a second threshold (e.g., less than 60 minutes), but greater than the first threshold, proceed to step  to check the error count else proceed to step . If at step , the error count is >=n(e.g. n=1), the number of retry attempts has been exceeded. nis also referred to as \u201cfirst constant\u201d in this application. Then in this case, reset the error count at step , save in the data store, also at step , and run the service polling interval at step . Then proceed to step .","If the error count is less than nat step , set the error count to 1 plus the previous error count and save the error count in the save data store at step . Proceeding to step , the service is rescheduled to run at an interval that is a fraction of the polling interval (e.g. the fraction being 10 minutes). Then proceed to step .","If, at step , the polling interval is greater than or equal to the second threshold proceed to step . An error count less than or equal to n(e.g. n=0), nbeing less than n, means that insufficient retries have been attempted. nis also referred to as \u201csecond constant\u201d in this application. In this case, proceed from step  to step , where the error count is incremented and saved in the save data store. Proceeding to step , the service is rescheduled to run at an interval that is a fraction of the polling interval (e.g. the fraction being 10 minutes). Then proceed to step .","At step , if the error count is greater than n, proceed to step . At step , test whether number of retry attempts is greater than or equal to n, nbeing greater than n(e.g. n=1). nis also referred to as \u201cthird constant\u201d in this application. If the error count is greater than n, proceed to reset the error count at step , save in the data store (also at step ), and run the service polling interval at step . Then proceed to step .","At step  if the error count is less than n, set the error count to 1 plus the previous error count and save in the data store at step . Proceed to step  where the service is rescheduled to run at some fraction (e.g. 50%) of the polling interval. Then proceed to step .",{"@attributes":{"id":"p-0097","num":"0104"},"figref":"FIGS. 4A and 4B"},"At step , if the alert service is disabled, terminate the alert at step  and return at step . If the alert service is enabled than proceed to step  to get a list of search request objects from a data store.","At step , if no search request objects were found in the data store, proceed to step  to terminate the alert service and return to the caller at step .","If, at step , search request objects were found in the data store, proceed to step  and initialize the autoHits count to zero. The autoHits count is the number of postings that are found by executing all of the search requests.","Next proceed to iterate steps , , and . At , determine if more search requests are outstanding. If not, terminate looping and proceed to step . Otherwise, proceed to step  where a search for a current search request is performed. Then increment at step  the autoHits by the number found from the search. Next, the process loops back to step .","The search and the user interface process are asynchronous, so the user can look at an autoHits table (see , B, and C and accompanying description), while the search is in progress. Therefore at step , a count (sumWaitingForUser) of the current unviewed autoHits is queried from the data store. Then proceed to steps  to  where the user is notified of search results. The user can be notified during background search or when the app is running in the foreground. This can be accomplished by adding a notification selector in the mobile status area, or displaying a notification widget on the user's home screen.","At step , a check is made to determine if the number of autoHits from the previous search iteration (steps , , and ) is greater than zero. If the number is not greater than zero, proceed to step . At step , determine if the sumWaitingForUser is equal to zero. If the sumWaitingForUser is equal to zero, cancel at step  any user notification currently displayed. This can be accomplished by removing the notification selector in a status area, or by removing a notification widget in the user's home screen. Next, return to the caller at step . If, at step , the sumWaitingForUser is not equal to zero, return to the caller at step  without canceling the user notification.","If, at step , the number of autoHits is greater than zero, the process proceeds to step  where a user notification of sumWaitingForUser results is displayed. Then at the next step, step , a user interface is updated if currently visible. After step , at step , the process returns to the caller.",{"@attributes":{"id":"p-0105","num":"0112"},"figref":"FIGS. 5A","b":["5","5","428"]},"The perform search  sequence of steps is the main procedure for executing a single search request. It can run automatically in the background at periodic time intervals, or in the foreground at the request of the user. It accepts as input a SearchRequest object defined by the user, and returns the number of resulting search hits. If search results are found, they are stored in the autoHits Table for retrieval and display by the user.","A problem to be solved by some embodiments of the present invention is that posting services publish information partly in markup language format and partly in syndicated content format.","The posting service can return posted items in both markup language and syndicated content formats. The data associated with posted items may be distributed across both formats. Some embodiments of this invention apply user-specified criteria to perform searches of posted items, to extract data published in dissimilar formats, such as markup language and syndicated content formats, to integrate the data into displayable results, and to notify the user of the results preferably on a mobile device.","The benefit of parsing markup language content, in addition to syndicated content channel, is that additional data can be extracted and associated with a posted item that is not available in syndicated content alone. For example, the posting service may host an image for a posted item that is uploaded by the user, and represented in the markup language content as a content reference. By associating this image content reference with the posted item in the syndicated content channel, time consuming parsing of syndicated content is not required to display an image thumbnail.","An example of a posted item, as presented to the user, is shown in . An item includes a posting date and time, a short description of merchandise contents , and a content reference which the user can select to display detailed web content. This invention also provides a mechanism to parse item data across multiple content formats in order to generate efficiently the image thumbnail  for display, preferably on a mobile device.","A \u201chit\u201d is defined as a match between the search criteria specified by the user in the SearchRequest object, and a single item extracted from a list of items returned from the community\/classified posting service. A match can be made based on one or more of the following criteria:\n\n","The following input variables, which are members of the SearchRequest object, are utilized by this procedure:\n\n","A high level description for performing search  is as follow:\n\n","At step , a search request is constructed by applying the input filters to input content reference, and formatting a request for markup language content. The input content reference comprises the domain name of the search service website and any additional path and query parameters needed to execute the search. The input content reference is specific to the service being searched.","At step , determine the search stop criteria as described in the following pseudo code:",{"@attributes":{"id":"p-0116","num":"0138"},"tables":{"@attributes":{"id":"TABLE-US-00001","num":"00001"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"thead":{"row":{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"\/\/ The variables used by the parsing threads to determine when to stop"},{"entry":"the search are:"},{"entry":"\/\/ 1. maxHits - User specified preference for the maximum number of"},{"entry":"search results to return"},{"entry":"\/\/ 2. lastHitId - Identifier of the most recent posting that was found during"},{"entry":"the previous search."},{"entry":"\/\/\u2003\u2002The background search only returns search results that haven't"},{"entry":"been made available to the \/\/\u2003\u2002user from previous"},{"entry":"background searches."},{"entry":"\/\/ 3. lookBackTime - Calculated calendar time that indicates how far"},{"entry":"back in time to search"},{"entry":"lookBackTime = \u22121\u2003\u2003\/\/ Default to unlimited look back time"},{"entry":"if (userLookBackInterval specified by user) {"},{"entry":"\u2003\/\/ Subtract userLookBackInterval from current time"},{"entry":"\u2003lookBackTime = currentTime \u2212 userLookBackInterval"},{"entry":"\u2003if (lastHitTime > lookBackTime) {"},{"entry":"\u2003\u2003\/\/ We received a hit more recent than the user specified"},{"entry":"\u2003\u2003\/\/ look back interval. Use the more recent time"},{"entry":"\u2003\u2003lookBackTime = lastHitHime"},{"entry":"\u2003\u2003\/\/ Subtract a small amount of time from the look back time"},{"entry":"\u2003\u2003\/\/ to account for any overlaps or posting errors"},{"entry":"\u2003\u2003lookBackTime = lookBacTime \u2212 5 minutes"},{"entry":"\u2003}"},{"entry":"}"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}]}}}}},"Parsing thread  is a sequence of steps (shown in detail in ). Start an asynchronous thread that will execute the markup language search, and then execute sleep loop until the timeout has expired or the search is finished.","Next, steps , , and  are iterated. At step , decide whether parsing is completed. If completed, proceed to the step , exiting the loop. If not done parsing, proceed to step  to determine if the parsing timeout period has expired. If the timeout period has not expired, enter a wait state at step  and subsequently return to the start of the loop. If the timeout period has expired at step , exit the loop, kill the markup language parsing thread at step , and proceed to step .","At step , a posted item map is returned from the markup language parsing thread. It comprises the posted item identifications and associated posted data, Examples of posted data include a description, a price, or an image content reference for the item being posted.","At step , a syndicated content search request is initiated by formatting a request for syndicated content. The request is specific to the service being searched, but it might be constructed by appending path and query information to the input content reference.","At step , a syndicated content parsing thread sequence of steps (shown in detail in , B, C, and D) is started. Start an asynchronous thread that will execute the syndicated content search, and then proceed to the sleep wait state until the timeout has expired or the search is finished. Inputs to the syndicated content parsing thread comprise the syndicated content stop criteria and the posted item map. The posted item map comprises the results of the markup language search.","Next, steps , , and  are iterated. At step , decide whether parsing is completed. If completed, proceed to step  exiting the loop. If not done parsing, proceed to step  to determine if the parsing timeout period has expired. If the timeout period has not expired, enter a wait state at step  and subsequently return to the start of the loop. If the timeout period has expired at step , proceed to kill the markup language parsing thread at step  and exit the loop, proceeding to step .","At step , it is determined if there are any search results. If there are no search results, set number of hits (numberOfHits) to 0 and return the result at step . However, if there are search results, calculate the number of hits as the count of the number of RdfItems returned from the syndicated content parsing thread from step .","RdfItems contains the following data:\n\n","If the search results are greater than 0 at step , calculate the number of results (numberOfHits) by determining the count of RdfItems.","Update SearchRequest table at step . The following input variables, members of the SearchRequest object, are utilized by this step :\n\n","The SearchRequest table is updated to reflect the most recent hit, so future searches do not return the same results. The identifiers (lastHitId) and time (lastHitTime) of the most recent post found are updated in the table.","Convert RdfItems at step . The RdfItems returned from syndicated content parsing thread are converted to AutoHit objects, so they can be stored in the AutoHits table.","An AutoHit object comprises:\n\n","In this case, because the items have not been view by the user, the isNew flag is set to true.","Save hits step  executes steps  to  (returning to step  at step ) (shown in detail in ). Save the hits in the AutoHits table.","The invention includes a mechanism to store a limited number of the most recent hit results to a data store table for future presentation to the user. A list of AutoHit objects is passed to this procedure. The list contains the search results, from most to least recent. Return numberOfHits, step .",{"@attributes":{"id":"p-0133","num":"0171"},"figref":"FIGS. 6A and 6B","b":"512"},"At step , get a character reader in order to read an markup language input stream from the content reference. Next, begin iterating steps from step  to step . At step  attempt to read the next line from the markup language input stream. The end of the stream would typically be indicated by a negative number of bytes returned or by reading an End Of File character.","Step  checks to determine if there are more lines to read or data to process. If the last line has been read, return. Otherwise, read a next posting data element (defined above) at step .","If the posting data element is not contained on a separate line, this could be implemented by reading additional lines from the IO stream. An alternative approach would be to read the next match of a regular expression matcher.","Step  determines if there is more markup language data; i.e., if there are additional posting data elements. If there are no more markup language data to process, return the postedItemMap to the caller at step . The determination of whether there is more data to process depends on the markup language content provided by the service. One implementation would utilize a regular expression matcher to extract posted items from the markup language. If there are no more matches, the processing is completed.","If, at step , there are more data to process, proceed to step  where the posted item is extracted from markup language content. The mechanism to parse the data depends on the format of the markup language content provided by the service. One approach would utilize string matching to extract the relevant data. Another approach would use regular expression matching. A posted item identifier must be extracted from the data in order to associate this posting with the data in the syndicated content channel.","At step , if the number of posting items found is equal to or exceeds the maxHits stop criterion, return at step . If instead the number of posting items is less than the maxHits stop criterion, continue processing at step .","At step , if the search is being performed in the foreground, all posted results are desired and proceed to step . Otherwise, the search is being performed in the background and the process proceeds to step  to perform a look back time (lookBackTime) check. The check for the lookBackTime at step  determines if posting time is available in the posting data element. If it is available and is older than the lookBackTime stop criteria, defined above, the search is completed and proceed to return posted item map to the caller at step . If posting time is not available, or the posting time is more recent that the lookBackTime, proceed to step .","At step , add the posting identifier and posted item to the postedItemMap, and continue with the search by looping back to step .",{"@attributes":{"id":"p-0142","num":"0180"},"figref":"FIGS. 7A","b":["7","7","7","540"]},"The syndicated content Parsing Thread parses service contents resulting from the submission of syndicated content search request. A reader to the syndicated content stream is obtained from the search request, and each posted item is parsed until the search stop criteria (step ) is satisfied. The stop criteria can be applicable to both the markup language search ( and B) and the syndicated content search (, B, C, and D). Since an syndicated content feed contains structured XML content, a standard XML parser can be utilized to parse the document. A representative service might post an syndicated content channel as follows:",{"@attributes":{"id":"p-0144","num":"0182"},"tables":{"@attributes":{"id":"TABLE-US-00002","num":"00002"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"thead":{"row":{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"<channel>"},{"entry":"\u2003<title>Community\/classified posting service<\/title>"},{"entry":"\u2003<link>http:\/\/samplepostingservice.com<\/link>"},{"entry":"\u2003<description>This is a sample channel for a posting "},{"entry":"\u2003service<\/description>"},{"entry":"\u2003<item>"},{"entry":"\u2003\u2003<title>Cape dory 25 - $3500<\/title>"},{"entry":"\u2003\u2003<link>http:\/\/annapolis.samplepostingservice.com\/forsale\/boats\/<\/link>"},{"entry":"\u2003\u2003<pubDate>2011-11-06T14:41:19-05:00<\/pubDate>"},{"entry":"\u2003\u2003<description>"},{"entry":"\u2003\u2003\u2003<![CDATA[<p>1978 Cape Dory ready to sail away<\/p>]]>"},{"entry":"\u2003\u2003<\/description>"},{"entry":"\u2003<\/item>"},{"entry":"<\/channel>"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}]}}}}},"The syndicated content parsing thread is initialized with the postedItemMap obtained as a result of the markup language parsing (step ). The postedItemMap is a map of posting identifiers and associated posted item data. The syndicated content parsing thread returns a list of RdfItems, which can be converted to AutoHit objects for storage in the AutoHits table.","At step , get a character reader in order to read an syndicated content input stream from the content reference. A search request is constructed by applying the input filters to the input content reference, and formatting a request for syndicated content. The input content reference comprises the domain name of the search service website and any additional path and query parameters needed to execute the search. The input content reference is specific to the service being searched.","Initialize Parser at step . Use a standard XML parser, such as a pull parser.","Next iterate the steps from step  to step . First, at step , check if the end of the XML document has be reached. If the end of XML document has been reached, exit loop to step  for post-processing of the RdfItems. Otherwise, continue processing at step .","At step , a determination is made if parsing of the posted items is completed. If parsing is completed, exit loop and proceed to step  for post-processing of the RdfItems. Otherwise, continue processing to step  to parse the next posted item. See above for an example of the syndicated content format to be parsed. Data items to be parsed include:\n\n","Proceed to step  to determine if the number of items parsed so far is greater than or equal to maxHits. If the number of posting items found equals or exceeds the maxHits stop criteria, exit loop to step  for post-processing of the RdfItems. Otherwise, continue processing at step .","If searching in the background at step , the lastHitId and lookBackTime stop criteria will be applied and proceed to step . If searching in the foreground, ignore the stop criteria and proceed to step .","At step , if the lastHitId matches the identifier from the parsed item, exit loop to step  for post-processing of the RdfItems. Otherwise, continue processing at step .","At step , if a posting time was extracted from the posted item and the item that is currently being parsed is older the lookBackTime stop criteria, exit loop to step  for post-processing of the RdfItems. Otherwise, proceed to step .","At step , use the identifier of the posted item as a lookup key to the postedItemMap. If an entry exists, the same item was previously processed from the markup language processing thread; proceed to step . At step , if the item previously processed from the markup language processing thread contains an image content reference, it is not necessary to continue to parse additional content. This saves considerable processing in locating a suitable image content reference from which to generate a thumbnail. If an image content reference is not available, syndicated content description element will be searched.","If an entry does not exist at step , go to step  to parse the posted item description for image content references. The syndicated content description data can contain markup language content that was posted by the service user. The content can be parsed to find a list of candidate images that would make suitable thumbnails. Images that would not make suitable thumbnails are not added to the list. When the AutoHit items are displayed for the mobile user, this reduces the processing needed to display a thumbnail. The parsing procedure at step  to find a list of candidate image content references is described in the following pseudo-code:",{"@attributes":{"id":"p-0156","num":"0198"},"tables":{"@attributes":{"id":"TABLE-US-00003","num":"00003"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"thead":{"row":{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"Create regular expression matcher to locate image links"]},{"entry":[{},"Apply regular expression to markup language content"]},{"entry":[{},"while there are more matches and number of matches"]},{"entry":[{},"< MAX_THUMBNAILS_TO_TRY {"]},{"entry":[{},"\u2003Get next link from matcher"]},{"entry":[{},"\u2003Extract image resource name from link"]},{"entry":[{},"\u2003if resource name indicates image would make a bad thumbnail {"]},{"entry":[{},"\u2003\u2003\/\/ e.g. spacer.gif, blank.gif, etc."]},{"entry":[{},"\u2003\u2003continue"]},{"entry":[{},"\u2003}"]},{"entry":[{},"\u2003if link is not a valid content reference {"]},{"entry":[{},"\u2003\u2003continue"]},{"entry":[{},"\u2003}"]},{"entry":[{},"\u2003Extract width and height attributes from image tag"]},{"entry":[{},"\u2003if width and height are available {"]},{"entry":[{},"\u2003\u2003Calculate aspect ratio of image"]},{"entry":[{},"\u2003\u2003if aspect ratio is too big or too small {"]},{"entry":[{},"\u2003\u2003\u2003\/\/ The image is most likely some type of"]},{"entry":[{},"\u2003\u2003\u2003\/\/ formatting element, such as a spacer - ignore"]},{"entry":[{},"\u2003\u2003\u2003continue"]},{"entry":[{},"\u2003\u2003}"]},{"entry":[{},"\u2003}"]},{"entry":[{},"\u2003Add image to list of candidates"]},{"entry":[{},"}"]},{"entry":[{},"return candidate list of images"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}]}}}}},"If at step , one or more candidate images were found in syndicated content description, the candidate images are stored in the RdfItem, at step , which is then added to the return list, at step . If one or more images were not found at step , bypass step  and proceed to step . At step , add RdfItems to a return list and loop back to step .","Referring back to step , if an image content reference is found proceed to step  (described above). If an image content reference is not found at step , execute the steps described in step  (see above).","Some of the RdfItems in the return list may not have image content references associated with them. This can occur when both the markup language parser and syndicated content description parser fail to find candidate images. In this case, the contents pointed to by the link in the RdfItem will also be searched for candidate images. As a performance optimization, the links to search will be grouped into small batches so they can be executed concurrently. Typically, mobile devices can only process a few concurrent connections at a time. This number can be optimized for the specific device and communications network being utilized.","To accomplish the above, post-processing is conducted starting at step  (routed to there from steps , , , , and ). Step  is the start of a loop: steps , , , , and . At step , get a next batch of RdfItems which do not contain content references. This can be accomplished by conducting a linear search through the RdfItems to find items without image content references.","At step , if there are no more batches to process, exit the loop and return the list of RdfItems to the caller at step . Otherwise, at step  start one ImageParser thread for each RdfItem in the batch. The link in each RdfItem represents a detailed posting by a service user. The contents pointed to by the link can be parsed for a list of candidate thumbnail images. One ImageParser thread will be created for each link in the batch of RdfItems. The ImageParser thread will open an IO reader from the link content reference, and then utilize the method specified in parse syndicated content description step  to parse image links.","At step , if all the threads in the current batch are not done, proceed to step  to wait. Otherwise, proceed to step  to get the next batch to process. The completion of the threads can be coordinated by a countdown latch object, or other similar thread synchronization mechanism.","Steps  and  utilize the logic shown in .","At step , a data store transaction begins. This procedure assumes the existence of a transactional data store on the device. The data store operations in this procedure should be atomic, and a mechanism should be available to roll back the transactions if a failure occurs.","At step , count the number of rows (numOfRows) in the AutoHits Table, by executing a query against the data store.","At step , the number of open slots (openSlots) is calculated by subtracting the numOfRows from a capacity of the AutoHits Table. Capacity is the maximum number of rows that the table can grow to. The capacity is a tradeoff between memory utilization on the mobile device and the number of prior hits available to the user.","At step , a count of the number of AutoHits (nRecords) being inserted into the table is determined from the list of AutoHit objects passed into this procedure.","At step , determine if nRecords>capacity of the AutoHits table. If the number of records being inserted into the table is greater than the capacity, proceed to step  which deletes all of the existing records in the AutoHits table. Then proceed to step .","At step , the number of records being inserted is greater than the capacity of the table, so the oldest records can't be accommodated. The list of records being inserted is ordered from most to least recent, so the excess number of records (capacity\u2212nRecords) is removed from the end of the list. Then proceed to step .","If, at step , the number of records being inserted into the AutoHits table is less than or equal to the capacity of the AutoHits table, proceed to step  to determine if nRecords is greater than openSlots.","At step , if nRecords is greater than openSlots, proceed to step  to make room in the AutoHits table by removing the oldest records. The AutoHits Table is ordered from the least recent postings to most recent. Additional room is made in the table by removing the oldest entries at the top, thereby creating room to add the newest entries at the bottom. This is done without increasing the capacity. The number of records to remove is calculated by (nRecords\u2212openSlots). This number of records can be removed from the beginning of the table by executing a query. After executing , proceed to .","If, at step , nRecords is less than or equal to the openSlots, it is not necessary to make additional room in the AutoHits table and step  can be bypassed, proceeding instead to step .","By the time step  is executed, there is enough room in the table to insert the records. Since the table is ordered from least to most recent postings, but the list of records being inserted is ordered from most to least recent, the records are inserted in reverse order. Proceeding to step , queries executed in this procedure are committed to the data store. After step , return to the caller at step .","Those skilled in the art will recognize that the present invention has been described in terms of exemplary embodiments based upon use of a programmed processor (e.g., digital processing apparatus ). However, the invention should not be so limited, since the present invention could be implemented using hardware component equivalents such as special purpose hardware and\/or dedicated processors that are equivalents to the invention as described and claimed. Similarly, general purpose computers, microprocessor based computers, micro-controllers, optical computers, analog computers, dedicated processors and\/or dedicated hard wired logic may be used to construct alternative equivalent embodiments of the present invention. Moreover, although the present invention has been described in terms of a general purpose personal computer providing a playback mechanism, the playback can be carried on a dedicated machine without departing from the present invention. Conversely, the present decoder has been described in terms of a state machine and such state machine can be implemented as either a hardware or software based state machine. Moreover, those skilled in the art will understand that the exact register configurations, PID protocols and other details described in connection with the above exemplary embodiment should not be considered limiting, but are presented by way of illustration.","Those skilled in the art will appreciate that the program steps and associated data used to implement the embodiments described above can be implemented using disc storage as well as other forms of storage such as for example Read Only Memory (ROM) devices, Random Access Memory (RAM) devices; optical storage elements, magnetic storage elements, magneto-optical storage elements, flash memory, core memory and\/or other equivalent storage technologies without departing from the present invention. Such alternative storage devices should be considered equivalents.","The present invention, as described in embodiments herein, is implemented using a programmed processor executing programming instructions that are broadly described above form that can be stored on any suitable electronic storage medium or transmitted over any suitable electronic communication medium or otherwise be present in any computer readable or propagation medium. However, those skilled in the art will appreciate that the processes described above can be implemented in any number of variations and in many suitable programming languages without departing from the present invention. For example, the order of certain operations carried out can often be varied, additional operations can be added or operations can be deleted without departing from the invention. Error trapping can be added and\/or enhanced and variations can be made in user interface and information presentation without departing from the present invention. Such variations are contemplated and considered equivalent.","Software code and\/or data embodying certain aspects of the present invention may be present in any computer readable medium, transmission medium, storage medium or propagation medium including, but not limited to, electronic storage devices such as those described above, as well as carrier waves, electronic signals, data structures (e.g., trees, linked lists, tables, packets, frames, etc.) optical signals, propagated signals, broadcast signals, transmission media (e.g., circuit connection, cable, twisted pair, fiber optic cables, waveguides, antennas, etc.) and other media that stores, carries or passes the code and\/or data. Such media may either store the software code and\/or data or serve to transport the code and\/or data from one location to another.","While the invention has been described in conjunction with specific embodiments, it is evident that many alternatives, modifications, permutations and variations will become apparent to those skilled in the art in light of the foregoing description. Accordingly, it is intended that the present invention embrace all such alternatives, modifications and variations as falling within the scope of the appended claims.","The Appendix, submitted on a computer readable medium, forms a part of the patent application entitled \u201cMethod and Apparatus to Search Data and Notify and Update a User.\u201d","This Appendix, which is hereby incorporated by reference herein in its entirety, includes computer programming code in the JAVA language. It should be recognized, however, that this code is not meant to limit the scope of the invention, but only to provide details for a specific embodiment. This Appendix includes the Appendix incorporated by reference above from U.S. Provisional Application No. 61\/458,442, filed Nov. 23, 2010 entitled \u201cMethod and Apparatus to Search Data and Notify and Update a User,\u201d which is hereby incorporated by reference herein in its entirety.","Computer program listing appendix on compact disc-recordable (CD-R), corresponding to the program listings discussed below, is filed herewith, in accordance with 37 C.F.R. 1.52(e). This computer program listing appendix is incorporated herein by reference in its entirety, in accordance with 37 C.F.R. 1.77(b)(4). The aforementioned compact disc was created on Nov. 15, 2011 and is a copy of a compact disc created on Nov. 22, 2010 submitted as an appendix to U.S. Provisional application No. 61\/458,442 filed Nov. 23, 2010 by Larry Deutsch, which application and appendix are incorporated by reference in their entirety.","The files on CD-R are identified as follows:",{"@attributes":{"id":"p-0183","num":"0225"},"tables":{"@attributes":{"id":"TABLE-US-00004","num":"00004"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"1","colwidth":"147pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"28pt","align":"center"}},{"@attributes":{"colname":"3","colwidth":"42pt","align":"center"}}],"thead":{"row":[{"entry":{"@attributes":{"namest":"1","nameend":"3","align":"center","rowsep":"1"}}},{"entry":["File Name","Size","Date"]},{"entry":{"@attributes":{"namest":"1","nameend":"3","align":"center","rowsep":"1"}}}]},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":{}}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"1","colwidth":"147pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"28pt","align":"char","char":"."}},{"@attributes":{"colname":"3","colwidth":"42pt","align":"center"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["Address.java","3,439","11\/22\/2010"]},{"entry":["AppPreferenceActivity.java","5,219","11\/22\/2010"]},{"entry":["AutoHit.java","6,500","11\/22\/2010"]},{"entry":["BoundedLruCache.java","2,274","11\/22\/2010"]},{"entry":["Categories.java","9,255","11\/22\/2010"]},{"entry":["CheckBoxPreferenceWithLongSummary.java","1,557","11\/22\/2010"]},{"entry":["clear_data_dialog.xml","2,182","11\/22\/2010"]},{"entry":["ClearDataPreference.java","10,621","11\/22\/2010"]},{"entry":["colors.xml","651","10\/30\/2010"]},{"entry":["Constants.java","6,415","11\/22\/2010"]},{"entry":["Contact.java","3,147","11\/22\/2010"]},{"entry":["ContactAPI.java","2,095","11\/22\/2010"]},{"entry":["ContactAPI3.java","7,048","11\/22\/2010"]},{"entry":["ContactAPI5.java","8,878","11\/22\/2010"]},{"entry":["ContactList.java","1,218","11\/22\/2010"]},{"entry":["CraigslistHtmlParser.java","11,371","11\/22\/2010"]},{"entry":["CraigslistUrl.java","5,889","11\/22\/2010"]},{"entry":["custom_dialog.xml","2,267","11\/22\/2010"]},{"entry":["CustomAlertDialog.java","5,081","11\/22\/2010"]},{"entry":["Database.java","25,798","11\/22\/2010"]},{"entry":["Email.java","1,962","11\/22\/2010"]},{"entry":["FinditAlertService.java","8,645","11\/22\/2010"]},{"entry":["FinditApplication.java","6,479","11\/22\/2010"]},{"entry":["FinditServiceConnection.java","3,340","11\/22\/2010"]},{"entry":["FinditServiceReceiver.java","1,375","11\/22\/2010"]},{"entry":["HtmlParsingResults.java","1,573","11\/22\/2010"]},{"entry":["ImageDownloader.java","22,606","11\/22\/2010"]},{"entry":["ImageUrl.java","1,430","11\/22\/2010"]},{"entry":["Iso8601DateParser.java","2,433","11\/22\/2010"]},{"entry":["item_web_view.xml","1,029","11\/22\/2010"]},{"entry":["LineReader.java","3,818","11\/22\/2010"]},{"entry":["list_item_icon_text.xml","1,319","11\/22\/2010"]},{"entry":["list_item_text.xml","1,103","11\/22\/2010"]},{"entry":["location.xml","2,586","11\/22\/2010"]},{"entry":["LocationActivity.java","25,128","11\/22\/2010"]},{"entry":["LocationRecord.java","5,768","11\/22\/2010"]},{"entry":["Locations.java","22,742","11\/22\/2010"]},{"entry":["map_result_dialog.xml","3,176","11\/22\/2010"]},{"entry":["number_picker.xml","1,634","10\/17\/2010"]},{"entry":["NumberPicker.java","14,049","11\/22\/2010"]},{"entry":["NumberPickerButton.java","2,527","09\/19\/2010"]},{"entry":["Phone.java","1,888","11\/22\/2010"]},{"entry":["Range.java","2,107","11\/22\/2010"]},{"entry":["RdfItem.java","7,328","11\/22\/2010"]},{"entry":["RdfParser.java","26,178","11\/22\/2010"]},{"entry":["review_list.xml","1,285","11\/22\/2010"]},{"entry":["ReviewSearchResults.java","47,293","11\/22\/2010"]},{"entry":["save_result_dialog.xml","5,499","11\/22\/2010"]},{"entry":["save_search_dialog.xml","3,896","11\/22\/2010"]},{"entry":["saved_overview.xml","6,162","11\/22\/2010"]},{"entry":["SavedActivity.java","54,731","11\/22\/2010"]},{"entry":["search_criteria.xml","2,887","11\/22\/2010"]},{"entry":["SearchCriteria.java","26,016","11\/22\/2010"]},{"entry":["SearchItemAdapter.java","6,302","11\/22\/2010"]},{"entry":["SearchRequest.java","8,134","11\/22\/2010"]},{"entry":["SearchResult.java","5,908","11\/22\/2010"]},{"entry":["SearchTabActivity.java","2,507","11\/22\/2010"]},{"entry":["sendto.xml","4,325","11\/22\/2010"]},{"entry":["ServiceCallable.java","1,164","11\/22\/2010"]},{"entry":["ServiceTimerTask.java","13,675","11\/22\/2010"]},{"entry":["spinner_view.xml","888","11\/22\/2010"]},{"entry":["spinner_view_dropdown.xml","891","11\/22\/2010"]},{"entry":["strings.xml","16,669","11\/22\/2010"]},{"entry":["StyleableSpannableStringBuilder.java","1,789","11\/22\/2010"]},{"entry":["styles.xml","1,517","11\/18\/2010"]},{"entry":["TimePickerPreference.java","11,691","11\/22\/2010"]},{"entry":["ToggleButtonGroupTableLayout.java","2,767","11\/22\/2010"]},{"entry":["UrlParam.java","1,594","11\/22\/2010"]},{"entry":["Utils.java","26,315","11\/22\/2010"]},{"entry":["ViewItem.java","18,256","11\/22\/2010"]},{"entry":{"@attributes":{"namest":"1","nameend":"3","align":"center","rowsep":"1"}}}]}}]}}}],"BRFSUM":[{},{}],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"BRIEF DESCRIPTION OF THE DRAWINGS","p":["The features of the invention believed to be novel are set forth with particularity in the appended claims. The invention itself however, both as to organization and method of operation, together with objects and advantages thereof, may be best understood by reference to the following detailed description of the invention, which describes certain exemplary embodiments of the invention, taken in conjunction with the accompanying drawings in which:",{"@attributes":{"id":"p-0046","num":"0046"},"figref":"FIG. 1"},{"@attributes":{"id":"p-0047","num":"0047"},"figref":"FIGS. 2A and 2B"},{"@attributes":{"id":"p-0048","num":"0048"},"figref":"FIGS. 3A and 3B"},{"@attributes":{"id":"p-0049","num":"0049"},"figref":"FIGS. 4A and 4B"},{"@attributes":{"id":"p-0050","num":"0050"},"figref":"FIGS. 5A","b":["5","5"]},{"@attributes":{"id":"p-0051","num":"0051"},"figref":"FIGS. 6A and 6B"},{"@attributes":{"id":"p-0052","num":"0052"},"figref":"FIGS. 7A","b":["7","7","7"]},{"@attributes":{"id":"p-0053","num":"0053"},"figref":"FIGS. 8A and 8B"},{"@attributes":{"id":"p-0054","num":"0054"},"figref":"FIG. 9"},{"@attributes":{"id":"p-0055","num":"0055"},"figref":"FIG. 10"},{"@attributes":{"id":"p-0056","num":"0056"},"figref":"FIG. 11"}]},"DETDESC":[{},{}]}
