---
title: Storage management system having abstracted volume providers
abstract: A storage management system in which a volume provider incorporates an application programming interface (API) for receiving storage access information that characterizes high-level input/output (I/O) attributes of the storage volume such as intended access patterns, a desired level of fault handling and optimization preferences. The volume provider and the underlying storage devices conform to the specified attributes as best as possible and resolve any conflicts with the communicated attributes. The volume providers monitor the storage volumes and may reconfigure the storage volumes in order to accomplish the desired attributes.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=06904599&OS=06904599&RS=06904599
owner: Microsoft Corporation
number: 06904599
owner_city: Redmond
owner_country: US
publication_date: 19991129
---

{"@attributes":{"id":"description"},"BRFSUM":[{},{}],"p":["\u201cQuorum Resource Arbitrator Within A Storage Subsystem\u201d\u2014Ser. No. 09\/449,579,","\u201cStorage Management System Having Common Volume Manager\u201d\u2014Ser. No. 09\/449,577,","\u201cVolume Stacking Model\u201d\u2014Ser. No. 09\/451,519,","\u201cVolume Configuration Data Administration\u201d\u2014Ser. No. 09\/450,300, and","\u201cVolume Migration Between Volume Groups\u201d\u2014Ser. No. 09\/451,220.","This invention relates generally to data storage, and more particularly to a storage management system in which volume providers provide an abstracted, high-level interface for managing storage volumes within a storage subsystem.","A portion of the disclosure of this patent document contains material that is subject to copyright protection. The copyright owner has no objection to the facsimile reproduction by anyone of the patent document or the patent disclosure as it appears in the Patent and Trademark Office patent file or records, but otherwise reserves all copyright rights whatsoever. The following notice applies to the software and data as described below and in the drawing hereto: Copyright\u00a9 1999, Microsoft Corporation, All Rights Reserved.","As computer systems have evolved so has the availability and configuration of data storage devices, such as magnetic or optical disks. For example, these storage devices can be connected to the computer system via a bus, or they can be connected to the computer system via a wired or wireless network. In addition, the storage devices can be separate or co-located in a single cabinet.","A storage volume is a software abstraction of underlying random access storage devices, such as magnetic or optical disks, and is the smallest self-contained unit of storage exposed by an operating system and administered by a file system. Storage volumes hide the physical topology of the storage devices and may be a fraction of a disk, a whole disk or even multiple disks that are bound into a virtually contiguous range of logical blocks. This binding may increase the fault tolerance, performance, or capacity characteristics of the underlying storage devices.","One technique for improving fault tolerance, known as mirroring or plexing a disk, uses multiple disks. When data is written to one disk the data is also written to a second disk; thus the second disk is a \u201cmirror image\u201d of the first disk. If one disk should fail the second disk is still available for use and has an exact copy of the information on the first disk.","Volumes are constructed from one or more extents that are contiguous storage address spaces presented by the underlying storage devices. An extent is typically characterized by the size of the address space and a starting offset for the address space from a base of the media. Volume mapping is the process of mapping the contiguous address space presented by the volume onto the non-contiguous storage address spaces of the underlying extents. Volume mappings are either implemented on a specialized hardware controller, referred to as a hardware volume provider, or in software by a software volume provider.","Conventional volume providers are configured and managed with unique, vendor-specific tools. Each provider typically uses a proprietary protocol for communicating between the storage device and the driver. The volume providers often require that the administrator explicitly specify the configurations of the underlying volumes and force the administrator to make detailed, low-level configuration choices regarding the volume provider and the underlying storage devices. Because of the unique protocols and management tools of conventional volume providers, it is often difficult for an administrator to manage a system having multiple storage devices. There is a need in the art for a storage management system that does not require administrators to explicitly specify volume configurations and does not require that the administrator have detailed knowledge of the volume providers and storage devices.","The above-mentioned shortcomings, disadvantages and problems are addressed by the present invention. In one aspect, the invention is a storage management system in which a volume provider incorporates an application programming interface (API) for receiving storage access information that characterizes high-level input\/output (I\/O) attributes of the storage volume such as intended access patterns, a desired level of fault handling and optimization preferences. The volume provider and the underlying storage devices conform to the characterization as best as possible and resolve any conflicts with the communicated attributes. Furthermore, the volume providers monitor the storage volumes and may reconfigure the storage volumes in order to accomplish the communicated attributes.","In another aspect the invention is a method for managing one or more storage volumes of a storage subsystem. According to the invention, the method includes receiving storage access information that characterizes high-level input\/output attributes of one or more of the storage volumes. The storage volumes of the storage subsystem are then configured as a function of the input\/output attributes characterized by the storage access information.","In the following detailed description of exemplary embodiments of the invention, reference is made to the accompanying drawings that form a part hereof, and in which is shown by way of illustration specific exemplary embodiments in which the invention may be practiced. These embodiments are described in sufficient detail to enable those skilled in the art to practice the invention, and it is to be understood that other embodiments may be utilized and that changes may be made without departing from the spirit or scope of the present invention. The following detailed description is, therefore, not to be taken in a limiting sense, and the scope of the present invention is defined only by the appended claims.","The detailed description is divided into five sections. In the first section, the hardware and the operating environment in conjunction with which embodiments of the invention may be practiced are described. In the second section, a system level overview of the invention is presented. In the third section, methods for an exemplary embodiment of the invention are provided. In the fourth section, an exemplary embodiment of the invention is provided. Finally, in the fifth section, a conclusion of the detailed description is provided.",{"@attributes":{"id":"p-0022","num":"0000"},"ul":{"@attributes":{"id":"ul0001","list-style":"none"},"li":["Compromised\u2014a status indicating that a fault tolerant volume is missing one or more disk or volume extents; for example, a mirror set with only one mirror currently available.","Configuration data\u2014describes the mapping of physical resources to logical volumes.","Directed configuration\u2014provider is explicitly provided with rules for choosing logical block remapping.","Disk platter\u2014a subset of a diskpack, used for exporting or importing volumes from a diskpack.","Diskpack\u2014a collection of logical volumes and underlying disks. A diskpack is the unit of transitive closure for a volume.","Export\u2014Move a disk platter and all volumes contained on that platter out of one diskpack.","Exposed\u2014a volume is exposed to an operating system when the volume has an associated volume name (drive letter). The volume can be made available to a file system or other data store.","Free agent drive\u2014a disk drive which is not a member of a disk pack. Free agent drives cannot contain logical volumes that are exposed.","Health\u2014volume fault management status. A volume can be initializing, healthy, compromised, unhealthy, or rebuilding.","Healthy\u2014containing or able to contain valid data.","Hot-spotting\u2014temporary plexing of a volume or collection of volume extents.","Import\u2014Move a disk platter and all volumes contained on that platter into one diskpack.","Initializing\u2014a status indicating that a volume is rediscovering volume configuration.","LBN\u2014logical block number.","Logical block mapping\u2014relationship between the logical blocks exposed to the logical volume provider to those exposed by the same provider.","Logical volume provider\u2014software which exposes logical volumes. A provider includes runtime services, configuration data, and management services.","Management service\u2014software used to perform volume configuration, monitoring or fault handling.","Mapped volume\u2014a simple linearly logical block mapping which concatenates volumes to expose a single larger volume.","Mirrored volume\u2014logical volume which maintains two or more identical data copies. Also termed RAID 1.","Parity striped volume\u2014logical volume which maintains parity check information as well as data. The exact mapping and protection scheme is vendor-specific. Includes RAID 3, 4, 5, 6.","Plexed volume\u2014dynamic mirror volume. Plexing is used to create a copy of a volume rather than to provide fault tolerance. The mirror is added to the volume with the intent of removal after the contents have been synchronized.","Raid\u2014Redundant Array of Independent Disks.","Rebuilding\u2014a status indicating that a previously compromised fault tolerant volume is resynchronizing all volume extent data.","Runtime service\u2014software that executes on a per-IO request basis.","SCSI\u2014Small-Computer Systems Interface.","Stacked volume\u2014a volume that has been constructed by more than one logical block mapping operation. An example is a stripe set of mirror volumes. Stacking includes stripping, mapping, and plexing.","Striped volume\u2014a logical block mapping which distributes contiguous logical volume extents across multiple volumes. Also termed RAID 0.","Unhealthy\u2014a status indicating that a non-fault tolerant volume missing one or more disk or volume extents; data contained on unhealthy volumes must not be accessed.","Volume configuration stability\u2014status to denote whether volume logical to physical mapping is undergoing change. A volume may be stable, extending, shrinking, plexing, or remapping.","Volume extent\u2014a contiguous range of logical blocks contained on a volume. Volume extents are the smallest managed logical volume unit.","Volume status\u2014status to denote current use of a volume by the system. A volume may be unused, hot spare, mapped, used, or unknown."]}},{"@attributes":{"id":"p-0023","num":"0052"},"figref":["FIG. 1","FIG. 1"]},"Moreover, those skilled in the art will appreciate that the invention may be practiced with other computer system configurations, including hand-held devices, multiprocessor systems, microprocessor-based or programmable consumer electronics, network PCs, minicomputers, mainframe computers, and the like. The invention may also be practiced in distributed computing environments where tasks are performed by remote processing devices that are linked through a communications network. In a distributed computing environment, program modules may be located in both local and remote memory storage devices.","The exemplary hardware and operating environment of  for implementing the invention includes a general purpose computing device in the form of a computer , including a processing unit , a system memory , and a system bus  that operatively couples various system components, including the system memory , to the processing unit . There may be only one or there may be more than one processing unit , such that the processor of computer  comprises a single central-processing unit (CPU), or a plurality of processing units, commonly referred to as a parallel processing environment. The computer  may be a conventional computer, a distributed computer, or any other type of computer; the invention is not so limited.","The system bus  may be any of several types of bus structures including a memory bus or memory controller, a peripheral bus, and a local bus using any of a variety of bus architectures. The system memory may also be referred to as simply the memory, and includes read only memory (ROM)  and random access memory (RAM) . A basic input\/output system (BIOS) , containing the basic routines that help to transfer information between elements within the computer , such as during start-up, is stored in ROM . The computer  further includes a hard disk drive  for reading from and writing to a hard disk, not shown, a magnetic disk drive  for reading from or writing to a removable magnetic disk , and an optical disk drive  for reading from or writing to a removable optical disk  such as a CD ROM or other optical media.","The hard disk drive , magnetic disk drive , and optical disk drive  are connected to the system bus  by a hard disk drive interface , a magnetic disk drive interface , and an optical disk drive interface , respectively. The drives and their associated computer-readable media provide nonvolatile storage of computer-readable instructions, data structures, program modules and other data for the computer . It should be appreciated by those skilled in the art that any type of computer-readable media which can store data that is accessible by a computer, such as magnetic cassettes, flash memory cards, digital video disks, Bernoulli cartridges, random access memories (RAMs), read only memories (ROMs), and the like, may be used in the exemplary operating environment.","A number of program modules may be stored on the hard disk , magnetic disk , optical disk , ROM , or RAM , including an operating system , one or more application programs , other program modules , and program data . A user may enter commands and information into the personal computer  through input devices such as a keyboard  and pointing device . Other input devices (not shown) may include a microphone, joystick, game pad, satellite dish, scanner, or the like. These and other input devices are often connected to the processing unit  through a serial port interface  that is coupled to the system bus, but may be connected by other interfaces, such as a parallel port, game port, or a universal serial bus (USB). A monitor  or other type of display device is also connected to the system bus  via an interface, such as a video adapter . In addition to the monitor, computers typically include other peripheral output devices (not shown), such as speakers and printers.","The computer  may operate in a networked environment using logical connections to one or more remote computers, such as remote computer . These logical connections are achieved by a communication device coupled to or a part of the computer , the local computer, the invention is not limited to a particular type of communications device. The remote computer  may be another computer, a server, a router, a network PC, a client, a peer device or other common network node, and typically includes many or all of the elements described above relative to the computer , although only a memory storage device  has been illustrated in FIG. . The logical connections depicted in  include a local-area network (LAN)  and a wide-area network (WAN) . Such networking environments are commonplace in offices, enterprise-wide computer networks, intranets and the Internet.","When used in a LAN-networking environment, the computer  is connected to the local network  through a network interface or adapter , which is one type of communications device. When used in a WAN-networking environment, the computer  typically includes a modem , a type of communications device, or any other type of communications device for establishing communications over the wide area network , such as the Internet. The modem , which may be internal or external, is connected to the system bus  via the serial port interface . In a networked environment, program modules depicted relative to the personal computer , or portions thereof, may be stored in the remote memory storage device. It is appreciated that the network connections shown are exemplary and other means of and communications devices for establishing a communications link between the computers may be used.","The hardware and operating environment in conjunction with which embodiments of the invention may be practiced has been described. The computer in conjunction with which embodiments of the invention may be practiced may be a conventional computer, a distributed computer, or any other type of computer; the invention is not so limited. Such a computer typically includes one or more processing units as its processor, and a computer-readable medium such as a memory. The computer may also include a communications device such as a network adapter or a modem, so that it is able to communicatively couple to other computers.",{"@attributes":{"id":"p-0032","num":"0061"},"figref":"FIG. 2","b":["100","105","110","106","120","105","110","20","49","1","106","108","112","114","106"]},"In the embodiment illustrated by , storage devices  and  are directly connected to computers  and , respectively while storage device  is directly connected to network  and is a RAID storage cabinet having multiple disks. Storage devices  have corresponding volume providers (not shown) to map logical storage volumes onto one or more storage devices  of storage subsystem . These volume providers may be implemented in either software or hardware and may reside within the respective storage devices ,  and  or within computers  and . As illustrated in detail below, the abstracted volume providers present a high-level interface that allows administrators to manage the volume providers and the underlying storage devices  without requiring that the administrator explicitly specify low-level configuration settings.",{"@attributes":{"id":"p-0034","num":"0063"},"figref":["FIG. 3","FIG. 3"],"b":["200","203","100","1","200","210","203","218","210","106","203","204","206","218","203","218","220","212","214","220","203"]},"Each volume provider  within storage management system  has a corresponding hardware driver . In addition, a software volume provider  interfaces to software driver  that controls hardware driver . Drivers  and  handle all communications with storage devices  any may implement one of a variety of protocols such as SCSI (\u201cSmall-Computer Systems Interface\u201d), IP (\u201cInternet Protocol\u201d), etc. Drivers  and  support the run-time services that are provided by the operating system.","According to the invention, volume providers  provide applications  with a high-level, attribute-based view of storage devices . More specifically, applications  communicate storage access information to volume providers  via Application Programming Interface (\u201cAPI\u201d) . The storage access information allows applications  to communicate volume behavioral attributes instead of explicitly configuring volume providers . The storage access information includes input\/output characteristics, data availability desires and physical mapping constraints. For example, in one embodiment the storage access information includes a desired level of fault tolerance. In another embodiment the storage access information communicated via API  allows applications  to characterize intended access patterns such as whether a volume is primarily intended for sequential reads or writes, predominantly read-only, etc. The storage access information may also include suggested configuration parameters such as request size and alignment. Finally, via API , applications  may communicate storage access information that suggests how a volume should be optimized, such as for safety of data or for access performance.","Based on the storage access information, volume providers  perform all disk extent mapping, disk space allocation and mapping type selection. More specifically, volume providers  implement sophisticated configuration rules for configuring storage devices  based on the storage access information received from applications . Thus, API  allows applications  to manage volume providers  without requiring that applications  have detailed knowledge of their underlying policies or the physical characteristics of storage devices . In this manner, API  shields applications  from these complex, vendor-specific rules such that an administrator need not be an expert in logical volume management. In addition, API  allows applications  to manage volume providers  without requiring that applications  explicitly specify preferred volume configurations.","According to the invention, volume providers  are not required to configure storage device  so as to strictly conform to the storage access information provided by API . To the contrary, volume providers  attempt to configure storage devices  in consideration of the storage access information communicated via management-type applications  as well as storage access patterns imposed by user-type applications . For example, a volume provider  could implement a single parity stripe interleave size and ignore information about additional interleave sizes. Volume providers  resolve conflicting storage access information without limitation. In the case of a conflict, volume providers  attempt to complete the requested operation and report the actual configuration to applications .","After configuring storage devices , volume providers  monitor access patterns of applications  and perform dynamic reconfiguration of a volume in response to changes in the input\/output (I\/O) pattern. For example, based on a change in I\/O pattern, volume providers  may move logical volume extents within storage devices , change configuration parameters such as interleave factors, or change volume type such as substituting a parity stripe volume for a mirror set. One example is to relocate \u201chot-areas\u201d of a volume, i.e. areas having a high rate of access requests, onto a set of disk that can be accessed in parallel A second example is the identification of an area of a volume that is always accessed sequentially. Volume providers  may stripe such an area in order to help standard read-ahead policies.","In one embodiment, however, an administrator can disable reconfiguration, effectively freezing volume configuration.","Although the volume providers  must conform to API , the invention places no restraints on how volume providers  communicate with the software drivers  or hardware drivers  and may use any preferred protocol. In this fashion, storage management system  requires no changes to conventional drivers  and . Thus, vendors of storage devices  are free to develop their own communication protocols.","The system level overview of the operation of an exemplary embodiment of the invention has been described in this section of the detailed description. Volume providers provide applications with a high-level, attribute-based view of storage devices. Furthermore, the volume providers present a high-level API that allows administrators to manage the volume providers and the underlying storage devices  without requiring that the administrator explicitly specify low-level configuration settings.","In the previous section, a system level overview of the operation of an exemplary embodiment of the invention was described. In this section, the particular methods performed by a computer executing an exemplary embodiment is described by reference to a series of flowcharts. The methods to be performed by a computer constitutes computer programs made up of computer-executable instructions. Describing the methods by reference to a flowchart enables one skilled in the art to develop such programs including such instructions to carry out the methods on suitable computers (the processor of the computers executing the instructions from computer-readable media).",{"@attributes":{"id":"p-0044","num":"0073"},"figref":["FIG. 4","FIG. 3","FIG. 2"],"b":["300","203","106","100","203","300","304","304","203","210","209"]},"In block  the volume provider  determines a configuration for storage devices  based on the storage access information including all disk extent mappings. In order to determine the configuration, the volume provider  may apply industry standard rules as well as vendor-specific rules. Industry standard rules precisely define certain configurations such as striping with parity and mirroring. Using vendor-specific characteristics, for example, volume providers  can make more intelligent decisions such as which storage device  to use for parity in a RAID-4 configuration, how to balance the stripes across a set of disks, or which pairs of devices to use for a mirror set. In block , the volume provider  configures those volumes and storage devices  of which it has control.","In blocks  and , the volume provider  monitors access patterns of applications  and dynamically reconfigures the volumes of storage devices  based on previously received storage access information and any detected changes in the input\/output (I\/O) patterns of applications . For example, a volume provider  could reasonably configure a volume as parity stripe (RAID-5) if the storage access information indicated that the volume was to be primarily read-only. The volume provider  could then change the parity stripe to a mirror (RAID-) in the event that the actual load was heavily write. As another example, a volume provider could determine that fault-tolerant, single-disk volume should be concatenated or striped across two disks to distribute load. Volume providers  repeat blocks  through  upon receiving new storage access information from applications .","Listed below is one embodiment of storage access information that applications  communicate to volume providers  via API :","IsFaultTolerant\u2014Use a fault tolerant, mirror or parity stripe volume.","FastCrashRecoveryRequired\u2014Bound the time required for volume recovery; support for fast recovery involves use of some sort of change log enabling the provider to recover the volume without comparing the entire contents.","IsRemovable\u2014Volume can be physically removed with minimal system disruption; occupy minimal number of spindles or removable media.","OptimizeForSequentialReads\u2014Optimize for a sequential read or sequential write pattern.","OptimizeForSequentialWrites\u2014Optimize for a sequential write pattern. If this setting and OptimizeForSequentialReads are both false then optimize for random input\/output.","IsMostlyReads \u2014Optimize for read mostly pattern, for example by use of mirroring rather than parity striping.","ReconfigurationOk\u2014Allow the extents in a volume to move within the storage device. If false, mapping of volume extents to disk extents remains fixed after configuration with the exception of actions necessary to avoid disk failures.","ExpectedMaximumSize\u2014Maximum size to which the volume is likely to grow. May be greater or less than VolumeSize.","OptimalReadSize\u2014Optimal read size in bytes with respect to the first logical block of the volume.","OptimalReadAlignment\u2014Optimal read alignment with respect to the first logical block of the volume.","OptimalWriteSize\u2014Optimal write size in bytes with respect to the first logical block of the volume.","OptimalWriteAlignment\u2014Optimal write alignment with respect to the first logical block of the volume.","MaximumNumberOfSpindles\u2014Maximum number of disk spindles contributing to the volume. May be used to limit the number of stripe chunks in a stripe set.","InterleaveSize\u2014Mirror or parity stripe chunk size. Number of contiguous logical blocks per disk extent prior to changing disk extents.","RebuildPriority\u2014Relative priority (low:high) for rebuild. Low causes less system impact, but extents the period of exposure.","Various embodiments of the inventive storage management system have been described in which abstracted volume providers incorporate a generalized API by which administrators manage the volume providers and the underlying storage devices. The API allows an administrator to communicate storage access information that characterizes high-level input\/output attributes of the storage devices such as intended access patterns, preferred fault handling and suggested parameters for optimization. The volume providers configure the underlying storage devices in a manner that satisfies the storage access information in light of any conflicts with the storage access information. The volume providers monitor subsequent input\/output access patterns and may reconfigure the storage devices in order to accomplish the specified high-level storage attributes. It is intended that only the claims and equivalents thereof limit this invention."],"heading":["FIELD OF THE INVENTION","COPYRIGHT NOTICE\/PERMISSION","BACKGROUND OF THE INVENTION","SUMMARY OF THE INVENTION","DETAILED DESCRIPTION OF THE INVENTION","Definitions","Hardware and Operating Environment","System Level Overview","Methods of an Exemplary Embodiment of the Invention","An Exemplary Embodiment of the API Provided by the Volume Providers","Conclusion"],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"BRIEF DESCRIPTION OF THE DRAWINGS","p":[{"@attributes":{"id":"p-0016","num":"0015"},"figref":"FIG. 1"},{"@attributes":{"id":"p-0017","num":"0016"},"figref":"FIG. 2"},{"@attributes":{"id":"p-0018","num":"0017"},"figref":"FIG. 3"},{"@attributes":{"id":"p-0019","num":"0018"},"figref":"FIG. 4"}]},"DETDESC":[{},{}]}
