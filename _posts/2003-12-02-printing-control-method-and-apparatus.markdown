---
title: Printing control method and apparatus
abstract: This invention relates to a printing control method and apparatus, a computer program product, and the like in which printing data is held in a hierarchical structure and a printing job is issued to a printer to cause the printer to print. In the printing control method according to the present invention, different setting values can be set in the lower and upper layers of the hierarchical structure as printing setting data containing double-sided printing or single-sided printing setting. When a setting value different from that of the upper layer is set in the lower layer of the hierarchical structure, the printer is instructed on a setting in the lower layer for each printing data to which the setting value is applied.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=06883981&OS=06883981&RS=06883981
owner: Canon Kabushiki Kaisha
number: 06883981
owner_city: Tokyo
owner_country: JP
publication_date: 20031202
---

{"@attributes":{"id":"description"},"BRFSUM":[{},{}],"heading":["FIELD OF THE INVENTION","BACKGROUND OF THE INVENTION","SUMMARY OF THE INVENTION","DETAILED DESCRIPTION OF THE PREFERRED EMBODIMENT"],"p":["The present invention relates to a printing control method and apparatus which combine output data generated by various programs such as a document processing program and image editing program into one document, provide an editing function for the document, and issue a printing job to a printing apparatus to cause the printing apparatus to print.","When a printer prints document data, image data, or the like generated by an application program for document processing, image processing, or the like that is executed by a computer, the user can change printing settings within the range of functions provided by the application, printer, operating system, and the like. In general, printing settings are given for each printing job which is a printing processing execution unit for a set of data to be printed, control codes, and the like. For example, when the user is to print one document at different settings, parts having common settings are printed as one printing job. The user must perform this operation for a plurality of printing settings, and then combine printouts into a document. In other words, as far as data are printed by one printing job, common printing settings are applied to each part.","For this reason, one printing job cannot include partially different printing settings such as double-sided printing parts and single-sided printing parts. To print a document including double-sided printing parts and single-sided printing parts, only the following methods are selected.","(1) As described above, double-sided printing parts and single-sided printing parts are printed by separate printing jobs, and then combined into a document by the user.","(2) As for single-sided printing parts, blank pages corresponding to lower surfaces are inserted in advance by the user every other printing page (which is one surface of a printing sheet and also called a physical page). A completed document is printed in accordance with double-sided printing setting. In this case, blank pages may be inserted by executing a program having a blank sheet insertion function by a computer.","Method (1) causes the user to work, and the user is constrained to printing work at low productivity.","In method (2), originally unnecessary blank pages must be printed. This prolongs the time taken for printing processing, decreasing the productivity. When a maintenance contract to charge the user for each page is made for a printer for use between the user and the manufacturer or the like, the user is also charged even for a blank page inserted at a single-sided printing part.","In this manner, single-sided printing or double-sided printing can only be set for each printing job. Demands have arisen for dividing a printing job and generating the entity of data to be printed in accordance with printing settings.","The present invention has been made in consideration of the above situation, and has as its object to provide an information processing apparatus, printing data generation method, and printing control program which can print a document including both single-sided printing and double-sided printing by one printing job, create an expressive document, and perform efficient printing in terms of the speed and maintenance cost without printing any wasteful blank page by generating a printing job which holds single-sided printing or double-sided printing setting as a partial setting value in a document to be printed, and causing a printer to execute the printing job.","The present invention has been made in consideration of the above situation, and comprises the following arrangement.","(1) A printing control method of holding printing data in a hierarchical structure and issuing a printing job to a printer to cause the printer to print comprises","a setting step capable of setting different setting values in a lower layer and an upper layer of the hierarchical structure as printing setting data containing double-sided printing or single-sided printing setting, and","an instruction step of, when a setting value different from a setting value of the upper layer is set in the lower layer of the hierarchical structure, instructing the printer on a setting in the lower layer for each printing data to which the setting value is applied.","(2) In (1), the setting step includes a determination step of determining whether the printer copes with a change in the printing setting data during a printing job, and when the printer is determined to cope with the change, different setting values can be set in the lower layer and the upper layer of the hierarchical structure.","(3) In (1), the method further comprises a printer setting step of setting a printer for use, and in the printer setting step, whether a newly set printer copes with a change in the printing setting data during a printing job is determined, and when the printer is determined not to cope with the change and different setting values are set in the lower layer and the upper layer, setting is so changed as to make the setting value of the lower layer coincide with the setting value of the upper layer.","(4) In (3), in the printer setting step, when the newly set printer is determined not to cope with the change in the printing setting data during the printing job and different setting values are set in the lower layer and the upper layer, a warning to change setting is generated to a user before setting is so changed as to make the setting value of the lower layer coincide with the setting value of the upper layer.","(5) In (1), a setting in the upper layer includes a setting of a whole document, and a setting in the lower layer includes a setting of a chapter obtained by dividing the document.","(6) Alternatively, a document processing method of processing original data having a printing format as an attribute, comprises","a step of giving an attribute to each node and holding the original data in a tree structure; and","a step of setting, as an attribute of the entire original data, an attribute representing whether to print on only one side or two sides of a paper sheet, setting, as an attribute of each node, an attribute representing printing on only one side or the two sides of the paper sheet, allowing independently setting the attributes, and switching a printing method in accordance with the attribute.","(7) In (6), when an output apparatus cannot switch the printing method during printing, setting of the attribute at each node is inhibited.","Other features and advantages of the present invention will be apparent from the following description taken in conjunction with the accompanying drawings, in which like reference characters designate the same or similar parts throughout the figures thereof.","A preferred embodiment of the present invention will be described in detail below with reference to the accompanying drawings.","[Outline of Document Processing System According to Embodiment]","The outline of a document processing system according to an embodiment of the present invention will be described with reference to  to . The document processing system converts a data file created by a general application into a page-storing file by a printing data save driver. A printing control application provides a function (editing function) of editing an electronic original file, and a function (printing setting function) of setting a printing format. The editing function includes a function of changing the page order of the document of an electronic original file, and a function of managing a whole document, chapters, and pages in a hierarchical structure. The printing setting function enables the printing layout such as double-sided printing\/single-sided printing\/bookbinding printing, the printing format such as stapling\/non-stapling and stapling position, and various settings such as color printing\/monochrome printing, which are conventionally set as the properties of a printer driver. As the feature of the printing setting function, various settings described above can be individually set in a predetermined unit (whole document, chapter, or page) divided by the editing function. These settings are independent of a printer driver, unlike conventional settings by a printer driver. A printing control application  according to the present invention can perform various printing settings independently of a printer driver  at an output destination. For a page-storing file edited by the printing control application, an editing information file corresponding to the page-storing file is generated and saved. The contents of the page-storing file are read out for printing by a printing application (also called a despooler) via the printing control application. In this example, a general application, printing data save driver, printing control application, and printing application are separately described for distinction between these functions. However, a package provided to the user is not limited to them, and an application or graphic engine as a combination of them may be provided, details of which will be described below.","<Example of Hardware Configuration of Document Processing System According to Embodiment>",{"@attributes":{"id":"p-0054","num":"0053"},"figref":"FIG. 2"},"In , a host computer  comprises a CPU , RAM , ROM , and the like. The CPU  executes document processing in which figures, images, characters, tables (including spreadsheets and the like), and the like coexist, on the basis of a document processing program or the like stored in the program ROM of the ROM  or an external memory . The CPU  comprehensively controls devices connected to a system bus . The program ROM area of the ROM  or the external memory  stores, e.g., an operating system program (to be referred to as an OS hereinafter) serving as the control program of the CPU . The font ROM area of the ROM  or the external memory  stores, e.g., font data used in document processing. The data ROM area of the ROM  or the external memory  stores various data used in document processing or the like. The RAM  functions as a main memory, work area, or the like for the CPU .","A keyboard controller (KBC)  controls a key input from a keyboard  or a pointing device (not shown). A CRT controller (CRTC)  controls the display of a CRT display (CRT) . A disk controller (DKC)  controls access to the external memory  such as a hard disk (HD) or floppy\u00ae disk (FD). The external memory  stores a boot program, various applications, font data, user files, edited files, a printer control command generation program (to be referred to as a printer driver hereinafter), and the like. A printer controller (PRTC)  is connected to a printer  via a bidirectional interface (interface) , and executes communication control processing with the printer .","The CPU  executes, e.g., rasterization processing of an outline font to a display information RAM set in the RAM , and enables WYSIWYG on the CRT display . The CPU  opens various registered windows and executes various data processes on the basis of commands designated on the CRT  with a mouse cursor (not shown) or the like. When the user executes printing, he\/she opens a printing setting window provided by the printer driver, and can perform setting of a printer and setting of a printing processing method to the printer driver that includes selection of a printing mode.","The printer  is controlled by a CPU . The printer CPU  outputs an image signal as output information to a printing unit (printer engine)  connected to a system bus  on the basis of a control program stored in the program ROM area of a ROM  or a control program stored in an external memory . The program ROM area of the ROM  stores, e.g., the control program of the CPU . The font ROM area of the ROM  stores, e.g., font data used to generate the output information. The data ROM area of the ROM  stores, e.g., information used in the host computer for a printer having no external memory  such as a hard disk.","The CPU  can communicate with the host computer via an input unit , and notify the host computer  of internal printer information or the like. A RAM  functions as a main memory, work area, or the like for the CPU , and the memory capacity can be expanded by an optional RAM connected to an expansion port (not shown). The RAM  is used as an output information mapping area, environment data storage area, NVRAM, or the like. Access to the external memory  such as a hard disk (HD) or IC card is controlled by a memory controller (MC) . The external memory  is connected as an option, and stores font data, emulation programs, form data, and the like. Reference numeral  denotes an operation panel having operation switches, an LED display, and the like.","The number of external memories  is not limited to one, and a plurality of external memories  may be arranged. A plurality of external memories which store an option card and a program for interpreting the printer control languages of different language systems in addition to built-in fonts may be connected. Further, an NVRAM (not shown) may be adopted to store printer mode setting information from the operation panel .","<Example of Software Configuration of Document Processing System According to Embodiment>",{"@attributes":{"id":"p-0061","num":"0060"},"figref":"FIG. 1"},"The document processing system is implemented by a digital computer  (to be also referred to as a host computer hereinafter) as an embodiment suited to the document processing apparatus (information processing apparatus) of the present invention. A general application  is an application program which provides functions such as wordprocessing, spreadsheet, photo-retouch, draw, paint, presentation, and text editing. The general application  has a function of requesting printing processing of an operating system (OS). Such applications utilize a predetermined interface provided by the OS in printing application data such as created document data or image data. To print created data, the application  transmits an output command in a predetermined format to the output module of the OS providing the interface. The output module which has received the output command converts it into a format processible by an output device such as a printer, and outputs the converted command. Since the format processible by the output device changes depending on the type of device, the manufacturer, and the model, a device driver is provided for each device. The OS converts a command by using the device driver, generates printing data, and combines printing data by JL (Job Language) to generate a printing job.","When the OS is Microsoft Windows\u00ae, the output module is a GDI (Graphic Device Interface) module. The application  calls a GDI function by using the created data as a parameter of a format complying with the GDI. As a result, the above-described output command is sent to the OS.","A printing data save driver  is an improvement of the above-mentioned device drivers, and is a software module provided to implement the document processing system. The printing data save driver  does not target a specific output device, and converts an output command into a format processible by the printing control application  or printer driver  (to be described later). The format (to be referred to as a \u201cpage-storing file format\u201d hereinafter) converted by the printing data save driver  is not particularly limited as far as the document structure and each original page can be expressed by a detailed format. As the format which expresses each original page, the PDF format by Adobe Systems and the SVG format can be adopted as page-storing files.","In the embodiment, a page-storing file  and editing information file  are processed as separate files, but when no file is opened, are combined as an archive file in order to hold the unity.","In the system shown in , data contents saved in the page-storing file  can be processed. This realizes a function not provided to an application which creates an original, such as a function of enlarging\/reducing printing data from an application or a function of reducing a plurality of pages into one page and printing the page. For this purpose, the system in  is expanded from a conventional one so as to spool intermediate code data. Processing of printing data is generally set through a window provided by the printing control application , and the setting contents are saved in the RAM  or external memory .","As shown in , according to the extended processing method, printing data from the application  is saved as the page-storing file  in the system via the printing data save driver . The page-storing file  is also called an intermediate file, and contains content data of a print material, printing setting data, and the like. Content data of a print material is data prepared by converting data created in an application by the user into an intermediate code. Printing setting data is data which describes how to output content data (output format or the like). In addition, the page-storing file  contains application extension data called an editing information file for providing a user interface when the printing control application causes the user to edit the contents of a page-storing file or issue an output instruction.","The contents of the page-storing file , and particularly printing setting data are updated by the printing control application . The printing control application  can display printing settings such as the output format, cause the user to change printing settings, and save the changed settings. At this time, printing settings are also reflected in attribute data of the editing information file together with printing setting data of the page-storing file.","Printing processing is actually executed by the printing application (despooler) . The printing application (despooler)  which has received a printing command from the printing control application  inputs data to a graphic engine  in a predetermined format such as a GDI function in accordance with the output format set by the printing control application . The graphic engine  converts the input data of the GDI function format or the like into a DDI function, and outputs the DDI function to the printer driver . The printer driver  generates a printer control command of the page description language or the like on the basis of the DDI function acquired from the graphic engine , and outputs the command to the printer  via a system spooler .  illustrates one printer driver  for descriptive convenience. However, the printing application  of the present invention is independent of the printer driver, and in printing, an arbitrary printer driver can be selected as an output destination from a plurality of printer drivers which are held in the document processing apparatus (information processing apparatus) , similar to a general application.","<Example of Data Format of Permanent File>","Before a detailed description of the printing control application , the data format of the page-storing file will be described. The page-storing file contains data of each original page (data of each page generated by an application: to be also referred to as a logical page) as content data, and data of a job ticket format as printing setting data. An editing information file for changing setting of printing setting information contained in the page-storing file is also stored by the printing control application (to be described later) together with the page-storing file. In some cases, a DEVMODE structure for sending a printing instruction to a driver by using a GDI function is contained.","In the page-storing file, original page data is defined by the PDF format or the like, and contains designation of the character font and color, and layout information of characters, figures, and the like within an original page. In the page-storing file, original page data of the PDF format and data of the job ticket format are intermediate data.","The job ticket serving as a page-storing file is data having a structure whose minimum unit is an original page. The structure of the job ticket defines the layout of an original page on a paper sheet. The node of the whole document is set at the top of the structure, and defines the attribute of the whole document such as double-sided printing\/single-sided printing. This node is accompanied with a document structure and information representing setting of each building component. More specifically, a sheet bundle node belongs to the document node, and contains attributes such as the identifier of paper for use and designation of a feed port in the printer. The node of a sheet contained in the sheet bundle belongs to each sheet bundle node. One sheet corresponds to one paper sheet. A printing page (physical page) belongs to each sheet. One physical page belongs to one sheet in single-sided printing, and two physical pages belong to one sheet in double-sided printing. An original page to be laid out on a physical page belongs to the physical page. The physical page attribute contains an original page layout. An original page contains association information (link information) to original page data which is the entity of the original page. Each node is given a setting value such as the printing format.","Settings of the whole document include pieces of following information.\n\n","As for printing settings of each sheet bundle, the following parameters can be set.\n\n","As for printing settings of each sheet belonging to each sheet bundle, the following parameter can be set.\n\n","As for printing settings of each physical page (plane) belonging to each sheet, the following parameters can be set.\n\n","As for printing settings of each original page laid out on each physical page, the following parameters can be set.\n\n","In this manner, the job ticket is data having a hierarchical structure whose minimum unit is an original page. Most of printing settings defined by the job ticket are common on each layer set for each document, but some printing settings such as N-up setting and color type are common between layers. In principle, as for a common setting, a lower layer inherits the same setting value as that of an upper layer. When an attribute common between layers has different values, a value set for a layer of interest is used as the value of the attribute. For example, the color type can be set for a whole document, sheet bundle (set of sheets), and physical page (to be also referred to as a plane or printing page). The color type is a setting which designates a mode in the printing apparatus. Printing data is generated such that, if the monochrome mode is set, the printing apparatus prints in monochrome; if the color mode is set, prints in color. Double-sided printing can be set for a whole document and sheet bundle.",{"@attributes":{"id":"p-0079","num":"0099"},"figref":["FIG. 12","FIG. 12","FIG. 12"],"b":["1101","1101","1102","1103","1104","1101","1102","1103","1104","1105"]},"<Document Structure Managed by Editing Information File>","The printing control application  is a program which provides a user interface for causing the user to designate data contained in a page-storing file by various methods and change printing settings. The page-storing file is a file having the above-described structure. The printing control application  manages the above-mentioned editing information file in correspondence with the page-storing file in order to manage the page-storing file. Based on editing information contained in the editing information file, the printing control application  manages a document with a management structure independent of a document defined by the page-storing file, e.g., a job ticket. The management structure is a hierarchical structure similar to the job ticket, but is formed by layers \u201cbook\u201d, \u201cchapter\u201d, and \u201coriginal (logical) page\u201d from the top, unlike the job ticket. Of these layers, the original page corresponds to the original page of the job ticket. The chapter corresponds to the sheet bundle (set of sheets).","A virtual file displayed as a user interface is not a file which is page-storingly saved and managed, unlike the page-storing file , but is temporarily created for a user interface when the user changes the printing settings of the page-storing file or designates printing by using the printing control application . The printing control application  opens the page-storing file  together with a corresponding editing information file , creates a virtual book file having a structure defined by editing information from the page-storing file, and displays the book file as a user interface. When the user changes printing settings while referring to the book file via the user interface, the settings are reflected in the editing information file.","<Example of Format of Editing Information File>","Before referring to details of the printing control application , the data format of a book file, i.e., editing information file will be explained. The book file has a three-layered structure similar to a paper-medium book. The upper layer is called a \u201cbook\u201d, resembles one book, and defines the attributes of the entire book. The intermediate layer corresponds to a chapter in the book, and is also called a \u201cchapter\u201d. As for each chapter, its attributes can be defined. The lower layer is a \u201cpage\u201d, and corresponds to each page defined by an application program. As for each page, its attributes can be defined. One book may include a plurality of chapters, and one chapter may include a plurality of original pages.",{"@attributes":{"id":"p-0083","num":"0103"},"figref":"FIG. 3","b":"103"},"In , a book file need not be one completed book, and \u201cbook\u201d is generalized as \u201cdocument\u201d. Information on a document, information on a chapter, and information on a page will be comprehensively called document information, chapter information, and page information, respectively.","In , document information  is defined at the top. The document information  can be roughly divided into three parts  to . The document control information  holds information such as the path name in the file system of a document file. The document setting information  holds layout information such as the page layout, and function setting information of a printing apparatus such as stapling, and corresponds to book attributes. The chapter information list  holds as a list a set of chapters which form a document. The list holds chapter information .","The chapter information  can also be roughly divided into three parts  to . The chapter control information  holds information such as the chapter name. The chapter setting information  holds information on the page layout and stapling unique to the chapter, and corresponds to chapter attributes. By holding setting information for each chapter, a document having a complicated layout can be created such that the first chapter has a 2-up layout and the remaining chapters have a 4-up layout. The page information list  holds as a list a set of original pages which form each chapter. The page information list  designates page information data .","The page information data  can also be roughly divided into three parts  to . The page control information  holds information such as a page number displayed at the tree. The page setting information  holds information such as the page rotation angle and page layout position information, and corresponds to original page attributes. The page link information  is original data corresponding to a page. In this example, the page information  does not directly have original data, but has only the link information . Actual original data is held by a page data list .",{"@attributes":{"id":"p-0088","num":"0108"},"figref":["FIGS. 4A and 4B","FIGS. 4A and 4B"],"b":"403"},"Items unique to book attributes are six items: printing method, details of bookbinding, front\/back cover, index sheet, slip sheet, and chaptering. These items are defined over the book. As printing method attributes, three values: single-sided printing, double-sided printing, and bookbinding printing can be designated. Bookbinding printing is a method of printing data in a format which allows bookbinding by bundling a separately designated number of paper sheets, folding the bundle into two, and binding the bundle. As detailed bookbinding attributes, the opening direction and the number of paper sheets to be bundled can be designated when bookbinding printing is designated.","The front\/back cover attribute includes designation of adding paper sheets serving as front and back covers when a page-storing file combined as a book is printed, and designation of contents to be printed on the added paper sheets. The index sheet attribute includes designation of inserting a tabbed index sheet separately prepared in a printing apparatus for chaptering, and designation of contents to be printed on the index (tabbed) portion. This attribute becomes effective when a printing apparatus to be used is equipped with an inserter having an inserting function of inserting a paper sheet prepared separately from a printing sheet into a desired position, or when a plurality of sheet cassettes can be used. This also applies to the slip sheet attribute.","The slip sheet attribute includes designation of inserting a paper sheet fed from an inserter or sheet feed cassette for chaptering, and designation of a sheet feed source when a slip sheet is inserted.","The chaptering attribute includes designation of whether to use a new paper sheet, use a new printing page, or do nothing particular at a chapter break. In single-sided printing, the use of a new paper sheet and the use of a new printing page are the same. In double-sided printing, a continuous chapter is not printed on one paper sheet if \u201cthe use of a new paper sheet\u201d is designated, but may be printed on the obverse and reverse of one paper sheet if \u201cthe use of a new printing page\u201d is designated.",{"@attributes":{"id":"p-0093","num":"0113"},"figref":["FIG. 5","FIG. 6"],"b":["407","411"]},"As for the chapter attribute, there is no item unique to the chapter, and all items overlap those of the book attribute. In general, if the definition of the chapter attribute is different from that of the book attribute, a value defined by the chapter attribute precedes. In this example, however, whether to preferentially adopt the attribute value of a lower layer can be selected, which will be described later.","Items common to only the book and chapter attributes are five items: paper size, paper direction, N-up printing designation, enlargement\/reduction, and delivery method. The N-up printing designation attribute is an item for designating the number of original pages included in one printing page. Layouts which can be designated are 1\u00d71, 1\u00d72, 2\u00d72, 3\u00d73, 4\u00d74, and the like. The delivery method attribute is an item for designating whether to staple discharged paper sheets. The effectiveness of this attribute depends on whether the printing apparatus has a stapling function.","Items unique to the page attribute are a page rotation attribute, zoom, layout designation, annotation, and page division. The page rotation attribute is an item for designating the rotation angle when an original page is laid out on a printing page. The zoom attribute is an item for designating the zoom ratio of an original page. The zoom ratio is designated based on a virtual logical page region size=100%. The virtual logical page region is a region occupied by one original page when original pages are laid out in accordance with N-up designation or the like. For example, the virtual logical page region is a region corresponding to one printing page for 1\u00d71, and a region obtained by reducing each side of one printing page to about 70% for 1\u00d72.","Attributes common to the book, chapter, and page are a watermark attribute and header\/footer attribute. The watermark is a separately designated image or character string printed over data created by an application. The header and footer are watermarks printed at the upper and lower margins of each page. For the header and footer, items such as a page number, and time and date which can be designated by variables are prepared. Contents which can be designated by the watermark attribute and header\/footer attribute are common to the chapter and page, but are different from those of the book. The book can set the contents of the watermark and header\/footer, and designate how to print a watermark or header\/footer throughout the book. To the contrary, the chapter and page can designate whether to print a watermark or header\/footer set by the book on the chapter or page.","<Example of Operation Sequence of Document Processing System According to Embodiment>","The editing information file has the above-described structure and contents. A sequence of creating the editing information file  and page-storing file  by the printing control application  and printing data save driver  will be explained. Creation of the editing information file  is realized as part of editing operation of the editing information file  by the printing control application .  shows a sequence when the printing control application  opens the editing information file .","Whether an editing information file to be opened is one to be newly created or an existing one is determined (step S). If YES in step S, an editing information file including no chapter is newly created (step S). In the example shown in , the newly created editing information file is a book node having no chapter node linked to the chapter information list . As the book attribute, a set of attributes prepared in advance for creation of a new editing information file are applied. A UI (User Interface) window for editing the new editing information file is displayed (step S).  shows an example of a UI window when a book file is newly created. In this case, the book file does not have any substantial content, and a UI window  does not display anything.","If NO in step S, a designated editing information file is opened (step S), and data are rasterized in accordance with the structure, attributes, and contents of the editing information file to display a UI (User Interface) window.  shows an example of the UI window. A UI window  has a tree portion  representing a book structure, and a preview portion  displaying a state to be printed. The tree portion  displays chapters included in the book and pages included in each chapter by a tree structure so as to exhibit a tree structure as shown in FIG. . Pages displayed at the tree portion  are original pages. The preview portion  displays reduced printing page contents. The display order reflects the book structure. Data mapped in the RAM  also takes the same structure as that in FIG. . Attributes included in the node of each layer are also mapped in the RAM  in the format shown in  to . For example, the structure of these attribute items can be realized with a pointer or the like, and each item at the attribute can be identified by the identifier of the item or the like.","Original page data can be added as a new chapter to the open editing information file by the printing data save driver . This function is called an import function. Application data is imported to the editing information file newly created by the sequence of , and the original page data is made to belong to the chapter of the editing information file, thereby giving an entity to the editing information file. This function is activated by drag-and-drop operation of application data to the window of FIG. .  shows an import processing sequence.","In , an application program which has generated designated application data is activated. The printing data save driver  is designated as a device driver, and application data is printed out to convert the data into data of an intermediate format (e.g., PDF format) (step S). After conversion, whether the converted data is image data is determined (step S). This determination can be done on the basis of the file extension of application data under the Windows\u00ae OS. For example, an extension \u201cbmp\u201d represents Windows\u00ae bitmap data; \u201cjpg\u201d, jpeg-compressed image data; and \u201ctiff\u201d, tiff-format image data.","If NO in step S, the intermediate data generated in step S is added as a new chapter to the book of a currently open editing information file (step S). That is, a new chapter and new original pages belonging to this chapter are added by import. Link information to the entity of an original page is written at each page node. The entity of the original page is generated by the printing data save driver .","In import, as for chapter attributes which are common to book attributes, the values of the book attributes are copied. As for unique chapter attributes, predetermined values are set.","If YES in step S, no new chapter is added in principle, and image data is added to a designated chapter by using one file as one original page (step S). For an empty file in which an editing information file is newly created, a new chapter is created, and image data is added as an original page belonging to the chapter. As for the page attribute, attributes common to the attributes of an upper layer are given the attribute values of the upper layer, and attributes which are defined in application data and inherited to the page-storing file are given values defined in the application data. For example, when N-up designation is defined in application data, the page inherits this attribute value. In this way, a new editing information file is created, or a new chapter is added.","As for a page-storing file, added original page data is newly added and saved if data generated by the printing data save driver is an addition to an existing page-storing file. At this time, if printing settings designated by an application are reflected in data generated by the printing data save driver, the printing settings can also be reflected in the page-storing file.",{"@attributes":{"id":"p-0107","num":"0127"},"figref":["FIG. 11","FIG. 10. A"],"b":["102","801","901","102","102","902","901","903","903","904","102","12"]},"<Editing of Permanent File and Editing Information File>","In the above fashion, the editing information file  and page-storing file  can be created from application data. As for the generated page-storing file , chapters and pages defined by the editing information file  can be edited as follows.\n\n","In addition, an operation of canceling executed editing operation, and an operation of restoring canceled operation can be performed. These editing functions enable editing operations such as consolidation of a plurality of editing information files, rearrangement of chapters and pages within an editing information file, delete of chapters and pages within an editing information file, layout change of an original page, and insertion of a slip sheet and index sheet. By these operations, operation results are reflected in attributes shown in  to  or on an editing information file structure. For example, a blank page is inserted into a designated portion by an operation of newly adding a blank page. The blank page is processed as an original page. If the layout of an original page is changed, the change contents are reflected in attributes such as the printing method, N-up printing, front\/back cover, index sheet, slip sheet, and chaptering.","These editing contents are also reflected in the page-storing file. For example, if double-sided printing is set as a printing method for a whole document, the setting is reflected as the book attribute of the editing information file and also as setting data of the whole document in printing setting data of the page-storing file.","<Output of Permanent File>","The ultimate goal of an editing information file created and edited in the above manner is to print it out. If the user selects a file menu from the UI window  of the printing control application shown in FIG.  and selects printing from this menu, the editing information file is then printed out by a designated output device. At this time, the printing control application  creates data called a despool table from a currently open editing information file and corresponding page-storing file (e.g., job ticket), and transfers the despool table to the printing application .","The despool table contains the same structure as that of the original job ticket, printing settings in respective layers, and association with original pages. More specifically, printing settings such as the number of copies, color type, and double-sided\/single-sided printing designation which are effective for a whole document are accompanied by printing settings such as N-up printing designation which are effective for a sheet bundle (set of sheets). Each sheet belonging to each sheet bundle has printing settings such as double-sided\/single-sided printing. Each physical page (plane) belonging to each sheet has printing settings such as the color type and designation of an upper\/lower plane. The printing settings of each layer include settable items. Settings in the despool table are designated on physical pages in accordance with the device specifications. The printing application  converts the despool table into a parameter to be transferred to the graphic engine .","The printing application  converts the page-storing file  into an OS output command, e.g., a Windows\u00ae GDI command, and calls a GDI function serving as a graphic engine by using the command as a parameter. The graphic engine  generates a command complying with a device (e.g., printer) by the designated printer driver , and transmits the command to the device.","The graphic engine  loads the printer driver  prepared for each printing device from the external memory  to the RAM , and sets the output to the printer driver . The graphic engine  converts a GDI (Graphic Device Interface) function into a DDI (Device Driver Interface) function, and calls a DDI function provided by the printer driver . The printer driver  converts the command into a control command such as a PDL (Page Description Language) command recognizable by the printer on the basis of the DDI function called from the output module. The converted printer control command passes through the system spooler  loaded by the OS to the RAM , and is output as printing data to the printer  via the interface ","(Example of Preview Display Contents)","As described above, when a book file is opened by the printing control application, the user interface window  shown in  is displayed. The tree portion  displays a tree representing the structure of the open book (to be referred to as a \u201cbook of interest\u201d hereinafter). At the preview portion, three display methods are prepared in accordance with designation by the user. The first method is a mode called an original view which directly displays original pages. In the original view mode, the contents of original pages belonging to the book of interest are reduced and displayed. The display of the preview portion does not reflect any layout. The second method is a printing view mode. In the printing view mode, the preview portion  displays original pages in a format which reflects the layout of them. The third method is a simple printing view mode. In the simple printing view mode, the contents of original pages are not reflected in the display of the preview portion, but only the layout is reflected.","<Another Example of Configuration of Document Processing System>","The document processing system according to the embodiment is of a stand-alone type. A server-client system as an extension of the stand-alone system also creates and edits a book file by almost the same configuration and sequence. A book file and printing processing are managed by the server.",{"@attributes":{"id":"p-0117","num":"0149"},"figref":"FIG. 13"},"The client document processing system is constituted by adding to the stand-alone system a DOMS (Document Output Management Service) driver  serving as a client module, a DOMS printing service module , and a DS (Document Service) client module . A client document processing system  is connected to a document management server , centralized printing management server , and printing server . These servers are generally connected to the client document processing system via a network. When the servers also function as clients, they are connected by interprocess communication which simulates communication between networks. The document management server  and centralized printing management server  are connected to the client in , but only either one may exist on the network. If the connected server is the document management server, a document management server-client system SC including a client module is added to the stand-alone document management system. If the connected server is the centralized printing management server , a printing management server-client system SC including a client module is added.","The document management server  stores a book file created and edited by the printing control application . To manage a book file by the document management server , the book file is saved in a database  of the document management server  instead of or in addition to the local HD of a client PC. Save and read of a book file between the printing control application  and the document management server  are done via the DS client module  and a DS core .","The centralized printing management server  manages printing of a book file stored in the client document processing system  or document management server . A printing request from the client is transmitted to a DOMS WG server module  of the centralized printing management server  via the DOMS driver  and DOMS printing service module . To print a book file by the printer of the client, the centralized printing management server  transfers electronic original data to the printing application  via the DOMS printing service module  of the client. To print a book file by the printing server , the centralized printing management server  transmits electronic original data to a DOMS printing service module  of the printing server . For example, the centralized printing management server executes security check on the qualification of a user who has issued a printing request for a saved book file, or saves the printing processing log. In this fashion, the document processing system can be implemented as both a stand-alone system and client-server system.","[Example of Editing Operation of Document Processing System According to Embodiment]",{"@attributes":{"id":"p-0121","num":"0153"},"figref":["FIG. 9","FIG. 9. A"],"b":["104","9"]},"<Example of Attribute Setting of Document Processing System According to Embodiment>",{"@attributes":{"id":"p-0122","num":"0154"},"figref":"FIG. 14","b":["1400","104"]},"This window allows displaying\/setting the \u201cdocument setting information \u201d. This window is activated from the \u201cdetailed setting for document\u201d item of a \u201cprinting format\u201d menu on the application operation window of  or a \u201cdetailed setting for document\u201d button on the tool bar. The \u201cdetailed setting for document\u201d window  is a window for setting attributes which influence a whole document, i.e., book attributes shown in . This window is formed by five sheets \u201cpage setup\u201d, \u201cdecoration\u201d, \u201cedit\u201d, \u201cpaper source\u201d, and \u201cprinting quality\u201d.  shows a state in which the \u201cpage setup\u201d sheet is displayed. In the \u201cpage setup\u201d sheet, settings mainly concerning the layout can be done. Settings such as the paper size, direction, and N-page printing can be designated. This window has check box controls  and  for the zoom.",{"@attributes":{"id":"p-0124","num":"0156"},"figref":"FIG. 15","b":["1500","104"]},"This window allows displaying\/setting the \u201cchapter setting information \u201d. This window is activated from the \u201cdetailed setting for chapter\u201d menu of a printing setting menu on the application operation window of  or a \u201cdetailed setting for chapter\u201d button on the tool bar. The \u201cdetailed setting for chapter\u201d window is a window for setting attributes unique to a chapter. This window is formed by four sheets \u201cpage setup\u201d, \u201cdecoration\u201d, \u201cedit\u201d, and \u201cpaper source\u201d.  shows a state in which the page setup sheet is displayed. In the page setup sheet, settings mainly concerning a layout unique to each chapter can be done. Settings such as the paper size, direction, and N-page printing can be designated. \u201cFollow book attribute\u201d check box controls , , and  are arranged for repetitive setting items between \u201cdetailed setting for document\u201d and \u201cdetailed setting for chapter\u201d. For an item group whose check box is checked, the setting values of the document are applied to the chapter.  shows a case wherein the check box is not checked. Settings unique to a chapter can be classified into two types: setting items held by only a chapter, and setting items whose setting values different from those of the document in the upper layer are held in the chapter layer.",{"@attributes":{"id":"p-0126","num":"0158"},"figref":["FIG. 16","FIG. 15"],"b":["1501","1502"]},{"@attributes":{"id":"p-0127","num":"0159"},"figref":"FIG. 17","b":["1700","104"]},"This window allows displaying\/setting the \u201cpage setting information \u201d. This window is activated from the \u201cdetailed setting for page\u201d menu of the printing format menu on the application operation window of  or a \u201cdetailed setting for page\u201d button on the tool bar. The \u201cdetailed setting for page\u201d window is a window for setting attributes unique to each page. This window is formed by two sheets \u201cpage setup\u201d and \u201cedit\u201d.  shows a state in which the page setup sheet is displayed. In the page setup sheet, settings mainly concerning a layout unique to each page can be done, and settings such as the rotation angle and enlargement\/reduction ratio in laying out an original page can be designated. A \u201cfollow chapter attribute\u201d check box control  is arranged for repetitive setting items between \u201cdetailed setting for chapter\u201d and \u201cdetailed setting for page\u201d. For an item whose check box is checked, the setting value of the chapter is applied to the page.  shows a case wherein the check box is not checked.",{"@attributes":{"id":"p-0129","num":"0161"},"figref":"FIG. 18","b":["17","1701","1701"]},"The \u201czoom arrange\u201d item is a repetitive setting item in the document. When the \u201cfollow document attribute\u201d  is checked in the \u201czoom arrange\u201d item of the chapter, the setting value of the document in the upper layer is used as that of the chapter, and thus the setting value of the document is used as that of the page. When the \u201czoom arrange\u201d item is not checked in the chapter, the chapter has a unique setting value, and the setting value unique to the chapter is used as the setting value of the page.","Check box control information set in the setting window may be held in a dedicated region, but is desirably held as one attribute in the setting information shown in FIG. . In this case, regions for holding check box control information are added to the lists of .","<Example of Document Editing Display of Document Processing System According to Embodiment>",{"@attributes":{"id":"p-0132","num":"0164"},"figref":"FIG. 19","b":["1501","1701"]},"In the example of , a document is formed by two chapters \u201cChapter1\u201d and \u201cChapter2\u201d, and each chapter has original data of nine pages.  shows a display example when the layout of the first chapter is 4-up (to be also referred to as 4-in-1 hereinafter) and rotation is designated for the first page (10th page in the whole document) of the second chapter. Note that N-up and N-in-1 mean designation of laying out N original pages on one printing page.","At the preview portion on the right side of , four original pages are laid out on each of the first to third pages. On the fourth page, a character \u201cA\u201d is rotated.","The tree view displays a tree in a display format which clearly exhibits to the user an exceptional setting such as a setting unique to a chapter or page, i.e., a setting of a chapter different from that of the whole document or a setting of a page different from that of the whole document. More specifically, the icon of a chapter or page having an exceptional setting is displayed with a shape, color, or design visually identifiable from the icon of a chapter or page having no exceptional setting. In , an icon  corresponding to the first chapter changes in shape to exhibit that this chapter has a unique setting. An icon  corresponding to the first page of the second chapter also changes in shape to exhibit that this page has a special setting.","<Double-Sided\/Single-Sided Setting of Each Chapter>",{"@attributes":{"id":"p-0136","num":"0168"},"figref":"FIGS. 20A and 20B","b":"104"},"If the user designates detailed setting for a document, the sequence of  starts. A detailed setting dialog for a document is displayed (S). A document subjected to detailed setting is a document which has already been selected and opened (i.e., a page-storing file and corresponding editing information file). In this case, a sheet displayed in detailed setting for the document is a \u201cdecoration\u201d sheet. In , an item  is used to set the whole document to single-sided printing or double-sided printing. Selectable items are \u201cdouble-sided printing\u201d, \u201csingle-sided printing\u201d, and \u201cbookbinding printing\u201d. In step S, the user can set a printing method by selecting one of the options of the item . The user properly sets detailed setting for the document, and then clicks the \u201cOK\u201d button. If the \u201cOK\u201d button is clicked, the processing advances to step S, and the printing control application  stores the set document attribute as data corresponding to the printing method item No. 1 in  (top column in ) in the editing information file . At the same time, as for printing setting data of the page-storing file, setting data of the whole document is updated, and the dialog window of detailed setting for the document shown in  is closed (S). In the example of , the whole document is set to double-sided printing.","If double-sided printing is set for the whole document, the printing control application inserts a blank page to the lower surface of the final physical page for a chapter having an odd number of physical pages. This can be realized by, for example, preparing a blank physical page node in advance in a job ticket, and when a physical page node belonging to a chapter, i.e., sheet bundle has an odd number, linking the prepared blank physical page node to the sheet node.",{"@attributes":{"id":"p-0139","num":"0171"},"figref":"FIG. 22","b":["2201","2202","2201","2201","2201","2203","2201"]},"In , assume that the user opens the detailed setting dialog for the document shown in  from \u201cprinting format\u201d of the display window  () of the printing control application , and selects double-sided printing setting for the whole document on the \u201cdecoration\u201d sheet. If the user selects the chapter  and designates a \u201cdetailed setting for chapter\u201d menu from the \u201cprinting format\u201d column, processing in  is executed to display a detailed setting dialog shown in  for a selected chapter (S).","A setting of switching between double-sided printing and single-sided printing during one printing job also depends on whether the printer for use provides this function. When a printer which does not cope with switching between double-sided printing and single-sided printing during one printing job is selected as a printer for use, the window in  is entirely grayed out to inhibit any exceptional setting for the chapter by the user.","For this reason, in step S, whether the displayed sheet is the \u201cdecoration\u201d sheet is determined. If YES in step S, whether the printer for use copes with the above-described switching function is determined in step S. The printer function can be determined on the basis of model-dependent information acquired by transmitting a command by which the printer driver directly requests a function (model-dependent information) of the printer, acquiring model-dependent information serving as a list of functions provided by the printer, and acquiring the model-dependent information from the printer driver  by the printing control application . This function is given to a general printer. As another method, the printer function can also be determined such that model-dependent information is held in the printer driver in advance and acquired by the printing control application . If the printer does not cope with the double-sided\/single-sided switching function in one printing job, the dialog window is grayed out so as to inhibit selection (S).","In this window, the user can perform setting (S). If the user checks an exceptional setting check box \u201cthe following item is set different from the document\u201d at an item  when the window in  is so displayed as to allow selection, the option \u201csingle-sided printing\u201d or \u201cdouble-sided printing\u201d of the item  is displayed as a selectable option. If the user selects the option of the item  and clicks the \u201cOK\u201d button, the set exceptional chapter setting is stored as one attribute in the printing method item No. 1 in , and applied as printing setting data of the page-storing file (S). At the same time, the dialog window of  is closed. Also, a flag representing the exceptional chapter setting is saved in the printing method item of the editing information file.  shows a printing preview in this case.","After the above printing setting, if the user selects the \u201cprinting\u201d item from the \u201cfile\u201d menu in the window in  or , a printer setting window is displayed. If the user clicks a button for confirming the start of printing, e.g., the \u201cOK\u201d button in this window, the printing control application  advances to a printing sequence. This will be explained below with reference to FIG. .","When a plurality of printers are available, the printer setting window allows the user to set a desired printer from a list of printers displayed in a \u201cprinter for use\u201d column. As described above, some printers cope with switching between double-sided printing and single-sided printing during a printing job, but some do not cope with it. Hence, in selecting a printer for use, printing method setting in the editing information file and page-storing file is tested to determine whether the setting and printer function match each other.  shows a simple sequence.","The sequence of  is executed by the printing control application when one printer is selected from the \u201cprinter for use\u201d column and the printer for use changes before and after selection. The printing control application  refers to \u201cprinting method\u201d among the chapter attributes of the editing information file, and determines whether an exceptional chapter setting exists (S). This determination is achieved by referring to, e.g., a flag saved in correspondence with whether \u201cthe following item is set different from the document\u201d check box in  has been checked.","If YES in step S, whether a printer selected as a printer for use copes with the exceptional chapter setting, i.e., whether the printer has a function of switching between double-sided printing and single-sided printing during a printing job is determined (S).","If a printer which does not cope with the exceptional chapter setting has been selected, the printing control application  warns the user by a display or sound that the exceptional chapter setting in chapter attribute settings will be canceled if the current printer is determined as a printer for use (S). The printing control application  determines whether the OK button in the displayed warning dialog has been clicked (S). If the user confirms the printer for use with the OK button or the like, the printing control application  cancels the exceptional chapter setting. That is, the printing control application  cancels the exceptional chapter setting flag from the printing method among the chapter attributes of the editing information file, and deletes setting data different from that of the document. This also applies to the page-storing file. The printing control application  deletes the printing method setting different from that of the whole document, from printing setting data of the sheet bundle (S).","The printing control application  switches the printer for use to a newly selected printer, ending printer selection (S).","If no exceptional chapter setting exists in step S or the selected printer copes with the exceptional chapter setting in step S, the processing advances to step S, and the printing control application  sets the selected printer as a printer for use.","If the user is determined in step S not to express any agreement with the OK button or the like, printer selection processing ends.","If a printer which cannot cope with printing has been selected, all chapter printing method items shown in No. 1 of  are changed to \u201cfollow the designation of the whole document\u201d. The printing method designation in the dialog is grayed out to inhibit selection.","<Processing Sequence by Printing Application>","An operation when the printing application (despooler)  receives printing instruction processing from the printing control application  will be explained.",{"@attributes":{"id":"p-0154","num":"0186"},"figref":"FIG. 25","b":["105","2501","2503"]},"If the printing control application  issues a printing instruction, it generates despool table data on the basis of the contents of the page-storing file  and editing information file .  shows an example of the despool table. This data has a structure obtained by mapping a job ticket which constitutes a page-storing file in the memory with almost no change. Similar to the job ticket, the data contains printing setting data set for each layer such as a whole document, sheet bundle, sheet, or physical page.","When settings comply with those of an upper layer, the job ticket need not hold settings in each layer. In this case, the job ticket holds the values of unique setting items (unique items) which are not defined in an upper layer in settings of a sheet, sheet bundle, or physical page, and the values of only items (exceptional items) having exceptional settings different from those of an upper layer out of items common to setting items in the upper layer. The despool table similarly holds exceptional items and unique items as printing settings in  for each layer.","The printing application  which has received the despool table loads it to acquire the printing method of the whole document (S). The printing method of the whole document includes a printing method for the whole document, i.e., single-sided printing\/double-sided printing for the whole document and printing method designation for a sheet bundle. For example, the despool table is regarded as a tree structure and scanned in the page order to read out printing setting data contained in each node or the node of a physical page serving as a leaf. Printing setting data of each layer such as a document, chapter, or sheet can be read out in the page order.","The printing application  instructs the device via the graphic engine  on the printing method of the whole document (S).","The printing application  determines whether the device, i.e., the printer for use copes with switching of the printing method (S). This determination can be performed by the same method as the above-described checking method of the printing control application  in designating a printing method as an exceptional chapter setting. When a check result is held, this determination can also be achieved by the held value.","If settings can be switched for each chapter, switching in each chapter is determined in step S and subsequent steps.","The printing application  determines the start of a chapter (S). If a document node shifts to a sheet bundle node while reading out setting data or original data from the despool table, this point can be recognized as the start of a sheet bundle, i.e., chapter. In this manner, whether the current point is the start of a chapter, i.e., sheet bundle can be determined. If the current point is determined to be the start of a chapter, the printing application  reads printing setting data of the chapter (to be referred to as a chapter of interest hereinafter) and a printing method contained in the data (step S). The printing application  determines whether a printing method has been designated as an exceptional setting of the chapter of interest (step S).","If no exceptional chapter setting exists, the printing application  directly sets the printing method of the whole document as the printing method of the chapter, and sets the printing method as a parameter to be sent to the device (S).","In step S, the printing application  instructs the device via the graphic engine  on the printing method of the exceptional chapter setting read in step S or the printing method of the whole document set in step S.","The printing application  performs the above sequence at the start of the document from step S and at each chapter from step S.","For Windows\u00ae, this setting is done by issuing a reset DC from the printing application  to the GDI to set DEVMODE and switching single-sided\/double-sided printing.","More specifically, the despooler sets attributes for each member of the DEVMODE structure, and then calls ResetDC( ) serving as a GDI function by using DEVMODE as an argument. The DEVMODE contents are then transmitted to the driver via the graphic engine, and the driver controls the printer on the basis of the attributes. The DEVMODE structure may be contained in the page-storing file together with content data and printing setting data. In this case, a value in the page-storing file is used. If no DEVMODE structure is contained in the page-storing file, a value given as a return value from the driver via the graphic engine upon calling CreateDC( ) serving as a GDI function by the despooler to the driver is used.","An example of a single-sided\/double-sided instruction will be described. When a document or chapter has single-sided printing setting, the despooler sets the attribute value of single-sided printing in a member which determines a single-sided\/double-sided instruction in the DEVMODE structure. After that, the despooler calls and issues ResetDC( ) serving as a GDI function by using DEVMODE as an argument. The DEVMODE value is transmitted to the driver via the graphic engine, and the driver reads out a double-sided\/single-sided member and instructs the printer on the single-sided printing mode on the basis of the attribute value (=single-sided printing).","In the above fashion, printing methods are set for a document and each chapter. A printing instruction command is issued to the graphic engine for each printing page of each chapter to execute actual printing processing.","The printing instruction is a structure for issuing an instruction from an application to a device via a graphic engine and driver. The printing instruction also depends on the device, and is created by the graphic engine  via the driver . For this purpose, the printing application  creates data to be processed by the graphic engine . The created data is identical to data created by an application program which prints via the graphic engine. That is, the printing application converts a page designated as a printing target by the printing control application and the printing settings of the page in accordance with a data format for transfer to the graphic engine.","The GDI serving as a graphic engine in Windows\u00ae manages image information processing to a display card or printer. The GDI dynamically links a module called a device driver, and performs output processing to each device in order to absorb the dependence of the device such as a display card or printer. The device driver for a printer is the printer driver . The printer driver  has a basic function group called DDI (Device Driver Interface) which is determined to be installed in the device driver in advance in accordance with the performance and function. The GDI converts an API (Application Programming Interface) call by the printing application into device driver data. The DDI function group is properly called by the GDI to generate the above-mentioned printing instruction, and this instruction is transmitted to the printer  via the spooler . The GDI sequentially processes a printing request from the printing application  via the printer driver. When the printer  is equipped with a controller capable of processing a printing mode command called PDL (Printer Description Language), the printer driver  performs processing of replacing drawing information having a high degree of abstraction with the PDL. This printing mode command includes a color command or monochrome command.","The printing mode command created by the graphic engine  and printer driver  is output from the printer driver , and temporarily held by the spooler . The printing mode command is then transmitted from the spooler  to the printer  asynchronously to printing mode command generation processing. In this processing, a printing instruction is transmitted to the device.","If the printer  receives a command for switching the printing method, the printer  changes single-sided printing\/double-sided printing in accordance with the command, and performs actual image formation processing.","With this arrangement, the printing system according to the embodiment can set a printing method different from that of a whole document in a chapter desired by the user in a document created by an application. Printing is performed in accordance with the set printing method.","When an exceptional setting different from that of a whole document is done for a chapter, whether this setting can be realized by a printer is determined. When the exceptional setting is possible, it can be reliably realized.","When the setting cannot be realized in the printer, the setting is inhibited to prevent any inconsistency between settings and an actual use environment.","Also when the printer for use is changed and the setting cannot be realized in a newly designated printer for use, a warning to cancel such exceptional chapter setting is generated. If the user agrees on cancellation, the exceptional chapter setting is canceled. Hence, even if the printer is changed, inconsistency between settings and an actual use environment can be prevented.","As described above, a document including both single-sided printing and double-sided printing can be executed by one printing job by generating for a document to be printed a printing job which holds single-sided printing or double-sided printing setting as a partial setting value, and causing the printer to execute the printing job. An expressive document can, therefore, be created, and efficient printing can be performed in terms of the speed and maintenance cost without printing any wasteful blank page.","In , if the device copes with setting switching, a printing method setting instruction is issued to the device regardless of the presence\/absence of an exceptional chapter setting. Alternatively, the printing method of an immediately preceding chapter is stored, and when different printing methods are set in a chapter of interest and immediately preceding chapter, a printing method setting instruction can be issued to the device at the start of the chapter of interest. In this case, no exceptional chapter setting can be done unless the device copes with switching of the printing method, and determination in step s can be omitted. In this case, issuing of a setting switching instruction can be prevented when no setting is switched.","Note that the order of flow charts described in the embodiment can be changed as far as processing is completed.","The present invention may be applied to a system including a plurality of devices (e.g., a host computer, interface device, reader, and printer) or an apparatus (e.g., a copying machine, printer, or facsimile apparatus) formed from a single device.","The object of the present invention is also achieved when a storage medium which stores software program codes for realizing the functions of the above-described embodiment are read out and executed by the computer (or the CPU or MPU) of a system or apparatus. In this case, the program codes read out from the storage medium realize the functions of the above-described embodiment, and the storage medium which stores the program codes constitutes the present invention.","The storage medium for supplying the program codes includes a floppy\u00ae disk, hard disk, optical disk, magnetooptical disk, CD-ROM, CD-R, magnetic tape, nonvolatile memory card, and ROM.","The functions of the above-described embodiment are realized when the computer executes the readout program codes. Also, the functions of the above-described embodiment are realized when an OS (Operating System) or the like running on the computer performs part or all of actual processing on the basis of the instructions of the program codes.","Also, the functions of the above-described embodiment are realized when the program codes read out from the storage medium are written in the memory of a function expansion board inserted into the computer or the memory of a function expansion unit connected to the computer, the CPU of the function expansion board or function expansion unit performs part or all of actual processing on the basis of the instructions of the program codes.","As has been described above, according to the present invention, a document including both single-sided printing and double-sided printing can be printed by one printing job by generating a printing job which holds single-sided printing or double-sided printing setting as a partial setting value in a document to be printed, and causing a printer to execute the printing job. An expressive document can be created, and efficient printing can be performed in terms of the speed and maintenance cost without printing any wasteful blank page.","As many apparently widely different embodiments of the present invention can be made without departing from the spirit and scope thereof, it is to be understood that the invention is not limited to the specific embodiments thereof except as defined in the appended claims."],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"BRIEF DESCRIPTION OF THE DRAWINGS","p":["The accompanying drawings, which are incorporated in and constitute a part of the specification, illustrate embodiments of the invention and, together with the description, serve to explain the principles of the invention.",{"@attributes":{"id":"p-0025","num":"0024"},"figref":"FIG. 1"},{"@attributes":{"id":"p-0026","num":"0025"},"figref":"FIG. 2"},{"@attributes":{"id":"p-0027","num":"0026"},"figref":"FIG. 3"},{"@attributes":{"id":"p-0028","num":"0027"},"figref":"FIGS. 4A and 4B"},{"@attributes":{"id":"p-0029","num":"0028"},"figref":"FIG. 5"},{"@attributes":{"id":"p-0030","num":"0029"},"figref":"FIG. 6"},{"@attributes":{"id":"p-0031","num":"0030"},"figref":"FIG. 7"},{"@attributes":{"id":"p-0032","num":"0031"},"figref":"FIG. 8"},{"@attributes":{"id":"p-0033","num":"0032"},"figref":"FIG. 9"},{"@attributes":{"id":"p-0034","num":"0033"},"figref":"FIG. 10"},{"@attributes":{"id":"p-0035","num":"0034"},"figref":["FIG. 11","FIG. 10"],"b":"801"},{"@attributes":{"id":"p-0036","num":"0035"},"figref":"FIG. 12"},{"@attributes":{"id":"p-0037","num":"0036"},"figref":"FIG. 13"},{"@attributes":{"id":"p-0038","num":"0037"},"figref":"FIG. 14"},{"@attributes":{"id":"p-0039","num":"0038"},"figref":"FIG. 15"},{"@attributes":{"id":"p-0040","num":"0039"},"figref":["FIG. 16","FIG. 15"]},{"@attributes":{"id":"p-0041","num":"0040"},"figref":"FIG. 17"},{"@attributes":{"id":"p-0042","num":"0041"},"figref":["FIG. 18","FIG. 17"]},{"@attributes":{"id":"p-0043","num":"0042"},"figref":"FIG. 19"},{"@attributes":{"id":"p-0044","num":"0043"},"figref":"FIGS. 20A and 20B"},{"@attributes":{"id":"p-0045","num":"0044"},"figref":"FIG. 21"},{"@attributes":{"id":"p-0046","num":"0045"},"figref":"FIG. 22"},{"@attributes":{"id":"p-0047","num":"0046"},"figref":"FIG. 23"},{"@attributes":{"id":"p-0048","num":"0047"},"figref":"FIG. 24"},{"@attributes":{"id":"p-0049","num":"0048"},"figref":"FIG. 25"},{"@attributes":{"id":"p-0050","num":"0049"},"figref":"FIG. 26"},{"@attributes":{"id":"p-0051","num":"0050"},"figref":"FIG. 27"}]},"DETDESC":[{},{}]}
