---
title: Techniques for content services
abstract: Techniques for content services are provided. Documents are managed from their native storage locations. Access to portions of the documents is provided via separate addressable references. Principals access and annotate the portions of the documents remotely. Identity and policy restrictions are enforced against access from the native storage locations.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09158778&OS=09158778&RS=09158778
owner: Novell, Inc.
number: 09158778
owner_city: Provo
owner_country: US
publication_date: 20100827
---

{"@attributes":{"id":"description"},"BRFSUM":[{},{}],"heading":["BACKGROUND","SUMMARY","DETAILED DESCRIPTION","JSON Implementation Structures","Client Side (Identified by CS in the FIG. )","Server side","Web Service Interface","Back-End Service Layer","Example Google Wave\u00ae Screen Shots"],"p":["Most collaboration tools support access to documents, but almost always, end users are forced to \u201cupload\u201d or \u201cattach\u201d documents into the data storage area of the collaboration service. There are several disadvantages to this situation as it exists in the industry.","Firstly, uploading a document creates a copy of the document: one copy (referred to as \u201cA\u201d) is on the original storage medium, and the other copy (referred to as \u201cB\u201d) is located in the collaboration service being used. For example, if a first user (referred to as \u201cX\u201d) has a document (A) on the local hard drive of X's laptop and X logs into a collaboration service to share A, then X must also upload A from X's hard drive into the collaboration service's document storage area (or workspace) as copy B, thereby leaving a copy (A) on X's hard drive and a second copy (B) in the collaboration service's workspace area.","Secondly, collaboration documents leave the Governance Risk Management and Compliance (referred to as \u201cGRC\u201d) environment of the end-user's source area, which can be problematic from a legal standpoint for an enterprise. For example, suppose a document (A) is on a file server and then an end user uploads a copy (B) into a collaboration service, such as Google Wave\u00ae. Once that file (A) leaves the file server, it leaves the context of audit, policy, control, accounting, and enterprise storage reporting. Moreover, if A gets deleted off of the file server, the corporate tools that monitor and maintain corporate data, often can no longer find or report on the file. Further, if A is or has content that is out-of-policy, A is often now outside the control of enterprise storage management tools once A enters the collaboration service's storage area as a copy B.","Thirdly, when documents leave their native environments the back up and virus protection services offered by their native source storage services are lost. So, if a document leaves a mapped drive server, it is no longer backed up or checked for anti-viruses as it once was once that document is located in the collaboration environment.","Thus, once documents leave the original source environment, they can be copied, and forwarded, which essentially creates multiple versions of the document and it is not easy to discover which one of the copied documents is the most recent version of the document. Accordingly, versioning is compromised. Also, all access control methodologies used on the document are made void, since a received copy of the document can freely forwarded to others around the Internet.","In various embodiments, techniques for content services are presented. More specifically, and in an embodiment, a method for content services is provided. Specifically, a request for a document is received over a network connection from a principal. The document is parsed from its native storage environment into portions, each portion having a separate network addressable reference. Access to the document is provided via the network addressable references to the principal. Also, identity and policy restrictions are enforced against the principal and against the access to the document.","A \u201cresource\u201d includes a user, service, system, device, directory, data store, groups of users, combinations of these things, etc. A \u201cprincipal\u201d is a specific type of resource, such as an automated service or user that acquires an identity. A designation as to what is a resource and what is a principal can change depending upon the context of any given network transaction. Thus, if one resource attempts to access another resource, the actor of the transaction may be viewed as a principal.","An \u201cidentity\u201d is something that is formulated from one or more identifiers and secrets that provide a statement of roles and\/or permissions that the identity has in relation to resources. An \u201cidentifier\u201d is information, which may be private and permits an identity to be formed, and some portions of an identifier may be public information, such as a user identifier, name, etc. Some examples of identifiers include social security number (SSN), user identifier and password pair, account number, retina scan, fingerprint, face scan, etc.","A \u201cprocessing environment\u201d defines a set of cooperating computing resources, such as machines, storage, software libraries, software systems, etc. that form a logical computing infrastructure. A \u201clogical computing infrastructure\u201d means that computing resources can be geographically distributed across a network, such as the Internet. So, one computing resource at network site X and be logically combined with another computing resource at network site Y to form a logical processing environment.","Various embodiments of this invention can be implemented in existing network architectures. For example, in some embodiments, the techniques presented herein are implemented in whole or in part in the Novell\u00ae network and proxy server products, operating system products, cloud-based products or services, directory-based products and other products and\/or services distributed by Novell\u00ae, Inc., of Waltham, Mass.","Also, the techniques presented herein are implemented in machines, such as processor or processor-enabled devices. These machines are configured to specifically perform the processing of the methods and systems presented herein. Moreover, the methods and systems are implemented and reside within a non-transitory and computer-readable or processor-readable storage media and processed on the machines (processing devices) configured to perform the methods.","Of course, the embodiments of the invention can be implemented in a variety of architectural platforms, devices, operating and server systems, and\/or applications. Any particular architectural layout or implementation presented herein is provided for purposes of illustration and comprehension only and is not intended to limit aspects of the invention.","It is within this context that embodiments of the invention are now discussed within the context of .",{"@attributes":{"id":"p-0021","num":"0020"},"figref":"FIG. 1","b":["100","100","100"]},"The components of the content service system  include a Representational State Transfer (REST) server D; a convert\/transform agent E; a parsing\/processing agent F; a negotiation agent G; a data and storage access agent H, and identity policy compliance data I. The content service system  can also include one or more of: an application user interface (UI) such as a browser R; a pluggable gadget S; and\/or an event and monitor robot T. Each of these will now be discussed in turn.","The REST server supports a RESTful protocol architecture. Moreover, the REST (also referred to herein as \u201cRESTful\u201d) server accepts File Transfer Protocol (FTP) and Hypertext Transfer Protocol (HTTP) commands, such as GET, PUT, POST, and\/or DELETE operations for Create Read Update and Delete (CRUD) operations on files. Request and response data are presented in structured formats, such as JavaScript Object Notation (JSON) or eXtensible Markup Language (XML), which then allows RESTful services to embed file content and Uniform Resource Identifiers (URI's) into the responses.","The convert\/transform agent is software instructions that reside on a non-transitory machine-readable storage medium and executes on the REST server. The REST server configured to execute the convert\/transform agent. The convert\/transform agent supports the conversion and the transformation from one file format to another file format, such as Microsoft WORD \u201c.doc\u201d or \u201c.docx\u201d format to HTML or from OpenOffice \u201c.sxw\u201d to OpenOffice \u201c.odt,\u201d etc.","The parsing\/processing agent is software instructions that reside on a non-transitory machine-readable storage medium and executes on the REST server. Again, the REST server configured to execute the parsing\/processing agent. The parsing\/processing agent parses documents and creates an abstract tree representation of data files that can be addressed at a finer granularity than just the typical file boundaries. The parsing\/processing agent also adds metadata, annotations, and\/or comments to original files. Some operations of the parsing\/processing agent include server-side splitting of the content into independently addressable entities by assigning RESTful endpoints to each portion of the content. This frees the client side of transactions from understanding the semantics of the document and from understanding how to split up and parse complex files. Instead, the client side of the transactions just needs to invoke partial content RESTful URI's. This approach is extremely useful and powerful, especially in the areas of multiple user access.","The negotiation agent is software instructions that reside on a non-transitory machine-readable storage medium and executes on the REST server. Again, the REST server configured to execute the negotiation agent. The negotiation agent resolves the \u201cbest\u201d option between \u201cwhat is wanted\u201d and \u201cwhat is possible.\u201d This is done using Multipurpose Internet Mail Extensions (MIME) types. For example, suppose a client asks for data as application\/text data but the data is stored as an application\/Portable Document Format (PDF) file. If the conversion\/transform agent does not have the ability to convert from PDF to text, then the data request is rejected. However, if the conversion\/transform agent can perform the translation, then the negotiation agent determines that it can satisfy the data requests and so the transaction is successful.","The data and storage access agent is software instructions that reside on a non-transitory machine-readable storage medium and executes on the REST server. Again, the REST server configured to execute the data and storage access agent. The data and storage access agent knows how to access data on the file system or by using file access protocols for remote storage (such as NetWare Core Protocol (NCP), Common Internet File System (CIFS), Network File System (NFS), Apple Filing Protocol (AFP), FTP, Web-based Distributed Authoring and Versioning (WebDAV), etc.). The data and storage access agent can perform simple operations, such as a file system read or write call that is specific to a programming language, such as C, Java, Python, etc. In other cases, the data and storage access agent can perform more complex operations, such as commands for a remote file system access protocol. The data and storage access agent supports versioning of updates, which is useful when the document is maintained under some version control system, such as Social Venture Network (SVN)\/Subversion.","The entire REST server as a whole is wrapped with identity, policy, and compliance data. Each principal (end user or automated process) has an identity and policy determines who is allowed to do what. The compliance component makes sure that an audit trail is maintained and that local policy is within the allowances of global policy. Embodiments herein also foresee that identity might come from federation of multiple identity providers (such as Google Wave\u00ae, Novell Pulse\u00ae, eDirectory\u00ae, Active Directory\u00ae) or server-specific identity services such as Unique Identifier (UID), Linux User Management (LUM), or digital certificates. Embodiments herein support fine grained access controls, which is a vast improvement over email attachments or forwards where there is a complete loss of access control to the document. Techniques herein allow for end-to-end access controls, which can be strictly enforced, since the content is not copied out of the enterprise data management environment; it is accessed in that environment.","The content service system  can also include an application UI, such as a browser. This is the front-end or end-user facing interface of the content service system . The UI asks for data in a form that it can understand and at a granularity that makes most sense of its current context. For example, the UI might ask for a whole document or parts of a document (paragraphs, pages, areas, sections, etc.) in HTML, text, or even a native format such as and OpenOffice Text document (\u201c.odt\u201d).","The content service system  can also include a pluggable gadget. Again, the pluggable gadget is software that resides in a non-transitory computer-readable medium and executes on a processor or processor-enabled device. The pluggable gadget knows how to specifically use the content service REST interface to get and put, create and delete information. In a Google Wave implementation, this is a window that provides a visual presentation of the interactive information from the content service.","The content service system  can also include an event and monitor robot. The event and monitor robot is software that resides in a non-transitory computer-readable medium and executes on a processor or processor-enabled device. This is a component that watches for data changes by either the client or the RESTful server. If the client makes changes in terms of in-line edits, then the new information is written back to the content service. If the new information is in the form of comments around the data, then that information is pushed back to the content service as a comment (rather than as an in-line edit) that gets written back to the native format as a comment or annotation.","The content service system  includes a variety of Application Programming Interfaces (APIs), such as some RESTful APIs. When using RESTful APIs, every state of the application is identified as resource and every operation as a link between resources. Hence by this definition some of the resource identified are things, such as but not limited to what follows herein.","If Directory (collection of files) is taken as a single resource this would take different states at different points in time so suppose a call to the directory resource at point of time: t1 (t=time) as rd1 (rd=resource directory state) and resource at time t2 as rd2 . . . etc. so the directory can have states like:","rd1\u2014may be the state during creation;","rd2\u2014state after adding file;","rd3\u2014state after deleting file;","rd4\u2014state after modifying files;","etc.","So, the same file can be at different states at different points of time and based on the request method on the resource, the corresponding operations are performed. The same kind of arguments hold good for a file also so files will also have states like:","rf1 (rf=resource file state)\u2014newly created files without content;","rf2\u2014file after adding new content;","rf3\u2014file after modifying of the content; and","rf4\u2014file after deletion of the content.","Resources include volumes, collection of directories, collection of files and directories, etc.","Here is an example of how this works using a state transition interface:","Create File\n\n","Every resource is identified by a URI and basic operations targeted are read, delete, create and update.",{"@attributes":{"id":"p-0048","num":"0050"},"tables":{"@attributes":{"id":"TABLE-US-00001","num":"00001"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0","pgwide":"1"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"259pt","align":"left"}},"thead":{"row":{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":"Read Full"}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"245pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"C (client) ----------GET (http:\\\\oes2\\vol1\\543367)-----------> S (server)"]},{"entry":[{},"C <------------------200 OK (data)-------------------S (data in http content)"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"259pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":"Read Partial"}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"245pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"C (client) --GET (http:\\\\oes2\\vol1\\543367\\startpara\\x\\endpara\\7)------> S (server)"]},{"entry":[{},"C <--------------------200 OK (data)-------------------------- S"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"259pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":"Delete"}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"245pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"\u2003C ---------DELETE (http:\\\\oes2\\vol1\\543367)-------------> S"]},{"entry":[{},"\u2002C <------------200 OK (optional data )-------------------- S"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"259pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":"Create"}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"245pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"\u2003C ------------POST (http:\\\\oes2\\vol1\\543366)-------------> S"]},{"entry":[{},"\u2003C <----------------201 CREATED----------------------------- S"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"259pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":"Update Full"}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"245pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"\u2003C -----------POST (http:\\\\oes2\\vol1\\543368)--------------> S"]},{"entry":[{},"\u2003C <------------------200OK \/204 NO CONTENT----------------- S"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"259pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":"Update Partial"}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"245pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"\u2003C -POST (http:\\\\oes2\\vol1\\543368\\startline\\x\\endline\\y)--> S"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"231pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"C <------------------200OK \/204 NO CONTENT----------------- S"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}]}}]}}},"Embodiments herein also foresee multiple styles for URIs of file resources for opaque IDs (e.g., inode), transparent IDs (e.g., file-name path), and the like.","With opaque IDs, if the content is moved, then the URI remains the same. With transparent IDs, if the content is moved, then the URI changes too. Either approach has its advantages and disadvantages, but both are acceptable approaches from a REST perspective.","Embodiments herein can include a variety of implementations to effectuate the teachings presented herein. Some of these implementation scenarios are now presented.","With a JSON approach, RESTful operation payloads are implemented with JSON. In still another approach XML can be used for the RESTful operation payloads. Many other syntaxes could be used in the RESTful operations as well.","Below is one example set of JSON structures for communicating between the client and server using the techniques presented herein.",{"@attributes":{"id":"p-0054","num":"0056"},"tables":{"@attributes":{"id":"TABLE-US-00002","num":"00002"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0","pgwide":"1"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"259pt","align":"left"}},"thead":{"row":{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"GET-full content"},{"entry":"REQUEST -- plain text"},{"entry":"REPLY -- {\u201ctype\u201d:\u201cfile\u201d,\u201ccontent\u201d:\u201cthis is data\u201d}"},{"entry":"http:\/\/83.222.226.38:8080\/cs\/var\/tmp\/example.odt\/"},{"entry":"GET-partial content"},{"entry":"REQUEST -- plain text"},{"entry":"REPLY -- {\u201ctype\u201d:\u201cfile\u201d,\u201ccontent\u201d:\u201dthis is data\u201d}"},{"entry":"http:\/\/83.222.226.38:8080\/cs\/var\/tmp\/example.odt\/startline\/2\/endline\/3\/"},{"entry":"PUT- INSERT"},{"entry":"REQUEST -- plain text"},{"entry":"REPLY -- { \u201ctype\u201d:\u201cfile\u201d,\u201ccontent\u201d: 0}"},{"entry":"http:\/\/83.222.226.38:8080\/cs\/var\/tmp\/example.odt\/startline\/2\/insert"},{"entry":"PUT- REPLACE"},{"entry":"REQUEST -- plain text"},{"entry":"REPLY -- { \u201ctype\u201d:\u201cfile\u201d,\u201ccontent\u201d: 0}"},{"entry":"http:\/\/83.222.226.38:8080\/cs\/var\/tmp\/example.odt\/startline\/2\/endline\/3\/upda"},{"entry":"te"},{"entry":"PUT-comment"},{"entry":"REQUEST -- {\u201ctype\u201d:\u201ccomment\u201d,\u201cauthor\u201d:\u201cmandy\u201d,\u201ccontent\u201d:\u201ccomment from"},{"entry":"mandy\u201d}"},{"entry":"REPLY -- { \u201ctype\u201d:\u201cfile\u201d,\u201ccontent\u201d: 0}"},{"entry":"http:\/\/83.222.226.38:8080\/cs\/var\/tmp\/example.odt\/startline\/2\/endline\/3\/comm"},{"entry":"ent"},{"entry":"Directory Single JSON"},{"entry":"{"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"245pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"\u201ctype\u201d:\u201cdirectory\u201d,"]},{"entry":[{},"\u201c.eclipseproduct\u201d:\u201cE:\\\\.eclipseproduct\u201d,"]},{"entry":[{},"\u201creadme\u201d:\u201cE:\\\\readme\u201d,"]},{"entry":[{},"\u201cremovedconf.txt\u201d:\u201cE:\\\\removedconf.txt\u201d,"]},{"entry":[{},"\u201cplugins\u201d:\u201cE:\\\\plugins\u201d"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"259pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"}"},{"entry":"Nested JSON Directory"},{"entry":"{"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"245pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"\u201ctype\u201d:\u201cdirectory\u201d,"]},{"entry":[{},"\u201ccontent\u201d:{"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"231pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"\u201c.eclipseproduct\u201d:\u201cE:\\\\.eclipseproduct\u201d,"]},{"entry":[{},"\u201creadme\u201d:\u201cE:\\\\readme\u201d,"]},{"entry":[{},"\u201cremovedconf.txt\u201d:\u201cE:\\\\removedconf.txt\u201d,"]},{"entry":[{},"\u201cplugins\u201d:\u201cE:\\\\plugins\u201d"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"245pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"}"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"259pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"}"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}]}}]}}},"The processing flow and features of the teachings presented herein for content services are now discussed with reference to a series of figures for an example implementation using Google Wave\u00ae. Various screenshots are presented while discussing the features and processing flow. It is noted that the Google Wave\u00ae implementation is shown for purposes of illustration and comprehension and is not intended to limit the teachings presented herein to any specific implementation, as a variety of other toolkits or systems can be used to effectuate the teachings presented herein.",{"@attributes":{"id":"p-0056","num":"0058"},"figref":"FIG. 2","b":["200","200"]},"The content server service is presented from the processing perspective of the RESTful server described above with reference to the system  of the . Multiple collaborating clients interact with the content server service over a network to collaborate on content sharing and authoring.","At , the content server service receives a request for a document over a network connection from a principal. The principal can be a user or an automated program\/application. The document is a logical piece of content, such as a file. The request is for collaborating on content associated with the document.","According to an embodiment, at , the content server service presents a RESTful interface to a processing environment of the principal. This is done for the principal to provide the request and for the principal to access the document in a collaborative manner.","At , the content server service parses the document from its native storage environment into portions. Each portion has a separate network addressable reference. So, a document can be parsed into local components, such as chapter, section, paragraph, sentence, etc. In fact, any level of desired granularity can be achieved via the parsing. Each logical portion or component of the document is assigned an addressable reference so that the principal can directly action just a desired portion of the document.","In an embodiment, at , the content server service identifies comments and\/or annotations associated with some portions of the document. Thus, each portion of the document can include primary content and secondary content; the primary content is actual authored content for the document whereas the secondary content can be such things as user comments and\/or annotations. Both primary and secondary content are provided and managed via the portions.","In another situation, at , the content server service identifies audit and\/or tracking metadata associated with some portions of the document. So, not only is user authored secondary content provided with portions of the document but service generated or maintained content can be maintained, such as audit and tracking information (e.g., identity of user accessing a portion of the document, date and time access was made, length of time access was made, and the like).","In still another case, at , the content server service creates a tree for the document where each node of the tree represents one of the portions of the document. Thus, the portions are all logically related to one another to form a document tree.","According to another situation, at , the content server service converts the portions requested for access by the principal into a format requested with the request. That is, the format requested by the principal is different from a native format that the document is stored in within its native storage environment.","Continuing with the embodiment of  and at , the content server service negotiates an alternative format that is acceptable to the principal when the format initially requested by the principal is unavailable. So, if the principal wants PDF but PDF is not supported a negotiation with the principal or with a service of the principal can be achieved to ensure an acceptable format for the portion of the document requested can be made available to the principal for collaborative access.","At , the content server service provides access to the document via the network addressable references to the principal. The necessary native file system commands are hidden from the principal and access is transparently achieved from the perspective of the principal via the portions requested and in a format requested by the principal.","According to an embodiment, at , the content server service dynamically communicates state changes for each of the portions of the document to the principal when changes are made to those portions by other principals that are also dynamically and collaboratively accessing the portions. Additionally, the content server service dynamically updates specific portions that are changed by the principal during access within the native storage environment.","In a particular situation, at , the content server service permits version control access to the portions. The version control access is provided from the native storage environment. So, the version control mechanism that operates within the native storage environment is enforced during version control access to the portions.","In yet another scenario, at , the content server service adds new comments or new annotations to specific portions of the document as supplied by the principal during access to the document. In other words, the principal can collaborative added comments and annotations to specific portions of the document and they are maintained from the native storage environment of the document via the content server service.","At , the content server service enforces identity and policy restrictions against the principal and against the access made by the principal to the portions and thereby to the document. Again, native storage environment identity and policy-based restrictions and services are enforced against the principal and the access to the portions of the document.","In an embodiment, at , the content server service also tracks access to the document made by the principal. The tracking and information collected is defined by a compliance and\/or an audit policy.",{"@attributes":{"id":"p-0072","num":"0074"},"figref":"FIG. 3","b":["300","300"]},"The client-side collaboration service is presented from the processing perspective of a client accessed or used by a principal that desires to collaborate on content. The interaction of the client-side collaboration service occurs with the content server service (described above with reference to the method  of the ).","At , the client-side collaboration service presents an interface for interacting with a collaborative content service to a principal. The collaborative content service may be viewed as the content server service discussed above with reference to the method  of the .","According to an embodiment, at , the client-side collaboration service provides visual representations of the document from the collaborative content service within the interface.","In one case, at , the client-side collaboration service provides the interface as a series of web pages rendered within a web browser of a principal.","At , the client-side collaboration service identifies, via the interface, a request of the principal for collaborative access to a portion of a document. So, the interface may present the document as a series of decomposed or parsed portions (as discussed above with reference to the method  of the ). The principal interacts with the interface to select or make a request for collaborative access to a specific portion of the document.","In an embodiment, at , the client-side collaboration service recognizes a specifically requested data editing format communicated by the principal with the request. In other words, the principal can select a desired editing format to access the portion of the document. This format can be in a same or sometimes different format from how the document is natively stored and managed by the collaborative content service.","At , the client-side collaboration service converts the request into a format that the collaborative content service can handle and process. So, transparent to the principal, the request is formatted into commands and operations understood by the collaboration content service.","At , the client-side collaboration service sends the request in the format to the collaborative content service for processing.","At , the client-side collaboration service monitors, via the interface, actions of the principal for changes to the portion of the document when changes are detected. Any changes made by the principal to the portion are dynamically and in real time communicated to the collaborative content service for dynamic update of the document in the native storage environment of the document.","According to an embodiment, at , the client-side collaboration service dynamically informs the principal, via the interface, when external changes to the portion or other portions of the document are detected. The external changes are communicated by the collaborative content service. So, other principals can be dynamically modifying the same portion as the principal or other portions of the document and when changes are detected the principal is notified of any such changes and updates occurring in the native storage environment of the document.",{"@attributes":{"id":"p-0083","num":"0085"},"figref":["FIG. 4","FIG. 2"],"b":["400","400","400","200"]},"The content service system  includes a content server (one or more processors) configured with a collaboration content service  that executes on the content server. The content server is also configured with a document decomposing service  that executes on the content server.","The collaboration content service  is configured to interact with multiple clients over the network to deliver access to portions of documents from a native storage location for the documents.","The document decomposing service  is to decompose the documents into portions and make those portions accessible via independent addressable references to the portions.","In an embodiment, the collaboration content service  is further configured to enforce access restrictions, identity restrictions, and policy restrictions defined in the native storage location against access to the portions of the documents.","According to an embodiment, the document decomposing service  is also configured to supply metadata with each of the portions during access to the portions of the documents. In some cases, the metadata includes auditing information, identity information, comment information, and\/or annotation information.",{"@attributes":{"id":"p-0089","num":"0091"},"figref":["FIG. 5","FIG. 5"]},"A web application that can send an HTTP packet to the Content server.","Any web site\/web based applications like Google Wave\u00ae, gmail, Facebook\u00ae, and\/or Twitter\u00ae can serve as the client. A plugin is provided to pull data and generate simple HTTP requests.","In the  Google Wave\u00ae is presented as the front end client application. For Google Wave\u00ae a gadget and a robot are provided in the sample illustration. The gadgets help with publishing content while the robots help with authoring content.","There are two layers: web service Interface and back end service layer.","Functions of this component include HTTP packet handling and content negotiation.","HTTP Packet Handling","This is a Java based web application running on a tomcat engine with a jersey framework to implement HTTP packet handling like parsing the header and body and extracting the information from various headers: MIME types, etc.","Content Negotiation","The requested MIME type is analyzed and checked for feasibility. If feasible the request is sent to service layer.","This includes: data format conversion; conversion to a specific format requested; parsing of data in the case of partial file and particular content is fetched from the file; file system access; and based on the file path provided or passed, the file system is accessed and file operations performed, such as read, write, and\/or modification of the data; the data is saved to the file and access is then closed.",{"@attributes":{"id":"p-0098","num":"0100"},"figref":"FIGS. 6-17"},"The following processing results are portrayed in the associated screen shots of .",{"@attributes":{"id":"p-0100","num":"0102"},"figref":"FIG. 6"},{"@attributes":{"id":"p-0101","num":"0103"},"figref":"FIG. 7"},{"@attributes":{"id":"p-0102","num":"0104"},"figref":"FIG. 8"},{"@attributes":{"id":"p-0103","num":"0105"},"figref":"FIG. 9"},{"@attributes":{"id":"p-0104","num":"0106"},"figref":"FIG. 10"},{"@attributes":{"id":"p-0105","num":"0107"},"figref":"FIG. 11"},{"@attributes":{"id":"p-0106","num":"0108"},"figref":"FIG. 12"},{"@attributes":{"id":"p-0107","num":"0109"},"figref":"FIG. 13"},{"@attributes":{"id":"p-0108","num":"0110"},"figref":"FIG. 14"},{"@attributes":{"id":"p-0109","num":"0111"},"figref":"FIG. 15"},{"@attributes":{"id":"p-0110","num":"0112"},"figref":"FIG. 16"},{"@attributes":{"id":"p-0111","num":"0113"},"figref":"FIG. 17"},"It is now appreciated how the teachings presented herein provide for a variety of beneficial improvements to the collaborative content services. For example, the teachings:","1) allow applications, including collaboration and browser based applications, to access data using a REST interface using a finer granularity than just file boundaries;","2) allow clients to access data formatted as they need it rather than being forced to deal with data as it is stored;","3) re-architect data access as information access rather than file access;","4) support, but not require, every client to have software to understand every data format and\/or file access protocol;","5) allow multiple clients to share and edit documents in a way that is natural to collaborative web applications rather than the native methods associated with the data format, so, a team can edit a common document even if one person is used to using MS Word while another is used to using OpenOffice while still another is used to working only with text files using something like VI on Linux or Notepad on Windows;","6) allow all users to use a simple \u201cpost and comment\u201d metaphor for collaboration;","7) retain all of the benefits of enterprise data and storage management (backup, anti-virus, active monitoring, replication, intelligent location, multi-tiered access, security, policy, compliance, etc) with the convenience of accessing information rather than copying information into application specific data repositories; and","8) support identity, policy, and compliance in all operations and so only data is accessed that is allowed to be accessed (or modified, or processed, etc).","It is also noted that the teachings presented herein provided for a variety of practical benefits in the industry, such as:","1) since the data from various client sources like Twitter\u00ae, Facebook\u00ae, email services etc. can be collected and centrally stored to a file system, data mining services can be deployed over the files to generate synthesized information, so if a poll is conducted in Facebook\u00ae\/Twitter\u00ae with 4 options to answer for a question posed, since the options selected by various category of users are stored in one file, the results can be compared with data mining services and driver information;","2) similarly one can collect comments\/data from various users in the client application and save it to a file so unstructured data classification services can be effectively used; and","3) content services can be integrated to a work flow engine so that one can store as well send data to other systems in the business process that are people driven; for example, say one is in a business where one has to serve his\/her clients (business partners) working in different platforms and collaboration tools, e.g. one is in Google Wave\u00ae another is in Twitter\u00ae and another in Facebook\u00ae; one can have accounts in all these platforms to get in touch with them but it's hard for one person to monitor multiple collaboration tools and respond quickly; in such case, one can use the content services provided herein to collect user requests from all these tools and send it via even an email to the end user.","The above description is illustrative, and not restrictive. Many other embodiments will be apparent to those of skill in the art upon reviewing the above description. The scope of embodiments should therefore be determined with reference to the appended claims, along with the full scope of equivalents to which such claims are entitled.","The Abstract is provided to comply with 37 C.F.R. \u00a71.72(b) and will allow the reader to quickly ascertain the nature and gist of the technical disclosure. It is submitted with the understanding that it will not be used to interpret or limit the scope or meaning of the claims.","In the foregoing description of the embodiments, various features are grouped together in a single embodiment for the purpose of streamlining the disclosure. This method of disclosure is not to be interpreted as reflecting that the claimed embodiments have more features than are expressly recited in each claim. Rather, as the following claims reflect, inventive subject matter lies in less than all features of a single disclosed embodiment. Thus the following claims are hereby incorporated into the Description of the Embodiments, with each claim standing on its own as a separate exemplary embodiment."],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"BRIEF DESCRIPTION OF THE DRAWINGS","p":[{"@attributes":{"id":"p-0008","num":"0007"},"figref":"FIG. 1"},{"@attributes":{"id":"p-0009","num":"0008"},"figref":"FIG. 2"},{"@attributes":{"id":"p-0010","num":"0009"},"figref":"FIG. 3"},{"@attributes":{"id":"p-0011","num":"0010"},"figref":"FIG. 4"},{"@attributes":{"id":"p-0012","num":"0011"},"figref":"FIG. 5"},{"@attributes":{"id":"p-0013","num":"0012"},"figref":["FIGS. 6-17","FIG. 5"]}]},"DETDESC":[{},{}]}
