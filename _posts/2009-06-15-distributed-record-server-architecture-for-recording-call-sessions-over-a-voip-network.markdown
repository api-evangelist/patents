---
title: Distributed record server architecture for recording call sessions over a VoIP network
abstract: Devices, systems, and methods for recording call sessions over a VoIP network using a distributed record server architecture are disclosed. An example recording device for recording segments of a call session includes a record server configured to receive an agent voice data stream and an external caller voice data stream from an agent telephone station, and a file repository configured to store voice data and call data associated with each recorded segment of the call session. The recording device is configured to tag recorded segments of each call session, which can be later used by a third-party application or database to check the status and/or integrity of the recorded call session.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08422641&OS=08422641&RS=08422641
owner: Calabrio, Inc.
number: 08422641
owner_city: Minneapolis
owner_country: US
publication_date: 20090615
---

{"@attributes":{"id":"description"},"BRFSUM":[{},{}],"heading":["TECHNICAL FIELD","BACKGROUND","SUMMARY","DETAILED DESCRIPTION"],"p":["The present invention relates generally to the field of recording voice and data communications over a network. More specifically, the present invention pertains to devices, systems, and methods for recording call sessions over a Voice over Internet Protocol (VoIP) network using a distributed record server architecture.","The recording of voice and data communications between customers and agents of a company is becoming increasingly important in certain industries, particularly where the quality of customer interactions needs to be monitored for quality assurance purposes, or where legal or security issues resulting from customer interactions need to be considered. In the financial services industry, for example, the recording of telephone calls between customers and agents is often necessary to ensure legal and regulatory compliance with securities laws and regulations, and to evaluate customer interactions for quality assurance purposes. In some cases, for example, a telephone conversation between a customer and an agent may need to be saved for later verification by a broker-dealer that the customer requested a particular trade or that the customer was properly informed of the risks associated with purchasing a particular investment. Other industries in which voice and data communications are routinely recorded include the healthcare industry, for documenting health advice or to resolve patient disputes, and in customer service centers for settling customer complaints and for training purposes.","The recording of voice communications over a Voice over Internet Protocol (VoIP) network is typically accomplished using a record server coupled to each agent's telephone, either directly via a built-in-bridge or indirectly through a router or gateway. In real-time applications, the voice communications to be recorded are often fed to the record server as a single stream of data packets using a standardized packet format such as Real-time Transport Protocol (RTP). Recording of telephone conversations can be done either automatically for each call received by the agent, or selectively upon the occurrence of a certain event or condition or by a manual request received from the agent or from another individual. In some customer service centers, for example, the recording of a telephone conversation between a customer and a customer service representative may be triggered manually by a request from the agent or automatically from a software application in response to an event such as a customer complaint. In some systems, multiple record servers may be employed in a VoIP environment to provide a level of redundancy or failover protection in the event one or more of the record servers fail, experiences an overflow error or becomes unstable, is taken off-line, or otherwise becomes incapable of recording the data stream.","The ability to recover from a failure during an in-session recording without compromising the recording or the overall efficiency of the system is often difficult in a multiple record server environment. Current recording schemes that utilize multiple record servers for recording call sessions are often inadequate in recovering from such failures, particularly where portions of each recorded call session are distributed across multiple record servers. Enterprise software applications that rely on the accurate recording of call sessions may invoke different business rules depending on whether the entire call session was recorded or whether portions of the recorded call session are missing. In some cases, it may be necessary for the enterprise software application to perform additional manipulation of recorded call sessions that may have experienced an error during the recording process. For example, if the recorded call session relates to a trade confirmation between a broker-dealer and a customer, the enterprise software application for the broker-dealer may implement a business rule that automatically deletes the recorded call session upon receiving notice that a failure in the recording may have occurred. Based on this notification, the broker-dealer application may then prompt the agent that handled the call to take further action with the customer to reconfirm the trade and\/or record the trade discussion.","The present invention pertains to devices, systems, and methods for recording call sessions over a Voice over Internet Protocol (VoIP) network using a distributed record server architecture. An illustrative recording device for recording segments of a call session includes a recording service configured to receive an agent voice data stream and an external caller voice data stream from an agent telephone station, and a file storage repository configured to store voice data and call data associated with each recorded segment of the call session. The recording device can be configured to tag recorded segments of the call session with a tag that indicates the status and integrity of the recorded call session. In certain embodiments, for example, the tag may comprise a parameter or field that is associated with each recorded segment. In use, the tags can be used by third-party applications (e.g., an enterprise software application) to perform additional steps related to those call sessions that may have experienced an error during the recording process.","An illustrative system for recording call sessions over a VoIP network includes at least one agent telephone station configured to record call sessions between an agent and one or more external callers on a telephone network (e.g., a PSTN), a plurality of record servers configured to record both agent voice data and external caller voice data from the agent telephone station, and a proxy server configured to selectively route the agent voice data and external caller voice data for each call session to one or more of the record servers. Each record server can include a recording service configured to tag recorded segments of a call session with an identifier such as a parameter or field indicating the recording state of the call session. In some embodiments, for example, the recording service may tag a recorded segment of a call session with a state field indicating that an upstream or downstream failure occurred during the recording, or that the recording did not complete normally. Each of the record servers can further include a file storage repository that stores voice data and call data associated with each recorded segment of the call session. In certain embodiments, one or more of the record servers can be configured to perform a segmentation synchronization routine that processes each of the tagged segments recorded across multiple record servers.","An illustrative method of recording call sessions over a VoIP network includes initiating the recording of a call session between an agent telephone station and an external caller and receiving an agent voice data stream and an external caller voice data stream from the station, prompting a plurality of recording devices to record segments of the call session, tagging each recorded segment of the call session with an identifier indicating the recording state of the call session, storing each recorded segment of the call session within a file storage repository, and gathering each of the tagged segments recorded on each of the recording devices and storing the segments as a single call session.","While multiple embodiments are disclosed, still other embodiments of the present invention will become apparent to those skilled in the art from the following detailed description, which shows and describes illustrative embodiments of the invention. Accordingly, the drawings and detailed description are to be regarded as illustrative in nature and not restrictive.","While the invention is amenable to various modifications and alternative forms, specific embodiments have been shown by way of example in the drawings and are described in detail below. The intention, however, is not to limit the invention to the particular embodiments described. On the contrary, the invention is intended to cover all modifications, equivalents, and alternatives falling within the scope of the invention as defined by the appended claims.",{"@attributes":{"id":"p-0020","num":"0019"},"figref":["FIG. 1","FIG. 1"],"b":["10","10","12","14","16","18","18","14","18","18","18","18","14","10","18","18","14","12"]},"A communications manager  is configured to send commands to the router or gateway  for routing external callers  to each agent telephone station . For a VoIP network operating on a PSTN network, for example, the communications manager  may communicate with the router or gateway  using a suitable protocol such as, for example, a Media Gateway Control Protocol (MGCP), which negotiates the voice data streams back and forth between the external caller  and the agent telephone station  as an end-point. In those embodiments in which audio-visual communications are to occur between the external caller  and agent telephone station , a suitable multimedia protocol such as H323 or the like may be used by the communications manager  to signal and control multimedia content between the external caller  and the agent telephone station .","In certain embodiments, the agent telephone station  may include a VoIP telephone having a built-in-bridge (BIB) feature that enables transmission of voice and\/or video streams to a record server , allowing the agent to initiate a recording session of a call with an external caller  directly from the agent telephone station . In some embodiments, for example, an agent may initiate a call session to be recorded by selecting a button or inputting a command to the agent telephone station . Alternatively, or in addition, the communications manager  may automatically initiate the recording of a call session with an external caller  based on a business rule or condition from a third-party application (e.g., an enterprise software application), or from a manual request made by an agent from another agent telephone station .","The record server  communicates with the communications manager  and each agent telephone station  within the system , and is configured to record voice and\/or data stream packets associated with both the agent voice stream  and the external caller voice stream  as separate streams during a recorded call session. The record server  includes a CTI\/SIP proxy service , a recording service , and a file storage repository . The CTI\/SIP proxy service  is an intermediate entity or interface that functions as both a server and a client for the purpose of making requests on behalf of the communications manager  and\/or the agent telephone station . During recording, the CTI\/SIP proxy service  is configured to facilitate communications between the communications manager  and the record server , including decisions on whether to feed RTP stream packets containing the agent voice stream  and external caller voice stream  to the record server . The CTI\/SIP proxy server  may comprise, for example, a software application and\/or hardware operable on the record server  that routes the RTP streams , from each agent telephone station  to the record server  and which manages Session Initiation Protocol (SIP) sessions between the record server  and the communications manager , or between the record server  and any third-party application(s)  and\/or storage area networks or network-attached storage devices  employed by the system .","The file storage repository  includes one or more permanent or temporary storage devices for storing voice data, and in some embodiments also video or screen capture data, in the record server . The file storage repository  may include, for example, one or more magnetic or optical storage devices for storing voice data as well as other call data associated with recorded call sessions. An example of call data that can be associated with each recorded call session can include service data point (SDP) information from the agent's telephone station  such as caller ID, directory number (DL), device name (e.g., MAC address), line display name, near-end\/far-end data, etc. Other information such as time\/date stamp information and metadata can also be associated with each recorded call session.","The data stored in the file storage repository  may be accessible by one or more third-party applications  via an application programming interface (API) of the recording service  and a database service . The third-party application or database  may comprise, for example, an enterprise software application that can access recorded call sessions stored in the file storage repository  for performing various tasks. In some embodiments, the third-party application or database  can be configured to access the file storage repository  to tag recorded call sessions to implement a specific retention policy, to move recorded call sessions to an alternative storage location such as a storage area network or network-attached storage device , to change the file format of recorded call sessions, etc. The third-party application or database  can also be used to playback recorded call sessions, to perform cleanup or archival services on the recorded call sessions, to authenticate recorded call sessions (e.g., using voice recognition verification), and\/or to search, export, or edit metadata or other information associated with the recorded call sessions. In some embodiments, the third-party application or database  may also include a file\/database repository  for storing copies of recorded call sessions as well as any information and\/or metadata associated with the call sessions.",{"@attributes":{"id":"p-0026","num":"0025"},"figref":["FIG. 2","FIG. 1"],"b":["42","10","42","44","18","14","20","14","18","20","34"]},"Upon receiving a recording request (block ), the communications manager  may send two call setup messages or commands to the agent telephone station  via a Session Initiated Protocol (SIP) request (block ), prompting the agent telephone station  to begin recording both the agent voice RTP stream  and the external caller  voice RTP stream components of the call session. To instigate the recording, the communications manager  may also send a message or command to the record server  (block ) via the CTI\/SIP proxy service , inviting the record server  to both voice RTP streams , via a SIP trunk.","The CTI\/SIP proxy service  then determines whether the record server  is available to record the call session (block ). If the record server  determines that it is not available to record the call session, the record server  may reject the invite from the communications manager , preventing the agent telephone station  from feeding the RTP streams , to that record server . If, for example, the record server  determines that it has reached a predetermined number of concurrent recording sessions, or has exceeded a certain performance threshold (e.g., CPU utilization, memory, Disk I\/O, etc.), the CTI\/SIP proxy service  may transmit a SIP message back to the communications manager  rejecting the invitation (block ). As discussed further herein, the communications manager , or another, external CTI\/SIP proxy service may then send a message to another, available record server within the system  to initiate recording of the call session.","If at block  the record server  is available for recording the call session, the record server  may accept both SIP messages with an affirmative SIP response back to the communications manager  (block ). The response can include, for example, service data point (SDP) information containing the IP destination address and port associated with the record server . The CTI\/SIP proxy service  then sets up the recording service  to receive each of the agent voice and external caller voice RTP streams , from the agent telephone station  (block ). In addition to the voice data transmitted, call data information associated with the agent telephone station  can also be fed to the record server  as a part of the RTP streams ,. Such information can include, for example, a SIP ACK message for acknowledging receipt of the received RTP streams , and\/or service data point (SDP) information from the agent telephone station  such as caller ID, directory number (DL), device name (e.g., MAC address), line display name, near-end\/far-end data, etc. Other information and metadata can also be provided to the record server .","In those embodiments in which the agent telephone station  further includes videoconferencing or screen capturing capabilities, the SIP response from the record server  may also prompt the agent telephone station  to feed video data to the record server  for recordation along with the voice data. If, for example, the agent telephone station  is equipped for videoconferencing with the external caller , the record server may transmit a SIP response to the agent telephone station  to prompt the agent telephone station  to provide video data to the record server  along with the voice RTP stream packets ,.","Upon receiving the agent and external caller RTP streams ,, the record server  is then configured to assimilate the call session (block ) from the agent telephone station  and store the data within the file storage repository . In some embodiments, additional information and\/or metadata related to each of the RTP streams , may also be assimilated, which as discussed further herein, may permit a third-party application or database  to later extract other information from the recorded call session, including the time and date of the call, whether the call session was halted or put on hold, whether the call session was completed normally, or whether an error or failure occurred during the recording such that only a portion of the call session was recorded. Once the recording of the call session is finished, the record server  may then store the completed recording within the file storage repository (block ).",{"@attributes":{"id":"p-0032","num":"0031"},"figref":["FIG. 3","FIG. 3"],"b":["62","64","28","66","68","62","64","66","68","64"]},"The CTI\/SIP server  is configured to facilitate routing of RTP streams , from each agent telephone station  to the record servers ,, including managing SIP sessions between the communications manager  and the record servers ,, communications back and forth between each of the record servers ,, and communications between the record servers , and any third-party applications or databases  and\/or storage area networks or network-attached storage devices  employed by the system . Each of the record servers , includes a corresponding recording service , and file storage repository ,, similar to the record server  of . The number of record servers , linked to the CTI\/SIP server  may be scalable depending on various infrastructure or business requirements such as storage capacity, high availability, or performance of the system . Thus, although only two record servers , are shown in , a greater number of record servers may be connected to the CTI\/SIP proxy server , if desired.","The CTI\/SIP proxy service  determines which record server or servers record the agent and external caller RTP streams , received from each agent telephone station  during a call session. This determination may be based on a number of factors, including whether a record server is currently on-line, is functioning properly or has an invalid state, or other such failover condition. The decision to route the RTP streams , to a record server can also be based on the current load on the record servers. In some embodiments, for example, the load on the record server can be determined by comparing the current operating state (e.g., CPU utilization, file storage availability, memory availability, disk I\/O) of the record server against a predetermined threshold value. If, for example, the current number of concurrent server-based recordings on a particular record server (e.g., record server ) exceeds a particular threshold value (e.g., ), the CTI\/SIP proxy service  may route the recording to another record server (e.g., record server ) that has not exceeded its maximum number of concurrent call session recordings. In certain embodiments, circular load balancing may be performed by the CTI\/SIP proxy service  to balance the load on each of the record servers , in order to optimize resource and storage utilization globally among all record servers , within the system .","In some embodiments, and as discussed further herein, the CTI\/SIP proxy service  can be configured to route the agent and external caller RTP streams , for a single call session to multiple record servers , in the event of a failover condition, or in order to load balance call sessions across the record servers ,. If, for example, the agent and external caller RTP streams , for a particular call session are currently being routed to a first record server (e.g., record server ) and the call is subsequently placed on a hold for a period of time causing an interruption in the recording, the CTI\/SIP proxy service  can be configured to reroute the RTP streams , to a second record server (e.g., record server ) upon the continuation of the call session based on the current demand placed on each of the record servers , at the time the call session is continued. In the event of a failover condition with one of the record servers ,, the CTI\/SIP proxy service  can also be configured to route the RTP streams , to another, operational record server ,. As a result of this load balancing and failover control scheme, the RTP streams , for each recorded call session may be distributed as partial call session segments across multiple record servers ,.","In certain embodiments, the communications manager  can also be configured to provide load balancing and failover control over multiple CTI\/SIP servers each connected to multiple record servers. In one such system  shown in , for example, the communications manager  may communicate with multiple CTI\/SIP servers , each including an associated CTI\/SIP proxy service , tasked to provide load balancing and failover control over multiple record servers , within the system . The communications manager  performs load balancing and failover control in the event one of the record servers , has reached a threshold or timeout condition, in the event all of the record servers , have reached a threshold or timeout condition, or in the event a SIP message response is not received from one or all of the CTI\/SIP servers ,. If, for example, one of the CTI\/SIP servers (e.g., server ) tasked to route RTP streams , to the record servers , unexpectedly fails, the communications manager  can be configured to task another, operable CTI\/SIP server (e.g., server ) to perform such task.","The communications manager  may also perform load balancing and failover control based on criteria outside of the record server infrastructure. In some embodiments, for example, the communications manager  may perform load balancing and failover control based on a set of business rules from a third-party application or database  connected to the record servers ,.",{"@attributes":{"id":"p-0038","num":"0037"},"figref":["FIG. 5","FIG. 3"],"b":["88","62","88","90","18","14","20","14","18","20","34"]},"Upon receiving a recording request, the communications manager  may send two call setup messages or commands to the agent telephone station  via a SIP request (block ), prompting the agent telephone station  to begin recording both the agent voice RTP stream  and the external caller voice RTP stream  components of the call session. To instigate the recording, the communications manager  also sends a message or command to one of the record servers , (block ) via the CTI\/SIP proxy service , inviting one of the record servers (e.g., record server ) to both RTP streams , via a SIP trunk. At block , the CTI\/SIP proxy service  determines whether the record server  is currently available to record the call session. If the record server  is available, the CTI\/SIP proxy service  may respond to both messages with an affirmative SIP response back to the communications manager  (block ). The affirmative SIP response can include service data point (SDP) information containing the IP destination address and port associated with that record server .","If at block  the record server  is not available to record the call session, the CTI\/SIP proxy service  may then determine whether another record server (e.g., record server ) is available (block ). If none of the record servers , within the system  are available, or if an overall threshold limit associated with all of the record servers , is exceeded, the CTI\/SIP proxy service  may reject the invite from the communications manager  via a SIP global response indicating that all record servers , are busy (block ). In some embodiments, the communications manager  may notify the agent and, in some cases, also prompt the agent to take further action with the caller. For example, if all record servers , are unavailable, the communications manager  may notify the agent that the call session is not being recorded, or may further connect the call session to another agent station (e.g., a supervisor or compliance manager) that can monitor the call. In some circumstances, the unavailability of all record servers , in the system  may prompt the communications manager  to disconnect the call or perform some other action. The particular action taken by the communications manager  in response to the unavailability of all record servers , will vary depending on the particular business rules programmed within the communications manager  or provided to the communications manager  from another application.","If at block , the CTI\/SIP proxy service  determines that another record server is available to record the call session, the proxy service  may transmit a SIP message back to the communications manager  redirecting the invitation (block ). The CTI\/SIP proxy service  may then reroute the call session to another record server (e.g., record server ) for recording the call session (block ).","Once a record server , is selected, the CTI\/SIP proxy service  then sets up the recording service , to receive each of the agent voice and external caller voice RTP streams , from the agent telephone station  (block ). In addition to the voice data transmitted, call data information associated with the agent telephone station  can also be provided to the record server , as part of the RTP streams ,. Such information can include, for example, a SIP ACK message for acknowledging receipt of the received RTP streams , and\/or service data point (SDP) information from the agent telephone station  such as caller ID, directory number (DL), device name (e.g., MAC address), line display name, near-end\/far-end, etc. Other information and metadata can also be provided to the record server ,. In those embodiments in which the agent telephone station  further includes videoconferencing or screen capturing capabilities, the SIP response from the record server , may also prompt the agent telephone station  to feed video or screen data to the record server , for recording along with the voice data.","The CTI\/SIP proxy service  is configured to load balance the recording of call sessions in a circular manner that distributes the recording load proportionately between all of the record servers , within the system . The CTI\/SIP proxy service  is also configured to weigh additional considerations related to the state or condition of each record server , in load balancing call sessions recorded by the record servers ,. In certain embodiments, for example, the CTI\/SIP proxy service  may determine the load on each of the record servers ,, and then route the RTP streams , to those record servers , that are underutilized. In some embodiments, for example, the CTI\/SIP proxy service  may reroute a call session to another record server based on the current operating state (e.g., CPU utilization, file storage availability, memory availability, disk I\/O) of the record server.","Upon receiving the agent and external caller RTP streams ,, each of the record servers , tasked to record the call session can be configured to assimilate the call session (block ) from the agent telephone station  and store the data within the file storage repositories ,. In some embodiments, additional information and\/or metadata related to each of the RTP streams , may also be assimilated to permit any third-party applications or databases  to later extract other information from the recorded call session. The call session or portions of the call session recorded by each of the record servers , may then be stored within the respective file storage repositories , (block ).","In some embodiments, one or more of the record servers , can be configured to perform a segmentation synchronization routine (block ) if, during the assimilation of the RTP streams , from the agent telephone station , an event occurs that interrupts the recording of the call session. An example of an event that may invoke the segmentation synchronization routine is a hold event during a call session, in which an agent temporarily suspends the call session by placing the external caller  on hold, or a transfer event where the external caller  is transferred to another agent telephone station  for the remainder of the call session. This may result in the CTI\/SIP proxy service  transmitting a SIP message to halt the record server currently recording the call session. Once the call session is resumed, the CTI\/SIP proxy server  may then reroute the RTP streams , to another available record server to balance the load globally across all record servers. This may result in the RTP streams , for each recorded call session being distributed across multiple record servers such that each record server tasked to record the call session contains only a portion or segment of the session.","A method of tagging or scoring each recorded segment to identify the state or integrity of a recorded call session can be employed to preserve the continuity of recorded call sessions as the RTP streams , are fed to multiple record servers ,. In certain embodiments, for example, each of the recorded segments can be associated with a number of different state fields used by the recording services , for tagging each of the recorded call segments and for evaluating the state or integrity of a recorded call session.","An illustrative method of tagging or scoring recorded segments of a call session can be further understood with respect to an illustrative call session depicted in .  may represent, for example, the recording of a call session between an agent telephone station  and an external caller  using the system  of . In the financial services context, for example, the call session being recorded may represent a phone conversation to be recorded between a broker-dealer agent and a customer in which the customer places a trade with the agent, and in which the agent places the caller on hold for a period of time during the course of the call session in order to review the caller's account information.","At time T, a request (indicated generally by arrow ) for recording a call session is instigated, prompting an available record server \u201cN\u201d (e.g., record server  of ) to begin recording the call session, as indicated generally at . At the start of the recording, the record server (N) may initially tag the recording session as being \u201cincomplete,\u201d indicating that the recording is ongoing and has not completed. In certain embodiments, for example, the \u201cincomplete\u201d state of the recording may be denoted by a state field of \u201c0\u201d set within the recording service for the record server (N). During recording, other information associated with the call session can also be obtained by the record server (N), including any call data information, encryption information, etc. The agent and external caller RTP stream packets are then recorded from time Tto time Tuntil, at such point, a call hold is requested at time Tto place the call on hold, as indicated generally at . The call hold request may be initiated, for example, by the agent in order to obtain more information about the external caller's account, or in order to transfer the call to another individual for servicing the call.","When a call hold request is received, the recording service is prompted to suspend recording of the call session, as indicated generally at . In some embodiments, the recording service is made aware of the call hold request via a CTI (e.g., JTAPI) event communicated from the communications manager  to the CTI\/SIP proxy server . In response to the call hold request , the recording service may tag the recorded call session segment  as \u201cpartial,\u201d indicating that the recorded call session includes multiple segments. The \u201cpartial\u201d state of the recorded call session can be designated, for example, by a state field of \u201c1\u201d set within the recording service for the record server (N).","The recording service may also designate the segment  of the recorded call session between time Tand Tas the first recorded segment of the call session. In certain embodiments, a segment number field of \u201c1\u201d is set within the recording service, indicating that the segment  between time Tand Tis a first segment of the recorded call session. The recording service may also set a total number of segments field to \u201c2,\u201d indicating that the recorded call session should include at least two segments in which the second segment has not occurred at this point in time.","At time T, the agent requests that the call be resumed, as indicated generally at . When a call resume request is received, the communications manager  notifies the CTI\/SIP proxy service  to continue recording the call session. The CTI\/SIP proxy service  then prompts an available record server within the network to continue recording a second segment  of the call session beginning at time T, as indicated generally at . In certain embodiments, and as discussed, for example, with respect to the method  of , the CTI\/SIP proxy service  can be configured to route the recording of the second segment  of the call session to a different record server (i.e., record server \u201cN+1\u201d) in order to balance the recording load of all call sessions across each of the record servers. If, for example, the record server (N) tasked to record the first segment  of the call session is currently experiencing a high demand, is off-line, or is otherwise unavailable, the CTI\/SIP proxy service  may route the recording of the second segment  to a different record server (N+1).","The CTI\/SIP proxy service  is then notified by the previous record server (N) or the communications manager  that the second segment  is not a new call session, but is instead a continuation of the call session. The communications manager  may accomplish this, for example, using the (Directory Number (DN) and line number information associated with the agent telephone station  and\/or the ending state of the last segment (e.g., that a hold and not a hang-up occurred). This interaction between the record servers and the CTI\/SIP proxy service helps to overcome those situations where agents share multiple lines and where one agent's session is resumed by another agent after a call is placed on hold.","The new record server (N+1) may then tag the call session as again being \u201cincomplete\u201d (e.g., by setting a state field within the recording service to \u201c0\u201d). During recording, other information associated with the second segment  of the call session can also be obtained by the record server (N+1), including any call data information, encryption information, etc. The agent and external caller RTP stream packets , are then recorded from time Tto time Tuntil, at such point, a call disconnect request is received, as indicated generally at . The record server is then notified via a SIP disconnect message from the communications manager  to stop recording the call session, as indicated generally at .","Once a SIP disconnect message is received, the record server (N+1) changes the state of the call session from \u201cincomplete\u201d to \u201cpartial,\u201d (e.g., by setting a state field within the record server to \u201c1\u201d). The recording service may set a segment number field of \u201c2\u201d indicating that the session  between time Tand Tis a second segment of the recorded call session. The recording service may also update the total number of call segments to \u201c2,\u201d thus identifying the second segment  as the final segment of the call session. At this point, the recorded call session comprises two segments , recorded across multiple record servers (N,N+1).","Each of the record servers (N,N+1) can be configured to automatically run a segmentation synchronization routine for tagging and gathering each of the recorded call session segments , distributed across each of the record servers tasked to record the call session. The segmentation synchronization routine can be run, for example, at particular time period(s) during the day, or in response to a request from the communications manager  and\/or a third-party application or database . In some embodiments, the segmentation synchronization routine is a service integrated with the record server. In one such embodiment, for example, the segmentation synchronization routine may be a part of the recording service for one or more of the record servers. In other embodiments, the segmentation synchronization routine is a stand-alone server and\/or service that communicates with all of the record servers.",{"@attributes":{"id":"p-0056","num":"0055"},"figref":["FIG. 7","FIG. 5"],"b":["136","136","114"]},"The segmentation synchronization routine  may begin at block , in which the recording service searches its own file storage repository for a call session segment corresponding to a recorded call session. The recording service may also query other record servers that may have recorded segments of the call session (block ). In the example call session recording of , for example, record server \u201cN\u201d may search its file storage repository for any recorded call session segments (e.g., the first segment ) as well as query the second record server \u201cN+1\u201d for any call session segments recorded on that server (e.g., the second segment ).","The recording service may then request a copy of each call session segment recorded on any other record server(s) tasked to record the call session (block ). With respect to the example call session of , for example, record server N may request a copy of the second recorded segment  as well as any call data information associated with that segment . The record server may then add this information to its file storage repository (block ). The record server (N) may then repeat the process for each additional call session segment until all segments are copied to the file storage repository for the record server (N). The record server (N) may then change the status of the recording session to \u201ccomplete,\u201d indicating that all call session segments have been copied.","In certain embodiments, the record servers are configured to maintain each of the recorded segments in their original storage location such that the recorded call session comprises a number of segmented call sessions spread across multiple record servers. The segmented recordings can then be later played back via a third-party application or database as separate segments or as a complete, continuous stream.","Once each of the recorded call session segments have been identified by the record server and copied, the record server may prompt the other record servers containing recorded call session segments to delete those segments (block ). With respect to the example of , for example, the first record server (N) tasked to record the first segment  of the call session may notify the second record server (N+1) tasked to record the second segment  to delete the second segment . Each notified record server may then change the status of each segment to \u201cdelete,\u201d thus tagging those segments for later deletion.","Each of the record servers can be configured to search for any call segments within its file storage repository tagged in a \u201cdelete\u201d state, and then automatically delete the tagged segments as well as any information associated with those segments (block ). The deletion of tagged call segments can be performed, for example, at particular time period(s) during the day, or in response to a request from the communications manager  and\/or a third-party application or database . If, for example, a segment is tagged for deletion, the record server can be configured to automatically delete the segment in response to a business rule from an enterprise software application that communicates with the record server.","In some embodiments, each record server, or alternatively another server or application linked to each record server, can be configured to perform an archiving or file transfer step (block ) that can be used to automatically copy or move any recorded call sessions tagged as \u201ccomplete\u201d to an alternative file storage location. In certain embodiments, for example, one of the record servers can be configured to automatically move any recorded call sessions tagged as \u201ccomplete\u201d to another file storage location (e.g., an external storage area network or network-attached storage device), and then permanently delete the recording at the original file storage location. In other embodiments, the step (block ) can include making an archival copy of any call sessions tagged as \u201ccomplete\u201d to provide a backup of the recording at an alternative file storage location. In still other embodiments, particular business rules can be invoked to determine whether a recorded call session is either permanently moved to another file storage location, or whether a backup copy is made at another file storage location.","At block , the recording state associated with the recorded call session may be changed depending on whether the recorded call session is being permanently moved or copied. If, for example, the recorded call session is to be copied, the recording state may be changed from a \u201ccomplete\u201d state to a \u201ccomplete-copy-pending\u201d state, indicating that the call session recording is complete and is in the process of being copied to another file storage location. The \u201ccomplete-copy-pending\u201d state of the recorded call session may be useful in the event an infrastructure failure occurs as the call session is being copied. If the call session is complete and a copy exists at another storage location, the recording state associated with the recorded call session may be changed from a \u201ccomplete-copy-pending\u201d state to \u201ccomplete-copy\u201d state, thus indicating that a copy of the recorded call session exists at another file storage location.","In similar fashion, if the recorded call session is to be permanently moved to another file storage location, the recording state may be changed from \u201ccomplete\u201d to \u201ccomplete-move-pending,\u201d indicating that the call session is complete and is in the process of being moved to another file storage location. Once moved, the recording state associated with the recorded call session may be changed from \u201ccomplete-move-pending\u201d to \u201ccomplete-move,\u201d indicating that the recorded call session has been successfully moved to another file storage location. The recorded call session remaining at the original file storage location may then be tagged \u201ccomplete-delete,\u201d indicating that the recorded call session is complete and can be deleted.","In the event of a failure during a recording session, the record server can be configured to preserve the status of the call session and any associated call information. Such failures can include failures upstream of the record server, including a failure in the voice router or gateway, SIP trunk, agent telephone station, or communications manager. An upstream failure may comprise, for example, those failures that occur outside of the scope of the record server infrastructure. An upstream failure may result in a call session recording prematurely terminating, or in a timeout condition occurring after a period of time in which the record server does not receive the agent and external caller RTP stream packets, as expected.","In some circumstances, a downstream failure may also occur with the record server infrastructure itself. A downstream failure may comprise, for example, a failure in the file system or with the storage device used to store recorded call sessions. Such an error may occur, for example, from the failure of a storage drive within the file storage repository.",{"@attributes":{"id":"p-0067","num":"0066"},"figref":["FIG. 8","FIG. 3","FIG. 8"],"b":["62","152","62","154","156"],"sub":["0","0 ","1","1 "]},"When a call hold request is received, the recording service is prompted to suspend recording of the call session, as indicated generally at . In some embodiments, the recording service is made aware of the call hold request via a CTI (e.g., JTAPI) event communicated from the communications manager  to the CTI\/SIP proxy server . In response to the call hold request, the recording service may tag the recorded call session segment  as \u201cpartial,\u201d indicating that the recorded call session includes multiple segments. The \u201cpartial\u201d state of the recorded call session can be designated, for example, by a state field of \u201c1\u201d set within the recording service for the record server (N).","The recording service may also designate the segment  of the recorded call session between time Tand Tas the first recorded segment of the call session. In certain embodiments, a segment number field of \u201c1\u201d is set within the recording service, indicating that the segment  between time Tand Tis a first segment of the recorded call session. The recording service may also set a total number of segments field to \u201c2,\u201d indicating that the recorded call session currently includes two total segments.","At time T, the agent requests that the call be resumed, as indicated generally at . When a call resume request is received, the communications manager  notifies the CTI\/SIP proxy service  to continue recording the call session. The CTI\/SIP proxy service then prompts an available record server within the network to continue recording a second segment  of the call session beginning at time T, as indicated generally at . In certain embodiments, and as discussed, for example, with respect to the method  of , the CTI\/SIP proxy service  can be configured to route the recording of the second segment  of the call session to a different record server (i.e., record server \u201cN+1\u201d) in order to balance the recording load of all call sessions across each of the record servers. The CTI\/SIP proxy service  is then notified by the previous record server (N) or the communications manager  that the second segment  is not a new call session, but is instead a continuation of the call session.","The new record server (N+1) may then tag the call session as again being \u201cincomplete\u201d (e.g., by setting a state field within the recoding service to \u201c0\u201d). During recording, other information associated with the second segment  of the call session can also be obtained by the record server (N+1), including any call data information, encryption information, etc. The agent and external caller RTP stream packets are then recorded beginning at time T, as indicated generally at .","At time T, and as indicated generally by arrow , an upstream failure occurs during the recording of the call session, causing the recording to prematurely terminate. An example of an upstream failure may comprise, for example, a failure in the router or gateway  used to route the caller to the agent's telephone station  during the course of the call. When an upstream failure occurs, the record server (N+1) can be prompted to discontinue recording the call session, as indicated generally at . In response to the failure, the record server (N+1) may then change the state of the recording from \u201cincomplete\u201d to \u201cpartial-external-error,\u201d indicating that an upstream failure outside of the control of the record server infrastructure has occurred. The \u201cpartial-external-error\u201d state may be represented within the recording service, for example by a state field set to \u201c3.\u201d The recording service may also set a segment number field to \u201c2,\u201d indicating that the session  between time Tand Tis a second segment of the call session. Other relevant information related to the call session segment (e.g., time\/date, length of segment, encryption information, etc.) may also be gathered by the recording service and stored in the file storage repository along with the segment . Additional error handling steps may be taken with respect to the recorded call segment. In some embodiments, for example, a business rule from a third-party application or database  may be implemented to provide monitoring and notification alerts to the agent telephone station  informing the agent that a failure in the call session recording has occurred, and in some cases, prompting further action by the agent.","A segmentation synchronization routine such as that discussed, for example, with respect to  may then be run to tag and gather call session segments recorded on each record server tasked to record the call session. If, as shown in , the failure occurs in recording a segment that is not the first segment  of the call session, the second segment  can be left in the \u201cpartial-external-error\u201d recording state, and the record server (N) containing the first segment  can be tasked to perform the segmentation synchronization process. The recording service may then query other record servers (i.e., record server \u201cN+1\u201d) that may have recorded segments of the call session. The recording service may then request a copy of each call session segment recorded on any other record server(s) tasked to record the call session. The record server (N) may then add this information to its file storage repository. The record server (N) may then repeat the process for each additional call session segment until all segments are copied to the file storage repository for the record server. The record server (N) may then change the state of the recording session to \u201ccomplete-external-error,\u201d indicating that all call session segments have been copied, but that an error in the recording occurred.","In certain embodiments, the recording infrastructure is configured to maintain each of the recorded call session segments in their original storage location such that the recorded call session comprises a number of segmented call sessions spread across multiple record servers. The segmented recordings can be later played back via a third-party application as separate segments, or as a complete stream.","Once each of the recorded call session segments have been identified, copied, or moved by the segmentation synchronization routine, the record server may then prompt the other record servers containing recorded call session segments to delete those segments.",{"@attributes":{"id":"p-0076","num":"0075"},"figref":["FIG. 9","FIG. 3","FIG. 9"],"b":["62","172","174"],"sub":"3 "},"Once the secondary record server (N+2) continues recording the call session, the record server (N+2) tags the segment  beginning at time Tas a third segment, and updates the recording state of that segment  with an initial state of \u201cpartial-internal-error-respondent,\u201d indicating that the recorded call session includes multiple segments and that an error occurred in the record server infrastructure. The \u201cpartial-internal-error-respondent\u201d state of the recorded call session can be designated, for example, by a state field of \u201c4\u201d set within the recording service for the record server (N+2). The secondary record server (N+2) may also increment the total number of call segments to \u201c3.\u201d","If at time Ta call disconnect request is received (indicated generally by arrow ) to end the call session normally (e.g., based on a hang up or an application request from a third-party application to stop the recording), the record server (N+2) then stops the recording (as indicated generally by arrow ), and the total number of segments field is updated accordingly. In the event the current segment  ends as a result of a hold or transfer request, thus resulting in further segmentation of the recorded call session, then the total number of segments fields would be incremented to the current segment number plus one. If the current call session ends as a result of an upstream failure condition, then the total number of segments field would not be updated, and the recording status of the call session would be changed to \u201cpartial-external-error-respondent,\u201d indicating that the call session includes multiple segments and that an upstream failure occurred that is outside of the control of the record server infrastructure.","A segmentation synchronization process such as that discussed, for example, with respect to  may then be run by the secondary record server (i.e., record server \u201cN+2\u201d) to tag and gather call session segments recorded on each record server (N,N+1,N+2) tasked to record the call session. The secondary record server (N+2) may attempt to copy each of the recorded segments and associated call information to its file storage repository, or alternatively, leave the recording as is in a \u201cpartial-internal-error-respondent\u201d state or a \u201cpartial-external-error-respondent\u201d state with no attempt made to copy each of the recorded segments. If the secondary record server (N+2) is configured to copy each of the recorded segments, the secondary record server (N+2) may then request a copy of each call session segment and associated call information recorded on any other record server(s) tasked to record the call session.","Once copying of the call session segments to the secondary record server (N+2) is complete, the secondary record server (N+2) may then change the state of the recorded call session to a \u201ccomplete-internal-error-respondent\u201d state, indicating that all call session segments have been copied but that a downstream failure occurred during the recording.","Once each of the recorded segments have been tagged by the secondary record server (N+2) and copied, the secondary record server (N+2) may prompt the other record servers containing recorded segments to delete those segments. With respect to , for example, the secondary record server (N+2) tasked to record the third segment  of the call session may notify the record servers (N,N+1) tasked to record the first and second segments , to delete those segments ,. Each notified record server (N,N+1) may then change the status of the segments to \u201cdelete-internal-error,\u201d thus tagging those segments for later deletion.","Each of the record servers can be configured to search for any call segments within its file storage repository tagged in a \u201cdelete-internal-error\u201d state, and then automatically delete the tagged segments as well as any information associated with those segments. The deletion of tagged segments can be performed, for example, at particular time period(s) during the day, or in response to a request from the communications manager  and\/or a third-party application or database . If, for example, a call session segment is tagged in a \u201cdelete-internal-error\u201d state, the record server can be configured to automatically delete the segment in response to a business rule from a third-party application that requires incomplete recordings be automatically deleted.","In some embodiments, each record server, or alternatively another server or application linked to each record server, can be configured to perform an archiving or file transfer step that can be used to automatically copy or move any segments tagged as complete to an alternative file storage location. In certain embodiments, for example, one of the record servers can be configured to automatically move any recorded call sessions tagged as \u201ccomplete-internal-error-respondent\u201d to another file storage location (e.g., an external storage area network or network-attached storage device), and then permanently delete the recording at the original file storage location. In other embodiments, an archival copy of any recorded segments tagged as \u201ccomplete-internal-error-respondent\u201d can be made, providing a backup copy of the recording at an alternative file storage location. In still other embodiments, particular business rules can be invoked to determine whether a recorded call session is either permanently moved to another file storage location, or whether a backup copy is made at another file storage location.","During the archiving or file transfer step, the recording state associated with the recorded call session may be changed depending on whether the recorded call session is being permanently moved or copied. If, for example, the recorded call session is to be copied, the recording state may be changed from a \u201ccomplete-internal-error-respondent\u201d state to a \u201ccomplete-IER-copy-pending\u201d state, indicating that the call session recording is complete, contains an error, and is in the process of being copied to another file storage location. If the call session is complete and a copy exists at another file storage location, the recording state associated with the recorded call session may be changed from \u201ccomplete-IER-copy-pending\u201d to \u201ccomplete-IER-copy,\u201d thus indicating that a copy of the recorded call session exists at another file storage location.","In similar fashion, if the recorded call session is to be permanently moved to another file storage location, the recording state may be changed from \u201ccomplete-internal-error-respondent\u201d to \u201ccomplete-IER-move-pending,\u201d indicating that the call session is complete, contains an error, and is in the process of being moved to another file storage location. Once moved, the recording state associated with the record call session may be changed from \u201ccomplete-IER-move-pending\u201d to \u201ccomplete-IER-move,\u201d thus indicating that the recorded call session has been moved to another file storage location. The recorded call session remaining at the original file storage location may be tagged \u201ccomplete-IER-delete,\u201d indicating that the recorded call session is complete and can be deleted.","The use of tags to indicate that a failure occurred during the recording and that a part of the voice stream data between the agent and the external caller may not have been fully recorded may permit a third-party application or database to differentiate those recorded call sessions that did not include a failure. In some embodiments, a third-party application or database may implement a different business rule with respect to a recorded call session that is tagged as possibly being incomplete. In the recording of conversations between broker-dealers and customers in the financial services industry, for example, the enterprise software application for the broker-dealer may implement a business rule to delete only those recorded call sessions that are tagged as being possibly incomplete. Another example business rule may be to prompt the agent, a supervisor, or a compliance manager to follow up with the customer in the event a recorded call session is tagged as being possibly incomplete.","Embodiments of the present invention may be provided as a computer program product, which may include a machine-readable medium having stored thereon instructions that may be used to program a computer (or other electronic devices) to perform a process. The machine-readable medium may include, but is not limited to, floppy diskettes, optical disks, compact disc read-only memories (CD-ROMs), and magneto-optical disks, ROMs, random access memories (RAMs), erasable programmable read-only memories (EPROMs), electrically erasable programmable read-only memories (EEPROMs), magnetic or optical cards, flash memory, or other types of media\/machine-readable medium suitable for storing electronic instructions.","Various modifications and additions can be made to the exemplary embodiments discussed without departing from the scope of the present invention. For example, while the embodiments described above refer to particular features, the scope of this invention also includes embodiments having different combinations of features and embodiments that do not include all of the described features. Accordingly, the scope of the present invention is intended to embrace all such alternatives, modifications, and variations as fall within the scope of the claims, together with all equivalents thereof."],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"BRIEF DESCRIPTION OF THE DRAWINGS","p":[{"@attributes":{"id":"p-0010","num":"0009"},"figref":"FIG. 1"},{"@attributes":{"id":"p-0011","num":"0010"},"figref":["FIG. 2","FIG. 1"]},{"@attributes":{"id":"p-0012","num":"0011"},"figref":"FIG. 3"},{"@attributes":{"id":"p-0013","num":"0012"},"figref":"FIG. 4"},{"@attributes":{"id":"p-0014","num":"0013"},"figref":["FIG. 5","FIG. 3"]},{"@attributes":{"id":"p-0015","num":"0014"},"figref":"FIG. 6"},{"@attributes":{"id":"p-0016","num":"0015"},"figref":"FIG. 7"},{"@attributes":{"id":"p-0017","num":"0016"},"figref":"FIG. 8"},{"@attributes":{"id":"p-0018","num":"0017"},"figref":"FIG. 9"}]},"DETDESC":[{},{}]}
