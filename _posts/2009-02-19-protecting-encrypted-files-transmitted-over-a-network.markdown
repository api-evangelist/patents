---
title: Protecting encrypted files transmitted over a network
abstract: An improved system and approaches for protecting secured files when being used by an application (e.g., network browser) that potentially transmits the files over a network to unknown external locations are disclosed. According to one aspect, access to secured files is restricted so that unsecured versions of the secured files are not able to be transmitted over a network (e.g., the Internet) to unauthorized destinations. In one embodiment, processes operating on a computer system are monitored to determine destination locations, if any, of said processes, and then using such destination locations to determine whether to permit the processes to open files in a secure or unsecured manner.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08307067&OS=08307067&RS=08307067
owner: Guardian Data Storage, LLC
number: 08307067
owner_city: Wilmington
owner_country: US
publication_date: 20090219
---

{"@attributes":{"id":"description"},"RELAPP":[{},{}],"heading":["CROSS-REFERENCE TO RELATED APPLICATIONS","BACKGROUND OF THE INVENTION","SUMMARY OF THE INVENTION","DETAILED DESCRIPTION OF THE INVENTION"],"p":["This application is a divisional of U.S. application Ser. No. 10\/242,185 filed Sep. 11, 2002, now U.S. Pat. No. 7,512,810, issued Mar. 31, 2009, which is incorporated by reference herein in its entirety.","U.S. application Ser. No. 10\/242,185 is related to U.S. patent application Ser. No. 10\/075,194, filed Feb. 12, 2002, and entitled \u201cSystem And Method For Providing Multi-Location Access Management To Secured Items,\u201d which is hereby incorporated by reference for all purposes.","1. Field of the Invention","The present invention relates to security systems for data and, more particularly, to security systems that protect data in an inter\/intra enterprise environment.","2. Description of Related Art","The Internet is the fastest growing telecommunications medium in history. This growth and the easy access it affords have significantly enhanced the opportunity to use advanced information technology for both the public and private sectors. It provides unprecedented opportunities for interaction and data sharing among businesses and individuals. However, the advantages provided by the Internet come with a significantly greater element of risk to the confidentiality and integrity of information. The Internet is an open, public and international network of interconnected computers and electronic devices. Without proper security measures, an unauthorized person or machine may intercept any information traveling across the Internet, and may even get access to proprietary information stored in computers that interconnect to the Internet but are otherwise generally inaccessible by the public.","There are many efforts in progress aimed at protecting proprietary information traveling across the Internet and controlling access to computers carrying the proprietary information. Cryptography allows people to carry over the confidence found in the physical world to the electronic world, thus allowing people to do business electronically without worries of deceit and deception. Every day hundreds of thousands of people interact electronically, whether it is through e-mail, e-commerce (business conducted over the Internet), ATM machines or cellular phones. The perpetual increase of information transmitted electronically has lead to an increased reliance on cryptography.","One of the ongoing efforts in protecting the proprietary information traveling across the Internet is to use one or more cryptographic techniques to secure a private communication session between two communicating computers on the Internet. Cryptographic techniques provide a way to transmit information across an unsecure communication channel without disclosing the contents of the information to anyone eavesdropping on the communication channel. An encryption process is a cryptographic technique whereby one party can protect the contents of data in transit from access by an unauthorized third party, yet the intended party can read the data using a corresponding decryption process.","Conventionally, network browsers (e.g., Internet or Windows browsers) are utilized to access content remotely located on the World Wide Web. In other words, with a network browser, a user can request a resource that is remotely located on a remote server coupled to the Internet. Alternatively, a network browser can be used to transmit a file to a remote server coupled to the Internet. Hence, network browsers are effective at allowing communications between network browsers and remote servers. Although network browsers greatly facilitate access to data, when network browsers are used on computing systems that utilize file security systems, network browsers present a security problem. More specifically, a network browser presents a security risk because it can transmit any of the files it accesses to a remote server (remote site). Hence, the security provided on secured files can be lost if unsecured versions of secured files are made available to network browsers. However, when the network browser merely desires access to the files for display or other non-transmission purposes, then the network browser does not present a security risk. Accordingly, if the network browser does intend to transmit a file to an unsecured remote server, then the security for the file as provided by the file security system is compromised.","Thus, there is an need for improved techniques to enable file security systems to permit the use of network browsers yet preserve the security on secured files.","The invention relates to improved approaches for protecting secured files when being used by an application (e.g., network browser) that is capable of transmitting the files over a network to unknown external locations.","One aspect of the invention pertains to restricting access to secured files so that unsecured versions of the secured files are not able to be transmitted over a network (e.g., the Internet) to unauthorized destinations. In one embodiment, in opening a file for use by a network browser, the network browser receives a secured (e.g., encrypted) version of the secured file when the destination location (e.g., destination address) for the network browser is not trusted, but receives an unsecured (e.g., unencrypted) version of the secured file when the destination location for the network browser is trusted. Another aspect of the invention pertains to monitoring processes operating on a computer system to determine destination locations, if any, of said processes, and then using such destination locations to determine whether to permit the processes to open files in a secure or unsecured manner.","The invention can be implemented in numerous ways, including as a method, system, device, and computer readable medium. Several embodiments of the invention are discussed below.","As a method for limiting access to a file stored in and secured by a file security system, one embodiment of the invention includes at least the acts of: receiving a request for access to a secured file, the request being initiated by a requester and being associated with a process associated with a computer system; determining whether the process is trusted by the file security system; determining whether the requestor is permitted to access an unsecured version of the secured file; and unsecuring the secured file to produce an unsecured file, thereby permitting access to the unsecured file only when the process is determined to be trusted and the requestor is determined to be permitted to access an unsecured version of the unsecured file.","As a method for limiting access to a file secured by a file security system, another embodiment of the invention includes at least the acts of: receiving a file open request to open a secured file, the request being initiated by a requester and being associated with a process associated with a computer system; determining whether the process is trusted by the file security system; determining whether the requestor has sufficient access privileges to open an unsecured version of the secured file; permitting the secured file to be opened for limited use by the requestor when the process is determined not to be trusted; and permitting the unsecured version of the secured file to be opened for use by the requestor when the process is trusted and the requestor has sufficient access privileges.","As a method for identifying a destination address being accessed by a window for a process operating on a computer system, one embodiment of the invention includes at least the acts of: determining a foreground window for the process, and examining a resource within the foreground window to determine a destination address that is being or is to be accessed by the process.","As a computer readable medium including at least computer program code for limiting access to a file secured by a file security system, one embodiment of the invention includes at least: computer program code for receiving a request for access to a secured file, the request being initiated by a requestor and being associated with a process associated with a computer system; computer program code for determining whether the process is trusted by the file security system; computer program code for determining whether the requestor is permitted to access an unsecured version of the secured file; and computer program code for unsecuring the secured file to produce an unsecured file, thereby permitting access to the unsecured file only when the process is determined to be trusted and the requestor is determined to be permitted to access an unsecured version of the unsecured file.","As a computer system providing file security, one embodiment of the invention includes at least an access control system that limits access to stored files based on at least access rules and trusted criteria, a process operating on the computer system, and a destination monitor that monitors an external destination of the process. The access control system permits access to the stored, secured files only when the access rules are satisfied and the process as well as the external destination satisfy the trusted criteria.","Other objects, features, and advantages of the present invention will become apparent upon examining the following detailed description of an embodiment thereof, taken in conjunction with the attached drawings.","The present invention relates to improved approaches for protecting secured files when being used by an application (e.g., network browser) that is capable of transmitting the files over a network to unknown external locations.","One aspect of the invention pertains to restricting access to secured files so that unsecured versions of the secured files are not able to be transmitted over a network (e.g., the Internet) to unauthorized destinations. In one embodiment, in opening a file for use by a network browser, the network browser receives a secured (e.g., encrypted) version of the secured file when the destination location (e.g., destination address) for the network browser is not trusted, but receives an unsecured (e.g., unencrypted) version of the secured file when the destination location for the network browser is trusted.","Another aspect of the invention pertains to monitoring processes operating on a computer system to determine destination locations, if any, of said processes, and then using such destination locations to determine whether to permit the processes to open files in a secure or unsecured manner.","Using the invention, a file security system can enforce the policy that a network browser never sends unsecured versions of secured files (e.g., decrypted files) to web-based email sites which are external destination locations that are unapproved (e.g., untrusted). On the other hand, the file security system is still able to send unsecured versions of the secured files to approved document management sites.","Secured files are files that require one or more keys, passwords, access privileges, etc. to gain access to their content. The security is often provided through encryption and access rules. The files, for example, can pertain to documents, multimedia files, data, executable code, images and text. In general, a secured file can only be accessed by authenticated users with appropriate access rights or privileges as compared to the access rules for the secured file. In one embodiment, each secured file is provided with a header portion and a data portion, where the header portion contains, or points to, security information. The security information is used to determine whether access to associated data portions of secured files is permitted.","As used herein, a user may mean a person, a software agent, a group of users, a member of the group, a device and\/or application. Besides a person who needs to access a secured document, a software application or agent sometimes needs to access secured files in order to proceed. Accordingly, unless specifically stated, the \u201cuser\u201d as used herein does not necessarily pertain to a human being.","In the following description, numerous specific details are set forth in order to provide a thorough understanding of the present invention. However, it will become obvious to those skilled in the art that the present invention may be practiced without these specific details. The description and representation herein may rely on the common meanings used by those experienced or skilled in the art to most effectively convey the substance of their work to others skilled in the art. In other instances, well-known methods, procedures, components, and circuitry have not been described in detail to avoid unnecessarily obscuring aspects of the present invention.","Reference herein to \u201cone embodiment\u201d or \u201can embodiment\u201d means that a particular feature, structure, or characteristic described in connection with the embodiment can be included in at least one embodiment of the invention. The appearances of the phrase \u201cin one embodiment\u201d in various places in the specification are not necessarily all referring to the same embodiment, nor are separate or alternative embodiments mutually exclusive of other embodiments. Further, the order of blocks in process flowcharts or diagrams representing one or more embodiments of the invention do not inherently indicate any particular order nor imply any limitations in the invention.","Embodiments of the present invention are discussed herein with reference to . However, those skilled in the art will readily appreciate that the detailed description given herein with respect to these figures is for explanatory purposes as the invention extends beyond these limited embodiments.",{"@attributes":{"id":"p-0037","num":"0036"},"figref":"FIG. 1","b":["100","100","102","100","102","104","102","106","108","108","102"]},"The file security system  can operate on a computing system. The computing system is typically a client machine, though it could also be coupled to and use resources of a server machine. An operating system of the computing device hosting at least a portion of the file security system  includes the access control system  and the local file storage  or an interface thereto in an operating system layer. The computing device also operates to execute one or more applications in an application layer. These applications execute one or more processes. As shown in , as a representative example, a browser process  and a non-browser process  are active within the application layer. The browser process  is produced by a network browser application, and the non-browser process  is produced by an application other than a network browser application. The browser process  produces a browser window A  and a browser window B . Typically, these browser windows  and  are displayed on a display device associated with the computing device. The browser window A  is deemed a foreground window as it is on top of and, in this case, overlaps a portion of the browser window . The non-browser process  produces a window A  and a window B . The window A  is deemed a foreground window as it is on top of and, in this example, overlaps a portion of the window B .","The browser process  and the non-browser process  can access secured files via the operating system. These secured files can be stored locally in the local file storage  or stored remotely in the remote file storage . As such, the access control system  needs to limit access to the secured files such that a process operating in the application layer is not able to transmit unsecured versions of the secured files to unauthorized external locations.","The file security system  includes an address identifier monitor . In general, an address identifier identifies a destination address and may, for example, be a Universal Resource Identifier (URI) or Universal Resource Locator (URL). To facilitate the description of the invention, the address identifier monitor  is also referred to herein as a URL monitor . The URL monitor  monitors each of the processes resident in the application layer, namely, in this example, the processes  and . The URL monitor  determines, for each process, a destination URL (i.e., an external destination) for the foreground window. For example, the URL monitor  would determine a destination URL for the browser window A  and would determine a destination URL for the window A . However, since the window A  is produced by the non-browser process , the URL monitoring performed by the URL monitor  would normally not identify a URL associated with the window A  because it is not associated with a network browser and thus would not be accessing a destination URL.","The access control system  can then determine whether or not to permit access to secured files by the processes operating on the application layer. For example, if the browser process  were to seek access to a secured file, the access control system  would determine not only whether the browser process  is permitted to gain access but also whether the URL associated with the browser window A  is a permissible destination. In one embodiment, the access control system  determines whether the browser process and its URL are both trusted. In one implementation, the access control system  can maintain a list or table of trusted processes and\/or URLs. Then, the access control system  can compare the browser process  and the URL associated with the browser window A , as determined by the URL monitor , to determine whether the browser process  is trusted at this time for access to the secured files. Thus, access control to secured files being requested by a process can be dependent on the URL (i.e., destination URL) associated with the process.","Accordingly, a network browser is able to send files to many different external sites. The file security system  operates to enforce whether or not these external sites are given an encrypted version of the file or a decrypted version of the file. The file security system  has the ability to detect whether the requestor is sending the file requested to a network browser, and if so, limiting the extent to which decrypted versions of the files are made available to the network browser.","As previously noted, the URL monitor  monitors each of the processes resident in the application layer to determine a destination URL, if any, for each process. Such monitoring can be performed in an active or passive manner. In the case of active monitoring, the URL monitor can periodically locate windows provided by an operating system and search through such windows for certain heuristics or attributes that would specify a URL associated with the window. For example, in the case of a network browser window (e.g., Internet Explorer), an address bar would typically appear towards the top portion of the content being displayed in the window.","In the case of passive monitoring, in one embodiment, a browser helper object (BHO) can be registered with the browser application, such as Internet Explorer from Microsoft Corporation. The browser helper object would then notify the URL monitor  each time the browser application goes to a new URL.","According to one embodiment, the access control system  can associate a given network browser process identifier (ID) with the URL that is currently being browsed by the process by determining which window is currently in the foreground, and if it is a browser window, which URL is being displayed. Such determination of the URL being browsed can be done with Application Programming Interfaces (APIs) provided in an operating system (e.g., Microsoft Windows XP) or through an active monitoring and evaluation technique.",{"@attributes":{"id":"p-0046","num":"0045"},"figref":["FIG. 2","FIG. 1"],"b":["200","200","102"]},"The file access processing  monitors  URL access by processes. The URL specifies a network address for an external server. For example, if a process associated with a network browser is browsing a URL, the monitoring operates to identify the URL. Next, a decision  determines whether a file access request has been received. When the decision  determines that a file access request has not been received, the file access processing  awaits such a request and may continue to monitor URL access by the processes such that the monitoring remains current.","When the decision  determines that a file access request has been received, a decision  determines whether the requesting process and its URL (obtained via monitoring) are authorized to access the requested file. When the decision  determines that the requesting process and its URL are authorized, then a decision  determines whether the requested file can be accessed given the access privileges of the requestor. According to one embodiment, the secured file is in a form including embedded access rules that control restrictive access to the secured file. Accordingly, in such an embodiment, the access rules are evaluated against the access privileges of the user. When the decision  determines that access rules have been satisfied, then access to an unsecured version of the secured file is permitted .","On the other hand, when the decision  determines that the requesting process and its URL are not authorized, or when the decision  determines that the access rules are not satisfied, then access to an unsecured version of the secured file is denied . Following the operations  and , the file access processing  is complete and ends.",{"@attributes":{"id":"p-0050","num":"0049"},"figref":["FIG. 3","FIG. 1"],"b":["300","300","102"]},"The file open processing  begins with a decision  that determines whether a file open request has been received. The file open request is provided or initiated by a requestor. The requester can be a user. When the decision  determines that a file open request has not yet been received, the file open processing  awaits such a request.","Once the decision  determines that a file open request has been received, then a decision  determines whether the file is secured. Typically, the file is secured through access rules as well as encryption of some or all of the file. When the file to be accessed is not secured, then the file open is permitted  and the file open processing  is completed. In this case, the file open is permitted without restriction because the file to be opened is not secured.","On the other hand, when the decision  determines that the file to be accessed is secured, then a decision  determines whether the process requesting the file is trusted. A process can be deemed trusted if the process itself is deemed trusted and\/or if an external destination (e.g., URL) of the process is trusted. When the decision  determines that the process requesting the file is not trusted, then the file open is permitted  but only with secured data. In other words, the file open is processed but the file is the secured file and thus the data remains secured (e.g., encrypted). After the file open has been permitted  with the secured data, the file open processing  is complete and ends.","Alternatively, when the decision  determines that the process requesting the file is trusted, then a decision  determines whether the requestor is permitted access to an unsecured version of the file. When the requester is permitted access to an unsecured version of the file, such as by satisfying access rules, an unsecured version of the file is produced . For example, when the file has been previously secured through encryption, the unsecured version of the file can be obtained by decryption of the file. Then, the file open is permitted  with the requestor receiving the unsecured version of the file. Following the operation , the file open processing  is complete and ends. On the other hand, when the decision  determines that the requestor is not permitted to access an unsecured version of the file, the file open is denied  and the file open processing  is complete and ends.","In the above embodiment, a file open request is either denied, permitted with secured data, or permitted with unsecured data. However, to receive the unsecured data, the process requesting the file must be trusted and the requestor must satisfy the access rules. Consequently, processes that are not trusted are not able to open files to gain access to unsecured data in the files.","In general, trusted evaluation processing determines whether a process requesting a secured file is trusted. The trusted evaluation processing can maintain a list of process identifiers (IDs) with current URLs. When one of these processes attempts to open a secured file (e.g., an encrypted file), the trusted evaluation processing makes a decision whether or not the process and\/or its current URL are trusted. Based on the trust determination, the secured file is made available to the process in its secured form if untrusted and in its unsecured form if trusted.",{"@attributes":{"id":"p-0057","num":"0056"},"figref":["FIG. 4","FIG. 3"],"b":["400","400","400","308"]},"The trusted evaluation processing  initially obtains  a process identifier for the process that is requesting access to a secured file. Then, using the process identifier, a process name and a current URL can be identified  for the process. In one embodiment, the process identifier is used to retrieve the associated process names and the current URL associated with the process, where the current URL was previously obtained by monitoring the process. A list of trusted processes and\/or URLs can also be retrieved . The list of trusted processes and\/or URLs can be predetermined, or determined in advance, of the operation . In one embodiment, a system administrator could have previously identified those processes and\/or URLs that are considered to be trusted. For example, a system administrator can configure a list of trusted processes and URLs that are to be deemed trusted.","A decision  then determines whether the process name is trusted. Here, the process name of the process requesting access to the secured file can be checked against the trusted processes within the list of trusted processes and\/or URLs. When the decision  determines that the process name is trusted, then a decision  can determine whether the URL is trusted. In performing the decision , the current URL associated with the process can be compared to the URLs within the list of trusted processes and\/or URLs. When the decision  determines that the URL is trusted, then the process is deemed  trusted for the URL. Alternatively, when the decision  determines that the process name is not trusted or when the decision  determines that the URL is not trusted, then the process is deemed  untrusted for the URL. Following the operations  and , the trusted evaluation processing  is complete and ends.","Note that, in this embodiment, a process is trusted if its process name can be trusted and if specific URLs can be trusted. Hence, with respect to a particular access request, a process may or may not be deemed trusted depending upon the URL associated with the process. In other words, in order to be trusted, both the process and the specific URLs must be trusted.","Further, the list of trusted processes and\/or URLs can be organized or arranged in a variety of different ways such that those processes and\/or URLs to be trusted are designated in a positive or negative sense. For example, the list of trusted processes and\/or URLs can contain those processes that are trusted or those processes that are untrusted. Likewise, the list can include those specific URLs that are untrusted or those specific URLs that are trusted.","In one embodiment, the processes being determined to be trusted or untrusted are network browsers. Note that the trusted evaluation processing  assumes (for security sake) that a network browser (or other process) is opening a file with the intent to transmit it to the site at the given URL; however, opening a file by a network browser does not necessitate its transmission to a remote site.",{"@attributes":{"id":"p-0063","num":"0062"},"figref":"FIG. 5","b":["500","500","502","500","504","501","502","504","501","502"]},"Secured files may be stored in either one of the devices , ,  and . It is assumed that the client machine  corresponds to a file security system  of . When a user of the client machine  attempts to send a secured file to a remote destination , one or more of the processing ,  and  discussed above are activated to ensure that the requested secured file is delivered without compromising the security imposed on the secured file.",{"@attributes":{"id":"p-0065","num":"0064"},"figref":"FIG. 6","b":["620","620","622","624","622","624","620","625","624","622","624","622","627","626","626"]},"The security information  can vary depending upon implementation. However, as shown in , the security information  includes a user identifier (ID) , access policy (access rules) , a file key  and other . Although multiple user identifiers may be used, a user identifier  is used to identify a user or a group that is permitted to access the data structure . The access rules  provide restrictive access to the encrypted data portion . The file key  is a cipher key that, once obtained, can be used to decrypt the encrypted data portion  and thus, in general, is protected. In one implementation of the structure , the file key  is encrypted in conjunction with the access rules . In another implementation of the structure , the file key  is double encrypted with a protection key and further protected by the access rules . The other  is an additional space for other information to be stored within the security information . For example, the other information  may be used to include other information facilitating secure access to the secured file, such as version number or author identifier.","The invention is preferably implemented by software or a combination of hardware and software, but can also be implemented in hardware. The invention can also be embodied as computer readable code on a computer readable medium. The computer readable medium is any data storage device that can store data which can thereafter be read by a computer system. Examples of the computer readable medium include read-only memory, random-access memory, CD-ROMs, DVDs, magnetic tape, and optical data storage devices. The computer readable medium can also be distributed over network-coupled computer systems so that the computer readable code is stored and executed in a distributed fashion.","The various embodiments, implementations and features of the invention noted above can be combined in various ways or used separately. Those skilled in the art will understand from the description that the invention can be equally applied to or used in other various different settings with respect to various combinations, embodiments, implementations or features provided in the description herein.","The advantages of the invention are numerous. Different embodiments or implementations may yield one or more of the following advantages. One advantage of the invention is that file security systems are able to protect secured files (e.g., documents) even when network browsers seek access to secured files. Another advantage of the invention is that a file security system can enforce the policy that a network browser never sends unsecured versions of secured files (e.g., decrypted files) to unapproved sites. For example, the policy could prevent a network browser from sending unsecured versions of secured files to web-based email sites which are external destination locations that are unapproved (e.g., untrusted), yet the file security system would still be able to send unsecured versions of the secured files to approved sites that are permitted to access the secured files. The approved sites may, for example, be used by those temporary consultants or tele-commuters for an enterprise.","The foregoing description of embodiments is illustrative of various aspects\/embodiments of the present invention. Various modifications to the present invention can be made to the preferred embodiments by those skilled in the art without departing from the true spirit and scope of the invention as defined by the appended claims. Accordingly, the scope of the present invention is defined by the appended claims rather than the foregoing description of embodiments."],"BRFSUM":[{},{}],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"BRIEF DESCRIPTION OF THE DRAWINGS","p":["The present invention will be readily understood by the following detailed description in conjunction with the accompanying drawings, wherein like reference numerals designate like structural elements, and in which:",{"@attributes":{"id":"p-0022","num":"0021"},"figref":"FIG. 1"},{"@attributes":{"id":"p-0023","num":"0022"},"figref":"FIG. 2"},{"@attributes":{"id":"p-0024","num":"0023"},"figref":"FIG. 3"},{"@attributes":{"id":"p-0025","num":"0024"},"figref":"FIG. 4"},{"@attributes":{"id":"p-0026","num":"0025"},"figref":"FIG. 5"},{"@attributes":{"id":"p-0027","num":"0026"},"figref":"FIG. 6"}]},"DETDESC":[{},{}]}
