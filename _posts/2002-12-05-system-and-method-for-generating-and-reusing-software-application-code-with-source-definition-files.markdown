---
title: System and method for generating and reusing software application code with source definition files
abstract: A system and method for generating code for an Enterprise Java Bean comprising generating at least one output based on a description of at least one Enterprise Java Bean, wherein the description is attended by at least one annotation. A system and method for generating an annotated description of an Enterprise Java Bean based on at least one input, wherein the description can be used to generate the at least one input.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=07707544&OS=07707544&RS=07707544
owner: Bea Systems, Inc.
number: 07707544
owner_city: Redwood Shores
owner_country: US
publication_date: 20021205
---

{"@attributes":{"id":"description"},"BRFSUM":[{},{}],"heading":["CROSS REFERENCES","COPYRIGHT NOTICE","FIELD OF THE DISCLOSURE","BACKGROUND","DETAILED DESCRIPTION"],"p":["The following related documents are hereby incorporated by reference in their entirety: BEAWLS\u00ae: ACWA(Release 7.0, Jun. 28, 2002); BEAWLS\u00ae: PWLEJB\u00ae (Release 7.0, Jun. 28, 2002); BEAWLS\u00ae: DWLSA(Release 7.0, Jun. 28, 2002); BEAWLS\u00ae: WLBOH(Release 7.0, Jun. 28, 2002); BEAWLS\u00ae: PWEBLXML (Release 7.0, Jun. 28, 2002); BEAWLS\u00ae: PWEBLWS(Release 7.0, Jun. 28, 2002); BEA WebLogic Server\u00ae: Programming WebLogic EJB\u00ae (Release 7.0, Jun. 28, 2002).","A portion of the disclosure of this patent document contains material which is subject to copyright protection. The copyright owner has no objection to the facsimile reproduction by anyone of the patent document or the patent disclosure, as it appears in the Patent and Trademark Office patent file or records, but otherwise reserves all copyright rights whatsoever.","The present invention disclosure relates to the field of automatic code generation, in particular, automatic generation of Enterprise Java\u2122 Bean source code files from an annotated class definition and the reverse.","Enterprise Java\u2122 Beans are reusable software components written in the Java\u2122 programming language. An Enterprise Java\u2122 Bean (EJB) is typically declared in a number of separate source files which define various aspects of the EJB, such as its class, interfaces and deployment behavior. Each time a modification is made to one EJB source file, the other associated EJB source files must also be modified accordingly. This activity is cumbersome and error prone, since the changes must be manually propagated to different files. What is needed is a way to generate source files for EJB's with minimal editing and duplication of information.","The invention is illustrated by way of example and not by way of limitation in the figures of the accompanying drawings in which like references indicate similar elements. It should be noted that references to \u201can\u201d or \u201cone\u201d embodiment in this disclosure are not necessarily to the same embodiment, and such references mean at least one.","In one embodiment, instead of having to edit and maintain several EJB files for each EJB (e.g., the bean class, remote and home classes, deployment descriptors, etc.), editing is limited to a single file that contains an annotated description of one or more EJB class definitions. EJB's are declared in the Java\u2122 programming language. The Java\u2122 programming language and run-time environment are available from Sun Microsystems, Inc., of Palo Alto, Calif. The annotated description file is processed in accordance to one embodiment and the EJB files required for deployment on a server are automatically generated. Annotations are directives that contain information needed to create an EJB's source files. In one embodiment, annotations are interspersed between Java\u2122 source code statements. In another embodiment, annotations are embedded in Java\u2122 comments. In yet another embodiment, an annotation is a Javadoc tag. Javadoc is the tool for generating source code documentation in hypertext markup language (\u201cHTML\u201d) format from tags embedded in Java\u2122 source code comments. Javadoc is available from Sun Microsystems, Inc. In another embodiment, annotations are provided separately from the description of one or more EJB classes. For example, annotations can be provided in a graphical user interface, a separate file, or created dynamically based on run-time properties a user has associated with an EJB.","In one embodiment, by way of example, annotations can take the form: @ejbgen-name [attribute[=expression]] . . . attribute[=expression]], where items in square brackets are optional arguments. Name can be the type of annotation and the optional attribute=expression list can be comprised of one or more attribute-expression pairs. In one embodiment, attribute is the name of a required or optional parameter associated with an annotation and the optional expression can be, for example, an infix, postfix or prefix expression that evaluates to a constant (e.g., a number or an alpha-numeric string). In another embodiment, an expression's operators can be arithmetic, logical and string-based. For example, the following Java\u2122 code segment has a comment block that contains three annotations:",{"@attributes":{"id":"p-0011","num":"0010"},"tables":{"@attributes":{"id":"TABLE-US-00001","num":"00001"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"21pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"196pt","align":"left"}}],"thead":{"row":{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"\/**"]},{"entry":[{},"\u2009* @ejbgen:cmp-field column = acct_id"]},{"entry":[{},"\u2009* @ejbgen:primkey-field"]},{"entry":[{},"\u2009* @ejbgen:remote-method transaction-attribute = Required"]},{"entry":[{},"\u2009*\/"]},{"entry":[{},"abstract public String getAccountId( );"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}]}}}}},"Conventionally, an EJB's abstract accessor methods define container-managed persistence (\u201cCMP\u201d) data fields of the same name. For example, in the code segment above, assuming the accessor method getAccountId( ) was an EJB method, a corresponding data field called \u201caccountId\u201d would be defined upon deployment of the EJB. In one embodiment, the annotation \u201c@ejbgen:cmp-field\u201d specifies that the Accountld CMP field will be stored in column named \u201cacct_id\u201d of a database upon deployment of the EJB. The annotation \u201c@ejbgen:primkey-field\u201d indicates that Accountld will be a primary key in the database. Finally, the annotation \u201c@ejbgen:remote-method\u201d specifies that transaction isolation is required for the method getAccountId( ). All three annotations can be considered method annotations since they come before the declaration of a method.",{"@attributes":{"id":"p-0013","num":"0012"},"figref":"FIG. 1","b":["1","2","1","1","1","1","2","2","4","1","2","1","4","4","4","1","4","2","1","1","5","5","5"]},"If the annotation and its arguments are proper, analyzer  evaluates any attribute-expression arguments provided. The can be done during the validation of each annotation, or in another embodiment, after all annotations have been verified. Values for variable names that occur in expressions are retrieved from variable library . In one embodiment, variable library  can be implemented in a similar fashion to annotation library . In a further embodiment, variable names can be constructed dynamically from expressions using string concatenation operators. In one embodiment, each attribute-expression is evaluated, comparing the value of the expression to permissible values allowed for a given attribute as dictated by annotation library . If an expression's value is out of range or erroneous, an error can be declared. In another embodiment, a suitable default value can be provided in place of the errant expression. The form of expressions can be, for example, infix, postfix and prefix. Means for parsing and evaluating such expressions are well known in the art. Based on the parsed annotations, code generator  emits the classes or files  necessary to deploy the EJB(s) described in annotated description .","In one embodiment, annotations can be described in terms of their attributes, their scope (e.g., class or method) and the type of EJB they are applicable to (e.g., message, stateless session, stateful session, entity, etc.). Annotations having class scope come before a class declaration and annotations having method scope come before a method declaration. Annotations can also be adjacent to or associated with other Java\u2122 elements such as fields or variables. In a further embodiment, and by way of illustration, annotations can be defined as in the following tables. The Annotation\/Attribute column contains the annotation name in the first row of each table and any associated attribute names in the subsequent rows. The Description column contains a description of the annotation or attribute. The For column indicates whether the annotation is applicable to a class or a method. Finally, the EJB Type column indicates the type of EJB the annotation is applicable to (e.g., session, message, entity, etc.). It will be apparent to those skilled in the art that many such annotations are possible and therefore this illustration is illustrative and should not be construed to be limiting in any respect.",{"@attributes":{"id":"p-0016","num":"0015"},"tables":{"@attributes":{"id":"TABLE-US-00002","num":"00002"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0","pgwide":"1"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"4"},"colspec":[{"@attributes":{"colname":"1","colwidth":"84pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"154pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"35pt","align":"left"}},{"@attributes":{"colname":"4","colwidth":"35pt","align":"left"}}],"thead":{"row":[{"entry":{"@attributes":{"namest":"1","nameend":"4","align":"center","rowsep":"1"}}},{"entry":[{},{},{},"EJB"]},{"entry":["Annotation\/Attribute","Description","For","Type"]},{"entry":{"@attributes":{"namest":"1","nameend":"4","align":"center","rowsep":"1"}}}]},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["@ejbgen:automatic-key-","Automatically generate database keys for new","Class","Entity"]},{"entry":["generation","entity objects."]},{"entry":["cache-size","The size of the key cache. (Required)"]},{"entry":["Name","The name of the key generator. (Required)"]},{"entry":["Type","The type of the key generator. (Required)"]},{"entry":["@ejbgen:cmp-field","Specifies a container-managed field.","Method","Entity"]},{"entry":["Column","The column where this CMP field will be mapped."]},{"entry":[{},"(Required)"]},{"entry":["column-type","(OracleClob|OracleBlob) The type of this column."]},{"entry":["group-names","The names of the groups this field belongs to,"]},{"entry":[{},"separated by commas."]},{"entry":["ordering-number","(0..n) The number where this field must"]},{"entry":[{},"appear in signatures and constructors. For this"]},{"entry":[{},"ordering to work, all CMR and CMP fields must"]},{"entry":[{},"have this attribute to a distinct numeric value."]},{"entry":["@ejbgen:cmr-field","Specifies a container-managed relationship.","Method","Entity"]},{"entry":["group-names","The names of the groups this field belongs to"]},{"entry":[{},"separated by commas."]},{"entry":["ordering-number","(0..n) The number where this field must"]},{"entry":[{},"appear in signatures and constructors. For this"]},{"entry":[{},"ordering to work, all CMR and CMP fields must"]},{"entry":[{},"have this attribute to a distinct numeric value."]},{"entry":["@ejbgen:create-default-","Automatically create required database tables.","Class","Entity"]},{"entry":"rdbms-tables"},{"entry":["@ejbgen:ejb-client-jar","Specify the name of the jar file to generate.","Class","All"]},{"entry":["file-name","The name of the client jar to generate. If more than"]},{"entry":[{},"one EJB's have this tag, only one of the specified"]},{"entry":[{},"jar files will be included in the deployment"]},{"entry":[{},"descriptor. (Required)"]},{"entry":["@ejbgen:ejb-local-ref","Declare a reference to an EJB that is in the same","Class","All"]},{"entry":[{},"container and EJB JAR file."]},{"entry":["Home","Logal class of the bean."]},{"entry":["jndi-name","The JNDI name of the reference."]},{"entry":["Link","Link of the bean."]},{"entry":["Local","Home class of the bean."]},{"entry":["Name","Name of the reference."]},{"entry":["Type","(Entity|Session)"]},{"entry":["@ejbgen:ejb-ref","Define a reference to another EJB within the","Class","All"]},{"entry":[{},"Java\u2009\u2122 Naming and Directory Interface (\u201cJNDI\u201d)"]},{"entry":[{},"Environment Naming Context (\u201cENC\u201d)."]},{"entry":["Home","Home class of the bean."]},{"entry":["jndi-name","The JNDI name of the reference."]},{"entry":["Link","Link of the bean."]},{"entry":["Name","Name of the reference."]},{"entry":["Remote","Remote class of the bean."]},{"entry":["Type","(Entity|Session)"]},{"entry":["@ejbgen:entity","Declare an entity bean.","Class","Entity"]},{"entry":["ejb-name","The name of this Entity bean. (Required)"]},{"entry":["prim-key-class","The Java\u2009\u2122 class of the primary key. In case of a"]},{"entry":[{},"compound primary key, this class will be"]},{"entry":[{},"generated. (Required)"]},{"entry":[{},"Sometimes, a simple (e.g. java.lang.String)"]},{"entry":[{},"primary key class will not be enough to identify an"]},{"entry":[{},"EJB uniquely. In such a case, a primary key is"]},{"entry":[{},"needed. A primary key is a custom Java class"]},{"entry":[{},"containing several fields. All of the fields together"]},{"entry":[{},"identify an EJB uniquely."]},{"entry":[{},"There are certain constraints associated with the"]},{"entry":[{},"compound primary key class (e.g it must be"]},{"entry":[{},"Serializable, implement hashCode( ), equals( ), etc.)."]},{"entry":[{},"A compound primary key class can contain fields"]},{"entry":[{},"that form a subset of the CMP fields of the EJB. In"]},{"entry":[{},"order to define a compound primary key class:"]},{"entry":[{},"Annotate each CMP field that should be part of the"]},{"entry":[{},"primary key class with @primkey-field."]},{"entry":["abstract-schema-name","The abstract schema name for this EJB. If not"]},{"entry":[{},"specified, the ejb-name value will be used."]},{"entry":["cache-between-","(True|False) Whether to cache the persistent data"]},{"entry":["transactions","of an entity bean across (between) transactions."]},{"entry":["check-exists-on-method","(True|False) Whether the container checks for the"]},{"entry":[{},"existence of a bean for each method call."]},{"entry":["concurrency-strategy","(Read Only|Exclusive|Database) Defines the"]},{"entry":[{},"concurrency strategy for this bean."]},{"entry":["data-source-name","The name of the data source (as it was declared in"]},{"entry":[{},"config.xml)."]},{"entry":["database-type","The type of the database."]},{"entry":["db-is-shared","(True|False) Whether the database is shared."]},{"entry":["default-transaction","The transaction attribute to be applied to all"]},{"entry":[{},"methods that do not have a more specific"]},{"entry":[{},"transaction attribute setting."]},{"entry":["delay-database-insert-","(ejb Create|ejbPost Create)"]},{"entry":"until"},{"entry":["delay-updates-until-end-","(True|False) Whether updates will be sent after the"]},{"entry":["of-tx","transaction has committed."]},{"entry":["enable-dynamic-queries","(True|False) Whether dynamic queries are enabled."]},{"entry":["finders-load-bean","(True|False) If this is set to True, the beans will"]},{"entry":[{},"immediately be loaded into the cache by the finder."]},{"entry":["home-call-router-class-","Class to be used for routing home method calls."]},{"entry":"name"},{"entry":["home-is-clusterable","(True|False) Whether this bean can be deployed"]},{"entry":[{},"from multiple servers in a cluster."]},{"entry":["home-load-algorithm","(Round|Robin|Random|WeightBased) The"]},{"entry":[{},"algorithm to use for load-balancing between"]},{"entry":[{},"replicas of this home."]},{"entry":["idle-timeout-seconds","Maximum duration an EJB should stay in the"]},{"entry":[{},"cache."]},{"entry":["invalidation-target","The ejb-name of a read-only Entity bean that"]},{"entry":[{},"should be invalidated when this Container-"]},{"entry":[{},"Managed Persistence Entity EJB has been"]},{"entry":[{},"modified."]},{"entry":["max-beans-in-cache","The maximum number of beans in the cache."]},{"entry":["Optimistic-column","The column that holds the time stamp for"]},{"entry":[{},"optimistic concurrency"]},{"entry":["persistence-type","(cmp|bmp) The type of this Entity bean (default:"]},{"entry":[{},"cmp)"]},{"entry":["prim-key-class-nogen","(True|False). If this keyword is specified, EJBGen"]},{"entry":[{},"will not generate the primary key class."]},{"entry":["read-timeout-seconds","The number of seconds between each ejbLoad( )"]},{"entry":[{},"call on a Read-Only Entity bean."]},{"entry":["reentrant","(True|False) Whether the class methods are"]},{"entry":[{},"reentrant."]},{"entry":["run-as","Specifies the role-name for this EJB."]},{"entry":["run-as identity-principal","The name of the principal in case the role maps to"]},{"entry":[{},"several principals."]},{"entry":["table-name","The name of the table this Entity bean is mapped"]},{"entry":[{},"to."]},{"entry":["trans-timeout-seconds","The transaction timeout (in seconds)."]},{"entry":["use-caller-identity","(True|False) Whether this EJB uses caller's"]},{"entry":[{},"identity."]},{"entry":["verify-columns","(Read|Modified|Version|Timestamp) How"]},{"entry":[{},"optimistic concurrency verifies that the columns"]},{"entry":[{},"modified during the transactions have not been"]},{"entry":[{},"modified."]},{"entry":["@ejbgen:env-entry","Declare an environment entry to be made available","Class","All"]},{"entry":[{},"through JNDI ENC."]},{"entry":["Name","The name of this environment entry. (Required)"]},{"entry":["Type","The Java type for this environment entry (must be"]},{"entry":[{},"fully qualified, even if java.lang). (Required)"]},{"entry":["Value","The value for this environment entry. (Required)"]},{"entry":["@ejbgen:file-generation","Control which files are generated.","Class","All"]},{"entry":["local-class","(True|False) Whether to generate the local"]},{"entry":[{},"interface for this EJB."]},{"entry":["local-home","(True|False) Whether to generate the local home"]},{"entry":[{},"interface for this EJB."]},{"entry":["pk-class","(True|False) Whether to generate the primary key"]},{"entry":[{},"class for this EJB."]},{"entry":["remote-class","(True|False) Whether to generate the remote"]},{"entry":[{},"interface for this EJB."]},{"entry":["remote-home","(True|False) Whether to generate the remote home"]},{"entry":[{},"interface for this EJB."]},{"entry":["value-class","(True|False) Whether to generate the value class"]},{"entry":[{},"for this EJB"]},{"entry":["@ejbgen:finder","Specify finder method attributes.","Class","Entity"]},{"entry":["caching-name","The name of an eager relationship caching."]},{"entry":["ejb-ql","The EJB QL request as it will appear in the"]},{"entry":[{},"deployment descriptor."]},{"entry":["group-name","Name of the group for the WebLogic query"]},{"entry":["include-updates","(True|False) Whether updates made during the"]},{"entry":[{},"current transaction must be reflected in the result"]},{"entry":[{},"of a query."]},{"entry":["isolation-level","The type of transaction isolation for this method."]},{"entry":["max-elements","The maximum number of elements that should be"]},{"entry":[{},"returned by a multi-valued query."]},{"entry":["Signature","It must match exactly the signature generated on"]},{"entry":[{},"the Home class."]},{"entry":["sql-select-distinct","(True|False) Whether the generated SQL"]},{"entry":[{},"\u2018SELECT\u2019 will contain a \u2018DISTINCT\u2019 qualifier."]},{"entry":["transaction-attribute","The transaction attribute for this local method. If"]},{"entry":[{},"not specified, the default transaction attribute will"]},{"entry":[{},"be used. Methods with this tag will be generated on"]},{"entry":[{},"the Local class."]},{"entry":["Weblogic-ejb-ql","The Weblogic EJB QL request as it will appear in"]},{"entry":[{},"the deployment descriptor."]},{"entry":["@ejbgen:foreign jms-","Specify the provider of a Java\u2009\u2122 Message Service","Class","Message-"]},{"entry":["provider","(\u201cJMS\u201d)",{},"Driven"]},{"entry":["connection-factory-jndi-","The connection factory JNDI name. (Required)"]},{"entry":"name"},{"entry":["initial context-factory","The initial JNDI context factory. (Required)"]},{"entry":["provider-url","The provider URL. (Required)"]},{"entry":["@ejbgen:isolation-","Specify transaction isolation level in the server.","Class","All"]},{"entry":"level pattern"},{"entry":["isolation-level","The isolation level for the methods specified in the"]},{"entry":[{},"pattern tag. (Required)"]},{"entry":["Pattern","The pattern that matches all methods that will"]},{"entry":[{},"receive this isolation level (e.g. \u201c*\u201d). (Required)"]},{"entry":["@ejbgen:jndi-name","Specify the JNDI name of this bean.","Class","All"]},{"entry":["Local","The local JNDI name of this EJB. If not specified,"]},{"entry":[{},"local interfaces will not be generated."]},{"entry":["Remote","The remote JNDI name of this EJB. If not"]},{"entry":[{},"specified, remote interfaces will not be generated."]},{"entry":["@ejbgen:local-home","Specify attributes of this local home method.","Method","Entity,"]},{"entry":["method",{},{},"Session"]},{"entry":["Roles","Comma-separated list of roles that are allowed to"]},{"entry":[{},"invoke this method."]},{"entry":["transaction-attribute","The transaction attribute for this local method. If"]},{"entry":[{},"not specified, the default transaction attribute will"]},{"entry":[{},"be used. Methods with this tag will be generated on"]},{"entry":[{},"the Local class."]},{"entry":["@ejbgen:local-method","Specify attributes of this local method.","Method","Entity,"]},{"entry":[{},{},{},"Session"]},{"entry":["isolation-level","The type of transaction isolation for this method."]},{"entry":["Roles","Comma-separated list of roles that are allowed to"]},{"entry":[{},"invoke this method."]},{"entry":["transaction-attribute","The transaction attribute for this local method. If"]},{"entry":[{},"not specified, the default transaction attribute will"]},{"entry":[{},"be used. Methods with this tag will be generated on"]},{"entry":[{},"the Local class."]},{"entry":["@ejbgen:message-driven","Declare a message-driven EJB.","Class","Message-"]},{"entry":[{},{},{},"Driven"]},{"entry":["destination-jndi-name","The JNDI name of the destination. (Required)"]},{"entry":["ejb-name","The name of this Message-Driven bean."]},{"entry":[{},"(Required)"]},{"entry":["acknowledge-mode","(auto-acknowledge-ok-acknowledge) The"]},{"entry":[{},"acknowledgement mode."]},{"entry":["default-transaction","The transaction attribute to be applied to all"]},{"entry":[{},"methods that do not have a more specific"]},{"entry":[{},"transaction attribute setting."]},{"entry":["destination-type","(javax.jms.Queue|javax.jms.Topic)."]},{"entry":["initial-beans-in-free-pool","The initial number of beans in the free pool."]},{"entry":["max-beans-in-free-pool","The maximum number of beans in the free pool."]},{"entry":["message-selector","The JMS message selector."]},{"entry":["run-as","Specifies the role-name for this EJB."]},{"entry":["run-as-identity-principal","The name of the principal in case the role maps to"]},{"entry":[{},"several principals."]},{"entry":["trans-timeout-seconds","The transaction timeout (in seconds)."]},{"entry":["transaction-type","(Bean|Container) Who manages the transactions"]},{"entry":[{},"for this EJB."]},{"entry":["use-caller-identity","(True|False) Whether this EJB uses caller's"]},{"entry":[{},"identity."]},{"entry":["@ejbgen:method-","Specify a permission pattern for this class.","Class","All"]},{"entry":"permission-pattern"},{"entry":["Pattern","The pattern that matches all methods that will"]},{"entry":[{},"receive this method permission (e.g. \u201c*\u201d)."]},{"entry":["Roles","The roles for the methods specified in the pattern"]},{"entry":[{},"tag. Separated by a comma."]},{"entry":["@ejbgen:primkey-field","Specify the primary key field for an entity bean.","Method","Entity"]},{"entry":["@ejbgen:relation","Specify an entity bean relationship.","Class","Entity"]},{"entry":[{},"Unidirectional relationships are achieved by"]},{"entry":[{},"specifying only the first three parameters (i.e, no"]},{"entry":[{},"cmr-field, no fk-column, no joint-table)."]},{"entry":["multiplicity","Many to many relationships must specify an extra"]},{"entry":[{},"table (\u201cjoint-table\u201d) which must contain at least"]},{"entry":[{},"two columns. The names of these columns must"]},{"entry":[{},"match the names of the columns containing the"]},{"entry":[{},"foreign keys of the two EJB's being joined."]},{"entry":[{},"(one|many) Specifies the multiplicity of the"]},{"entry":[{},"relationship. (Required)"]},{"entry":["Name","The name of the relationship. Use the same name"]},{"entry":[{},"on both ends of a relationship for the roles to be"]},{"entry":[{},"generated properly (note that this constraint applies"]},{"entry":[{},"to unidirectional as well). (Required)"]},{"entry":["target-ejb","The EJB name of the target of this relationship."]},{"entry":[{},"(Required)"]},{"entry":["cascade-delete","(True|False)"]},{"entry":["cmr-field","The CMR field where this relationship will be"]},{"entry":[{},"kept. If it not specified, the relationship is"]},{"entry":[{},"unidirectional. If specified, the attribute fk-column"]},{"entry":[{},"must be specified as well."]},{"entry":["db-cascade-delete","(True|False) Whether a cascade delete will use the"]},{"entry":[{},"built-in cascade delete facilities of the underlying"]},{"entry":[{},"database."]},{"entry":["fk-column","Only needed in a relationship having at least one"]},{"entry":[{},"side. In that case, the non-one side EJB must"]},{"entry":[{},"declare a column that it will use to store the"]},{"entry":[{},"primary key of its counterpart."]},{"entry":["joint-table","Only needed in a Many-Many relationship. It must"]},{"entry":[{},"be the name of an existing table that will be used to"]},{"entry":[{},"hold the joint table containing the relationships. If"]},{"entry":[{},"using a compound primary key, specify a set of"]},{"entry":[{},"corresponding foreign keys separated by commas."]},{"entry":["role-name","The name of this role (such as"]},{"entry":[{},"\u201cParentHasChildren\u201d). If no role name is given,"]},{"entry":[{},"will generate one."]},{"entry":["@ejbgen:relationship-","Specify cache information for relationship.","Class","Entity"]},{"entry":"caching-element"},{"entry":["caching-name","The name of an eager relationship cashing."]},{"entry":[{},"(Required)"]},{"entry":["cmr-field","The name of the CMR field. (Required)"]},{"entry":["group-name","The name of the group to be loaded for the CMR"]},{"entry":[{},"field."]},{"entry":["@ejbgen:remote-home-","Specify roles allowed to invoke this home method.","Method","Entity,"]},{"entry":["method",{},{},"Session"]},{"entry":[{},"The method name must start with \u201cejbHome\u201d."]},{"entry":[{},"Note: Home Methods do not apply to message"]},{"entry":[{},"EJB's Beans. The \u201cthrows RemoteException\u201d in"]},{"entry":[{},"the EJB class will be automatically generated in"]},{"entry":[{},"the home class."]},{"entry":["Roles","Comma-separated list of roles that are allowed to"]},{"entry":[{},"invoke this method."]},{"entry":["transaction-attribute","The transaction attribute for this remote method. If"]},{"entry":[{},"not specified, the default transaction attribute will"]},{"entry":[{},"be used. Methods with this tag will be generated on"]},{"entry":[{},"the Remote class."]},{"entry":["@ejbgen:remote-method","Specify a method available in a remote interface.","Method","Entity,"]},{"entry":[{},{},{},"Session"]},{"entry":["isolation-level","The type of transaction isolation for this method."]},{"entry":["Roles","Comma-separated list of roles that are allowed to"]},{"entry":[{},"invoke this method."]},{"entry":["transaction-attribute","The transaction attribute for this remote method. If"]},{"entry":[{},"not specified, the default transaction attribute will"]},{"entry":[{},"be used. Methods with this tag will be generated on"]},{"entry":[{},"the Remote class."]},{"entry":["@ejbgen:resource-","Specify the name of a resource environment","Class","All"]},{"entry":["env-ref","reference. (Required)"]},{"entry":["Name","Name of the resource environment reference."]},{"entry":[{},"(Required)"]},{"entry":["Type","Type of the environment resource references (e.g."]},{"entry":[{},"javax.jms.Queue). (Required)"]},{"entry":["jndi-name","JNDI name of the resource."]},{"entry":["@ejbgen:resource-ref","Specify the JNDI name of a resource.","Class","All"]},{"entry":["Auth","(Application|Container) (Required)"]},{"entry":["jndi-name","JNDI name of the resource. (Required)"]},{"entry":["Name","Name of the resource. (Required)"]},{"entry":["Type","Tyoe of the resource (e.g. javax.sql.DataSource)."]},{"entry":[{},"(Required)"]},{"entry":["sharing-scope","(Shareable|Unshareable)"]},{"entry":["@ejbgen:role-mapping","Specify roles.","Class","All"]},{"entry":["Principals","The names of the principals in this role (separated"]},{"entry":[{},"by commas). (Required)"]},{"entry":["role-name","The name of the role. (Required)"]},{"entry":["@ejbgen:select","Specify attributes of select method.","Method","Entity"]},{"entry":["ejb-ql","The EJB-QL defining this select method. Note: the"]},{"entry":[{},"method name must start with ejbSelect. (Required)"]},{"entry":["caching-name","The name of an eager relationship caching."]},{"entry":["group-name","Name of the group for the WebLogic query."]},{"entry":["include-updates","(True|False) Whether updates made during the"]},{"entry":[{},"current transaction must be reflected in the result"]},{"entry":[{},"of a query."]},{"entry":["max-elements","The maximum number of elements that should be"]},{"entry":[{},"returned by a multi-valued query."]},{"entry":["result-type-mapping","(Remote|Local) Whether the returned objects are"]},{"entry":[{},"mapped to EJBLocalObject or EJBObject."]},{"entry":["sql-select-distinct","(True|False) Whether the generated SQL"]},{"entry":[{},"\u2018SELECT\u2019 will contain a \u2018DISTINCT\u2019 qualifier."]},{"entry":["Weblogic-ejb-ql","The Weblogic EJB QL request as it will appear in"]},{"entry":[{},"the deployment descriptor."]},{"entry":["@ejbgen:session","Declare a session bean.","Class","Session"]},{"entry":["ejb-name","The name of this Session bean. (Required)"]},{"entry":["bean-load-algorithm","The algorithm to use for load-balancing between"]},{"entry":[{},"replicas of this bean."]},{"entry":["call-router-class-name","Class name to be used for routing home method"]},{"entry":[{},"calls"]},{"entry":["default-transaction","The transaction attribute to be applied to all"]},{"entry":[{},"methods that do not have a more specific"]},{"entry":[{},"transaction attribute setting."]},{"entry":["home-call-router-class-","Class to be used for routing home method calls."]},{"entry":"name"},{"entry":["home-is-clusterable","(True|False) Whether this bean can be deployed"]},{"entry":[{},"from multiple servers in a cluster."]},{"entry":["home-load-algorithm","(RoundRobin|Random|WeightBased) The"]},{"entry":[{},"algorithm to use for load-balancing between"]},{"entry":[{},"replicas of this home."]},{"entry":["idle-timeout-seconds","Maximum duration an EJB should stay in the"]},{"entry":[{},"cache"]},{"entry":["initial-beans-in-free-pool","The initial number of beans in the free pool."]},{"entry":["is-clusterable","(True|False) Whether this bean is cluster-able."]},{"entry":["load-algorithm","(RoundRobin|Random|WeightBased) The name of"]},{"entry":[{},"the algorithm used to balance replicas of this"]},{"entry":[{},"home."]},{"entry":["max-beans-in-cache","The maximum number of beans in the cache."]},{"entry":["max-beans-in-free-pool","The maximum number of beans in the free pool."]},{"entry":["methods-are-idempotent","(True|False) Whether the methods for this stateless"]},{"entry":[{},"session bean are idem potent or not."]},{"entry":["replication-type","(InMemory|None) How to replicate stateful session"]},{"entry":[{},"beans in a cluster."]},{"entry":["run-as","Specifies the role-name for this EJB."]},{"entry":["run-as-identity-principal","The name of the principal in case the role maps to"]},{"entry":[{},"several principals."]},{"entry":["trans-timeout-seconds","The transaction timeout (in seconds)."]},{"entry":["transaction-type","(Bean|Counter) Who manages the transactions for"]},{"entry":[{},"this EJB."]},{"entry":["Type","(Stateless|Stateful) The type of the Session bean. If"]},{"entry":[{},"this attribute is not specified, EJBGen will guess"]},{"entry":[{},"the right type by looking at the ejbCreate( )"]},{"entry":[{},"methods on the class."]},{"entry":["use-caller-identity","(True|False) Whether this EJB uses caller's"]},{"entry":[{},"identity."]},{"entry":["@ejbgen:value-object","Specify objects to be referenced by the value","Class","All"]},{"entry":[{},"object class."]},{"entry":["Reference","(Local|Value) Specify what objects the value"]},{"entry":[{},"object class should reference when accessing other"]},{"entry":[{},"EJB's. (Required)"]},{"entry":{"@attributes":{"namest":"1","nameend":"4","align":"center","rowsep":"1"}}}]}}}}},"In one embodiment, by way of example, the following class annotations accompany a Java\u2122 code fragment that declares a stateless session EJB \u201cTrader\u201d having a JNDI name of \u201cejb20-statelessSession-TraderHome\u201d, and an environment variable \u201ctradeLimit\u201d with a default value of 500.",{"@attributes":{"id":"p-0018","num":"0017"},"tables":{"@attributes":{"id":"TABLE-US-00003","num":"00003"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"35pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"182pt","align":"left"}}],"thead":{"row":{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"\/**"]},{"entry":[{},"\u2009* @ejbgen:session"]},{"entry":[{},"\u2009* \u2003ejb-name = statelessSession"]},{"entry":[{},"\u2009* \u2003max-beans-in-free-pool = 100"]},{"entry":[{},"\u2009* \u2003is-clusterable = false"]},{"entry":[{},"\u2009* \u2003load-algorithm = Random"]},{"entry":[{},"\u2009*"]},{"entry":[{},"\u2009* @ejbgen:jndi-name"]},{"entry":[{},"\u2009* \u2003remote = ejb20-statelessSession-TraderHome"]},{"entry":[{},"\u2009*"]},{"entry":[{},"\u2009* @ejbgen:env-entry"]},{"entry":[{},"\u2009* \u2002name = tradeLimit"]},{"entry":[{},"\u2009* \u2002type = java.lang.Integer"]},{"entry":[{},"\u2009* \u2002value = 500"]},{"entry":[{},"\u2009*"]},{"entry":[{},"\u2009*\/"]},{"entry":[{},"public class TraderEJB implements SessionBean {"]},{"entry":[{},"\u2003private static final boolean VERBOSE = true;"]},{"entry":[{},"\u2003private SessionContext ctx;"]},{"entry":[{},"\u2003private int tradeLimit;"]},{"entry":[{},"\u2003ejbCreate( ) ;"]},{"entry":[{},". . ."]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}]}}}}},"The type of session EJB (e.g., stateful or stateless) can be automatically determined. For example, if there is an ejbCreate( ) method having a non-empty parameter list, the EJB is stateful. Otherwise, the EJB is stateless. Two methods associated with this EJB are declared below with method annotations indicating that they are available through a remote interface (i.e., to clients residing outside of the Java\u2122 application server in which this EJB is deployed). Notice that both methods make use of the environment variable \u201ctradeLimit\u201d which was declared in the class annotation.",{"@attributes":{"id":"p-0020","num":"0019"},"tables":{"@attributes":{"id":"TABLE-US-00004","num":"00004"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"21pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"196pt","align":"left"}}],"thead":{"row":{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"\u2003\/**"]},{"entry":[{},"\u2003\u2009* \u2003Buys shares of a stock for a named customer."]},{"entry":[{},"\u2003\u2009*"]},{"entry":[{},"\u2003\u2009* \u2003@ejbgen:remote-method"]},{"entry":[{},"\u2003\u2009*\/"]},{"entry":[{},"\u2003public TradeResult buy(String stockSymbol, int shares) {"]},{"entry":[{},"\u2003\u2003if (shares > tradeLimit) {"]},{"entry":[{},"\u2003\u2003\u2003log(\u201cAttempt to buy \u201c+shares+\u201d is greater than limit of"]},{"entry":[{},"\u201d+tradeLimit);"]},{"entry":[{},"\u2003\u2003\u2003shares = tradeLimit;"]},{"entry":[{},"\u2003\u2003}"]},{"entry":[{},"\u2003log(\u201cBuying \u201c+shares+\u201d shares of \u201d+stockSymbol);"]},{"entry":[{},"\u2003return new TradeResult(shares, stockSymbol);"]},{"entry":[{},"\u2003}"]},{"entry":[{},"\u2003\/**"]},{"entry":[{},"\u2003\u2009* \u2003Sells shares of a stock for a named customer."]},{"entry":[{},"\u2003\u2009*"]},{"entry":[{},"\u2003\u2009* \u2003@ejbgen:remote-method"]},{"entry":[{},"\u2003\u2009*"]},{"entry":[{},"\u2003\u2009*\/"]},{"entry":[{},"\u2003public TradeResult sell(String stockSymbol, int shares) {"]},{"entry":[{},"\u2003\u2003if (shares > tradeLimit) {"]},{"entry":[{},"\u2003\u2003\u2003log(\u201cAttempt to sell \u201c+shares+\u201d is greater than limit of"]},{"entry":[{},"\u201d+tradeLimit);"]},{"entry":[{},"\u2003\u2003\u2003shares = tradeLimit;"]},{"entry":[{},"\u2003\u2003}"]},{"entry":[{},"\u2003\u2003log(\u201cSelling \u201c+shares+\u201d shares of \u201d+stockSymbol);"]},{"entry":[{},"\u2003\u2003return new TradeResult(shares, stockSymbol);"]},{"entry":[{},"\u2003}"]},{"entry":[{},"}"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}]}}}}},"The @ejbgen:remote-method annotation indicates that a method will be available in a remote interface. A remote interface declares an EJB's methods that are accessible to applications outside of an EJB's container. Two Java\u2122 files and two deployment descriptors are automatically generated in accordance to an embodiment based on the code fragment above:",{"@attributes":{"id":"p-0022","num":"0021"},"tables":{"@attributes":{"id":"TABLE-US-00005","num":"00005"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"175pt","align":"left"}}],"thead":{"row":[{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}},{"entry":["File Name","Contents"]},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}}]},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["TraderHome","import javax.ejb.CreateException;"]},{"entry":[".java","import javax.ejb.EJBHome;"]},{"entry":["Home","import javax.ejb.FinderException;"]},{"entry":["Interface","import java.rmi.RemoteException;"]},{"entry":[{},"import java.util.Collection;"]},{"entry":[{},"public interface TraderHome extends EJBHome {"]},{"entry":[{},"\u2003public Trader create( ) \u2003\u2003throws CreateException,"]},{"entry":[{},"RemoteException, CreateException;"]},{"entry":[{},"}"]},{"entry":["Trader.java","import java.rmi.RemoteException;"]},{"entry":["Remote","import javax.ejb.EJBObject;"]},{"entry":["Interface","public interface Trader extends EJBObject {"]},{"entry":[{},"\u2003public TradeResult buy(String stockSymbol, int"]},{"entry":[{},"shares) \u2003throws RemoteException;"]},{"entry":[{},"\u2003\u2002public TradeResult sell (String stockSymbol, int"]},{"entry":[{},"shares) \u2003\u2003throws RemoteException;"]},{"entry":[{},"}"]},{"entry":["ejb-jar.xml","<ejb-jar>"]},{"entry":["EJB","\u2003<enterprise-beans>"]},{"entry":["Deployment","\u2003\u2003<session>"]},{"entry":["Descriptor","\u2003\u2003\u2003<ejb-name>statelessSession<\/ejb-name>"]},{"entry":[{},"<home>examples.ejb20.basic.statelessSession."]},{"entry":[{},"TraderHome<\/home>"]},{"entry":[{},"<remote>examples.ejb20.basic.statelessSession."]},{"entry":[{},"Trader<\/remote>"]},{"entry":[{},"\u2003\u2003\u2003<ejb-"]},{"entry":[{},"class>examples.ejb20.basic.statelessSession.TraderEJB<\/"]},{"entry":[{},"ejb-class>"]},{"entry":[{},"\u2003\u2003\u2003<session-type>Stateless<\/session-type>"]},{"entry":[{},"\u2003\u2003\u2003<transaction-type>Container<\/transaction-type>"]},{"entry":[{},"\u2003\u2003\u2003<env-entry>"]},{"entry":[{},"\u2003\u2003\u2003\u2003<env-entry-name>INTL<\/env-entry-name>"]},{"entry":[{},"\u2003\u2003\u2003\u2003<env-entry-type>java.lang.Double<\/env-entry-"]},{"entry":[{},"type>"]},{"entry":[{},"\u2003\u2003\u2003\u2003<env-entry-value>15.0<\/env-entry-value>"]},{"entry":[{},"\u2003\u2003\u2003<\/env-entry>"]},{"entry":[{},"\u2003\u2003\u2003<env-entry>"]},{"entry":[{},"\u2003\u2003\u2003\u2003<env-entry-name>tradeLimit<\/env-entry-name>"]},{"entry":[{},"\u2003\u2003\u2003\u2003<env-entry-type>java.lang.Integer<\/env-entry-"]},{"entry":[{},"type>"]},{"entry":[{},"\u2003\u2003\u2003\u2003<env-entry-value>500<\/env-entry-value>"]},{"entry":[{},"\u2003\u2003\u2003<\/env-entry>"]},{"entry":[{},"\u2003\u2003\u2003<env-entry>"]},{"entry":[{},"\u2003\u2003\u2003\u2003<env-entry-name>WEBL<\/env-entry-name>"]},{"entry":[{},"\u2003\u2003\u2003\u2003<env-entry-type>java.lang.Double<\/env-entry-"]},{"entry":[{},"type>"]},{"entry":[{},"\u2003\u2003\u2003\u2003<env-entry-value>10.0<\/env-entry-value>"]},{"entry":[{},"\u2003\u2003\u2003<\/env-entry>"]},{"entry":[{},"\u2003\u2003<\/session>"]},{"entry":[{},"\u2003<\/enterprise-beans>"]},{"entry":[{},"<\/ejb-jar>"]},{"entry":["weblogic-","<?xml version=\u201c1.0\u201d?>"]},{"entry":["ejb-jar.xml","<!DOCTYPE weblogic-ejb-jar PUBLIC \u201c-\/\/BEA Systems,"]},{"entry":["BEA","Inc.\/\/DTD WebLogic 6.0.0 EJB\/\/EN\u201d"]},{"entry":["WebLogic","\u201chttp:\/\/www.bea.com\/servers\/wls600\/dtd\/weblogic-ejb-"]},{"entry":["Server\u2009\u00ae","jar.dtd\u201d >"]},{"entry":["Deployment","<weblogic-ejb-jar>"]},{"entry":["Descriptor","\u2003<weblogic-enterprise-bean>"]},{"entry":[{},"\u2003\u2003<ejb-name>statelessSession<\/ejb-name>"]},{"entry":[{},"\u2003\u2003<stateless-session-descriptor>"]},{"entry":[{},"\u2003\u2003\u2003<pool>"]},{"entry":[{},"\u2003\u2003\u2003\u2003<max-beans-in-free-pool>100<\/max-beans-"]},{"entry":[{},"\u2003\u2003\u2003\u2003in-free-pool>"]},{"entry":[{},"\u2003\u2003\u2003<\/pool>"]},{"entry":[{},"\u2003\u2003\u2003<stateless-clustering>"]},{"entry":[{},"\u2003\u2003\u2003\u2003<stateless-bean-is-"]},{"entry":[{},"clusterable>false<\/stateless-bean-is-clusterable>"]},{"entry":[{},"\u2003\u2003\u2003<\/stateless-clustering>"]},{"entry":[{},"\u2003\u2003<\/stateless-session-descriptor>"]},{"entry":[{},"\u2003\u2003<jndi-name>ejb20-statelessSession-TraderHome<\/jndi-"]},{"entry":[{},"name>"]},{"entry":[{},"\u2003<\/weblogic-enterprise-bean>"]},{"entry":[{},"<\/weblogic-ejb-jar>"]},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}}]}}}}},"In one embodiment, a value associated with an attribute can be specified with a constant or a variable. In another embodiment, a variable definition can be separate from the EJB definition (e.g., in another file). For example, the variable \u201cremote-jndi-name\u201d can be defined as \u201cAccount\u201d as follows:\n\n","Within the annotated description, variables can be accessed with the delimiters \u201c${\u201cand\u201d}\u201d. For example:\n\n","In another embodiment, variables can be used anywhere after an annotation and can contain whole annotation definitions. Assuming the following variable definition:\n\n","The following annotation:\n\n","In another embodiment, predefined variables are recognized. Predefined variables have default values that can be overridden. In one embodiment, predefined variables can be defined as follows:",{"@attributes":{"id":"p-0028","num":"0035"},"tables":{"@attributes":{"id":"TABLE-US-00006","num":"00006"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"77pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"126pt","align":"left"}}],"thead":{"row":[{"entry":[{},{"@attributes":{"namest":"offset","nameend":"2","align":"center","rowsep":"1"}}]},{"entry":[{},"Variable Name","Description"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"2","align":"center","rowsep":"1"}}]}]},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"remote.baseClass","The value of this variable will be"]},{"entry":[{},{},"used as the base class for all generate"]},{"entry":[{},{},"remote classes."]},{"entry":[{},"home.baseClass","The value of this variable will be"]},{"entry":[{},{},"used as the base class for all"]},{"entry":[{},{},"generated remote home classes."]},{"entry":[{},"local.baseClass","The value of this variable will be"]},{"entry":[{},{},"used as the base class for all"]},{"entry":[{},{},"generated local classes."]},{"entry":[{},"localHome.baseClass","The value of this variable will be"]},{"entry":[{},{},"used as the base class for all"]},{"entry":[{},{},"generated local home classes."]},{"entry":[{},"value.baseClass","The value of this variable will be"]},{"entry":[{},{},"used as the base class for all"]},{"entry":[{},{},"generated value classes."]},{"entry":[{},"value.package","The value of this variable will be"]},{"entry":[{},{},"used as the package for all"]},{"entry":[{},{},"generated value classes."]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"2","align":"center","rowsep":"1"}}]}]}}}}},"In another embodiment, predefined variables can be prefixed with a class name. For example, if the following predefined variables are overridden as follows:\n\n","Thus, all home interfaces generated will extend the class BaseHome except the home of EJB \u201cAccount\u201d, which will extend BaseAccountHome.","In another embodiment, EJB annotations can be inherited according to Java\u2122 class inheritance. For example, if an EJB named AccountEJB has a base class BaseAccount:",{"@attributes":{"id":"p-0032","num":"0043"},"tables":{"@attributes":{"id":"TABLE-US-00007","num":"00007"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"21pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"196pt","align":"left"}}],"thead":{"row":{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"\/**"]},{"entry":[{},"\u2009* \u2003@ejbgen:jndi-name"]},{"entry":[{},"\u2009* \u2003\u2003\u2002remote=\u201cBaseRemote\u201d"]},{"entry":[{},"\u2009* \u2003@ejbgen:entity"]},{"entry":[{},"\u2009* \u2003\u2003max-beans-in-cache = 300"]},{"entry":[{},"*\/"]},{"entry":[{},"public class BaseAccount implements EntityBean {"]},{"entry":[{},". . ."]},{"entry":[{},"}"]},{"entry":[{},"\/**"]},{"entry":[{},"\u2009* \u2003@ejbgen:entity"]},{"entry":[{},"\u2009* \u2003\u2002ejb-name = containerManaged"]},{"entry":[{},"\u2009* \u2003\u2002table-name = ejbAccounts"]},{"entry":[{},"\u2009* \u2003\u2002data-source-name = examples-dataSource-demoPool"]},{"entry":[{},"\u2009* \u2003\u2002max-beans-in-cache = 400"]},{"entry":[{},"\u2009*"]},{"entry":[{},"*\/"]},{"entry":[{},"public class AccountEJB extends BaseAccount {"]},{"entry":[{},". . ."]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}]}}}}},"The JNDI remote name \u201cBaseRemote\u201d and max-beans-in-cache of 300 that are defined in the class BaseAccount are inherited by the subclass AccountEJB. The subclass can optionally override these values. For example, the value of max-beans-in-cache is overridden to be 400 instead of 300.","In another embodiment, EJB relations can be inherited if a value for the attribute \u2018role-name\u2019 is specified. All \u201crole-name\u201d attributes in the Java\u2122 inheritance path can be merged. For example, the following parent class defines a partial relation:",{"@attributes":{"id":"p-0035","num":"0046"},"tables":{"@attributes":{"id":"TABLE-US-00008","num":"00008"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"21pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"196pt","align":"left"}}],"thead":{"row":{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"\/**"]},{"entry":[{},"\u2009* \u2003@ejbgen:relation"]},{"entry":[{},"\u2009* \u2003\u2002name = Many1\u2013Many2"]},{"entry":[{},"\u2009* \u2003\u2002role-name = Many1HasMany2"]},{"entry":[{},"\u2009* \u2003\u2003multiplicity = many * role-name = Many1HasMany2"]},{"entry":[{},"\u2009* \u2003\u2003target-ejb = Many2EJB"]},{"entry":[{},"\u2009* \u2003\u2003fk-column = many2_fk"]},{"entry":[{},"\u2009* \u2003\u2003joint-table = join_table"]},{"entry":[{},"\u2009*\/"]},{"entry":[{},"abstract public class BaseMany1 extends BaseEntityBean {"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}]}}}}},"The following subclass inherits the above relation and completes its definition:",{"@attributes":{"id":"p-0037","num":"0048"},"tables":{"@attributes":{"id":"TABLE-US-00009","num":"00009"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"35pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"182pt","align":"left"}}],"thead":{"row":{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"\u2002* \u2003@ejbgen:relation"]},{"entry":[{},"\u2002* \u2003\u2003role-name = Many1HasMany2"]},{"entry":[{},"\u2002* \u2003\u2003cmr-field = many2"]},{"entry":[{},"\u2002*"]},{"entry":[{},"\u2002*\/"]},{"entry":[{},"abstract public class Many1EJB extends BaseMany1 {"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}]}}}}},"It will be apparent to those skilled in the art that the process of generating EJB source files from an annotated description of an EJB can be performed in reverse. All of the files or classes needed to deploy an EJB can be reduced into a single annotated description of the EJB which can, in accordance to one embodiment, be used in turn to reproduce the EJB source files. Annotations can be generated automatically based information contained in the class definitions, deployment descriptors and relationships between classes.",{"@attributes":{"id":"p-0039","num":"0050"},"figref":"FIG. 2","b":["7","8","7","7","7","7","8","8","10","7","8","7","10","10","10","7","10","8","7","8","11","7","11","5","11","9","9","1","7"]},"The foregoing description of the preferred embodiments of the present invention has been provided for the purposes of illustration and description. It is not intended to be exhaustive or to limit the invention to the precise forms disclosed. Many modifications and variations will be apparent to the practitioner skilled in the art. Embodiments were chosen and described in order to best describe the principles of the invention and its practical application, thereby enabling others skilled in the art to understand the invention, the various embodiments and with various modifications that are suited to the particular use contemplated. It is intended that the scope of the invention be defined by the following claims and their equivalents."],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"BRIEF DESCRIPTION OF THE DRAWINGS","p":[{"@attributes":{"id":"p-0006","num":"0005"},"figref":"FIG. 1"},{"@attributes":{"id":"p-0007","num":"0006"},"figref":"FIG. 2"}]},"DETDESC":[{},{}]}
