---
title: Hierarchical network topology
abstract: A network including a hierarchical structure of nodes is described. The structure of nodes includes n layers including n−1 layers of switch nodes and 1 layer of computational nodes. Each layer in the structure can include mnodes grouped into units, where m represents a number of nodes in a unit and L represents a layer in the structure, where L=0 represents a lowest layer and L=n−1 represents a highest layer. Each node in a layer other than the computational layer can include a switch node for a unit in a next lower layer. For each unit, each node can be connected to each other node by a point to point link and to a local switch node for the unit by a point to point link. Each node can be connected to each other node and to the local switch node by a local broadcast network for the unit.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08457135&OS=08457135&RS=08457135
owner: TeraScale Supercomputing Inc.
number: 08457135
owner_city: Calgary, Alberta
owner_country: CA
publication_date: 20110503
---

{"@attributes":{"id":"description"},"RELAPP":[{},{}],"heading":["CROSS REFERENCE TO RELATED APPLICATION","TECHNICAL FIELD","BACKGROUND","SUMMARY","DETAILED DESCRIPTION"],"p":["This application is a continuation application of, and claims priority to, pending U.S. patent application Ser. No. 12\/412,253, filed on Mar. 26, 2009, entitled \u201cHierarchical Network Topology\u201d. The disclosure of the foregoing application is incorporated herein by reference in its entirety.","This invention relates to electronic communications.","The arrangement of a network of nodes and links is defined by a network topology. The network topology can determine the physical and logical interconnections between the network nodes, where each node has one or more links to one or more other nodes. The physical topology of a network is determined by the configuration of the physical connections between the nodes. The configuration can be represented by a multi-dimensional geometric shape, for example, a ring, a star, a line, a lattice, a hypercube, or a torus. The logical topology of a network is determined by the flow of data between the nodes.","A network of processing nodes can be used for supercomputing applications. For example, a large supercomputing application can be broken into different subsets of instructions running on different processing nodes of a network. In order to reduce latency and improve efficiency, distribution of traffic across the entire network and maximized communication between nodes on a local level are preferred.","Typically, a network's addressing and routing schemes increase in complexity with an increase in the complexity of the network topology. Complex routing tables can require significant central processing unit (CPU) time to implement. Conventional packet routing requires that a packet must be completely received at a node before the destination address in the packet's header can be decoded and the packet can be forwarded, resulting in latency. Latency can also increase with a complex addressing scheme. A complex network topology can have a high hop count to node ratio, where each hop introduces several clock cycles of packet latency.","This specification describes systems, methods, and computer program products related to a network topology. In general, in one aspect, the invention features a network including a hierarchical structure of nodes. The structure of nodes includes n layers including n\u22121 layers of switch nodes and 1 layer of computational nodes. Each layer in the structure includes mnodes grouped into units, where m represents a number of nodes in a unit and is an integer greater than 1. L represents a layer in the structure and is an integer with L=0 representing a lowest layer and L=n\u22121 representing a highest layer. Each node in a layer other than the computational layer includes a switch node for a unit in a next lower layer in the structure. For each unit, each node in the unit is connected to each other node in the unit by a point to point link, each node in the unit is connected to a local switch node for the unit by a point to point link, and each node in the unit is connected to each other node in the unit and to the local switch node by a local broadcast network for the unit.","Implementations of the network can include one or more of the following features. Each computational node can include a processing element operable to perform instructions of one or more applications. The lowest layer in the structure can be the layer of computational nodes and can include mcomputational nodes. Each node in the unit can be connected to each other node in the unit and to the local switch node by an Ethernet network. Each computational node can include a processing element, a controller, and memory. Each computational node can include communication hardware implemented as a field programmable gate array.","In general, in another aspect, the invention features a network including a hierarchical structure of nodes including n layers. The n layers include n\u22121 layers of switch nodes and 1 layer of computational nodes. Each layer in the structure includes one or more units of nodes, where L represents a layer in the structure and is an integer with L=0 representing a lowest layer and L=n\u22121 representing a highest layer and a number of nodes in a unit is greater than 1. Each node in a layer other than the computational layer includes a switch node for a unit in a next lower layer in the structure. For each unit, each node in the unit is connected to each other node in the unit by a point to point link, each node in the unit is connected to a local switch node for the unit by a point to point link, and each node in the unit is connected to each other node in the unit and to the local switch node by a local broadcast network for the unit.","Implementations of the network can include one or more of the following features. One or more point to point links included in one or more units can be deactivated. Each unit of a layer in the structure can have the same number of nodes. Each unit of each layer in the structure can have the same number of nodes. Each unit can include a local, three-dimensional network topology represented by a 2\u00d72\u00d72 cube including 8 nodes. Each computational node can include a processing element operable to perform instructions of one or more applications.","The lowest layer in the structure can be the layer of computational nodes. Each node in the unit can be connected to each other node in the unit and to the local switch node by an Ethernet network. Each computational node can include a processing element, a controller, and memory. Each computational node can include communication hardware implemented as a field programmable gate array.","In general, in another aspect, the invention features a networked device including a hierarchical structure of nodes and a processor. The hierarchical structure of nodes includes n layers including n\u22121 layers of switch nodes and 1 layer of computational nodes. L represents a layer in the hierarchical structure and is an integer with L=0 representing a lowest layer and L=n\u22121 representing a highest layer. The processor is configured for processing n groups of bits received in a packet, where each computational node is fully addressed by the n groups of bits and each switch node of a layer L is fully addressed by n\u2212L groups of most significant bits.","Implementations of the networked device can include one or more of the following features. Each of the n groups of bits can include the same number of bits. In some implementations, each layer includes one or more units of nodes, each unit includes a local 2\u00d72\u00d72 cubic network with two nodes per side in each of three dimensions x, y and z, and each node is logically located within the cubic network using a three-dimensional address {x,y,z} ranging from {0,0,0} to {1,1,1}, where the three-dimensional address logically locating each node within the cubic network comprises one of the n groups of bits. In some implementations, each layer includes one or more units of nodes, each unit includes a local 2\u00d74\u00d74 network with two nodes per side in an x dimension and four nodes per side in each of an y and z dimension, and each node is logically located within the local network using a three-dimensional address {x,y1,y2,z1,z2} ranging from {0,0,0,0,0} to {1,1,1,1,1}, where the three-dimensional address logically locating each node within the local network comprises one of the n groups of bits.","In general, in another aspect, the invention features a method of routing packets in a network. The network has a topology characterized by a hierarchical structure of nodes including n layers. The n layers include n\u22121 layers of switch nodes and 1 layer of computational nodes, where L represents a layer in the structure and is an integer with L=0 representing a lowest layer and L=n\u22121 representing a highest layer. A packet is received at a switch node of layer L of the structure. The packet includes a header with a first address including n groups of bits. The switch node has a second address including n\u2212L groups of bits. The packet is forwarded to a node in either the layer L, the layer L+1, or the layer L\u22121 based on a comparison of the first address and the second address.","In some implementations, if the n\u2212L groups of most significant bits of the first address match the n\u2212L groups of bits of the second address, then the message can be forwarded on a point to point link to a node of layer L\u22121 of the structure fully addressed by the n\u2212L+1 groups of most significant bits of the first address. If the n\u2212L groups do not match but the n\u2212L\u22121 groups of most significant bits of the first address do match the n\u2212L\u22121 groups of most significant bits of the second address, then the message can be forwarded on a point to point link to a switch node of layer L of the structure fully addressed by the n\u2212L groups of most significant bits of the first address. If the n\u2212L\u22121 groups of most significant bits of the first address do not match the n\u2212L\u22121 groups of most significant bits of the second address, then the message can be forwarded on a point to point link to a switch node of layer L+1 of the structure fully addressed by the n\u2212L\u22121 groups of most significant bits of the second address.","In general, in another aspect, the invention features a method of routing packets in a network, the network having a topology characterized by a hierarchical structure of nodes having n layers. The n layers include n\u22121 layers of switch nodes and 1 layer of computational nodes, where L represents a layer in the structure and is an integer with L=0 representing a lowest layer and L=n\u22121 representing a highest layer. A packet can be transmitted from a computational node of layer L to either a second computational node of layer L or to a switch node of layer L+1. The packet includes a header with a first address including n groups of bits, and the computational node has a second address including n groups of bits. The packet can be transmitted based on a comparison of the first and the second address.","In some implementations, if n\u22121 groups of most significant bits of the first address match n\u22121 groups of most significant bits of the second address, then the message can be forwarded on a point to point link to the second computational node of layer L of the structure fully addressed by the n groups of bits of the first address. If the n\u22121 groups do not match, then the message can be forwarded on a point to point link to the switch node of layer L+1 of the structure fully addressed by the n\u22121 groups of most significant bits of the second address.","In general, in another aspect, the invention features a method of routing a packet in a network, the network having a topology characterized by a hierarchical structure of nodes including n layers. L represents a layer in the structure and is an integer with L=0 representing a lowest layer and L=n\u22121 representing a highest layer. The method includes receiving at least a packet header of a packet at a first node and based on the packet header, determining whether to transmit the packet to a second node in either layer L, layer L+1, or layer L\u22121. The packet is transmitted to the second node as soon as the packet is received at the first node without waiting to receive an entire packet and without copying the packet prior to transmission from the first node.","Implementations of the method can include one or more of the following features. The n layers can include n\u22121 layers of switch nodes and 1 layer of computational nodes. Each layer in the structure can include nodes grouped into units having more than one node per unit, and each node in a layer other than the computational layer can include a switch node for a unit in a next lower layer in the structure. The first node can be a switch node and transmitting a packet to a second node in the layer L can include transmitting the packet to the second node in the same unit as the first node by a point to point link. Transmitting a packet to a second node in the layer L+1 or the layer L\u22121 can include transmitting the packet to the second node in a different unit than the first node by a point to point link.","In general, in another aspect, the invention features a system including a hierarchical structure of nodes including n layers. The n layers include n\u22121 layers of switch nodes and 1 layer of computational nodes, where each layer in the hierarchical structure includes one or more units of nodes. L represents a layer in the structure and is an integer with L=0 representing a lowest layer and L=n\u22121 representing a highest layer and a number of nodes in a unit is greater than 1. The switch nodes are configured to: receive at least a packet header of a packet; based on the packet header, determine whether to transmit the packet to a second node in either layer L, layer L+1, or layer L\u22121; and transmit one or more packets forming a message to the second node as soon as the packets are received at the switch node without waiting to receive an entire packet and without copying the packet prior to transmission from the switch node.","Implementations of the system can include one or more of the following features. The computational nodes can each include at least one processor, communication hardware, and a memory. The at least one processor can include an application processor and an operating system processor. The communication hardware can include a field-programmable gate array (FPGA). The communication hardware can be configured to monitor traffic to the computational node. The communication hardware can be configured to direct a message received at the computational node to the processor, and receive a message from the processor for transmission to a different node. Each node in a layer other than the computational layer can include a switch node for a unit in a next lower layer in the structure. For each unit, each node in the unit can be connected to each other node in the unit by a point to point link, each node in the unit can be connected to a local switch node for the unit by a point to point link, and each node in the unit can be connected to each other node in the unit and to the local switch node by a local broadcast network for the unit. The switch nodes can each include a processor and communication hardware.","Implementations can realize one or more of the following advantages. A hierarchical three-dimensional (3-D) network topology allows for a simple addressing scheme, where routing is intrinsically linked to the network topology, promoting fast message delivery with reduced latency. The network topology also offers the benefit of tight local groups of processing nodes, facilitating distribution of traffic on a local level. The network topology yields a low hop count to node ratio for point-to-point and multicast communications. The protocol is streamed, which allows a switch node to begin forwarding a message before the packet has been completely received at the switch node, further minimizing latency. Multicast and broadcast communications only use the network layers necessary for packet delivery without utilizing the entire network.","The details of one or more embodiments of the invention are set forth in the accompanying drawings and the description below. Other features, objects, and advantages of the invention will be apparent from the description and drawings, and from the claims.","Like reference symbols in the various drawings indicate like elements.","A network having a network topology including a hierarchical structure of nodes is described. In some implementations, the hierarchical structure can include n layers: n\u22121 layers of switch nodes and 1 layer of computational nodes. Each layer in the structure can include one or more units, a unit including a set of nodes. Each unit within a layer can have the same number of nodes or a different number of nodes as units in different layers. Each node in a layer, other than the computational layer, can include a switch node for a unit in a next lower layer in the structure. Each node in the unit can be connected to each other node in the unit and to a local switch node for the unit by a point to point link. Each node in the unit can also be connected to each other node in the unit and to the local switch node by a local broadcast network for the unit.","The network topology is a hybrid of a hierarchical (e.g., tree) network topology and a fully connected network topology. In some implementations, each unit of a layer in the hierarchical structure has eight fully connected nodes in a 2\u00d72\u00d72 arrangement, which can be visualized as a cubic network with two nodes per side in each of three dimensions. Messages can be routed through this 3-D network using a simple addressing scheme. This 3-D network local to a unit can be repeated hierarchically through the layers of the structure to retain the same attributes throughout the entire network. This arrangement allows a complex network to be realized without the need for complex routing tables or other complex schemes that take significant CPU time to implement.","An example of a network topology  is illustrated in . In particular,  illustrates a unit  of computational nodes  at the lowest layer in the hierarchical structure of the network topology . The local network topology of the unit  is formed around eight computational nodes , known as leaf nodes.","In some implementations, each computational node  includes a processing element operable to perform instructions of one or more applications. In some implementations, different computational nodes  include different processing elements. In some implementations, some computational nodes  include different or unique processing elements, while the remaining computational nodes  include uniform processing elements. In some implementations, one or more switch nodes  include a processing element, for example, for traffic management.","Each computational node  is connected to each other computational node  of the unit  by a point to point link  (e.g., a high speed node to node link). Each computational node  is connected to a switch node  of a unit in the next higher layer by a point to point link  (e.g., a high speed switch to node link). Each computational node  is also connected to each other computational node  of the unit  and the switch node  by a local broadcast network  for the unit . The switch node  can bridge the local broadcast network  for the unit  to other local broadcast networks of other units of the hierarchical structure of the network topology . The local broadcast network  allows communication with all the computational nodes  of the unit  or a subset of the computational nodes  of the unit .","Operating system (OS) software can be distributed throughout the network at each node and switch. The OS software can include local services as well as system wide supervisory functions. In some implementations, each computational node  is also connected to each other computational node  of the unit  and the switch node  by an Ethernet network . The Ethernet network  can be used for system administration functions (e.g., low data rate system maintenance and monitoring) that are independent of application software. Examples of communication on the Ethernet network  include logging information about CPU temperatures, time-synching, and transmission control protocol (TCP). In some implementations, if the network topology  does not include an Ethernet network , the system administration messages can be transported on the point to point links (e.g., node to node links and switch to node links).","In some implementations, each unit of each layer in the hierarchical structure of the network topology  has the same node arrangement. However, for layers above the lowest layer, each node of a unit is a switch node for a unit in the layer below. For example, the switch node  is a node of a unit in the second lowest layer (i.e., layer L=1) and acts as a switch for the unit  in the lowest layer (i.e., layer L=0). In some implementations, the switch nodes of a unit in a layer are fully connected by point to point (i.e., switch to switch) links. For example, the switch node  of a unit in the second lowest layer is connected to all other switch nodes in the same unit and to a switch node of a unit in the layer above by the switch to switch links . As mentioned above, in other implementations, the number of nodes in a unit can vary across layers.","A multi-dimensional, hierarchically scalable network can use the example network topology  of . In implementations where each unit of each layer in the hierarchical structure has a local, 3-D network topology of a 2\u00d72\u00d72 cube of eight nodes, each node can be logically located within the octet using a 3-D address from {0,0,0} to {1,1,1}. That is, each node is addressed within a unit using three bits. The complete address of a computational node of the lowest layer of the hierarchical structure is a binary number divided into groups of three bits. The group of three least significant bits (LSB) of the binary number identifies a particular computational node (i.e., leaf node) of a unit of the lowest layer, while each group of more significant three bits corresponds to a particular switch node of a unit of a higher layer in the hierarchical structure. Addressing of the multi-dimensional, hierarchically scalable network is described in more detail with respect to  below.","The multi-dimensional hierarchical network described can be scaled up, as needed, with successively larger hierarchical layers to accommodate supercomputing applications. The multi-dimensional hierarchical network provides efficient and flexible high speed communications needed in super-scale computing. For example, the use of dedicated point to point communications within the local network topology of a unit maximizes local throughput. The local broadcast network for a unit allows group communications independent of the point to point links. Each switch node is part of another unit with point to point and broadcast links, offering point to point, multicast, and broadcast communications throughout the flexible network.","The multi-dimensional hierarchical network can be designed to remove system overhead in order to minimize latency and maximize performance against cost and power consumption. For example, a system implementing the multi-dimensional hierarchical network can provide a software application with an industry-standard application programming interface (API) for message passing, implemented with minimal software overhead.",{"@attributes":{"id":"p-0047","num":"0046"},"figref":["FIG. 2","FIG. 1"],"b":["200","200","100"]},"The example hierarchical tree network  includes n layers, including n\u22121 layers of switch nodes  and 1 layer of computational nodes , where n=10. As illustrated, the layer  of computational nodes  is the lowest layer (i.e., layer L=0). The layers  of switch nodes  are the upper n\u22121=9 layers (i.e., layers L=1, 2, . . . , 9). Each layer L includes mnodes, where m represents the number of nodes in a unit and is an integer greater than 1. In the example of , the number of nodes, m, in a unit is eight. Thus, each unit of the lowest layer includes eight computational nodes , and each unit of a higher layer includes eight switch nodes . Each switch node  acts as a switch for the nodes of a unit in a next lower layer . For this example where n=10 and m=8, the lowest layer (i.e., layer L=0) includes 8=1,073,741,824 computational nodes . Each computational node  can include a processing element operable to perform instructions of one or more software applications.","For clarity of , only a portion of the switch to node links  and the switch to switch links  are illustrated. The node to node links  between the computational nodes  of a unit of the lowest layer and the switch to switch links  between the switch nodes  of a unit of the higher layers are not illustrated. Other than the layer L=1, only one sub-tree from each layer  of switch nodes  is illustrated. The broadcast network  is also not illustrated.",{"@attributes":{"id":"p-0050","num":"0049"},"figref":["FIG. 3","FIG. 1","FIG. 3","FIG. 3"],"b":["300","300","100","310","312","108","310","311","104","312","300","300","311","312"]},"In this implementation, each unit  of a layer in the hierarchical 3-D network  has eight fully connected nodes in a 2\u00d72\u00d72 arrangement as a cubic network with two nodes per side in each of three dimensions. In the upper two layers  and , each node (i.e., switch node ) acts as a switch for the nodes of a unit  in a next lower layer i.e., layers  and , respectively. Each switch node  of a unit  of a layer is linked to each other switch node  of the same unit  in the same layer and to each node of a unit  in the next lower layer. For example, the unit  in the layer  includes eight switch nodes -. Each of the switch nodes -functions as a switch node for a unit included in the next layer down, i.e., layer . In this example, switch node functions as a switch node for the unit  in layer  including the eight nodes -. The eight nodes -are also switch nodes, where each of the nodes -functions as a switch node for a unit included in the next layer down, i.e., layer . For example, switch node functions as a switch node for the unit  included in the layer  having eight nodes -. In this example, the eight nodes -are computational nodes.",{"@attributes":{"id":"p-0052","num":"0051"},"figref":["FIG. 4","FIG. 2"],"b":["400","200","400","405","0","29","405","410","0","1","9","30","31","420"]},"The group  of three least significant bits (LSB) of the 30-bit address  (i.e., bit field Add) identifies a particular computational node  of a unit of the lowest layer of the hierarchical tree network , while each group  of more significant bits (i.e., bit fields Add to Add) corresponds to a particular switch node  of a unit of a consecutively higher layer in the hierarchical structure. That is, the eight computational nodes  of a unit of the lowest layer L=0 are addressed by Add, and the switch nodes  at layers L=1 to L=9 are addressed by Add to Add, respectively.","Each computational node  is fully addressed by the complete 30-bit address  (i.e., by bit fields Add to Add). Each switch node  of a given layer is fully addressed by a partial address using bit field groups  from the given layer to the group  of MSB. For example, a switch node  of layer L=3 is fully addressed by bit fields Add to Add.","In some implementations, each message packet includes a header with a number of fields, including, for example, the destination address, the size of the message packet, a checksum of the message packet, and a source address. The header can be prepended to the data in part by the operating system (OS) software and the hardware as the data is transmitted. The packet header provides all the data needed to deliver the packet intact. The checksum can be added by the OS at sending to provide a simple check that the entire packet is valid. A check can be made at the destination. In one example, the checksum used is a ones compliment sum as used in Internet Protocol (RFC971).","The reserved bit field  can be used for address range expansion, allowing a flexible number of address words while retaining the same overall structure for the addressing scheme . For example, the MSB (i.e., bit ) of a four-byte address word can be a continuation bit indicating if the destination address is completely specified by the four-byte address word or if the destination address in the four-byte address word is a high portion of a multi-word destination address. Subsequent address words can also use the MSB to indicate another portion of the multi-word destination address.","The second MSB (i.e., bit ) of the four-byte address word can indicate if the destination address is a point to point protocol address, or if the destination address specifies a descriptor for a group of destinations (e.g., multiple nodes). If the second MSB indicates that the destination address specifies a group descriptor, the bits of the destination address can include an identifier for the group of destinations. In one implementation, the group descriptor can be used by a node's communication hardware to assign links for transmitting the message, as described below.","Routing of a message using the example addressing scheme  does not require a complex routing scheme, e.g., complex routing tables. For a single destination message sent from a source computational node  of a unit of the lowest layer, the link on which to send the message packet is either to one of the other seven peer computational nodes  of the same unit or to the switch node  to which the source computational node  is connected (e.g., by a switch to node link  of ). The message is sent on a link (e.g., a node to node link  of ) to one of the other seven peer computational nodes  if the groups  of bit fields Add to Add are equal as between the address of the source computational node  and the address of the destination computational node  specified in the header of the message packet. The message is sent on a link to the connected switch node  of the second layer if the groups  of bit fields Add to Add are not equal as between the address of the source computational node  and the address of the destination computational node .","For message routing at a switch node , a similar comparison of the address bit fields is performed. For example, for a given switch node  of a unit of a given layer L, the link on which to send a single destination message packet is either to the switch node  of layer L+1 to which the given switch node  is connected (e.g., by a switch to switch link  of ), to one of the other seven peer switch nodes  of the same unit (e.g., by a switch to switch link  of ), or to one of the eight nodes of layer L\u22121 to which the given switch node  is connected. The link on which the message packet is sent is determined by comparing the bit range Add(L) to Add of the address of the given switch node  to the corresponding bit ranges of the address of the destination node. Routing of a message is further described below with respect to .","The example addressing scheme  for the hierarchical tree network  provides a low hop count to node ratio for point to point or multicast. In this example network , a message transmitted from any first computational node  of a unit can reach any second computational node  of a different unit in a maximum of 18 hops. For example, from the first computational node  of a first unit at layer L=0, a message takes nine hops to reach the highest layer (i.e., layer L=9) of the hierarchical structure and takes another nine hops to reach the lowest layer (i.e., layer L=0) to be routed to a second computational node  of a second unit of the lowest layer. However, if the message does not need to be routed to the highest layer because one or more of the groups  of more significant bits are common between the source computational node  and the destination computational node , the message can be routed in fewer than the maximum 18 hops.","In some implementations, the four-byte address word is the first portion of the message packet header received. The four-byte address word can be followed by the packet size field, which indicates how much data to transmit. This configuration facilitates a streamed link protocol, allowing any switch node  to begin forwarding a message once the four-byte address word is received and before the message packet has been completely received at the switch node , minimizing latency unless the message packet needs to be buffered due to congestion. For a latency of two cycles per hop, the maximum latency from the start of sending a message from a source computational node  to the start of receiving the message at a destination computational node  is 36 cycles, if the protocol is streamed and the message packet does not need to be buffered.",{"@attributes":{"id":"p-0062","num":"0061"},"figref":["FIG. 5","FIG. 3"],"b":["500","300"]},"The hierarchical tree network  of  illustrates the ease of reaching any node from any other node by simply traversing the tree network vertically between layers and horizontally within units. The hierarchical 3-D network  of  illustrates the complexity and the flexibility attainable by the network. A system implementing a hierarchical 3-D network topology can be represented by both the hierarchical tree network  and the hierarchical 3-D network  and can use the addressing scheme  of , where addressing of each 2\u00d72\u00d72 unit is through the addressing  of . From the hierarchical tree network  view, a 3-bit address field can identify one of eight nodes of a unit. From the hierarchical 3-D network  view, a 3-bit address field can be used as an index on the 3-D Cartesian coordinates of a local cubic network.",{"@attributes":{"id":"p-0064","num":"0063"},"figref":["FIG. 6","FIGS. 5 and 6"],"b":"600"},"In some implementations, one or more point to point links between nodes can be deactivated. For example, on a system implementing a hierarchical 3-D network with the example addressing  for 2\u00d74\u00d74 units of the hierarchical network, if an application running on the system requires only 18 nodes per unit, the 2\u00d74\u00d74 units can be connected as 2\u00d73\u00d73 units, with certain logical links between nodes in the Y and Z dimensions deactivated.","In some implementations, units of all layers of the hierarchical network have the same, local 3-D network topology. In these implementations, each of the groups of address bits identifying a node in a unit of a layer has the same number of bits.","In some implementations, units of different layers of the hierarchical network can have different, local 3-D network topology. In these implementations, the groups of address bits identifying nodes in units of different layers can have different numbers of bits. For example, the units of computational nodes of the lowest layer can have a local 2\u00d74\u00d74 network topology, where each computational node of a unit is identified by a 5-bit address field (e.g., {X, Y1, Y2, Z1, Z2}), while the units of switch nodes of the higher layers can have a local 2\u00d72\u00d72 network topology, where each switch node of a unit is identified by a 3-bit address field (e.g., {X, Y, Z}).","Hierarchical network topologies can be implemented as networks of dimensions higher than three. For example, a system can implement a hierarchical four-dimensional (4-D) network topology.  illustrates an example network topology , which can have four dimensions.",{"@attributes":{"id":"p-0069","num":"0068"},"figref":"FIG. 7","b":["702","704","700","702","704","702"]},"Each computational node  is connected to each other computational node  of the unit  by a point to point link . Each computational node  is connected to a switch node  of a unit in the next higher layer by a point to point link . Each computational node  is also connected to each other computational node  of the unit  and the switch node  by a local broadcast network  for the unit . The switch node  can bridge the local broadcast network  for the unit  to other local broadcast networks of other units of the hierarchical structure of the network topology . In some implementations, each computational node  is also connected to each other computational node  of the unit  and the switch node  by an Ethernet network (not shown).",{"@attributes":{"id":"p-0071","num":"0070"},"figref":["FIG. 8","FIG. 7"],"b":["800","800","700","800"]},"The example hierarchical tree network  includes one layer of switch nodes  and one layer of computational nodes . The layer of computational nodes  is the lower layer, while the layer of switch nodes  is the higher layer. There are sixteen nodes in each unit of a layer in the example hierarchical tree network . Each switch node  acts as a switch for the nodes of a unit in the lower layer. For this example, the lower layer includes 16=256 computational nodes .","For clarity of , only two sub-trees from the higher layer of switch nodes  are illustrated. Hence, only a portion of the switch to node links  are illustrated. Additionally, the node to node links between the computational nodes  of a unit of the lower layer and the switch to switch links between the switch nodes  of the unit of the higher layer are not illustrated.",{"@attributes":{"id":"p-0074","num":"0073"},"figref":["FIG. 9","FIG. 8","FIG. 8"],"b":["900","800","900","905","0","7","905","910","0","1","800","800"]},"The group  of four LSB of the 8-bit address  (i.e., bit field Add) identifies a particular computational node  of a unit of the lower layer of the hierarchical tree network , while the group  of four MSB (i.e., bit field Add) corresponds to a particular switch node  of the higher layer in the hierarchical structure. Each computational node  is fully addressed by the complete 8-bit address  (i.e., by bit fields Add and Add). Each switch node  of the higher layer is fully addressed by a partial address using the bit field group  of MSB (i.e., bit field Add). For example, the switch nodes  and  of  are fully addressed by Add={0,0,0,0} and Add=(1,1,1,1}, respectively. The computational node  of  is connected by a point to point link to the switch node  and is fully addressed by {Add, Add}={1,1,1,1,0,0,0,1}.",{"@attributes":{"id":"p-0076","num":"0075"},"figref":["FIG. 10","FIG. 2","FIG. 4","FIGS. 1-2"],"b":["1000","200","400","1000","4","1000"]},"The example process  is for an addressing system of a network topology (e.g., the network topology  of ). The network topology has a hierarchical structure of nodes including n layers. The n layers include n\u22121 layers of switch nodes and 1 layer of computational nodes. The layer in the structure is represented by \u201cL\u201d, which is an integer where L=0 represents the lowest layer and L=n\u22121 represents the highest layer. For a message received at a switch node of a given unit in layer L of the structure, the example process  routes the message either up a layer in the structure (i.e., to the switch node in the layer L+1 directly connected to the switch nodes of the given unit), down a layer in the structure (i.e., to one of the nodes in the layer L\u22121 directly connected to the switch node), or to one of the other peer switch nodes of the given unit.","The system receives a message at a switch node of layer L of the structure, where the message includes a header with a first address (e.g., a destination address) including n groups of bits, and the switch node has a second address including n\u2212L groups of bits (step ). For example, the addressing system can be the example addressing scheme  of , where the 30-bit address  for each computational node includes ten groups  of bits.","The system determines if the n\u2212L groups of MSB of the first address match the n\u2212L groups of bits of the second address (decision ). For example, the system can determine if the groups of bits match by applying bit masks to the respective groups of bits of the first and second addresses.","If the system determines that the n\u2212L groups match (\u201cyes\u201d branch of decision ), the system forwards the message on a point to point link to a node of layer L\u22121 of the structure that is fully addressed by the n\u2212L+1 groups of MSB of the first address (step ). For example, the system can forward the message down one level of the hierarchical tree network  to a switch node on a switch to switch link (e.g., a switch to switch link  of ) or to a computational node on a switch to node link (e.g., a switch to node link  of ).","The system determines if the node receiving the message (i.e., the node of layer L\u22121 that is fully addressed by the n\u2212L+1 groups of MSB of the first address) is the destination node (decision ). For example, the system can determine if the node receiving the message is a computational node fully addressed by all the bits of the first address. If the system determines that the node receiving the message is the destination node (\u201cyes\u201d branch of decision ), the example process  ends. If the system determines that the node receiving the message is not the destination node (\u201cno\u201d branch of decision ), the example process  repeats from step , where the message is received at the node of layer L\u22121.","If the system determines that the n\u2212L groups do not match (\u201cno\u201d branch of decision ), the system determines if the n\u2212L\u22121 groups of MSB of the first address match the n\u2212L\u22121 groups of MSB of the second address (decision ). If the system determines that the n\u2212L\u22121 groups match (\u201cyes\u201d branch of decision ), the system forwards the message on a point to point link to a switch node of layer L of the structure that is fully addressed by the n\u2212L groups of MSB of the first address (step ). For example, the system can forward the message horizontally within the unit of the layer L of the hierarchical tree network  on a switch to switch link (e.g., a switch to switch link  of ) to one of the peer switch nodes of the same unit. The example process  repeats from step , where the message is received at the node of layer L.","If the system determines that the n\u2212L\u22121 groups do not match (\u201cno\u201d branch of decision ), the system forwards the message on a point to point link to a switch node of layer L+1 of the structure that is fully addressed by the n\u2212L\u22121 groups of MSB of the second address (step ). For example, the system can forward the message up one level of the hierarchical tree network  on a switch to switch link (e.g., a switch to switch link  of ) to the only switch node of layer L+1 that is directly connected to the switch nodes of the unit. The example process  repeats from step , where the message is received at the node of layer L+1.",{"@attributes":{"id":"p-0084","num":"0083"},"figref":["FIG. 11","FIG. 2","FIG. 4","FIGS. 1-2"],"b":["1100","200","400","1100","4","1100"]},"The example process  is for an addressing system of a network topology (e.g., the network topology  of ). The network topology has a hierarchical structure of nodes including n layers. The n layers include n\u22121 layers of switch nodes and 1 layer of computational nodes. The layer in the structure is represented by \u201cL\u201d, which is an integer where L=0 represents the lowest layer and L=n\u22121 represents the highest layer. For a message originating from a computational node of a given unit in layer L of the structure, the example process  routes the message either up a layer in the structure (i.e., to the switch node in the layer L+1 directly connected to the computational nodes of the given unit) or to one of the other peer computational nodes of the given unit.","The message is being routed from a computational node of layer L of the structure. The message includes a header with a first address (e.g., a destination address) including n groups of bits, and the computational node has a second address (e.g., a source address) including n groups of bits. For example, the addressing system can be the example addressing scheme  of , where the 30-bit address  for each computational node includes ten groups  of bits.","The system determines if the n\u22121 groups of MSB of the first address match the n\u22121 groups of MSB of the second address (decision ). This check determines if the destination node is in the given unit. If the system determines that the n\u22121 groups match (\u201cyes\u201d branch of decision ), indicating that the destination node is in the given unit, the system forwards the message on a point to point link to a computational node of layer L of the structure that is fully addressed by the n groups of bits of the first address (step ). For example, the system can forward the message horizontally within the unit of the layer L of the hierarchical tree network  on a node to node link (e.g., a node to node link  of ) to one of the peer computational nodes of the same unit. The computational node of layer L that receives the forwarded message is the destination node specified by the first address. Following step , the example process  ends.","If the system determines that the n\u22121 groups do not match (\u201cno\u201d branch of decision ), indicating that the destination node is in a different unit, the system forwards the message on a point to point link to a switch node of layer L+1 of the structure that is fully addressed by the n\u22121 groups of MSB of the second address (step ). For example, the system can forward the message up one level of the hierarchical tree network  on a switch to node link (e.g., a switch to node link  of ) to the only switch node of layer L+1 that is directly connected to the computational nodes of the unit. The example process  continues to step  of , where the message is received at the switch node of layer L+1.","In some implementations, the system is initialized (e.g., booted) using an Ethernet connection from a server. The initialization process can convey node address and level information if the system's network topology is specified in a configuration file. In some implementations, the system can detect the network topology autonomously. The system can verify that the actual system matches the specified network topology.","In some implementations, a system can be designed with a hierarchical 3-D network topology (e.g., a network topology represented by both the hierarchical tree network  and the hierarchical 3-D network ) using one or more connected semiconductor devices. For example, the system can be implemented on multiple programmable logic devices, such as a field programmable gate array (FPGA) for each node. In some implementations, each node is implemented with an application specific integrated circuit (ASIC). In other implementations, each unit of multiple nodes (e.g., eight nodes) is implemented with an ASIC, concentrating all the point to point communication links of a unit within the ASIC for the unit, providing fast local communication within the unit.","In some implementations, one or more nodes of the system include a controller, a processor, and memory. In some implementations, the controllers, the processors, and the memory of multiple nodes (e.g., one switch node, acting as a hub, surrounded by eight computational nodes) are integrated on one or more dies of a silicon wafer.","In some implementations, each computational node of the system includes a processor, e.g., a central processing unit (CPU), and communication hardware, e.g., implemented as a controller. Traffic received on links from other nodes can be passed to a given computational node's processor by the given computational node's communication hardware. Traffic can be monitored to gather statistics on link conditions using software-readable registers of the communication hardware. Traffic from the given computational node can be sent by the given computational node's communication hardware. For example, if the destination of the traffic is a single point, the given computational node's communication hardware can route the traffic to another computational node of the same unit or the switch node connected to the given computational node, as appropriate. If the destination of the traffic is multiple points (e.g., multicast to a group of nodes), the processor software can use a group descriptor to assign links for sending the data, where the links can be links to other nodes or a link on the broadcast network. The given computational node's communication hardware then sends the data on the assigned links. In some implementations, a computational node's communication hardware is implemented as an FPGA.","In some implementations, one or more switch nodes of the system include a processor and communication hardware. Traffic received at a given switch node can be forwarded by the given switch node's communication hardware on the appropriate link. Group traffic received at a given switch node can be intercepted by the given switch node's processor and forwarded by the given switch node's communication hardware on links assigned according to a group descriptor.","In some implementations, at a switch node or a computational node, the node's communication hardware can begin sending a packet once the destination address is received at the node and before the whole packet has arrived. Including the destination address and size of the packet as the first two elements of the message header facilitates this process. Since all the communication links can run at the same data rate, there is no difference between the data arrival rate and the data transmission rate. The check of the packet can be done upon arrival at the destination.","A first in, first out (FIFO) data structure can be provided to allow buffering of a message during times of congestion when the system is close to being overloaded. The amount of use of the FIFOs can indicate to the distributed OS software that distribution of the application needs to be changed. For instance, if one FIFO is in use for every packet, then an overuse of a particular link is indicated and the OS can take action to alleviate the bottleneck. For example, the distribution of the application can be changed dynamically by the OS software.","In some implementations, message packet transfer is performed by a computational node's processor. This allows data being sent from one node to another node to be sent directly from the buffer where the data has been produced, and placed into a buffer where the data is to be utilized, without the switch node processors having to copy the data, thereby improving processing time. That is, the OS software does not copy the data, which improves efficiency since a software copy requires two memory bus accesses\u2014one for read and one for write, and typically, data has to be taken from memory to cache and copied to another cache, which then needs to be flushed. By contrast, the system described herein can use OS hardware at the node to drop the data into memory. The memory buffer to receive the data can be pre-selected and ready for receiving the data. If for any reason, the buffer is not ready, then the OS software can still receive that data, although a copy might be required. In some instances, the application can determine if there is data ready for the application, and then ask for a pointer to that data rather than requesting the OS to copy the data to the application's buffer.","In some implementations, when a packet is scheduled for sending from a computational node, the application makes a call to the OS to pass control of the packet to the OS for sending. In an example implementation, the computational node includes an application processor and an OS processor. The OS is distributed across the whole network and is divided between hardware and software. A message being sent is passed from the application to OS stub software running on the application processor. The packet is then passed to OS hardware on the node, which is administered by the OS software running on the OS processor. Although this example uses two processors, this is not required. In some implementations, the OS hardware at the node is designed to interface to a number of processors with FPGAs, and in the above example, the functionality is divided between the FPGAs and their on-board processors.","By integrating hardware for packet transfer into a computational node's memory management hardware, the OS hardware and software can access the data memory once the application indicates that the packet is ready for sending. The data memory access is processor-transparent, allowing the processor to perform other tasks while the OS software sends the packet. In another example implementation, a cache controller is integrated into the packet hardware, such that the data is sent from or received to the cache memory rather than the main memory. The cache controller is used to move the data to and from main memory.","A packet transmitted from a source computational node to a destination computational node can pass through one or more intermediate switch nodes. A copy operation is not necessary at intermediate switch nodes, because the intermediate switch node's communication hardware determines on which link to transmit the incoming message based on the destination address field received as the first portion of the message packet. This allows the intermediate switch node to begin forwarding the packet on the determined link without needing to copy the message, as long as the determined link is available. In some implementations, a FIFO data structure is used if the determined link is in use to prevent the packet from being lost. By contrast, in conventional networks, complex routing (e.g., using routing tables) is typically required, because multiple messages may need to be transmitted on a single link. The complex routing often requires the message to be temporarily copied before the destination address is decoded from the packet header and the message is forwarded.","When a packet is scheduled to be received at a computational node, the application can expect the arriving packet and allocate a data buffer in the memory of the computational node for the packet. The packet transfer hardware (e.g., communication hardware or a controller implemented with, for example, an FPGA, an ASIC, or a silicon die) of the computational node can place the packet in the allocated data buffer. If the application is not expecting the arriving packet, the OS software can assign a data buffer in the memory of the computational node for the packet. When the application software makes a call to access the packet data, the memory management hardware of the computational node can place the packet in the assigned data buffer for access by the application.","Thus, the packet data does not need to be copied from one memory area to another, rather the data can be put into the memory without a software copy, thereby reducing latency and improving performance. A memory copy operation costs two memory accesses per word, i.e., one read access and one write access. The zero copy scheme described herein eliminates these memory accesses, reducing processing time for packet transfer. Additionally, in a conventional system, the computational node's processor would be unavailable for the duration of a memory copy. By contrast, in the system described the computation node remains available. Both of these factors (i.e., memory accesses and unavailability of the processor) in a system with intensive packet sending are major causes of bandwidth loss in the system.",{"@attributes":{"id":"p-0102","num":"0101"},"figref":"FIG. 12","b":["1200","1200","1200","1200","1218","1216","1252","1254","1218","1216","1252","1254","1256","1218","1200","1218","1218","1218","1216","1252","1254"]},"The memory  is a computer readable medium such as volatile or non-volatile that stores information within the system . The memory  can store processes related to the functionality of network routing, for example. The storage device  is capable of providing persistent storage for the system . The storage device  can include a floppy disk device, a hard disk device, an optical disk device, or a tape device, or other suitable persistent storage mediums. The storage device  can store the various databases described above. The input\/output device  provides input\/output operations for the system . The input\/output device  can include a keyboard, a pointing device, and a display unit for displaying graphical user interfaces.","The computer system shown in  is but one example. In general, embodiments of the subject matter and the operations described in this specification can be implemented in digital electronic circuitry, or in computer software, firmware, or hardware, including the structures disclosed in this specification and their structural equivalents, or in combinations of one or more of them. Embodiments of the subject matter described in this specification can be implemented as one or more computer programs, i.e., one or more modules of computer program instructions, encoded on a computer storage media for execution by, or to control the operation of, data processing apparatus. Alternatively or in addition, the program instructions can be encoded in an artificially-generated propagated signal, e.g., a machine-generated electrical, optical, or electromagnetic signal, that is generated to encode information for transmission to suitable receiver apparatus for execution by a data processing apparatus. The computer storage medium can be, or be included in, a computer-readable storage device, a computer-readable storage substrate, a random or serial access memory array or device, or a combination of one or more of them.","The term \u201cdata processing apparatus\u201d encompasses all apparatus, devices, and machines for processing data, including by way of example a programmable processor, a computer, or multiple processors or computers. The apparatus can include, in addition to hardware, code that creates an execution environment for the computer program in question, e.g., code that constitutes processor firmware, a protocol stack, a database management system, an operating system, or a combination of one or more of them.","A computer program (also known as a program, software, software application, script, or code) can be written in any form of programming language, including compiled or interpreted languages, or declarative or procedural languages, and it can be deployed in any form, including as a stand alone program or as a module, component, subroutine, or other unit suitable for use in a computing environment. A computer program does not necessarily correspond to a file in a file system. A program can be stored in a portion of a file that holds other programs or data (e.g., one or more scripts stored in a markup language document), in a single file dedicated to the program in question, or in multiple coordinated files (e.g., files that store one or more modules, sub programs, or portions of code). A computer program can be deployed to be executed on one computer or on multiple computers that are located at one site or distributed across multiple sites and interconnected by a communication network.","The processes and logic flows described in this specification can be performed by one or more programmable processors executing one or more computer programs to perform functions by operating on input data and generating output. The processes and logic flows can also be performed by, and apparatus can also be implemented as, special purpose logic circuitry, e.g., an FPGA or an ASIC.","Processors suitable for the execution of a computer program include, by way of example, both general and special purpose microprocessors, and any one or more processors of any kind of digital computer. Generally, a processor will receive instructions and data from a read only memory or a random access memory or both. The essential elements of a computer are a processor for performing instructions and one or more memory devices for storing instructions and data. Generally, a computer will also include, or be operatively coupled to receive data from or transfer data to, or both, one or more mass storage devices for storing data, e.g., magnetic, magneto optical disks, or optical disks. However, a computer need not have such devices. Moreover, a computer can be embedded in another device, e.g., a mobile telephone, a personal digital assistant (PDA), a mobile audio or video player, a game console, a Global Positioning System (GPS) receiver, to name just a few.","Computer readable media suitable for storing computer program instructions and data include all forms of non volatile memory, media and memory devices, including by way of example semiconductor memory devices, e.g., EPROM, EEPROM, and flash memory devices; magnetic disks, e.g., internal hard disks or removable disks; magneto optical disks; and CD ROM and DVD-ROM disks. The processor and the memory can be supplemented by, or incorporated in, special purpose logic circuitry.","To provide for interaction with a user, embodiments of the subject matter described in this specification can be implemented on a computer having a display device, e.g., a CRT (cathode ray tube) or LCD (liquid crystal display) monitor, for displaying information to the user and a keyboard and a pointing device, e.g., a mouse or a trackball, by which the user can provide input to the computer. Other kinds of devices can be used to provide for interaction with a user as well; for example, feedback provided to the user can be any form of sensory feedback, e.g., visual feedback, auditory feedback, or tactile feedback; and input from the user can be received in any form, including acoustic, speech, or tactile input.","Embodiments of the subject matter described in this specification can be implemented in a computing system that includes a back end component, e.g., as a data server, or that includes a middleware component, e.g., an application server, or that includes a front end component, e.g., a client computer having a graphical user interface or a Web browser through which a user can interact with an implementation of the subject matter described is this specification, or any combination of one or more such back end, middleware, or front end components. The components of the system can be interconnected by any form or medium of digital data communication, e.g., a communication network. Examples of communication networks include a local area network (\u201cLAN\u201d) and a wide area network (\u201cWAN\u201d), e.g., the Internet.","The computing system can include clients and servers. A client and server are generally remote from each other and typically interact through a communication network. The relationship of client and server arises by virtue of computer programs running on the respective computers and having a client-server relationship to each other.","While this specification contains many specific implementation details, these should not be construed as limitations on the scope of any invention or of what may be claimed, but rather as descriptions of features that may be specific to particular embodiments of particular inventions. Certain features that are described in this specification in the context of separate embodiments can also be implemented in combination in a single embodiment. Conversely, various features that are described in the context of a single embodiment can also be implemented in multiple embodiments separately or in any suitable subcombination. Moreover, although features may be described above as acting in certain combinations and even initially claimed as such, one or more features from a claimed combination can in some cases be excised from the combination, and the claimed combination may be directed to a subcombination or variation of a subcombination.","Similarly, while operations are depicted in the drawings in a particular order, this should not be understood as requiring that such operations be performed in the particular order shown or in sequential order, or that all illustrated operations be performed, to achieve desirable results. In certain circumstances, multitasking and parallel processing may be advantageous. Moreover, the separation of various system components in the embodiments described above should not be understood as requiring such separation in all embodiments, and it should be understood that the described program components and systems can generally be integrated together in a single software product or packaged into multiple software products.","A number of embodiments of the invention have been described. Nevertheless, it will be understood that various modifications may be made without departing from the spirit and scope of the invention. Accordingly, other embodiments are within the scope of the following claims."],"BRFSUM":[{},{}],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"DESCRIPTION OF DRAWINGS","p":[{"@attributes":{"id":"p-0024","num":"0023"},"figref":"FIG. 1"},{"@attributes":{"id":"p-0025","num":"0024"},"figref":"FIG. 2"},{"@attributes":{"id":"p-0026","num":"0025"},"figref":"FIG. 3"},{"@attributes":{"id":"p-0027","num":"0026"},"figref":["FIG. 4","FIG. 2"]},{"@attributes":{"id":"p-0028","num":"0027"},"figref":"FIG. 5"},{"@attributes":{"id":"p-0029","num":"0028"},"figref":"FIG. 6"},{"@attributes":{"id":"p-0030","num":"0029"},"figref":"FIG. 7"},{"@attributes":{"id":"p-0031","num":"0030"},"figref":"FIG. 8"},{"@attributes":{"id":"p-0032","num":"0031"},"figref":["FIG. 9","FIG. 8"]},{"@attributes":{"id":"p-0033","num":"0032"},"figref":["FIG. 10","FIG. 2","FIG. 4"]},{"@attributes":{"id":"p-0034","num":"0033"},"figref":["FIG. 11","FIG. 2","FIG. 4"]},{"@attributes":{"id":"p-0035","num":"0034"},"figref":"FIG. 12"}]},"DETDESC":[{},{}]}
