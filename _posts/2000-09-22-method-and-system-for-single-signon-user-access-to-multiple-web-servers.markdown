---
title: Method and system for single sign-on user access to multiple web servers
abstract: Methods and systems for single sign-on user access to multiple web servers are provided. A user is authenticated at a first web server (e.g., by user name and password). The first web server provides a web page to the user having a service selector (e.g., a hyperlink comprising the URL of a second web server offering the service indicated by the selector). When the user activates the service selector, the first web server constructs and transmits an encrypted authentication token (e.g., a cookie) from the first web server to a second web server via the user client. The first and second web servers share a sub-domain. The authentication token comprises an expiration time and is digitally signed by the first web server and is authenticated at the second web server. Upon authentication, the second web server allows the user to conduct a session at the second web server.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=07137006&OS=07137006&RS=07137006
owner: Citicorp Development Center, Inc.
number: 07137006
owner_city: Los Angeles
owner_country: US
publication_date: 20000922
---

{"@attributes":{"id":"description"},"RELAPP":[{},{}],"heading":["I. CROSS REFERENCE TO RELATED APPLICATION","II. FIELD OF THE INVENTION","III. BACKGROUND OF THE INVENTION","IV. SUMMARY OF THE INVENTION","VI. DETAILED DESCRIPTION"],"p":["This patent application claims priority to co-pending U.S. Provisional Patent Application Ser. No. 60\/155,853, entitled \u201cMethod and System for Single Sign-On User Access to a Federation of Web Servers,\u201d filed Sep. 24, 1999, which is hereby incorporated in full by reference.","The present invention relates generally to the field of electronic commerce. More particular, embodiments of the present invention relate generally to a method and system for providing single sign-on user access to multiple web servers.","There are many situations in which an entity or group of entities, such as a global financial institution with banking, brokerage, and other aspects, wishes to combine the functional resources of different web application servers in order to aggregate functionality to the customers of the entity or group of entities. Such an entity or group of entities may wish to allow their customers access to such an aggregated functionality by signing on only once, by authenticating themselves once, and then being able to use different services which might be provided either by different servers of entities within the group of entities, or by servers of the group of entities and, for example, by servers of third party entities.","In this context, the entity or group of entities may wish to deliver to the customer, via a web browser, a set of services that are hosted by different web application servers. Such application servers may employ different platforms, such as a UNIX platform, an NT platform, or some other type of platform. The platform may have been constructed by different organizations within the group of entities, or the platform may have been provided by third-party providers. In any event, an essential problem is how to allow the customer to sign on once and then to redirect the customer to these different servers without requiring the customer to sign on each and every time he or she goes accesses a different server.","Conventional products attempting to address this problem are deficient, for example, both in terms of performance and cost. In some such products, it is necessary to return to a centralized resource. Other such products do not support crossing organizational boundaries or Internet domain boundaries. What is needed is a methods and system for single sign-on user access to multiple web servers, such as a federation of web servers sharing sub-domains, that overcome such disadvantages and that provide other advantages.","The present invention provides methods and systems for single sign-on user access to multiple web servers, such as a federation of web servers sharing sub-domains, are provided. In an embodiment, a user is authenticated at a first web server (e.g., by user name and password). The first web server provides a web page to the user having a service selector (e.g., a hyperlink comprising the URL of a second web server offering the service indicated by the selector). Upon activation of the selector by the user, the first web server constructs, digitally signs, and transmits an encrypted authentication token (e.g., a cookie) from the first web server to a second web server via the user client. URL encoding is employed to encrypt and sign the authentication token. The first and second web servers share a sub-domain. The authentication token comprises an expiration time. The authentication token is examined and authenticated at the second web server and URL decoding is employed. Upon authentication, and if the expiration time has not passed, the second web server allows the user to conduct a session at the second web server.","In another embodiment, a method for single sign-on user access to a federation of web servers, such as a first and second web server sharing a sub-domain, is provided. In an embodiment, the method comprises allowing a user at a computing device to access a first web server in the federation of web servers via a web browser of the computing device, authenticating the user with user-provided authentication information, including at least a user identification, by the first web server, and allowing the user to conduct a session a the first web server. During the session, the first web server carries out the functions of prompting the user for selection of a functionality offered via at least a second web server, and receiving a selection by the user of the functionality offered via the second web server. Upon receiving a selection, the first web server creates an authentication token for the user including at least the user identification and with a pre-defined token expiry by the first web server, digitally signing (e.g., by public key encryption) the authentication token by the first web server. An embodiment further comprises qualifying the domain attribute of the authentication token with the shared sub-domain name by the first web server, sending the digitally signed authentication token to the web browser of the computing device by the first web server, redirecting the web browser to the second web server by the first web server, and sending the authentication token to the second web server by the web browser. The second web server decrypts the authentication token, confirms a match with the digital signature of the first web server, checks the pre-defined expiry of the authentication token by the second web server, and allows the user to conduct a session with the second web server if within the pre-defined token expiry.","In another embodiment, a method of single sign-on for multiple web servers, comprising receiving log-in data from a user in a first server, providing the user with a service selector, receiving an indication that the user selected the service selector, constructing an authentication token comprising profile data associated with the user, encrypting and signing the authentication token, redirecting the user to a second server, transmitting the authentication token to the user, receiving the authentication token in the second server, verifying the authentication token in the second server, and allowing the user access to a service provided by the second server. In one such embodiment, the authentication token comprises a cookie and further comprises expiration time data.","It is a feature and advantage of the present invention to provide a method and system for single sign-on user access to a federation of web servers that allows users already authenticated on a web site, such as a financial institution's web site, to have access, for example, to a service provider's web site without having to be re-authenticated via provision of a valid name and password.","To achieve the stated and other features and advantages, an embodiment of the present invention provides a method and system which enables single sign-on access for a user to a federation of web servers that allows user authentication at an entity's web site server, selection of a service provider URL, and passage of an authentication token by the entity's web site server to a service provider's server that contains sufficient information to enable the service provider's server, for example, to recognize the user as a valid service provider user and to provide the user with customer specific information.","Additional objects, advantages and novel features of the invention will be set forth in part in the description which follows, and in part will become more apparent to those skilled in the art upon examination of the following, or may be learned by practice of the invention.",{"@attributes":{"id":"p-0017","num":"0016"},"figref":"FIG. 1","b":["30","32","30","32","20","40","42","40","42","20","5","5","32","42","10","20","5","10","30","40","10","30","40"]},{"@attributes":{"id":"p-0018","num":"0017"},"figref":["FIG. 2","FIG. 1"],"b":["10","32","10","32","32","30","32","32","10","32","10"]},{"@attributes":{"id":"p-0019","num":"0018"},"figref":["FIG. 3","FIG. 1","FIG. 3"],"b":["100","30","10","30","100","102"]},"Referring again to , the customer  requests bill payment  by clicking on the \u201cbill payment\u201d hyperlink . The brokerage firm web server  itself does not handle the process of bill payment, but the server  is programmed with the knowledge that the bank web server  handles such a process. The hyperlink  includes the URL of the bank web site . Upon detecting the request of bill payment, the brokerage firm server  builds an authentication token . An authentication token comprises an object (or data) that can be passed between cooperating servers. A function of an embodiment of an authentication token is to convey the necessary information from a primary (or first) server to a secondary (or second) server to allow the secondary server to skip the sign-on process that would otherwise be necessary and required. Once a primary server establishes a session for a user, a cooperating secondary server that receives a valid authentication token from the primary server can establish a session without having the user sign on again.","In the embodiment shown in , the brokerage firm web server  builds an authentication token (or access token) comprising user identification data (or profile data) and expiration time data (token expiry) . The profile data comprises user identification data comprising a customer identification number that uniquely identifies the user to the secondary server. In the shown embodiment, the token also include a list of accounts of the customer. Expiration time data comprises data reflecting the time after which the authentication token is invalid. In the embodiment shown, the time is in Greenwich Mean Time (GMT). In other embodiments, the time may be in Universal Time. Expiration time may be set by the primary server at any desired time, though in most embodiments the expiration time is a relatively short time, e.g., three to twenty minutes, from the time at which the authentication token is created. In the embodiment shown, the expiration time is set at fifteen minutes from the time the authentication token is created. Note that it is important for the servers exchanging such authentication tokens to maintain correct or synchronized clocks. The use of expiration time is used to create a single-use, perishable token.","In the embodiment shown, the authentication token built comprises a cookie with profile data of the customer  and an expiration time of fifteen minutes from the creation time of the token. Authentication tokens may also comprise URL strings or other data that may be passed between servers. The profile data of the customer includes a customer identification number for the customer . The brokerage firm web server  includes a data storage system (e.g., a hard disk drive) that has customer identification numbers associated with log-in user names used by customer's of the brokerage firm web server . These numbers were agreed upon previously by the administrators of the servers , . In the embodiment shown, a customer is associated with a customer identification number. In the embodiment, when the customer requests bill payment , the server  retrieves, from the data storage system, the customer identification number for the customer . This customer identification number retrieved is used in the profile data used to build the cookie .","In another embodiment, various customer identification numbers are associated with various secondary servers. When the customer requests a service provided at a secondary site (or to be transferred to a secondary site), the primary server detects the request, determines the secondary site, and retrieves, from the data storage system, the customer identification number for the requesting customer that is associated with the secondary site to which the customer will be directed for bill payment services.","Referring again to , the server  also selects the secondary server recipient name . The server  does so by examining the request made by the customer and determining the name\/address of the appropriate secondary server to handle the request. In the embodiment shown, the server  examines the \u201cbill payment\u201d request made by the customer. In the present embodiment, the examination comprises determining the Uniform Resource Locator (URL) associated with the \u201cbill payment\u201d hyperlink. The web page file associated with the welcome page  includes the URL associated with the \u201cbill payment\u201d hyperlink, and the server  selects this URL.","The server  then signs and encrypts the cookie . A digital signature associated with the brokerage firm server  is applied to the cookie  by the server . Preferably, the server  comprises public key encryption software capable of encrypting, digitally signing, and authenticating electronic transactions across applications and servers. In the embodiment shown, the Entrust\/PKI 5.0 software package, with its associated application programming interface (API) library, available from Entrust Technologies, Inc., Plano, Tex., is used to sign the cookie using a public key encryption system. In the embodiment shown, the cipher used is the Triple DES (Data Encryption Standard) encryption algorithm system, the encrypted cookie uses privacy-enhanced mail (PEM) headers, and signing uses the Secure Hash Algorithm (SHA-1) to create the message digest (or hash value) in signing. The Triple DES system is used to encrypt the authentication token (the cookie), and a PEM header and SHA-1 digest is included.","A digital signature associated with the server  (in the form of a signed-encrypted string) applied to the cookie allows a secondary server to verify that the authentication token was created by the brokerage firm server . Further, the signature allows a secondary server to detect any modification or corruption of the authentication token. The digital signature is applied and encrypted by the server .","In the embodiment shown, the cookie is created and kept on the browser  of the user  using a header entry in the response page, and the header entry is structured as follows: Set-cookie; name=value; expires=date-time; domain=domainname; path=path; secure. The path value comprises a specific directory, and the domainname value preferably is a common sub-domain (discussed further below). In an embodiment, the authentication token (the cookie) is non-persistent and will not be written to disk on the customer client . In such an embodiment, an expires value is not necessary, and the cookie will be deleted by the receiving server immediately after receipt.","An example of a string comprising cookie construction according to an embodiment of the present invention is as follows:","VER|1EXPDT|199905051325401\u2225CT\\CUST|AF|EXIST\u2225CID|57600100056005023 4\u2225","FCID|0\u2225TA|2\u2225ANM|00110000001\u2225RTN|099\u2225ANA|My wife's","Checking\u2225AB|\u2225ANM|0010000002\u2225RTN009\u2225ANA|My","checking\u2225AB|24556. The example is in the following format: Tag1 Tagvalue1 Tag2 TagValue2 Tag3 TagValue3 . . .","It is noted that the specific tags and their tag values may vary according to implementation needs, such as destination server requirements.","Tags in the example shown, their value, and a description is shown in the following table:",{"@attributes":{"id":"p-0031","num":"0030"},"tables":{"@attributes":{"id":"TABLE-US-00001","num":"00001"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"1","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"49pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"140pt","align":"left"}}],"thead":{"row":[{"entry":{"@attributes":{"namest":"1","nameend":"3","align":"center","rowsep":"1"}}},{"entry":["Tag","Tag Value","Description"]},{"entry":{"@attributes":{"namest":"1","nameend":"3","align":"center","rowsep":"1"}}}]},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["VER","1","Version of cookie system being used (current"]},{"entry":[{},{},"version is 1)"]},{"entry":["EXPDT","Date\/Time","The ASCII GMT date and time that the"]},{"entry":[{},{},"authentication token expires."]},{"entry":[{},{},"Format: CCYYMMDDHHMMSS."]},{"entry":["CT","CUST FC","Customer Type. CUST = regular customer."]},{"entry":[{},{},"FC = Customer Representative. Used"]},{"entry":[{},{},"to activate view-only mode."]},{"entry":["AF","NEW\/","New or existing customer indicator."]},{"entry":[{},"EXIST"]},{"entry":["CID","Integer","Customer Identification Number"]},{"entry":["FCID","Alphanumeric","Identification number for customer service"]},{"entry":[{},{},"representative. If the user is a"]},{"entry":[{},{},"regular customer, do not set FCID"]},{"entry":[{},{},"(i.e., set to 0)."]},{"entry":["TA","Integer","Total Number of Accounts of customer"]},{"entry":["ANM","Integer","Account Number"]},{"entry":["RTN","Integer","Routing transit Number-maps to prod-type-cd"]},{"entry":["ANA","Alphanumeric","Account nick name"]},{"entry":["AB","Integer","Account Balance in cents (i.e. $10.50 = 1050)"]},{"entry":{"@attributes":{"namest":"1","nameend":"3","align":"center","rowsep":"1"}}}]}}}}},"In the embodiment shown, the order of tags is not significant, except for ANM, ANA, AB, which are considered a tuple and are grouped together as shown above. Also, in the embodiment shown, the VER, EXPDT, and CT are required tags. Other tags that may be used in other embodiments include the following: AG (agency or corporation name that employs the user), FNAM (first name of user), and LNAM (last name of user).","The AF tag allows the bank server  to determine if an \u201cActivate User\u201d message should be sent to a transaction processing system (TPS). Preferably, if the brokerage firm web server  cannot determine whether a customer is new or already enrolled with GTPS, the server  sets the AF tag to NEW. In addition, the brokerage firm web server  shown assumes that all accounts are of the \u201cChecking\u201d type, and will set the product type code based on the RTN value determined.","The brokerage firm server  then URL encodes (also called URLEncode) the constructed cookie . Essentially, in URL encoding the cookie, the broker firm web server converts the formatted string discussed above to a URL-encoded format. In one embodiment, the URL encoding encodes the string using the URL escape syntax which comprises a three character string (% nn) specifying the hexadecimal code for a character. This syntax is used to hide characters that may be otherwise significant when used in a URL. The URL encoding  carried out by the brokerage firm web server  results in an encoded, signed, and encrypted string suitable for writing in a cookie, and such string is included in the cookie built by the server .","The brokerage firm web server  then sends a redirect command (or redirect page) with the URL encoded cookie (the authentication token) in a set-cookie header to the customer client . The redirect command includes the URL of the web site associated with \u201cbill payment\u201d . The customer client  receives the redirect command and the URL encoded cookie constructed by the brokerage web server .","The customer client  connects with the bank web site  via the Internet  and sends the cookie to the bank web server . In the embodiment shown, the authentication token is transmitted in a Secure Sockets Layer (SSL) session. Further, in the embodiment shown, on receipt of the redirect command, the customer client  opens a second browser window, requests a download of the home page at the URL of the web site  (or the page designated in the URL), receives the page of the web site  from the bank web server , and displays the page in the window. An embodiment of such a window  and page is shown in . The cookie received by the customer client  from the brokerage firm web server  is sent by the customer client  to the bank web server .","The bank web server  receives the cookie from the customer client . The bank web server  decodes the encoded, signed, and encrypted string built into the cookie by the brokerage firm web server  into a signed, encrypted string . Such decoding employs URL Decoding (or URLDecode) methods in the embodiment shown. In the embodiment shown, URL Decoding is employed to convert the URL encoded string in the cookie to plain ASCII for examination by the bank web server . The bank web server  and the brokerage firm web server  previously exchanged public-private key decryption information.","Once the string is decoded, the bank web server  decrypts and verifies the cookie (including the signed, encrypted string that is now decoded) . In the embodiment shown, software comprising public key encryption software capable of decrypting and authenticating electronic transactions across applications and servers is used by the bank web server  to do so. One example of such software is the Entrust\/PKI 5.0 software package, with its associated application programming interface (API) library, available from Entrust Technologies, Inc., Plano, Tex.","The bank web server , using the software mentioned, determines whether the digital signature associated with the cookie verifies . If the signature does not verify, the bank web server  rejects the attempted sign-on and re-directs the customer client  to a web page on the brokerage firm web server  indicating an error and sign-on failure , resulting in a failed sign-on attempt . In another embodiment, if the signature does not verify, the bank web server  rejects the sign-on and sends a web page indicating an error and sign-on failure to the customer client . In an embodiment, if the signature does not verify, the bank web server  also sends a message indicating such failure to the brokerage firm web site , e.g., an e-mail message.","If the signature verifies, the bank web server  examines the Certificate Authority (CA) name associated with the cookie . The server  compares the CA name associated with the cookie (i.e., the CA used with the CA name expected, as recorded in a registry file in the bank web server ). If the CA name is not the one expected, the bank web server  re-directs the customer client  to an error page on the brokerage firm web server  and the sign-on attempt fails , as described above.","If the CA name is the CA name expected, the bank web server  next if the sender's name is correct . In doing so, the bank web server  determines whether the Common Name (CN) associated with the cookie (i.e., the name being certified\u2014the name used by the brokerage firm web server ) is an authorized name. In so determining, the bank web server  compares the CN associated with the cookie with a file containing authorized names in a data registry in the bank web server . If the CN is not the one expected, the bank web server  re-directs the customer client  to an error page on the brokerage firm web server  and the sign-on attempt fails , as described above.","If the CN is correct, i.e., if the CN is an authorized name, the bank web server  extracts profile data from the cookie and begins a bill-payment session . In the embodiment shown, the server  parses the clear text data associated with the cookie (clear text refers to the information that is not encrypted) , and examines the expiration time data in the cookie (not shown). If the expiration time has passed, the bank web server  re-directs the customer client  to an error page on the brokerage firm web server  and the sign-on attempt fails , as described above. The clear text data includes profile data (e.g., customer identification number). If the expiration time has not passed, the web server  begins a bill payment session using the session and profile data  by sending the customer client the web page  of the bank web site  that is shown in , and the sign-on is successful . The customer client  receives the web page  and proceeds with the bill-payment session with the bank server . In an embodiment, the authentication token (cookie) is then discarded or destroyed by the web server .","In an alternative embodiment, the system reflects a service associated with a user's employee. One such embodiment is shown in . In the embodiment shown in , the process of this alternative embodiment generally proceeds as that discussed above, with exceptions discussed below. The embodiment shown employs a primary server comprising a central web server having a central web site (not shown). The central web site comprises a web site at which the customer client  may request various services by clicking a hyperlink.","Referring to , the customer  signs on to the central web site , and the process , , , , , , , , , , , , continues in a manner like that described above in relation to steps , , , , , , , , , , ,  shown , with the central web server serving as the primary server (the brokerage web server served as the primary web server in the embodiment shown in ) until the step shown as item  occurs. The primary server includes the following, additional tags in the cookie: AG (agency or corporation name that employs the user), FNAM (first name of user), and LNAM (last name of user). The service provider referred to in  comprises the secondary server, and in the embodiment shown comprises the bank web server . After the bank web server  determines that the sender's CA is correct, the web server  determines whether the customer\/user's employer has signed up with the service provider associated with the secondary server (the bank web server ) . The bank web server  includes a database containing a list of employers who signed up with the service offered by the bank web server . The web server  compares the agency or corporation name in the AG tag with the list of employers. If the name in the AG tag is not on the list, the web server  re-directs the customer client  back to the central web site for an error URL .","If the name in the AG tag is on the list, the web server  continues the process by extracting profile data from the cookie and beginning a bill-payment session . After the bank web server  extracts profile data from the cookie and begins a bill-payment session , the server  examines a database (not shown) associated with the server  that includes data reflecting users who have previously signed up for or used the service provided by the server . If the user reflected by the cookie exists (i.e., has previously signed up for or used the service provided by the server ), the web server  retrieves a default web page previously selected as the user's default page and sends the default web page to the customer client , and the customer client  then may proceed with a bill-payment session .","If the user reflected by the cookie does not exist (i.e., the database does not reflect that the user has previously signed up for or used the service provided by the server ) at , the web server  creates a user identification using the tag information, including the AG, FNAM, and LNAM tag information at , and stores the user identification in a database. The server  then retrieves a pre-designated default web page and transmits the web page to the customer client . The pre-designated default web page comprises a pre-designated web page for users associated with the agency\/corporation indicated in the AG tag. The customer client  then may proceed with a bill-payment session .","In an embodiment, multiple secondary servers are used in an embodiment of the present invention. In still other embodiments, multiple primary servers are used. A group of one or more primary and one or more secondary servers sharing log-in and other information as described herein may be referred to as a \u201cfederation\u201d of servers.","In the embodiments shown herein, a digital certificate generation software program is used to generate certificates. An example of such software is the Entrust Solo Version 4.0 software package, available from Entrust Technologies, Inc., Plano, Tex. Preferably, when multiple secondary servers are employed in an embodiment of the present invention, the secondary servers will use the same profile (a file comprising information needed by the certificate before the server can authenticate). Also, preferably, the CN name in the profile matches the generic host name of the secondary server.","In embodiments, multiple primary servers are employed. The primary servers may use the same profile on all hosts or each host may use a separate profile. Like the secondary servers, certificates are employed in each primary server.","In an embodiment, servers sharing information between themselves that are maintained by different organizations use a shared domain in common in order to ease the sharing of information. In such an embodiment, a sub-domain is established or designated as the common sub-domain, the domain attribute of the authentication token (e.g., the shared cookie) is designated as the common sub-domain, and a \u201cForward IP (Internet Protocol) Pointer\u201d entry is added in the DNS name servers of the cooperating organizations.","For example, the primary server sets a cookie sub-domain of xxxx.yyyy.com (wherein yyyy.com comprises the domain name of the primary server). Using \u201ctail matching,\u201d cookies may be shared with any host whose domain tail is \u201cyyyy.com.\u201d When the server searches a cookie list on the user's computer for valid or useable cookies, the server compares the domain attributes of the cookie with the Internet domain name of the host. If there is a tail match, then the cookie will go through path matching to see if it should be sent. \u201cTail matching\u201d means that domain attribute is matched against the tail of the fully qualified domain name of the host. For example, a domain attribute of \u201cxxxx.com\u201d would match host names \u201cyyyy.xxxx.com\u201d as well as \u201czzzz.yyyy.xxxx.com.\u201d For example, the primary server with which the user interacts has a domain name of qqqq.yyyy.com, and the secondary server has a domain name of ssss.rrrr.yyyy.com, may share cookies in such an embodiment. In an embodiment, the IP pointer in the domain name server associated with the primary server either (1) maps the secondary server domain (ssss.rrrr.yyyy.com) to a pre-designated IP address associated with the secondary server; or (2) delegate the zone \u201crrrr\u201d to a DNS name server associated with the secondary server for resolution.","As discussed above, certain embodiments of the present invention employ URL Encode and URL Decode. The following is a code fragment written in Microsoft C++6.0 showing an example of the implementation of URL Encode by a server:",{"@attributes":{"id":"p-0053","num":"0052"},"tables":{"@attributes":{"id":"TABLE-US-00002","num":"00002"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"thead":{"row":{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"\/\/"]},{"entry":[{},"\/\/ URLEncode converts some characters to %xx format for sending"]},{"entry":[{},"\/\/ in a URL or writing to a cookie"]},{"entry":[{},"\/\/"]},{"entry":[{},"void URLEncode (BYTE* szDecoded, BYTE* szEncoded)"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"189pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"{"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"175pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"BYTE* pszInPtr = szDecoded;"]},{"entry":[{},"BYTE* pszOutPtr = szEncoded;"]},{"entry":[{},"BYTE inch;"]},{"entry":[{},"while ((inch = *pszInPtr++) != \u2018\\0\u2019)"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"189pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"{"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"4"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"56pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"105pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"if(","(inch < 32) \u2225","(inch > 127) \u2225"]},{"entry":[{},{},"(inch == \u2018=\u2019) \u2225","(inch == \u2018?\u2019) \u2225"]},{"entry":[{},{},"(inch == \u2018&\u2019) \u2225","(inch == \u2018+\u2019) \u2225"]},{"entry":[{},{},"(inch == \u2018%\u2019) \u2225","(inch == \u2018\u2212\u2019) \u2225"]},{"entry":[{},{},"(inch == \u2018:\u2019) \u2225","(inch == \u2018;\u2019) \u2225"]},{"entry":[{},{},"(inch == \u2018,\u2019))"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"189pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"{"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"175pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"*pszOutPtr++ = \u2018%\u2019;"]},{"entry":[{},"sprintf((char*)pszOutPtr, \u201c%02x\u201d, inch);"]},{"entry":[{},"pszOutPtr += 2;"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"189pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"}"]},{"entry":[{},"else"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"175pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"*pszOutPtr++ = inch;"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"189pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"}"]},{"entry":[{},"*pszOutPtr++ = \u2018\\0\\;;"]},{"entry":[{},"}"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}]}}]}}},"The following code fragment shows the implementation of URL-Decode by as server:",{"@attributes":{"id":"p-0055","num":"0054"},"tables":{"@attributes":{"id":"TABLE-US-00003","num":"00003"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"thead":{"row":{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"\/\/"]},{"entry":[{},"\/\/ URLDecode converts characters in the %xx format back to their"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":"ascii values"}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"\/\/"]},{"entry":[{},"void \u2003URLDecode (BYTE* szEncoded, BYTE* szDecoded)"]},{"entry":[{},"{"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"189pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"BYTE* pszInPtr = szEncoded;"]},{"entry":[{},"BYTE* pszOutPtr = szDecoded;"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"21pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"168pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"int","inch;"]},{"entry":[{},"while","((inch = *pszIntPtr++)\u2003\u2003!= \u2018\\0\u2019)"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"189pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"{"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"35pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"182pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"if (inch == \u2018%\u2019)"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"56pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"161pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"*pszOutPtr++ = (unHex(pszInPtr++)<< 4) +"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"77pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"140pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"unHex(*pszInPtr++);"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"35pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"182pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"else"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"56pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"161pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"*pszOutPtr++ = inch;"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"189pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"}"]},{"entry":[{},"*pszOutPtr++ = \u2018\\0\u2019;"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"}"]},{"entry":[{},"int unHex (BYTE hexChar)"]},{"entry":[{},"{"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"189pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"if ((hexChar >>= \u20180\u2019) && (hexChar <= \u20189\u2019))"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"35pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"182pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"return hexChar \u2212 \u20180\u2019;"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"189pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"if ((hexChar >= \u2018a\u2019) && (hexChar <= \u2018f\u2019))"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"35pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"182pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"return hexChar \u2212 \u2018a\u2019 + 10;"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"189pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"if ((hexChar >= \u2018A\u2019) && (hexChar <= \u2018F\u2019))"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"35pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"182pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"return hexChar \u2212 \u2018A\u2019 + 10;"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"189pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"return 0;"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"}"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}]}}]}}},"Those of ordinary skill in the art will recognize that there are a variety of code fragments useful in carrying out such steps. Further, a variety of programming languages may be used.","Various embodiments of the invention have been described in fulfillment of the various objects of the invention. It should be recognized that these embodiments are merely illustrative of the principles of the present invention. Numerous modifications and adaptations thereof will be apparent to those skilled in the art without departing from the spirit and scope of the present invention."],"BRFSUM":[{},{}],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"V. BRIEF DESCRIPTION OF FIGURES","p":[{"@attributes":{"id":"p-0013","num":"0012"},"figref":"FIG. 1"},{"@attributes":{"id":"p-0014","num":"0013"},"figref":["FIG. 2","FIG. 1"]},{"@attributes":{"id":"p-0015","num":"0014"},"figref":["FIG. 3","FIG. 1"]},{"@attributes":{"id":"p-0016","num":"0015"},"figref":["FIG. 4","FIG. 1"]}]},"DETDESC":[{},{}]}
