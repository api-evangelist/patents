---
title: Device centric discovery and configuration for fabric devices
abstract: A host may be coupled to a fabric network. Fabric devices attached to the fabric network may be visible to the host through one or more host adapter ports. The host system may include a device centric discovery interface configured to provide an interface to a fabric driver to obtain information about the devices in the fabric network. The device centric discovery interface may be configured to return device centric discovery information such that a multi-path fabric device is presented as a single device with transport information provided for each path to the multi-path device. A device centric configuration interface may provide an interface to the fabric driver for device centric configuration of the devices in the fabric for use by the host such that a requested fabric device is configured for use by the host on multiple paths in the fabric network.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=06965951&OS=06965951&RS=06965951
owner: Sun Microsystems, Inc.
number: 06965951
owner_city: Santa Clara
owner_country: US
publication_date: 20020517
---

{"@attributes":{"id":"description"},"BRFSUM":[{},{}],"heading":["BACKGROUND OF THE INVENTION","SUMMARY OF THE INVENTION","DETAILED DESCRIPTION OF EMBODIMENTS OF THE INVENTION"],"p":["1. Field of the Invention","This invention relates to network systems, and more particularly to discovery and configuration of devices attached to a fabric in a storage network.","2. Description of the Related Art","Storage area networks, also referred to as SANs, are dedicated networks that connect one or more systems to storage devices and subsystems. Today, fibre channel is one of the leading technologies for SANs. In general, fibre channel encompasses three networking topologies: point-to-point, loop, and fabric. In a point-to-point topology, a fibre channel host adapter in a system is typically connected to a single fibre channel storage subsystem. In a fibre channel loop network, also called an arbitrated loop, the loop is constructed by connecting devices together in a single logical ring. Loops can be constructed by connecting devices through a fibre channel hub in a star-wired topology or by connecting them together in a connected physical loop from device to device. In a fibre channel fabric topology, the storage networks are constructed with network switches. A fabric can be composed of a single switch or multiple switches. Ports on fabric networks connect devices to switches on low-latency, point-to-point connections.","The devices connected in the loop and fabric topologies may be referred to as \u201cnetwork nodes\u201d and may be any entity that is able to send or receive transmissions in a fibre channel network. For example, a network node may be a computer system, a storage device\/subsystem, a storage router\/bridge that connects SCSI equipment, a printer, a scanner, or any other equipment, such as data capture equipment. The ANSI X3.272-1996 specification entitled \u201cFC-AL, Fibre Channel Arbitrated Loop\u201d and the ANSI X3.T11 Project 1133-D specification entitled \u201cFC-AL-2, Fibre Channel Arbitrated Loop\u201d describe examples of fibre channel loop topologies in further detail. The ANSI X3.T11 Project 959-D specification entitled \u201cFC-SW Fibre Channel Switch Fabric\u201d describes an example of a fibre channel fabric in further detail. Note that the most recent versions of these and related specifications may be obtained from the T11 technical committee of the National Committee for Information Technology Standards (NCITS).","For point-to-point topologies and loop topologies, device drivers executing on a host computer may perform device discovery at host boot-up to determine locally connected devices. The discovered devices are configured to be accessible to applications running on the host by creating a node for each device within the host. These types of nodes are referred to as operating system device nodes. Each node functions as an internal (to the host) representation of an attached device and provides a communication path to the device. For fabric topologies, discovering fabric devices and associated paths available to the host computer as part of the boot-up process may not be feasible because of the number of devices capable of being attached to the fabric. In addition, there may be multiple paths from a host computer to a particular device in the fabric.","A host system may have one or more host adapter ports for coupling the system to a fabric network. Fabric devices attached to the fabric network may be visible to the system through the one or more host adapter port. The host system may include a fabric driver configured to interface the system to the fabric network through the host adapter ports. A device centric discovery interface may provide an interface to the fabric driver to obtain information about the devices in the fabric network. The device centric discovery interface may return device centric discovery information such that a multi-path fabric device is presented as a single device with transport information provided for each path to the multi-path device. A single device may be an upper level protocol ULP device, such as a SCSI LUN device wherein a number of ULP devices may share the same fabric transport path. The system may also include a device centric configuration interface for providing an interface to the fabric driver for device centric configuration of the devices (including multi-path devices) in the fabric for use by the host system such that a requested fabric device is configured for use by the host system on multiple paths in the fabric network.","The host system may also include a transport centric discovery interface configured to provide an interface to the fabric driver to obtain information about the devices in the fabric network. The transport centric discovery interface may return transport centric discovery information such that a multi-path device is presented as a separate device for each path to the multi-path device. The host system may also include a transport centric configuration interface for providing an interface to the fabric driver for transport centric configuration of the devices in the fabric for use by the system such that fabric device are configured for use by the system on a requested fabric transport path.","A method may include discovering a plurality of devices on a fabric network and displaying information describing the plurality of discovered devices in a device-centric format, wherein in the device-centric format each device is displayed as a single device with one or more associated paths each corresponding to a particular transport connection to a host. A displayed device may be an upper level protocol device, such as a SCSI LUN device. The method may include configuring a selected one of the devices for use by the host on one or more associated paths in response to user input.","While the invention is described herein by way of example for several embodiments and illustrative drawings, those skilled in the art will recognize the invention is not limited to the embodiments or drawings described. It should be understood that the drawings and detailed description thereto are not intended to limit the invention to the particular form disclosed, but on the contrary, the intention is to cover all modifications, equivalents and alternatives falling within the spirit and scope of the invention as defined by the appended claims. The headings used herein are for organizational purposes only and are not meant to be used to limit the scope of the description or the claims. As used throughout this application, the word \u201cmay\u201d is used in a permissive sense (i.e., meaning having the potential to), rather than the mandatory sense (i.e., meaning must). Similarly, the words \u201cinclude\u201d, \u201cincluding\u201d, and \u201cincludes\u201d mean including, but not limited to.","Suitable for implementing various embodiments,  illustrates a host system  attached to a fabric . The host system may include at least one central processing unit (CPU) or processor . The CPU  may be coupled to a memory . The memory  is representative of various types of possible memory media, also referred to as \u201ccomputer readable media\u201d. Hard disk storage, floppy disk storage, removable disk storage, flash memory or random access memory (RAM) are examples of memory media. The terms \u201cmemory\u201d and \u201cmemory medium\u201d may include an installation medium, e.g., a CD-ROM or floppy disk, a computer system memory such as DRAM, SRAM, EDO RAM, SDRAM, DDR SDRAM, Rambus RAM, etc., or a non-volatile memory such as a magnetic media, e.g., a hard drive or optical storage. The memory medium may include other types of memory as well, or combinations thereof. In addition, the memory medium may be located in a first computer in which the programs are executed, or may be located in a second different computer which connects to the first computer over a network. In the latter instance, the second computer may provide the program instructions to the first computer for execution.","The memory  may permit two-way access: readable and writable. The memory  may store instructions and\/or data which implement all or part of the system and method described in detail herein, and the memory  may be utilized to install the instructions and\/or data. The host system  may be any of the various types of devices, including, but not limited to, a personal computer system, desktop computer, laptop computer, palmtop computer, mainframe computer system, workstation, network appliance, network computer, Internet appliance, personal digital assistant (PDA), embedded device, smart phone, television system, or other suitable device. In general, the term \u201ccomputer system\u201d may be broadly defined to encompass any device having a processor  which executes instructions from a memory medium.","The host system  may be coupled to a fabric , which may provide access to a plurality of fabric attached devices, such as persistent storage devices or other computer peripheral devices. The CPU  may acquire instructions and\/or data through an input\/output (I\/O) interface . Through the input\/output interface , the CPU  may also be coupled to one or more local devices , such as local input\/output devices (video monitors or other displays, track balls, mice, keyboards, etc.) local storage devices (hard drives, optical storage devices, etc.), local printers, plotters, scanners, and any other type of local I\/O devices for use with a host system . Some local devices  may be referred to as direct attach devices. The input\/output interface  may include host adapters (HA) and for coupling to the local devices  and fabric respectively. Host adapters and may be fibre channel adapters (FCAs). In one embodiment, one or more of the local devices  may be included in the host system , such as in expansion slots of the host system . In one embodiment, one or more of the local devices  may be externally connected to the host system .","The host system  may be able to execute one or more computer programs. The computer programs may comprise an operating system (OS) or other system software, application software, utility software, Java\u2122 applets, and\/or any other sequence of instructions. Typically, an operating system performs basic tasks such as recognizing input from the keyboard, sending output to the display screen, keeping track of files and directories on the disk, and controlling peripheral devices such as disk drives and printers. Application software runs on top of the operating system and provides additional functionality. In one embodiment, the OS may be based on the Solaris\u2122 operating system from Sun Microsystems, Inc. The computer programs may be stored in a memory medium or storage medium such as the memory . Alternatively, the computer programs may be provided to the CPU  through the fabric or input\/output interface .",{"@attributes":{"id":"p-0027","num":"0026"},"figref":"FIG. 2","b":["108","108","105","210","210","210","211","212","210","210","210","211","212","210"]},{"@attributes":{"id":"p-0028","num":"0027"},"figref":"FIG. 3","b":["306","410"]},"Host adapter  couples host system to private loop  and adapters and couple host system to fabric . Note that host adapters , and may be separate host bus adapter cards, for example. In other embodiments, host adapters , and may each refer to a separate host adapter port. Coupled to private loop  are one or more direct attach devices . Direct attach device(s) are considered local to host system A.","The host system may be coupled to fabric  via host adapter . Fabric  may include fibre channel switches  which are coupled to multiple fabric devices . Each fibre channel switch  may connect to various fibre channel topologies such as point-to-point fibre channel connections or fibre channel loops. Each switch  may also connect to one or more other fibre channel switches. The fabric devices  may be various storage devices such as hard disk drives, optical drives, tape drives, etc. In some embodiments, fabric devices  may be any type of I\/O device such as storage devices, printers, scanners, etc. as used in conjunction with computer systems.","Due to the large number of devices which may be present in fabric , the time required for a host system  to discover and online all of the devices available through fabric  may be impractical. Furthermore, it may be unlikely that host system  actually needs to communicate with all of the various fabric devices . The term \u201conline\u201d may be used herein to refer to a host creating a node as a representation in the host of a device and\/or a communication mechanism or path to a device.","Within fabric , a host or host adapter port may have multiple paths through the fabric to the same device. For example,  shows host system having at least two paths to device . One path is from to switch to host system . Another path is from device to switch to switch to host system . In some embodiments, the same host adapter port may be able to reach a fabric device through several at least partially different paths within the fabric. In some embodiments, fabric  may include numerous switches and interconnect such that a host may have multiple paths to any number of devices within the fabric. Multiple paths may provide for redundancy in a host system's ability to communicate with a device.",{"@attributes":{"id":"p-0033","num":"0032"},"figref":"FIG. 4","b":["508","510","504","508","510","506","502","508","502","508"]},"During a discovery process, the administration application  may query a fabric driver  for a list of devices visible to the host system . In some embodiments, the query operations made by the administration application to obtain a list of the fabric devices may be made on a per host adapter port granularity or a set of host adapter ports granularity so that the number of devices returned by the query may be more manageable.","The fabric driver  may provide an interface for the host system  to the fabric . The fabric driver  may be part of the operating system for the host system  and may include one or more modules for handling various functions required to interface the host system  to the fabric  such as protocol handling and device and\/or transport layer operations. In one embodiment, the fabric driver  may be a Solaris kernel module or modules. The fabric driver  may provide the requested list of devices to the administration application . A subset of these devices may then be selected through the administration application  and brought online by the fabric driver  so that the subset of devices are accessible from the host system . Onlining the subset of devices may include the creation of a node within the operating system for each device wherein the node provides a reference for applications or other processes in the host system  to reference a corresponding device in the fabric. Thus, a node may provide a reference for an application or process running on the host system  to communicate with one of the fabric devices. When a fabric device is onlined, a communication path may be established between the host system  and the discovered fabric device. A discovered fabric device may have multiple paths through the fabric to a host . Such a device may be referred to as a multi-path device. The host  may include a multi-path device manager, such as Traffic Manager from Sun Microsystems, Inc. Thus, it may be desirable to online a discovered fabric device for multiple communication paths to the host for management by a multi-path manager. The multi-path manager may provide for load balancing to devices over multiple paths in the fabric. The multi-path manager may provide for fail-over to another path in case a path to a multi-path device fails.",{"@attributes":{"id":"p-0036","num":"0035"},"figref":"FIG. 5","b":["800","510","800","504","503","502","504","503","503","504"]},"The interface  may be provided to the fabric driver  that includes a device centric discovery interface  to represent a multi-path device as a single device while showing transport information for each path to the device. The device centric discovery interface  may allow a user (e.g., an application) to discover information about fabric devices from a device centric perspective. The device centric discovery interface  may return device centric discovery information such that a multi-path device is shown as a single device with transport information shown for each path to the device. In some embodiments, several upper layer protocol (ULP) devices may share the same connection to the fabric. The device centric discovery interface  may provide multi-path discovery information for each ULP device. For example, a SCSI drive array may include multiple SCSI LUN (Logical Unit Number) devices from the same SCSI target in the fabric. The device centric discovery interface  may return discovery information from the perspective of each SCSI LUN.","The interface  to the fabric driver may also include a transport centric discovery interface  to provide fabric device discovery information from a transport perspective. The transport centric interface  may return transport information according to each path. Thus, the transport centric discovery interface  shows each path separately, even though two or more paths may be connected to the same device.","In one embodiment, including both a device centric discovery interface  and a transport centric discovery interface , a user may discover fabric devices from a device centric perspective, a transport centric perspective, or both. For multi-path devices, the device centric discovery interface shows the device with transport information grouped together for each path to the device. Multi-path devices may be less easily identified using the transport centric discovery interface  since each path is shown separately and may not be grouped according to the device.","The interface  to the fabric driver may also include a device centric configuration interface  to configure multiple paths to fabric devices from a device perspective. For a particular device, the device centric configuration interface  may provide for configuring (e.g., onlining) multiple paths to the device. A user may desire to configure all discovered fabric connections to a certain device to take advantage of multi-path management support provided within the host. In one embodiment, for a specified device the device centric configuration interface  may configure each discovered path in the fabric to the specified device.","The interface  to the fabric driver may also include a transport centric configuration interface  to configure specific paths to fabric devices from a transport perspective. The transport centric configuration interface  may provide for configuring a specific path to a device.","Administration application  may provide a mechanism to select and online a subset of the visible fabric devices. The mechanism to select and online a subset of devices may utilize a device centric and\/or transport centric interface to the fabric driver to discover and configure devices. In one embodiment, the administration application  may be run outside of the boot process so that device discovery and online operations do not increase the host system  boot time. The administration application  may be run on-demand so that fabric devices may be selected and brought online on demand. For one embodiment, a user may use the administration application  to request a list of fabric devices available through one or more host adapter I\/O ports of the host system. The administration application  may include a command line interface or a graphical user interface (or both) for displaying the list to the user. Fabric device information may be requested from a device perspective, a transport perspective, or both. Through the administration application the user may then select a desired subset of the listed devices and may request that the selected devices be brought online. In one embodiment, the user may select a device from a device centric view and request that the selected device be brought online with associated multiple paths. In further embodiments, the user may select a device from a transport centric perspective and request that the selected device associated with the selected path be brought online.","For one embodiment, the fabric driver  may include various sub-modules. For example, in a fabric channel implementation, the fabric driver  may include a ULP device layer . ULP device module(s) in layer  may be part of the operating system kernel and may perform all protocol related operations required for fabric channel use on the host operating system. For example, a ULP module may be a SCSI over fiber channel encapsulation driver module for supporting SCSI over fiber channel. The fabric driver may also include a transport layer . This layer may include one or more modules that may perform generic fabric operations. In one embodiment, the transport layer may include a fiber channel port (FP) driver for each fibre channel port on the host system. Each FP driver may also be part of the operating system kernel. The FP driver may perform generic fiber channel operations such as topology discovery (e.g., loop, point-to-point, fabric, etc.), device discovery (on various topologies), handling extended link services, handling link state changes, etc. The fabric driver  may also include host adapter (HA) drivers  for each host adapter\/controller board on the host system. For example, FCA drivers may be present for fiber channel adapters having fiber channel ports on the host system.","The interface  may provide application programming interfaces (APIs) for the administration application  to make queries in order to obtain a list of devices connected to one or more host adapter ports. Fabric device information may be returned according to a device centric perspective and\/or a transport centric perspective. In one embodiment, interface  may interact with a device layer and\/or a transport layer of the fabric driver  to execute the query irrespective of the interconnect topology of the host adapter ports. For example, the fabric driver  may obtain the list of devices connected to a fibre channel switched fabric by querying a fabric name server. The fabric name server may be located within a fabric switch or distributed across the fabric switches and may maintain information about the various fabric devices. The fabric name server may include a database of objects. Each fabric attached device may register or query useful information in the name server, including, name, address, class of service capability of other participants, etc. Fabric driver  may also obtain upper layer protocol (ULP) device information. The interface  or fabric driver  may also provide an API for obtaining a list of direct attach devices for a host. For example, the fabric driver  may obtain the loop map for a host system's private loop topology.","The following examples illustrate information that may be returned by transport centric discovery interface  and device centric discovery interface  from the transport and device layers of fabric driver . In the first example below, transport centric information obtained through the transport centric interface, based on a port World Wide Name (WWN), is shown. As shown below, a device which may be connected to the fabric through two host adapter ports, 50020f2300006077 and 50020f2300006107, is presented separately for each port WWN.",{"@attributes":{"id":"p-0046","num":"0045"},"tables":{"@attributes":{"id":"TABLE-US-00001","num":"00001"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"4"},"colspec":[{"@attributes":{"colname":"1","colwidth":"70pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"49pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"42pt","align":"center"}},{"@attributes":{"colname":"4","colwidth":"56pt","align":"left"}}],"thead":{"row":[{"entry":{"@attributes":{"namest":"1","nameend":"4","align":"center","rowsep":"1"}}},{"entry":["Port WWN","Device Type","Capacity","Configured Info"]},{"entry":{"@attributes":{"namest":"1","nameend":"4","align":"center","rowsep":"1"}}}]},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["Fabric FCA port c4",{},{},{}]},{"entry":["50020f2300006077","SCSI-disk","36G","unconfigured"]},{"entry":["50020f2300005f24","SCSI-disk","36G","configured"]},{"entry":["210100e08b247c12","IP",{},"configured"]},{"entry":"Fabric FCA port c5"},{"entry":["50020f2300006107","SCSI-disk","36G","unconfigured"]},{"entry":["50020f23000063a9","SCSI-disk","36G","configured"]},{"entry":["210100e08b245f12","IP",{},"configured"]},{"entry":"Fabric FCA port c6"},{"entry":"."},{"entry":"."},{"entry":"."},{"entry":{"@attributes":{"namest":"1","nameend":"4","align":"center","rowsep":"1"}}}]}}}}},"In the next example, device centric information obtained through the transport centric interface based on an Upper Layer Protocol (ULP) device identifier, is shown. As shown in the example, a device which has ULP unique ID 60020F20000063A93AEFFB5C000D6984 is connected to both c4 and c5 host adapter ports and is presented as a single ULP device. For FCP SCSI, the Global Unique ID may be used to indicate the ULP device. The multi-path (MP) support field below indicates if the fibre channel host adapter port is enabled with multi-path management support or not. The first three devices have the same FC connection since they are SCSI devices from the same SCSI target device.",{"@attributes":{"id":"p-0048","num":"0047"},"tables":{"@attributes":{"id":"TABLE-US-00002","num":"00002"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"4"},"colspec":[{"@attributes":{"colname":"1","colwidth":"70pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"63pt","align":"center"}},{"@attributes":{"colname":"3","colwidth":"42pt","align":"center"}},{"@attributes":{"colname":"4","colwidth":"42pt","align":"center"}}],"thead":{"row":[{"entry":{"@attributes":{"namest":"1","nameend":"4","align":"center","rowsep":"1"}}},{"entry":["FC connection","Configured","MP support","Status"]},{"entry":{"@attributes":{"namest":"1","nameend":"4","align":"center","rowsep":"1"}}}]},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":{}}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"center"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"FCP SCSI ID 60020F20000063A93AEFFB5C000D6984"},{"entry":"(SCSI Disk Device Capacity: 36G)"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"4"},"colspec":[{"@attributes":{"colname":"1","colwidth":"70pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"63pt","align":"center"}},{"@attributes":{"colname":"3","colwidth":"42pt","align":"center"}},{"@attributes":{"colname":"4","colwidth":"42pt","align":"center"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["c4 50020f2300006077","no","yes","ok"]},{"entry":["c5 50020f2300006107","no","yes","ok"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"center"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"FCP SCSI ID 60020F20000063A93AEFFB3000098A19"},{"entry":"(SCSI Disk Device Capacity: 36G)"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"4"},"colspec":[{"@attributes":{"colname":"1","colwidth":"70pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"63pt","align":"center"}},{"@attributes":{"colname":"3","colwidth":"42pt","align":"center"}},{"@attributes":{"colname":"4","colwidth":"42pt","align":"center"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["c4 50020f2300006077","no","yes","ok"]},{"entry":["c5 50020f2300006107","no","yes","ok"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"center"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"FCP SCSI ID 60020F20000063A93AEFFB200003D112"},{"entry":"(SCSI Disk Device Capacity: 36G)"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"4"},"colspec":[{"@attributes":{"colname":"1","colwidth":"70pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"63pt","align":"center"}},{"@attributes":{"colname":"3","colwidth":"42pt","align":"center"}},{"@attributes":{"colname":"4","colwidth":"42pt","align":"center"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["c4 50020f2300006077","no","yes","ok"]},{"entry":["c5 50020f2300006107","no","yes","ok"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"center"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"FCP SCSI ID 60020F20000063A93AEFDE18000589DC"},{"entry":"(SCSI Disk Device Capacity: 36G)"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"4"},"colspec":[{"@attributes":{"colname":"1","colwidth":"70pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"63pt","align":"center"}},{"@attributes":{"colname":"3","colwidth":"42pt","align":"center"}},{"@attributes":{"colname":"4","colwidth":"42pt","align":"center"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["c4 50020f2300005f24","yes","yes","ok"]},{"entry":["c5 50020f23000063a9","yes","yes","ok"]},{"entry":"."},{"entry":"."},{"entry":"."},{"entry":{"@attributes":{"namest":"1","nameend":"4","align":"center","rowsep":"1"}}}]}}]}}},"Using the device centric and\/or transport centric interfaces, a user may discover information about fabric devices accessible from a host and select devices for on-demand configuration including node creation. In one embodiment, for fabric topologies connected to the host system, operating system device nodes may not be created until an on-demand request is made by the administration application. Upon such a request from the administration application , the interface  and fabric driver  may provide a list of devices visible through one or more fabric host adapter ports according to a device centric or a transport centric perspective. The list of fabric devices may be provided by the administration application  to a user, for example, through a graphical user interface. The user may use the administration application  to select and online particular devices which are desired to be used by the host system. The user may use administration application  to select a device and request a device centric configuration through interface  such that the selected device may be brought online with associated multiple paths. In other embodiments, devices may be configured from a transport centric perspective such that a device is configured for a selected device path.","For direct attach devices, e.g. private loop topologies, operating system device nodes may be created during driver attach (e.g., when the fabric driver is loaded during a reboot) for all devices visible through a direct attach port. In some embodiments, operating system device nodes may only be created for direct attach devices that support a particular protocol (e.g., Fibre Channel Protocol (FCP)\/SCSI).","The user may also use administration application  to offline any devices which are no longer needed. Offlining may include removing access to a storage device from the host operating system by removing the node. The list of devices displayed to the user by the administration application  may include the information returned about the fabric devices from a device centric or transport centric perspective. The administration application  may request the fabric driver  to online or offline fabric devices as indicated by a user using the application's user interface. The administration application  may request the fabric driver  to online or offline fabric devices from a device centric or transport centric perspective.","In some embodiments, the administration application  may make requests to the fabric driver to obtain fabric device information and\/or to online\/offline fabric devices without the involvement of a user. For example, certain events or requests from other processes may trigger the administration application  to online a fabric device(s).","The persistent repository  may be stored in the host system, or in some central locale accessible to the host system  indicating the current fabric devices which have been onlined (e.g., devices for which an operating system device node has been created). The persistent repository  may store fabric device configuration information from a device centric or a transport centric perspective as described above. The information stored in the persistent repository  may be used so that the configuration of devices online for the host system  persists across reboots and shutdowns. For example, when the host system  is rebooted the persistent repository may be read to determine which devices were online before the reboot and the fabric driver may be requested to online these same devices again.","The persistent repository  may be dynamically updated to reflect the state of the fabric devices. For example, if a fabric device which is currently online for the host system is disabled on the fabric (for example, a hard drive fails or is removed from the fabric), the fabric driver may generate an event causing the persistent repository  to be updated to reflect that the device or a particular path configuration for the device is now offline. Similarly, if the same device later is restored on the fabric, the device or a particular path configuration for the device may be onlined again (e.g., in response to an event) for the host system  and the persistent repository  may be dynamically updated to reflect the onlined status.","Turning to , a flowchart is provided illustrating a device discovery process according to one embodiment. The discovery process may be part of a host system reconfiguration boot process. Alternatively, if a non-reconfiguration boot is performed of the host system in which device discovery is not performed, the discovery process may run when a previously created device node is accessed in the host system. This discovery process may also be performed if the host system's host adapter link is lost (e.g., cable pulled out).","During the discovery process a fabric driver is loaded as indicated at . Note that if the fabric driver is already loaded, then it may not be necessary to load the fabric driver again. The link state of each host adapter port may be checked as indicated at  and . If a port's link is down, the link may be designated as offline as indicated at , and the discovery process for that link may wait for a state change in the link to online, as indicated at . If the link is later restored, the discovery process may continue for that link.","If the link is up, the link type is determined, as indicated at . In one embodiment, a fabric login is attempted through the link. If the fabric login is successful, the link is determined to be a fabric link. If unsuccessful the link is determined to be a direct attach link. For a direct attach link, one or more direct attach devices are discovered and brought online by creating operating system device nodes for each direct attach device. If the link is a fabric link, the link is designated as such, but no device discovery or onlining of devices is performed for the fabric link as part of this discovery process, as indicated at . This discovery process may be repeated any time a link goes out (e.g., cable pulled, power off, host reboot, etc.).","The device discovery process may provide for the discovery and onlining of direct attach devices since the discovery and onlining of such devices may be completed quickly due to the limited number of such devices. However, in some embodiments, for a host system's fabric links, device discovery may not be performed as part of the normal discovery process at reconfiguration boot up or the first time a node is attempted to be accessed after a link has been down and brought back up. Instead, fabric devices may be discovered using the on-demand node creation process described herein.","One embodiment of the on-demand node creation process is illustrated by the flowchart of  request may be received to discover fabric attached devices and associated paths, as indicated at . The request may be a request to an interface to discover fabric devices from a device and\/or transport centric perspective. In response to the request to discover fabric attached devices, a fabric may be requested to identify fabric devices and associated paths available to a host system, as indicated at . A list of identified fabric devices and associated paths may be received from the fabric, as indicated at . Note that the term \u201clist\u201d simply refers to the information or data provided by the fabric driver.","This list may be provided to a user for selection of a subset of the fabric devices, as indicated at . Discovery information may be returned in a device centric perspective such that multi-path devices are each presented as a single device with transport information shown for each path to the device. In one embodiment, device centric discovery may be presented by grouping path information together for each device so that each device is presented with all of its discovered paths. Discovery information may alternatively or additionally be returned in a transport centric perspective such that device transport information for each port is listed. In one embodiment, transport centric discovery may be presented by grouping device transport information together for each port so that each discovered device path from a host adapter port is presented together for the port. Alternatively, selection of a subset of the fabric devices may be performed without user involvement, as indicated at .","A request may be received to on-line the subset of identified fabric devices, as indicated at . In one embodiment, the user may select a device from a device centric view and request that the selected device be brought online for each path presented for the device. Thus, a user may select a device for device centric configuration to online the selected device for all of the paths presented for the device. In another embodiment, the user may select a device from a transport centric view and request that the selected device be brought online for the selected path. In response to the request to on-line the subset of identified fabric devices, a node or nodes may be created for each fabric device of the subset not already on-line, as indicated at . A node provides a mechanism for processes to communicate with the corresponding device from the host system. The on-line status on each fabric device of the subset may be stored, as indicated at .","Another embodiment of the on-demand node creation process is illustrated by the flowchart of FIG. . An administration application may make a request for a list of fabric devices, as indicated at . This request may have been initiated by a user using the administration application for the host system. In other embodiments, this process may be initiated automatically, for example in response to an event (e.g., fibre channel protocol event) or a request from another application or process. The request may be made to a device centric or transport centric interface, as described above, to request fabric device information in a device centric or transport centric perspective. The device centric and\/or transport centric interface may then request fabric device information from a fabric driver, as indicated at . The fabric driver may access a fabric name server to obtain the requested information and return the requested list of fabric devices to the administration application. Note that the term \u201clist\u201d simply refers to the information or data provided by the fabric driver, not any particular format.","The administration application may receive the list and a subset of devices may be selected from the list, as indicated at . If a device centric discovery request was made, discovery information may be returned in a device centric perspective such that multi-path devices are each presented as a single device with transport information shown for each path to the device. If a device centric discovery request was made, discovery information may be returned in a transport centric perspective such that device transport information is listed for each host adapter port. In one embodiment, the list may be displayed through a graphical user interface to a user. In other embodiments, a command line or textual user interface may be used. The user may select particular devices from the list to be onlined or offlined. The user may select a device in a device centric view such that each discovered path for the device is selected. In some embodiments, a user may select devices to be onlined for particular paths from a transport centric view. The administration application may then call the fabric driver to online or offline devices as indicated by the selections made for the subset from the list, as indicated at . The driver may then attempt to online the devices selected to be onlined (and may offline the devices selected to be offlined), as indicated at . Onlining a device may include the creation of an operating system device node for that device. The device node may provide a mechanism for processes to communicate with the corresponding device from the host system.","A persistent repository may be updated (or created if not already existing) to indicate which devices and associated paths are currently online including device centric and\/or transport centric data, as indicated at . During operation, the persistent repository may be updated to reflect any changes in fabric devices. For example, if a device and\/or associated path indicated by the persistent repository to be currently onlined is removed from the fabric, the persistent repository may be updated accordingly as indicated at . Changes in the fabric may be detected by an event generated in the fabric and communicated to the administration application (or library) by the fabric driver.","Turning to , a flowchart shows a method for onlining selected fabric devices on-demand from a list of fabric devices according to one embodiment. In one embodiment, a list of fabric devices may have been obtained by the method illustrated in  or . A user may choose a subset of devices from this list to online and pass this list of devices to the administration application, as indicated at . The administration application may then call an interface to the fabric driver to online the selected devices. For example, the administration application may call a fabric driver (via an interface) to online the selected devices, as indicated at . In one embodiment, the user may have selected a device from a device centric view and requested that the selected device be brought online with associated multiple paths. In further embodiments, the user may have selected a device from a transport centric view and requested that the selected device associated with the selected path be brought online. The fabric driver may attempt to online each of the selected devices in the list and report each successful online to the interface, as indicated at . For every device successfully onlined by the fabric driver, the administration application updates a persistent repository to reflect devices currently onlined, as indicated at . Note also that offlining a node through the administration application may cause an event to be generated to trigger an update the persistent repository.","Turning to , one embodiment is illustrated of a mechanism for dynamically updating the persistent repository to reflect changes that occur in the fabric. A device state change may occur in the fabric, as indicated at . For example, a fabric disk drive online for the host system may be removed from the fabric. An event may be generated to indicate this change. The fabric driver may inform the interface\/application of such changes that affect the device list, as indicated at . The administration application may update the contents of the persistent repository in response to receiving notification of a change, as indicated at , so that the persistent repository is dynamically updated to reflect such changes. The persistent repository may be stored, for example, on persistent storage such as a disk drive or non-volatile memory.","The persistent repository may allow a host computer's fabric device configuration to persist across reboots and shutdowns as illustrated in  for one embodiment. On a host reboot (), a component of administration application (e.g., in the Solaris \u2018rc\u2019 scripts) may read the persistent repository to determine which devices were previously online, as indicated at . The administration application then calls the fabric driver (via the interface) to online the fabric devices that were onlined prior to the reboot, as indicated at . The indicated at . The library may fabric driver attempts to online each device indicated by the persistent repository and reports successful onlines to through the interface to the application, as then update the persistent repository to reflect the currently online devices, as indicated at .","An example of an entry in a persistent repository is: \/devices\/pci@1f,4000\/pci@2\/SUNW,q1c@4\/fp@0,0:fc::50020f23000000e6. In this example, the entry identifies the \/devices path to an onlined FC port. In other embodiments, additional information may be included. For example, the repository may identify onlined fabric devices on a per LUN basis. The persistent repository may store device configuration information in a device centric perspective, transport centric perspective, or both.","Note that the flow charts described herein represent exemplary embodiments of methods. The methods may be implemented in software, hardware, or a combination thereof. The order of method may be changed, and various elements may be added, reordered, combined, omitted, modified, etc. For example in , the persistent repository may store the online status () before, after or during creation of a node ().","Various modifications and changes may be made as would be obvious to a person skilled in the art having the benefit of this disclosure. Note also that the flow charts described herein do not necessary require a temporal order. It is intended that the following claims be interpreted to embrace all such modifications and changes and, accordingly, the specifications and drawings are to be regarded in an illustrative rather than a restrictive sense.","Various embodiments may further include receiving, sending or storing instructions and\/or data implemented in accordance with the foregoing description upon a computer readable medium. Generally speaking, a computer readable medium may include storage media or memory media such as magnetic or optical media, e.g., disk or CD-ROM, volatile or non-volatile media such as RAM (e.g. SDRAM, DDR SDRAM, RDRAM, SRAM, etc.), ROM, etc. as well as transmission media or signals such as electrical, electromagnetic, or digital signals, conveyed via a communication medium such as network and\/or a wireless link."],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"BRIEF DESCRIPTION OF THE DRAWINGS","p":[{"@attributes":{"id":"p-0011","num":"0010"},"figref":"FIG. 1"},{"@attributes":{"id":"p-0012","num":"0011"},"figref":"FIG. 2"},{"@attributes":{"id":"p-0013","num":"0012"},"figref":"FIG. 3"},{"@attributes":{"id":"p-0014","num":"0013"},"figref":"FIG. 4"},{"@attributes":{"id":"p-0015","num":"0014"},"figref":"FIG. 5"},{"@attributes":{"id":"p-0016","num":"0015"},"figref":"FIG. 6"},{"@attributes":{"id":"p-0017","num":"0016"},"figref":"FIG. 7"},{"@attributes":{"id":"p-0018","num":"0017"},"figref":"FIG. 8"},{"@attributes":{"id":"p-0019","num":"0018"},"figref":"FIG. 9"},{"@attributes":{"id":"p-0020","num":"0019"},"figref":"FIG. 10"},{"@attributes":{"id":"p-0021","num":"0020"},"figref":"FIG. 11"}]},"DETDESC":[{},{}]}
