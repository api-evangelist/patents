---
title: System and method to dynamically select and locate server objects based on version information of the server objects
abstract: A distributed object management method and system, and a recording medium for recording a processing program of the method and the system are disclosed. According to this method, a server object can be changed in operation. The method for managing objects in a distributed object environment includes steps of requesting server object information of server objects to be accessed, selecting and supplying a requester with server object information of the newest one of requested server objects, accessing the server object indicated in the server object supplied, and performing processing requested by the access.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=07043735&OS=07043735&RS=07043735
owner: Hitachi, Ltd.
number: 07043735
owner_city: Tokyo
owner_country: JP
publication_date: 20010605
---

{"@attributes":{"id":"description"},"BRFSUM":[{},{}],"heading":["CROSS-REFERENCE TO RELATED APPLICATIONS","STATEMENT REGARDING FEDERALLY SPONSORED RESEARCH OR DEVELOPMENT","BACKGROUND OF THE INVENTION","BRIEF SUMMARY OF THE INVENTION","DETAILED DESCRIPTION OF THE INVENTION"],"p":["Not Applicable","Not Applicable","1. Field of the Invention","The present invention relates to a distributed object management system for managing objects in a distributed object environment, and more specifically to dynamically selecting and locating server objects, in a distributed object environment, based on version information of the server objects.","2. Description of the Related Art","In a distributed object environment for executing a backbone job, demand is now high for realizing operation around the clock for 365 days a year. In such a distributed object environment operated continuously, it is indispensable to carry out the change of a server object, if required, in a dynamic way.","For the version-up of a server object, for example, JP-A-11-154138 describes a method in which a server has a backup file of a load module so that the internal information of the load module and the internal information of the backup file of the server to be started are checked at the time of start up.","In the conventional distributed object environment described above, even in the case where a new server object is started to provide the same service as other server objects, it is difficult to carry out the change while a plurality of the server objects are in operation as long as the object name or the interface of the new server object remains unchanged in view of the fact that a plurality of server objects providing the same service are considered to be equivalent to each other.","Another problem of the method described in JP-A-11-154138 is that in the case where a version-up is required, the start-up is notified to clients as a failure, and therefore the service is interrupted. Further, in the distributed object environment, a problem is posed that version consistency fails to be considered between a plurality of server objects which may be operated in collaboration with each other.","In the case where the service of a server object is provided continuously or a plurality of server objects are operated in collaboration with each other in a distributed object environment, therefore, it is necessary that a server object can be changed while retaining consistency between the server objects in operation.","The object of the present invention is to solve the problems described above, and to provide a technique capable of changing a server object in operation.","According to one aspect of the invention, there is provided a distributed object management system for managing objects in a distributed object environment, wherein in the case where the server object information is requested, the server object information of the newest server object based on change information is supplied to the requester to enable the newest server object to be accessed. In this way, the server object accessed is changed from an old one to the newest one.","According to another aspect of the invention, there is provided a distributed object management system, wherein the change information indicating the newness of the server object is held, and the change of a given server object is identified by determining the difference of this change information, thereby making it possible to change an object in operation.","According to still another aspect of the invention, in the case where a requester client object or a server object requests the server object information of a server object or another server object, as the case may be, to be accessed, the change information of the requested server objects are checked, so that the newest one of the server objects is selected and the server object information of the particular server object is supplied to the requester.","The requester that has received the server object information of the newest server object accesses the server object indicated in the supplied server object information and requests the execution of the processing thereof. The server object thus accessed executes the requested processing.","In the case where there exist a plurality of server objects having the same server object name or the same interface identification information, the change information of these server objects are compared with each other, and the server object having old change information is canceled.","As described above, with a distributed object management system according to this invention, in the case where the server object information is requested, the server object information of the newest server object is supplied to the requester to enable the newest server object to be accessed. In this way, the server object accessed is changed from an old one to the newest one. Therefore, a server object can be changed in operation.","An explanation will be given below of a distributed object management system according to an embodiment of the invention, in which an object is changed in operation.",{"@attributes":{"id":"p-0030","num":"0029"},"figref":["FIG. 1","FIG. 1"],"b":["10","20","30","40","50","40","60","20","40","50","70","52","10","20","23","41","40","72","10","20","24","71","70"]},"In the distributed system according to this embodiment, assume that the process for the server object A and the server object B is carried out in response to the access from the client object . First, the factory object  starts () the management object , starts () the existing server object B  and starts () the existing server object A . The factory object  starts the existing server object B  and the existing server object A  in that order, i.e. in the predefined reverse order of access to the server objects.","The existing server object A  and the existing server object B , once started by the factory object , send the server object information to the management object . The positional information such as an IP (internet protocol) address indicating the position, the ID information including the name of the server object and indicating the interface, and the change information indicating the newness of the server objects are registered in the management object . The change information includes the revision information, etc. for determining the newness of a plurality of the server objects providing the same service and is arbitrary information that can be determined in this particular distributed system. In the case where a given server object has no function to transmit the change information, the management object  registers information such as the present time of registration of the particular server object as change information.","Now, an explanation will be given of the operation for executing the client object  in the distributed system of this configuration. The client object  requests the management object  to acquire the server object information of the server object A accessed by the client object .","The management object , upon receipt of the request from the client object  to acquire the server object information of the server object A, retrieves the server object information of the server object A, acquires the server object information of the existing server object A  already started as a server object A and supplies it to the requester client object  ().","The client object , upon receipt of the server object information of the existing server object A  from the management object , accesses the existing server object A  using the particular server object information ().","The existing server object A  accessed by the client object  requests the management object  to acquire the server object information of the server object B accessed by the existing server object A .","Upon receipt of the request from the existing server object A  to acquire the server object information of the server object B, the management object  retrieves the server object information of the server object B, acquires the server object information of the existing server object B  already started as a server object B and supplies it to the requester existing server object A  ().","The existing server object A  supplied with the server object information of the existing server object B  from the management object  accesses the existing server object B  using the particular server object information (), and carries out the processing requested by the client object .","In the distributed system according to this embodiment, assume that the existing server object A  and the existing server object B  are to be changed. A new server object B  is started () and a new server object A  is started () by the factory object . The factory object  starts the new server object B  and the new server object A  in that order, i.e. in the order reverse to the predefined order of access of the server objects.","In the case where the client object  is executed in this distributed system of a new configuration, as in the previous case, the client object  requests the management object  to acquire the server object information of the sever object A accessed by the client object .","The management object , upon receipt of the request from the client object  to acquire the server object information of the server object A, retrieves the server object information of the server object A, compares the change information of the existing server object A  already started as a server object A with that of the new server object A , acquires the server object information of the new server object A  providing a new server object A and supplies it to the requester client object  ().","The client object , upon receipt of the server object information of the new server object A  from the management object , accesses the new server object A  using the particular server object information ().","The new server object A  accessed by the client object  requests the management object  to acquire the server object information of the server object B accessed by the new server object A .","The management object , upon receipt of the request from the new server object A  to acquire the server object information of the server object B, retrieves the server object information of the server object B, compares the change information of the existing server object B  already started as a server object B with that of the new server object B , acquires the server object information of the new server object B  providing the new server object B, and supplies it to the requester new server object A  ().","The new server object A  supplied with the server object information of the new server object B  from the management object  accesses the new server object B  using the particular server object information (), and performs the process requested by the client object .","Also, in the distributed system of the new configuration, once the new server object A  and the new server object B  are started, the factory object  stops the existing server object B  () and the existing server object A  () as soon as the processes under execution by the existing server object B  and the existing server object A  are completed. The factory object  stops the existing server object B  and the existing server object A  in that order, i.e. in the predefined order reverse to the order of access of the server objects.",{"@attributes":{"id":"p-0047","num":"0046"},"figref":["FIG. 2","FIG. 2"],"b":["10","10","10","10"],"i":["a ","b. "]},"The server object information management unit processes the registration requests from the server objects and manages the server object information of each server object. The server object information select unit performs the process of selecting and supplying the requester with the server object information of the newest one of the server objects requested from the client object or the server object, and in the case where the requester is a server object, carries out the process for selecting and supplying the requester with the server object information of the server object having the change information concurrent with or older than the requester server object.","The program for causing the management object  to function as the server object information management unit and the server object information select unit is recorded in a recording medium such as a CD-ROM and stored in a magnetic disk or the like, after which it is loaded in a memory and executed. The recording medium for recording the program may be other than the CD-ROM.",{"@attributes":{"id":"p-0050","num":"0049"},"figref":["FIG. 3","FIG. 3"],"b":["20","20","20","20"],"i":["a","a "]},"The program for causing the factory object  to function as the server object life cycle management unit is recorded in a recording medium such as a CD-ROM and stored in a magnetic disk or the like, after which it is loaded in a memory and executed. The recording medium for recording this program may be other than the CD-ROM.",{"@attributes":{"id":"p-0052","num":"0051"},"figref":["FIG. 4","FIG. 4"],"b":["30","30","30","30"],"i":["a ","b. "]},"The server object information acquisition unit is a processing unit for requesting the management object  to supply the server object information of the server object to be accessed. The server object access unit is a processing unit for accessing the server object indicated in the server object information acquired from the management object .","The program for causing the client object  to function as the server object information acquisition unit and the server object access unit is recorded in a recording medium such as a CD-ROM and stored in a magnetic disk or the like, after which it is loaded in a memory and executed. The recording medium for recording the program may be other than the CD-ROM.",{"@attributes":{"id":"p-0055","num":"0054"},"figref":["FIG. 5","FIG. 5"],"b":["40","40","40","40"],"i":["a","b","c ","d. "]},"The server object information registration unit is a processing unit for requesting the management object  to register a server object and sending the revision information indicating the newness of the particular server object as change information to the management object .","The request processing unit is a processing unit for performing the process requested by the access from a client object or a server object. Another server object information acquisition unit is a processing unit for inquiring of the management object  as to another server object which may be accessed by the server object. Another server object access unit is a processing unit for accessing the another server object indicated in the server object information acquired from the management object .","The program for causing the server object to function as the server object information registration unit , the request processing unit , another server object information acquisition unit and another server object access unit is recorded in a recording medium such as the CD-ROM and stored in a magnetic disk or the like, after which it is loaded in a memory and executed. The recording medium for recording the program mentioned above may be other than the CD-ROM.",{"@attributes":{"id":"p-0059","num":"0058"},"figref":["FIG. 6","FIG. 6"],"b":["10","10","10","100","10","101","102","103"],"i":["a ","b "]},"The server object information management unit of the management object , if supplied with the change information indicating the revision of a server object from the particular server object, registers the particular revision information in the change information , while in the case where the change information is not supplied to the server object information management unit from the server object, registers in the change information  a flag indicating that the change information is not sent and the present time of registration of the particular server object.",{"@attributes":{"id":"p-0061","num":"0060"},"figref":["FIG. 7","FIG. 7"],"b":["20","20","200","20","201","202","203"],"i":"a "},{"@attributes":{"id":"p-0062","num":"0061"},"figref":["FIG. 8","FIG. 8"],"b":["10","10","41","51","61","62","40","50","60","70","10","10","101","102","301","302"],"i":["a ","a "]},"Step  determines whether the change information  or  has been delivered or not from the server object, and in the case where the change information  or  has been so delivered, the change information  or , as the case may be, is stored in the change information  (step ), while in the case where the change information  or  is not so delivered, on the other hand, a flag indicating that the change information is not delivered and the present time are stored (step ).",{"@attributes":{"id":"p-0064","num":"0063"},"figref":["FIG. 9","FIG. 9"],"b":["10","10","31","42","62","40","50","60","70","10","10"],"i":["b ","b "]},"First, step  retrieves the ID information  of the server object registration information  from the server object information delivered from the requester, and in the case where the selected server object is not registered, absence of a registered server object is notified to the requester (step ).","Step  determines whether a plurality of the selected server objects are registered or not, and in the case where a plurality of them are not registered, the positional information  of the single server object in registration is selected and supplied to the requester (steps , ).","Step  determines whether the requester is also registered as a server object or not, and in the case where it is not so registered, the positional information  of the server object having new change information  is selected and supplied to the requester (steps , ). In the case where the revision information is registered in all the change information  of the server objects to be selected, the server object having the newest revision information is selected. In the case where the revision information is registered in some of the change information  of the server objects to be selected and a flag indicating that no change information is sent is registered in other change information , the server object having the newest revision information is selected from those with the change information in which the revision information is registered, while in the case where the flag indicating that the change information is not sent is registered in all the change information  of the server objects to be selected, the time information in the change information  selects the newest server object.","Step  determines whether there exists any server object having the same ID information  as the requester server object, and in the case where there is no other server object having the same ID information, the positional information  of the new server object having the same ID information  is selected and supplied to the requester (steps , ).","By referring to the change information  of a server object having the same ID information  as the change information  of the requester server object, step  determines whether the particular server object is new or not, and in the case where it is new, the positional information  of a server object having the new change information  is selected and supplied to the requester (steps , ). In the case where the server object is old, on the other hand, the positional information  of a server object having the old change information  is selected and supplied to the requester (steps , ).",{"@attributes":{"id":"p-0070","num":"0069"},"figref":["FIG. 10","FIG. 10"],"b":["20","20","22","23","24","25","26","27","40","50","60","70","20","20"],"i":["a ","a "]},"First, the server object life cycle management unit of the factory object  starts the server objects in the order reverse to the predefined order of access to the server objects, so that the information on the position of the server objects is stored in the positional information  and the names of the server objects and the information on the interfaces are stored in the ID information  (steps  to ).","Step  determines whether the change information  or  is delivered from a server object or not, and in the case where it is delivered so, the particular change information  or  is stored in the change information  (step ), while in the case where the change information  or  is not so delivered, on the other hand, a flag indicating that the change information is not delivered and the present time are stored (step ).","In the case where step  determines that a plurality of server objects (, ; , ) have the same ID information , the change information  thereof are compared with each other. Any object (, ) of which the change information  is found to be old is stopped (step ). In the process, as soon as the process under execution and having the old object (, ) is completed, the server object life cycle management unit of the factory object  stops the old objects (, ) in the order reverse to the predefined order of access.","As described above, in the distributed system according to this embodiment, the information that can be determined by the management object and the factory object is held as change information, and according to the difference between these change information, the change of a server object is identified, thereby making it possible to change an object in operation.","It will be understood from the foregoing description that with the distributed object management system according to this embodiment, the server object information of the newest server object is supplied to the requester and the newest server object is accessed in the case where the server object information is requested. In this way, the server object accessed is changed from the old to the newest one, and therefore the server object can be changed in operation.","According to this invention, in the case where the server object information is requested, the server object information of the newest server object is supplied to the requester thereby to access the newest server object. In this way, the server object accessed can be changed from the old to the newest one, and therefore the server object can be changed in operation."],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"BRIEF DESCRIPTION OF THE DRAWINGS","p":[{"@attributes":{"id":"p-0019","num":"0018"},"figref":"FIG. 1"},{"@attributes":{"id":"p-0020","num":"0019"},"figref":"FIG. 2","b":"10"},{"@attributes":{"id":"p-0021","num":"0020"},"figref":"FIG. 3","b":"20"},{"@attributes":{"id":"p-0022","num":"0021"},"figref":"FIG. 4","b":"30"},{"@attributes":{"id":"p-0023","num":"0022"},"figref":"FIG. 5"},{"@attributes":{"id":"p-0024","num":"0023"},"figref":"FIG. 6","b":["10","10","10"],"i":["a ","b. "]},{"@attributes":{"id":"p-0025","num":"0024"},"figref":"FIG. 7","b":["20","20"],"i":"a "},{"@attributes":{"id":"p-0026","num":"0025"},"figref":"FIG. 8","b":["10","10"],"i":"a "},{"@attributes":{"id":"p-0027","num":"0026"},"figref":"FIG. 9","b":["10","10"],"i":"b "},{"@attributes":{"id":"p-0028","num":"0027"},"figref":"FIG. 10","b":["20","20"],"i":"a "}]},"DETDESC":[{},{}]}
