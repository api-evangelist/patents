---
title: Method and system for accessing storage devices
abstract: An approach for enabling wireless communication devices to mount and/or unmount one or more storage devices to facilitate data sharing is described. A processor of a user device generates a request message according to a storage access protocol that is operating system agnostic. The processor then initiates transmission of the request message over a wireless link of an ad-hoc network to a system that includes one or more storage devices, wherein the request message requests storage device information relating to the one or more storage devices.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08942213&OS=08942213&RS=08942213
owner: Verizon Patent and Licensing Inc.
number: 08942213
owner_city: Basking Ridge
owner_country: US
publication_date: 20110318
---

{"@attributes":{"id":"description"},"BRFSUM":[{},{}],"heading":["BACKGROUND INFORMATION","DESCRIPTION OF THE PREFERRED EMBODIMENT"],"p":["Service providers are continually challenged to deliver value and convenience to consumers by providing compelling network services and advancing the underlying technologies. One area of interest has been the development of services and technologies for facilitating sharing and storing of data among wireless communication devices operating in a common network environment. Typically, during the course of interaction with other devices over the network, a user of a requesting device may want to access the file system of a host device. Alternatively, the user may want to access the contents of other storage devices mounted to the host, including mass storage devices (MSDs), internal data stores and or other storage mediums. Unfortunately, there is no convenient mechanism for supporting the seamless sharing of file systems or the mounting\/unmounting of storage among devices over a wireless communication network.","Based on the foregoing, there is a need for convenient, effective way to enable wireless communication devices to mount and\/or unmount one or more storage devices to facilitate data sharing.","An apparatus, method and software for process for enabling wireless communication devices to mount and\/or unmount one or more storage devices to facilitate data sharing is described. In the following description, for the purpose of explanation, numerous specific details are set forth in order to provide a thorough understanding of the present invention. It is apparent, however, to one skilled in the art that the present invention may be practiced without these specific details or with an equivalent arrangement. In other instances, well-known structures and devices are shown in block diagram form in order to avoid unnecessarily obscuring the present invention.","Although the various exemplary embodiments are described with respect to storage devices and data exchange, it is contemplated that these embodiments have applicability to any data protocols, methodologies or systems for performing file sharing and transfer, data warehousing, data mining and the like.",{"@attributes":{"id":"p-0014","num":"0013"},"figref":"FIG. 1","b":["100","101","101","101","107","107","101","101","117","117","101","101"],"i":["a","n ","a","n","a","n","a","n "]},"Also, as used herein, the term \u201cmounting\u201d and \u201cunmounting\u201d pertains to the state, status, availability or accessibility of a memory device -or -by a computing device. By way of example, when a storage device  or  is mounted, this means the device is available for access by the user device . When the storage device is unmounted, however, it is no longer accessible by the user device -. Gaining access to a specific data source, i.e., a file system can be an important task for facilitating computing tasks. For example, a computing device may need to either store or retrieve quantities of data at a time from different file systems. In certain instances, the file system may be an internal or externally connected data source (e.g., mass storage device) of another device that is configured to a communication network. Unfortunately, there is currently no way to readily enable a requesting device to seamlessly access the file system\u2014i.e., hard disk, mass storage, USB drive\u2014of another computing device configured to a network on demand. Furthermore, there is no protocol or system architecture for enabling the exchange of data regarding the mounting\/unmounting of file systems and other events between devices over a wireless communication network.","To address this issue, system  presents a wireless storage access (WSA) protocol for enabling the sharing of file systems between multiple devices configured to a communication network. In addition, the system  facilitates the delivery of mount\/un-mount events regarding any storage device to various devices that are connected over the network (e.g., Wi-FI) by way of the WSA protocol. As will be described more fully, the wireless storage access (WSA) protocol facilitates the following: discovery, exchange of commands, and data transfer. With respect to discovery, the protocol enables discovering all the devices (endpoints) available in the current network (e.g., all devices available over a Wi-Fi Network, detectable via near field communication (NFC), or any other ad-hoc network configuration). Also, the sharing of transferring file system commands and payloads between respective devices (endpoints) is greatly facilitated. The protocol also provides for transferring binary content between endpoints by way of a data encoding algorithm.","In certain embodiments, WSA protocol based communication includes protocols for sending control commands, data and mount\/unmount event information among various devices. The WSA protocol also supports the pushing or pulling of data, i.e., any device can send or get data from any other device in the network accordingly. By way of example, file system access may be performed by connected user devices -through device input and control means including touch screen (e.g., one click) activation, keypad activation, etc. It is noted that the WSA protocol enables the formation of a connection, port, channel, stream or data interface through which file systems at respective devices -are able to interact without reliance upon mutual operating systems, application programming interfaces or other processing means by respective devices -","In certain embodiments, user devices -are configured with various executable modules for performing one or more computing, data processing and network based instructions that in combination support file system access and event data exchange. The modules can be implemented in hardware, firmware, software, or a combination thereof. According to some embodiments, the components of the user devices -include a core module , a wireless service access protocol (WSAP) module , a file system engine  and a transport module . While shown in the figure with respect to device , it is noted that modules - can also similarly configured on any other devices for which a single user device may interact with over a communication network. Of note, a wireless service access protocol (WSAP) and communication methodology, as illustrated with respect to , is supported through execution of the one or more modules across respective user devices -","The file system engine  acts as host for the file system of respective user devices -. By way of example, the file system engine  captures file system mount and\/or unmount event information pertaining to the user device. As used herein, \u201cevent information\u201d or \u201cevents\u201d refer to any data pertaining to the status, state, availability or accessibility of a file system (e.g., a storage device), including what file systems are available (e.g., by name) to a requesting device, the current state of the file system (e.g., mounted or unmounted), the type of file system available (e.g., USB, hard disk), the file system category (e.g., internal, external, virtual), etc. Events as captured by the file system engine  may be shared, according to a WSA protocol, with respective interacting user devices -to enable smooth access to the file system of respective interacting endpoints\/user devices independent of the underlying OS (Operating System). The file system engine  is configured to deliver event information regarding various file systems to the core module . It is noted, therefore, that the core module  of respective devices -registers with the file system engine  of respective devices -to enable continuous receipt of all event information.","The core module  is coupled to the file system engine  and configured to process event information captured by the engine . By way of example, the core module  handles the communication between the file system engine  and the WSA protocol module . The core module  is responsible for receiving and sending alerts and also sending control commands to the devices -capable of communicating with one another over an ad-hoc, wireless communication network via WSAP. As mentioned, the module  registers with the file system engine  for all the events associated with interacting devices. Hence, it is the responsibility of the core module  to receive, aggregate and process all events delivered by the file system engine  of respective devices. As such, the core module  is configured to encode\/decode WSAP data packets delivered to and received from the endpoints -respectively. Also, the core module  handles all intra-device communication required for facilitating data exchange, including discovering endpoints over the network.","Operating in connection with the file system engine  and core module  is the WSAP module . The WSAP module  is configured to execute an operating system agnostic (e.g., neutral\/independent) communication procedure. By way of example, the WSA protocol enables the exchange of one or more text based commands between the endpoints -, including commands for generating a response message for transmission over a wireless link of an ad-hoc, WSA based network to a device  having one or more storage devices -and -. The WSA protocol also enables formation of a response message acknowledges for acknowledging a request made by any of the interacting user devices -for event information and\/or storage device information relating to a particular storage device.","In certain embodiments, WSAP uses Base64 encoding or any other encoding technique for transferring binary content between WSA enabled endpoints -. As such, event information and other data pertaining to respective file systems -and -remains intact without requiring data or packet modification during transport over the network (e.g., network ). WSAP is configured to discover any WSA enabled endpoints\u2014i.e., those user devices -that are capable of communicating via WSAP over a network (e.g., network ). Also, WSAP enables transfer of commands and the payloads between endpoints -as well as the transfer of binary content between endpoints -using a Base64 encoding algorithm or any other encoding algorithm.","In addition, the WSA protocol module  supports communication pairing between various user devices -. By way of example, the WSA module  may be configured to enable data binding and listening on a particular communication port, i.e., port 4534 for supporting user datagram protocol (UDP) packets or port 4535 for supporting transmission control protocol (TCP)\/server based packets. As such, the device -initiating a communication request need not be detected or start a corresponding UDP server. Similarly a device that does not enable support of the detection mechanism, but only be an originator of data or file system access, need not start a corresponding TCP server.","Under this scenario, the WSA protocol module  ensures that each endpoint listens for data on the UDP port for all the UDP packets. By way of this approach, when an originating device (e.g., ) wants to detect another endpoint (e.g., ), the device generates UDP broadcasting packets. The UDP broadcast packets are generated to include an authentication key in a format defined by WSAP\u2014i.e., implemented via Base64 encoding methodology. Upon receiving this packet, the receiving device (e.g., terminator device ) can establish a TCP communication channel with the device, thus enabling a communication session\/exchange over the network.","In the event no response is received by the originating device from the receiving device , the broadcast packet is sent at predetermined intervals (e.g., every 5 seconds up to a predetermined amount of retries (e.g., 3 times). When no response is rendered from any WSA endpoint, the originating device is then notified of the unavailability of any WSA endpoints. Thus, WSA enabled device discovery is supported.","The WSA protocol module  also generates broadcast packets to include a 4-digit identifier value (password) as the payload. These credentials are used by the receiving endpoint for enabling authentication and security protocols to be performed for establishing a TCP connection, thus ensuring system security and integrity among devices -. An alpha numeric key, for example, may be entered by both devices and sent from one to the other for enabling validation and identification.","A transport module  is also configured to support transport layer execution of the WSA protocol module , including handling the transfer of data between the devices\/endpoints -. The transport module  support various communication protocols and packet types including file transfer protocol (FTP), digital linear network alliance based schemes (e.g., for supporting set-top box communication) and other data transfer techniques. The core module  controls the transport module  and all transport layer calls made by the transport module  are initiated and terminated by the core module .","The above described modules - may be implemented for direct execution by user devices\/endpoints -to enable device or OS independent execution of the wireless service access protocol. In another embodiment, the modules - may be implemented for execution by respective user devices -by way of a platform (not shown), such as maintained by a provider of a service provider network  of the user devices. Under this scenario, the one or more of the modules - are executed by the device, by the platform, or a combination thereof. The exemplary techniques and system  as presented enables any implementation.","User devices or endpoints -may be any type of mobile terminal, fixed terminal, or portable terminal including a mobile handset, station, unit, device, multimedia computer, multimedia tablet, Internet node, communicator, desktop computer, laptop computer, Personal Digital Assistants (PDAs), Smartphone or any combination thereof. The user device may also be implemented as set-top box for supporting broadcast communication between the device and a service provider (e.g., television service provider).","It is also contemplated that the user devices -can support any type of interface for supporting the presentment or exchange of data, i.e., WSAP. In addition, user devices -may facilitate various input means for receiving and generating information, including touch screen capability, keyboard and keypad data entry, voice-based input mechanisms and the like. Any known and future implementations of user devices  are applicable.","In certain embodiments, user devices -may be configured to generate an ad-hoc communication network for supporting WSAP, including via a service provider network . According to certain embodiments, one or more networks, such as data network , telephony network , and\/or wireless network , can interact with the service provider network . Networks - may be any suitable wireline and\/or wireless network, and be managed by one or more service providers. For example, telephony network  may include a circuit-switched network, such as the public switched telephone network (PSTN), an integrated services digital network (ISDN), a private branch exchange (PBX), or other like network. Wireless network  may employ various technologies including, for example, code division multiple access (CDMA), long term evolution (LTE), enhanced data rates for global evolution (EDGE), general packet radio service (GPRS), mobile ad hoc network (MANET), global system for mobile communications (GSM), Internet protocol multimedia subsystem (IMS), universal mobile telecommunications system (UMTS), etc., as well as any other suitable wireless medium, e.g., microwave access (WiMAX), wireless fidelity (WiFi), satellite, and the like. Meanwhile, data network  may be any local area network (LAN), metropolitan area network (MAN), wide area network (WAN), the Internet, or any other suitable packet-switched network, such as a commercially owned, proprietary packet-switched network, such as a proprietary cable or fiber-optic network.","Although depicted as separate entities, networks - may be completely or partially contained within one another, or may embody one or more of the aforementioned infrastructures. For instance, service provider network  may embody circuit-switched and\/or packet-switched networks that include facilities to provide for transport of circuit-switched and\/or packet-based communications. It is further contemplated that networks - may include components and facilities to provide for signaling and\/or bearer communications between the various components or facilities of system . In this manner, networks - may embody or include portions of a signaling system 7 (SS7) network, Internet protocol multimedia subsystem (IMS), or other suitable infrastructure to support control and signaling functions.","It is noted that in certain embodiments user devices -may be configured to establish peer-to-peer communication sessions with each other using a variety of technologies\u2014near field communication (NFC), Bluetooth, ZigBee, infrared, etc. Also, connectivity can be provided via a wireless local area network (LAN). By way of example, a group of user devices -may be configured to a common LAN so that each device can be uniquely identified via any suitable network addressing scheme. For example, the LAN may utilize the dynamic host configuration protocol (DHCP) to dynamically assign \u201cprivate\u201d DHCP internet protocol (IP) addresses to each user device , i.e., IP addresses that are accessible to devices connected to the service provider network  as facilitated via a router. According to exemplary embodiments, user devices -may include any customer premise equipment (CPE) capable of sending and\/or receiving information over one or more of networks -\u2014e.g., set-top box. For instance, voice terminal may be any suitable plain old telephone service (POTS) device, facsimile machine, etc., whereas mobile device (or terminal) may be any cellular phone, radiophone, satellite phone, smart phone, wireless phone, or any other suitable mobile device, such as a personal digital assistant (PDA), pocket personal computer, tablet, customized hardware, etc. Further, computing device may be any suitable computing device, such as a VoIP phone, skinny client control protocol (SCCP) phone, session initiation protocol (SIP) phone, IP phone, personal computer, softphone, workstation, terminal, server, etc.","The mechanism for conveniently sharing data among these user devices -is explained as follows.",{"@attributes":{"id":"p-0035","num":"0034"},"figref":["FIGS. 2A and 2B","FIG. 1"],"b":["103","106","201","200","107","107","117","117","101","101","101"],"i":["a","n ","a","n","a","n "]},"Per step , the process initiates transmission of the request message over a wireless link of an ad-hoc network to a system (e.g., user device) that includes one or more storage devices. As mentioned previously, the request message may request storage device information including event data relating to the one or more storage devices -and -. In certain embodiments, the storage device for being accessed may include a set-top box in addition to mass storage devices, internal data stores, virtual data stores, etc.","As seen in , process , per step  generates a register message according to the storage access protocol for transmission to the system to register with the system to receive an alert message for activation of at least one of the storage devices. The storage access protocol (WSAP) initiating the request is a text-based protocol, and enables initiation of a broadcast packet to an endpoint that is also configured to execute the storage access protocol. Receipt of the broadcast packet enables user device authentication and security validation, and is also used to establish a wireless link based on the protocol. In step , an alert message is received when at least one storage device associated with the device to which the request was sent is activated (e.g., mounted).","In step , the process generates a query to request state information relating to mounting or unmounting events of one of the storage devices. As mentioned previously, the state information is event information for indicating the state, status, availability, accessibility and details regarding respective file systems of a user device -. Per steps  and , transmission of the query is initiated and one or more storage devices are made available for access based on the determined state information.","In certain embodiments, the process (e.g., modules - of ) facilitates the various requests, queries, data exchange processes and other communication actions presented with respect to processes  and  by way of the WSA protocol. WSA Protocol (WSAP) defines the commands for communication between two or more systems, and is used by the communication channel for initial pairing between the two devices (e.g., personal computer and Tablet or Smartphone. Table 1 below depicts an exemplary syntax for implementation of various requests, queries, etc. via the WSA protocol among devices in ad-hoc WSA network. Table 2 below describes the various commands enabled for execution per the protocol for supporting device communication.",{"@attributes":{"id":"p-0040","num":"0039"},"tables":{"@attributes":{"id":"TABLE-US-00001","num":"00001"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"center"}},"thead":{"row":[{"entry":"TABLE 1"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}},{"entry":"FORMAT\/SYNTAX"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}]},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":{}}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"WSA:(REQUEST\/RESPONSE\/EVENT);"},{"entry":"REQUEST = (REGISTER\/UNREGISTER\/ JOINWSAN\/"},{"entry":"\u2003\u2003\u2003\u2003REGISTER_FOR_MOUNT_EVENTS\/"},{"entry":"\u2003\u2002UNREGISTER_FOR_MOUNT_EVENTS \/ WSADEVICES_LIST\/"},{"entry":"\u2003\u2003\u2003\u2003REJOINWSAN \/UNJOINWSAN)"},{"entry":"RESPONSE = (REGISTER_RESPONSE\/UNREGISTER_RESPONSE\/"},{"entry":"\u2003\u2003\u2003\u2003JOINWSAN_RESPONSE\/"},{"entry":"\u2003\u2003\u2003\u2003REGISTER_FOR_MOUNT_EVENTS_RESPONSE\/"},{"entry":"\u2003\u2003\u2003\u2003UNREGISTER_FOR_MOUNT_EVENTS_RESPONSE\/"},{"entry":"\u2003\u2003\u2003\u2003WSADEVICES"},{"entry":"\u2003\u2003\u2003\u2003_LIST_RESPONSE\/ REJOINWSAN_RESPONSE\/"},{"entry":"\u2003\u2003\u2003\u2003UNJOINWSAN_RESPONSE)"},{"entry":"EVENT = ON_EVENT"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}]}}]}}},{"@attributes":{"id":"p-0041","num":"0040"},"tables":{"@attributes":{"id":"TABLE-US-00002","num":"00002"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0","pgwide":"1"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"280pt","align":"left"}},"thead":{"row":[{"entry":"TABLE 2"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}]},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"WSA_BROADCAST"},{"entry":"\u2003This format of the command is used for broadcasting WSA broadcast packet on UDP port"},{"entry":"\u2003for detecting the WSA endpoints. May include data for encoding a password, identifier"},{"entry":"\u2003value, etc."},{"entry":"JOIN_WSAN"},{"entry":"\u2003This format of the command is used for registering the newly entering device in the WSA"},{"entry":"\u2003network with the Master of the Network. Input parameters may include the pin used in"},{"entry":"\u2003authenticating WSA endpoints."},{"entry":"JOIN_WSAN_RESPONSE"},{"entry":"\u2003This command is used for sending the response to the command REGISTER. Contains the"},{"entry":"\u2003response code and the response description and returns a SUCCESS or FAIL result."},{"entry":"UNJOINWSAN"},{"entry":"\u2003This command is used by the device to unjoin the WSA network. May include data for"},{"entry":"\u2003encoding an application identifier used for differentiating the devices registered with the"},{"entry":"\u2003originating device as well as a session identifier."},{"entry":"UNJOINWSAN_RESPONSE"},{"entry":"\u2003This command is used for sending the response to the command UNJOINWSAN. Contains"},{"entry":"\u2003the response code and the response description and returns a SUCCESS or FAIL result."},{"entry":"REGISTER_FOR_MOUNT_EVENTS"},{"entry":"\u2003This command is used by the device to register for mount\/unmount events of any mass"},{"entry":"\u2003storage devices on the master device."},{"entry":"REGISTER_FOR_MOUNT_EVENTS_RESPONSE"},{"entry":"\u2003This command is used for sending the response to the command; may encode"},{"entry":"\u2003session identifier that was generated using REGISTER command. Contains the"},{"entry":"\u2003response code and the response description and returns a SUCCESS or FAIL result."},{"entry":"UNREGISTER_FOR_MOUNT_EVENTS"},{"entry":"\u2003This command is used by the device to unregister for mount\/unmount events of any mass"},{"entry":"\u2003storage devices on the originating device. May encode an application identifier used for"},{"entry":"\u2003differentiating the devices registered with the originating device and a session identifier that"},{"entry":"\u2003generated using the REGISTER command. Contains the response code and the response"},{"entry":"\u2003description and returns a SUCCESS or FAIL result."},{"entry":"UNREGISTER_FOR_MOUNT_EVENTS_RESPONSE"},{"entry":"\u2003This command is used for sending the response to the command UNREGISTER"},{"entry":"\u2003FOR_MOUNT_EVENTS. Contains the response code and the response description and"},{"entry":"\u2003returns a SUCCESS or FAIL result."},{"entry":"WSADEVICES_LIST"},{"entry":"\u2003This command is used by the device to get the list of the WSA devices that are there in the"},{"entry":"\u2003network. May encode an application identifier used for differentiating the devices registered"},{"entry":"\u2003with the originating device and a session identifier that generated using the REGISTER"},{"entry":"\u2003command."},{"entry":"WSADEVICES_LIST_RESPONSE"},{"entry":"\u2003This command is used for sending the response to the command WSADEVICES_LIST. The"},{"entry":"\u2003master device responds with the list of available devices currently in the WSA network. The"},{"entry":"\u2003list can have USB\/Local Drive\/CD ROM\/Memory Card\/SD Card\/Smart Phone etc. Contains"},{"entry":"\u2003the list of available devices in an array bounded by [ ] and colon separated."},{"entry":"REJOINWSAN"},{"entry":"\u2003This command is used by the device to rejoin the WSA network in case the device is"},{"entry":"\u2003disconnected due to any reason like network failure etc. May encode an application"},{"entry":"\u2003identifier used for differentiating the devices registered with the originating device and a"},{"entry":"\u2003session identifier that generated using the REGISTER command."},{"entry":"REJOINWSAN_RESPONSE"},{"entry":"\u2003This command is used for sending the response to the command REJOINWSAN."},{"entry":"GET_DEVICE_MOUNT_STATE"},{"entry":"\u2003This command is used for getting the Mount\/Un-mount state of the device connected to a"},{"entry":"\u2003WSA endpoint. Contains the description of the device for which the state is requested."},{"entry":"GET_DEVICE_MOUNT_STATE_RESPONSE"},{"entry":"\u2003This command is used for giving the Mount\/Un-mount state of the device connected to a"},{"entry":"\u2003WSA endpoint. Contains the info about the device mount\/un-mount state"},{"entry":"EVENT_MOUNT_STORAGE_DEVICE"},{"entry":"\u2003This command is used for sending the event of the mass storage device being mounted."},{"entry":"\u2003May provide detail regarding the event type (MOUNT\/UNMOUNT), device type (e.g., Mass"},{"entry":"\u2003Storage Device), device memory in gigabytes (float value in case megabytes or less)."},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}]}}}}},{"@attributes":{"id":"p-0042","num":"0041"},"figref":["FIG. 3","FIGS. 4A-4C","FIG. 3"],"b":["300","400","430"]},"In step , System A registers for an alert on System B, such as to detect the presence of other WSA enabled devices. In response to the alert, System B acknowledges receipt of the alert (e.g., returns SUCCESS), corresponding to step . Of note, the discovery process may be performed seamlessly in the manner described previously regarding device pairing.  shows Device  (System A) as presenting via its device display  a message  for indicating discovery of System B , and an option to access file system data (e.g., event information) regarding System B. The user can also be presented with various action buttons  and  for initiating or rejecting the request action; the actions buttons capable of execution by way of one-touch input, etc.","Per step , System A selects the \u201cYES\u201d action button  to request a list of storage devices currently connected to System B.  depicts the interface  of Device  (System B) in response to this step. The interface presents a message  indicating that System A wants to access event information regarding System B (Device ). In addition, the interface presents various action buttons - for responding to the request accordingly, including a \u201cYES\u201d action button for enabling the response, a \u201cNO\u201d action button for disabling the response, a \u201cALWAYS ACCEPT\u201d button for always accepting requests from Device  (System A) and a \u201cALWAYS REJECT\u201d action button for always rejecting requests from DEVICE  (System A) respectively. Still further, the user may be presented with an \u201cAdjust access settings\u201d link for enabling the user to modify various device discovery, authentication or security settings (not shown) accordingly.","When the user selects the \u201cYES\u201d action button, the list of storage devices pertaining to SYSTEM B is returned (step ) to the display  of Device , as depicted with respect to . The display of System A (Device ) presents a list comprising details regarding the various storage devices of SYSTEM B, including the Device Name and\/or Identifier information , a storage device type and mount status , and various user selectable check boxes  for enabling a user to mount  or unmount  a listed device. When the user submits a request to mount or unmount a particular storage device presented in the list, per step , device state information (e.g., event information) is presented (e.g., refreshed) to the user interface , corresponding to step  of .","Per step , System A may initiate an alert for another connected device of the ad-hoc network. Once the request is honored by the additional connected device (e.g., System C), steps - for the new device can be performed.",{"@attributes":{"id":"p-0047","num":"0046"},"figref":["FIGS. 5A and 5B","FIG. 5A"],"b":["500","505","507","503","505","507","504","511","513","509","503","511","513","509","505","507","504"]},"In a second scenario depicted by , system  involves a single tablet device  that is configured to communicate via an ad-hoc network . In this example, the tablet computer  can receive multiple alert messages (e.g., indicators  and ) for storage devices connected to another table computer  and desktop computer , which are also configured to connect to the network . Of note, indicator  corresponds to an alert for the desktop computer  while alert indicator  corresponds to an alert for the tablet computer . As described previously, the requesting tablet computer  can mount\/unmount the storage device(s)  and  and  and  of receiving devices  and  respectively. Under this scenario, one device  access the resources of differing computers  and  and receives alerts  and  accordingly.","The exemplary techniques and systems presented herein provides users with seamless access to the file system of any device and also access to the contents of storage devices mounted on said device from any device. As discussed, the devices can be any type of personal computer or wireless communication device including a tablet computer, desktop, Smartphone, Laptop\/Netbook and any other gadgets capable of processing data. By way of a wireless service access protocol, user may perform a virtual mount\/unmount of the various connected storage devices as well as a physical mount\/unmount of any connected mass storage devices or other physically connected storage media.","The processes described herein for enabling wireless communication devices to mount and\/or unmount one or more storage devices to facilitate data sharing may be implemented via software, hardware (e.g., general processor, Digital Signal Processing (DSP) chip, an Application Specific Integrated Circuit (ASIC), Field Programmable Gate Arrays (FPGAs), etc.), firmware or a combination thereof. Such exemplary hardware for performing the described functions is detailed below.",{"@attributes":{"id":"p-0051","num":"0050"},"figref":"FIG. 6","b":["600","601","603","601","600","605","601","603","605","603","600","607","601","603","609","601"]},"The computer system  may be coupled via the bus  to a display , such as a cathode ray tube (CRT), liquid crystal display, active matrix display, or plasma display, for displaying information to a computer user. An input device , such as a keyboard including alphanumeric and other keys, is coupled to the bus  for communicating information and command selections to the processor . Another type of user input device is a cursor control , such as a mouse, a trackball, or cursor direction keys, for communicating direction information and command selections to the processor  and for adjusting cursor movement on the display .","According to an embodiment of the invention, the processes described herein are performed by the computer system , in response to the processor  executing an arrangement of instructions contained in main memory . Such instructions can be read into main memory  from another computer-readable medium, such as the storage device . Execution of the arrangement of instructions contained in main memory  causes the processor  to perform the process steps described herein. One or more processors in a multi-processing arrangement may also be employed to execute the instructions contained in main memory . In alternative embodiments, hard-wired circuitry may be used in place of or in combination with software instructions to implement the embodiment of the invention. Thus, embodiments of the invention are not limited to any specific combination of hardware circuitry and software.","The computer system  also includes a communication interface  coupled to bus . The communication interface  provides a two-way data communication coupling to a network link  connected to a local network . For example, the communication interface  may be a digital subscriber line (DSL) card or modem, an integrated services digital network (ISDN) card, a cable modem, a telephone modem, or any other communication interface to provide a data communication connection to a corresponding type of communication line. As another example, communication interface  may be a local area network (LAN) card (e.g. for Ethernet\u2122 or an Asynchronous Transfer Model (ATM) network) to provide a data communication connection to a compatible LAN. Wireless links can also be implemented. In any such implementation, communication interface  sends and receives electrical, electromagnetic, or optical signals that carry digital data streams representing various types of information. Further, the communication interface  can include peripheral interface devices, such as a Universal Serial Bus (USB) interface, a PCMCIA (Personal Computer Memory Card International Association) interface, etc. Although a single communication interface  is depicted in , multiple communication interfaces can also be employed.","The network link  typically provides data communication through one or more networks to other data devices. For example, the network link  may provide a connection through local network  to a host computer , which has connectivity to a network  (e.g. a wide area network (WAN) or the global packet data communication network now commonly referred to as the \u201cInternet\u201d) or to data equipment operated by a service provider. The local network  and the network  both use electrical, electromagnetic, or optical signals to convey information and instructions. The signals through the various networks and the signals on the network link  and through the communication interface , which communicate digital data with the computer system , are exemplary forms of carrier waves bearing the information and instructions.","The computer system  can send messages and receive data, including program code, through the network(s), the network link , and the communication interface . In the Internet example, a server (not shown) might transmit requested code belonging to an application program for implementing an embodiment of the invention through the network , the local network  and the communication interface . The processor  may execute the transmitted code while being received and\/or store the code in the storage device , or other non-volatile storage for later execution. In this manner, the computer system  may obtain application code in the form of a carrier wave.","The term \u201ccomputer-readable medium\u201d as used herein refers to any medium that participates in providing instructions to the processor  for execution. Such a medium may take many forms, including but not limited to computer-readable storage medium ((or non-transitory)\u2014i.e., non-volatile media and volatile media), and transmission media. Non-volatile media include, for example, optical or magnetic disks, such as the storage device . Volatile media include dynamic memory, such as main memory . Transmission media include coaxial cables, copper wire and fiber optics, including the wires that comprise the bus . Transmission media can also take the form of acoustic, optical, or electromagnetic waves, such as those generated during radio frequency (RF) and infrared (IR) data communications. Common forms of computer-readable media include, for example, a floppy disk, a flexible disk, hard disk, magnetic tape, any other magnetic medium, a CD-ROM, CDRW, DVD, any other optical medium, punch cards, paper tape, optical mark sheets, any other physical medium with patterns of holes or other optically recognizable indicia, a RAM, a PROM, and EPROM, a FLASH-EPROM, any other memory chip or cartridge, a carrier wave, or any other medium from which a computer can read.","Various forms of computer-readable media may be involved in providing instructions to a processor for execution. For example, the instructions for carrying out at least part of the embodiments of the invention may initially be borne on a magnetic disk of a remote computer. In such a scenario, the remote computer loads the instructions into main memory and sends the instructions over a telephone line using a modem. A modem of a local computer system receives the data on the telephone line and uses an infrared transmitter to convert the data to an infrared signal and transmit the infrared signal to a portable computing device, such as a personal digital assistant (PDA) or a laptop. An infrared detector on the portable computing device receives the information and instructions borne by the infrared signal and places the data on a bus. The bus conveys the data to main memory, from which a processor retrieves and executes the instructions. The instructions received by main memory can optionally be stored on storage device either before or after execution by processor.",{"@attributes":{"id":"p-0059","num":"0058"},"figref":["FIG. 7","FIG. 6"],"b":["700","700","700","700","700"]},"In one embodiment, the chip set or chip  includes a communication mechanism such as a bus  for passing information among the components of the chip set . A processor  has connectivity to the bus  to execute instructions and process information stored in, for example, a memory . The processor  may include one or more processing cores with each core configured to perform independently. A multi-core processor enables multiprocessing within a single physical package. Examples of a multi-core processor include two, four, eight, or greater numbers of processing cores. Alternatively or in addition, the processor  may include one or more microprocessors configured in tandem via the bus  to enable independent execution of instructions, pipelining, and multithreading. The processor  may also be accompanied with one or more specialized components to perform certain processing functions and tasks such as one or more digital signal processors (DSP) , or one or more application-specific integrated circuits (ASIC) . A DSP  typically is configured to process real-world signals (e.g., sound) in real time independently of the processor . Similarly, an ASIC  can be configured to performed specialized functions not easily performed by a more general purpose processor. Other specialized components to aid in performing the inventive functions described herein may include one or more field programmable gate arrays (FPGA) (not shown), one or more controllers (not shown), or one or more other special-purpose computer chips.","In one embodiment, the chip set or chip  includes merely one or more processors and some software and\/or firmware supporting and\/or relating to and\/or for the one or more processors.","The processor  and accompanying components have connectivity to the memory  via the bus . The memory  includes both dynamic memory (e.g., RAM, magnetic disk, writable optical disk, etc.) and static memory (e.g., ROM, CD-ROM, etc.) for storing executable instructions that when executed perform the inventive steps described herein enable wireless communication devices to mount and\/or unmount one or more storage devices to facilitate data sharing. The memory  also stores the data associated with or generated by the execution of the inventive steps.","While certain exemplary embodiments and implementations have been described herein, other embodiments and modifications will be apparent from this description. Accordingly, the invention is not limited to such embodiments, but rather to the broader scope of the presented claims and various obvious modifications and equivalent arrangements."],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"BRIEF DESCRIPTION OF THE DRAWINGS","p":["Various exemplary embodiments are illustrated by way of example, and not by way of limitation, in the figures of the accompanying drawings in which like reference numerals refer to similar elements and in which:",{"@attributes":{"id":"p-0005","num":"0004"},"figref":"FIG. 1"},{"@attributes":{"id":"p-0006","num":"0005"},"figref":"FIGS. 2A and 2B"},{"@attributes":{"id":"p-0007","num":"0006"},"figref":"FIG. 3"},{"@attributes":{"id":"p-0008","num":"0007"},"figref":"FIGS. 4A-4C"},{"@attributes":{"id":"p-0009","num":"0008"},"figref":"FIGS. 5A and 5B"},{"@attributes":{"id":"p-0010","num":"0009"},"figref":"FIG. 6"},{"@attributes":{"id":"p-0011","num":"0010"},"figref":"FIG. 7"}]},"DETDESC":[{},{}]}
