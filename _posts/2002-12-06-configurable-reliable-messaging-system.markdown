---
title: Configurable reliable messaging system
abstract: In one aspect of the invention, a configurable reliable messaging system is provided. The configurable reliable messaging system comprises a communication subsystem capable of configurably transmitting and receiving a message across a network using at least one of a plurality of network links, a plurality of internet protocols and a plurality of transport protocols. The configurable reliable messaging system also comprises a reliability subsystem capable of configurably logging the message, detecting a plurality of failures, notifying a remote entity interconnected with the configurable reliable messaging system via the network of the plurality of failures, and recovering from the plurality of failures. In addition, the configurable reliable messaging system comprises a control module capable of configuring the communication subsystem and the reliability subsystem based on a set of input parameters.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=07152180&OS=07152180&RS=07152180
owner: NTT DoCoMo, Inc.
number: 07152180
owner_city: Tokyo
owner_country: JP
publication_date: 20021206
---

{"@attributes":{"id":"description"},"BRFSUM":[{},{}],"heading":["RELATED APPLICATION","FIELD OF THE INVENTION","BACKGROUND","SUMMARY","DETAILED DESCRIPTION OF THE DISCLOSED EMBODIMENTS"],"p":["This application is related to application Ser. No. 10\/179,994, filed Jun. 24, 2002, entitled \u201cSystem and Method for Making Mobile Applications Fault Tolerant,\u201d naming as inventors Nayeem Islam and Shahid Shoaib, and application Ser. No. 10\/243,083, filed Sep. 13, 2002, entitled \u201cMethod For Dynamically Switching Fault Tolerance Schemes,\u201d naming as inventors Shahid Shoaib and Nayeem Islam.","The present invention relates generally to fault tolerant distributed computing systems, and in particular, to a reliable messaging system for distributed systems that is self configurable to provide various levels of fault tolerance.","The successful completion of applications depends on the fault free operation of critical system components. In distributed computing systems, these critical system components typically include application processes, devices (clients or servers) on which application processes execute and the communication mechanism used to communication between them. However, any of these components may fail during operation. Such failures may have implications for a user ranging from mere annoyance to significant financial losses. Therefore, from a user's perspective, there is a need for system reliability. Reliability is the property of a computing system that allows it to run continuously without crashing. In situations where it may not be possible to avoid all component failures, reliability from a user perspective can be provided by masking these failures. Fault tolerance allows a system to run and offer its services to a user even in the presence of failures.","Messaging is considered a key communication mechanism in distributed systems, where it is a popular choice for applications that require a high degree of reliability, e.g. web services, remote procedure calls and e-commerce transactions. Messaging allows applications to communicate to each other via message passing, ensuring that messages are delivered according to application specified delivery semantics, such as at most once, at least once and exactly once.","A message-based communication system that is fault tolerant, referred to as a reliable messaging system, ensures the reliable delivery of messages according to specified delivery semantics despite device (client or server) and network failures. This is accomplished by making the reliable messaging system fault tolerant to various types of failures, which may require implementing different fault tolerance schemes for fault detection or recovery. Additionally, a reliable messaging system may support asynchronous operation, which imposes no limit on the time it takes to send or receive messages over a network. Asynchronous operation allows interconnected devices to communicate with each other even if one of the devices is temporarily unavailable using point to point messaging or a centralized messaging or queuing server.","Fault tolerance usually requires some sort of redundancy, e.g., an application may have to save its state periodically to stable storage in order to ensure that it can recover from failures. Research has shown that there is a significant trade-off between the level of fault tolerance, which includes reliability guarantees and recovery speed, and the system performance during failure free operation. This trade-off results from the varying amounts of computing overhead associated with message logging, fault detection and recovery operations for different fault tolerance schemes. Accordingly, an application may wish to specify precise fault tolerance and performance requirements for a reliable messaging system. These requirements may vary over the course of execution of an application and may differ among applications.","In addition, reliable messaging systems will need to operate in computing environments that may have great heterogeneity among the networks, applications\/services and devices forming part of these environments. For example, a wireless environment may include changing networks, changing network conditions, including frequent disconnections, asymmetric networks and networks with unpredictable delay and loss characteristics. In addition, various applications executing within a wireless environment may impose changing service characteristics and service requirements for reliability and fault tolerance. Also, wireless environments may include heterogeneous devices having different processing power, changing load, storage, memory and battery resources.","Traditional techniques for implementing reliable messaging for distributed systems have primarily focused on static reliable messaging systems. These systems are unable to adapt to changing conditions in a heterogeneous environment. Known reliable messaging systems can provide only limited levels of fault tolerance and rely on fixed transport protocols, usually the Transport Control Protocol (TCP), which may not be optimized for a heterogeneous or wireless environment.","Therefore, there is a need for an improved reliable messaging system that can provide dynamic re-configurability and fault tolerance in a heterogeneous computing environment.","In one aspect of the invention, a configurable reliable messaging system is provided. The configurable reliable messaging system comprises a communication subsystem capable of configurably transmitting and receiving a message across a network using at least one of a plurality of network links, a plurality of internet protocols and a plurality of transport protocols. The configurable reliable messaging system also comprises a reliability subsystem capable of configurably logging the message, detecting a plurality of failures, notifying a remote entity interconnected with the configurable reliable messaging system via the network of the plurality of failures, and recovering from the plurality of failures. In addition, the configurable reliable messaging system comprises a control module capable of configuring the communication subsystem and the reliability subsystem based on a set of input parameters.","In another aspect of the invention, a method for configuring a reliable messaging system is provided. The reliable messaging system includes a control module. The reliable messaging system also includes a communication subsystem having communication components, which are capable of configurably transmitting and receiving a message across a network using at least one of a plurality of network links, a plurality of internet protocols and a plurality of transport protocols. The reliable messaging system further includes a reliability subsystem having reliability components, which are capable of configurably logging the message, detecting a plurality of failures, notifying a remote entity interconnected with the configurable reliable messaging system via the network of the plurality of failures, and recovering from the plurality of failures. The method comprises using the control module, selecting a group of the reliability components for an implementation of the reliable messaging system based on a set of input parameters. The method also comprises instantiating the communication components and the selected group of reliability components. In addition, the method comprises using the control module, configuring the communication components and the selected group of reliability components. Furthermore, the method comprises using the control module, determining an order for routing messages between the set of components based on the set of input parameters.","Reference will now be made in detail to the present disclosed embodiments with reference to the accompanying drawings.",{"@attributes":{"id":"p-0019","num":"0018"},"figref":"FIG. 1","b":["10","10","12","14","16","10","18","20","16"]},"The application program  uses the reliable messaging system  to communicate with other remote entities. For instance, the reliable messaging system  can execute in a distributed system, as shown in . A distributed system is a group of computing devices interconnected with a communication network which function together to implement an application. The distributed system  of  includes an access network  connected to a client device  and a server device . A client application such as a web browser responsible for presenting the data on the client , interfaces with a reliable messaging system (\u201cRMS\u201d) that executes on the client . A server application such as a database engine that manages data storage and retrieval on the server , interfaces with the reliable messaging system that executes on the server . The client and server applications and can communicate with each other by sending and receiving messages across the access network  via reliable messaging systems and In addition, the client  includes a persistent storage  and the server  includes a persistent storage  to allow the reliable messaging systems and to perform message logging operations.","While the distributed system  of  illustrates a client-server model, it should be understood that this model is meant to be illustrative, rather than limiting. A configurable reliable messaging system according to the present invention can execute in other types of distributed computing environments as well. For example, multiple client devices may communicate to each other via the reliable messaging system  of  in a peer-to-peer or adhoc networking mode and multiple server devices also may communicate to each other via the reliable messaging system  for back end processing.","As described in further detail below, the reliable messaging system  of  is self configurable in (i) the selection of the components that comprise the communication subsystem  and the reliability subsystem , (ii) the specific implementations of the selected components and (iii) the routing of messages between these components. This configurability allows the reliability messaging system  to adapt itself in real time to handle different types of applications, networks and devices.","Communication Subsystem","As indicated above, the reliable messaging system  of  includes a communication subsystem , which is responsible for end-to-end delivery of data. For example, as shown in , the reliable messaging systems and are responsible for delivery of data between the client  and the server . Referring again to , the components of the communication subsystem  include a network interface layer , an internet layer  and a transport layer .","The network interface layer  provides access to different physical network links, such as the access network  of , for transmitting and receiving data. The network interface layer  formats data into network-specific packets. It provides the internet layer  with a consistent interface to different types of access networks, such as a wired local access network (\u201cLAN\u201d), cellular network, Bluetooth, IRDA, 802.11b (Wi-Fi) wireless LAN, and General Packet Radio Service (GPRS) mobile telephone network.","The internet layer  handles the movement of data across an internet, which is a set of interconnected networks. Specifically, the internet layer  provides the ability to transmit data between heterogeneous physical networks that interconnect a source and destination device. For example, the access network  of  may include a 802.11B wireless LAN network or a third generation cellular network (UMTS) as part of a hybrid network comprising of different access technologies. The internet layer preferably uses the Internet Protocol (\u2018IP\u201d) for routing individual data packets between individual network nodes using an IP addressing scheme. The Internet Protocol can also break up or fragment application messages into smaller manageable data packets called datagrams for transmission across networks that can only handle smaller data packets. The datagrams can then be re-assembled at a destination node to reconstruct the sent messages. The internet layer can further process error and control messages, such as ICMP. However, those skilled in the art will recognize that other types of protocols may be used instead of IP, such as Novell NetWare's IPX.","The transport layer  manages the flow of data between the application  and the reliable messaging system . It performs flow control to slow data transfer in case of limited network bandwidth and verifies the correct delivery of data. If transmission errors or data loss are detected, the transport layer  can ask for data to be retransmitted. The transport layer can utilize various transport protocols, including reliable HTTP (HTTPR), which supports reliable messaging, as well as TCP, SCTP, UDP, SMTP, HTTP.","Reliability Subsystem","The reliability subsystem  addresses problems related to making the communications subsystem  fault tolerant in the presence of network, device and application failures. The reliability subsystem  includes a log manager module , failure detector module , notification manager module  and recovery manager module .","Log Management","The log manager module  takes care of message logging during normal system operation. For example, the log manager module of the reliable messaging system of  can log messages received from the server  to the persistent storage  on the client , while the log manager module of the reliable messaging system can log messages received from the client  to persistent storage  on the server .","Message logging is desirable because fault tolerance is attained by redundancy. The log manager module  can execute various logging schemes or algorithms. For example, both the client  and the server  of  may have multiple options regarding the direction of message logging, including for outgoing messages only, for incoming messages only, or for both directions. In addition, the client  may have options for the timing of message logging operations, such as logging messages before sending an outgoing message, after sending an outgoing message or asynchronously. Likewise, the server  may log messages before or after delivering an incoming message to the application or asynchronously.","Different logging schemes can have different fault tolerance versus performance trade-offs. No one logging scheme will work best for all applications. In order to meet changing requirements of fault tolerance and performance for the application , the log manager module  can dynamically switch message logging schemes in real time at the direction of the control module , as described in further detail below.","Failure Detection","Referring again to , the failure detector module  is used to detect different classes of failures, such as application process failures, client and server device failures, network failures and transport failures. Timely and accurate failure detection facilitates graceful recovery from failures.","As noted above, the failure detector module  can detect application process failures. For example, the failure detector module  can periodically poll the operating system process table to determine if the application  has crashed or fails to respond within a given time period. This behavior will be detected by the failure detector module  and will be treated as an application process failure. The failure detector module  can also signal to the control module  that the application  has failed. As described in greater detail further below, the control module  can then direct the notification manager module  and the recovery manager module  to take appropriate steps in order to mask the failure of the application .","The failure detector module  can also detect local device and remote device failures. In particular, the failure of a local device that executes the reliable messaging system  can only be detected locally once the device is turned back on. For example, referring to , the failure detector module of the reliable messaging system may detect that the client  (local device) has failed once the client  device restarts and a communicating peer, such as the server , notifies the client  of the client's failure. The server  can determine that the client  has failed using a timeout mechanism that periodically polls the client . Likewise, by periodically polling the server , the failure detector module of the reliable messaging system can detect a failure of the server  (remote device) once the server has crashed or fails to respond in a given interval. Furthermore, the reliable messaging system can similarly detect a local failure of the server  once the server  restarts as well as a failure of a remote device, such as client , using simple timeout mechanisms.","In addition, network link failures can be detected by the failure detector module  of . In particular, the failure detector module  can detect whether a network link of the reliable messaging system  has crashed or ceases to respond within a given interval to polling requests. Alternatively, the failure detector module  can detect a network link failure if the packet loss rate or data transmission delay for the network link increases above a predetermined threshold value. This threshold value may vary for different types of networks and can be specified by the systems deployer.","The failure detector module  further can detect a failure at the transport layer . A transport protocol is defined to have failed if the network link has not crashed, but the transport protocol itself is giving unacceptable performance. For example, the failure detector module  can detect a failure a failure at the transport layer  if a network link shows acceptable signal strength above a given signal threshold, but the data transmission delay, or number of retransmissions increases above a predetermined threshold value.","Notification Management","The notification manager module  works in conjunction with the failure detector module  to notify remote entities that the application  has failed. Specifically, once the control module  receives notice from the failure detector module  that the application  has failed, the control module can direct the notification manager module  to broadcast a failure notification to particular remote entities. For example, referring to , the notification manager module of the reliable messaging system on the server  can notify the reliable messaging system on the client  that the application has failed. As described in greater detail further below in connection with the reliability options of Table 1, the application  can request which remote entities are notified of its failure.","In addition, the notification manager module  can notify remote entities if the failure detector module  has detected that a network link or transport has failed. This can be accomplished once the recovery manager  has recovered from the network link failure or transport failure in question.","Recovery Management","The recovery manager module  of  is responsible for recovery from different types of failures. Different recovery mechanisms may be used by the recovery manager module  depending upon the type of failure detected and the logging scheme used by the log manager module .","Consequently, the recovery manager module  can recover from application process failures. In particular, the recovery manager module  will ensure that, if a local application has failed, any incoming messages are delivered to the application after it restarts. Likewise, in case of a remote application failure, the recovery manager module  will ensure that any outbound messages are received by the remote application once it restarts. Referring to , if the client application fails for example, the recovery manager module of the reliable messaging system will request that the log manager of the reliable messaging system queue all incoming messages and will ensure that those messages are delivered to the client application once it restarts. If the server application fails, the recovery manager module of the reliable messaging system will request that the log manager of the reliable messaging system queue all outbound messages from the client  and will ensure that they are received by the server application once it restarts.","In addition, when the server application has failed, the recovery manager module of the reliable messaging system on the server  can notify the client application of alternate servers executing a server application which provides the services requested from application Also, the recovery manager module of the reliable messaging system on the server  can seek an alternate server in response to a notification that the server application has failed.","Referring again to , the recovery manager module  can also recover from device failures. In particular, the recovery manager module  will ensure that, if a local device has failed, any incoming messages are delivered to a local application once it restarts after the local device itself comes back up. Likewise, in case of a remote device failure, the recovery manager module  will ensure that any outbound messages are received by a remote application once it restarts after the remote device itself comes back up.","For example, if the client  of  fails, the recovery manager module of the reliable messaging system will ensure any incoming messages are delivered to the client application once it restarts after the client  itself comes back up. Likewise, the recovery manager module of the reliable messaging system will ensure that any outbound messages are received by the client application once it restarts after the client  itself comes back up. If the server  of  fails, the recovery manager module of the reliable messaging system will ensure any incoming messages are delivered to, and the recovery manager module of the reliable messaging system will ensure that any outbound messages are received by, the server application once it restarts after the server  itself comes back up.","Alternatively, in case the server  has failed, the recovery manager module of the reliable messaging system on the client  can find an alternate server connected to the access network , which can continue to provide the same services as the crashed server . The reliable messaging system will then send outbound messages to the new alternate server instead of the server .","Referring again to , the recovery manager module  further can recover from a network link failure. In particular, the recovery manager module  can select a different access network for communicating with remote entities once a network link failure has been detected by the failure detector . The selection criteria for choosing a new access network can be specified by the system deployer.","Additionally, in order to recover from a transport failure, the recovery manager module  may select another transport protocol to use for the transport layer  once a transport failure has been detected by the failure detector . The criteria for selecting an appropriate transport protocol may be specified by the system deployer.","Control Module","The control module  provides an interface to the application . Generally, the control module  provides the application  with a core set of application programming interfaces (\u201cAPIs\u201d)  that can be used for communicating with the reliable messaging system . In particular, the set of APIs  allow the application  to specify input parameters for the reliable messaging system . The input parameters correspond to different options for performance and fault tolerance of the reliable messaging system . As described in greater detail further below, an application  may specify different options for performance and fault tolerance for the reliable messaging system  in various levels of granularity, such as per message and per message type. In addition, those skilled in the art will recognize that different users may have their own peculiar requirements for fault tolerance and\/or performance from a particular application. Therefore, an application may specify different sets of input parameters depending on the identity of a current user or on a per user basis.","Table 1 shows several reliability related options that the application  of  may specify for the reliable messaging system . The term local application refers to the application  and the term local device refers to the device, whether client or server, which executes the application . The term remote device refers to a device interconnected to the local device via a network. A remote application is an application that executes on a remote device for providing services requested by the local application. The term logging server refers to a dedicated remote device that is capable of logging messages. Where an entry for an option is designated by the term \u201cX,\u201d a particular value may be specified corresponding to a range of values available for the option.","As shown in Table 1, the application  may choose various types of failures to be detected by the reliable messaging system , including local and remote application failures, remote device failures, and network failures, including network link and transport failures. The application  also may specify whether the reliable messaging system  should notify remote entities of particular types of failures as well as a destination for any such notification. The application  may further choose whether it wishes to recover from local and remote application failures, local and remote device failures, and network failures, including network link and transport failures. In addition, the application  may request a device for logging messages, including the local device, a remote device, and a centralized network logging server.",{"@attributes":{"id":"p-0049","num":"0048"},"tables":{"@attributes":{"id":"TABLE-US-00001","num":"00001"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"center"}},"thead":{"row":{"entry":"TABLE 1"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}},{"entry":"Reliability Options"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"5"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"49pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"42pt","align":"center"}},{"@attributes":{"colname":"2","colwidth":"42pt","align":"center"}},{"@attributes":{"colname":"3","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"4","colwidth":"42pt","align":"center"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},{},{},"Notification",{}]},{"entry":[{},"Failure",{},"(requested,","Message"]},{"entry":[{},"Detection","Recovery","destination)","Logging"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"4","align":"center","rowsep":"1"}}]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"5"},"colspec":[{"@attributes":{"colname":"1","colwidth":"49pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"42pt","align":"center"}},{"@attributes":{"colname":"3","colwidth":"42pt","align":"center"}},{"@attributes":{"colname":"4","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"5","colwidth":"42pt","align":"center"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["Local","Y\/N","Y\/N","Y\/N, X","N\/A"]},{"entry":"Application"},{"entry":["Remote","Y\/N","Y\/N","Y\/N, X","N\/A"]},{"entry":"Application"},{"entry":["Local Device","Y\/N","Y\/N","Y\/N, X","Y\/N"]},{"entry":["Remote Device","Y\/N","Y\/N","Y\/N, X","Y\/N"]},{"entry":["Logging Server","N\/A","N\/A","N\/A","Y\/N"]},{"entry":["Network Link","Y\/N","Y\/N","Y\/N, X","N\/A"]},{"entry":["Transport","Y\/N","Y\/N","Y\/N, X","N\/A"]},{"entry":{"@attributes":{"namest":"1","nameend":"5","align":"center","rowsep":"1"}}}]}}]}}},"Furthermore, the application  can specify values for reliability options of Table 1 on a per message basis or a per message type basis. In particular, the application  can specify different recovery and failure detection options for individual messages or for each class of messages handled by the reliable messaging system .","The following sample APIs may be used to by an application to specify input parameters corresponding to the reliability options shown in Table 1.",{"@attributes":{"id":"p-0052","num":"0051"},"tables":{"@attributes":{"id":"TABLE-US-00002","num":"00002"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"thead":{"row":{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"RELIABILITYPARAMS{"]},{"entry":[{},"\u2003FAILUREDETECTIONPARAMS failureDetectionPARAMS;"]},{"entry":[{},"\u2003NOTIFICATIONPARAMS notificationPARAMS;"]},{"entry":[{},"\u2003LOGGINGPARAMS loggingPARAMS;"]},{"entry":[{},"\u2003RECOVERYPARAMS recoveryPARAMS;"]},{"entry":[{},"}"]},{"entry":[{},"FAILUREDETECTIONPARAMS {"]},{"entry":[{},"\u2003BOOL localAppFailure;"]},{"entry":[{},"\u2003BOOL remoteAppFailure;"]},{"entry":[{},"\u2003BOOL localDeviceFailure;"]},{"entry":[{},"\u2003BOOL remoteDeviceFailure;"]},{"entry":[{},"\u2003BOOL linkFailure;"]},{"entry":[{},"\u2003BOOL transportFailure;"]},{"entry":[{},"}"]},{"entry":[{},"NOTIFICATIONPARAMS {"]},{"entry":[{},"\u2003BOOL localAppFailure;"]},{"entry":[{},"\u2003BOOL remoteAppFailure;"]},{"entry":[{},"\u2003BOOL localDeviceFailure;"]},{"entry":[{},"\u2003BOOL remoteDeviceFailure;"]},{"entry":[{},"\u2003BOOL linkFailure;"]},{"entry":[{},"\u2003BOOL transportFailure;"]},{"entry":[{},"\u2003Destination notificationDestination;"]},{"entry":[{},"}"]},{"entry":[{},"LOGGINGPARAMS {"]},{"entry":[{},"\u2003BOOL localLog;"]},{"entry":[{},"\u2003BOOL remoteLog;"]},{"entry":[{},"\u2003BOOL dualLog;"]},{"entry":[{},"\u2003Destination additionalLogDestination;"]},{"entry":[{},"}"]},{"entry":[{},"RECOVERYPARAMS {"]},{"entry":[{},"\u2003BOOL localAppFailure;"]},{"entry":[{},"\u2003BOOL localDeviceFailure;"]},{"entry":[{},"\u2003BOOL remoteAppFailure;"]},{"entry":[{},"\u2003BOOL remoteDeviceFailure;"]},{"entry":[{},"\u2003BOOL linkFailure;"]},{"entry":[{},"\u2003BOOL transportFailure;"]},{"entry":[{},"}"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}]}}}}},"Table 2 shows several performance options that the application  may specify for the reliable messaging system . In particular, the application  may set threshold values for the mean (M(T)) and variance (V(T)) of wait times for user interface events at the application . Wait times measure the time intervals that the application  must wait for a system response after issuing a request. Accordingly, the threshold values for M(T) and V(T) relate to acceptable response times for fulfilling a user's request. Furthermore, the application  may specify the threshold values for the mean and variances of wait times per message or per message type.",{"@attributes":{"id":"p-0054","num":"0053"},"tables":{"@attributes":{"id":"TABLE-US-00003","num":"00003"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"center"}},"thead":{"row":{"entry":"TABLE 2"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}},{"entry":"Performance Options"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"105pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"21pt","align":"center"}},{"@attributes":{"colname":"2","colwidth":"91pt","align":"center"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"M(T)","V(T)"]},{"entry":[{},"(ms)","(ms)"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"2","align":"center","rowsep":"1"}}]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"4"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"35pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"70pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"21pt","align":"center"}},{"@attributes":{"colname":"3","colwidth":"91pt","align":"center"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"Application","X","X"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"3","align":"center","rowsep":"1"}}]}]}}]}}},"The following sample APIs may be used to the application  to specify input parameters corresponding to the performance options discussed above.",{"@attributes":{"id":"p-0056","num":"0055"},"tables":{"@attributes":{"id":"TABLE-US-00004","num":"00004"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"63pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"154pt","align":"left"}}],"thead":{"row":{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"PERFORMANCEPARAMS {"]},{"entry":[{},"long WaitTimeThreshold;"]},{"entry":[{},"long WaitTimeVariance;"]},{"entry":[{},"}"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}]}}}}},"Table 3 shows several network stack options that the application  may customize for the reliable messaging system . Specifically, the application  may specify a network link to be accessed locally by the network interface layer , a protocol to be used locally by the internet layer  and a transport protocol to be used locally by the transport layer  of the reliable messaging system . The application  can specify each of these network stack options per message or per message type.",{"@attributes":{"id":"p-0058","num":"0057"},"tables":{"@attributes":{"id":"TABLE-US-00005","num":"00005"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"center"}},"thead":{"row":{"entry":"TABLE 3"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}},{"entry":"Network Stack Options"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"4"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"56pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"63pt","align":"center"}},{"@attributes":{"colname":"2","colwidth":"35pt","align":"center"}},{"@attributes":{"colname":"3","colwidth":"63pt","align":"center"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"Transport","Internet",{}]},{"entry":[{},"(transport","(Layer 3","Link"]},{"entry":[{},"protocol)","protocol)","(Link type)"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"3","align":"center","rowsep":"1"}}]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"5"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"63pt","align":"center"}},{"@attributes":{"colname":"3","colwidth":"35pt","align":"center"}},{"@attributes":{"colname":"4","colwidth":"63pt","align":"center"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"Application","X","X","X"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"4","align":"center","rowsep":"1"}}]}]}}]}}},"The following sample APIs may be used to by the application  to specify input parameters corresponding to the network stack options discussed above. The \u201cautoSwitch\u201d parameters allow the application  to specify that the reliable messaging system  is permitted to switch from the requested transport layer protocol, the internet layer protocol and the network link if necessary.",{"@attributes":{"id":"p-0060","num":"0059"},"tables":{"@attributes":{"id":"TABLE-US-00006","num":"00006"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"175pt","align":"left"}}],"thead":{"row":{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"COMMPARAMS {"]},{"entry":[{},"TRANSPORTPARAMS transportPARAMS"]},{"entry":[{},"L3PARAMS I3PARAMS"]},{"entry":[{},"LINKPARAMS linkPARAMS"]},{"entry":[{},"}"]},{"entry":[{},"TRANSPORTPARAMS {"]},{"entry":[{},"tProtocol primaryTransportProtocol;"]},{"entry":[{},"tProtocol alternateTransportProtocol;"]},{"entry":[{},"BOOL autoSwitchTransport;"]},{"entry":[{},"}"]},{"entry":[{},"L3PARAMS {"]},{"entry":[{},"L3Protocol primaryInternetLayerProtocol;"]},{"entry":[{},"L3Protocol alternateInternetLayerProtocol;"]},{"entry":[{},"BOOL autoSwitchInternet;"]},{"entry":[{},"}"]},{"entry":[{},"LINKPARAMS {"]},{"entry":[{},"accessNetwork primaryLink;"]},{"entry":[{},"accessNetwork alternateLink;"]},{"entry":[{},"BOOL autoSwitchLink;"]},{"entry":[{},"}"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}]}}}}},"Table 4 shows several delivery options for the reliable messaging system  that the application  may select from. For example, the application  may specify that it requires at least once, at most once or exactly once delivery of messages. It also may specify different delivery options per message type or per message.",{"@attributes":{"id":"p-0062","num":"0061"},"tables":{"@attributes":{"id":"TABLE-US-00007","num":"00007"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"center"}},"thead":{"row":{"entry":"TABLE 4"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}},{"entry":"Delivery Options"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"4"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"63pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"63pt","align":"center"}},{"@attributes":{"colname":"2","colwidth":"21pt","align":"center"}},{"@attributes":{"colname":"3","colwidth":"70pt","align":"center"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"At","At",{}]},{"entry":[{},"least","most","Exactly"]},{"entry":[{},"once","once","once"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"3","align":"center","rowsep":"1"}}]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"5"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"21pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"63pt","align":"center"}},{"@attributes":{"colname":"3","colwidth":"21pt","align":"center"}},{"@attributes":{"colname":"4","colwidth":"70pt","align":"center"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"Application","Y\/N","Y\/N","Y\/N"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"4","align":"center","rowsep":"1"}}]}]}}]}}},"Table 5 shows several synchrony options that the application  may specify for the reliable messaging system . For example, the application  may select either asynchronous or synchronous operation of the reliable messaging system . These options may be selected by the application  per message type or per message.",{"@attributes":{"id":"p-0064","num":"0063"},"tables":{"@attributes":{"id":"TABLE-US-00008","num":"00008"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"center"}},"thead":{"row":{"entry":"TABLE 5"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}},{"entry":"Synchrony Options"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"4"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"70pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"28pt","align":"center"}},{"@attributes":{"colname":"3","colwidth":"91pt","align":"center"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},{},"Async","Sync"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"3","align":"center","rowsep":"1"}}]},{"entry":[{},"Application","Y\/N","Y\/N"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"3","align":"center","rowsep":"1"}}]}]}}]}}},"In addition, the following sample APIs may be used to by the application  to specify input parameters corresponding to the delivery and synchrony options discussed above.",{"@attributes":{"id":"p-0066","num":"0065"},"tables":{"@attributes":{"id":"TABLE-US-00009","num":"00009"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"63pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"154pt","align":"left"}}],"thead":{"row":{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"DELIVERYPARAMS {"]},{"entry":[{},"BOOL AsyncOperation;"]},{"entry":[{},"deliverySemantics Semantics;"]},{"entry":[{},"}"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}]}}}}},"In order for the application  to configure the reliable messaging system  using the illustrative API structures described above, the following control APIs may be utilized. In particular, the following \u201cget\u201d method calls can be used by an application  to retrieve current values for the input parameters of the reliable messaging system  corresponding to options for performance and fault tolerance, while \u201cset\u201d method calls can be used to specify new values for the input parameters:",{"@attributes":{"id":"p-0068","num":"0067"},"tables":{"@attributes":{"id":"TABLE-US-00010","num":"00010"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"21pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"196pt","align":"left"}}],"thead":{"row":{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"reliabilityPARAMS getReliabilityOptions (configType)"]},{"entry":[{},"int setReliabilityOptions (configType, reliabilityPARAMS)"]},{"entry":[{},"commPARAMS getCommOptions (configType)"]},{"entry":[{},"int setCommOptions (configType, commPARAMS)"]},{"entry":[{},"deliveryPARAMS getDeliveryOptions (configType)"]},{"entry":[{},"int setDeliveryOptions(configType, deliveryPARAMS)"]},{"entry":[{},"configType {"]},{"entry":[{},"MessageType perMessageType;"]},{"entry":[{},"Message perMessage;"]},{"entry":[{},"}"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}]}}}}},"The application  also can configure the reliable messaging system  using the \u201csendMessage\u201d method call for requesting that the reliable messaging system send messages and the \u201crecvMessage\u201d method call for retrieving messages received by the reliable messaging system.",{"@attributes":{"id":"p-0070","num":"0069"},"tables":{"@attributes":{"id":"TABLE-US-00011","num":"00011"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"21pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"196pt","align":"left"}}],"thead":{"row":{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"int sendMessage(Destination msgDest,"]},{"entry":[{},"\u2003Message outBuffer,"]},{"entry":[{},"\u2003RELIABILITYPARAMS reliabilityPARAMS optional,"]},{"entry":[{},"\u2003COMMPARAMS commPARAMS optional,"]},{"entry":[{},"\u2003DELIVERYPARAMS deliveryPARAMS optional)"]},{"entry":[{},"int recvMessage(Source from optional,"]},{"entry":[{},"\u2003Message outBuffer,"]},{"entry":[{},"\u2003RELIABILITYPARAMS reliabilityPARAMS optional,"]},{"entry":[{},"\u2003COMMPARAMS commPARAMS optional,"]},{"entry":[{},"\u2003DELIVERYPARAMS deliveryPARAMS optional)"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}]}}}},"br":{}},"The set of APIs  provide flexibility in how the reliable messaging system is configured. Based on the reliability, performance, network, synchrony, and delivery options specified by the application , the control module  can instantiate and configure a customized implementation of the reliable messaging system . In particular, the control module  can select the components of the communication and reliability subsystems  and  for a particular instantiation of the reliable messaging system  depending on the fault tolerance and performance options specified by the application .",{"@attributes":{"id":"p-0072","num":"0071"},"figref":["FIG. 3","FIG. 2","FIG. 3"],"b":["60","18","60","18","18","18","26","22","18","26","24","18","10","60","16","10","62","10","62","10","18"],"i":["c ","c ","c ","c ","c","s","c ","c ","c. ","c, ","c ","c ","c ","c, ","c, ","c ","c "]},{"@attributes":{"id":"p-0073","num":"0072"},"figref":"FIG. 4","b":["72","10","18","16","10","50","48","10","10","72","10"],"i":["c ","c. ","c ","c ","c ","c ","c ","c. ","c ","c ","c. "]},"In another example, the client application of  can specify that it will not tolerate mean wait times above a predetermined threshold value for M(T), according to the performance options of Table 2. However, the application can also request message logging on both the client  and the server  according to the options shown in Table 1 in order to ensure that messages are delivered in despite failures of the network , client  and server . In this case, if the client  determines that the mean wait time for the application are above the predetermined threshold value for M(T), it can attempt to lower it by sacrificing part of the requested fault tolerance. Specifically, if the client  can determine whether the computational cost of logging messages is lower at the server  than at the client , the control module of the reliable messaging system can ignore the client message logging option specified by the application such that only the instantiation of the reliable messaging system at the server  will include a log manager module. By refusing to instantiate a log manager module at the client , the control module can lower the overall response time for responding to a user request from the client , thereby lowering the mean wait time.","These examples illustrate how the architecture of the reliable messaging system  permits the control module  to select different components for an instance of the reliable messaging system based on application specified input parameters corresponding to the reliability and performance options shown in Tables 1 and 2.","In addition, once selected components of the reliable messaging system  have been instantiated, the control module  of  can configure these components based on the specified options for performance and fault tolerance. In particular, the control module  can determine which protocols or algorithms to execute for the instantiated components. Also, the control module  can dynamically switch different algorithms or protocols running in one or more components at runtime based on the input parameters specified by the application .","For example, the control module  can select different message logging schemes for log manager module  based on the threshold values for the mean and variances of wait times specified by the application  for the performance options shown in Table 2, as disclosed in application Ser. No. 10\/243,083, entitled \u201cMETHOD FOR DYNAMICALLY SWITCHING FAULT TOLERANCE SCHEMES,\u201d naming as inventors Shahid Shoaib and Nayeem Islam, filed Sep. 13, 2002.","Likewise, the control module  can select different transport protocols for the transport layer  and different network links for the network interface layer  based on the network, delivery and synchrony options specified by the application . Additionally, if the application  fails to specify a transport protocol, the control module  may select a protocol for the transport layer  based on the type of network link specified. Alternatively, the application  can choose to become completely independent of communications semantics, specifying only the data that it wants to send, the intended destination, any delivery semantics and the type of reliability and fault tolerance for various types of failures. In this case, it can be the job of the reliable messaging system  to select an appropriate transport protocol and access network based on the reliability and delivery options specified.","Moreover, if operating conditions change, the control module  can instruct the communication subsystem  to switch transport protocols or access networks to optimize the performance and degree of reliability of the reliable messaging system  based on a pre defined set of criteria. For example, if the current network link for the network interface layer  changes, the control module  may examine a set of predefined criteria or rules in order to determine whether to effect a change at the transport layer . Such criteria may include an indication that a TCP protocol performs poorly on a wireless network link or that SMS is the preferred protocol for a cellular network link.","As a result, the reliable messaging system  provides the application  with a network and transport independent interface. Whereas traditional communication models compel an application itself to select and use underlying transport protocols, the reliable messaging system  of  allows the application  to become completely independent of communications semantics. Accordingly, the application  can communicate and host data across different types of networks and transports using a variety of different network or transport protocols.","Therefore, the reliable messaging system  can configure itself based on the input parameters specified by the application  using the APIs . In particular, the control module  can instantiate selected components of the reliability subsystem  and can configure the components of the reliability subsystem  and communication subsystems  with different algorithms or protocols. The control module  can switch fault tolerance schemes, network links, and protocols transparently to the application . Since different components of the reliable messaging system  may be instantiated and individually configured by the control module , the reliable messaging system  separates functional and non-functional code. In other words, the components of the reliability and communication subsystems  and , which comprise functional mechanisms for implementing various fault tolerance and performance policies, are distinct from the policy making control module .","In addition to selecting and configuring components of the reliability and communication subsystems  and  for different instantiations of the reliable messaging system , the control module  can also direct the routing order for messages between the instantiated components of the reliable messaging system . For example, as shown in the control module can request that an incoming message received by the network interface layer at step  is routed first to the internet layer at step , then to the transport layer at step , then to the log manager module where it can be logged at step , then to the control module at step  and finally to the application at step  via the API's at step . Alternatively, as shown in the control module can request that, once an incoming message received by the network interface layer at step  is routed to the internet layer at step  and the transport layer at step , the message is to be delivered to the control module at step  and then to application at step  via the API's at step  before the message is delivered to the log manager module at step  for logging. Likewise, as shown in the control module can request that an incoming message received by the network interface layer at step  is routed first to the log manager module at step  and then to the internet layer at step , the transport layer  at step , the control module at step  and finally to the application at step  via the API's at step .","The control module  of  can also coordinate the execution of the components of the communication subsystem  and the reliability subsystem . For example, the control module  can act as a coordinator for all messages passed between the components of the reliable messaging system , such that different components can only communicate with each other through the control module . In other words, every communication between components of the reliable messaging system  must pass through the control module . Alternatively, the control module  can delegate coordination to the other components of the reliable messaging system  such that components can communicate directly with each other. In this case, the control module  acts as an observer and will intervene only to reconfigure the reliable messaging system .","For example, as described above, the failure detector module  can signal to the control module  that the application  has failed. The control module  can then direct the notification manager module  to notify remote network entities of the application process failure and the recovery manager module  to ensure delivery of incoming or outgoing messages. Alternatively, the architecture of the reliable messaging system  also allows the failure detector module  to communicate directly with the notification manager module  and the recovery manager module  in order to mask the failure of the application .","Although the invention has been described and illustrated with reference to specific illustrative embodiments thereof, it is not intended that the invention be limited to those illustrative embodiments. Those skilled in the art will recognize that variations and modifications can be made without departing from the true scope and spirit of the invention as defined by the claims that follow. It is therefore intended to include within the invention all such variations and modifications as fall within the scope of the appended claims and equivalents thereof."],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"BRIEF DESCRIPTION OF THE DRAWINGS","p":[{"@attributes":{"id":"p-0013","num":"0012"},"figref":"FIG. 1"},{"@attributes":{"id":"p-0014","num":"0013"},"figref":["FIG. 2","FIG. 1"]},{"@attributes":{"id":"p-0015","num":"0014"},"figref":["FIG. 3","FIG. 1"]},{"@attributes":{"id":"p-0016","num":"0015"},"figref":["FIG. 4","FIG. 1"]},{"@attributes":{"id":"p-0017","num":"0016"},"figref":["FIGS. 5","FIG. 1"],"i":["a","c "],"b":"5"}]},"DETDESC":[{},{}]}
