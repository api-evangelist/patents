---
title: Vision-based document segmentation
abstract: Vision-based document segmentation identifies one or more portions of semantic content of a document. The one or more portions are identified by identifying a plurality of visual blocks in the document, and detecting one or more separators between the visual blocks of the plurality of visual blocks. A content structure for the document is constructed based at least in part on the plurality of visual blocks and the one or more separators, and the content structure identifies the one or more portions of semantic content of the document. The content structure obtained using the vision-based document segmentation can optionally be used during document retrieval.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=07428700&OS=07428700&RS=07428700
owner: Microsoft Corporation
number: 07428700
owner_city: Redmond
owner_country: US
publication_date: 20030728
---

{"@attributes":{"id":"description"},"BRFSUM":[{},{}],"heading":["TECHNICAL FIELD","BACKGROUND","SUMMARY","DETAILED DESCRIPTION","Visual Block Identification","Visual Separator Detection","Content Structure Construction","Document Retrieval","EXAMPLE ENVIRONMENT ","CONCLUSION"],"p":["This invention relates to partitioning documents, and particularly to vision-based document segmentation.","People have access to a great deal of information. However, finding the particular information they desire in any given situation can be very difficult. For example, a large amount of information is accessible to people over the Internet in the form of web pages. The number of such web pages can be on the order of millions or more. Additionally, the web pages available are constantly changing, with some pages being added, others being deleted, and others being modified.","Thus, when someone desires to find some information, such as the answer to a question, the ability to extract particular information from this large information source becomes very important. Processes and techniques have been developed to allow users to search for information over the Internet, and are commonly made available to the user in the form of search engines. However, the accuracy of such search engines can be lacking due in large part to the extremely broad range of content on web pages that are searched. For example, some web pages include copyright and other business-related notices, and some web pages include advertisements. Such business-related and advertising data is not always relevant to the underlying content of the web page, and thus can reduce the accuracy of the searching process if it is considered. By way of another example, different web pages can vary greatly in length, and some may include multiple topics while others contain a single topic.","These characteristics of web pages can reduce the accuracy of search processes. Thus, it would be beneficial to have a way to increase the accuracy of searching documents.","Vision-based document segmentation is described herein.","In accordance with one aspect, one or more portions of semantic content of a document are identified. The one or more portions are identified by identifying a plurality of visual blocks in the document, and detecting one or more separators between the visual blocks of the plurality of visual blocks. A content structure for the document is constructed based at least in part on the plurality of visual blocks and the one or more separators, and the content structure identifies the different visual blocks as different portions of semantic content of the document.","In accordance with other aspects, the content structure obtained using the vision-based document segmentation is used during document retrieval.","Vision-based document segmentation is described herein. The vision-based document segmentation identifies, based on the visual appearance of a document, multiple portions of the document that include the semantic content of that document. The vision-based document segmentation can be used in a variety of different manners. For example, the segmentation can be used when searching for documents, so that the search results are based on the semantic content portions of the document.","The discussions herein refer to documents and models used to describe the structures of the documents. Documents can be in any of a variety of formats, such as in accordance with a Standard Generalized Markup Language (SGML), such as the Extensible Markup Language (XML) format or the HyperText Markup Language (HTML) format. In certain embodiments, these documents are web pages in the HTML format. The models discussed herein can be any of a variety of models that describe the structure of a document. In certain embodiments, the model used is a Document Object Model (DOM). The Document Object Model is a tree-structured representation of a document, also referred to as a DOM tree. In many of the discussions herein, the documents are described as being in the HTML format (e.g., web pages), the model is described as a DOM tree, and each HTML tag of the document is represented by a node in the DOM tree (the DOM tree may also include additional nodes, such as #text or #comment nodes, which may not represent an HTML tag). However, it is to be appreciated that the vision-based document segmentation can also be used with these other documents and\/or models.",{"@attributes":{"id":"p-0023","num":"0022"},"figref":"FIG. 1","b":["100","100","102","104","106","108","102","102","102","102"]},"Visual block extractor  identifies, based on the document description, multiple visual blocks of the document. This identification (also referred to herein as extraction) of the visual blocks is based on visual cues within the document, such as font sizes and\/or types, colors of fonts and\/or background information, HTML tag type, and so forth. The identified blocks are regions of the document. The identified blocks are output by extractor  and made available to visual separator detector .","Visual separator detector  detects separators between different ones of the identified blocks. These separators can take a variety of different forms, such as lines in the document, blank space in the document, different background colors for different blocks, and so forth. In certain embodiments, separators in the horizontal and\/or vertical direction in the document are detected. These detected separators are made available to content structure constructor .","Content structure constructor  generates a content structure for the document based on the blocks identified by extractor  as well as the separators detected by detector . The content structure is a set of one or more portions of the document that represents the semantic content of a document. The content structure is output by module .","The content structure of the document can then be used in a variety of manners. In certain embodiments, system  includes an optional document retrieval module . Document retrieval module  uses the content structure from vision-based segmentation module  in determining which documents to return in response to a query. For example, when a user enters one or more search terms when searching for web pages, the content structure can be used in determining which web pages satisfy the criteria.","The manner in which the content structure is used during document retrieval can vary. In some embodiments, the content structure is used to rank the documents that are retrieved in response to the query. Additionally, in some embodiments the content structure is used as a basis for expanding the search criteria. These uses are discussed in more detail below.","It should be noted that the vision-based document segmentation described herein makes use of the way a document would look when it is displayed. The vision-based document segmentation does not require that a document actually be displayed, and the vision-based document segmentation also does not require that the user actually see a displayed document.",{"@attributes":{"id":"p-0030","num":"0029"},"figref":["FIG. 2","FIG. 1"],"b":["140","140","102"]},"Initially, a document description is accessed (act ). This document description is, for example, a DOM tree for an HTML web page. With the document description, one or more visual blocks in the document are identified (act ). Separators between the identified visual blocks are detected (act ), and a content structure for the document is constructed based on the identified visual blocks and the detected separators (act ). A check is then made as to whether the content structure satisfies a granularity requirement (act ). This granularity requirement refers to a degree of coherence (DoC) for the visual blocks of the content structure, which is a measure of how coherent each of the visual blocks is. If the granularity requirement is not satisfied then process  returns to act , where new visual blocks are identified within the portions of the content structure that did not satisfy the granularity requirement. Once the granularity requirement is satisfied, the content structure for the document is output (act ). Each pass through the combination of acts , , and  (that is, visual blocks are identified, separators between the identified blocks are detected, and content structure based on the identified visual blocks and detected separators is constructed) is referred to herein as a \u201cround\u201d.","Thus, it can be seen that the vision-based document segmentation employs a top-down approach. Generally, an initial set of visual blocks is identified and made available for visual separator detection and content structure construction as discussed below. Within these visual blocks, additional visual blocks are identified in subsequent rounds as appropriate (that is, additional visual blocks are identified in subsequent rounds for each visual block that does not satisfy the granularity requirement).","As discussed herein, the documents being used are assumed to be rectangular in shape when displayed. Thus, some sizes, dimensions, areas, and so forth are described herein with reference to a rectangular or Cartesian coordinate system (e.g., an X,Y-coordinate system). It is to be appreciated that these are only examples, and that the rectangular shapes and the coordinate systems can be different. In some instances, if non-rectangular shapes are used they are converted to rectangular shapes prior to performing the vision-based document segmentation. In other instances, the processes and techniques described herein are adapted to use these different shapes and\/or coordinate systems.","Visual block identification, also referred to herein as visual block extraction, identifies different regions of the document based on visual cues. An indication of these different regions is then output and used in the visual separator detection, as discussed in more detail below. Visual block identification (e.g., in act  of  or implemented by visual block extractor  of ) can be performed as follows.","Generally, every node in the DOM tree for a document can represent a visual block. Some large nodes (e.g., having <TABLE> or <P> tags) are typically used only for organization purpose and are not appropriate to represent a single visual block. Thus, such large nodes are further divided and replaced by their children nodes. On the other hand, because of the potentially large number of leaf nodes, the visual blocks should not be initially identified as being every leaf node in the DOM tree (although, due to the top-down nature of the vision-based document segmentation, some of these leaf nodes may eventually be identified as visual blocks).",{"@attributes":{"id":"p-0036","num":"0035"},"figref":["FIG. 3","FIG. 2"],"b":["170","170","144","170"]},"Initially, a node from a group of candidate nodes of the DOM tree is selected (act ). This group of candidate nodes refers to nodes of the DOM tree that are potentially visual blocks in the current round. The candidate nodes can change while process  is being performed, as discussed in more detail below. In certain embodiments, the group of candidate nodes is initially a single node, the single node being the root node of the DOM tree in the first round or the top node of a subtree of the DOM tree in subsequent rounds (e.g., the top node of a part of the DOM tree corresponding to a visual block that did not satisfy the granularity requirement). Alternatively, the initial group of candidate nodes may be different, such as the nodes one level below the root node in the DOM tree or the nodes one level below the top node of a subtree of the DOM tree.","A check is then made as to whether the selected node can be divided (act ). If the selected node can be divided, then each child node of the selected node is added to the group of candidate nodes (act ), and the selected node is removed from the group of candidate nodes (act ). Process  then returns to act  and selects another node from the group of candidate nodes.","Returning to act , if the selected node cannot be divided, then the selected node represents a visual block (act ), and is added to a pool of visual blocks being identified by process . A degree of coherence (DoC) value is set for the visual block (act ), as discussed in more detail below, and the selected node is removed from the group of candidate nodes (act ). A check is also made as to whether there are additional nodes in the group of candidate nodes (act ). If there are additional nodes in the group of candidate nodes, then process  returns to act , where one of the nodes is selected from the group of candidate nodes. If there are not additional nodes in the group of candidate nodes, then the visual block identification process  is finished (act ), with the visual blocks selected in act  being the visual blocks identified by process . This pool of visual blocks identified by process  can then be used in the visual separator detection, discussed in more detail below.","The determination of whether a particular node can be divided (in act ) is made based on one or more rules. These rules make use of one or more cues or information regarding the node and possibly one or more other nodes in the DOM tree. Examples of such cues or information include a tag cue, a color cue, a text cue, and a size cue. Examples of the rules that can be formulated based on these cues follow. In certain embodiments, a default rule (e.g., that the node can be divided, or alternatively that the node cannot be divided) may also be included. The default rule is used if none of the other rules are applicable.","Top Block Rule: The top block rule is based on the location of the node in the tree being evaluated. The top block rule states that if the node is the top node in the tree being evaluated (e.g., the root node of the DOM tree in the first round), then the node can be divided.","Tag Rule: The tag rule is based on the HTML tag of the node. Some HTML tags, such as the <HR> tag, are often used to separate different topics from a visual perspective. The tag rule states that if the HTML tag of one of the children of the node is equal to one of a set of particular tags (e.g., the HTML tag is the <HR> tag), then the node can be divided.","Color Rule: The color rule is based on the background color of the node as well as the background color(s) of the children of the node. The color rule states that if the background color of the node is different from the background color of at least one of its children nodes, then the node can be divided.","Text and Size Rules: Several text and size rules can be used. Reference is made in some of these rules to the height, width, and\/or size of a node. The height of a node refers to the visual height of the block (e.g., in pixels using an X,Y-coordinate system) represented by the node when the block is displayed, the width of a node refers to the visual width of the block (e.g., in pixels using an X,Y-coordinate system) represented by the node when the block is displayed, and the area of a node refers to the display area (e.g., in pixels using an X,Y-coordinate system) occupied by the block represented by the node when it is displayed (e.g., the product of the width and height of the node in the case of a rectangular block). These sizes can be readily determined based on the position location information included in the nodes of the DOM tree.","Some of these rules (as well as discussions elsewhere in this description) refer to a valid node, a block node, a text node, a virtual text node, and\/or a navigation node. A valid node refers to a node that is visible when the HTML document is displayed (e.g., neither the height nor the width is equal to zero). A block node refers to a node that has some tag other than <A>, <B>, <FONT>, <HR>, <I>, <P>, <STRONG>,<EM>or <TEXT>. A text node refers to a node that only contains free text. A virtual text node refers to a node that is not a block node and only has text nodes as children (or child). A navigation node refers to a node having a height that is more than twice its width, and having a width smaller than 200. In certain implementations, rules regarding navigation nodes are used in the first round, but not in subsequent rounds.","The following text and size cue based rules can be used for nodes having general tags (that is, for all HTML tags except for the <P> tag, the <TABLE> tag, the <TD> tag, and the <UL> tag):\n\n","The following text and size cue based rules can be used for nodes having <P> HTML tags:\n\n","The following text and size cue based rules can be used for nodes having <TABLE> HTML tags:\n\n","The following text and size cue based rules can be used for nodes having <TD> HTML tags:\n\n","The following text and size cue based rules can be used for nodes having <UL> HTML tags:\n\n","In visual block identification, the degree of coherence (DoC) value is a measure assigned to visual blocks extracted from the DOM tree. A different degree of coherence (DoC) value may also be generated for virtual blocks during the content structure construction, as discussed in more detail below. The DoC value of a visual block (or virtual block) is a measure of how coherent the visual block (or virtual block) is.","The DoC value assigned to a block during visual block identification can be assigned in a variety of different manners. In certain embodiments, the DoC value of a visual block is assigned based on its corresponding node in the DOM tree (the node that represents the visual block), and can vary based on the HTML tag of the node. The following is a set of example rules that can be followed in assigning DoC values during the visual block identification. In the following examples, DoC values are integers ranging from 1 to 10, although alternatively different ranges (e.g., made up of integers, real numbers, etc.) could be used. Situations may arise where multiple ones of the following rules may apply to a particular block, and could result in multiple DoC values for the block. Such situations can be resolved in different manners, such as selecting the largest DoC value assigned by one of the rules, selecting the smallest DoC value assigned by one of the rules, averaging the DoC values assigned by the rules, calculating a weighted average of the DoC values assigned by the rules, and so forth.","The following example rules are used to assign DoC values to visual blocks having general HTML tags (that is, to all HTML tags except for the <P> tag, the <TABLE> tag, the <TD> tag, and the <UL> tag):\n\n","The following example rules are used to assign DoC values to visual blocks having <P> HTML tags:\n\n","The following example rules are used to assign DoC values to visual blocks having <TABLE> HTML tags:\n\n","The following example rules are used to assign DoC values to visual blocks having <TD> HTML tags:\n\n","The following example rules are used to assign DoC values to visual blocks having <UL> HTML tags:\n\n","These rules and an example of process  of  can be implemented, for example, using an algorithm having a DivideDomtree procedure or function (shown in Table I below), and a Dividable procedure or function (shown in Table II below). In this algorithm, the value pRoot refers to the currently selected node, the value nLevel refers to the level of the currently selected node in the DOM tree, the pool refers to the group of visual blocks identified by the algorithm, the Top Block refers to the top node of the DOM tree or subtree being evaluated in this round (e.g., in the first round, the Top Block refers to the root node of the DOM tree), and child refers to a child of the currently selected node. The special routines and heuristic rules of the Dividable procedure or function are described above. Each time the DivideDomtree procedure or function is invoked, it is passed a node of the DOM tree as the value of pRoot, and a value of the level of that node in the DOM tree as the value of nLevel.",{"@attributes":{"id":"p-0059","num":"0116"},"tables":{"@attributes":{"id":"TABLE-US-00001","num":"00001"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"189pt","align":"left"}}],"thead":{"row":[{"entry":[{},"TABLE I"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}]},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"Algorithm DivideDomtree(pRoot, nLevel)"]},{"entry":[{},"{"]},{"entry":[{},"\u2003IF (Dividable(pRoot, nLevel) == TRUE){"]},{"entry":[{},"\u2003\u2003FOR EACH child OF pRoot {"]},{"entry":[{},"\u2003\u2003\u2003DivideDomtree(child, nLevel);"]},{"entry":[{},"\u2003\u2003}"]},{"entry":[{},"\u2003} ELSE {"]},{"entry":[{},"\u2003\u2003Put the sub-tree (pRoot) into the pool as a block;"]},{"entry":[{},"\u2003}"]},{"entry":[{},"}"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}]}}}}},{"@attributes":{"id":"p-0060","num":"0117"},"tables":{"@attributes":{"id":"TABLE-US-00002","num":"00002"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"35pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"182pt","align":"left"}}],"thead":{"row":[{"entry":[{},"TABLE II"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}]},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"Algorithm Dividable(pRoot, nLevel)"]},{"entry":[{},"{"]},{"entry":[{},"\u2003IF (pRoot is the Top Block){"]},{"entry":[{},"\u2003\u2003RETURN TRUE;"]},{"entry":[{},"\u2003} ELSE {"]},{"entry":[{},"\u2003\u2003Special routines for TABLE, TD, P, UL;"]},{"entry":[{},"\u2003\u2003Heuristic rules for general tags;"]},{"entry":[{},"\u2003}"]},{"entry":[{},"}"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}]}}}}},"Visual separator detection detects separators between different ones of the blocks identified by the visual block identification. These separators can take a variety of different forms, such as lines in the document, blank space in the document, different background colors for different blocks, and so forth. In certain embodiments, separators in the horizontal and\/or vertical direction in the document are detected. Visual separator detection (e.g., in act  of  or implemented by visual separator detector  of ) can be performed as follows.","The detected separators are horizontal or vertical regions in the document that do not visually intersect with any blocks in the pool of blocks identified by the visual block identification. These separators are used as indicators for discriminating different semantics within the document. A separator is represented by a 2-tuple (P, P), where Pis the start pixel of the separator and Pis the end pixel of the separator. Each pixel Pand Pis identified as an X,Y-coordinate pair, and a rectangular region can be defined by setting the Pand Ppixels as opposite corners of the region (e.g., lower left and upper right comers, upper left and lower right corners, etc.). The width of the separator is calculated as the difference (e.g., in the X direction) between Pand P.","Reference is made to horizontal and vertical directions. Typically, in an X,Y-coordinate system, the horizontal direction refers to the X-axis while the vertical direction refers to the Y-axis. However, other orientations for the horizontal and vertical directions can alternatively be used.",{"@attributes":{"id":"p-0064","num":"0121"},"figref":["FIG. 4","FIG. 2"],"b":["200","200","146","200"]},"Initially, a separator list is initialized with one separator (act ). This one separator includes all regions of the display area for the document that may potentially be a separator(s). In certain embodiments, this initial separator includes the entire area of the document, or alternatively this initial separator may be a single rectangular region that includes all of the blocks in the pool of visual blocks identified by the visual block identification.","A block from the pool of identified blocks is then selected (act ). Blocks can be selected from the pool in any of a variety of manners (e.g., randomly, in the order they were added to the pool, by increasing or decreasing size, and so forth). A check is then made as to whether the selected block is contained in a separator of the separator list (act ). A block is considered to be contained in a separator if the entire area of a block is included within the area of the separator. If the selected block is contained in a separator, then the separator is split into two separators (act ). This split could be accomplished in different manners, such as by removing the separator that contains the block from the separator list and adding two new separators to the separator list, modifying the Por Ppixels of the separator and adding a new separator, and so forth. The splitting of the separator results in what was previously a single separator becoming two smaller separators on either side of the block. When detecting horizontal separators, the two smaller separators would be above and below the block, and when detecting vertical separators, the two smaller separators would be to the left and to the right of the block.","After the separator is split in act , or if the selected block is not contained in a separator, a check is made as to whether the selected block crosses a separator (act ). When detecting horizontal separators, a block is considered to cross a separator if the area of the block intersects a portion of the separator but less than the entire height of the separator. When detecting vertical separators, a block is considered to cross a separator if the area of the block intersects a portion of the separator but less than the entire width of the separator.","If the selected block crosses a separator, then the parameters of the separator are updated so that the block no longer crosses the separator (act ). This updating of the parameters refers to modifying the Pand\/or Ppixels of the separator so that the block no longer crosses the separator.","After the separator parameters are updated in act , or if the selected block does not cross a separator, a check is made as to whether the selected block covers a separator (act ). When detecting horizontal separators, a block is considered to cover a separator if the area of the block intersects the entire height of at least part of the separator. When detecting vertical separators, a block is considered to cover a separator if the area of the block intersects the entire width of at least part of the separator.","If the selected block covers a separator, then the separator is removed from the separator list (act ). After the separator is removed from the separator list in act , or if the selected block does not cover a separator, a check is made as to whether there are any additional blocks in the pool of identified blocks that have not yet been selected (act ). If there are such blocks in the pool of blocks, then process  returns to select one of these remaining blocks in act . However, if there are no such blocks in the pool of blocks, then the four separators at the borders of the display (if such separators are present) are removed from the separator list (act ).","The separator detection is performed to detect both horizontal separators and vertical separators. Horizontal separators could be detected first and then vertical separators detected, or vertical separators could be detected first and then horizontal separators detected, or alternatively the horizontal and vertical separators could be detected concurrently.","In certain embodiments, acts  through  of  are performed for both horizontal and vertical separators. Thus, two different separator lists can be generated. These two separator lists are combined in any of a variety of manners, such as taking the union of the two separator lists. For example, a final separator list may be generated that includes every separator in one of the two lists.","Thus, as can be seen from , the visual separator detection begins with a separator list includes one or more possible separator(s), and the list of possible separators is changed until, when the detection process is finished, the list includes the detected separators. The separator list is changed to add new separators, remove separators, and\/or modify the parameters of separators based on whether the visual blocks overlap the separators as well as how they overlap the separators (e.g., the block is contained in a separator, the block crosses a separator, or the block covers a separator).","It should also be noted that the separators detected by process  can take any of a variety of different forms when the document is displayed. For example, the separators may be blank space in the document, one or more separator lines drawn in the document, images or other graphics in the documents, portions of the document shaded different colors, and so forth.","By way of example, detecting horizontal separators can be seen in the example illustrated in -. Assume that the visual block identification identifies four visual blocks , , , and  in a document  of . The visual blocks , , , and  are illustrated with diagonal cross-hatching. Initially, only one separator  is in the separator list as illustrated in . The separators are illustrated in through with vertical lines. The separator  includes all of the visual blocks , , , and . Further assume that visual block  is the first block selected from the pool of visual blocks, visual block  is the second block selected from the pool of visual blocks, visual block  is the third block selected from the pool of visual blocks, and visual block  is the fourth block selected from the pool of visual blocks.","Visual block  is contained in separator , so separator  is split into two separators  and  as illustrated in . Similarly, block  is contained in separator , so separator  is split into two separators  and  as illustrated in . Furthermore, block  is contained in separator , so separator  is split into two separators  and  as illustrated in .","When visual block  is analyzed, it is determined that visual block  crosses separator  and also covers separator . So, the parameters of separator  are updated to reflect a smaller region, and separator  is removed from the separator list as illustrated in ","Additionally, each of the separators detected in process  is assigned a weight. The weight of a separator is an indication of how visible the separator is when the document is displayed (e.g., separators with higher weights are more visible than separators with lower weights). The weight of a separator is assigned based on various characteristics of the visual blocks on either side of the separator. The weights assigned to separators are used for comparing the separators (e.g., their weights are compared). The weights assigned to the separators are typically not used for other purposes, so the weights can have virtually any unit (so long as it is consistent with or can be converted to a unit consistent with the units of weights of other separators in the document).","A set of rules is applied to determine the weights of the separators. When referring to blocks, the rules refer to the closest visual blocks on either side of the separator (for example, in , the closest visual blocks to separator  would be block  on one side and block  on the other side). The following is an example set of rules that can be applied to determine the weights of the separators:\n\n","If multiple ones of these rules apply to a particular situation, then one of the weights set by these rules can be selected, or the weights set by these rules can be combined. For example, the smallest (or alternatively the largest) of the assigned weights may be used as the weight of the separator, the average of all the assigned weights may be used as the weight of the separator, a weighted average of all the assigned weights may be used as the weight of the separator, and so forth.","Content structure construction generates a content structure for the document based on the blocks identified in the visual block identification as well as the separators detected in the visual separator detection. Content structure construction (e.g., in act  of  or implemented by content structure constructor  of ) can be performed as follows.","The content structure is a set of one or more portions of the document that represents the semantic content of the document. In certain embodiments, the content structure is a hierarchical tree structure of semantic content.",{"@attributes":{"id":"p-0083","num":"0145"},"figref":["FIG. 6","FIG. 2"],"b":["280","280","148","280"]},"Initially, one or more virtual blocks are generated based on the detected separators and the identified visual blocks (act ). The virtual blocks are generated by analyzing the detected separators, starting with those separators having the lowest weight. The blocks on either side of the detected separators are merged into a single virtual block. This merging continues with the separators having the next lowest weight, and continues until separators with a maximum weight are met (this maximum weight may be defined as the largest weight calculated by the visual separator detection discussed above for this particular set of identified visual blocks, or alternatively may be some pre-defined or pre-programmed value).","Once the virtual blocks are generated, a degree of coherence value is determined for each of the virtual blocks (act ). The degree of coherence value is calculated based on the weight of the separator between the two blocks that were merged to generate the virtual block (this separator may be between two visual blocks or between two virtual blocks). In certain embodiments, the degree of coherence value for a virtual block is determined according to the following example rules. In some of these rules, two variables WEIGHT_TMP_TITLE2 and WEIGHT_TMP_TITLE1 are used. The values of the WEIGHT_TMP_TITLE2 and WEIGHT_TMP_TITLE1 variables are determined after all the separators are detected (e.g., after process  of  is finished). All of the separators having text blocks on both sides are sorted by weight. The highest of these weights is the value assigned to the WEIGHT_TMP_TITLE1 variable, and the second highest of these weights is the value assigned to the WEIGHT_TMP_TITLE2 variable. If there are no such separators, then both of the WEIGHT_TMP_TITLE1 and WEIGHT_TMP_TITLE2 variables are set to the value \u22121. If there is only one such separator, then the weight of that one separator is used as the value of WEIGHT_TMP_TITLE1, and the value \u22121 is used as the value of WEIGHT_TMP_TITLE2. These example rules are:\n\n","The content structure is then generated (act ). The content structure is generated based at least in part on the granularity requirement and which virtual blocks, if any, satisfy the granularity requirement. As discussed above, each leaf node of the content structure is analyzed to determine whether the granularity requirement is satisfied. In certain embodiments, a permitted degree of coherence (PDoC) value is defined, and, in order to satisfy the granularity requirement, each leaf node of the content structure is required to have a DoC value greater than (or alternatively greater than or equal to) the PDoC value. The PDoC value can be a pre-defined value (e.g., determined empirically by a system designer). Any of a range of values for the PDoC value can be used, with greater values typically resulting in content structures with more but smaller visual blocks. An example range of PDoC values is from 6 to 9.","The content structure generated in act  can include virtual blocks and\/or visual blocks. The DoC value for each virtual block identified in act  is compared to the PDoC value. For each virtual block having a DoC value greater than the PDoC value, the children of that virtual block are not output as blocks in the content structure.","The content structure is then output (act ). The content structure can be output in any of a variety of formats, and in certain embodiments is output in a hierarchical tree format, with the nodes of the tree representing virtual blocks and\/or visual blocks.",{"@attributes":{"id":"p-0089","num":"0159"},"figref":["FIG. 7","FIG. 7"],"b":["300","302","304","306","308","310","312","314","316","318","320","314","318","312","316","320"]},"Each of the visual blocks - has a corresponding content structure block in the content structure tree . Additionally, a virtual block  is generated by merging blocks  and , virtual block  having a DoC value based on the weight of separator . A virtual block  is generated by merging blocks  and , virtual block  having a DoC value based on the weight of separator . A virtual block  is generated by merging blocks  and , virtual block  having a DoC value based on the weight of separator . Additionally, a virtual block  is generated by merging virtual blocks , , and . The weights of separators  and  are the same, so the DoC value for block  can be based on the weight of either separator  or .","The content structure output based on the virtual blocks illustrated in  depends on the DoC values of the virtual blocks , , , and . For example, if the DoC value of virtual block  is greater than the PDoC value, then virtual block  is output as a block in the content structure but the individual visual blocks  and  are not output as blocks in the content structure. However, if the DoC value of virtual block  is not greater than the PDoC value, then virtual block  is not output as a block in the content structure but the individual visual blocks  and  are output as blocks of the content structure. By way of another example, if the DoC value of virtual block  is greater than the PDoC value, then virtual block  is output as a block in the content structure but the individual virtual blocks , , and  are not output as blocks in the content structure, and the individual visual blocks , , , , , and  are not output as blocks in the content structure.","Document retrieval techniques can be employed using the vision-based document segmentation described herein. Such document retrieval techniques may rely on the vision-based document segmentation alone, or alternatively in combination with more traditional search techniques",{"@attributes":{"id":"p-0093","num":"0163"},"figref":["FIG. 8","FIG. 1"],"b":["360","360","110","360","360"]},"Initially, a query is received (act ). Typically, the query is input by a user, although alternatively the query may be received from some other source (e.g., a remote device, a software application, etc.). A database of blocks obtained from the vision-based document segmentation technique discussed herein is accessed (act ). Typically, the vision-based document segmentation process will have been previously performed and the resulting content structure (including visual blocks and\/or virtual blocks) already stored in a database or some other accessible location. Alternatively, the vision-based document segmentation process may be performed on one or more documents in response to receipt of the query in act .","Once accessed, the blocks of the content structure are ranked according to how well they match the query criteria (act ). The visual blocks and\/or the virtual blocks can be ranked in act . The query received in act  includes one or more search terms, also referred to as query criteria or query terms. In certain embodiments, only those blocks that include at least one of the search terms (or alternatively only those blocks that include all of the search terms) are ranked in act . Alternatively, other limits may be imposed on the number of blocks that are ranked (e.g., process  may be configured to rank only 50 or 100 blocks). The rankings based on the blocks can be generated in any of a variety of different manners. For example, the rankings can be based on one or more of: how many of the search terms are included in the block, the location of the various search terms in the block, how frequently the search terms occur in the block, and forth.","Document rankings are then generated based on the block rankings (act ). The document rankings can be generated in any of a variety of manners. In certain embodiments, the rank of the highest ranking block from the document is used as the ranking for the document. Alternatively, the rankings of all the blocks in the document may be combined (e.g., by generating an average of the rankings of all the blocks, by generating a weighted average of the rankings of all the blocks, etc.) to generate the ranking for the document.","The document rankings are then returned (act ), e.g., to the requester. The document rankings can be returned in a variety of different manners, such as an identifier (e.g., title or uniform resource locator (URL)) and numeric ranking for each document, a display of an identifier of each document in order according to their rankings (e.g., without displaying an explicit numeric ranking for each document), excerpts from the documents that include the search criteria, the actual documents returned in an order according to their rank, and so forth.","It is to be appreciated that various modifications can be made to process . For example, in act  not all of the accessible documents may be ranked or searched. By way of another example, blocks of the documents may be returned in act  rather than the entire documents.",{"@attributes":{"id":"p-0099","num":"0169"},"figref":["FIG. 9","FIG. 1","FIG. 8"],"b":["400","400","110","400","360","400"]},"Process  is similar to process , however the vision-based document segmentation is not performed on all of the possible documents. Rather, an initial search is performed, and the vision-based document segmentation process is performed using the documents from the initial search.","Initially, a query is received (act ). Analogous to process , the query may be a user query or from some other source, and the query includes one or more search terms. An initial document retrieval is performed on the document set, and the documents satisfying the query criteria are ranked (act ). This initial retrieval can be performed in any of a variety of manners. An example of such an initial retrieval process in act  is described in Robertson, S. E., \u201cOverview of the Okapi Projects\u201d, Journal of Documentation, Vol. 53, No. 1, 1997, pp. 3-7. Any of a variety of conventional web search engines can also be used in act .","Process  then proceeds with performing the vision-based document segmentation process on the documents retrieved in the initial retrieval (act ). Block retrieval is then performed using the query criteria (search terms) and the blocks obtained from the vision-based document segmentation (act ), analogous to act  of . Refined document rankings are then generated based on the block ranks (act ), analogous to the discussion above in act  of .","Final document rankings are then generated by combining the initial document rankings from act  and the refined document rankings from act  (act ). This combining can be performed in any of a variety of manners. For example, the rankings from acts  and  may be averaged together, or a weighted average for the rankings from acts  and  may be used. Alternatively, the highest of the rankings from acts  and  for a particular document may be used as the ranking for that document. In yet another alternative, the ranking from act  may be used in place of the ranking from act .","Once the final document rankings are generated, the document rankings are returned (act ), analogous to act  of .",{"@attributes":{"id":"p-0105","num":"0175"},"figref":["FIG. 10","FIG. 1","FIG. 8"],"b":["440","440","110","440","360","440"]},"Process  is similar to process  of , however the vision-based document segmentation is used to expand the query criteria.","Initially, a query is received (act ), analogous to act  of . An initial document retrieval is performed on the document set, and the documents satisfying the query criteria are ranked (act ), analogous to act  of . The vision-based document segmentation process is then performed on the documents retrieved in the initial retrieval (act ), analogous to act  of .","However, rather than performing block retrieval as is done in , the blocks of the content structure obtained from the vision-based document segmentation process, along with the query criteria, are used to perform query expansion (act ). The query expansion can be performed in any of a variety of manners.","In certain embodiments, the query expansion is performed by using the top-ranking blocks for expansion term selection (e.g., the ten blocks having the highest rankings, or the 10% of the blocks having the highest rankings). The blocks are ranked according to how well they satisfy the original query terms (analogous to act  of ). The expansion terms are selected in any of a variety of known manners, however, unlike traditional query expansion, the expansion terms are selected based on the blocks obtained from the vision-based document segmentation process. For example, all of the terms (except for the original query terms) in the blocks obtained from the vision-based document segmentation process are weighted according to the following term selection value TSV:",{"@attributes":{"id":"p-0110","num":"0180"},"maths":{"@attributes":{"id":"MATH-US-00001","num":"00001"},"math":{"@attributes":{"overflow":"scroll"},"mrow":{"mi":"TSV","mo":"=","mrow":{"msup":{"mi":"w","mrow":{"mo":["(",")"],"mn":"1"}},"mo":"\u00d7","mfrac":{"mi":["r","R"]}}}}},"br":{},"sup":"(1) ","b":"442"},"Given these weighted expansion terms, a number of these terms are selected to be used as the expansion terms. Various numbers of these terms can be selected, and in certain embodiments the top ten terms are selected as the expansion terms (that is, the ten terms having the largest term selection values TSV).","A final retrieval is then performed based on the expanded query criteria and the document set, and the documents satisfying the expanded query criteria are ranked (act ). Act  is performed analogous to act , except that the expanded query is used rather than the received criteria. The expanded query includes the original query terms as well as the expansion terms. In certain embodiments, the terms in the expanded query are weighted. The terms can be weighted in a variety of manners to give a preference to the original query terms when determining which documents match the query terms and\/or when ranking the documents. For example, the terms for the expanded query can be weighted as follows. For original terms (those terms received as part of the query in act ), the new weight of the terms is tf\u00d72, where tf represents the term's frequency in the query. For each expansion term, the weight of the term is set as follows:",{"@attributes":{"id":"p-0113","num":"0183"},"maths":{"@attributes":{"id":"MATH-US-00002","num":"00002"},"math":{"@attributes":{"overflow":"scroll"},"mfrac":{"mrow":{"mn":"1","mo":"-","mrow":{"mo":["(",")"],"mrow":{"mi":"n","mo":"-","mn":"1"}}},"mi":"m"}}},"br":{}},"The document rankings obtained from the final retrieval in act  are then returned (act ), analogous to act  of .","Additionally, in certain embodiments the document retrieval discussed above with reference to , , or  may employ a combined document segmentation approach which combines the visual-based document segmentation process discussed above with a fixed length approach. In this combined document segmentation approach, visual blocks are obtained as discussed above (e.g., with reference to ). Given these visual blocks, overlapped windows are used to divide at least some of the blocks into smaller units. The first window begins from the first word of the first visual block and subsequent windows overlap preceding windows by a certain amount (e.g., one-half) until the end of the block. The portions of the visual block corresponding to these windows are output as the final block. For visual blocks that are smaller than the length of the window (the window typically being a fixed value), the visual blocks are output as final blocks without further partition. However, by partitioning larger blocks into smaller blocks that are the size of the window, the variance in lengths of the various blocks is reduced.","Using this combined document segmentation approach, the final blocks output by the combined document segmentation approach are used in place of the visual and\/or virtual blocks of the content structure during the document retrieval process.",{"@attributes":{"id":"p-0117","num":"0187"},"figref":"FIG. 11","b":["500","500","500","500"]},"Computer environment  includes a general-purpose computing device in the form of a computer . Computer  can implement, for example, visual block extractor , visual separator detector , content structure constructor , and\/or document retrieval module  of . The components of computer  can include, but are not limited to, one or more processors or processing units , a system memory , and a system bus  that couples various system components including the processor  to the system memory .","The system bus  represents one or more of any of several types of bus structures, including a memory bus or memory controller, a peripheral bus, an accelerated graphics port, and a processor or local bus using any of a variety of bus architectures. By way of example, such architectures can include an Industry Standard Architecture (ISA) bus, a Micro Channel Architecture (MCA) bus, an Enhanced ISA (EISA) bus, a Video Electronics Standards Association (VESA) local bus, and a Peripheral Component Interconnects (PCI) bus also known as a Mezzanine bus.","Computer  typically includes a variety of computer readable media. Such media can be any available media that is accessible by computer  and includes both volatile and non-volatile media, removable and non-removable media.","The system memory  includes computer readable media in the form of volatile memory, such as random access memory (RAM) , and\/or non-volatile memory, such as read only memory (ROM) . A basic input\/output system (BIOS) , containing the basic routines that help to transfer information between elements within computer , such as during start-up, is stored in ROM . RAM  typically contains data and\/or program modules that are immediately accessible to and\/or presently operated on by the processing unit 504.","Computer  may also include other removable\/non-removable, volatile\/non-volatile computer storage media. By way of example,  illustrates a hard disk drive  for reading from and writing to a non-removable, non-volatile magnetic media (not shown), a magnetic disk drive  for reading from and writing to a removable, non-volatile magnetic disk  (e.g., a \u201cfloppy disk\u201d), and an optical disk drive  for reading from and\/or writing to a removable, non-volatile optical disk  such as a CD-ROM, DVD-ROM, or other optical media. The hard disk drive , magnetic disk drive , and optical disk drive  are each connected to the system bus  by one or more data media interfaces . Alternatively, the hard disk drive , magnetic disk drive , and optical disk drive  can be connected to the system bus  by one or more interfaces (not shown).","The disk drives and their associated computer-readable media provide non-volatile storage of computer readable instructions, data structures, program modules, and other data for computer . Although the example illustrates a hard disk , a removable magnetic disk , and a removable optical disk , it is to be appreciated that other types of computer readable media which can store data that is accessible by a computer, such as magnetic cassettes or other magnetic storage devices, flash memory cards, CD-ROM, digital versatile disks (DVD) or other optical storage, random access memories (RAM), read only memories (ROM), electrically erasable programmable read-only memory (EEPROM), and the like, can also be utilized to implement the example computing system and environment.","Any number of program modules can be stored on the hard disk , magnetic disk , optical disk , ROM , and\/or RAM , including by way of example, an operating system , one or more application programs , other program modules , and program data . Each of such operating system , one or more application programs , other program modules , and program data  (or some combination thereof) may implement all or part of the resident components that support the distributed file system.","A user can enter commands and information into computer  via input devices such as a keyboard  and a pointing device  (e.g., a \u201cmouse\u201d). Other input devices  (not shown specifically) may include a microphone, joystick, game pad, satellite dish, serial port, scanner, and\/or the like. These and other input devices are connected to the processing unit  via input\/output interfaces  that are coupled to the system bus , but may be connected by other interface and bus structures, such as a parallel port, game port, or a universal serial bus (USB).","A monitor  or other type of display device can also be connected to the system bus  via an interface, such as a video adapter . In addition to the monitor , other output peripheral devices can include components such as speakers (not shown) and a printer  which can be connected to computer  via the input\/output interfaces .","Computer  can operate in a networked environment using logical connections to one or more remote computers, such as a remote computing device . By way of example, the remote computing device  can be a personal computer, portable computer, a server, a router, a network computer, a peer device or other common network node, and the like. The remote computing device  is illustrated as a portable computer that can include many or all of the elements and features described herein relative to computer .","Logical connections between computer  and the remote computer  are depicted as a local area network (LAN)  and a general wide area network (WAN) . Such networking environments are commonplace in offices, enterprise-wide computer networks, intranets, and the Internet.","When implemented in a LAN networking environment, the computer  is connected to a local network  via a network interface or adapter . When implemented in a WAN networking environment, the computer  typically includes a modem  or other means for establishing communications over the wide network . The modem , which can be internal or external to computer , can be connected to the system bus  via the input\/output interfaces  or other appropriate mechanisms. It is to be appreciated that the illustrated network connections are examples and that other means of establishing communication link(s) between the computers  and  can be employed.","In a networked environment, such as that illustrated with computing environment , program modules depicted relative to the computer , or portions thereof, may be stored in a remote memory storage device. By way of example, remote application programs  reside on a memory device of remote computer . For purposes of illustration, application programs and other executable program components such as the operating system are illustrated herein as discrete blocks, although it is recognized that such programs and components reside at various times in different storage components of the computing device , and are executed by the data processor(s) of the computer.","Various modules and techniques may be described herein in the general context of computer-executable instructions, such as program modules, executed by one or more computers or other devices. Generally, program modules include routines, programs, objects, components, data structures, etc. that perform particular tasks or implement particular abstract data types. Typically, the functionality of the program modules may be combined or distributed as desired in various embodiments.","An implementation of these modules and techniques may be stored on or transmitted across some form of computer readable media. Computer readable media can be any available media that can be accessed by a computer. By way of example, and not limitation, computer readable media may comprise \u201ccomputer storage media\u201d and \u201ccommunications media.\u201d","\u201cComputer storage media\u201d includes volatile and non-volatile, removable and non-removable media implemented in any method or technology for storage of information such as computer readable instructions, data structures, program modules, or other data. Computer storage media includes, but is not limited to, RAM, ROM, EEPROM, flash memory or other memory technology, CD-ROM, digital versatile disks (DVD) or other optical storage, magnetic cassettes, magnetic tape, magnetic disk storage or other magnetic storage devices, or any other medium which can be used to store the desired information and which can be accessed by a computer.","\u201cCommunication media\u201d typically embodies computer readable instructions, data structures, program modules, or other data in a modulated data signal, such as carrier wave or other transport mechanism. Communication media also includes any information delivery media. The term \u201cmodulated data signal\u201d means a signal that has one or more of its characteristics set or changed in such a manner as to encode information in the signal. By way of example, and not limitation, communication media includes wired media such as a wired network or direct-wired connection, and wireless media such as acoustic, RF, infrared, and other wireless media. Combinations of any of the above are also included within the scope of computer readable media.","Various flowcharts are described herein and illustrated in the accompanying Figures. The ordering of acts in these flowcharts are examples only\u2014these orderings can be changed so that the acts are performed in different orders and\/or concurrently.","Additionally, many specific numeric examples are given herein (e.g., particular threshold values, particular sizes, particular weights, etc.). These specific numeric examples are only examples, and other values can alternatively be used.","Although the description above uses language that is specific to structural features and\/or methodological acts, it is to be understood that the invention defined in the appended claims is not limited to the specific features or acts described. Rather, the specific features and acts are disclosed as exemplary forms of implementing the invention."],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"BRIEF DESCRIPTION OF THE DRAWINGS","p":["The same numbers are used throughout the document to reference like components and\/or features.",{"@attributes":{"id":"p-0010","num":"0009"},"figref":"FIG. 1"},{"@attributes":{"id":"p-0011","num":"0010"},"figref":"FIG. 2"},{"@attributes":{"id":"p-0012","num":"0011"},"figref":"FIG. 3"},{"@attributes":{"id":"p-0013","num":"0012"},"figref":"FIG. 4"},{"@attributes":{"id":"p-0014","num":"0013"},"figref":"FIGS. 5","i":["a","b","c","d","e","f "],"b":["5","5","5","5","5"]},{"@attributes":{"id":"p-0015","num":"0014"},"figref":"FIG. 6"},{"@attributes":{"id":"p-0016","num":"0015"},"figref":"FIG. 7"},{"@attributes":{"id":"p-0017","num":"0016"},"figref":"FIG. 8"},{"@attributes":{"id":"p-0018","num":"0017"},"figref":"FIG. 9"},{"@attributes":{"id":"p-0019","num":"0018"},"figref":"FIG. 10"},{"@attributes":{"id":"p-0020","num":"0019"},"figref":"FIG. 11"}]},"DETDESC":[{},{}]}
