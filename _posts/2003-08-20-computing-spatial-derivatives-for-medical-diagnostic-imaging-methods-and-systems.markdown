---
title: Computing spatial derivatives for medical diagnostic imaging methods and systems
abstract: Spatial derivatives are computed. In one method, gradients are determined from data in an acoustic domain rather than a Cartesian or display coordinate domain. The gradients determined from data in the acoustic domain are then transformed to the Cartesian coordinate or display screen domain. For example, a matrix function representing the spatial relationship between the acoustic domain and the Cartesian coordinate domain transforms the coordinates. As a result, spatial gradients in the Cartesian system are provided where acoustic domain data is being processed. In another method for volume rendering or three-dimensional imaging, a gradient is calculated from data in the display or screen domain. Data from a reconstructed 3D Cartesian coordinate grid or data in an acoustic domain is resampled to ray lines. The ray lines correspond to the display domain as compared to an arbitrary Cartesian coordinate format. The gradients are calculated from the resampled data in the screen domain. When resampling on data in an acoustic domain, gradient computation prior to the resampling may require transformation as discussed above. To avoid the transformation, the gradients are determined after resampling. By calculating the gradients after resampling, interpolation of gradient information as part of the resampling is avoided or minimized. The gradient calculation is then performed using data in the display coordinate space (i.e., screen domain) without requiring further random memory accesses. In yet another method, the number of computation and interpolations for gradient calculation is reduced by performing shading prior to resampling along ray lines to the screen domain. The gradients are calculated and the voxel data in the acoustic or 3D grid Cartesian coordinate formats are altered or weighted as a function of the shading. The shaded data is then resampled to the ray lines. For example, the shading values are computed from data in an acoustic domain and applied to the data in the acoustic domain. The data is then ray cast or interpolated to ray lines without prior scan conversion.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=07037263&OS=07037263&RS=07037263
owner: Siemens Medical Solutions USA, Inc.
number: 07037263
owner_city: Malvern
owner_country: US
publication_date: 20030820
---

{"@attributes":{"id":"description"},"BRFSUM":[{},{}],"heading":["BACKGROUND","BRIEF SUMMARY","DETAILED DESCRIPTION OF THE DRAWINGS AND PRESENTLY PREFERRED EMBODIMENTS"],"p":["The present invention relates to medical imaging using gradient information. In particular, methods and systems for medical diagnostic imaging with computed spatial derivatives are provided. The computed spatial derivatives are used for volume rendering three dimensional images with shading or for other two- or three-dimensional imaging and image processing purposes.","Spatial gradients or derivatives are used in ultrasound imaging for various two- or three-dimensional applications. For example, filtering or motion tracking uses gradient information for two-dimensional ultrasound imaging. The gradients are calculated from scan converted data. Scan converted data is in a regular Cartesian grid for use by a display. Spatial derivatives of scan converted data are easily computed using filters. However, scan converted data may not be available for all applications using gradients, such as where the gradient information is used for processing data in an acoustic domain, such as in a spherical coordinate format associated with scanning. Since the resolution of ultrasound images is angle dependent and depth dependent, processing of scan converted ultrasound data may not be optimal as compared to processing of data in an acoustic domain. Changing the filtering parameters as a function of depth and scan line angle may be expensive or difficult to implement.","Gradients are used for shading representations of a volume. Volume rendering is a technique for visualizing 3D or 4D ultrasonic data on a computer screen. The viewer is assumed to view the data from an arbitrary vantage point. The computer screen is assumed to be between the viewer and the ultrasound data, with the computer screen being orthogonal to the viewing direction. Hypothetical rays are then cast from each pixel on the screen into the data volume. Data is re-sampled at regular intervals along the ray. The weighted sum of all data samples on each ray, after mapping using a suitable transfer function, is painted at each pixel of the screen, generating a volume rendered image of the 3D or 4D volume.","Volume rendering can be made more realistic by using shading. Shading assumes there are one or more light sources in the scene and each data sample on the ray has an associated gradient direction given by a unit vector. In the simplest lighting model, a Lambertian reflectance model is assumed, where the contribution by the light source is A cos \u03b8, where A is the intensity of the light source and \u03b8 is the angle between the direction of the light source and the normal direction at the data sample. The contribution from the light source is combined into the weighted sum described above at each data sample along the ray during volume rendering, resulting in a more realistic-looking image. More complex lighting models also exist, such as Phong Specular Reflection Model, where the contribution from the light source takes the form A cos \u03b8 cos \u03b1, where \u03b1 is the angle between the direction of the viewer and the normal direction at the data sample and n is an integer. Note that the contributions from the light sources do not need to be recomputed when the viewing direction changes in the Lambertian model, in contrast to the Phone Specular Reflection model, where the contributions from the light sources are recomputed.","There are five basic steps to the process of volume rendering:\n\n","In the step of Gradient Computation, spatial gradients along three orthogonal directions are computed at each data sample. A unit vector is then generated by normalizing the spatial gradient vector for each data sample. In the step of Re-sampling, rays are cast from the pixels on the screen as described above and data and\/or the normal vectors are re-sampled. In the step of Classification, the data values and\/or the segmented data values are mapped using transfer functions and opacity functions. In the step of Shading, the contribution from the light sources are combined with the classified data values.","For three-dimensional (3D) imaging, volume rendering with shading uses gradients to modulate the voxel data using a hypothetical light coming from one or more light sources. To perform real time three-dimensional volume rendering with shading, spatial gradients along three dimensions are computed in real time. The three-dimensional gradients are calculated using finite impulse response filters convolved with the ultrasound data and indicate the strength and direction of spatial boundaries. The amount of light from a directional light source reflected to the viewer is determined as a function of these boundaries.","For 3D imaging, ultrasound or other medical imaging data is reconstructed or formatted onto a three-dimensional grid. For example, the three-dimensional grid represents a Cartesian coordinate format in three dimensions. The gradients for each location within the 3D grid are determined along three dimensions. The voxels of the 3D grid and associated gradients along three different dimensions are then resampled (i.e. interpolated) along the ray lines. Since three different gradient values are interpolated for each voxel, effectively four volumes are interpolated to the ray lines. However, interpolation of the gradients is expensive both in terms of computation and data access. When the three-dimensional data set is repetitively updated in real time, such as associated with four-dimensional ultrasound imaging, the directional gradient may be recomputed each time the data set changes. Additionally, each time the viewing direction changes, the gradients may be resampled.","The present invention is defined by the following claims, and nothing in this section should be taken as a limitation on those claims. By way of introduction, the preferred embodiments described below include methods and systems for computing spatial derivatives in medical imaging. In one embodiment, gradients are determined from data in an acoustic domain rather than a Cartesian or display coordinate domain. The gradients determined from data in the acoustic domain are then transformed to the Cartesian coordinate or display screen domain. For example, a matrix function representing the spatial relationship between the acoustic domain and the Cartesian coordinate domain transforms the coordinates. As a result, spatial gradients in the Cartesian format are provided where acoustic domain data is being processed. U.S Pat. No. 6,852,081 (application Ser. No. 10\/388,128), the disclosure of which is incorporated herein by reference, discloses real time volume rendering from data in an acoustic grid. As a result of such volume rendering, scan converted data is unavailable. Any transformed gradients allow shading from data free of scan conversion.","In another embodiment for volume rendering or three-dimensional imaging, a gradient is calculated from data in the display or screen domain. Data from a reconstructed 3D Cartesian coordinate grid or data in an acoustic domain is resampled to ray lines. The ray lines correspond to the display domain as compared to an arbitrary Cartesian coordinate format. The gradients are calculated from the resampled data in the screen domain. When resampling on data in an acoustic domain, gradient computation prior to the resampling may require transformation as discussed above. To avoid the transformation, the gradients are determined after resampling. By calculating the gradients after resampling, interpolation of gradient information as part of the resampling is avoided or minimized. The resampling is performed either before or after segmentation so that the resampling provides voxel information at the display coordinates without interpolation of gradient information. The gradient calculation is then performed using data in the display coordinate space (i.e., screen domain) without requiring further random memory accesses. For example, a pipe line delay or buffer system may be used.","In yet another embodiment, the number of computation and interpolations for gradient calculation is reduced by performing shading prior to resampling along ray lines to the screen domain. The gradients are calculated and the voxel data in the acoustic or 3D grid Cartesian coordinate formats are altered or weighted as a function of the shading. The shaded data is then resampled to the ray lines. For example, the shading values are computed from data in an acoustic domain and combined with the data in the acoustic domain. The data is then ray cast or interpolated to ray lines without prior scan conversion.","In a first aspect, a method for computing spatial derivatives for medical imaging is provided. A spatial gradient vector is determined in an acoustic domain for at least one ultrasound data sample. The spatial gradient vector is transformed to a Cartesian coordinate system.","In a second aspect, an improvement in a method for computing spatial derivatives for medical ultrasound imaging is provided. A spatial gradient vector representing a gradient in a Cartesian coordinate space is calculated from ultrasound data in the acoustic domain. The ultrasound data in the acoustic domain is free of scan conversion.","In a third aspect, a system for computing spatial derivatives from medical ultrasound imaging is provided. A receive beamformer is operable to output ultrasound data in an acoustic domain. A graphics processing unit connects with the receive beamformer. The graphics processor unit is operable to determine a spatial gradient vector in the acoustic domain from the ultrasound data and operable to transform the spatial gradient vector to a Cartesian coordinate system.","In a fourth aspect, a method for computing spatial derivatives for medical ultrasound imaging is provided. Ultrasound data in an acoustic domain is resampled to ray lines representing a viewing angle through a volume. Gradient information is determined from the resampled ultrasound data.","In a fifth aspect, a method for computing spatial derivatives for medical ultrasound imaging is provided. Ultrasound data representing a three-dimensional volume is shaded. The shaded ultrasound data is resampled to ray lines representing a viewing angle through a volume.","Further aspects and advantages of the invention are described below in conjunction with the preferred embodiments.","Various embodiments are provided for shading data for volume rendering and\/or determining gradients. In one embodiment, gradients are computed in the acoustic domain and transformed into gradients in a Cartesian coordinate system. This step only changes the gradient values. The locations of the gradient samples are not altered. The new gradient values are still in the acoustic sample locations. The transformed gradients are used for either two or three dimensional imaging. In another embodiment, the gradients are computed from data resampled to ray-lines or the screen domain for volume rendering. In yet another embodiment, the data is shaded using gradient information prior to resampling to ray-lines or the screen domain for volume rendering.  provides a system for implementing one, two or all of these different embodiments. The different embodiments are then discussed separately.",{"@attributes":{"id":"p-0028","num":"0032"},"figref":"FIG. 1","b":["10","10","10","12","14","16","18","20","22","24","10","14","20","22"]},"The transducer  comprises a 1, 1.25, 1.5, 1.75, or two-dimensional array of elements. The array of elements is configured as linear, curvilinear, sector, Vector\u00ae, or other imaging configurations. In one embodiment, the transducer  is configured to allow electrical steering on the transmit- and receive-beams in two dimensions, such as steering along an azimuthal axis and an elevation axis. For example, one or two rows of elements are configured for steering in the azimuthal direction electronically in response to delays and apodization and in the elevation direction in response to frequency, such as disclosed in U.S. Pat. Nos. 6,043,589; 5,678,554; and 6,057,632, the disclosures of which are incorporated herein by reference. Variations in the thickness of the transducer along the range dimension as a function of elevation allow for frequency based steering in elevation. As another example, a one-dimensional or multi-dimensional array is mechanically wobbled or steered in the elevation dimension, such as disclosed in U.S. Pat. Nos. 4,151,834 and 4,399,822, the disclosures of which are incorporated herein by reference. In other embodiments, the transducer  comprises a multi-dimensional array for steering in the elevation and azimuthal dimensions in response to relative delays and apodization. Alternatively, the transducer  comprises a linear array or multi-dimensional array for electronically steering in the azimuthal dimension and for orienting in the elevation dimension in response to user movement of the transducer . As yet another alternative, a transducer that is rotatable around a range axis allows scanning a volume. Other transducers now known or later developed for steering in an elevation and azimuthal dimensions may be used, such as a one-dimensional array used for two-dimensional imaging.","The beamformer  comprises a transmit and a receive beamformer, such as waveform generators, waveform memories, delays, amplifiers, counters, transistors, switches, filters, summers, or other devices for transmitting and receiving along scan lines. The beamformer  controls delays, apodization, frequency or other electrical characteristic and\/or controls a mechanical positioning or sensing of the position of the transducer  for electrically and\/or mechanically focusing the array of elements of the transducer  along one or more scan lines. The beamformer  connects with the transducer  for generating acoustic beams along an acoustic grid corresponding to the scan lines. The data output by the beamformer  is in an acoustic domain (i.e., the acquisition domain). For example, a polar coordinate format is used in a two-dimensional plane or a spherical format is used in a three-dimensional volume to acquire signals representing range samples along scan lines within the plane or volume. The scan lines are at an angle to the transducer  in the azimuth dimension and a same or different angle in the elevation dimension.","The acoustic data is collected by rocking, rotating, or sliding the transducer  with mechanical movement or using electronic beam steering. In a spherical coordinate format acoustic grid, the scan lines are at a same or different angles in one or both of the azimuth and elevation dimensions, emanate from a same or different points along the face of the transducer dimensions) and are sampled along a range dimension. All scan lines may meet at a single point called an apex. In alternative embodiments, a cylindrical grid or other coordinate system is used. The scan lines are parallel, such as associated with linear imaging or diverging, such as associated with sector or Vector\u00ae scanning. The acoustic grid comprises a sample pattern defined by the various scan lines and sampling along the scan lines. The sampling of acoustic information is in a Cartesian grid, polar grid, hexagon grid, cylindrical grid or other grid system. Where the sampling is along a Cartesian grid, such as using a linear array, the sampling is likely with a different resolution than the display Cartesian grid. As a result, scan conversion is typically performed on such data, but may be minimized or eliminated using the processes described herein.","The detector  comprises a B-mode, Doppler, flow or other detector for identifying intensity, energy, velocity or other information from the beamformed signals.","The optional scan converter  comprises a processor, application specific integrated circuit, digital circuitry, multiplexer, latches, shifters, digital circuitry, analog circuitry or combinations thereof for converting from the acoustic grid to a Cartesian coordinate grid, such as associated with a display. Where the three-dimensional representation is rendered or other processes performed from data free of formatting along a Cartesian coordinate grid, the scan converter  is skipped, not provided, or turned off. In embodiments where some data is formatted in a Cartesian coordinate system, the scan converter  converts some data from the acoustic grid to the Cartesian coordinate grid.","The memory  comprises a video random access memory, a random access memory, a removable media (e.g. diskette, compact disc or digital video disc) or other memory device for storing data or video information. In one embodiment, the memory  comprises a video random access memory of a graphics processing unit or accelerator card. In alternative embodiments, the memory  is separate from the graphics processing unit , such as a cache memory of a processor, the system memory or other memory. The memory  is operable to store ultrasound data formatted in an acoustic grid or at least in part an acoustic grid, such as data in both a Cartesian coordinate grid and acoustic grid.","The graphics processing unit, GPU , comprises one or more of a graphics accelerator chip, general processor, applications specific integrated circuit, circuit, card or combinations thereof. In one embodiment, the GPU  comprises a personal computer graphics accelerator card or components, such as manufactured by nVidia (e.g. FX3000 or others), ATI (e.g., Radien 9800 or others), or Matrox (Parhelia or others). The GPU  provides hardware devices (e.g. a programmable vertex processor, a primitive assembly processor, a rasterization and interpolation processor, a programmable fragment processor and a frame buffer) for accelerating volume rendering, imaging or other processes, such as using application programming interfaces (API) for three-dimensional volume rendering with shading or for image enhancement of two-dimensional images using gradient information. Example APIs include OpenGL and DirectX, but other APIs may be used independent of or with the GPU . The GPU  connects with the receive beamformer, such as directly connecting to the receive beamformer or connecting through one or more other components (e.g., detector ).","In alternative embodiments, the GPU  is used for calculating gradients used for two-dimensional imaging with scan conversion after the GPU . The GPU  or another processor or filter enhances the two-dimensional imaging as a function of the gradient information. For example, the GPU  outputs gradients to a processor that performs adaptive filtering to enhance contrast while reducing speckle using gradient information.","The GPU  is operable to determining a spatial gradient vector in the acoustic domain from the ultrasound data and operable to transform the spatial gradient vector to a Cartesian coordinate system. Alternatively or additionally, the GPU  is operable to resample ultrasound data to ray-lines or a display screen domain prior to determining gradients and shading the ultrasound data for volume rendering. In another alternative or additional embodiment, the GPU  is operable to shade ultrasound data prior to resampling to ray-lines and then compositing the shaded, resampled data.","The GPU  is operable to volume render the ultrasound data, such as volume rendering from ultrasound data free of conversion to a Cartesian coordinate format. The GPU  is operable to texture map with alpha blending or other volume rendering of the ultrasound data based on a spatial relationship of an intersection of a plane or a curved surface perpendicular to the viewing direction with an acoustic grid or data space.","The GPU  and\/or the memory  are included within the system as part of a single ultrasound system component, such as an ultrasound system on a cart in a same housing. In alternative embodiments, the GPU  and memory  are provided separate from an ultrasound data acquisition system, such as provided in a workstation or personal computer. The ultrasound data at least in part in the acoustic grid is transferred wirelessly, over a computer network or through a transferable storage medium to the GPU .","The display  comprises a CRT, LCD, flat panel, plasma screen, video projector or other device for displaying a two-dimensional representation of a three-dimensional volume. For example, the display  comprises a color display capable of 512\u00d7512 of pixels area, but greater or lesser resolutions may be provided. Monochrome displays are used in alternative embodiments.","Using a user interface of the system  in conjunction with the GPU  and the display , the user views renderings of the ultrasound data from various viewing angles to perceive a three-dimensional view from the two-dimensional display. Each representation is associated with a different viewing angle. Using a same set of acoustic data or a continuing stream of acoustic data, multiple two-dimensional representations of the three-dimensional volume are provided.","In one embodiment, the GPU  is operable to generate images of at least 512\u00d7512 pixels at 25 times or more a second for real time imaging. By continuous scanning by the beamformer  or continuous input of data, the GPU  generates two-dimensional representations from any of various angles of a scanned volume showing changes within the scanned volume seemingly as they occur. Frame rates of 25 frames or more a second are generally associated with real-time scanning. By using the hardware acceleration of the GPU , more rapid volume rendering is provided for real time imaging. In one embodiment, a volume associated with 256\u00d7256\u00d7128 samples of 8 bit data are provided at 25 volumes per second rendering 512\u00d7512 pixels images also at about 25 images a second. Preferably, the two-dimensional representations have minimal artifacts, such as little or barely noticeable Moir\u00e9 patterns or stair stepping patterns from under-sampling. In alternative embodiments, the GPU  processes data for two-dimensional imaging.","For 3D imaging, the gradients are used to determine shading values. For example, if a Phong Specular Reflection model is used, a light intensity value is weighted by an angular relationship of a viewing angle, the surface being shaded and the location of a light source. The weight is the cosine of the angle of a normal to the surface being shaded to the viewing angle and\/or angle of the light source. Other lighting models, such as Lambertian model, may also be used. In this case, the contribution from shading only depends on the surface being shaded and the direction of the light source. To determine the normal, the gradient or direction of the surface is calculated. For 2D imaging, the gradients are used for filtering, motion tracking or any other processed. The gradient information is determined by the programmable fragment processor of the GPU , but other processors may be used.","Various embodiments are provided for determining gradients and\/or shading data for volume rendering. In one embodiment, gradients are computed in the acoustic domain and transformed into gradients for a Cartesian coordinate system. The transformed gradient samples are still located in the acoustic grid. The transformed gradients are used for either filtering or volume rendering. In another embodiment, the gradients are computed from data resampled to ray-lines of the screen domain for volume rendering. In yet another embodiment, the data is shaded using gradient information prior to resampling to ray-lines of the screen domain for volume rendering.","Gradients Computed from the Acoustic Domain","Gradients are computed from data in the acoustic domain. Two-dimensional adaptive filtering processes may be more easily implemented for filtering data in the acoustic domain using the gradients computed in the acoustic domain. Where the filters use gradient information, gradient information calculated from data in the acoustic domain allows easier implementation of the filters. By filtering data in the acoustic domain, variation of the filter parameters as a function of depth and angle may be avoided. To account for the eventual scan conversion, the gradient information calculated from the data in the acoustic domain is transformed to represent gradients in the Cartesian or scan converted grid even though applied to filters filtering in the acoustic domain. The transform converts the value of the gradient, but not necessarily to represent location change of the gradient (i.e., the transform is not be a mere scan conversion).","For three-dimensional imaging systems that avoid scan conversion, scan converted information is not available for calculating gradients. U.S. Pat. No. 6,852,081 (application Ser. No. 10\/388,128) discloses a graphics accelerator capable of receiving acoustic data and volume rendering in real time. Since 3D imaging is performed without scan converted ultrasound data, any spatial gradients are calculated in the acoustic domain, such as by the programmable fragment shader of the graphics accelerator or GPU . Since the spatial gradient can be calculated from data in the acoustic domain and transformed to a gradient representing a boundary in the Cartesian coordinate or display domain, shading may be provided in real time three-dimensional imaging.",{"@attributes":{"id":"p-0047","num":"0051"},"figref":["FIG. 2","FIG. 2"]},{"@attributes":{"id":"p-0048","num":"0052"},"maths":{"@attributes":{"id":"MATH-US-00001","num":"00001"},"math":{"@attributes":{"overflow":"scroll"},"mrow":{"mfrac":[{"mrow":[{"mo":"\u2202","mi":"I"},{"mo":"\u2202","mi":"x"}]},{"mrow":[{"mo":"\u2202","mi":"I"},{"mo":"\u2202","mi":"y"}]}],"mo":[",",",",","],"mrow":{"mi":"and","mo":["\u2062","\u2062"],"mstyle":{"mspace":{"@attributes":{"width":"0.8em","height":"0.8ex"}}},"mfrac":{"mrow":[{"mo":"\u2202","mi":"I"},{"mo":"\u2202","mi":"z"}]}}}}},"br":{}},{"@attributes":{"id":"p-0049","num":"0053"},"maths":{"@attributes":{"id":"MATH-US-00002","num":"00002"},"math":{"@attributes":{"overflow":"scroll"},"mrow":{"mfrac":[{"mrow":[{"mo":"\u2202","mi":"A"},{"mo":"\u2202","mi":"s"}]},{"mrow":[{"mo":"\u2202","mi":"A"},{"mo":"\u2202","mi":"t"}]}],"mo":[",",","],"mrow":{"mi":"and","mo":["\u2062","\u2062"],"mstyle":{"mspace":{"@attributes":{"width":"0.8em","height":"0.8ex"}}},"mrow":{"mfrac":{"mrow":[{"mo":"\u2202","mi":"A"},{"mo":"\u2202","mi":"r"}]},"mo":"."}}}}}},"Act  of  represents determining the spatial gradient vector in the acoustic domain for at least one ultrasound data sample. A derivative of ultrasound data associated with each data sample is calculated. The derivative is along one of the curvilinear orthogonal coordinate axes, such as the elevation angle, azimuth angle and range. As represented above, a derivative is calculated for each of the axes. In alternative embodiments, derivatives are calculated on only one or two axes. As yet another alternative, the derivatives are calculated for the range and azimuth angle axes for applications in two-dimensional imaging. While a first derivative is used, a second derivative along the same axis may be calculated for one or more of the axes.","In act  of , the spatial gradient vector or vectors calculated from data in the acoustic domain is transformed to a Cartesian coordinate system. The spatial gradient vector or vectors in the acoustic domain are weighted as a function of the relationship of the acoustic grid to the Cartesian coordinate system.",{"@attributes":{"id":"p-0052","num":"0056"},"figref":"FIG. 3","br":[{},{},{}],"in-line-formulae":[{},{},{},{},{},{}],"i":["x=x","s, t, r","y=y","s, t, r","z=z","s, t, r"]},"Using the spherical coordinate system represented in , the parametization is provided as represented by:\n\ncos \u03b8 sin \u03b1\n\nsin \u03b8 and\n\ncos \u03b8 cos \u03b1.\n","A matrix multiplication or convolution is used in one embodiment to calculate spatial derivatives in the Cartesian coordinate system as a function of spatial gradient vectors in the acoustic domain. For two-dimensional imaging, at least two spatial derivatives are converted, and for three-dimensional imaging, three spatial derivatives are converted. The matrix represents spatial differences between the acoustic domain format and the Cartesian coordinate system. For example, the spatial gradients in the Cartesian coordinate system, \u2207I, are equal to a matrix, M, multiplied with the spatial derivatives in the acoustic domain, \u2207A. This matrix multiplication is represented by:",{"@attributes":{"id":"p-0055","num":"0059"},"maths":{"@attributes":{"id":"MATH-US-00003","num":"00003"},"math":{"@attributes":{"overflow":"scroll"},"mtable":{"mtr":{"mtd":[{"mrow":{"mrow":{"mrow":[{"mo":["[","]"],"mtable":{"mtr":[{"mtd":{"mfrac":{"mrow":[{"mo":"\u2202","mi":"I"},{"mo":"\u2202","mi":"x"}]}}},{"mtd":{"mfrac":{"mrow":[{"mo":"\u2202","mi":"I"},{"mo":"\u2202","mi":"y"}]}}},{"mtd":{"mfrac":{"mrow":[{"mo":"\u2202","mi":"I"},{"mo":"\u2202","mi":"z"}]}}}]}},{"mrow":[{"mo":["[","]"],"mtable":{"mtr":[{"mtd":[{"mrow":{"mfrac":[{"mn":"1","msub":{"mi":["h","s"]}},{"mrow":[{"mo":"\u2202","mi":"x"},{"mo":"\u2202","mi":"s"}]}],"mo":"\u2062"}},{"mrow":{"mfrac":[{"mn":"1","msub":{"mi":["h","t"]}},{"mrow":[{"mo":"\u2202","mi":"x"},{"mo":"\u2202","mi":"t"}]}],"mo":"\u2062"}},{"mrow":{"mfrac":[{"mn":"1","msub":{"mi":["h","r"]}},{"mrow":[{"mo":"\u2202","mi":"x"},{"mo":"\u2202","mi":"r"}]}],"mo":"\u2062"}}]},{"mtd":[{"mrow":{"mfrac":[{"mn":"1","msub":{"mi":["h","s"]}},{"mrow":[{"mo":"\u2202","mi":"y"},{"mo":"\u2202","mi":"s"}]}],"mo":"\u2062"}},{"mrow":{"mfrac":[{"mn":"1","msub":{"mi":["h","t"]}},{"mrow":[{"mo":"\u2202","mi":"y"},{"mo":"\u2202","mi":"t"}]}],"mo":"\u2062"}},{"mrow":{"mfrac":[{"mn":"1","msub":{"mi":["h","r"]}},{"mrow":[{"mo":"\u2202","mi":"y"},{"mo":"\u2202","mi":"r"}]}],"mo":"\u2062"}}]},{"mtd":[{"mrow":{"mfrac":[{"mn":"1","msub":{"mi":["h","s"]}},{"mrow":[{"mo":"\u2202","mi":"z"},{"mo":"\u2202","mi":"s"}]}],"mo":"\u2062"}},{"mrow":{"mfrac":[{"mn":"1","msub":{"mi":["h","t"]}},{"mrow":[{"mo":"\u2202","mi":"z"},{"mo":"\u2202","mi":"t"}]}],"mo":"\u2062"}},{"mrow":{"mfrac":[{"mn":"1","msub":{"mi":["h","r"]}},{"mrow":[{"mo":"\u2202","mi":"z"},{"mo":"\u2202","mi":"r"}]}],"mo":"\u2062"}}]}]}},{"mo":["[","]"],"mtable":{"mtr":[{"mtd":{"mrow":{"mfrac":[{"mn":"1","msub":{"mi":["h","s"]}},{"mrow":[{"mo":"\u2202","mi":"A"},{"mo":"\u2202","mi":"s"}]}],"mo":"\u2062"}}},{"mtd":{"mrow":{"mfrac":[{"mn":"1","msub":{"mi":["h","t"]}},{"mrow":[{"mo":"\u2202","mi":"A"},{"mo":"\u2202","mi":"s"}]}],"mo":"\u2062"}}},{"mtd":{"mrow":{"mfrac":[{"mn":"1","msub":{"mi":["h","r"]}},{"mrow":[{"mo":"\u2202","mi":"A"},{"mo":"\u2202","mi":"r"}]}],"mo":"\u2062"}}}]}}],"mo":"\u2061"}],"mo":"="},"mo":","}},{"mrow":{"mrow":{"mi":"EQ","mo":["\u2062","\u2062"],"mstyle":{"mspace":{"@attributes":{"width":"0.6em","height":"0.6ex"}}},"mn":"1"},"mo":","}}]}}}},"br":{},"sub":["s","t ","r "]},{"@attributes":{"id":"p-0056","num":"0060"},"maths":[{"@attributes":{"id":"MATH-US-00004","num":"00004"},"math":{"@attributes":{"overflow":"scroll"},"mrow":{"mrow":[{"msub":{"mi":["h","s"]},"mo":"=","mrow":{"mo":["\uf603","\uf604"],"mfrac":{"mrow":[{"mo":"\u2202","mi":"P"},{"mo":"\u2202","mi":"s"}]}}},{"msub":{"mi":["h","t"]},"mo":"=","mrow":{"mrow":{"mo":["\uf603","\uf604"],"mfrac":{"mrow":[{"mo":"\u2202","mi":"P"},{"mo":"\u2202","mi":"t"}]}},"mo":["\u2062","\u2062"],"mstyle":{"mspace":{"@attributes":{"width":"0.8em","height":"0.8ex"}}},"mi":"and"}}],"mo":[",","\u2062"],"mstyle":{"mtext":{}}}}},{"@attributes":{"id":"MATH-US-00004-2","num":"00004.2"},"math":{"@attributes":{"overflow":"scroll"},"mrow":{"mrow":{"msub":{"mi":["h","r"]},"mo":"=","mrow":{"mo":["\uf603","\uf604"],"mfrac":{"mrow":[{"mo":"\u2202","mi":"P"},{"mo":"\u2202","mi":"r"}]}}},"mo":","}}}],"br":{}},{"@attributes":{"id":"p-0057","num":"0061"},"maths":{"@attributes":{"id":"MATH-US-00005","num":"00005"},"math":{"@attributes":{"overflow":"scroll"},"mrow":{"mi":"P","mo":"=","mrow":{"mo":["[","]"],"mtable":{"mtr":[{"mtd":{"mi":"x"}},{"mtd":{"mi":"y"}},{"mtd":{"mi":"z"}}]}}}}},"br":[{},{},{}],"in-line-formulae":[{},{}]},{"@attributes":{"id":"p-0058","num":"0062"},"maths":{"@attributes":{"id":"MATH-US-00006","num":"00006"},"math":{"@attributes":{"overflow":"scroll"},"mtable":{"mtr":{"mtd":[{"mrow":{"mrow":[{"mrow":[{"mo":"\u2207","mi":"I"},{"mo":["[","]"],"mtable":{"mtr":[{"mtd":{"mfrac":{"mrow":[{"mo":"\u2202","mi":"I"},{"mo":"\u2202","mi":"x"}]}}},{"mtd":{"mfrac":{"mrow":[{"mo":"\u2202","mi":"I"},{"mo":"\u2202","mi":"y"}]}}},{"mtd":{"mfrac":{"mrow":[{"mo":"\u2202","mi":"I"},{"mo":"\u2202","mi":"z"}]}}}]}}],"mo":"="},{"mi":"M","mo":"=","mrow":{"mrow":[{"mrow":[{"mo":["[","]"],"mtable":{"mtr":[{"mtd":[{"mrow":{"mfrac":[{"mn":"1","msub":{"mi":["h","s"]}},{"mrow":[{"mo":"\u2202","mi":"x"},{"mo":"\u2202","mi":"s"}]}],"mo":"\u2062"}},{"mrow":{"mfrac":[{"mn":"1","msub":{"mi":["h","t"]}},{"mrow":[{"mo":"\u2202","mi":"x"},{"mo":"\u2202","mi":"t"}]}],"mo":"\u2062"}},{"mrow":{"mfrac":[{"mn":"1","msub":{"mi":["h","r"]}},{"mrow":[{"mo":"\u2202","mi":"x"},{"mo":"\u2202","mi":"r"}]}],"mo":"\u2062"}}]},{"mtd":[{"mrow":{"mfrac":[{"mn":"1","msub":{"mi":["h","s"]}},{"mrow":[{"mo":"\u2202","mi":"y"},{"mo":"\u2202","mi":"s"}]}],"mo":"\u2062"}},{"mrow":{"mfrac":[{"mn":"1","msub":{"mi":["h","t"]}},{"mrow":[{"mo":"\u2202","mi":"y"},{"mo":"\u2202","mi":"t"}]}],"mo":"\u2062"}},{"mrow":{"mfrac":[{"mn":"1","msub":{"mi":["h","r"]}},{"mrow":[{"mo":"\u2202","mi":"y"},{"mo":"\u2202","mi":"r"}]}],"mo":"\u2062"}}]},{"mtd":[{"mrow":{"mfrac":[{"mn":"1","msub":{"mi":["h","s"]}},{"mrow":[{"mo":"\u2202","mi":"z"},{"mo":"\u2202","mi":"s"}]}],"mo":"\u2062"}},{"mrow":{"mfrac":[{"mn":"1","msub":{"mi":["h","t"]}},{"mrow":[{"mo":"\u2202","mi":"z"},{"mo":"\u2202","mi":"t"}]}],"mo":"\u2062"}},{"mrow":{"mfrac":[{"mn":"1","msub":{"mi":["h","r"]}},{"mrow":[{"mo":"\u2202","mi":"z"},{"mo":"\u2202","mi":"r"}]}],"mo":"\u2062"}}]}]}},{"mo":"\u2207","mi":"A"}],"mo":["\u2062","\u2062","\u2062","\u2062"],"mstyle":[{"mspace":{"@attributes":{"width":"0.8em","height":"0.8ex"}}},{"mspace":{"@attributes":{"width":"0.8em","height":"0.8ex"}}}],"mi":"and"},{"mo":["[","]"],"mtable":{"mtr":[{"mtd":{"mrow":{"mfrac":[{"mn":"1","msub":{"mi":["h","s"]}},{"mrow":[{"mo":"\u2202","mi":"A"},{"mo":"\u2202","mi":"s"}]}],"mo":"\u2062"}}},{"mtd":{"mrow":{"mfrac":[{"mn":"1","msub":{"mi":["h","t"]}},{"mrow":[{"mo":"\u2202","mi":"A"},{"mo":"\u2202","mi":"t"}]}],"mo":"\u2062"}}},{"mtd":{"mrow":{"mfrac":[{"mn":"1","msub":{"mi":["h","r"]}},{"mrow":[{"mo":"\u2202","mi":"A"},{"mo":"\u2202","mi":"r"}]}],"mo":"\u2062"}}}]}}],"mo":"="}}],"mo":","}},{"mrow":{"mi":"EQ","mo":[".","\u2062"],"mstyle":{"mspace":{"@attributes":{"width":"0.8em","height":"0.8ex"}}},"mn":"2"}}]}}}},"br":[{},{},{},{},{}],"figref":"FIG. 3","in-line-formulae":[{},{},{},{},{},{}],"i":["h","=r "],"sub":["\u03b1","\u03b8","r"]},{"@attributes":{"id":"p-0059","num":"0063"},"maths":{"@attributes":{"id":"MATH-US-00007","num":"00007"},"math":{"@attributes":{"overflow":"scroll"},"mtable":{"mtr":[{"mtd":[{"mrow":{"mi":"M","mo":"=","mrow":{"mo":["[","]"],"mtable":{"mtr":[{"mtd":[{"mrow":{"mi":["cos","\u03b1"],"mo":["\u2062","\u2062"],"mstyle":{"mspace":{"@attributes":{"width":"0.3em","height":"0.3ex"}}}}},{"mrow":{"mrow":{"mo":"-","mi":"sin"},"mo":["\u2062","\u2062","\u2062","\u2062","\u2062","\u2062"],"mstyle":[{"mspace":{"@attributes":{"width":"0.3em","height":"0.3ex"}}},{"mspace":{"@attributes":{"width":"0.3em","height":"0.3ex"}}},{"mspace":{"@attributes":{"width":"0.3em","height":"0.3ex"}}}],"mi":["\u03b8","sin","\u03b1"]}},{"mrow":{"mi":["cos","\u03b8","sin","\u03b1"],"mo":["\u2062","\u2062","\u2062","\u2062","\u2062","\u2062"],"mstyle":[{"mspace":{"@attributes":{"width":"0.3em","height":"0.3ex"}}},{"mspace":{"@attributes":{"width":"0.3em","height":"0.3ex"}}},{"mspace":{"@attributes":{"width":"0.3em","height":"0.3ex"}}}]}}]},{"mtd":[{"mn":"0"},{"mrow":{"mi":["cos","\u03b8"],"mo":["\u2062","\u2062"],"mstyle":{"mspace":{"@attributes":{"width":"0.3em","height":"0.3ex"}}}}},{"mrow":{"mi":["sin","\u03b8"],"mo":["\u2062","\u2062"],"mstyle":{"mspace":{"@attributes":{"width":"0.3em","height":"0.3ex"}}}}}]},{"mtd":[{"mrow":{"mrow":{"mo":"-","mi":"sin"},"mo":["\u2062","\u2062"],"mstyle":{"mspace":{"@attributes":{"width":"0.3em","height":"0.3ex"}}},"mi":"\u03b1"}},{"mrow":{"mrow":{"mo":"-","mi":"sin"},"mo":["\u2062","\u2062","\u2062","\u2062","\u2062","\u2062"],"mstyle":[{"mspace":{"@attributes":{"width":"0.3em","height":"0.3ex"}}},{"mspace":{"@attributes":{"width":"0.3em","height":"0.3ex"}}},{"mspace":{"@attributes":{"width":"0.3em","height":"0.3ex"}}}],"mi":["\u03b8","cos","\u03b1"]}},{"mrow":{"mi":["cos","\u03b8","cos","\u03b1"],"mo":["\u2062","\u2062","\u2062","\u2062","\u2062","\u2062"],"mstyle":[{"mspace":{"@attributes":{"width":"0.3em","height":"0.3ex"}}},{"mspace":{"@attributes":{"width":"0.3em","height":"0.3ex"}}},{"mspace":{"@attributes":{"width":"0.3em","height":"0.3ex"}}}]}}]}]}}}},{"mrow":{"mi":"EQ","mo":["\u2062","\u2062"],"mstyle":{"mspace":{"@attributes":{"width":"0.8em","height":"0.8ex"}}},"mn":"3"}}]},{"mtd":[{"mrow":{"mrow":[{"mo":"\u2207","mi":"A"},{"mrow":{"mo":["[","]"],"mtable":{"mtr":[{"mtd":{"mrow":{"mfrac":[{"mn":"1","mrow":{"mi":["r","cos","\u03b8"],"mo":["\u2062","\u2062","\u2062","\u2062"],"mstyle":[{"mspace":{"@attributes":{"width":"0.3em","height":"0.3ex"}}},{"mspace":{"@attributes":{"width":"0.3em","height":"0.3ex"}}}]}},{"mrow":[{"mo":"\u2202","mi":"A"},{"mo":"\u2202","mi":"s"}]}],"mo":"\u2062"}}},{"mtd":{"mrow":{"mfrac":[{"mn":"1","mi":"r"},{"mrow":[{"mo":"\u2202","mi":"A"},{"mo":"\u2202","mi":"t"}]}],"mo":"\u2062"}}},{"mtd":{"mfrac":{"mrow":[{"mo":"\u2202","mi":"A"},{"mo":"\u2202","mi":"r"}]}}}]}},"mo":"."}],"mo":"="}},{"mrow":{"mi":"EQ","mo":["\u2062","\u2062"],"mrow":{"mstyle":[{"mspace":{"@attributes":{"width":"0.6em","height":"0.6ex"}}},{"mspace":{"@attributes":{"width":"0.3em","height":"0.3ex"}}}],"mo":"\u2062"},"mn":"4"}}]}]}}}},"The matrix M is computed for each pixel or voxel location. In one embodiment, the scale factors h, hand hare precomputed and stored in a memory or a lookup table. Alternatively, the scale or factors are computed in real time with the matrix calculations.","In one embodiment, one or both of the calculation of derivatives in the acoustic domain and the transformation of the derivatives to the Cartesian coordinate system are performed with a programmable fragment processor of a graphics processing unit . The matrix M is computed for each pixel or voxel location as a fragment process. Using appropriate filters, such as forward-difference, backward-difference, central-difference and their weighted counterparts, the fragment processor computes the vector \u2207A from the data in the acoustic domain. Given current fragment processor capabilities, the matrix transformation may be reformulated as shown:",{"@attributes":{"id":"p-0062","num":"0066"},"maths":{"@attributes":{"id":"MATH-US-00008","num":"00008"},"math":{"@attributes":{"overflow":"scroll"},"mtable":{"mtr":{"mtd":[{"mrow":{"mrow":{"mrow":[{"mo":["[","]"],"mtable":{"mtr":[{"mtd":{"mfrac":{"mrow":[{"mo":"\u2202","mi":"I"},{"mo":"\u2202","mi":"x"}]}}},{"mtd":{"mfrac":{"mrow":[{"mo":"\u2202","mi":"I"},{"mo":"\u2202","mi":"y"}]}}},{"mtd":{"mfrac":{"mrow":[{"mo":"\u2202","mi":"I"},{"mo":"\u2202","mi":"z"}]}}}]}},{"mrow":[{"mo":["[","]"],"mtable":{"mtr":[{"mtd":[{"mrow":{"mfrac":[{"mn":"1","msubsup":{"mi":["h","s"],"mn":"2"}},{"mrow":[{"mo":"\u2202","mi":"x"},{"mo":"\u2202","mi":"s"}]}],"mo":"\u2062"}},{"mrow":{"mfrac":[{"mn":"1","msubsup":{"mi":["h","t"],"mn":"2"}},{"mrow":[{"mo":"\u2202","mi":"x"},{"mo":"\u2202","mi":"t"}]}],"mo":"\u2062"}},{"mrow":{"mfrac":[{"mn":"1","msubsup":{"mi":["h","r"],"mn":"2"}},{"mrow":[{"mo":"\u2202","mi":"x"},{"mo":"\u2202","mi":"r"}]}],"mo":"\u2062"}}]},{"mtd":[{"mrow":{"mfrac":[{"mn":"1","msubsup":{"mi":["h","s"],"mn":"2"}},{"mrow":[{"mo":"\u2202","mi":"y"},{"mo":"\u2202","mi":"s"}]}],"mo":"\u2062"}},{"mrow":{"mfrac":[{"mn":"1","msubsup":{"mi":["h","t"],"mn":"2"}},{"mrow":[{"mo":"\u2202","mi":"y"},{"mo":"\u2202","mi":"t"}]}],"mo":"\u2062"}},{"mrow":{"mfrac":[{"mn":"1","msubsup":{"mi":["h","r"],"mn":"2"}},{"mrow":[{"mo":"\u2202","mi":"y"},{"mo":"\u2202","mi":"r"}]}],"mo":"\u2062"}}]},{"mtd":[{"mrow":{"mfrac":[{"mn":"1","msubsup":{"mi":["h","s"],"mn":"2"}},{"mrow":[{"mo":"\u2202","mi":"z"},{"mo":"\u2202","mi":"s"}]}],"mo":"\u2062"}},{"mrow":{"mfrac":[{"mn":"1","msubsup":{"mi":["h","t"],"mn":"2"}},{"mrow":[{"mo":"\u2202","mi":"z"},{"mo":"\u2202","mi":"t"}]}],"mo":"\u2062"}},{"mrow":{"mfrac":[{"mn":"1","msubsup":{"mi":["h","r"],"mn":"2"}},{"mrow":[{"mo":"\u2202","mi":"z"},{"mo":"\u2202","mi":"r"}]}],"mo":"\u2062"}}]}]}},{"mo":["[","]"],"mtable":{"mtr":[{"mtd":{"mfrac":{"mrow":[{"mo":"\u2202","mi":"A"},{"mo":"\u2202","mi":"s"}]}}},{"mtd":{"mfrac":{"mrow":[{"mo":"\u2202","mi":"A"},{"mo":"\u2202","mi":"t"}]}}},{"mtd":{"mfrac":{"mrow":[{"mo":"\u2202","mi":"A"},{"mo":"\u2202","mi":"r"}]}}}]}}],"mo":"\u2061"}],"mo":"="},"mo":","}},{"mrow":{"mi":"EQ","mo":["\u2062","\u2062"],"mstyle":{"mspace":{"@attributes":{"width":"1.1em","height":"1.1ex"}}},"mn":"5"}}]}}}},"br":{}},{"@attributes":{"id":"p-0063","num":"0067"},"maths":{"@attributes":{"id":"MATH-US-00009","num":"00009"},"math":{"@attributes":{"overflow":"scroll"},"mtable":{"mtr":{"mtd":[{"mrow":{"mrow":{"mover":{"mi":["M","\u0311"]},"mo":"=","mrow":{"mo":["[","]"],"mtable":{"mtr":[{"mtd":[{"mfrac":{"mrow":[{"mi":["cos","\u03b1"],"mo":["\u2062","\u2062"],"mstyle":{"mspace":{"@attributes":{"width":"0.3em","height":"0.3ex"}}}},{"mi":["r","cos","\u03b8"],"mo":["\u2062","\u2062","\u2062","\u2062"],"mstyle":[{"mspace":{"@attributes":{"width":"0.3em","height":"0.3ex"}}},{"mspace":{"@attributes":{"width":"0.3em","height":"0.3ex"}}}]}]}},{"mrow":{"mrow":{"mo":"-","mfrac":{"mn":"1","mi":"r"}},"mo":["\u2062","\u2062","\u2062","\u2062","\u2062","\u2062","\u2062"],"mi":["sin","\u03b8","sin","\u03b1"],"mstyle":[{"mspace":{"@attributes":{"width":"0.3em","height":"0.3ex"}}},{"mspace":{"@attributes":{"width":"0.3em","height":"0.3ex"}}},{"mspace":{"@attributes":{"width":"0.3em","height":"0.3ex"}}}]}},{"mrow":{"mi":["cos","\u03b8","sin","\u03b1"],"mo":["\u2062","\u2062","\u2062","\u2062","\u2062","\u2062"],"mstyle":[{"mspace":{"@attributes":{"width":"0.3em","height":"0.3ex"}}},{"mspace":{"@attributes":{"width":"0.3em","height":"0.3ex"}}},{"mspace":{"@attributes":{"width":"0.3em","height":"0.3ex"}}}]}}]},{"mtd":[{"mn":"0"},{"mrow":{"mfrac":{"mn":"1","mi":"r"},"mo":["\u2062","\u2062","\u2062"],"mi":["cos","\u03b8"],"mstyle":{"mspace":{"@attributes":{"width":"0.3em","height":"0.3ex"}}}}},{"mrow":{"mi":["sin","\u03b8"],"mo":["\u2062","\u2062"],"mstyle":{"mspace":{"@attributes":{"width":"0.3em","height":"0.3ex"}}}}}]},{"mtd":[{"mrow":{"mo":"-","mfrac":{"mrow":[{"mi":["sin","\u03b1"],"mo":["\u2062","\u2062"],"mstyle":{"mspace":{"@attributes":{"width":"0.3em","height":"0.3ex"}}}},{"mi":["r","cos","\u03b8"],"mo":["\u2062","\u2062","\u2062","\u2062"],"mstyle":[{"mspace":{"@attributes":{"width":"0.3em","height":"0.3ex"}}},{"mspace":{"@attributes":{"width":"0.3em","height":"0.3ex"}}}]}]}}},{"mrow":{"mrow":{"mo":"-","mfrac":{"mn":"1","mi":"r"}},"mo":["\u2062","\u2062","\u2062","\u2062","\u2062","\u2062","\u2062"],"mi":["sin","\u03b8","cos","\u03b1"],"mstyle":[{"mspace":{"@attributes":{"width":"0.3em","height":"0.3ex"}}},{"mspace":{"@attributes":{"width":"0.3em","height":"0.3ex"}}},{"mspace":{"@attributes":{"width":"0.3em","height":"0.3ex"}}}]}},{"mrow":{"mi":["cos","\u03b8","cos","\u03b1"],"mo":["\u2062","\u2062","\u2062","\u2062","\u2062","\u2062"],"mstyle":[{"mspace":{"@attributes":{"width":"0.3em","height":"0.3ex"}}},{"mspace":{"@attributes":{"width":"0.3em","height":"0.3ex"}}},{"mspace":{"@attributes":{"width":"0.3em","height":"0.3ex"}}}]}}]}]}}},"mo":","}},{"mrow":{"mi":"EQ","mo":["\u2062","\u2062"],"mstyle":{"mspace":{"@attributes":{"width":"0.8em","height":"0.8ex"}}},"mn":"6"}}]}}}},"br":{}},{"@attributes":{"id":"p-0064","num":"0068"},"maths":{"@attributes":{"id":"MATH-US-00010","num":"00010"},"math":{"@attributes":{"overflow":"scroll"},"mtable":{"mtr":{"mtd":[{"mrow":{"mi":"V","mo":"=","mrow":{"mrow":{"mo":["[","]"],"mtable":{"mtr":[{"mtd":{"mfrac":{"mrow":[{"mo":"\u2202","mi":"A"},{"mo":"\u2202","mi":"s"}]}}},{"mtd":{"mfrac":{"mrow":[{"mo":"\u2202","mi":"A"},{"mo":"\u2202","mi":"t"}]}}},{"mtd":{"mfrac":{"mrow":[{"mo":"\u2202","mi":"A"},{"mo":"\u2202","mi":"r"}]}}}]}},"mo":"."}}},{"mrow":{"mi":"EQ","mo":["\u2062","\u2062"],"mstyle":{"mspace":{"@attributes":{"width":"0.8em","height":"0.8ex"}}},"mn":"7"}}]}}}},"br":{},"b":"22"},"In alternative embodiments, processors other than the fragment processor are used for implementing the transform and\/or calculation of gradients in the acoustic domain. The equations discussed above represent calculation of gradients and transformation of the gradients for three-dimensional volumes. In other embodiments, the gradients are calculated and transformed for two dimensions. For example, the four matrix values in the upper left side of matrix, M, are used for determining the spatial derivatives in the x and y domains from the acoustic domain spatial derivatives in the azimuth and range.","One example of a curvilinear orthogonal coordinate transform is provided above. Equation 1 provides a generalization to various orthogonal coordinate systems. Scan formats such as vector, sector, curve, curve-vector and their 3D counterparts may all be accommodated by determining the spatial relationship between the acoustic grid and the Cartesian coordinate grid.","In one embodiment, a two-dimensional image is generated from the ultrasound data in the acoustic domain. The two-dimensional image is generated as a function of the transformed spatial gradient vector. For example, the data in the acoustic domain is adaptively filtered for enhancing image contrast while reducing speckle variance. The two-dimensional adaptive filtering adapts as a function of the spatial derivatives or gradient vectors. Filtering responsive to gradient information may provide speckle reduction, feature enhancement and edge enhancement. Gradients identify edges or features so that the filtering kernel is selected as a function of the likelihood of an edge or feature within the filter region. Spatial gradients are used to determine when to apply smoothing for speckle reduction, such as applying smoothing where an edge or feature is not located (e.g., low gradient value) and when to apply edge enhancement or less smoothing. Since speckle is associated with high frequency variation, identification of gradients associated with low frequency variation allows removal of the speckle information while maintaining or enhancing feature and edge information. Since acoustic domain data is filtered, the adaptive filter is less likely to vary as a function of angle and depth. After the data is filtered in the acoustic domain, the ultrasound data is scan converted to form the image.","If gradients calculated from data in the acoustic domain were applied by the adaptive filtering without transformation, an error would be introduced once the filtered data is scan converted. The transformation of the spatial gradients prior to application of the filter avoids introduction of the spatial artifact. While the filtering or other processing discussed above are applied for two-dimensional imaging, the filtering or other processing may also be performed for three-dimensional imaging.","In an embodiment for three-dimensional imaging, the ultrasound data is volume rendered as a function of the transform spatial gradient vector. The transformed spatial gradient vector is used for volume rendering with shading. The gradient vector or normal vector to a surface identified by the three-dimensional gradients provides an angle of the surface. Shading is performed by determining a relationship between the direction of a light source and the surface or normal vector. For example, shading for a given location is calculated as amplitude or light intensity times the cosine of the angle of the light source to the normal vector in a Lambertain Model. Alternatively, a Phong Specular Reflection model for shading is used. A gradient for each ray line location or 3D volume location is computed for shading in a Phong Specular Reflection model. The angle of the viewer to the normal is accounted for in addition to the angle of the light source to the normal.","In one embodiment, a shading value is calculated and added to the ultrasound data value, voxel or intensity. In other alternative embodiments, the shading value weights the ultrasound data as a multiplication, division, subtraction, addition, combinations thereof, linear, nonlinear, texture map or other functions. The shading alteration is calculated for each of a plurality of locations within the volume. In one embodiment, the shading is performed after resampling along ray lines as discussed in the background section above. The gradient values are calculated prior to the resampling and are interpolated or resampled to the ray lines. In alternative embodiments, the shading is performed before resampling or at other times within the volume rendering process using gradients calculated from data in the acoustic domain and transformed to gradients representing the Cartesian coordinate or other coordinate system.","In one embodiment, a three-dimensional representation is generated from ultrasound data in the acoustic domain (pre-scan converted data) without scan conversion of the ultrasound data, such as disclosed in U.S. Pat. No. 6,852,081 (application Ser. No. 10\/388,128). The three-dimensional representation is generated without scan conversion of the ultrasound data representing regions, areas or planes. In alternative embodiments, ultrasound data scan converted to represent one or more planes is used by interpolating the data to a three-dimensional grid. The three-dimensional representation is then volume rendered from the three-dimensional grid. For example, the GPU  includes a programmable vertex processor(s) for processing vertices, a primitive assembly for assembling the vertices, a rasterization and interpretation stage for forming fragments, a programmable fragment processor for texture mapping, shading, filling or otherwise interpolating information for the fragments and a frame buffer for outputting a two-dimensional image representing three-dimensional volume. In alternative embodiments, the GPU  performs volume rendering using blending and ray casting, but surface modeling or other three-dimensional rendering processes may be used.","Gradients Computed in the Display Coordinate Domain After Sampling to Ray Lines:","To avoid interpolation of multiple gradient values as well as voxel intensity values for volume rendering, spatial derivatives are computed in the screen domain. Resampling data from the acoustic domain or a 3D Cartesian coordinate grid to ray lines representing the viewing angle through the volume is performed before calculation of gradients. The voxel intensity data are interpolated along rays cast through the acquired volume. Each ray represents a pixel location in the display coordinates. Gradients are calculated for each value along each ray in the screen domain. The screen domain provides a plurality of points in a Cartesian coordinate format spaced as pixels.",{"@attributes":{"id":"p-0074","num":"0078"},"figref":["FIG. 4","FIG. 5","FIG. 4","FIG. 5","FIG. 4","FIG. 5"]},"As shown in , a voxel memory , such as a RAM or other now known or later developed memory, stores voxel information or intensities representing various spatial locations within the volume. An address generator , such as an application specific integrated circuit or processor for accessing the memory , also connects with a coefficient generator . The coefficient generator  is a lookup table memory, processor or other now known or later developed device for weighting data as a function of the 3D grid in comparison to ray lines along viewing directions for interpolation. The coefficient generator  generates coefficients or weights for the interpolation. An intensity interpolator  is a processor, application specific integrated circuit, or other now known or later developed device for generating a value along each of a plurality of ray lines as a function of ultrasound data accessed from the voxel memory  and associated coefficients generated by the coefficient generator . The voxel memory , address generator , coefficient generator  and intensity interpolator  are components of a graphics processing unit  and associated memory  in one embodiment, but may be separate devices.","The voxel memory  outputs ultrasound data along data path . The ultrasound data is formatted in the acoustic format (e.g., spherical coordinate), Cartesian coordinate or other 3D grid format. The ultrasound data is segmented in one embodiment, but may be unsegmented in other embodiments. Based on the addresses generated by the address generator , the voxel memory  outputs , , , , ,  or other number of voxels nearest to a ray line position for interpolation of a value at the ray line position after weighting by coefficients from the coefficient generator .","In act  of , ultrasound data in the acoustic or a 3D Cartesian coordinate domain are resampled to the screen domain. For example, ultrasound data in an acoustic domain is resampled to ray lines representing a viewing angle through a three-dimensional volume. A plurality of parallel cut planes (or alternatively, concentric spherical surfaces) are formed perpendicular to the viewing direction. Each of the cut planes intersects the volume in parallel. A plurality of ray lines, such as a ray line representing each pixel or display coordinate on the display, intersect the cut planes. The ultrasound data is resampled to the points of intersection of the ray lines with each of the cut planes. As a result, sets of data representing different depths through the volume from a viewing direction along each ray line are provided. Where the viewing angle through the same data changes, different cut planes and ray lines are used, resulting in another interpolation. Where the ultrasound data and the volume changes, the new data is also interpolated to ray lines corresponding to the viewing direction along a plurality of cut planes. Any number of ray lines or cut planes may be used.","Referring to , the intensity interpolator  outputs interpolated ultrasound data along a data path . The interpolated ultrasound data is in the display screen domain, such as data representing one or more pixels in a Cartesian coordinate display screen at different depths. Since the ray lines correspond to pixel locations or axes oriented relative to the display, the ultrasound data is in the display screen domain.","The interpolated ultrasound data is provided to the gradient pipeline . In one embodiment, the gradient pipeline  is a processor, application specific integrated circuit, buffers, accumulators, summers, multipliers or any other now known or later developed device for calculating gradients. The gradient pipeline  calculates the gradients along at least one dimension. For two-dimensional imaging, the gradient pipeline  calculates the gradients along one or two dimensions. For three-dimensional imaging, the gradient pipeline  calculates the gradients along one, two, or three dimensions. By calculating the gradients from ultrasound data in the display screen domain, interpolation of gradient values from a different format is avoided or minimized.",{"@attributes":{"id":"p-0080","num":"0084"},"figref":["FIG. 6","FIG. 6","FIG. 6"],"b":["60","60","62","62","62"]},"A subtractor  is provided for subtracting outputs of the pipeline delays selected as shown in  into three different values for each of the Z, Y and X dimensions. The three values are then multiplied by multipliers  with the weights shown (e.g., 2, 3 and 6). The three weighted values are then summed to provide a gradient in each of the Z, Y and X dimensions by the summers . Other weightings, circuit structures or devices may be used for calculating the gradients.","By using ray lines cast in parallel, the number of delays or buffers  is minimized in exchange for an increase in the number of redundant rays cast. The greater the amount of available storage, the more efficient the device and associated processing becomes. For example, if a group of 20\u00d720 rays are calculated in parallel, 142 pipeline delays are used for 81 percent efficiency (400 rays cast and 324 results provided). The following equations represent this efficiency:\n\nPipeline Delays=2*2*2\u2003\u2003EQ 8\n\nEfficiency=[((2)*(2))\/()]*100%\u2003\u2003EQ 9\n\nwhere\n\nPx=number of parallel rays in the x direction\n\nPy=number of parallel rays in the y direction\n","The gradient pipeline  outputs the gradient information along the three axes of the display domain as well as outputs the interpolated ultrasound data. The interpolated ultrasound data is delayed as a function of some of the buffers  to correspond in timing with the gradient data output. The remaining arrow to the right is the output of the interpolated data.  shows the data path  for outputting gradient information and a data path  for outputting the delay interpolated ultrasound data.","As shown in , act  shows determining the gradient information from the resampled ultrasound data. The gradients are determined from the ultrasound data in the screen domain in a plurality of cut planes. Each cut plane is a two-dimensional representation of a plane within the three-dimensional volume. Using the delays or buffers as shown in , the resampled ultrasound data from adjacent ray lines are delayed relative to each other so that the gradient information is determined from the delayed resampled ultrasound data. By providing the delays, the ultrasound data representing spatial locations in any given cut plane in the screen domain adjacent to a current spatial location are identified and used for determining a gradient. A sufficient number of buffers or delays  are provided to store the values of the ultrasound data for determining the gradient in one or more dimensions for each location. In alternative embodiments, the resampled or interpolated ultrasound data is stored in a memory and addressed as needed for calculating the gradients with a processor or other device.","Referring to , the compositing pipeline  determines values along each ray line as a function of the resampled ultrasound data and the gradient information input to the compositing pipeline . The compositing pipeline  is a processor, application specific integrated circuit, memory, buffers, summers, multipliers, subtractors or other now known or later developed devices for compositing values along ray lines for volume rendering.","As represented by act  in , the compositing pipeline  composites or blends the ultrasound data with shading. Values along the ray lines are determined as a function of the resampled ultrasound data and the gradient information. For example, a single value is determined for each ray line to represent a pixel on the display. A maximum value or minimum value is selected from along each ray line. In other embodiments, the blending includes a weighted summation of a plurality of values along the ray line, such as all values. The weights correspond to desired transparency, opacity, and\/or normalization of the blending operation. For a normalized blending, each of the values along a ray line are equally weighted and summed. Various thresholds may be applied to select data only above, below or within a value range along each ray line.","In addition to blending along each of the ray lines, the resampled ultrasound data is shaded as a function of the gradient information. For example, each of the ultrasound values at each ray line location on the plurality of cut planes are shaded prior to blending. The gradient information for each of three dimensions associated with each ultrasound value is used to determine a normal vector for that location. An angle of the light source to the normal vector is calculated. The angle of the viewing direction to the normal may also be included in the shading calculation. The cosine of one or both angles is multiplied by the light intensity. The cosines may also be raised to higher powers prior to multiplication. The resulting value is added to the ultrasound data, but may be multiplied, divided, subtracted or combined with the ultrasound value in any of various now known or later developed functions. The result is an ultrasound value shaded as a function of the gradient values.","After the shaded ultrasound values are composited or blended, the compositing pipeline  outputs intensities, colors or other values representing the ultrasound data at each pixel from the display. The resulting two-dimensional image represents the three-dimensional volume as viewed from the viewing direction. As a result of using the process shown in  or the system shown in , about \u00bc of the number the accesses to memories is required than as compared to calculating gradients from a three-dimensional grid and interpolating the gradients during resampling to the ray lines. Interpolation for the gradient components is eliminated and an efficient parallel hardware implementation may be used.","In the pipeline implementation for calculating gradients represented by , a large number of rays are cast in parallel. A 3\u00d73\u00d73 gradient kernel is then used to compute the spatial derivatives for the inner rays. Gradients may not be computed for the outer rows and columns of rays. In one embodiment, the interpolated or resampled intensities for the right most column and bottom most row are saved in a memory or buffer and reused for a next group of rays. This may require more storage units but may be 100 percent efficient if the entire width and height of the display is a lesser dimension than the entire parallel grouping of arrays. In alternative embodiments, the values at the edges are not used in the display or are used in the display without shading. In yet another alternative embodiment, a 2\u00d72 gradient kernel is used for calculating the gradients.","Local storage is used for the gradient calculation as shown in  by the buffer or delay . To make the algorithm more efficient, more local storage is used. Less storage means less efficiency but more potential cost savings. Storage can be minimized by calculating a 3\u00d73 group of rays where only the center ray is used. When the center ray of a 3\u00d73 set of rays is the only result from the gradient calculation pipeline, the number of parallel rays computed and stored in the pipeline is the minimum number of 9. Using equation 8 with Px and Py equal to 3, the number of pipeline delays needed is 26. Equation number 9 indicates the efficiency is 11 percent.","Gradients Computed and Shading Provided Prior to Resampling to the Display Domain","In an alternative embodiment to determining gradients in the display domain, the gradients are determined and the shading is performed prior to resampling to the display domain or to the ray lines.",{"@attributes":{"id":"p-0093","num":"0097"},"figref":"FIG. 7","b":"72"},"In act , the ultrasound data is shaded as a function of the gradients. For example, a plurality of display intensities with opacity weights or with transparency weights are shaded as a function of the gradients. The shading is performed as discussed above, such as by determining a normal associated with the gradients for any given selected spatial location. An angle of the light source to the normal is calculated. The angle and a light source intensity are then used to determine a shading value. The angle to the viewing direction and the normal may also be included in the shading calculation. The shading value is then added to the ultrasound intensity. Other functions for combining the ultrasound intensity and the shading value may be used as discussed above. In one embodiment, the ultrasound data is in an acoustic domain and is free of two-dimensional scan conversion. The data in the acoustical domain representing a three-dimensional volume is shaded.","For example, V is a data sample in the 3D acoustic grid. The gradients, G=(Gx, Gy, Gz) are computed for V. The contribution, U, from the light source is given by: U=A cos (Angle(G, L)), where G is the gradient vector, L is a vector showing the light source location, and A is the intensity of the light source. V is replaced with W=V+U. W is a shaded data sample in the acoustic grid. This new acoustic data set is provided to the ray-caster, to the GPU  3D Texture process or for volume based rendering.","In act , the shaded ultrasound data is resampled or interpolated to ray lines representing a viewing angle through the volume. The resampling is performed for each of a plurality of cut planes at the intersection of a plurality of parallel ray lines along the viewing direction. The ray lines are selected as corresponding to one or more pixels on the display screen, so the ray lines represent a screen domain format. The z dimension is oriented to be parallel with or along the ray lines and the x and y dimensions are perpendicular to the ray lines.","In act , the shaded, resampled ultrasound data along each of the ray lines is blended or composited as discussed above. By resampling after the shading step, the ultrasound data includes intensities and opacities or transparencies. The intensities are shaded such that resampling of this data requires less computations and memory accesses than resampling the gradient data and its individual components.","While the invention has been described above by reference to various embodiments, it should be understood that many changes and modifications can be made without departing from the scope of the invention. It is therefore intended that the foregoing detailed description be regarded as illustrative rather than limiting, and that it be understood that it is the following claims, including all equivalents, that are intended to define the scope and spirit of this invention."],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"BRIEF DESCRIPTION OF THE DRAWINGS","p":["The components and the figures are not necessarily to scale, emphasis instead being placed upon illustrating the principles of the invention. Moreover, in the figures, like reference numerals designate corresponding parts throughout the different views.",{"@attributes":{"id":"p-0020","num":"0024"},"figref":"FIG. 1"},{"@attributes":{"id":"p-0021","num":"0025"},"figref":"FIG. 2"},{"@attributes":{"id":"p-0022","num":"0026"},"figref":"FIG. 3"},{"@attributes":{"id":"p-0023","num":"0027"},"figref":"FIG. 4"},{"@attributes":{"id":"p-0024","num":"0028"},"figref":"FIG. 5"},{"@attributes":{"id":"p-0025","num":"0029"},"figref":"FIG. 6"},{"@attributes":{"id":"p-0026","num":"0030"},"figref":"FIG. 7"}]},"DETDESC":[{},{}]}
