---
title: Flexible copies having different sub-types
abstract: According to one or more of the provisions set forth herein, data can be managed in a data storage system in an efficient manner. In one example, a first flexible copy volume of data is generated based on a snapshot copy volume of a flexible volume containing the data. The first flexible copy volume is configured to be operated upon according to a first set of operations. A second flexible copy of the data is also generated based on the snapshot copy volume. The second flexible copy volume is configured to be operated upon according to a second set of operations that differs from the first set of operations. Having a second copy of the data allows testing or other operations to be performed on the data while also maintaining an original version of the data.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08341119&OS=08341119&RS=08341119
owner: NetApp, Inc.
number: 08341119
owner_city: Sunnyvale
owner_country: US
publication_date: 20090914
---

{"@attributes":{"id":"description"},"BRFSUM":[{},{}],"heading":["BACKGROUND","SUMMARY","DETAILED DESCRIPTION"],"p":["In our modern communications age, commercial enterprises, consumers, and other entities are storing an ever increasing amount of digitized data. For example, many entities are in the process of digitizing their business records and\/or other data. Similarly, web based service providers generally engage in transactions that are primarily digital in nature. Thus, techniques and mechanisms that facilitate efficient and cost effective storage of vast amounts of digital data are being implemented.","In some modern data storage systems, data is formatted or organized as a file so that it can be stored within file systems and\/or volumes. Since the data is digital or \u201cdigitized\u201d (e.g., stored as bits of either 0 or 1), one or more (backup) copies of the data can be made relatively easily. When a copy of a data file is made, the original file is at times referred to as the parent while the copy may be referred to as the child, where the child is a lossless (e.g., bit for bit) snapshot or \u201cpicture\u201d of the parent data taken at a particular point in time. Similarly, in such a scenario, the original file may be regarded as residing on or being stored within a parent volume while the copy may be regarded as residing on or being stored within a child volume, where a volume generally corresponds to an amount of memory allocated for storing the data file.","It can be appreciated that in some situations it may be advantageous and\/or otherwise desirable to maintain a copy of the data as it appeared at some point in time (e.g., as depicted in the parent volume), while also being able to perform testing and\/or other operations upon the data as it appeared at that same point in time (e.g., as depicted in a child volume), where such testing or other operations may occur at the same and\/or one or more later points in time.","In order to provide for this functionality, data storage systems have evolved to include flexible copy volumes, which effectively store children files of a parent file. That is, a child or snapshot copy of a parent data file can be stored on a flexible copy volume such that the child file can be manipulated and\/or otherwise modified (e.g., for data verification, product\/system development, testing, bug fixing, upgrade checks, data set simulations, etc.) without affecting the parent data file.","It can be appreciated that establishing different flexible copy volumes such that they, or rather the (child) data stored therein, can be operated on by merely the same or a single set of operations can constrain the usefulness and\/or robustness of such flexible copy volumes. For example, with such a limited set of operations available for application to flexible copy volumes, a user may be prone to keep multiple snapshots of the data (possibly taken at different points in time) in an attempt to observe one or more trends, for example, as one or more of the predefined operations are repeatedly applied to the data. It will be appreciated, however, that this is just one of any number of examples where the inflexibility afforded by having the same set of operations available to apply to different flexible copy volumes may cause and\/or otherwise encourage a user to maintain a large number of flexible copy volumes (e.g., not deleting them in a timely manner). However, since respective flexible copy volumes require some resources (e.g., physical memory), maintaining a large number of flexible copy volumes can (undesirably) consume a large amount of resources.","According to one or more techniques and\/or systems provided herein flexible copy volumes, or rather the (child) data stored therein, can be operated upon by different respective sets of operations, which can conserve resources by encouraging users to delete flexible copy volumes more quickly and\/or otherwise maintain fewer flexible copy volumes. For example, allowing different sets of operations to be applied to different flexible copy volumes may improve the robustness of the volumes, for example, by allowing trends and\/or other issues related to the data stored therein, for example, to be discerned more quickly. For example, where different sets of operations can be applied to child data stored in different flexible copy volumes, merely five (5) iterations may be required, for example, to discern some trend and\/or other issue related to the data (e.g., five (5) different sets of operations applied to five different flexibly copy volumes), whereas if merely the same set of operations could be applied to the data stored in different flexible copy volumes, fifty (50) iterations may be required, for example, to unearth the same trend and\/or issue (e.g., fifty (50) applications of the same set of operations to fifty different flexibly copy volumes\u2014where the different snapshots of data stored therein may have been acquired at different points in time). Regardless of the example or application, it can be appreciated that since respective flexible copy volumes require some resources (e.g., physical memory), reducing the number of flexible copy volumes can significantly reduce the resources used. For example, allowing different flexible copy volumes to be operated on with different respective sets of operations may encourage a user to delete flexible copy volumes more frequently and\/or otherwise maintain or make use of fewer flexible copy volumes.","Accordingly, as provided herein, a first flexible copy volume (e.g., a restricted flexible copy volume) can be setup so as to be operated on by a first set of operations; and a second flexible copy volume (e.g., an unrestricted flexible copy volume) can be setup so as to be operated on by a second set of operations that is different from the first set of operations. That is, different flexible copy volumes, or rather the (child) data stored therein, can be operated upon by different respective sets of operations. In one or more embodiments, since it is not uncommon for a user to access a flexible copy volume just one or few times shortly after the volume is created, host based software can be configured to automatically delete particular flexible copy volumes (e.g., those that can be operated on by a second set of operations) shortly after they are created, thereby reducing the total number of flexible copy volumes maintained, and thus the amount of memory and\/or other resources utilized (particularly where a user fails to manually delete the volume(s)). It will be appreciated that since flexible copy volumes maintain snapshot or child data therein, when a flexible copy volume is said to be acted upon in some manner herein (e.g., operated on by\/according to a set of operations, etc.) this is intended to indicate that the data maintained by the flexible copy volume (e.g., child data) is so acted upon, even though such statement may not be so explicitly expressed.","To the accomplishment of the foregoing and related ends, the following description and annexed drawings set forth certain illustrative aspects and implementations. These are indicative of but a few of the various ways in which one or more aspects may be employed. Other aspects, advantages, and novel features of the disclosure will become apparent from the following detailed description when considered in conjunction with the annexed drawings.","Some examples of the claimed subject matter are now described with reference to the drawings, where like reference numerals are used to refer to like elements throughout. In the following description, for purposes of explanation, numerous specific details are set forth in order to provide a thorough understanding of the claimed subject matter. It may be evident, however, that the claimed subject matter may be practiced without these specific details. Nothing in this detailed description is admitted as prior art.","To provide improved user functionality and promote efficient resource utilization, the present disclosure provides for flexible copy volumes that can be operated upon by different respective sets of operations. To provide a context for one example of how a flexible copy volume may be implemented,  illustrates a data storage system  and  illustrate how a flexible copy volume can be employed to store and manage data in this data storage system. It will be appreciated that where the same or similar components, elements, features, items, modules, etc. are illustrated in later Figs. but were previously discussed with regard to prior Figs., that a similar (e.g., redundant) discussion of the same may be omitted when describing the subsequent Figs. for purposes of simplicity and ease of understanding.","Turning now to , an example of a data storage system  is illustrated. The data storage system  includes a plurality of nodes  (e.g., first and second nodes , ) that are operatively coupled to respective data storage devices  (e.g., first and second data storage devices , ) as well as a cluster fabric , such as a computing network embodied as an Ethernet or Fibre Channel (FC) network facilitating which facilitates communication between the nodes , and\/or modules or components therein. These components are operably coupled to provide one or more clients  with access to data stored in the data storage system , for example, in a clustered data storage and management network environment that may implement one or more embodiments of the techniques and\/or systems described herein.","It should be appreciated that, while the embodiment  depicts only first and second nodes , ; data storage systems often include many more nodes, where respective nodes can be coupled to one or more respective data storage devices  as well as to the other nodes. Nevertheless, it is also to be appreciated that a data storage system, as the phrase is used herein, may also comprise a single node (e.g., only ) rather than a plurality of nodes , , etc. Similarly, it will be appreciated that a different number of any of the different components, modules, elements, features, items, etc. illustrated in  is contemplated. That is, the system  illustrated in  and the number of items, components, modules, elements, features, etc. illustrated therein (as well as in other Figs.) are not intended to be interpreted in a limiting manner.","As illustrated, respective nodes  can comprise one or more data module(s)  and one or more network module(s) . A data module  within a given node  enables that node to connect to one or more respective data storage devices  coupled to the node. For example, in the illustrated embodiment, a first data module couples the first node to a first data storage device , where the first data storage device includes a disk array made up of a number of disks  (e.g., first , second and third disks in the illustrated example). Similarly, a second data module couples the second node to a second data storage device , where the second data storage device can include a disk array or some other type of memory device, such as one or more flash storage device(s), for example (not illustrated).","Often, data modules  communicate with the data storage devices  according to a storage area network (SAN) protocol, such as Small Computer System Interface (SCSI) or Fibre Channel Protocol (FCP), for example. Thus, as seen from an operating system (not shown) on a node , the data storage devices  appear as locally attached to the operating system. In this manner, different nodes , , etc. typically access data blocks through the operating system.","In addition to the data modules , the nodes  also include network modules  for connecting with one or more other components through the cluster fabric . For example, in , first network module of first node can access second data storage device by sending a request through second data module of second node ","The network modules  also allow the respective nodes  to carry out communication with one or more clients . For example, the client  may request the services of the data storage system  through first node (e.g., acting as a host\/server having an IP address), after which the first node may return the results of the requested services to the client . The network modules  and client  can exchange packets, for example, using Network Attached Storage (NAS) protocols, such as a Common Internet File System (CIFS) protocol or a Network File System (NFS) protocol, for example. By way of example, a client may request a file by providing a file identifier (e.g., inode number and generation number) along with a volume identifier (e.g., file system identifier (FSID)), which uniquely identifies a file as belonging to a particular volume.","Although respective nodes  are illustrated as single units in , it will be appreciated that one or more of such nodes can have a distributed architecture. For example, the node can be implemented with multiple distributed storage servers. In addition, the network module (e.g., ) and data module (e.g., ) within a node  can be contained in separate housings and communicate with each other via network connections. In one embodiment, the network modules  can comprise respective servers and the data modules  can comprise respective filer devices as may be provided by the assignee of the instant application, for example. However, other devices and\/or components can also be used depending on the implementation. An additional discussion of a node  is had below with regard to .","An operating system (not illustrated) installed on the nodes  manages communications between the nodes , thereby allowing the nodes  to respond to client requests to manage data on the data storage devices  in accordance with these client requests. The operating system also facilitates integrating new files and\/or storage devices into the system. As can be appreciated, data can be stored in the system  as files within physical  and\/or virtual 120 volumes, which can be associated with respective volume identifiers, such as file system identifiers (FSIDs), which can be 32-bits in length in one example.","A physical volume , which may also be referred to as a \u201ctraditional volume\u201d in some contexts, corresponds to at least a portion of physical memory whose address doesn't change, such as at least some of a data storage device (e.g., a Redundant Array of Independent (or Inexpensive) Disks (RAID system)). For example, physical volume  is illustrated in  as comprising at least some of the first disparate disk of data storage device , where the location of this physical volume  generally does not change in that the address used to access it generally remains constant and corresponds to one physical device.","A virtual volume , in contrast, is stored over an aggregate  of disparate portions of one or more different physical storage devices. The virtual volume can thus be thought of as a collage or patchwork of different available portions of different physical memory locations, such as some available space on first disk , some available space on second disk and\/or some available space on third disk . It can be appreciated that since a virtual volume is not \u201ctied\u201d to any one particular storage device (e.g., , , ), a virtual volume can be said to include a layer of abstraction or virtualization, which allows it to be resized and\/or flexible in some regards.","A virtual volume  can include one or more logical unit numbers (LUNs) , directories , qtrees , and files . Among other things, these features allow the disparate memory locations within which data is stored to be identified. As such, one or more of these features, particularly the LUNs , can be thought of as constituting a virtual disk upon which the data within the virtual volume  is stored within the aggregate . As will be appreciated, one or more virtual volumes can comprise one or more flexible copy volumes such that different respective sets of operations can be performed on different flexible copy volumes.",{"@attributes":{"id":"p-0034","num":"0033"},"figref":["FIG. 2","FIG. 2","FIG. 1","FIG. 2","FIG. 1","FIG. 2"],"b":"200"},"The arrangement  comprises a host entity component  and a storage component . In the illustrated example, the host entity component  comprises a file system , a host volume , a disk group  and a storage device . The storage component  comprises a flexible volume , a snapshot copy volume , a first flexible copy volume  and a second flexible copy volume , where the first flexible copy volume  has a corresponding first LUN  and the second flexible copy volume  has a corresponding second LUN . As will be appreciated, the first flexible copy volume  may be a restricted copy that can be acted upon by a first set of operations, and the second flexible copy volume  may be an unrestricted copy that can be acted upon by a second (different) set of operations.","The host entity component  and the storage component  can communicate with one another via a storage area network (SAN) protocol, such as Small Computer System Interface (SCSI) or Fibre Channel Protocol (FCP), for example, where the host entity component  may be identified by an Internet-Protocol (IP) address, for example. It will be appreciated that the host entity component  may be running on one or more nodes in a clustered computing environment, such as nodes and\/or of the system  illustrated in , for example.","Accordingly, computer instructions, that may be in the form of provisioning, management software and\/or an operating system, for example, that are executable on one or more nodes (e.g., at the initiation of a user and\/or automatically) may cause the flexible volume  to be created, where the flexible volume  may comprise a copy of one or more of the items in the host entity component . The snapshot copy volume  and the first  and second  flexible copy volumes may be created in a similar manner, where the snapshot copy volume  comprises a copy of the flexible volume , and the first  and second  flexible copy volumes comprise respective copies of the snapshot copy volume . It will be appreciated that the flexible volume , the snapshot copy volume  and the first  and second  flexible copy volumes may be stored within one or more virtual volumes, such as one or more of the virtual volumes  illustrated in , for example. Accordingly, the storage component  may be comprised of an aggregate of disparate portions of one or more different physical storage devices, such as the aggregate  illustrated in , for example.","Thus, in one example, one or more users can, via one or more nodes, cause one or more backup copies of the data on the host entity  to be created by having the data be stored as a flexible volume  and then creating one or more snapshot copy volumes  and one or more flexible copy volumes , , where one or more of the flexible copy volumes can be designated as restricted so as to be acted upon by a first set of operations or unrestricted so as to be operated upon by a second set of operations, for example. Such designations may be established (e.g., through provisioning, management software and\/or an operating system) when the flexible copy volumes are created, for example, and the designations may be comprised within metadata of the respective flexible copy volumes, for example. Accordingly, in contrast to conventional situations where the metadata regarding the respective sets of operations that can be performed upon different flexible copy volumes (or rather the data stored therein) may be virtually identical across the different flexible copy volumes, this metadata can now be different across (at least some of) the different flexible copy volumes to indicate that one or more of the flexible copy volumes can be operated on by a first set of operations while one or more other flexibly copy volumes can be operated on by a second, different, set of operations.","It will be appreciated that since the flexible copy volumes ,  have respective logical unit numbers (LUNs) , , the flexible copy volumes can themselves be individually accessed to create yet another copy of the data therein. Creating another backup of host entity data by making a copy of a flexible copy volume is at times referred to as cloning, or cloning the host entity. Similarly, the items and\/or data within the host entity  can at times be referred to as the host side storage stack. For example, in the example illustrated, the host side storage stack can be said to comprise a file system  on a host volume  on a disk group ; or a file system  on a raw device . Thus cloning a host entity can be accomplished by connecting to a LUN of a flexible copy volume and then building a copy of the host side storage stack within another flexible copy volume (e.g., the accessed flexible copy volume may be regarded as the parent and the new flexible copy volume may be regarded as the child). It will be appreciated that the file system , host volume , and disk group  are generally \u201cfrozen\u201d or stopped (e.g., by provisioning and\/or management software) before a snapshot is taken to yield a status or picture of these items at a particular point in time.","It can be appreciated that it takes little to no time to create a flexible copy volume and thus they may be created frequently and\/or routinely by a user. For example, in some scenarios a user may create a flexible copy volume to verify the data in a snapshot copy and then delete (or not) the flexible copy volume after the verification task is complete. In this scenario, it may be desirable to allow a user to create a restricted flexible copy volume that prevents other users from doing provisioning and\/or other operations (e.g., snapshot operations) on the restricted flexible copy volume. In other scenarios, it may be desirable to allow a user to create an unrestricted flexible copy volume for prototyping and\/or other system operations. Such an unrestricted flexible copy volume could be used for provisioning and\/or other operations as with one or more other types of volumes, for example.","Additionally, in an effort to conserve resources one or more mechanisms and\/or techniques can be implemented, such as through management software and\/or an operating system, for example, whereby flexible copy volumes can be deleted manually and\/or automatically once they are no longer needed. By way of example, where a flexible copy volume is designated as a restricted flexible copy volume and is used to verify data in a snapshot copy volume, that flexible copy volume can be deleted once the verification is complete. For example, an application, an operating system and\/or some other type of control mechanism may examine the metadata of the flexible copy volume and identify that it is of a particular type (e.g., restricted). Thus, once the task allocated to the flexible copy volume is complete (e.g., verification), whatever control mechanism is in place can determine that the flexible copy volume will not be used again, and thus can facilitate deletion of the same. This inhibits storage of unnecessary flexible copy volumes and thus encourages efficient resource utilization. It will be appreciated that establishing a flexible copy volume for such a fixed\/limited purpose may also encourage a user to manually delete such flexible copy volumes in a timely manner. Also, consulting metadata in this manner, such as to determine what type of operations may be performed on the data, may be applicable regardless of where an operation request is initiated (e.g., from any of multiple hosts sharing a single flexible copy volume).",{"@attributes":{"id":"p-0042","num":"0041"},"figref":["FIG. 3","FIG. 1"],"b":["301","120","300","302","312","301","312","312","301","314","316","318","312","301","301","301","312"]},"The inode structure  comprises metadata  of pointers, etc. (illustrated by arrows) that directly or indirectly point to memory locations or blocks  of the virtual volume  within which the data is actually stored. It will be appreciated that the metadata  thus does not actually comprise the data to be stored, but instead comprises ancillary information about the data that can be used in deciding how to store or allocate the data among the blocks  of the virtual volume . For example, metadata can comprise, among other things, information about the location, size, creation time, modification time, access time, ownership, and\/or access attributes of the data. It is also to be appreciated that while data allocation and storage is illustrated herein through the implementation of inode structures, that such data storage could be accomplished through different implementations. That is, the use and discussion of inode structures herein is not meant to be interpreted in a limiting sense, but is merely used as an example of one technique suitable for facilitating data storage and\/or allocation in accordance with the provisions set forth herein.","An operating system (not illustrated), such as may be resident on one or more of the nodes and of the example clustered network  of , for example, can walk through and\/or otherwise use metadata  of inode structure  to map and\/or otherwise place the data files , ,  within appropriate\/designated data blocks  of a virtual volume . Since data blocks  of a virtual volume  generally correspond to disparate memory locations \u201cscattered\u201d over non-contiguous regions of different physical storage devices (e.g., some available space from first disk , some available space from second disk , and\/or some available space from third disk in ), a vol_info block  for the virtual volume is generally consulted in mapping the data files (e.g., , , ) to the appropriate data blocks  within which the files (and more particularly bits thereof) are stored.","More particularly, a file  to be stored within a virtual volume can be parsed into a plurality of file blocks, where respective blocks of that file are assigned numbers (e.g., file block numbers (FBNs) ), and an operating system can access a vol_info block  to find the logical addresses for those file block numbers FBNs . It will be appreciated that the logical addresses merely comprise abstract descriptions that are discernable or recognizable by the operating system and\/or other higher level applications, and that ultimately provide an indication as to which bits are to be stored where. That is, the logical addresses provide, among other things, an indication of which data blocks  of the virtual volume  respective bits of the file  are to be stored within. It will be appreciated, however, that respective blocks  generally comprise an amount of physical memory sufficient to store many, many bits (e.g., not just one bit is stored in each memory block).","It will also be appreciated that determining the logical addresses for different file blocks of a file  is merely one of a number of de-abstraction actions that generally are matriculated through to cause the higher-level or abstract notion of a data file  to be stored in appropriate data blocks  of a virtual volume (e.g. as a string of 0s or 1s). Accordingly, as another action, the operating system and\/or other high level application can translate a FBN  to one or more virtual volume block numbers (VVBN)  by using the file's  inode and buftree (not illustrated). Similarly, the operating system can then translate a VVBN  to one or more physical volume block numbers (PVBN)  using the inode and buftree (not illustrated). One or more other de-abstraction actions can also occur that make use of one or more other aspects , , etc. of the metadata , and that ultimately allow a data storage controller (not illustrated) to write the desired data (e.g., file ) to the appropriate data blocks  of the virtual volume .","As mentioned above, virtual volumes can be somewhat flexible due to, among other things, the fact that flexible volumes can be comprised of disparate memory locations spread across different storage devices (e.g., some available space from first disk , some available space from second disk and\/or some available space from third disk in ). To illustrate this point, a conceptual example is introduced here with regard to  and is also carried through to . In this example, the virtual volume  of  can be thought of as being generated at a particular or initial time , namely 8:00 am on a given day. At this particular point in time, three files are comprised within the virtual volume , namely the small file  (e.g., comprising a recipe), the medium file  (e.g., comprising a thumbnail image) and the large file  (e.g., comprising a poem, \u201cRoses are red . . . \u201d).","In the illustrated example, the small file  is stored within a single data block, the medium file  is stored within three data blocks and the large file  is stored within four data blocks of the virtual volume . Again, however, it will be appreciated that respective data blocks  may store many, many bits of data. Since this is the \u201coriginal\u201d data in this example, this data may be referred to as the parent, while any subsequent copies of this data may be referred to as a child. Accordingly, at 8:00 am, these three files , ,  exist within the virtual volume , and a user may access any one or more of the files via a client (e.g.,  of ) operatively coupled to a clustered computing network comprising the virtual volume .",{"@attributes":{"id":"p-0049","num":"0048"},"figref":["FIG. 4","FIG. 1"],"b":["301","415","300","303","300","400","415","108","301","400","403","415","300","403","400","408","410","411","413","312","301"]},"In the illustrated example, the data has not changed from 8:00 am to 9:00 am. That is, the large poem file  still reads \u201cRoses are red . . . \u201d, and the other files ,  likewise remain unchanged. Accordingly, the lowest aspects  of metadata  in the second inode structure  point to the same blocks  as the lowest aspects  of metadata . It can be appreciated that this allows two copies of the data (e.g., the parent and a child) to be stored in nearly the same amount of memory it would take to store one copy of the data. That is, since the metadata ,  occupies on the order of 1% or less of the data which it represents, the two copies of the data can be stored very efficiently. Moreover, where there is overlap between sets of metadata (as in  and ), those sets of metadata may be further compressed to make data storage even more efficient. It can be appreciated, that the 9:00 am snapshot copy volume of the original 8:00 am data can thus be generated simply by establishing metadata , rather than storing a whole other copy of the data in other data blocks  of the virtual volume . This is the case when multiple copies of the data are stored in a virtual volume.",{"@attributes":{"id":"p-0051","num":"0050"},"figref":["FIG. 5","FIG. 4","FIGS. 3 and 4"],"b":["301","515","400","403","314","316","318","403","312","301","515","300","500","500","503","301","555","503","307","301","455","403","305","305","307"]},"It will be appreciated that while one (1) new data block  is illustrated in , that any number of new or different data blocks are contemplated, and that a single new data block is merely illustrated for simplicity and ease of understanding. Nevertheless, storing the data in this manner is efficient as merely the new or different data has to be allocated to another data block  of the virtual volume . That is, additional data blocks  of the virtual volume  do not have to be used to store redundant copies of data. Accordingly, in the illustrated example, two independent versions of the large poem data file  are stored in 5 data blocks, with overlapping data stored in the first four data blocks, and new or different data stored in the fifth data block . The small recipe data file  and the medium image thumbnail data file  are stored in the same single and three data blocks, respectively, of the virtual volume  since they haven't changed in the illustrated example.","The end result is that, at 10:00 am, the snapshot copy metadata  retains a \u201csnapshot\u201d of the original or virtual volume as of the time the snapshot was created (e.g., 9:00 am), where the snapshot copy happens to correspond to the data at 8:00 am in the illustrated example (e.g., the data did not change between 8:00 am and 9:00 am). Thus, a version of the data as it originally appeared (at 8:00 am) is available at 10:00 am, even though changes are made to the original data at 10:00 am. Thus, in addition to a recipe and a thumbnail of an image, a user also has two different versions of the \u201cRoses are  . . . \u201d poem to work from.",{"@attributes":{"id":"p-0054","num":"0053"},"figref":["FIG. 6","FIG. 5","FIG. 5"],"b":["301","615","500","400","503","403","312","301","515","600","603","403","400","655","603","455","403","305","301","318","314","316","318","500","555","307","301","312","301","403","503","603"]},{"@attributes":{"id":"p-0055","num":"0054"},"figref":["FIG. 7","FIG. 5","FIG. 6","FIG. 6","FIG. 6","FIG. 4","FIG. 5","FIG. 7"],"b":["301","715","500","400","503","403","312","301","715","318","700","316","314","318","703","700","603","600","757","700","309","318","657","311","318"]},"It can be appreciated that storing data in this manner allows the data to be selectively altered for testing and\/or other purposes (e.g., recipe  and image thumbnail  files can remain the same while some portion of the poem file  can be altered in different manners at the same and\/or different points in time). Moreover, this also allows various versions of the data to be stored efficiently. For example, in the preceding scenario eleven (11) different copies of each of the recipe , image thumbnail  and poem  data files data were effectively stored in 10 different data blocks  of the virtual volume  (e.g., 1 copy at 8:00 am (), 2 copies at 9:00 am (), 2 copies at 10:00 am (), 3 copies at 11:00 am () and 3 copies at noon ()).","Nevertheless, even though some data blocks  of the virtual volume  are shared or reused when storing the different copies of these data files, it can be appreciated that the number of data blocks needed to store copies of these files can increase dramatically as changes are made to the data over time (e.g., and there is less and less overlap between the files). By way of example, snapshot copies of the data files could be taken at regular intervals (e.g., every hour), as a function of some system functionality (e.g., at bootup), or at any other suitable times, and flexible copy volumes could be developed from any one or more of these snapshot copies. In the previous scenario, for example, a single snapshot  is taken at 9:00 am (), and a flexible copy  of that snapshot  is created at 11:00 am (). However, one or more snapshots of all the different copies could be taken at any (interval of) time (e.g., one or more respective snapshots of the 2 copies at 9:00 am (), one or more respective snapshots of the 2 copies at 10:00 am (), one or more respective snapshots of the 3 copies at 11:00 am () and\/or one or more respective snapshots of the 3 copies at noon), and flexible copies of these snapshots could likewise be created from any one or more of these snapshots. It can be appreciated that this could lead to a significant increase in the amount of data to be stored, particularly where the data changes over time, which is typically the case as the data evolves, such as during development and\/or testing or a large computer program, for example.","With regard to terminology, although storing the different states of the different data files , , , at different points in time, has been described with regard to inode structures and the metadata stored therein, at the different points in time, it will be appreciated that the inode structures, the corresponding metadata and the data files stored thereby may, at times, be referred to as volumes or the like. For example, the fifth inode structure , the metadata  comprised therein and the state of the data files , ,  stored thereby in particular data blocks  of the virtual volume  may be referred to as a flexible copy volume, or simply a flexible or flex. copy. Similarly, the second inode structure , the metadata  comprised therein and the state of the data files , ,  stored thereby in particular data blocks  of the virtual volume  may be referred to as a snapshot copy volume, or simply a snapshot copy. Likewise, the first inode structure , the metadata  comprised therein and the state of the data files , ,  stored thereby in particular data blocks  of the virtual volume  may be referred to as a flexible volume, or simply a flex vol. Thus a virtual volume can contain one or more flexible volumes, one or more snapshot copy volumes and\/or one or more flexible copy volumes. For example, the flexible volume , snapshot copy volume , first flexible copy volume  and\/or second flexible copy volume  of  may be stored within a virtual volume.","It can be appreciated that creating multiple flexible copy volumes such that they comprise data with the same ownership and permissions (e.g., can be operated on by the same set of operations) may encourage a user to maintain more flexible copy volumes (e.g., to determine some trend in the data over time). However, because each flexible copy volume requires some resources, such as data blocks  of a virtual volume  (e.g., some amount of physical memory), for example, and the amount of resources required may increase over time as the data diverges, it can be appreciated that it would be desirable to allow different flexible copy volumes to be operated on by different rules so that fewer flexible copy volumes need to be maintained (e.g., a trend is discerned more quickly, they become irrelevant sooner, they are consulted less and less frequently, etc.). Moreover, it would also be desirable to automatically selectively delete flexibly copy volumes based upon some criteria (e.g., an earlier version of the poem \u201cRoses are red . . . \u201d is no longer being used). Such auto-deletion would reduce the number of flexible copy volumes maintained, thereby potentially freeing up memory in the system for other purposes.","Turning to , one or more methods are illustrated for handling different flexible copy volumes having different respective sets of operations as provided herein. While these methods are illustrated and described below as a series of acts or events, the present disclosure is not limited by the illustrated ordering of such acts or events. For example, some acts may occur in different orders and\/or concurrently with other acts or events apart from those illustrated and\/or described herein. In addition, not all illustrated acts may be required. Further, one or more of the acts depicted herein may be carried out in one or more separate acts or phases.","In , example method  starts at  when a first flexible copy volume of a parent volume is generated. The first flexible copy volume may be based upon a snapshot copy volume and\/or another (preexisting) flexible copy volume, for example, where the parent volume comprises the state of data stored therein at a particular point in time.","At , first metadata for the first flexible copy volume is stored such that the first flexible copy volume can be operated on by a first set of operations. That is, first metadata is generated to comprise the first set of operations which can be applied to the first flexible copy. In one example, this may occur substantially concurrently with the creation of other metadata associated with the first flexible copy. For example, if an inode structure is implemented (e.g., as described above with regard to ), and thus there is other metadata that, among other things, indicates which blocks of a virtual volume data of the first flexible copy volume is to be stored within, then the first metadata can be created at about the same time as and stored with this other metadata. For example, the first metadata can be part of the metadata data structure that also comprises this other metadata. It will be appreciated that this may also be true if data structures other than inode data structures are implemented. Alternatively, the first metadata may be created and stored at a time different than when other metadata of the first flexible copy volume is created and stored. Also, the first metadata may be stored in a different data structure than other metadata of the first flexible copy volume, such as in a root directory and\/or in any other suitable location. An operating system (e.g., or application utilizing the operating system), for example, can read the first metadata to determine the first set of operations (which can be applied to the first flexible copy volume), such as when initially accessing the first flexibly copy volume, for example.","At , a second flexible copy volume of the parent volume is generated. As with the first flexible copy volume, this second flexible copy volume may be based upon a snapshot copy volume and\/or another (preexisting) flexible copy volume, for example, where the parent volume comprises the state of data stored therein at a particular point in time.","At , second metadata for the second flexible copy volume is stored such that the second flexible copy volume can be operated on by a second set of operations. That is, second metadata is generated to comprise the second set of operations which can be applied to the second flexible copy. In one example, this may occur substantially concurrently with the creation of other metadata associated with the first flexible copy. For example, if an inode structure is implemented (e.g., as described above with regard to ), and thus there is other metadata that, among other things, indicates which blocks of a virtual volume data of the second flexible copy volume is to be stored within, then the second metadata can be created at about the same time as and stored with this other metadata. For example, the second metadata can be part of the metadata data structure that also comprises this other metadata. It will be appreciated that this may also be true if data structures other than inode data structures are implemented. Alternatively, the second metadata may be created and stored at a time different than when other metadata of the second flexible copy volume is created and stored. Also, the second metadata may be stored in a different data structure than other metadata of the second flexible copy volume, such as in a root directory and\/or in any other suitable location. An operating system, for example, can read the second metadata to determine the second set of operations (which can be applied to the second flexible copy volume), such as when initially accessing the second flexibly copy volume, for example.",{"@attributes":{"id":"p-0065","num":"0064"},"figref":"FIG. 9","b":["900","902"]},"At , a request is received for an operation to be performed on the flexible copy of the virtual volume, such as from a user and\/or an automated source, for example. Accordingly, at , the metadata of the flexible copy volume is read in response to the request. It will be appreciated that since the metadata associated with the flexible copy volume may pertain to more than just the operations that can be performed on the flexible copy volume, not all of the metadata associated with the flexible copy volume may be read. Rather, merely those portions of the metadata that pertain to the operations that are allowed to be performed on the flexible copy volume may be read. Then, at , a determination (e.g., by an operating system, application programming interface (API), and\/or an application residing on a node and\/or client) is made as to whether the requested operation is allowed on the flexible copy volume (e.g., by comparing the requested operation to the metadata enumerating the operations that are permitted to be performed on the flexible copy volume).","If the requested operation is allowed (\u201cYES\u201d at ), the operation is performed on the flexible copy volume at . For example, if the flexible copy volume is designated as an unrestricted flexible copy volume to which data modifications are allowed and the requested operation is to modify a data block in the unrestricted flexible copy volume, the modifications will be allowed at this point. If, however, the requested operation is not allowed (\u201cNO\u201d at ), the operation is disallowed at . For example, if the flexible copy volume is designated as a restricted flexible copy volume to which data modifications are not allowed and the requested operation is to modify a data block in the restricted flexible copy volume, the modifications will not be allowed at this point. Similarly, if the restricted flexible copy volume is used to verify data in a snapshot copy volume and the requested operation is something other than snapshot verification, then the operation will not be performed. If, on the other hand, the requested operation is snapshot verification, the operation will be allowed, and the flexible copy volume can be deleted (e.g., manually and\/or automatically) once the verification is complete, for example, to conserve resources.","The following table includes an illustrative list of operations that may be disallowed on restricted flexible copy volumes and corresponding explanations as to why the respective operations are not allowed, in one example.",{"@attributes":{"id":"p-0069","num":"0068"},"tables":{"@attributes":{"id":"TABLE-US-00001","num":"00001"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"77pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"140pt","align":"left"}}],"thead":{"row":[{"entry":"TABLE 1"},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}},{"entry":["Operation","Explanation"]},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}}]},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["Storage Creation","New LUNs cannot be created on a restricted"]},{"entry":[{},"flexible copy volume."]},{"entry":["Snapshot Creation","New Snapshot copies cannot be created on a"]},{"entry":[{},"restricted flexible copy volume"]},{"entry":["Storage deletion","Only filesystems that use a restricted flexible "]},{"entry":[{},"copy volume are allowed to be deleted. The "]},{"entry":[{},"deletion of any other LUNs in the restricted "]},{"entry":[{},"flexible copy volume is disallowed."]},{"entry":["Snapshot deletion","Deletion of snapshot copy volumes stored on a"]},{"entry":[{},"restricted flexible copy volume are disallowed."]},{"entry":["Connecting to LUNs of","Mapping the LUNs of a flexible copy volume "]},{"entry":["a restricted flexible copy","to the nodes is disallowed"]},{"entry":["volume",{}]},{"entry":["Disconnecting LUNs of","Un-mapping the LUNs of the file system copy "]},{"entry":["a restricted flexible copy","that created the flexible copy volume is not "]},{"entry":["volume","allowed"]},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}},{"entry":"Illustrative list of operations disallowed for a restricted flexible copy volume"}]}}}}},"Turning to , a block diagram of an example host node  is illustrated where the node is configured to utilize different sets of operations to operate on flexible copy volumes in accordance with one or more of the provisions set forth herein. The node  comprises a user and external applications component , an external host resident software component  (e.g., software and\/or applications), and a management component . The management component  comprises an interface component , a host entity translation component , a metadata reader , a classification component , and\/or a provisioning and snapshot operation component . These components allow the host node  to communicate with a clustered computing network , for example, as illustrated and described with respect to , for example, through a storage area network (SAN) protocol.","The user and external applications component  can be, for example, a server or application administrator or an external application that uses host management software. In some implementations the user and external application component  can make use of drive technology available from the assignee of the instant application, for example. The external host resident software  is executable on the external host node  to facilitate the functionality available from the host node .","The interface component  allows the node  to interact with users and external applications through a command line interface (CLI), application interface (API), and\/or graphical user interface (GUI), for example.","The host entity translation component  allows the node  to determine underlying LUNs and\/or data storage system resources for a given volume, file system, and\/or disk group, for example.","The metadata reader component  reads metadata from, for example, a root directory of a flexible copy volume, by interacting with the data storage system .","The classification component  detects the set of operations that can be performed on the flexible copy volume, for example, by interacting with the flexible copy volume metadata reader . Depending upon the designation of the flexible copy volume (e.g., restricted or unrestricted) as determined by the classification component , operations from the provisioning and snapshot operation component , for example, may or may not be carried out on the flexible copy volume.",{"@attributes":{"id":"p-0076","num":"0075"},"figref":"FIG. 11","b":["1100","1100","1102","1104","1106","1108","1110","1112","1100","1114"]},"In the example node , memory  may include storage locations that are addressable by the processors  and adapters for storing related software program code and data structures. The processors  and adapters may, for example, include processing elements and\/or logic circuitry configured to execute the software code and manipulate the data structures. The operating system , portions of which are typically resident in memory  and executed by the processing elements, functionally organizes the node  by invoking storage operations in support of a file service implemented by the node. It will be apparent to those skilled in the art that other processing and memory means, including various computer readable media, may be used for storing and executing program instructions pertaining to the inventive techniques described herein.","The network adapter  includes the mechanical, electrical and signaling circuitry needed to connect the node  to a client (e.g., the client  in ) over a computer network, which may comprise, among other things, a point-to-point connection or a shared medium, such as a local area network. The client may be a general-purpose computing device, such as a desktop computer, configured to execute applications. Similarly, the cluster access adapter allows the node to send and\/or receive communications to\/from a cluster fabric (e.g.,  in ).","The storage adapter  cooperates with the storage operating system executing on the node to access information requested by the client. The information may be stored on any type of attached array of writeable media such as magnetic disk drives, flash memory, and other similar media adapted to store information (e.g.,  in ). The storage adapter  includes input\/output (I\/O) interface circuitry that couples to the disks over an I\/O interconnect arrangement, such as a conventional high-performance, Fibre Channel serial link topology, for example. The information is retrieved by the storage adapter  and, if necessary, processed by the processors  (or the adapter  itself) prior to being forwarded over the system bus  to the network adapter , where the information is formatted into a packet and returned to the client.","It will be appreciated that processes, architectures and\/or procedures described herein can be implemented in hardware, firmware and\/or software. It will also be appreciated that the provisions set forth herein may apply to any type of special-purpose computer (e.g., file server, filer and\/or storage serving appliance) and\/or general-purpose computer, including a standalone computer or portion thereof, embodied as or including a data storage system. Moreover, the teachings herein can be configured to a variety of data storage system architectures including, but not limited to, a network-attached storage environment and\/or a storage area network and disk assembly directly attached to a client or host computer. Data storage system should therefore be taken broadly to include such arrangements in addition to any subsystems configured to perform a storage function and associated with other equipment or systems.","In some embodiments, methods described and\/or illustrated in this disclosure may be realized in whole or in part on computer-readable media. Computer readable media can include processor-executable instructions configured to implement one or more of the methods presented herein, and may include any mechanism for storing this data that can be thereafter read by a computer system. Examples of computer readable media include hard drives (e.g., accessible via network attached storage (NAS)), Storage Area Networks (SAN), volatile and non-volatile memory, such as read-only memory (ROM), random-access memory (RAM), EEPROM and\/or flash memory, CD-ROMs, CD-Rs, CD-RWs, DVDs, cassettes, magnetic tape, magnetic disk storage, optical or non-optical data storage devices and\/or any other medium which can be used to store data. Computer readable media may also comprise communication media, which typically embodies computer readable instructions or other data in a modulated data signal such as a carrier wave or other transport mechanism (e.g., that has one or more of its characteristics set or changed in such a manner as to encode information in the signal). The computer readable medium can also be distributed (e.g., using a switching fabric, such as used in computer farms) over a network-coupled computer system so that computer readable code is stored and executed in a distributed fashion.","Another embodiment (which may include one or more of the variations described above) involves a computer-readable medium comprising processor-executable instructions configured to apply one or more of the techniques presented herein. An exemplary computer-readable medium that may be devised in these ways is illustrated in , where the implementation  comprises a computer-readable medium  (e.g., a CD-R, DVD-R, or a platter of a hard disk drive), on which is encoded computer-readable data . This computer-readable data  in turn comprises a set of computer instructions  configured to operate according to the principles set forth herein. In one such embodiment, the processor-executable instructions  may be configured to perform a method , such as the method  of  or method  of , for example. Many such computer-readable media may be devised by those of ordinary skill in the art that are configured to operate in accordance with the techniques presented herein.","Moreover, unless specified to the contrary, the term \u201cor\u201d is intended to mean an inclusive \u201cor\u201d rather than an exclusive \u201cor\u201d, and the articles \u201ca\u201d and \u201can\u201d are generally to be construed to comprise \u201cone or more\u201d. Furthermore, to the extent that the terms \u201cincludes\u201d, \u201chaving\u201d, \u201chas\u201d, \u201cwith\u201d, or variants thereof are used, such terms are intended to be inclusive in a manner similar to the term \u201ccomprising\u201d."],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"DESCRIPTION OF THE DRAWINGS","p":[{"@attributes":{"id":"p-0010","num":"0009"},"figref":"FIG. 1"},{"@attributes":{"id":"p-0011","num":"0010"},"figref":"FIG. 2"},{"@attributes":{"id":"p-0012","num":"0011"},"figref":"FIG. 3"},{"@attributes":{"id":"p-0013","num":"0012"},"figref":"FIG. 4"},{"@attributes":{"id":"p-0014","num":"0013"},"figref":"FIG. 5"},{"@attributes":{"id":"p-0015","num":"0014"},"figref":"FIG. 6"},{"@attributes":{"id":"p-0016","num":"0015"},"figref":"FIG. 7"},{"@attributes":{"id":"p-0017","num":"0016"},"figref":"FIGS. 8 and 9"},{"@attributes":{"id":"p-0018","num":"0017"},"figref":"FIG. 10"},{"@attributes":{"id":"p-0019","num":"0018"},"figref":"FIG. 11"},{"@attributes":{"id":"p-0020","num":"0019"},"figref":"FIG. 12"}]},"DETDESC":[{},{}]}
