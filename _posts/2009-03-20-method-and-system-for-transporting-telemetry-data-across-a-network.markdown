---
title: Method and system for transporting telemetry data across a network
abstract: A method for transporting telemetry data involves receiving a request from a client in a first network. The client is registered with a data transport service executing in a second network. The request includes an authentication credential for the client, a message including telemetry data, and a message priority. The method further involves authenticating the request using the authentication credential. The method further involves parsing the request to obtain and subsequently execute a command for storing the message in a physical queue of the second network. The physical queue is associated with a back-end service executing in the second network. A virtual queue maintains entries for messages stored in the physical queue that were sent from the first network to the second network. Another virtual queue maintains entries for messages stored in the physical queue that were sent from the second network to the first network.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08732258&OS=08732258&RS=08732258
owner: Oracle America, Inc.
number: 08732258
owner_city: Redwood City
owner_country: US
publication_date: 20090320
---

{"@attributes":{"id":"description"},"BRFSUM":[{},{}],"heading":["BACKGROUND","SUMMARY","DETAILED DESCRIPTION","Registration","Storing a Message","Retrieving a Message","Deleting a Message","Two-Way Communication","Scalability"],"p":["Network data centers house a collection of databases, file servers, application servers, and other components to efficiently provide information technology services to a host of remote clients. As such, a variety of remotely-executing client applications and services routinely send requests to and receive responses from the centralized network of the data center. To ensure a suitable quality of service, data centers monitor client-side components as well as the components that are localized to the data center. To that end, data centers are interested in receiving telemetry data pertaining to the measurement and reporting of client-side operations.","In general, in one aspect, the invention relates to a method for transporting telemetry data across a network. The method includes receiving a request from a first client application executing on a first client operatively connected to a first network, where the first client is registered with a data transport service. The data transport service is executing on a first physical node operatively connected to a second network. The request includes an authentication credential for the first client, a message comprising telemetry data, and a message priority for the message. The method further includes authenticating the request using the authentication credential. The method further includes parsing the request to obtain a command for storing the message in a physical queue associated with a back-end service. The physical queue is located in a message repository operatively connected to the second network. The back-end service is executing on a second physical node operatively connected to the second network. The method further includes storing the message in the physical queue. The method further includes storing an entry for the message in a first virtual queue, where the first virtual queue is associated with the physical queue and the back-end service. The first virtual queue includes entries for messages received from the first client application. The entry comprises the message priority. A second virtual queue is also associated with the physical queue and the back-end service. The second virtual queue includes entries for messages received from a second client application executing on a second client operatively connected to the second network. The second client is registered with the data transport service. The second client application is associated with the back-end service.","In general, in one aspect, the invention relates to a system for transporting telemetry data across a network. The system includes a first client operatively connected to a first network. The client hosts a first client application which is configured to send a request to a data transport service executing on a first physical node operatively connected to a second network, where the first request comprises an authentication credential for the first client, a message comprising telemetry data, and a message priority for the message. The first client is registered with the data transport service. The system further includes the data transport service executing on the first physical node operatively connected to the second network. The data transport service includes a physical queue, where the physical queue is associated with a back-end service executing on a second physical node operatively connected to the second network. The data transport service further includes a first virtual queue, where the first virtual queue is associated with the physical queue and the back-end service, and where the first virtual queue comprises entries for messages received from the first client application. The data transport service further includes a second virtual queue, where the second virtual queue is associated with the physical queue and the back-end service. The second virtual queue includes entries for messages received from a second client application executing on a second client operatively connected to the second network. The second client is registered with the data transport service and associated with the back-end service. The data transport service is configured to receive the request from the first client application. The data transport service is further configured to authenticate the request using the authentication credential. The data transport service is further configured to parse the request to obtain a command for storing the message in the physical queue. The data transport service is further configured to store the message in the physical queue. The data transport service is further configured to store an entry for the message in the first virtual queue, where the entry comprises the message priority. The system further includes the back-end service executing on the second physical node operatively connected to the second network.","In general, in one aspect, the invention relates to a computer-readable storage medium comprising executable instructions for transporting telemetry data across a network, wherein executable instructions comprise instructions: receive a first request from a first client application executing on a first client operatively connected to a first network, wherein the first client is registered with a data transport service executing on a first physical node operatively connected to a second network, and wherein the first request comprises a first authentication credential for the first client, a first message comprising telemetry data, and a first message priority for the first message; authenticate the first request using the first authentication credential; parse the first request to obtain a first command for storing the first message in a physical queue associated with a back-end service, wherein the physical queue is stored in a message repository operatively connected to the second network, and wherein the back-end service is executing on a second physical node operatively connected to the second network; store the first message in the physical queue; and store a first entry for the first message in a first virtual queue, wherein the first virtual queue is associated with the physical queue and the back-end service, wherein the first virtual queue comprises entries for messages received from the first client application, and wherein the first entry comprises the first message priority, wherein a second virtual queue is associated with the physical queue and the back-end service, wherein the second virtual queue comprises entries for messages received from a second client application executing on a second client operatively connected to the second network, wherein the second client is registered with the data transport service, and wherein the second client application is associated with the back-end service, wherein the first virtual queue only comprises messages received from clients located in a first geographic location, wherein the second virtual queue only comprises messages received from clients located in a second geographic location wherein the first client is located in the first geographic location, and wherein the first request and the second request are Hypertext Transport Protocol (HTTP) requests.","Other aspects of the invention will be apparent from the following description and the appended claims.","Specific embodiments of the invention will now be described in detail with reference to the accompanying figures. Like elements in the various figures are denoted by like reference numerals for consistency.","In the following detailed description of embodiments of the invention, numerous specific details are set forth in order to provide a more thorough understanding of the invention. However, it will be apparent to one of ordinary skill in the art that the invention may be practiced without these specific details. In other instances, well-known features have not been described in detail to avoid unnecessarily complicating the description.","In general, embodiments of the invention provide a system and method for transporting telemetry data across a network. More specifically, embodiments of the invention are directed to providing two-way communication and message queuing functionalities between clients in separate networks. Further, embodiments of the invention relate to a secure, authenticated, and scalable method for transporting telemetry data across a network. In one or more embodiments of the invention, the invention may be implemented using a priority First-In First-Out (FIFO) queue, provides reliable message delivery, and support binary data, text data, other data formats, or any combination thereof. Further, in one or more embodiments of the invention, messages of any size are capable of being delivered.",{"@attributes":{"id":"p-0014","num":"0013"},"figref":"FIG. 1","b":["102","100","102","102","102"]},"In one or more embodiments of the invention, the data transport service () is configured to store a message received from one or more clients (not shown). The message may include telemetry data pertaining to measurement or logging information associated with a client. For example, telemetry data may include, but is not limited to, client configuration information or a logging of hardware fault events. Further, the telemetry data may be in binary or text format. In one or more embodiments of the invention, the message is designated, as a function of the type of the telemetry data in the message, for a particular back-end service (not shown) configured to process that type of telemetry data. Though not shown, the back-end service may be a service executing in a data center that is configured to process or consume telemetry data of a specified type. For example, the back-end service may be configured to specifically process telemetry data pertaining to hardware fault events.","Accordingly, in one or more embodiments of the invention, the data transport service () is configured to receive a request for storing a message. The message to be stored is sent along with the request for storing the message. The data transport service () is further configured to provide the message to a message repository () for storage.","Further, in one or more embodiments of the invention, the data transport service () is configured to receive a request for retrieving a stored message. The data transport service () may be further configured to retrieve the stored message from the message repository () and subsequently provide the message in a response to the request.","In one or more embodiments of the invention, the message repository () is configured to receive and subsequently store a message. Specifically, the message repository () includes a physical queue () in association with a back-end service (not shown) for purposes of storing the message. Further, in one or more embodiments of the invention, the message repository () is configured to retrieve a stored message from the physical queue ().","In one or more embodiments of the invention, the data transport service () includes at least two virtual queues (, ). In general, virtual queues (, ) allows for the filtering of messages stored in the physical queue () based on some defined attribute. As such, in one or more embodiments of the invention, an entry in the virtual queue (, ) correspond to a message stored in the physical queue () of the message repository (). In one or more embodiments of the invention, a virtual queue (, ) is implemented using a container-type data structure that is capable of manipulation via insert entry and delete entry operations. Further, the entries stored in the virtual queue (, ) may be maintained in a sorted order according to one or more attributes defined by a data structure definition used to implement a virtual queue entry.","In one or more embodiments of the invention, a virtual queue (, ) is associated with one or more particular requirements which the entries stored in the virtual queue must satisfy. For example, the origination of a message may be an attribute to filter messages stored in a physical queue () into one or more virtual queues (, ). As such, in one or more embodiments of the invention, a requirement of a first virtual queue () is that a message corresponding with a virtual queue entry is a message that originated in a network different than the network upon which the data transport service () is hosted (i.e., the network upon which the physical node () is operatively connected). Further, in one or more embodiments of the invention, a requirement of a second virtual queue () is that the message corresponding with virtual queue entry is a message that originated in the same network as the network upon which the data transport service () is hosted. Those skilled in the art will appreciate that virtual queues may be configured to impose various other requirements upon a message for which the virtual queue stores an entry. For example, in one or more embodiments of the invention, a virtual queue may further require a message to originate from a particular geographic location. As such, a first virtual queue may maintain messages originating from clients in, for example, North America, whereas a second virtual queue may maintain messages originating from clients in, for example, Europe. In another example, in accordance with one or more embodiments of the invention, a virtual queue may further require a message to originate from a particular client.",{"@attributes":{"id":"p-0021","num":"0020"},"figref":["FIG. 2","FIG. 2","FIG. 2"]},"In Step , a request is received for registering a client with the data transport service. In one or more embodiments of the invention, registration of the client with the data transport service is a prerequisite for that client to store a message using the data transport service.","In Step , the client is registered with the data transport service. In one or more embodiments of the invention, a separate registration service handles the registration on behalf of the data transport service. In one or more embodiments of the invention, one or more authentication tokens are obtained from the registration service and provided to the client as a result of the client being successfully registered. The authentication tokens may include, but are not limited to, a unique client identifier issued by the registration service for the client and a public key corresponding to a private key maintained by the data transport service and\/or the registration service.","In one or more embodiments of the invention, the registration service creates and maintains an entry, as defined by a data structure definition, that includes the authentication tokens issued to the client upon registration. Further, the registration service may maintain the entry for the client in a table data structure that uses unique client identifiers as a table index.","In Step , a request for storing a message is received from the registered client. In one or more embodiments of the invention, the request includes at least one authentication credential for the client, a message including telemetry data, and a message priority for the message. In one or more embodiments of the invention, the at least one authentication credential may include, but is not limited to, a unique client identifier and a client signature generated using the public key provided to the client at the time of registration (see Step ). In one or more embodiments of the invention, the message priority is a priority for the message as specified by the client.","In Step , the request for storing the message is authenticated. In one or more embodiments of the invention, the unique client identifier and client signature (described above in Step ) are used in authenticating the message. In one or more embodiments of the invention, the unique client identifier provided with the request should match with an entry for a registered client as maintained by the registration service. The client signature generated using a public key issued to the client may be validated using a corresponding private key maintained by the registration service.","In Step , the request is parsed to obtain a command for storing the message in a physical queue associated with a specified back-end service. In Step , the message provided with the request is stored in the physical queue in accordance with the obtained command (from Step ). In one or more embodiments of the invention, the message is stored as a file on a computer-readable storage medium.","In one or more embodiments of the invention, the process of receiving a request, authenticating the request, and parsing the request (i.e., Steps , , and ) is further subject to an authorization mechanism. As a function of a registration with the data transport service, a client is granted one or more privileges. For example, a first client may only have a \u201cPOST\u201d privilege thereby allowing the client to store messages in the message repository. A second client may only have \u201cGET\u201d and \u201cDELETE\u201d privileges thereby allowing the client to retrieve and delete messages that are stored in the message repository. A third client may have all three privileges (\u201cPOST\u201d, \u201cGET\u201d, \u201cDELETE\u201d). Accordingly, in one or more embodiments of the invention, authorization allows the data transport service to control the transfer of data across a network through the granting of particular privileges to clients.","In Step , an entry is created for the message in a virtual queue using the message priority. In one or more embodiments of the invention, the virtual queue is associated with the specified back-end service and the corresponding physical queue (as described in relation to ). Further, in one or more embodiments of the invention, the entries of a virtual queue may be maintained in an ordering according to message priorities. As such, the entry created for the message is positioned in the virtual queue as a function of the message priority specified in the request to store the message. Those skilled in the art will appreciate that various implementations of the invention may not include virtual queues and, in such cases, Step  is not performed.",{"@attributes":{"id":"p-0030","num":"0029"},"figref":["FIG. 3","FIG. 3","FIG. 3"]},"In Step , a request for retrieving a message is received from a dispatch service. In one or more embodiments of the invention, registration with the data transport service of the client executing the dispatch service is a prerequisite for the client to receive a message retrieved using the data transport service.","In Step , the request for retrieving the message is authenticated. In one or more embodiments of the invention, the mechanism by which this is accomplished is similar to that described above with regards to  and Step .","In Step , the request is parsed to obtain a command for retrieving the message from a physical queue associated with a specified back-end service (as described in relation to ).","In performing the command obtained in Step , a highest priority message stored in a physical queue is determined using a virtual queue associated with the physical queue in Step . In one or more embodiments of the invention, the determination of the highest priority message is achieved using any one of well-known sort functions to sort the virtual queue with respect to the message priority defined for each entry.","Alternatively, in one or more other embodiments of the invention, a sorting of the virtual queue is not necessary if the entries of the virtual queue are maintained in an order according to the message priority. As such, if the entries of the virtual queue are maintained in an order of ascending message priority, then the highest priority message corresponds to the last entry in the virtual queue. However, if the entries of the virtual queue are maintained in an order of descending message priority, then the highest priority message corresponds to the first entry in the virtual queue. Those skilled in the art will appreciate that if the implementation of the invention does not include a virtual queue(s), then the portions of Step  related to virtual queue(s) are not performed.","Further, those skilled in the art will appreciate that criteria other than message priority may be used for determining a message stored in a physical queue (i.e., Step ). For example, in one or more embodiments of the invention, the client may determine whether a message that is being sent is assigned a message priority. Accordingly, determination of messages stored in the physical queue may be made using an assigned message priority which may override the default First In First Out (FIFO) scheme.","Returning to , the highest priority message determined in Step  is retrieved from the physical queue in Step . In Step , a response to the request for retrieving a message is sent using the message retrieved in Step . In one or more embodiments of the invention, the response is sent to the dispatch service that originated the request for retrieving the message.","In Step , a new request for deleting the retrieved message of Step  is received. In Step , the retrieved message of Step  is deleted from the physical queue. In addition, in one or more embodiments of the invention, the entry in the virtual queue that corresponds with the message is also deleted (if virtual queues are used in the implementation of the invention). In one or more embodiments of the invention, the message deletion mechanism (i.e., Steps  and ) in the data transport service is contingent on the success of a message retrieval (i.e., Step ) for the same message. Accordingly, the message is not deleted until the message is successfully retrieved. In one embodiment of the invention, the aforementioned message deletion mechanism supports the reliable message delivery.","As described with regards to , one or more embodiments of the invention require the sending of a request from one networked entity to another networked entity. In one or more embodiments of the invention, requests are sent using Hypertext Transport Protocol (HTTP). Further, in one or more embodiments of the invention, requests sent over HTTP are further secured using an encrypted Secure Sockets Layer (SSL) or Transport Layer Security (TLS).","In one or more embodiments of the invention, the functionalities of the data transport service are embodied as resources in a Representational State Transfer (REST) architecture. Further, in a REST architecture, RESTful resources are identifiable using Uniform Resource Locators (URLs). For example, in the URL https:\/\/dts-server.domain\/v1\/queue\/telemetry-type1\/Americas, \u201ctelemetry-type 1\u201d specifies a particular physical queue and \u201cAmericas\u201d specifies a particular virtual queue. Similarly, in the URL https:\/\/dts-server.domain\/v1\/queue\/telemetry-type1\/message\/1, the last parameter \u201c1\u201d serves as a unique message identifier for specifying a particular message stored in the physical queue \u201ctelemetry-type1.\u201d","Accordingly, a client access a RESTful resource by posting a HTTP command to the URL associated with the resource. For example, with regards to the URL https:\/\/dts-server.domain\/v1\/queue\/telemetry-type1\/, a client can issue a HTTP POST request to the URL for purposes of storing a message in the physical queue \u201ctelemetry-type1.\u201d As a result of processing the request, the message provided with the HTTP POST request is stored with the data transport service and associated with a unique message identifier. For purposes of continuing this example, assume the message identifier issued for the newly-stored message is 3. Subsequently, the message identifier can be specified when making HTTP GET and HTTP DELETE requests to access the stored message. As such, by posting a HTTP GET request to URL https:\/\/dts-server.domain\/v1\/queue\/telemetry-type1\/message\/3, the specification of the parameter \u201c3\u201d serves to identify the particular message for purposes of retrieving the message. Similarly, a HTTP DELETE request posted to the same exact URL specifies the message for purposes of deleting the message. Alternatively, the client may also post a HTTP POST request to the URL https:\/\/dts-server.domain\/v1\/queue\/telemetry-type1\/pop to get the next available message from the physical queue \u201ctelemetry-type1.\u201d In such an instance, according to one or more embodiments of the invention, the data transport service will process the request appropriately in accordance with a FIFO policy or a message priority policy contingent upon the existence of any prioritized messages stored in physical queue \u201ctelemetry-type1.\u201d",{"@attributes":{"id":"p-0042","num":"0041"},"figref":["FIG. 4","FIG. 4"],"b":["400","402","400","402","426"]},"The customer network () includes two clients (, ). Client a () hosts a Client Application a (). Client d () hosts an instance of a dispatch service (-).","The data center network () includes a physical node () hosting a data transport service (). The data center network () further includes a message repository () and a physical node () hosting a registration service (). These aforementioned components (, , , , ) may be characterized as sitting in a first tier of the data center network (). Further, the data transport service () may effectively serve as a proxy for communications between the customer network () and a second tier of the data center network ().","The second tier of the data center network () includes two clients (, ). Client c () hosts a Client Application c (). Client b () hosts an instance of the dispatch service (-). The second tier of the data center network () further includes a physical node () hosting a back-end service ().","For purposes of describing a use of the data transport service in transporting telemetry data between networked components, assume that newly-deployed Client Application a () situated in the customer network () keeps a log of hardware fault events. Further, assume that the back-end service () situated in the data center network () is configured to analyze such a log. A sequence of steps in accordance with one or more embodiments of the invention enables the sending of the log information from the client () in the customer network () to the service () in the data center network ().","Initially, the newly-deployed Client Application a () is required to register Client a () with the data transport service () situated in the first tier of the data center network (). As such, the Client Application a () sends a request for registration to the data transport service (). The data transport service (), in turn, requests one or more authentication tokens from the registration service (). In processing the request from the data transport service (), the registration service () determines a unique client identifier and a public key for Client a (). Having obtained the described authentication tokens from the registration service (), the data transport service () provides a response to the request for registration that includes the authentication tokens to Client a (). Client a () is now registered with the data transport service () and capable of sending telemetry data using the data transport service in a secure manner.","With registration complete, Client Application a () is now prepared to transmit the telemetry log data to the data transport service () via a request. As such, Client Application a () sends a request for storing a message including the telemetry log data with the data transport service (). The request further includes the unique client identifier issued at the time of registration and a client signature generated using the issued public key, which are presented as authentication credentials on behalf of Client a (). The request further includes a message priority for the message as determined by Client Application a ().","In receiving the request, the data transport service () first authenticates the request. To authenticate the request, the data transport service () uses the unique client identifier to obtain a private key corresponding with the issued public key from the registration service (). Using the private key, the data transport service () validates the client signature.","Having authenticated the request, the data transport service () next parses the request to determine a command. In this instance, the command is a command for storing the provided message. Accordingly, the message is provided by the data transport service () to the message repository () where the message is stored in a physical queue (). Further, a corresponding entry is entered into a virtual queue () of the data transport service () that is maintained to store entries for messages originating from clients in the customer network (). As described in relation to , the message priority specified for the message by Client Application a () is used to place the entry for the message into the virtual queue ().","Assuming it is registered and therefore has the proper credentials (as discussed above), the dispatch service (-) hosted on Client b () is configured to retrieve a stored message using the data transport service (). Specifically, in one embodiment of the invention, the dispatch service (-) sends a request for retrieving a stored message to the data transport service (). The request includes authentication credentials such as a unique client identifier for Client b () and a client-generated signature using a public key issued for Client b () at the time of its registration with the data transport service ().","Having received the request for retrieving a message, the data transport service () authenticates the request in a manner similar to that discussed above with respect to the message received from client application a (). The data transport service then proceeds to parse the request to determine a command. In this instance, the command is a command for retrieving a stored message. Accordingly, the data transport service () uses the entries in the virtual queue () to determine the message originating from the customer network () that has the highest message priority. The data transport service () then obtains the message as determined from the physical queue and provides it to the dispatch service (-) in a response. The dispatch service (-) then, in turn, provides the retrieved message containing the telemetry data to the appropriate back-end service () for processing.","The above-described steps of client registration, message storage, message retrieval, and message processing illustrate a logical interconnectivity between the described components. For example, on the client side, Client Application a () is specifically configured to send via request a message that includes a particular type of telemetry data. The particular type of telemetry data is specifically what the back-end service () is configured to process. The data transport service () and the message repository (), situated in between Client Application a () and the back-end service (), are specifically configured to categorically maintain messages in a distinct physical queue () and a virtual queue (, ) based on whether messages contain telemetry data specifically designated for processing by a back-end service () for which those queue structures (, , ) are associated with.  illustrates, in part, how an embodiment of the invention may be configured when there is more than one operative back-end service.","Returning to , the data transport service () is further configured to receive a request for deleting a stored message. In such an instance, the request may originate from a dispatch service (-) that has, as described above, retrieved the message with an earlier request-response exchange for a client (). As such, the dispatch service (-) may send a request for message deletion to the data transport service () once the telemetry data included in the message has been processed and consumed by the back-end service (). The request includes authentication credentials such as a unique client identifier and a client-generated signature of client b ().","In receiving the request for message deletion from the dispatch service (-), the data transport service (), authenticates the request as a function of the authentication credentials provided with the request. Once the request is authenticated, the data transport service () determines a message for deletion based upon the highest message priority among the entries in the virtual queue (). Once a message is determined for deletion using the virtual queue (), the data transport service () requests the deletion of the message from the appropriate physical queue () in the message repository (). The corresponding entry for the message in the virtual queue is likewise deleted.","The deletion mechanism, as described, is contingent on whether the back-end service () has in fact received the telemetry data. As such, the message persists in the message repository () until the dispatch service (-) sends the request for deletion. This further accounts for the possibility that the back-end service may fail to process the telemetry data. In such a case, the persistence of the message both in the physical queue () of the message repository () and the virtual queue () in the data transport service () allow for at least a subsequent attempt.","Similar to the manner in which a telemetry message is transmitted from Client a () in the customer network () to Client b () in the second tier of the data center network (), the data transport service includes functionality to enable communication originating from a client in the second tier of the data center network () to a client situated in the customer network (). For example, Client Application c () is configured, similar to Client Application a (), to send a request including a message for storage to the data transport service (). Further, the instance of the dispatch service (-) hosted on Client d () is configured, similar to the dispatch service (-) hosted on Client b (), to send a request for retrieving a stored message from the data transport service (). In addition, the data transport service () maintains a second virtual queue () which enables the priority determination and ordering of messages originating from the second tier in the data center network ().",{"@attributes":{"id":"p-0058","num":"0057"},"figref":["FIG. 5","FIG. 5","FIG. 4","FIG. 5"],"b":["518","520","502","508","500","506"]},"Specifically,  includes two distinct customer networks (, ). Customer Network a () includes a Client a () configured to host Client Application a (). Customer Network z () includes a Client z () configured to host Client Application z (). Further,  includes a data center network (). The customer networks (, ) and the data center network () are operatively connected () such that data may be transmitted over a physical and\/or a wireless connection. The data center network () may be described as having a first tier and a second tier. The first tier of the data center network () includes a Physical Node a (-) hosting a first instance of a data transport service (-). The first tier of the data center network further includes a Physical Node z (-) hosting a second instance of the data transport service (-). In addition, a message repository () and a registration service () are further included in the first tier of the data center network (). A first load balancer (-) is provided to route requests originating from either customer network (, ) to one of the instances of the data transport service (-, -). A second load balancer (-) is provided to route requests originating from the second tier of the data center network () to one of the instances of the data transport service (-, -).","The second tier of the data center network () includes two physical nodes (-, -) which account for the operation of two different back-end services (, ). Physical Node a (-) hosts a Back-End Service a () and a first instance of a dispatch service (-). Physical Node z (-) hosts a Back-End Service z () and a second instance of the dispatch service (-).","Customer Network a (), Client a (), Client Application a (), Physical Node a (-), the first instance of the data transport service (-) hosted on Physical Node a (-), Physical Node a (-), Back-End Service a (), and the first instance of the dispatch service (-) hosted on Physical Node a (-) are all logically related in at least the manner described with relation to . In particular, Client Application a () is configured to send a request with a message including telemetry data of a certain classification. Further, Back-End Service a () is configured to process telemetry data specifically of that same classification. In addition, the data transport service (-) and the message repository () are specifically configured to maintain messages in a distinct physical queue (not shown) and a virtual queue (not shown) based on whether the messages includes telemetry data that is specifically designated for processing by the corresponding back-end service (). For purposes of clarity, these components are collectively be referred to as Telemetry Network a.","Customer Network z (), Client z (), Client Application z (), Physical Node z (), the second instance of the data transport service (-) hosted on Physical Node z (), Physical Node z (), Back-End Service z (), and the second instance of the dispatch service (-) hosted on Physical Node z () are interrelated with each other in at least the same manner as Telemetry Network a. For purposes of clarity, these components are collectively be referred to as Telemetry Network z.","An examination of Telemetry Network a and Telemetry Network z reveals two common functional components of importance: the registration service () and the message repository (). The registration service () provides client registration functionality in service of clients in both telemetry networks. Similarly, the message repository () provides physical message storage functionality in service of clients in both telemetry networks. However, those skilled in the art will appreciate that Telemetry Network a and Telemetry Network z are otherwise functionally independent of each other apart from those two shared functional components (, ). For example, the two back-end services (, ) executing in the second tier of the data center network () are configured to process two distinct types of telemetry data. The two distinct types of telemetry data originate from two distinct clients (, ) operatively connected to their respective customer networks (, ). In turn, the clients (, ) each host respective client applications (, ) that are configured to generate requests for transporting telemetry data associated with the clients (, ).","While both clients transmit requests for storing messages that include telemetry data to the same first tier in the data center network (), requests are categorically routed to one physical node (-) or the other (-) as a function of the type of telemetry data and the particular back-end service (, ) configured to process that type of telemetry data. This is accomplished through the specification of physical queue names as invoked in a request directed by a RESTful resource URL. Accordingly, in the instances of both Telemetry Network a and Telemetry Network z, there is a definite logical association between a customer network client that generates telemetry data, the instance of the data transport service used to process a client-generated request transporting that client's telemetry data, and the back-end service that eventually processes that client's telemetry data. However, in part because of the virtual queuing feature of the data transport service, there is no logical overlap between the telemetry networks even when physical messages originating from both of the customer networks (, ) are stored in the same message repository (). As such, those skilled in the art will further appreciate that a data center network configuration such as the one described in embodiments of the present invention enables scalability on an order that allows for various back-end services and clients connected through a common data transport service infrastructure situated in a first tier of a data center network.","Embodiments of the invention may be implemented on virtually any type of computer regardless of the platform being used. For example, as shown in , a computer system () includes one or more processors (), associated memory () (e.g., random access memory (RAM), cache memory, flash memory, etc.), a storage device () (e.g., a hard disk, an optical drive such as a compact disk drive or digital video disk (DVD) drive, a flash memory stick, etc.), and numerous other elements and functionalities typical of today's computers (not shown). The computer () may also include input means, such as a keyboard (), a mouse (), or a microphone (not shown). Further, the computer () may include output means, such as a monitor () (e.g., a liquid crystal display (LCD), a plasma display, or cathode ray tube (CRT) monitor). The computer system () may be connected to a network () (e.g., a local area network (LAN), a wide area network (WAN) such as the Internet, or any other similar type of network) via a network interface connection (not shown). Those skilled in the art will appreciate that many different types of computer systems exist, and the aforementioned input and output means may take other forms. Generally speaking, the computer system () includes at least the minimal processing, input, and\/or output means necessary to practice embodiments of the invention.","Further, those skilled in the art will appreciate that one or more elements of the aforementioned computer system () may be located at a remote location and connected to the other elements over a network. Further, embodiments of the invention may be implemented on a distributed system having a plurality of nodes, where each portion of the invention may be located on a different node within the distributed system. In one embodiment of the invention, the node corresponds to a computer system. Alternatively, the node may correspond to a processor with associated physical memory. The node may alternatively correspond to a processor with shared memory and\/or resources. Further, software instructions to perform embodiments of the invention may be stored on a computer readable medium such as a compact disc (CD), a diskette, a tape, or any other medium or device capable of storing software instructions in a computer readable format.","While the invention has been described with respect to a limited number of embodiments, those skilled in the art, having benefit of this disclosure, will appreciate that other embodiments can be devised which do not depart from the scope of the invention as disclosed herein. Accordingly, the scope of the invention should be limited only by the attached claims."],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"BRIEF DESCRIPTION OF DRAWINGS","p":[{"@attributes":{"id":"p-0007","num":"0006"},"figref":"FIG. 1"},{"@attributes":{"id":"p-0008","num":"0007"},"figref":"FIGS. 2 and 3"},{"@attributes":{"id":"p-0009","num":"0008"},"figref":"FIGS. 4 and 5"},{"@attributes":{"id":"p-0010","num":"0009"},"figref":"FIG. 6"}]},"DETDESC":[{},{}]}
