---
title: Managing sensor and actuator data for a processor and service processor located on a common socket
abstract: Illustrated is a system and method that includes a processor and service processor co-located on a common socket, the service processor to aggregate data from a distributed network of additional service processors and processors both of which are co-located on an additional common socket. The system and method also includes a first sensor to record the data from the processor. The system and method also includes a second sensor to record the data from a software stack. The system and method further includes a registry to store the data.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08984257&OS=08984257&RS=08984257
owner: Hewlett-Packard Development Company, L.P.
number: 08984257
owner_city: Houston
owner_country: US
publication_date: 20100406
---

{"@attributes":{"id":"description"},"BRFSUM":[{},{}],"heading":["CROSS REFERENCE TO RELATED APPLICATIONS","BACKGROUND","DETAILED DESCRIPTION"],"p":["This is non-provisional patent application related to U.S. patent application Ser. No. 12\/243,111 titled \u201cCoordinated Management In Virtualized Systems Using Management Brokers And Management Channels\u201d that was filed on Oct. 1, 2008, and which is incorporated by reference in its entirety.","Service processors are processors, or other types of integrated circuits, that are used to manage or co-manage, alongside or part of one or more general purpose processors, specific functionality in a computer system. This functionality may include computer system diagnostics, power resource management, and remote computer system configuration and management. There is no direct communication between service processors, that is the service processors are horizontally and\/or vertically silo-ed. Some example service processors include Hewlett-Packard Company's INTEGRATED LIGHTS OUT\u2122 (iLO) series of service processors.","Vertically silo-ed means that a separate infrastructure exists for monitoring the hardware, virtualization, and application stacks. Horizontal silo-ed means that there is no direct communication among the peers, as a result the aggregation and correlation is performed at a centralized location. A peer is a service processor. This central location may be a management computer system or management blade.","Monitoring may involve the use of various hardware (HW) and\/or Software (SW) stack sensor and actuators that monitor the functionality of the HW\/SW stacks. These sensors and actuators may be used in the aforementioned computer system diagnostics, power resource management, and remote computer system configuration and management.","Illustrated is a system and method for resource management for unified and automated monitoring across the hardware and software stacks in a distributed system. This system and method may be used to manage vertically and horizontally silo-ed HW\/SW stacks. Manage, as used herein, includes recording and making available for display sensor and actuator data relating to the HW\/SW stacks. The overall system and method includes: (i) federated registry and proxy services for automating the discovery of sensors and actuators across HW\/SW stacks and node boundaries and dynamic routing of queries to these sensors and actuators; (ii) distributed brokers for executing monitoring correlation and aggregation policies in a scalable manner. The system and method is instantiated in the service processor and in a special virtual platform appliance on every node.",{"@attributes":{"id":"p-0027","num":"0026"},"figref":"FIG. 1","b":["100","107","106","106","101","101","103","104","101","102","104","105","105","108"]},{"@attributes":{"id":"p-0028","num":"0027"},"figref":"FIG. 2","b":["106","106","201","201","203","202","106","201","202","201","202","202","204"]},{"@attributes":{"id":"p-0029","num":"0028"},"figref":"FIG. 3","b":["300","301","302","0","303","304","203","301","304","302","0","303","301","302","305","306","307","305","306","307","307","307","302","201","0","303","308","0","303","302","302","302"]},"Further illustrated, is the service processor helper  that acts as a platform virtual appliance to allow the service processor  to manage the HW\/SW stack of the CPU . Shown is the helper registry and proxy services  that is responsible for the: (i) auto-discovery of sensors and actuators across the HW\/SW stack, (ii) subsequent registration of the individual namespaces of these sensors and actuators, and (iii) once registered, doing a dynamic redirection of query calls (i.e., proxy functionality) to the appropriate sensors and actuators in the socket . On top of the helper registry and proxy services  exists a helper broker  responsible for executing, monitoring correlation and aggregation policies in a scalable and coordinated manner. These policies relate to one or more of the guest VM . The helper broker  and helper registry and proxy service  are used to resolve vertical silos across the HW\/SW layer of the CPU  (i.e., a local domain) through the monitoring of sensors and actuators within the management domain of the CPU . This registration process may be repeated periodically using a lease-based mechanism so as to support dynamism occurring in the system (e.g., VMs entry\/exit\/migrations, HW upgrades etc.).","Additionally shown is the firmware  that includes the console , service processor broker , service processor registry and proxy services , and platform sensors and actuator . The console  allows users of the system and method illustrated herein to monitor and manage the HW\/SW stack of, for example, the enclosures - through the use of a dashboard, GUI, CLI, internet browser, or other suitable interface. This console  facilitates this management capability through the use of a network connection  that utilizes a protocol such as a Hyper Text Transfer Protocol (HTTP). Also shown is a service processor broker  responsible for executing, monitoring correlation and aggregation policies in a scalable and coordinated manner. These policies relate to one of more hypervisors . Further shown, is a service processor registry and proxy service module  that is responsible for discovering and registering the sensors and actuators in the distributed system along with their meta-data. This module  is also responsible for dynamically proxy-ing query calls to appropriate sensors and actuators in the distributed system through the use of the network connection . The network connection  may be a logical or physical connection. Also shown is a platform sensors and actuators, actuator  that includes sensors and actuators used to monitor the service processor . The service processor broker  and service processor registry and proxy service  are used to resolve vertical and horizontal silos across the HW\/SW layer of the socket , enclosures -, rack , container , and\/or the data center  (i.e., collectively remote domains) through the monitoring of sensors and actuators within the various management domains of each of these aforementioned devices.","In some example embodiments, the use of sensors and actuators in the management of the HW\/SW layer of these various domains is facilitated through the use of distributed registry functionality. Specifically, a local registry table is maintained by the helper broker  and helper registry and proxy services . This local registry table is federated or combined with other local registries tables from other service processors using a distributed overlay, wherein the service processors are operatively connected via the network connection . Using the network connection , the proxy functionality is provided in the system and method by dynamically routing queries in the distributed overlay, and from, for example the service processor  to any CPU management domain on a socket, node, or enclosure via the service processor helper .",{"@attributes":{"id":"p-0033","num":"0032"},"figref":"FIG. 4","b":["400","401","401","402","402","403","403","404","405","402","407","406","401","402","312","313","314"]},{"@attributes":{"id":"p-0034","num":"0033"},"figref":"FIG. 5","b":["311","501","201","502","503","504","505","506"]},{"@attributes":{"id":"p-0035","num":"0034"},"figref":"FIG. 6","b":["600","313","310","0","303","310","302","310","302","301","202"]},"In one example embodiment, a local registry table is built and maintained as part of a helper registry . The data that populates this helper registry  may be metadata and\/or actual data that identifies management endpoints (e.g., Dom, guest VMs, or platforms) via a discovery protocol. This discovery protocol may be SLP, Ping Sweep, Web Service (WS)-identify, Domain Name Server\/Dynamic Host Control Protocol (DNS\/DHCP), or some other suitable protocol. This data is stored in the helper registry . Discovery of the management endpoints (e.g., WS-Man) may be conducted using a SLP User Agent (SLP UA)  that resides on the Dom  and guest VM  and which receives queries from an internal discovery service (SLP SA)  that resides as part of the helper registry and proxy services . A multicast channel is assumed for the SLP-based discovery of VMs, and Dom. In order to limit the multicast message to the management domains in that node only, a firewall rule may be introduced in Dom  to drop the forwarding of the message outside of the node. Once the discovery of the management end points by the helper registry and proxy services  occurs, a namespace registration occurs using the namespace registration module  to query the CIMOM of each WS-Man endpoint . Where a namespace is established for each sensor and actuator, the helper registry and proxy service module  queries each WS-Man endpoint for each CIMOM to retrieve the namespaces associated with a VM, Dom, platforms, or other suitable devices and components. Additional processing (e.g., filtering) may be performed on the retrieved namespaces. Further, the discovery of the management endpoints (e.g., WS-Man) at the hardware\/platform layer is done by the service processor registry and proxy services . The helper registry and proxy services  queries the service processor registry and proxy services  to retrieve the hardware discovery information, then to populate the helper registry  with this discovered data.",{"@attributes":{"id":"p-0037","num":"0036"},"figref":"FIG. 7","b":["604","701","704","701","701","702","703","704","701","0","702","702","0","703","704","504","311"]},{"@attributes":{"id":"p-0038","num":"0037"},"figref":"FIG. 8","b":["800","102","103","202","313","803","805","310","304","807","807","313","801","313","102","316","313","304","507","0","303","313","0","806","802","202","808","310","801","807"]},{"@attributes":{"id":"p-0039","num":"0038"},"figref":"FIG. 9","b":["900","202","312","902","313","202","310","201","900","912","913"]},"In some example embodiments, a query is received by the service processor broker . The service processor broken  uses the service processor broker SDK  and the service processor registry and proxy service  to handle the query. The service processor broker SDK  may be accessed using the following Application Programming Interfaces (APIs):\n\n",{"@attributes":{"id":"p-0041","num":"0049"},"figref":"FIG. 10","b":["106","101","102","1001","1002","106","1002","1003","1004","1001","1005","1001","1001","1006","1002","1007","1002","1008","1009","1010","1009","1010","1011","1002","1011","1012","1001","1012","1012","1001"]},{"@attributes":{"id":"p-0042","num":"0050"},"figref":"FIG. 11","b":["106","101","102","1101","1102","106","1102","1103","313","1104","1102","1105","1106","1101","1102","106","1104","1102","1107","707","1103","1102","1108","1102","1107","801"]},{"@attributes":{"id":"p-0043","num":"0051"},"figref":"FIG. 12","b":["106","101","102","1201","1202","1202","1203","1201","1201","1202","1201","1204","1202","1205","1202","1202","1206","1201","0","311"]},{"@attributes":{"id":"p-0044","num":"0052"},"figref":"FIG. 13","b":["1300","202","1301","1002","1302","1005","1303","1006","1304","1007","1305","1008","1306","1009","1307","1011","1308","1012"]},{"@attributes":{"id":"p-0045","num":"0053"},"figref":"FIG. 14","b":["1400","1400","202","1401","1103","1402","1104","1403","1105","1404","1104","1405","1107","1406","1108","1407","1109"]},{"@attributes":{"id":"p-0046","num":"0054"},"figref":"FIG. 15","b":["1500","1500","202","1501","1203","1502","1204","1503","1205","1504","1206","0"]},{"@attributes":{"id":"p-0047","num":"0055"},"figref":"FIG. 16","b":["310","1601","1603","1605","1606","310","1607","1611","0","303","1601","1607","1608","1603","504","1605","1606","1609","1610"]},{"@attributes":{"id":"p-0048","num":"0056"},"figref":"FIG. 17","b":["313","1701","1702","101","1704","1707","102","1701","1704","1705","1706","1707","1706","1707","1702","807","1703"]},{"@attributes":{"id":"p-0049","num":"0057"},"figref":"FIG. 18","b":["312","1801","1802","1806","1807","101","1803","1804","1805","102","1801","1802","1801","910","1802","911","1803","1802","102","1803","1804","1803","1805","1805","1804","1806","1807"]},{"@attributes":{"id":"p-0050","num":"0058"},"figref":"FIG. 19","b":["1900","1901","201","1901","1900","1901","1902","1904","1905","1904","1907","1904","1906","1904","1904","1911","1909","1909","1911","1903","1911","1908","1912","1910","1913","1914","1915","1911","1916","1916","1917","1918"]},"The SATA port  may interface with a persistent storage medium (e.g., an optical storage devices, or magnetic storage device) that includes a machine-readable medium on which is stored one or more sets of instructions and data structures (e.g., software) embodying or utilized by any one or more of the methodologies or functions illustrated herein. The software may also reside, completely or at least partially, within the SRAM  and\/or within the CPU  during execution thereof by the computer system . The instructions may further be transmitted or received over the 10\/100\/1000 ethernet port , USB port  or some other suitable port illustrated herein.","In some example embodiments, a removable physical storage medium is shown to be a single medium, and the term \u201cmachine-readable medium\u201d should be taken to include a single medium or multiple medium (e.g., a centralized or distributed database, and\/or associated caches and servers) that store the one or more sets of instructions. The term \u201cmachine-readable medium\u201d shall also be taken to include any medium that is capable of storing, encoding or carrying a set of instructions for execution by the machine and that cause the machine to perform any of the one or more of the methodologies illustrated herein. The term \u201cmachine-readable medium\u201d shall accordingly be taken to include, but not be limited to, solid-state memories, optical and magnetic medium, and carrier wave signals.","Data and instructions (of the software) are stored in respective storage devices, which are implemented as one or more computer-readable or computer-usable storage media or mediums. The storage media include different forms of memory including semiconductor memory devices such as DRAM, or SRAM, Erasable and Programmable Read-Only Memories (EPROMs), Electrically Erasable and Programmable Read-Only Memories (EEPROMs) and flash memories; magnetic disks such as fixed, floppy and removable disks; other magnetic media including tape; and optical media such as Compact Disks (CDs) or Digital Versatile Disks (DVDs). Note that the instructions of the software discussed above can be provided on one computer-readable or computer-usable storage medium, or alternatively, can be provided on multiple computer-readable or computer-usable storage media distributed in a large system having possibly plural nodes. Such computer-readable or computer-usable storage medium or media is (are) considered to be part of an article (or article of manufacture). An article or article of manufacture can refer to any manufactured single component or multiple components.","In the foregoing description, numerous details are set forth to provide an understanding of the present invention. However, it will be understood by those skilled in the art that the present invention may be practiced without these details. While the invention has been disclosed with respect to a limited number of embodiments, those skilled in the art will appreciate numerous modifications and variations therefrom. It is intended that the appended claims cover such modifications and variations as fall within the \u201ctrue\u201d spirit and scope of the invention."],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"BRIEF DESCRIPTION OF THE DRAWINGS","p":["Some embodiments of the invention are described, by way of example, with respect to the following figures:",{"@attributes":{"id":"p-0007","num":"0006"},"figref":"FIG. 1"},{"@attributes":{"id":"p-0008","num":"0007"},"figref":"FIG. 2"},{"@attributes":{"id":"p-0009","num":"0008"},"figref":"FIG. 3"},{"@attributes":{"id":"p-0010","num":"0009"},"figref":"FIG. 4"},{"@attributes":{"id":"p-0011","num":"0010"},"figref":"FIG. 5"},{"@attributes":{"id":"p-0012","num":"0011"},"figref":"FIG. 6"},{"@attributes":{"id":"p-0013","num":"0012"},"figref":"FIG. 7"},{"@attributes":{"id":"p-0014","num":"0013"},"figref":"FIG. 8"},{"@attributes":{"id":"p-0015","num":"0014"},"figref":"FIG. 9"},{"@attributes":{"id":"p-0016","num":"0015"},"figref":"FIG. 10"},{"@attributes":{"id":"p-0017","num":"0016"},"figref":"FIG. 11"},{"@attributes":{"id":"p-0018","num":"0017"},"figref":"FIG. 12"},{"@attributes":{"id":"p-0019","num":"0018"},"figref":"FIG. 13"},{"@attributes":{"id":"p-0020","num":"0019"},"figref":"FIG. 14"},{"@attributes":{"id":"p-0021","num":"0020"},"figref":"FIG. 15"},{"@attributes":{"id":"p-0022","num":"0021"},"figref":"FIG. 16"},{"@attributes":{"id":"p-0023","num":"0022"},"figref":"FIG. 17"},{"@attributes":{"id":"p-0024","num":"0023"},"figref":"FIG. 18"},{"@attributes":{"id":"p-0025","num":"0024"},"figref":"FIG. 19"}]},"DETDESC":[{},{}]}
