---
title: System and method for online analytical processing using dimension attributes and multiple hierarchies where first hierarchy has at least one attribute from the defined dimension not present in the second hierarchy
abstract: A data model for accessing data in a relational database in an OLAP system utilizes a multiple-hierarchy dimension. The dimension includes a set of attributes. Each attribute is bound to a column in the relational database. A logical structure is defined, indicating the relationships between the attributes. Hierarchies are defined. Each hierarchy includes a sequence of attributes. A hierarchy provides a common drill-down path that a database user can utilize to access the database. A hierarchy can include a single attribute or a combination of attributes. Both the relationships between the attributes and the sequence of attributes in a hierarchy are defined independent of any restrictions associated with the database.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=07590638&OS=07590638&RS=07590638
owner: Microsoft Corporation
number: 07590638
owner_city: Redmond
owner_country: US
publication_date: 20030624
---

{"@attributes":{"id":"description"},"BRFSUM":[{},{}],"heading":["FIELD OF THE INVENTION","BACKGROUND OF THE INVENTION","SUMMARY OF THE INVENTION","DETAILED DESCRIPTION OF ILLUSTRATIVE EMBODIMENTS","Description of Exemplary Embodiments"],"p":["The present invention pertains generally to computer-implemented databases, and more specifically to a data model for accessing online analytical processing databases.","Typical relational database management system (RDBMS) products have limitations with respect to providing users with specific views of data. Thus, front-ends have been developed for RDBMS products so that data retrieved from the RDBMS can be aggregated, summarized, consolidated, summed, viewed, and analyzed. This type of functionality is known as on-line analytical processing (OLAP).","OLAP is a key part of most data warehouse and business analysis systems. OLAP services provide for fast analysis of multidimensional information. OLAP services provide for multidimensional access and navigation of data in an intuitive and natural way, providing a global view of data that can be drilled down into particular data of interest. Speed and response time are important attributes of OLAP services that allow users to browse and analyze data online in an efficient manner.","Data in an OLAP system can be characterized in terms of its complexity, that is, the number of dimensions used to index the data. Thus, a complex data set is one that has many dimensions. Complex data sets have the advantage of flexibility in that users can submit more queries to complex data sets than to simple data sets. Accordingly, it is often desirable to use complex data sets. However, it is difficult to handle a large number of dimensions using conventional OLAP systems. Thus an improved mechanism for accessing a database in an OLAP system is desired.","In one embodiment of the present invention, a multiple-hierarchy dimension is used to access a relational database in an OLAP system. The dimension includes a set of attributes. Each attribute is bound to a column in the relational database. Relationships between the attributes are defined. These relationships are defined independent of any restrictions associated with the database. The attributes and their relationships define the dimension and its constraints. Hierarchies are defined to be used as a drill down paths to access the database. Each hierarchy includes a sequence of attributes. A hierarchy can include a single attribute or a combination of attributes. The hierarchies are defined independent of any restrictions associated with the database.","A method for accessing a database via a multiple-hierarchy dimension includes defining a dimension having a plurality of attributes. Each attribute is assigned, or bound, to a respective column of the database. The relationships between the attributes are defined, and the database is accessed via the multiple-hierarchy dimension.","A technique for accessing data in a relational database in accordance with an embodiment of the present invention allows arbitrary relationships to be defined between items in the database. These arbitrary relationships can be used to drill down into the database quickly and efficiently. In one embodiment, this technique is implemented within an OLAP system. The technique includes a multiple-hierarchy dimension having a plurality of attributes. Each attribute is assigned (e.g., bound) to a column in the relational database. Relationships between the attributes are defined. The logical structure of these relationships and the attributes themselves identify the details and constraints of each dimension. Hierarchies are defined to facilitate drill down paths into the relational database. A hierarchy includes a sequence of attributes. A hierarchy can comprise any sequence of attributes and\/or levels within an attribute. No restrictions are imposed on the formation of a sequence. Thus, a hierarchy may comprise all attributes, one attribute, or aggregates of attributes.","Overview of a Suitable Computing System Environment",{"@attributes":{"id":"p-0016","num":"0015"},"figref":"FIG. 1","b":["100","100","100","100"]},"The OLAP systems and methods of the invention using dimension attributes and multiple hierarchies per dimension are operational with numerous other general purpose or special purpose computing system environments or configurations. Examples of well known computing systems, environments, and\/or configurations that may be suitable for use with the method and system for accessing data in a relational database include, but are not limited to, personal computers, server computers, hand-held or laptop devices, multiprocessor systems, microprocessor-based systems, set top boxes, programmable consumer electronics, network PCs, minicomputers, mainframe computers, distributed computing environments that include any of the above systems or devices, and the like.","The OLAP systems and methods using dimension attributes and multiple hierarchies per dimension may be described in the general context of computer-executable instructions, such as program modules, being executed by a computer. Generally, program modules include routines, programs, objects, components, data structures, etc. that perform particular tasks or implement particular abstract data types. The OLAP systems and methods using dimension attributes and multiple hierarchies per dimension may also be practiced in distributed computing environments where tasks are performed by remote processing devices that are linked through a communications network or other data transmission medium. In a distributed computing environment, program modules and other data may be located in both local and remote computer storage media including memory storage devices.","With reference to , an exemplary system for implementing the OLAP systems and methods of the invention using dimension attributes and multiple hierarchies per dimension includes a general purpose computing device in the form of a computer . Components of the computer  may include, but are not limited to, a processing unit , a system memory , and a system bus  that couples various system components including the system memory  to the processing unit . The system bus  may be any of several types of bus structures including a memory bus or memory controller, a peripheral bus, and a local bus using any of a variety of bus architectures. By way of example, and not limitation, such architectures include Industry Standard Architecture (ISA) bus, Micro Channel Architecture (MCA) bus, Enhanced ISA (EISA) bus, Video Electronics Standards Association (VESA) local bus, and Peripheral Component Interconnect (PCI) bus (also known as Mezzanine bus).","The computer  typically includes a variety of computer readable media. Computer readable media can be any available media that can be accessed by computer  and includes both volatile and non-volatile media, removable and non-removable media. By way of example, and not limitation, computer readable media may comprise computer storage media and communication media. Computer storage media includes volatile and non-volatile, removable and non-removable media implemented in any method or technology for storage of information such as computer readable instructions, data structures, program modules or other data. Computer storage media includes, but is not limited to, RAM, ROM, EEPROM, flash memory or other memory technology, CD-ROM, digital versatile disks (DVD) or other optical disk storage, magnetic cassettes, magnetic tape, magnetic disk storage or other magnetic storage devices, or any other medium which can be used to store the desired information and which can accessed by computer . Communication media typically embodies computer readable instructions, data structures, program modules or other data in a modulated data signal such as a carrier wave or other transport mechanism and includes any information delivery media. The term \u201cmodulated data signal\u201d means a signal that has one or more of its characteristics set or changed in such a manner as to encode information in the signal. By way of example, and not limitation, communication media includes wired media such as a wired network or direct-wired connection, and wireless media such as acoustic, RF, infrared and other wireless media. It is to be understood that combinations of any of the media are also included within the scope of computer readable media.","The system memory  includes computer storage media in the form of volatile and\/or non-volatile memory such as ROM  and RAM . A basic input\/output system  (BIOS), containing the basic routines that help to transfer information between elements within computer , such as during start-up, are typically stored in ROM . RAM  typically contains data and\/or program modules that are immediately accessible to and\/or presently being operated on by processing unit . By way of example, and not limitation,  illustrates operating system , application programs , other program modules , and program data .","The computer  may also include other removable\/non-removable, volatile\/non-volatile computer storage media. By way of example only,  illustrates a hard disk drive  that reads from or writes to non-removable, non-volatile magnetic media, a magnetic disk drive  that reads from or writes to a removable, non-volatile magnetic disk , and an optical disk drive  that reads from or writes to a removable, non-volatile optical disk , such as a CD-ROM, CDRW, or other optical media. Other removable\/non-removable, volatile\/non-volatile computer storage media that can be used in the exemplary operating environment include, but are not limited to, magnetic tape cassettes, flash memory cards, digital versatile disks, digital video tape, solid state RAM, solid state ROM, and the like. The hard disk drive  is typically connected to the system bus  through a non-removable memory interface such as interface , and magnetic disk drive  and optical disk drive  are typically connected to the system bus  by a removable memory interface, such as interface .","The drives and their associated computer storage media, discussed above and illustrated in , provide storage of computer readable instructions, data structures, program modules and other data for the computer . In , for example, hard disk drive  is illustrated as storing operating system , application programs , other program modules , and program data . Note that these components can either be the same as or different from operating system , application programs , other program modules , and program data . Operating system , application programs , other program modules , and program data  are given different numbers here to illustrate that, at a minimum, they are different copies. A user may enter commands and information into the computer  through input devices such as a keyboard  and pointing device , commonly referred to as a mouse, trackball or touch pad. Other input devices (not shown) may include a microphone, joystick, game pad, satellite dish, scanner, or the like. These and other input devices are often connected to the processing unit  through a user input interface  that is coupled to the system bus , but may be connected by other interface and bus structures, such as a parallel port, game port or a universal serial bus (USB). A monitor  or other type of display device is also connected to the system bus  via an interface, such as a video interface . In addition to the monitor, computers may also include other peripheral output devices such as speakers  and printer , which may be connected through an output peripheral interface .","The computer  may operate in a networked environment using logical connections to one or more remote computers, such as a remote computer . The remote computer  may be a personal computer, a server, a router, a network PC, a peer device or other common network node, and typically includes many or all of the elements described above relative to the computer , although only a memory storage device  has been illustrated in . The logical connections depicted include a local area network (LAN)  and a wide area network (WAN) , but may also include other networks. Such networking environments are commonplace in offices, enterprise-wide computer networks, intranets and the Internet.","When used in a LAN networking environment, the computer  is connected to the LAN  through a network interface or adapter . When used in a WAN networking environment, the computer  typically includes a modem  or other means for establishing communications over the WAN , such as the Internet. The modem , which may be internal or external, may be connected to the system bus  via the user input interface , or other appropriate mechanism. In a networked environment, program modules depicted relative to the computer , or portions thereof, may be stored in the remote memory storage device. By way of example, and not limitation,  illustrates remote application programs  as residing on memory device . It will be appreciated that the network connections shown are exemplary and other means of establishing a communications link between the computers may be used.","Various distributed computing frameworks have been and are being developed in light of the convergence of personal computing and the Internet. Individuals and business users alike are provided with a seamlessly interoperable and web-enabled interface for applications and computing devices, making computing activities increasingly web browser or network-oriented.","For example, MICROSOFT\u00ae's .NET platform includes servers, building-block services, such as web-based data storage, and downloadable device software. Generally speaking, the .NET platform provides (1) the ability to make the entire range of computing devices work together and to have user information automatically updated and synchronized on all of them, (2) increased interactive capability for web sites, enabled by greater use of XML rather than HTML, (3) online services that feature customized access and delivery of products and services to the user from a central starting point for the management of various applications, such as e-mail, for example, or software, such as Office .NET, (4) centralized data storage, which will increase efficiency and ease of access to information, as well as synchronization of information among users and devices, (5) the ability to integrate various communications media, such as e-mail, faxes, and telephones, (6) for developers, the ability to create reusable modules, thereby increasing productivity and reducing the number of programming errors, and (7) many other cross-platform integration features as well.","While exemplary embodiments herein are described in connection with software residing on a computing device, one or more portions of the OLAP systems and methods using dimension attributes and multiple hierarchies per dimension in accordance with the invention may also be implemented via an operating system, application program interface (API), or a \u201cmiddle man\u201d object between a coprocessor and requesting object, such that services may be performed by, supported in, or accessed via all of .NET's languages and services, and in other distributed computing frameworks as well.",{"@attributes":{"id":"p-0029","num":"0028"},"figref":"FIG. 2","b":["226","228","212","212","214","216","218","220","222","224","226","228","226","228","226","226","228","228","226","228","230","232","226","228"]},"One way to associate the dimensions, , , with the database  is to bind each of the attributes of each of the dimensions, , , to the columns of the database . Each value of an attribute is a member As illustrated by the dotted lines in , the member \u2018country\u2019 of dimension  could be bound to the column \u2018country\u2019  of the database , the member \u2018state\u2019 of dimension  could be bound to the column \u2018state\u2019  of the database , the member \u2018city\u2019 of dimension  could be bound to the column \u2018city\u2019  of the database , and the member \u2018customer name\u2019 of dimension  could be bound to the column \u2018customer name\u2019  of the database . The same could be done for the dimension . That is, the member \u2018sales region\u2019 of dimension  could be bound to the column \u2018sales region\u2019  of the database , the member \u2018city\u2019 of dimension  could be bound to the column \u2018city\u2019  of the database , and the member \u2018customer name\u2019 of dimension  could be bound to the column \u2018customer name\u2019  of the database .","The structures of the dimensions  and  provide a linear hierarchy by which a database user can search (drill down) the database for a particular data item. For example, if a database user is searching for the name of a particular customer, the dimension  would be utilized to drill down through the sales region, city, and customer name. If the database user also wants to know the country of the same customer, the dimension  would be utilized to drill down to the country. Note that two separate dimensions are defined, corresponding to the two different hierarchies of customer.","This technique of using a linear hierarchy for each dimension incorporates much repetition. The dimension levels containing members \u2018customer name\u2019, \u2018city\u2019, and the member property \u2018population\u2019, exist in both hierarchies of dimensions  and . This requires repetition of the bindings of the members of each dimension to the columns of the database, repetition of their data types, repetition of their names, and repetition of any auxiliary information (e.g., meta data, formulas). Also, duplicate storage of data is required. This results in the need to retrieve the same details multiple times from the relational database . Furthermore, a database user is limited to querying only the hierarchies (e.g., in dimensions  and ) defined by the cube designer. Thus, a database user could not request to see details by country, broken down by the sales regions covering that country. It becomes impracticable for the designer of the cube to define hierarchies covering every possible drill-down path that the database user might want. Also, note that if a database user were to request country and sales region, all combinations of country and sales region would be returned, even if no customers existed for any given combination. Different mechanisms are used to retrieve data pertaining to separate levels and member properties, which results in duplication of circuitry and increased processing load on the database system.",{"@attributes":{"id":"p-0033","num":"0032"},"figref":["FIG. 3","FIG. 3"],"b":["330","312","330","312","330","312","312","330","344","324","342","322","340","320","338","318","336","316","334","314","330","332"]},"The relationships between the attributes of the dimension  are definable. Example definitions may include: a customer is in one city, every city is in one state, each city is assigned to one sales region, and each city has a population. A multiple-hierarchy dimension (e.g., dimension ) and its constraints are defined by the dimension's attributes and the relationships therebetween. In one embodiment, the relationships between the attributes are defined by the designer of the cube. There are no restriction placed on these definitions, thus the cube designer may define the relationships between the attributes from a perspective of the database user's needs, and not be hindered by any database restrictions. The relationships between the attributes define the constraints that exist on the data. For example, a State can only exist in a single Country. The relationships can be defined irrespective of whether the underlying database structure enforces such constraints or not.","A multiple-hierarchy dimension can have multiple hierarchies associated therewith. As shown in , hierarchies  and  are associated with the dimension . Each hierarchy,  and , comprises a sequence of attributes that represent a drill-down path that a database user may utilize. The hierarchy  comprises the attributes country , state , city , and customer name . The hierarchy  comprises the attributes sales region , city , and customer name . Each hierarchy associated with a multiple-hierarchy dimension (e.g., dimension ) is definable. In one embodiment, hierarchies are defined by the designer of the cube. There are no restriction placed on these definitions, thus the cube designer may define the hierarchies from a perspective of the database user's needs, and not be hindered by any database restrictions. For example, a hierarchy can be defined that provides a drill down path from sales region to country. A hierarchy can be defined comprising a single attribute. Furthermore, a hierarchy can be defined comprising a single attribute and an optional level for all members within that attribute. For example, a hierarchy can be defined comprising the attribute population  and a level containing members for every distinct value of the population column . This could be exposed to a database user as \u2018Populations\u2019. This hierarchy would provide a drill down path to the population of all cities. Note, that the attribute Population would always have a level \u2018Population\u2019, containing a member for every distinct value of the population column. It can also optionally have a level \u2018All\u2019 containing a single member \u2018All Populations\u2019. Queries involving more than one hierarchy (e.g., country and sales region) will return combinations for which there is at least one dimension member.","All of the columns of the database  can be exposed as different hierarchies utilizing the multiple-hierarchy dimension . Hierarchies can be created that comprise any combination of attributes. A database user can use these hierarchies to query the database with the same degree of flexibility as can be provided by directly querying the underling table of data within the database. Adding additional hierarchies to a multiple-hierarchy dimension (e.g., dimension ) has relatively little impact on the storage requirements of the database system, because additional dimensions are not required. Each additional hierarchy utilizes the same multiple-hierarchy dimension. Also, aggregates can be defined in terms of attributes. An aggregate is a path that can essentially cut across hierarchies. For example, a designer can maintain an aggregate by city, regardless of the hierarchies defined. Also, the designer could define a hierarchy containing only the attribute \u2018city\u2019.",{"@attributes":{"id":"p-0037","num":"0036"},"figref":["FIG. 4","FIG. 4","FIG. 4"]},"Database users can utilize different hierarchies in a query of the database, however, the results and the aggregates that are exploited to improve query performance, depend upon the \u2018coordinates\u2019 defined in terms of the members. For example, requesting the total sales of the city \u2018Seattle\u2019 will be the same regardless of whether the \u2018Customers By Country\u2019 or \u2018Customers By Sales Region\u2019 hierarchy is used. A cube designer can add additional hierarchies to ease the formulation of queries based upon the common hierarchies in which a database user views the data.","In addition to providing relative storage requirements improvements, utilization of a multiple-hierarchy dimension as described above provides processing performance improvements. The implementation of separate attributes provides performance improvements during processing, such that different attributes within a single dimension can be processed in parallel. Also, data pertaining to attributes can be validated during processing based on the relationships that are defined For example, if the attribute \u2018state\u2019is related to the attribute \u2018country\u2019 an error can be reported if the same state appears in multiple countries. Note, validation is based on the relationships between attributes, not the hierarchies that are defined.",{"@attributes":{"id":"p-0040","num":"0039"},"figref":"FIG. 5","b":["330","512","514","312","516","518","522"]},{"@attributes":{"id":"p-0041","num":"0040"},"figref":"FIG. 6","b":["600","600","612","614","616","616","612","614","612","614","612","614","612","614"]},"In one embodiment, the client processor  comprises a network interface program for communicating with a network, and a client program executed by the client processor . The server processor  comprises a network interface program for communicating with a network, and a server program executed by the server processor . The server program performs various database operations, including search and retrieval operations, termed queries, insert operations, update operations, and delete operations, against one or more databases  stored on a remote or local data storage device.","In one embodiment, the server processor  performs the functions related to dimensions, attributes, and hierarchies. These functions include defining a dimension (e.g., dimension ) comprising a plurality of attributes (e.g., attributes , , , , , and ), assigning each attribute to a respective column of the database , defining relationships between the attributes, and defining at least one hierarchy (e.g., hierarchies  and ) comprising a sequence of attributes, and accessing the database via the dimension.","OLAP systems and methods using dimension attributes and multiple hierarchies per dimension as described herein may be embodied in the form of computer-implemented processes and system for practicing those processes. OLAP systems and methods using dimension attributes and multiple hierarchies per dimension as described herein may also be embodied in the form of computer program code embodied in tangible media, such as floppy diskettes, read only memories (ROMs), CD-ROMs, hard drives, high density disk, or any other computer-readable storage medium, wherein, when the computer program code is loaded into and executed by a computer, the computer becomes a system for practicing the invention. The OLAP systems and methods using dimension attributes and multiple hierarchies per dimension as described herein may also be embodied in the form of computer program code, for example, whether stored in a storage medium, loaded into and\/or executed by a computer, or transmitted over some transmission medium, such as over the electrical wiring or cabling, through fiber optics, or via electromagnetic radiation, wherein, when the computer program code is loaded into and executed by a computer, the computer becomes a system for practicing the invention. When implemented on a general-purpose processor, the computer program code segments configure the processor to create specific logic circuits.","The various techniques described herein may be implemented in connection with hardware or software or, where appropriate, with a combination of both. Thus, the methods and apparatus of the present invention, or certain aspects or portions thereof, may take the form of program code (i.e., instructions) embodied in tangible media, such as floppy diskettes, CD-ROMs, hard drives, or any other machine-readable storage medium, wherein, when the program code is loaded into and executed by a machine, such as a computer, the machine becomes an apparatus for practicing the invention. In the case of program code execution on programmable computers, the computing device will generally include a processor, a storage medium readable by the processor (including volatile and non-volatile memory and\/or storage elements), at least one input device, and at least one output device. One or more programs that may utilize the processing services of the present invention, e.g., through the use of a data processing API or the like, are preferably implemented in a high level procedural or object oriented programming language to communicate with a computer. However, the program(s) can be implemented in assembly or machine language, if desired. In any case, the language may be a compiled or interpreted language, and combined with hardware implementations.","The methods and apparatus of the present invention may also be practiced via communications embodied in the form of program code that is transmitted over some transmission medium, such as over electrical wiring or cabling, through fiber optics, or via any other form of transmission, wherein, when the program code is received and loaded into and executed by a machine, such as an EPROM, a gate array, a programmable logic device (PLD), a client computer, a video recorder or the like, or a receiving machine having the processing capabilities as described in exemplary embodiments above becomes an apparatus for practicing the invention. When implemented on a general-purpose processor, the program code combines with the processor to provide a unique apparatus that operates to invoke the functionality of the present invention. Additionally, any storage techniques used in connection with the present invention may invariably be a combination of hardware and software.","While embodiments of the present invention has been described in connection with the exemplary embodiments of the various figures, it is to be understood that other similar embodiments may be used or modifications and additions may be made to the described embodiment for performing the same function of the present invention without deviating therefrom. Furthermore, it should be emphasized that a variety of computer platforms, including handheld device operating systems and other application specific operating systems are contemplated, especially as the number of wireless networked devices continues to proliferate. Therefore, the present invention should not be limited to any single embodiment, but rather should be construed in breadth and scope in accordance with the appended claims."],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"BRIEF DESCRIPTION OF THE DRAWINGS","p":["The features and advantages of the present invention will be best understood when considering the following description in conjunction with the accompanying drawings, of which:",{"@attributes":{"id":"p-0009","num":"0008"},"figref":"FIG. 1"},{"@attributes":{"id":"p-0010","num":"0009"},"figref":"FIG. 2"},{"@attributes":{"id":"p-0011","num":"0010"},"figref":"FIG. 3"},{"@attributes":{"id":"p-0012","num":"0011"},"figref":"FIG. 4"},{"@attributes":{"id":"p-0013","num":"0012"},"figref":"FIG. 5"},{"@attributes":{"id":"p-0014","num":"0013"},"figref":"FIG. 6"}]},"DETDESC":[{},{}]}
