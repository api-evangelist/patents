---
title: Programmable and high performance switch for data center networks
abstract: This application describes routing packets from a source server to a plurality of ports of a switch. The switch is programmed by the control server and is used to direct incoming data packets to one or more ports of the switch in a manner that reduces congestion of incoming data packets to a destination server. Further, the control server queries congestion information from the switch, and then sends congestion notification back to the source server to either increase or decrease the amount of data being sent to the destination server.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09590922&OS=09590922&RS=09590922
owner: Microsoft Technology Licensing, LLC
number: 09590922
owner_city: Redmond
owner_country: US
publication_date: 20110512
---

{"@attributes":{"id":"description"},"BRFSUM":[{},{}],"heading":["BACKGROUND","SUMMARY","DETAILED DESCRIPTION","Example Environment","Example Process to Implement Routing of Data Packets","Example Process to Control Congestion of Data Packets","CONCLUSION"],"p":["Due to the rise of cloud computing, the demand for larger data center networks (DCN) has increased to allow users to store access information from virtually any location. A DCN may include hundreds of thousands of servers connected to each other, which makes routing of information into and out of the DCN a very complex task. Pure software based systems, Field Programmable Gate Array (FPGA) platforms (e.g., NetFPGA), and OpenFlow switches are often used to manage data packet routing and congestion control within the DCN. However, software based routing systems require high processor overhead and can include processing latency issues while waiting for processing time on the CPU. For example, using CPU intensive software-based systems with high latency issues may prevent efficient implementation of control plane functions such as signaling and congestion control. FPGA platforms are difficult to program and are expensive to implement. OpenFlow is limited to operating on a limited type of protocols (e.g., Transmission Control Protocol\/Internet Protocol (TCP\/IP) packets) and would be susceptible to compatibility issues.","A programmable switch that may be coupled to a server to facilitate control plane functions and congestion control is described herein. The switch described herein is capable of operating as a programmable packet forwarding engine that supports flow\/congestion control of information passed through a data center network (DCN). The workload of routing incoming data packets may be transferred from the processor\/memory of a destination server to a programmable device as described below.","The switch incorporates a hardware architecture that may be implemented into a printed circuit board, which may be integrated into any existing server. In some aspects, the switch may include programmable chip sets, which are programmed via the server and route incoming data to a desired output port. The switch may include a switching chip that can perform packet matching based on flexible packet fields and achieve full line rate forwarding even for small packet sizes. The switch may implement any type of forwarding scheme (e.g., Destination Address, Source Routing, Tag, etc.) for data packets.","This Summary is provided to introduce a selection of concepts in a simplified form that are further described below in the Detailed Description. This Summary is not intended to identify key features or essential features of the claimed subject matter, nor is it intended to be used to limit the scope of the claimed subject matter.","Overview","This disclosure describes, in part, apparatuses, systems, and techniques for routing data packets to various ports of a routing device to reduce congestion or optimize data packet transfer based on desired preferences of a control server's administrator. For example, the device extracts keys from the incoming data packets that are matched to an entry in a ternary content-addressable memory (TCAM) table that directs the data packet to a designated device port. The keys include an index value and a plurality of intermediate address values that are extracted simultaneously or nearly simultaneously from the data packet. Further, the index values and the intermediate addresses are compared to the entries in the TCAM table at or near a same time. When a match occurs, the device assigns the data packet to an output port that is associated with the matched TCAM entry.","The apparatuses, systems, and techniques described herein may be implemented in a number of ways. Example implementations are provided below with reference to the following figures.",{"@attributes":{"id":"p-0013","num":"0012"},"figref":"FIG. 1","b":["100","100","102","104","107","106","110","102","107","102","107"]},"The network  comprises a global system of interconnected computer networks that serve content to devices, such as the destination server . The network  may include a number of different content providers that provide varying types of content to these devices. On the network  (or on any other network), information is exchanged between servers to facilitate transactions or exchanges of information or any type of content that may be displayed or stored by a user. The amount of information being transferred may exceed the capacity of the network or servers. As such, devices or techniques may be implemented to facilitate the efficient transfer of the information between the source server  and the destination server .","In some embodiments, the routing device  may manage the routing of the information between the source server  and the destination server . By way of example and not limitation, the routing device  may be installed inside the control server  and configured to route information received from the source server  to an output port to the destination server . In various embodiments, a plurality of source servers or other servers may also be sending data packets to the routing device  at or near a same time. However, for the purpose of ease of explanation, only a single source server  and a single destination server  are illustrated as being in communication with the routing device .","By way of example and not limitation, the routing device  may include an Ethernet physical transceiver chip (PHY) chip , an Ethernet switching chip , a Network Interface Controller (NIC) module , and a peripheral component interconnect express (PCI-E) switching chip . The PHY chip  may receive a plurality of data packets over a plurality of channels from the source server . The PHY chip  may be responsible for send\/receive functions of Ethernet frames or data packets over the network . The Ethernet switching chip  performs as a fully programmable forwarding engine that can perform packet matching using a TCAM table to route incoming packets to specific output ports of the routing device. The Ethernet switching chip  can also route incoming packets to the control server . Prior to reaching the control server  from the Ethernet switching card , the incoming data packets are routed through the NIC module  and the PCI-E chip . In the , a single network interface chip is illustrated via the NIC module , however, the module  may include two or more network interface chips to handle larger quantities of incoming data. The PCI-E chip  receives the incoming packets from the NIC module  and directs them to the control server  via channel .",{"@attributes":{"id":"p-0017","num":"0016"},"figref":["FIG. 2","FIG. 1","FIG. 2","figures 202"],"b":["200","114","200"]},"At block , the control server  programs the TCAM table stored in the Ethernet switching chip . By way of example and not limitation, a TCAM table  illustrates one possible format of the TCAM table. In one instance, the TCAM table  includes a plurality of index values (e.g., 1, 2, 3 . . . ) that may be repeated throughout the table. Each index value  may be associated with a plurality of intermediate addresses (e.g., IA1, IA2, and IA3). Also, the control server  may select portions of the TCAM table  to be masked from consideration during the routing process. This masking feature is illustrated by the grayed sections of the intermediate addresses and is designated as \u201cdon't care\u201d entries of the TCAM table . On the other hand, the entries that include values may be designated as \u201ccare\u201d entries that are actively used in the routing process.","At block , a key  is extracted from the incoming packet received at the Ethernet switching chip . The key  comprises an index value and a plurality of intermediate addresses associated with the index value. By way of example and not limitation, a key  may include one index value and multiple intermediate address values (e.g., three intermediate address values, etc.).","At block , the Ethernet switching chip  simultaneously or nearly simultaneously compares the key  (i.e., the extracted index values and intermediate address values) with each of the entries in the TCAM table . In this instance, the index value and the intermediate addresses of the key  are compared against the index values and associated intermediate addresses of TCAM table , such that each comparison is attempting to match the index value and intermediate addresses of the key to an entry in the TCAM table at the same time. In other words, the index values and the intermediate address values of the key  and at least one entry on the TCAM table  are compared together to determine if they match. In some embodiments, the \u201cdon't care\u201d entries in the TCAM table are excluded from this comparison. Accordingly, the comparison against the TCAM table  may only include \u201ccare\u201d entries. For example, in line 1 of TCAM table , only the index value and IA1 are used for comparison purposes. IA2 and IA3 of line 1 are not included in the comparison process, both IA2 and IA3 are shown as \u201cdon't care\u201d entries as represented by the masking of their values in TCAM table . Similarly, for line 2 of TCAM table , the IA1 and IA3 entries are masked and are designated as \u201cdon't care\u201d entries. The intermediate address entries in TCAM table  that have values shown (i.e., 1, 2 . . . ) are designated as \u201ccare\u201d entries.","At block , if the extracted key  matches a TCAM entry (e.g., entry ), then the data packet associated with the key  is sent to a designated port of the switching chip. However, in other instances, if portions of the TCAM table  are masked as described above, then only the unmasked or \u201ccare\u201d portions of the TCAM table are used in the matching process. For example, key  matches an entry  in TCAM table , the index values of \u201c2\u201d are matched as well as the values in the intermediate address 2 positions (i.e., \u201c2\u201d and \u201c2\u201d). Additionally, an output table  is associated with the TCAM table  such that each entry has an output of the switching chip. In this instance, the entry  is associated with port 2 of the switching chip. Accordingly, the data packet associated with the key  will be sent to port 2 of the switching chip.",{"@attributes":{"id":"p-0022","num":"0021"},"figref":["FIG. 3","FIG. 1","FIG. 3","figures 302"],"b":["300","106","110","300"]},"At block , the control server  queries congestion information  from routing device . The congestion information  may include the number of data packets waiting to be routed by the routing device  and the available bandwidth from the routing device  to the destination server .","Turning to the control server , the server may include a memory , a processor component , and a RAM\/ROM component . A congestion point module  may be stored in the memory . The RAM\/ROM component  and the memory  of the control server  may be comprised of any computer-readable media. The computer-readable media includes, at least, two types of computer-readable media namely computer storage media and communications media. Computer readable media includes volatile and non-volatile, removable and non-removable media implemented in any method or technology for storage information such as computer readable instructions, data structures, program modules, program components, or other data. Computer storage media includes, but is not limited to, RAM, ROM, EEPROM, flash memory, or other memory technology, CD-ROM, digital versatile disks (DVD), other optical storage technology, magnetic cassettes, magnetic tape, magnetic disk storage, or other magnetic storage devices, or any other non-transmission medium that can be used to store information for access by a computing device. In contrast, communication media may embody computer-readable instructions, data structures, program modules, or other data in a modulated data signal, such as carrier waves, or other transmission mechanisms. As defined herein, computer storage media does not include communication media. One of ordinary skill in the art would contemplate the techniques for executing the computer-readable instructions via the processor  in order to implement the techniques described herein.","At block , the control server  sends a congestion notification  to the source server . In this instance, the congestion notification  is shown to be sent to the source server  via the routing device . However, in another embodiment, a congestion notification  may be sent directly from the control server  without going through the routing device . Accordingly, upon receipt of the congestion notification  or , the source server  may reduce the rate of data packets being sent to the destination sever , or the server  may increase the rate of data packets being sent to a destination server .","Exemplary Architecture",{"@attributes":{"id":"p-0026","num":"0025"},"figref":"FIG. 4","b":["110","106","107","104","114","106","114","116","400","402","400","402","110"]},"The kernel  may include a routing device driver  that controls the Ethernet switching chip  by sending and receiving control messages via a switching chip driver  via a communications channel . In this way, the TCAM table  may be programmed to include a plurality of index values and associated intermediate addresses. Further, specific entries in the TCAM table may be masked out as described in the description of . The routing device driver  also manages congestion control and in-network packet processing by controlling and monitoring the NIC module  via a NIC driver  over a communications channel . The kernel  may also include a TCP\/IP component  that passes the incoming date from the routing device  onto other applications  in the user space  using TCP\/IP protocol.","In one implementation, the routing device driver  acts a central hub to receive all incoming traffic from the routing device . The routing device driver  can process the data itself or it can provide the data to the user space  and let the applications  process the data. Processing the data in the driver  may provide higher performance with respect to latency concerns but is difficult to program and debug. Meanwhile, processing the data in the user space  is easier from a development aspect but sacrifices some performance. Using the routing device architecture, a user can decide whether to use the user space  or the routing device . For example, for low rate data traffic the routing device driver  can deliver the data to the user space  for processing. In contrast, for data traffic with low latency requirements and high speed in-network processing may be processed at the routing device driver  more efficiently than in the user space .","Also, the user space may include a developer application  along with an application programming interface (API) library  that a developer may use to program or control the routing device driver  and Ethernet switching chip . The API library  may include API's in one or more of the following categories: (1) Set User Defined Lookup Key, (2) Set Lookup Table, (3) Set Virtual Interface Table, (4) Read\/Write registers, and (5) Send\/Receive Packet.","The Set User Defined Lookup Key (UDLK) API configures the Ethernet switching chip  by setting the UDLK. The UDLK can be fields from an IP packet header as well as certain metadata (e.g., the incoming port of the packet). Meta-data may be joined with non-consecutive byte range may also define a UDLK.","The Set Lookup Table API configures different lookup tables or TCAM tables by setting the table entries to include a value bit, a mask bit, and a corresponding virtual output interface. The value bit representing an intermediate address and the mask bit indicating whether the value bit is designated as \u201ccare\u201d or \u201cdon't care\u201d in the TCAM table .","The Read\/Write registers API may be used to read and write registers in the Ethernet switching chip . The registers may include various information used by the Ethernet switching chip  such as data packet queue length, packet counters, and other registers that are used to configure the Ethernet switching chip, which configure features like enable\/disable message processing.","The Set Virtual Interface Table API configures a virtual entry interface which contains destination and source addresses of the TCAM table  as well as output port information for the output port table .","Lastly, the Send\/Receive Packet API configures the Ethernet switching chip  to direct data packets through the NIC module , such that the API can send packets to an output port, or receive packets with an input port.","Although the embodiments have been described in language specific to structural features and\/or methodological acts, is the claims are not necessarily limited to the specific features or acts described. Rather, the specific features and acts are disclosed as illustrative forms of implementing the subject matter described in the disclosure."],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"BRIEF DESCRIPTION OF THE DRAWINGS","p":["The Detailed Description is set forth with reference to the accompanying figures. In the figures, the left-most digit(s) of a reference number identifies the figure in which the reference number first appears. The use of the same reference numbers in different figures indicates similar or identical items.",{"@attributes":{"id":"p-0007","num":"0006"},"figref":"FIG. 1"},{"@attributes":{"id":"p-0008","num":"0007"},"figref":"FIG. 2"},{"@attributes":{"id":"p-0009","num":"0008"},"figref":"FIG. 3"},{"@attributes":{"id":"p-0010","num":"0009"},"figref":"FIG. 4"}]},"DETDESC":[{},{}]}
