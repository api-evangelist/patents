---
title: Method and apparatus for locating a faulty device in a computer system
abstract: A computer system compnses a processor (), memory () and a plurality of devices (), the processor () and the memory () being operable to effect the operation of a fault response processor (AFR), and a device driver (GRAPHICS, NETWORK, H2IO, IO2L, SERIAL) for each of the devices. The fault response processor (AFR) is operable to generate a model which represents the processor (), the memory () and the devices () of the computer system and the inter-connection of the processor (), memory () and the devices (GRAPHICS, NETWORK, H2IO, IO2L, SERIAL). The device driver (GRAPHICS, NETWORK, H2IO, IO2L, SERIAL) for each of the devices () is arranged, consequent upon a change of operational status of the device, to generate fault report data indicating whether the change of status was caused internally within the device or externally by another connected device. The devices of the computer system may be formed as a plurality of Field Replaceable Units (FRU). The fault response processor (AFR) is operable, consequent upon receipt of the fault reports from the device drivers (GRAPHICS, NETWORK, H2IO, IO2L, SERIAL) to estimate the location of a FRU containing a faulty device by applying the fault indication to the model. In other embodiments the fault report data includes direction information indicating a connection between the device and the other connected device which caused the external fault. Having identified the faulty device the FRU may be replaced, thereby minimizing down time of the computer system.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=07096387&OS=07096387&RS=07096387
owner: Sun Microsystems, Inc.
number: 07096387
owner_city: Santa Clara
owner_country: US
publication_date: 20020308
---

{"@attributes":{"id":"description"},"BRFSUM":[{},{}],"heading":["BACKGROUND OF THE INVENTION","SUMMARY OF THE INVENTION","DESCRIPTION OF EXAMPLE EMBODIMENTS","EXAMPLE","Example A","Example B"],"p":["The present invention relates to computer systems.","There are many fields in which mankind has become reliant on computers to perform valuable and sometimes essential functions. The reliance on computer systems demands that the down time of computer systems is as small as possible. The down time of a computer system is a period during which a computer system is inoperable as a result of a fault in the system. If a computer system goes down, the inconvenience and loss of revenue and indeed life endangering effects can be substantial. As result, the reliability of computer systems is arranged to be as high as possible.","In a co-pending U.S. patent application, Ser. No. 09\/097,485, a fault tolerant computer system is disclosed in which multiple processing sets operate to execute substantially the same software, thereby providing a amount of redundant processing. The redundancy provides a facility for detecting faults in the processing sets and for diagnosis and automatically recovering from the detected faults. As a result, an improvement in the reliability of the computer systems is effected, and consequently the down time of such fault tolerant computer systems is likely to be substantially reduced.","Computer systems are generally comprised of a processor and memory connected via an I\/O bus to utility devices which serve to provide under control of the processor particular functions. Although redundant processing sets within a computer system provide a facility for detecting, diagnosing and recovering from errors in the processing sets, the utility devices within the computer system, including the connecting buses and peripheral buses, may fail from time to time. A device failure can cause disruption in the operation of the computer system, and may even cause the computer system to go down. Conventionally, detecting and identifying a faulty device has required the presence of a skilled technician.","It is therefore desirable to provide a computer system in which a faulty device or a replaceable unit containing the faulty device can be readily identified, so that repair can be effected quickly, and down time of the computer system can be reduced.","In accordance with one aspect of the invention, there is provided a computer system comprising a plurality of devices, a fault response processor and a plurality of device drivers. Each device driver is associated with one of the plurality of devices. The fault response processor is operable to generate a model which represents the devices of the computer system and the inter-connection of the devices. The device driver for each of the devices is operable, consequent upon a change of operational status of the device, to generate fault report data indicating whether the change of status was caused internally within the device or externally by another connected device. The fault response processor is thereby operable, consequent upon receipt of the fault report data from the device drivers to estimate the location of a faulty device by applying the fault indication to the model.","A model of a computer system provides a structure for analysing fault reports. By providing device drivers which generate fault reports which include an indication of whether a change of operational status occurred internally or externally, a fault response processor can generate automatically an estimate from the fault reports of a device which is likely to be faulty, or a group or groups of devices which include at least one device which is likely to be faulty. In effect therefore, an indication may be generated automatically of a faulty device or group of devices which may therefore be replaced without the requirement for qualified personnel to interpret the fault reports insitu. Such devices may be for example a peripheral device which may be \u2018hot-insertable\u2019 which provide an arrangement in which a device may be replaced within a computer system without down time. For example, this is advantageous as the computer system may be installed at a site at which no technically qualified personnel are available to diagnose fault reports. As will be understood, the group of faulty devices may include a bus or buses which connect other devices in the group together.","Another aspect of the invention provides a fault response processor for use in identifying at least one of a plurality of devices of a system, the fault response processor being operable to generate a data model having a structure which represents the plurality of devices of the system and the inter-connection of the devices, to receive fault report data, generated by device drivers following a change in the operational status of the device associated with the device, the fault report data indicating whether the change of status was caused internally within the device or externally by another connected device, and to estimate the location of a faulty device, within the model, by applying the fault indication, from the device drivers, to the model.","According to a further aspect of the present invention, there is provided a method of locating faulty devices of a system, the method comprising providing a model of the system which model represents the inter-connection of the devices via at least one data path, generating fault report data, consequent upon a change of operational status of at least one of the devices, the fault report data indicating whether the change of status was caused internally within the device or externally by another connected device, and estimating the location of a faulty device, within the model, by applying the fault indication, from the device drivers, to the model.","According to a further aspect of the present invention there is provided a method of maintaining a computer system comprising performing the above method of locating faulty devices or groups of devices of a computer system, and replacing the faulty device or group of devices with a replacement device.","An aspect of the invention also provides a computer program providing computer executable instructions, which when loaded onto a computer configures the computer to operate as the computer system according to the present invention, or configures the computer to operate as a fault response processor, or configures the computer to operate as a device driver. An aspect also includes a computer program product comprising a computer readable medium having recorded thereon information signals representative of the computer program.","The computer readable medium can be any form of carrier medium for carrying computer program code, whether that be a magnetic, optical or any other form of data storage such as a tape, disk, solid state, or other form of storage providing random or read-only or any other form of access, or a transmission medium such as a telephone wire, radio waves, etc.","Embodiments of the present invention find particular application with a computer system having a plurality of devices which are controlled by device drivers which typically form part of user software executed on a central processor unit. As mentioned above, the devices of the computer system may be divided into groups, each group may contain a single device or a plurality of devices. Each group may be incorporated as part of a Field Replaceable Unit (FRU). A FRU is an item of hardware that can be added to or removed from a system by a customer or by a service engineer at a site where a computer system is installed. A computer system could be constructed entirely of FRUs. A desktop computer system, for example, in its simplest form may have a single FRU on which all the hardware devices of the desktop computer are incorporated, except for a monitor and keyboard which may form separate FRUs. A server however may be constructed of many FRUs: motherboards, CPU sets, peripherals, disks, for example which are interconnected.","The FRUs of a computer system will typically have an interdependent hierarchy, which is related to a hierarchical inter-relationship of the devices of the computer system, although a FRU may contain more than one device and so there may not be a direct correspondence between the device hierarchy and the FRU hierarchy.","Within a computer system the kernel software arranges the devices of the system in accordance with the device hierarchy. An example of a computer system with which the present invention finds application is shown in . In  a CPU , and memory  are connected to a host bus H. Also connected to the host bus H is a host bus to IO bus bridge H2IO and a graphics device . The host to IO bus bridge is connected to a main I\/O bus IO, to which is connected a network device  and an IO to L bridge IO2L. The network device is representative of a medium bandwidth device. A slow device  such as one which may be operating a serial interface is connected to the IO to L bridge via a low bandwidth bus L.","The devices of the computer system shown in  can be regarded as forming a hierarchical tree structure. At the root of the hierarchy is a node representing the host bus H of the system, which is the bus to which the CPU , and memory  are connected. Nodes for peripheral devices such as Ethernet chips, and serial UARTs form the leaves of the tree structure which are attached below nodes representative of the buses to which these devices are attached. The device tree structure for the computer system of  is shown in . The device tree shown in  represents the data paths between the drivers of the devices of the computer system of . Each device in the hierarchy has an associated device driver.","The devices shown in  will be incorporated within one or more FRUs. The computer system is constructed from these FRUs.  provides an example mapping of the devices of the computer system shown in  on to four FRUs , , , . A first FRU  forms a motherboard of the computer system, a second FRU forms a graphics device , a third FRU  forms a network interface and a fourth FRU  forms a serial interface . In accordance with the device hierarchy shown in , a relative dependency will be formed upon the FRUs of the computer system. Accordingly for the present example, this is illustrated in , where the FRU structure shown in  is illustrated with a relative dependency illustrated by arrows .","Generally, the relative dependent relationship between the FRUs and the mapping between FRU and device hierarchies is maintained in a library file.","Embodiments of the present invention provide a facility for readily identifying a FRU of the computer system which contains a device which has developed a fault. A FRU which contains a device which has developed a fault will be referred to in the following description as a faulty FRU. This is provided by an Automatic Fault Response processor. The faulty device may be for example one of the peripheral devices, but may also be one of the connecting buses H, H2IO, IO2L. As will be explained shortly, the most likely FRU which contains the faulty device is identified from fault reports generated by device drivers within the kernel software running on the CPU.","Device Drivers","In  the Automatic Fault Response (AFR) is shown generally to be connected through bi-directional links  to the device drivers GRAPHICS, NETWORK, H2IO, IO2L, SERIAL. Each of the device drivers is arranged to control the operation of a corresponding one of the devices which are represented in .","The AFR processor is also shown communicating with a library file  of the kernel. The library file  provides the relative dependent relationships between the FRUs and the mapping between the FRUs and the device hierarchy.","The device drivers are able to monitor the operation of the devices, through for example, a time for responding to commands, an amount of data processed by the device, a number of memory accesses, whether information is being correctly processed and other measures of relative performance. The devices are therefore able to detect a change in relative performance for the device.","Each of the device drivers GRAPHICS, NETWORK, H2IO, IO2L, SERIAL determines the operational status of the device. When there is a change in operational status a fault report is generated. In one example embodiment, the fault reports have the following fields:","Device datapath e.g.\/H2IO\/IO2L\/SERIAL","New state=down, degraded or up","Location=data path fault, device fault(internal) or external fault.","As will be explained shortly, the fault reports generated by the device drivers are used by the AFR processor to identify the FRU or FRUs of the computer system which contain a faulty device, referred to as a faulty FRU. However, in addition to the fault reports, the AFR utilises information from environment sensors. These may form part of the devices within the FRUs or may not be associated with any one device but rather monitor environmental conditions on the FRU as a whole. The sensors provide data which are representative of the values of the sensed parameters provided by the sensors for generating environmental information. The environmental information provides an indication of the operating status of components within the devices with respect to where the sensors are located. The sensed parameters may be for example, temperature, power consumption, or fan speed.","A separate management driver may be provided to interrogate the sensors or to retrieve data produced by the sensor from a cached memory. The management driver may then communicate the environment data to the AFR. Alternatively, the device driver for a device may retrieve the environment data from a sensor associated with the device driver and pass this to the AFR.","Automatic Fault Response Processor","The operation of the AFR processor to detect a faulty FRU from fault reports generated by device drivers will now be explained. The AFR performs two main functions. The first function is to extract information from the fault reports generated by the device drivers and to log the fault reports. The second function is to perform a diagnosis so as to estimate which of the FRUs of the computer system is or are faulty. To do this the AFR first builds a device tree in its own data space. This is represented by  as device tree DT constructed within the data space DS of the AFR. The device tree is constructed by adding or updating nodes for all the devices featured in the data paths of the fault reports collected during a period of time, called an epoch. The tree so constructed is hence not necessarily a complete copy of the full kernel device tree. A new tree is built during each new epoch. A detailed explanation of the formation of epochs will be provided shortly.","In some embodiments, the device tree is built by the AFR as follows:","For each fault report, extract the device data path and use it to search down the current tree for a device node. If no such node exists, create a new one with a state of UP and empty fault location information. If a node does exist, update it according to the following rules:\n\n","If the fault report declares service to be RESTORED then any location information is cleared from the device node and its state is changed to UP.","The model of the device tree forms the basis of the AFR's analysis. Analysis is performed in three phases. The purpose of the phases is, if possible, to identify the faulty FRU, with each analysis phase providing a further refinement in the estimation of the identity of the faulty FRU. As will be explained shortly, this is effected by assigning a fault probability to the FRU containing some or all of the devices in the device tree and declaring a FRU as faulty if it has a probability which exceeds a predetermined threshold. The three phases will be explained shortly. The formation of the time epochs will now be described.","Time Epochs and Dynamic Tree Building","As explained above the fault reports are analysed within an analysis interval which is referred to in the following description as a \u2018time epoch\u2019. Time epochs are determined from a rate of arrival of the fault reports. This is because the fault reports generated by the device drivers can be correlated. As such, although only a single device may be faulty, other devices may experience a change in operational status so that several fault reports are generated. As a result, the fault reports may be related, and the relationship may be reflected in a time at which the fault reports are generated. The fault reporting can have, therefore, a certain periodicity as a result of specific operations being performed by that device or an access being made to that device. By identifying, according to this periodicity, a time epoch corresponding to a generation cycle of the fault reports, an improvement in the likelihood of correctly locating the faulty device can be provided. This is represented schematically in .","In  the horizontal lines ,  represent the passage of time going from left to right across the page. Each of the boxes  between the horizontal line ,  represents a period during which a fault report or reports may be generated. The fault reports are analysed as mentioned above and used to update the device tree. The reference period is used to identify whether there has been sufficient recent fault report activity to indicate a change in the status of the devices to form the start GO and end STOP a time epoch . The reference periods are referred to as ticks and are shown in  which provides a graphical illustration of a number of device node changes in each tick with respect to time.","In order to identify a time epoch, the AFR monitors the device tree model to determine how many new nodes have been added to the device tree model or how many existing nodes have been updated since the previous tick. If there have been no changes since the previous tick but activity on the model has occurred, then an end of epoch is declared, and analysis on the device tree is performed. If there was no quiet period, which corresponds to a tick where there were no changes to the tree, in the last n ticks, then the tick period, T, is halved so that shorter quiet periods can be analysed. The graphical representation provided in  illustrates an analysis period between ends of epochs D_EPCH, and a period RTCK following n ticks without a quiet period ACT, in which the tick period is halved. The time epochs are identified from the rate of arrival of fault reports, and the changes that these fault reports make to the device tree model.","An epoch may continue indefinitely until the device tree changes. Once a change has occurred however, the maximum remaining epoch time as the tick period is progressively halved can be expressed generally by the following expression:\n\nnT+nT\/2+nT\/4+nT\/8+ . . . \u21922nT\n","There is however one exception to this bound on the epoch length. A time epoch which begins at the start of a boot configuration period of the computer system will continue until the boot configuration has been completed. The AFR processor operates in a first phase, as explained above to identify the time epoch within which it is assumed that the fault reports are correlated. The fault reports for the time epoch are collected and used to construct a device tree by \u2018decorating\u2019 the nodes with the current status of the devices. Operational states are represented by updating the current state of the node with information from the fault report according to the rules given above. The tree structure allows faults to be related hierarchically. Analysis modules of the AFR may use this information to modify the information on the tree.","Analysis Phases","Having built a device tree representing the possibly faulty devices, the AFR proceeds to analyse the device tree in order to attempt to identify the faulty FRU which contains the faulty device. This is done in three phases:","Phase I","The AFR performs phase I by modifying the nodes of the device tree, which was built during the time epoch to eliminate redundant fault reports. This is achieved in accordance with a set of rules. For example, if a parent node indicates a device fault, any fault indicated by a child node may be a false positive and so it may be desirable to clear the fault information of these child nodes. Effectively, the AFR processor is pre-processing the device tree in order to remove any fault reports which are redundant.",{"@attributes":{"id":"p-0056","num":"0058"},"figref":"FIG. 8","b":["1","2","2"]},"Phase II","In the second phase of the operation the device tree is analysed by the AFR to identify a set of faulty FRUs with a non-zero probability of having a fault. For example, if a device node is down and indicating that it is the location of the fault then there is a 100% probability that the FRU containing that device has a fault. If a device node is down and is indicating a fault in its data path and an ancestor is indicating an external fault then the fault is deemed to lie in a FRU containing either of the two devices or a FRU in between (if there is one). Hence a 100% probability is assigned to a set of FRUs but not to an individual.","In some embodiments the AFR is provided with a plurality of analysis modules Meach of which implements a single type of Phase I, Phase II or Phase III (see below) analysis. In Phase II, for each FRU, each module M(that implements a Phase II type of analysis) assigns a (possibly zero) probability Pthat there is a fault on that FRU. The Modules can assign probabilities to more than one FRU. If a FRU receives a non-zero probability of being faulty from more than one module, then the probabilities are combined as follows:\n\n(1\u2212)=(1\u2212)(1\u2212) . . . (1\u2212)\n","Therefore the probability that a particular FRU is not faulty is the probability that all the modules determine that it is not at fault. After phase III analysis has been performed which will be described shortly, the probability for each FRU is compared with a threshold and if greater than the threshold, then the FRU or FRUs are declared as being faulty.","The following examples provide a further illustration of the analysis of the device tree, to identify a possibly faulty set of FRUs:","Consider the AFR constructed device tree in . The driver for device A has reported an external fault FR. and the driver for device C has positively identified an internal fault FR.. The device C is unambiguously identified as being in error (P=100%). The FRU containing this device is therefore considered to be faulty.",{"@attributes":{"id":"p-0062","num":"0064"},"figref":"FIG. 10","b":["5","6"]},"Phase III","In a third phase of the operation of the AFR, the list of possibly faulty FRUs from phase II is examined further by applying environmental information provided by appropriate sensors. The information from the sensors from each FRU is checked for environmental problems such as power-loss, over-temperature, etc. This information is used to adjust the fault probabilities of the FRUs.","As illustrated in the examples given above, in some circumstances, the fault report information may not be conclusive and so the estimate of the faulty FRU may only identify a plurality of FRUs which may be faulty. For this reason the phase II analysis is operable to apply environmental reports to the device tree in order, if possible, to produce an improved probability estimate of the faulty FRU.","An example configuration of FRUs is shown in , with the associated device tree shown in . As shown in  the example FRUs are a mother board MBD, a slot SLT and a network card NET which are connected to the mother board FRU. The device tree shown in , also includes environment sensors, which provide sensed parameters relating to temperature TEMP and fan speed FAN.","In the third phase of the analysis, environmental information provided by the sensors TEMP, FAN from the FRUs is applied to the FRU list. In order to reduce the likelihood of false data being provided from the environmental information, a sensor device path may be used to determine whether the sensor device itself is down, in which case the environmental information is disregarded. The AFR processor uses the environment information to improve the estimate of faulty FRUs which resulted from phase II analysis. Where for example, the phase II analysis identifies only a group of FRUs which may be faulty, the environment data can be used to provide a more accurate estimate of the faulty FRU, by selecting a FRU having an abnormal sensor reading. Again, even after the environment information has been applied, it is possible that the estimate of the faulty FRU only identifies a group of FRUs. However it may be sufficient that enough report information has been acquired to identify that one or more FRUs within a group of FRUs are suspected as being at fault. This information is therefore valuable to a technician assigned to repair the computer system and to this end this information is generated with the fault reports on a graphical user interface to be accessed by the technician assigned to repair the computer system.","When all three phases of analysis are complete, the resultant list of FRU fault probabilities is examined and compared against a threshold value, for example, 90%. Any FRU having a fault probability in excess of this is deemed to have failed. The AFR indicates that a FRU is faulty, by marking the FRU as such. In some embodiments, a message is generated by the AFR, which is written to a non-volatile storage on the faulty FRU. The faulty FRU may be indicated by causing an LED to illuminate on the FRU. The operation of the post-analysis phase will now be explained in more detail.","Post Analysis Phase","If a FRU can be positively identified as being faulty, a repair technician can be alerted to this fact and to this end the AFR processor may signal that a FRU is faulty through an interface which is used to change the state of the FRU to faulty. This may be notified to a repair and maintenance organisation. Furthermore the FRU may carry a \u2018change me\u2019 LED so that the FRU can be easily identified by a technician. Alternatively, where a group of FRUs are suspected as being faulty, then each can be signalled as being possibly faulty. Accordingly, it will be appreciated that there are various ways for providing an external signal to indicate that a FRU is faulty, to a technician. Furthermore, the fault diagnosis may be written into a non-volatile storage medium on a board into which the FRU is loaded to aid diagnosis when the FRU is repaired.","In summary, in the three phases the AFR processor combines more than one device fault report and\/or environmental information reports from different parts of a computer system and automatically determines the most likely area of the system where a faulty FRU or device or group of devices is located and the devices which are affected by the fault. If there is sufficient evidence then one of the FRUs of the computer system may be declared faulty. This provides both an automated and an early recognition of devices which are faulty which can be used by a system administrator to initiate repairs before a device has completely failed.","Summary of Operation","The operation of the AFR processor is summarised in the form of flow diagrams which are shown in ,  and .  provides a flow diagram which illustrates the operation phase of the AFR processor when identifying the time epochs and building the device tree, before the analysis process is performed as shown in .",{"@attributes":{"id":"p-0071","num":"0073"},"figref":"FIG. 13","b":["300","302","304","306","310","311","312"]},"If the device tree has changed, a further decision step  is provided in order to determine whether or not it is necessary to adjust the tick period. If the device tree has changed for n consecutive tick periods, then the tick period is adjusted to the effect of making the tick period shorter, so that a temporal resolution of the analysis performed with respect to the tick periods is better matched to the arrival rate of the fault reports. If the device tree has changed for n consecutive periods, then the tick period is adjusted at step . Otherwise this step is bypassed.","The analysis process is represented by the flow diagram shown in . In , the pre-analysis process of generating the device tree DT from the fault report information collected in a time epoch is represented generally as the step . The device tree DT representing the possibly faulty devices is shown as an input to the first analysis phase P.. The AFR includes a plurality of analysis modules Meach of the modules being provided for a particular type of analysis, as mentioned above. The analysis modules of the AFR perform the phase 1 analysis by removing fault reports which will not be helpful in identifying the faulty FRU according to the set of rules explained above. Following the phase 1 process P., an adjusted device tree DT\u2032 is provided as an input to the second phase of the analysis P.. During the phase 2 analysis P., the fault probability of the FRU containing the devices in the device tree DT\u2032 is determined from the fault report information provided for the devices in the device tree DT\u2032. Each module Mis operable to calculate the probability Pof a FRU being faulty, from information generated by a device embodied within the FRU. At this point one or more FRUs FRUA, FRUB may be identified as possibly being faulty. However during phase three P., the environment information is applied to the identified FRUs, in order to refine the estimate of which of the FRUs FRUA, FRUB is faulty. As indicated above in some embodiments, this is effected by identifying whether any of the FRUs FRUA, FRUB returns environment data which indicates an abnormal reading. A threshold probability is then applied and, if any FRU's fault probability exceeds the threshold, this FRU is then declared as being faulty. After the faulty FRU has been identified, the post analysis phase  is performed.","The post analysis phase is described by the flow diagram shown in . As shown in , the post analysis phase starts at node  and begins with a decision step , at which it is determined whether the faulty FRU has been unambiguously located. If the FRU has been unambiguously located, then external signals associated with the FRU or group of FRUs identified as being faulty is or are activated at step , to provide an indication to a technician that these FRUs are faulty. Whether or not the faulty FRU or FRUs have not been unambiguously identified, a fault diagnostic report is generated at step  which indicates a plurality of possibly faulty FRUs. The fault diagnostic report is then displayed at step  on a graphical user interface or communicated to a remotely located site at which appropriate action can be taken to either replace all of the suspected faulty FRUs or to allow a technician to analyse the fault reports and\/or environmental data. At this point the process then terminates at step .","There has been described a computer system that comprises a processor, memory and a plurality of devices, the processor and the memory being operable to effect the operation of a fault response processor (AFR), and a device driver (GRAPHICS, NETWORK, H2IO, IO2L, SERIAL) for each of the devices. The fault response processor (AFR) is operable to generate a model which represents the processor, the memory and the devices of the computer system and the inter-connection of the processor, memory and the devices (GRAPHICS, NETWORK, H2IO, IO2L, SERIAL). The device driver (GRAPHICS, NETWORK, H2IO, IO2L, SERIAL) for each of the devices is arranged, consequent upon a change of operational status of the device, to generate fault report data indicating whether the change of status was caused internally within the device or externally by another connected device. The devices of the computer system may be formed as a plurality of Field Replaceable Units (FRU). The fault response processor (AFR) is operable, consequent upon receipt of the fault reports from the device drivers (GRAPHICS, NETWORK, H2IO, IO2L, SERIAL) to estimate the location of a FRU containing a faulty device by applying the fault indication to the model. In other embodiments the fault report data includes direction information indicating a connection between the device and the other connected device which caused the external fault. Having identified the faulty device the FRU may be replaced, thereby minimising down time of the computer system.","An improvement in the likelihood of correctly detecting the faulty device can be provided by embodiments in which the fault report data includes an indication of the operational status of the devices. The fault response processor is operable to estimate the location of the faulty device by combining the operational status of the device with the indication as to whether the fault was external or internal. A further improvement may be provided by embodiments in which each of the device drivers are operable, if the fault report data indicates that the change of status was caused externally, to generate fault direction information indicative of a connection from which the external fault is perceived, the fault response processor being operable to estimate the location of the faulty device by applying the fault direction information to the model.","In order to improve the accuracy of the estimated location of the faulty device or the group of devices, the operational status of each device may be one of up, indicating no fault, degraded, indicating that the device is still operational but with impaired performance or down indicating that the device is not operational. By applying this operational status information to the model of the devices of the computer system in combination with the relative direction on the data path from which the fault is perceived, the faulty device or group of devices may be unambiguously located from this information. To this end, for example, the fault response processor may be operable to pre-process the model by comparing the operational status information of the devices connected via a data path, and if the operational status indicates that the preceding device on the data path is degraded or down, the fault direction information indicating that the fault is internal, and the succeeding device is down or degraded, the fault direction information indicating that the fault is external, then fault reports associated with the succeeding device are disregarded in the estimation of the location of the faulty device.","In some embodiments, the fault response processor may be operable to generate a probability measure for at least one device in the model which is representative of a perceived likelihood that the associated device is faulty, the probability measure being generated by applying the fault direction information and the operational status information to the model and to compare the fault probability for the devices in the model with a predetermined threshold, and consequent upon the comparison, to estimate the location of the faulty device from the result of the comparison. The automatic fault response processor may generate a probability measure for the device being controlled by a device driver, or other devices in the model.","The device drivers may be arranged to generate an indication of the operational status of the device they are controlling from performance parameters of the devices they are controlling, such as, for example, a time to respond to a command, an amount of data received via an I\/O bus, an amount of data processed by the device, whether information is being correctly processed or from an error interrupt signal generated by the device. Accordingly, by comparing the fault probability measure for nodes representing the device in the model, the location of the faulty device is determined, for example, for the device node having a probability measure which exceeds the predetermined threshold.","For the situation in which more than one probability has been assigned to a device node in the model of the computer system, the fault response processor may be operable to combine the fault probabilities for the same device, the combined fault probability being compared with the pre-determined threshold to provide the estimated location of the faulty device.","Generally, in some embodiments, the devices of the computer system are arranged as a plurality of groups, each group containing one or more of the devices and the estimated location produced by the fault response processor is an estimate of one or more of the groups having a device which may be faulty. An advantage is provided by grouping the devices of the computer system in that each of the groups in some embodiments may be embodied within a Field Replaceable Units (FRU). A FRU is a unit containing one or more of the devices of a computer system including the processor and memory. The Field Replaceable Unit is configured and arranged to facilitate replacement, so that one Field Replaceable Unit can be exchanged for another quickly thereby minimizing down time. Some Field Replaceable Units may be \u2018hot insertable\u2019 so that they can be replaced whilst the computer system is operational, thereby avoiding down time.","In some embodiments, environment data representative of at least one parameter value of at least one environment sensor may be generated in association with at least one of the groups, the fault response processor being operable to analyze the environment data in association with the estimate of the group which is faulty to generate an improved estimate of the location of the faulty group from the model. The environment data may be generated by a device driver where the device being controlled includes a component which is an environment sensor.","The term environment data is therefore used to describe any information of parameters, logical flags or signals, or the like, which provide information appertaining to the operational status of components which are being monitored within the computer system. In what can be considered as a further phase of the operation of the fault response processor, the fault response processor operates to apply the environment data to the model of the computer system, in combination with the fault report information to provide a further improved estimate of which of the groups of devices contains the faulty devices. As such, the fault response processor may be operable to produce an improved estimate by identifying one of a plurality of groups of devices which are indicated as being possibly faulty.","The sensors which provide the environment data may be associated with the Field Replaceable Units. As such, the environment data can be used to confirm that a device contained on the Field Replaceable Unit is faulty, or can be used alone to indicate that one of the devices on the Field Replaceable Unit is developing a fault.","In order to increase the likelihood of correctly identifying the faulty group of devices, in some embodiments, the fault response processor may be operable to identify from a time of arrival of the fault reports from the device drivers an analysis interval, and to estimate the location of the faulty device from the fault reports which were generated within the analysis interval.","When a fault occurs within a device, causing a change in the operational status within that device, the fault reports generated by device drivers embodying the present invention can tend to generate fault reports at a rate which can be loosely described as correlated. This is because the fault reports being generated by different or the same devices may be to some extent related, the relationship being caused by the fact that it is the same fault which is causing the fault reports to be generated. As a result, embodiments of the invention are arranged to identify an analysis interval associated with a period over which fault reports associated with a particular fault are generated. The fault reports within this analysis interval (time epoch) are analysed together. The likelihood of correctly identifying the faulty device or group of devices may be therefore improved.","The fault response processor may be, for example, operable to identify the analysis interval by determining a rate of arrival of the fault reports within a predetermined time interval. The predetermined time interval may be shortened, where for a plurality of past time intervals, fault reports have been received. The analysis interval may be determined, for example, from at least one of a time at which the arrival rate increases and a time at which said arrival rate decreases.","In one embodiment, the fault response processor may be operable to generate diagnostic report data representative of the estimate and\/or the improved estimate of possibly faulty device, group of devices or FRU and the fault reports, which were used to identify the possibly faulty device, group of devices or FRU. Although the diagnostic report data may be communicated to a remotely located report tool, the computer system in some embodiments may comprise a graphical user interface, wherein the fault response processor may be arranged to produce the fault report on the graphical user interface.","In some embodiments, the model of the computer system may be a device tree or the like having at least two hierarchical levels into which the devices are divided, the devices in each level being connected with at least one device in the next level, the connection representing a data path.","It will be appreciated that although particular embodiments of the invention have been described, many modifications\/additions and\/or substitutions may be made within the spirit and scope of the present invention as defined in the appended claims.","Furthermore various modifications may be made to the embodiments of the invention herein before described without departing from the spirit and scope of the present invention. In particular, it will be appreciated that the embodiments of the invention can be applied to any form of computer system in which the computer system is comprised of a plurality of utility devices connected to a kernel comprising a processor and memory on which the kernel software is executed. Furthermore it will be appreciated that either the environmental analysis process corresponding to phase III of the Automatic Fault Response process could be performed separately and distinct from phase I and II of the process in which the fault report information is applied to the device tree and a list of FRUs generated, respectively. More particularly, in some embodiments of the present invention the devices of the computer system may not be embodied within FRUs. In such embodiments the AFR will be operable to identify the device which is most likely to be faulty or a group of devices, from one of several groups into which the devices of the computer system are divided.","In some embodiments, fault reports may be discounted in accordance with predetermined rules, when building the device tree. If, for example, a device is identified from past fault reports as being likely to have an intermittent fault, then this information can be used to discount fault reports associated with this or other devices. Furthermore field engineers could write modules to discount information from specific devices that are suspected as misbehaving at customer sites so providing a combination of automated fault report discounting and additional overriding fault report discounting introduced by the field engineer."],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"BRIEF DESCRIPTION OF THE DRAWINGS","p":["Embodiments of the present invention will be described hereinafter, by way of example only, with reference to the accompanying drawings in which like reference signs relate to like elements and in which:",{"@attributes":{"id":"p-0015","num":"0014"},"figref":"FIG. 1"},{"@attributes":{"id":"p-0016","num":"0015"},"figref":["FIG. 2","FIG. 1"]},{"@attributes":{"id":"p-0017","num":"0016"},"figref":["FIG. 3","FIG. 1"]},{"@attributes":{"id":"p-0018","num":"0017"},"figref":["FIG. 4","FIG. 3"]},{"@attributes":{"id":"p-0019","num":"0018"},"figref":["FIG. 5","FIG. 1"]},{"@attributes":{"id":"p-0020","num":"0019"},"figref":"FIG. 6"},{"@attributes":{"id":"p-0021","num":"0020"},"figref":"FIG. 7"},{"@attributes":{"id":"p-0022","num":"0021"},"figref":"FIGS. 8","b":["9","10"]},{"@attributes":{"id":"p-0023","num":"0022"},"figref":["FIG. 11","FIG. 1"]},{"@attributes":{"id":"p-0024","num":"0023"},"figref":"FIG. 12"},{"@attributes":{"id":"p-0025","num":"0024"},"figref":"FIG. 13"},{"@attributes":{"id":"p-0026","num":"0025"},"figref":"FIG. 14"},{"@attributes":{"id":"p-0027","num":"0026"},"figref":"FIG. 15"}]},"DETDESC":[{},{}]}
