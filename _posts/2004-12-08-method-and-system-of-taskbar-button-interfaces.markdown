---
title: Method and system of taskbar button interfaces
abstract: The present invention provides a system or method for displaying rich presentation taskbar buttons for a corresponding application. In one example, the rich presentation taskbar button may receive content from an application through a programming interface. The present invention further relates to a system and method for displaying a rich presentation taskbar button and for displaying and/or dismissing a thumbnail of an application window associated with the rich presentation taskbar button. The present invention may further include a system and method of pinning the thumbnail on a display or dismissing a thumbnail. The present invention also relates to a system and method for displaying multiple taskbar buttons in a taskbar including controlling the size of individual taskbar buttons, consolidating taskbar buttons and placing taskbar buttons into an overflow based on the type of taskbar button in the taskbar.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=07665031&OS=07665031&RS=07665031
owner: Microsoft Corporation
number: 07665031
owner_city: Redmond
owner_country: US
publication_date: 20041208
---

{"@attributes":{"id":"description"},"BRFSUM":[{},{}],"heading":["FIELD OF THE INVENTION","BACKGROUND OF THE INVENTION","SUMMARY OF THE INVENTION","DETAILED DESCRIPTION","A. Factoring","B. Redefinition","C. Inline Coding","D. Divorce","E. Rewriting"],"p":["The present invention relates to taskbar buttons and, in particular custom user interfaces in taskbar buttons.","On a computer, a user must typically perform multiple tasks while maintaining and utilizing applications and controlling the applications being used. The user must typically accomplish all of these numerous tasks in a limited amount of space on the display. Therefore, the user is often faced with the dilemma of not being able to perform a computer task while simultaneously controlling an application. Such shortcomings might be due, for example, to problems with limited display workspace.","Previously, systems have attempted to alleviate the problem of managing the workspace on the display by providing a mechanism by which the user may minimize windows to a taskbar. In this method, a user may minimize a window to the taskbar such that the window is no longer visible on the display and therefore does not take up significant space. In this way, the user may continue to perform the main computer task while other applications are available but not visible. However, when the application window is minimized, the user may no longer control that application without first re-opening the corresponding window. When an application window is minimized to the taskbar, the resulting taskbar button might contain the name of the application. Even though the user may determine what application is associated with a taskbar button, the user is not able to perform tasks with the application that has been minimized to the taskbar. In order to control the application, the user must re-open the application window. After performing an operation on the application in the open window, the user must then close the window again to free up workspace on the display. In so doing, the user must divert his\/her attention to opening (and closing) the application window and performing steps necessary to control the application. Moreover, when the application window is re-opened, space is occupied by the re-opened window further forcing the user to suspend activities in order to manage the additional opened window.","User frustration results from this tedious and time-consuming method of minimizing application windows and re-opening (and closing\/minimizing) the windows when control is desired. The user must interrupt his\/her computer work in order to open and close windows. This leads to a precipitous decline in efficiency as the user wastes time managing open windows on the display.","Thus, there exists a need in the art for a system and method for providing convenient application control to a user through custom user interfaces without waste of display workspace.","Aspects of the present invention provide a system or method for displaying a rich presentation taskbar button for a corresponding application. In one example, the rich presentation taskbar button may receive content from an application through a programming interface to display the rich presentation elements. In another example, the rich presentation taskbar button comprises an interactive control display element for displaying dynamic information.","In another aspect of the present invention, a system and method are provided for displaying a taskbar button and for displaying a thumbnail of an application window associated with the taskbar button. In another aspect of the present invention, the thumbnail of the application that is displayed is associated with a rich presentation taskbar button. The present invention may further include a system and method of pinning the thumbnail on a display or dismissing a thumbnail. In another example, the thumbnail is dismissed from the display.","In another aspect of the present invention, a system and method are provide for providing a taskbar that receives taskbar thumbnail content from an application via a programming interface and displaying the thumbnail based on the thumbnail content received from the application.","The present invention further provides for displaying a rich presentation taskbar button on a taskbar with simple taskbar buttons. In one embodiment, the rich presentation taskbar button is displayed at the same size as the simple taskbar button. In another example, the rich presentation taskbar button is displayed at a size larger than the simple taskbar button. In yet another example, the taskbar buttons are combined by taskbar button consolidation. Also, a system and method for placing taskbar buttons on overflow are provided.","Aspects of the present invention provide a system and method of providing a user with control of an application while conserving workspace. A taskbar is typically a graphical user interface on a computer that contains user interface elements that correspond to applications, windows, folders, or any other elements on a computer associated with data or data processing. A taskbar is commonly located on the lower edge of a display and may contain icons for various computer utilities. Also, a taskbar commonly contains taskbar buttons. Taskbar buttons are elements that are housed in a taskbar that provide a visual means to determine which windows or applications are currently active on the computer. Because windows or applications may be minimized on a display for a variety of reasons (e.g., to save space), it may not always be apparent which applications, for example, are active on the computer merely by examining the windows that are open on the display.","A typical taskbar button provides a user interface in the taskbar that provides the name of the active application on the computer. For example, if a media player application is active on the computer but with a minimized window, a taskbar button corresponding to the media player application may be present in the taskbar. This taskbar button that corresponds to the media player application can provide the name of the application (i.e., the words \u201cMedia Player Application\u201d, for example, may be written in the taskbar button). The taskbar may also optionally display an icon that can identify the application. For example, a trademark or logo can be present in the taskbar button to enhance user recognition of the application itself Clicking or selecting this type of taskbar button (i.e., clicking on any location in the taskbar button, for example) restores the corresponding window to the display. If the window is already open on the display but obscured by other windows, clicking the corresponding taskbar button brings the window to the front of the display such that the corresponding application window is displayed in front of the other windows on the display. Clicking the taskbar button again may, for example, minimize the window so that the window is no longer visible on the display. However, the taskbar button corresponding to the application remains in the taskbar as a visual cue that the application is still active. This standard taskbar button that contains the name of the corresponding application written thereon and optionally, a trademark or logo, and provides only the functionality of minimizing windows or opening windows that are minimized is referred to herein as a \u201csimple taskbar button\u201d because the simple taskbar button merely provides simple text that indicates the name of the application and an optional icon that visually identifies the application. Also, the simple taskbar button does not provide any additional functionality except for opening a minimized window (or minimizing a displayed window) and\/or bringing a window to the front of a display.","In one aspect of the present invention, a rich presentation taskbar button is provided. A \u201crich presentation taskbar button\u201d as provided herein contains a custom user interface containing information beyond the simple name of an application and\/or an icon identifying the application. As one example, the rich presentation taskbar button may contain control display elements associated with a corresponding application to provide a user with the ability to control the operation or functionality of the corresponding application. In this example, the rich presentation taskbar button may receive user input which may control the application associated with the taskbar button. As another example, the rich presentation taskbar button may receive and provide, for example, animations, dynamic information, or any pertinent information via the corresponding application. In this example, the rich presentation taskbar button provides information to the user but does not receive input from the user.","Hence, the rich presentation taskbar button may provide a 1-way interface in which the taskbar button does not receive input from the user but provides information or data to the user (e.g., dynamic information) from the application. With such a 1-way interface, the rich presentation taskbar button may receive and present information from a corresponding application to a user. Likewise, the rich presentation taskbar button may receive input from a user to operate, control or maintain an application such as information from a user that is pertinent to a corresponding application in a 1-way interface without providing output to the user. As another example, the rich presentation taskbar may provide a 2-way interface to the associated application such that a user may input data or input commands into the rich presentation taskbar button that controls or otherwise operates the application and the application may provide information, control, functionality, animation or any pertinent information to the user from the application. This type of taskbar button is referred to herein as a \u201crich presentation taskbar button\u201d because the taskbar button provides information beyond a name and\/or logo\/icon of an associated application and may also provide functionality beyond simply opening a minimized application window. The information or control display elements provided in the rich presentation taskbar button may be authored by the application associated with the rich presentation taskbar button. For example, the application may author the content of the associated rich presentation taskbar button and provide the information to the taskbar programming interface. In this example, the programming interface of the rich presentation taskbar receives content from the application associated with an rich presentation taskbar button and displays the rich presentation taskbar button with the content from the associated application.","In one example, the rich presentation taskbar button may contain rich presentation material such as dynamic information. This information may be provided in addition to an icon or static text that would be provided by a simple taskbar button. This type of rich presentation taskbar button can display a wide variety of information such as but not limited to multiple icons, icons of different sizes, special formatting of text, animations, scrolling text, dynamic information that is updated on an ongoing basis and that pertains to the application useful to the user, etc. Such information may include, for example, dynamic information pertaining to the application. Examples of dynamic information associated with the application that may be displayed in a rich presentation taskbar button include status information, progress meters, or other information that may be provided by the application such as securities information, weather forecast information, sports results, news events, auction results and status, application status information, buddy lists, etc.","The rich presentation taskbar button may also provide interactive controls such that the user may maintain control of the operation of the application via the rich presentation e taskbar button. This is an example of a rich presentation taskbar button with a 2-way interface. For example, the rich presentation taskbar button may contain display elements such as control icons, buttons or menus such that a process may be invoked upon activation or selection of the corresponding icon, button, or menu item within the rich presentation taskbar button. A user may click an application control button that is displayed in the rich presentation taskbar button such that the application associated with the rich presentation taskbar button may perform a task as desired by the user.","For example, a media player application may be associated with an rich presentation taskbar button of the present invention. The media player application may play various media on the computer. For example, a user may play music on the computer through the media player application (e.g., CD-ROMs, MP3, etc) or may play videos, animation, display graphical images, etc. The application window of the media player application may contain controls such that a user may, for example, click a \u201cPLAY\u201d button located within the application window if the user desires to listen to music, watch a video, etc. Likewise, a user may click a \u201cSTOP\u201d button to stop the play of the media. The user may select any controls that might be provided in the application window such as \u201cFF\u201d, \u201cREV\u201d, \u201cPAUSE\u201d, etc. However, if the media player application window is minimized or obscured for any reason (e.g., to save space on the display, obscured by overlapping windows, etc.), the window of the media player application is no longer visible on the display and hence, the control display elements are also typically not available to the user if the typical \u201csimple taskbar button\u201d is used. Thus, a user wishing to control the operation of the media player application (e.g., stop a currently playing music track, fast forward through a current music track, skip to the next or previous track, switch to shuffle play, etc), would have to open the media player application window or bring focus to the obscured media player application window before such control would be possible if a simple taskbar button is used.","The rich presentation taskbar button of this example of the present invention enables control of the corresponding application without the necessity of opening minimized windows as is the case with simple taskbar buttons. In this example, the rich presentation taskbar button contains control display elements for controlling the media player application directly through the corresponding rich presentation taskbar button. For example, the rich presentation taskbar button corresponding to a media player application may provide transport controls (i.e., \u201cSTOP\u201d, \u201cPLAY\u201d, \u201cFF\u201d, \u201cREV\u201d, \u201cPAUSE\u201d, \u201cREC\u201d, etc) when the media application window is minimized. Therefore, control of the media application program may be performed directly through the rich presentation taskbar button and opening the corresponding media application window is unnecessary with the rich presentation taskbar button.","As another example, the rich presentation taskbar button may also provide an input means such that the user may input data into the rich presentation taskbar button that is relevant to the application associated with the rich presentation taskbar button. For example, the user may input text into the application by entering the desired text directly into the rich presentation taskbar button. The user may desire text input for a variety of reasons that may depend on the application being used. For example, when communicating via instant messaging with other users, a user may enter text into an instant messaging application window. A typical instant messaging application window contains a field in the window in which to enter text such that the text may be sent instantly to a recipient. However, if the application window for the instant messaging application is minimized for any reason (e.g., to save space on the display), if a \u201csimple taskbar button\u201d is used, the user would also lose the ability to continue an ongoing conversation via instant messaging. If the user wished to converse via instant messaging, the user would have to first open the instant messaging application window before the user could enter any messages to a recipient. This is because the user, who is only provided with a \u201csimple taskbar button\u201d of the instant messaging application, would only observe the name of the application (e.g., the words \u201cInstant Messaging Application\u201d displayed within the corresponding simple taskbar button). However, the simple taskbar button would not provide any additional functionality to enable the user to enter text, continue the conversation, or read any incoming messages or any part of the conversation thread.","In this example of the rich presentation taskbar button, a user may minimize an instant messaging application window (e.g., to save space on the display or to more easily perform other computer tasks). Alternatively, the instant messaging application window may become obscured by another window on the display. After the instant messaging application window is minimized (or obscured), a corresponding rich presentation taskbar button is present in the taskbar. The corresponding rich presentation taskbar button contains information and control display elements that enable additional functionality to control the operation of the instant messaging application. For example, the rich presentation taskbar button associated with the instant messaging system may provide not only the name of the application itself, but may provide a portion of a conversation thread and\/or an input means such that the user may input data directly into the rich presentation taskbar button. In this example, the user may input text into the rich presentation taskbar button and send the resulting message to a recipient via the instant messaging application.","Additionally, the rich presentation taskbar button may provide information on the operation of the corresponding application. For example, the rich presentation taskbar button may provide information on the progress or status of a process that the corresponding application is performing.","As these examples illustrate, when an application is minimized to the rich presentation taskbar button, the user may continue to control the application through the rich presentation taskbar button without the need of maximizing the window or, if the application window is open but obscured by another display element such as an overlapping window, without the need of removing the obscuring display element.","In one aspect of the present invention, the user performs a computer task. The computer task may require at least one open window on the display. For example, the user may be running a first application, such as but not limited to word processing via a word processing program. The word processing program displays a window on the display in which the user may type characters or edit written material. However, the window associated with the word processing program requires real estate on the display. Therefore, if a second application that displays windows on the display is simultaneously active, there may be interference between the window(s) of the first application and the window(s) of the second application.","In this example, the user's first priority may be to complete the primary computer task. If that is the case, the user may focus on the first application and minimize the window of the second application. Also, if additional applications are active, the user may also minimize the window(s) of any additional applications as well as the window(s) of the second application. Thus, the user may work in the first application and minimize the windows of all other active applications while engaged in the primary computer task. Even if the other active application windows are not minimized, the first application window have focus such that the first application window may obscure the other active application windows. In this way, the other active application windows are not accessible to the user because they are either minimized or obscured by other windows. Instead, the applications associated with the other active application windows (either minimized or obscured) are displayed as taskbar buttons. In this way, the user may continue to perform the primary computer task (e.g., word processing) without interference from the windows of the other active applications.","However, if the user desires to perform an operation or obtain information regarding the second application or any other application in which the window is minimized or obscured, the user would typically have to first either open the associated window or otherwise bring the associated window into full view on the display if a simple taskbar button is used. For example, if the user wishes to perform an operation in the second application, the user would typically have to first cause the associated window of the second application to be displayed in full (e.g., maximize the window or bring the display of the window to the front), then perform the operation in the second application with the window of the second application fully visible and accessible. Because the accessible window of the second application may obscure the window of the first application, the user would then have to close or minimize the window of the second application after the operation on the second application is complete to free up space on the display to continue performing the primary computer task in the first application. Alternatively, the user may bring the window of the first application to the front to obscure the window of the second application.","In this aspect of the present invention, the user may leave the window of the second application minimized or obscured and still perform the operation in the second application. For example, the user may control the application through the associated rich presentation taskbar button of the present invention. Hence, the window of the second application need not be maximized or brought to the front of the display prior to performing the operation on the second application. In this way, the user may save time and effort by conveniently performing the operation on the second application. At the same time, the user may quickly return to the primary activity with the first application.","In another aspect of the present invention, windows switching capabilities are provided in the rich presentation taskbar buttons. In a non-limiting example, the rich presentation taskbar button may contain a predetermined area. The predetermined area in the rich presentation taskbar button may be selected to provide window management functionality. For example, a user may click on a predetermined area in the rich presentation taskbar button to maximize or otherwise bring the window associated with the rich presentation taskbar button into view if the window is currently minimized or otherwise obscured. For example, clicking on the predetermined area can maximize a minimized window associated with a rich presentation taskbar button. Alternatively, clicking on the icon may minimize a window associated with the application if the window is maximized or cause the visible and accessible window to be displayed behind other display elements. As another example, the user may click in a predetermined area in the rich presentation taskbar to maximize or minimize the window associated with the application. In one embodiment, the predetermined area is at an edge of the rich presentation taskbar button closest to the side of the screen.","In another aspect of the present invention, a thumbnail associated with a taskbar button is provided. This taskbar button may be a rich presentation taskbar button of the present invention or may be any taskbar button associated with an application, folder or display element. A thumbnail may be displayed corresponding to the window associated with the selected taskbar button. For example, a user may select a rich presentation taskbar button that is associated with an application window to cause the display of a thumbnail of the application window. The thumbnail of the application window may appear anywhere on the display. For user convenience, the thumbnail of the application window is preferably displayed adjacent to the associated taskbar button. For purposes of displaying the thumbnail, the user may \u201cselect\u201d the associated taskbar button in a variety of ways. For example, the user may hover a cursor over the taskbar button to \u201cselect\u201d the taskbar button for the purpose of displaying the thumbnail. Alternatively, the taskbar button may contain a button or an icon such that clicking the button or icon causes the corresponding thumbnail to appear on the display.","The displayed thumbnail may take many forms. For example, the thumbnail may be a miniature version of the full window or the client area of the window. The thumbnail may also contain a title bar for easy identification of the window by the user. Depending on the application associated with the thumbnail, the thumbnail may also contain dynamic information or information that changes in real-time to reflect the content of the window. The taskbar button may provide a programming interface such that an application associated with the taskbar button may provide content information authored in the application to the taskbar API that specifies the content of the thumbnail. Thus, the content of the thumbnail may be customized by the application to provide improved information with enhanced relevance to the particular application.","In another aspect of the present invention, the thumbnail may be dismissed by moving the cursor away from the location from which the thumbnail was invoked. For example, if the cursor hovers over a predetermined location (e.g., the corresponding taskbar button) and causes the thumbnail to be displayed, the thumbnail may be dismissed by moving the cursor away from the predetermined location. In this way, the thumbnail does not interfere with other display elements such as windows.","In another aspect of the present invention, the thumbnail may be pinned to the display such that the thumbnail does not disappear by only moving the cursor away from the area. Instead, the thumbnail remains visible even after the cursor is moved away and is not hovering over the predetermined location. This allows the user to work in one window while retaining access to the thumbnail of another window. It may be desired to dismiss a thumbnail when the thumbnail is open. By \u201cdismiss\u201d, it is meant that the thumbnail is removed from the visual display. Thus, after a thumbnail is \u201cdismissed,\u201d the thumbnail is no longer visible on the display. When it is desired to dismiss a thumbnail that is pinned open, a cursor may be moved over a location to close the thumbnail. For example, an area (e.g., a \u201cclose\u201d button) on the thumbnail may be present for closing the thumbnail such that when the area is clicked, the thumbnail is dismissed. Alternatively, the thumbnail may be dismissed by hovering the cursor of a predetermined location on the thumbnail.","In another aspect of the present invention, a cursor may be hovered over a location to display a thumbnail associated with a taskbar button such as a rich presentation taskbar button or a cursor may be removed from the location after a thumbnail is displayed. However, in this example, the thumbnail is displayed or dismissed, respectively, only after a predetermined period of time elapses. In this way, the thumbnail is not displayed or dismissed accidentally or prematurely.","In another aspect of the present invention, the rich presentation taskbar button associated with the application window is altered based on the other taskbar buttons in the taskbar through scaling of the taskbar button(s). As additional taskbar buttons are added to the taskbar, the taskbar buttons associated with the application windows may adapt to the space available on the taskbar. The additional taskbar buttons or the taskbar buttons already on the taskbar may, for example, decrease in size or decrease in width in order to fit on the taskbar. Alternatively, the taskbar button may combine through taskbar button consolidation with other taskbar buttons, i.e., the taskbar button may merge with other selected taskbar buttons to form one combination taskbar button among the merged taskbar buttons. In another embodiment, the taskbar button may be placed in an \u201coverflow\u201d location, e.g., a menu or taskbar scrolling mechanism, when necessary.","The size of the rich presentation taskbar button of the present invention may be altered in different ways. The rich presentation taskbar button may shrink in approximately the same proportion as simple taskbar buttons. In this example, each of the taskbar buttons in the taskbar is substantially the same size. In another example, the rich presentation taskbar button may shrink up to a predetermined limit but remain constant in size after the predetermined limit is reached. The rich presentation taskbar button, therefore, does not shrink beyond this limit. This may be useful depending on the content of the rich presentation taskbar button. If the rich presentation taskbar button contains a large amount of content, for example, the rich presentation taskbar button may not be useful if it shrinks excessively. In this case, the rich presentation taskbar button is prevented from shrinking excessively and still provides useful user interface.","In another example, the rich presentation taskbar button of the present invention does not shrink in size. Instead, the simple taskbar buttons shrink in size. In this way, the rich presentation taskbar button still provides useful user interface to the user while remaining on the taskbar. As additional taskbar buttons are added to the taskbar, additional space is provided to the rich presentation taskbar button by shrinking of the simple taskbar buttons.","In another example, the rich presentation taskbar button shrinks to fit on the taskbar as additional taskbar buttons are added to the taskbar, however, the rich presentation taskbar button shrinks only after the other (simple) taskbar buttons on the taskbar have shrunk.","Instead of shrinking, the rich presentation taskbar button may combine by taskbar button consolidation with other taskbar buttons, i.e., merge with other taskbar buttons. In this way, space on the taskbar is conserved as multiple taskbar buttons become one taskbar button. In one example, the rich presentation taskbar button is not combined or consolidated with other taskbar buttons. Space on the taskbar is obtained by combining or consolidating simple taskbar buttons. In this way, the user interface in the rich presentation taskbar button is preserved.","In another example, the rich presentation taskbar button may combine by taskbar button consolidation with other buttons but only after other taskbar buttons have combined. In this way, the rich presentation taskbar button will not combine with other taskbar buttons until space is limited and the maximum amount of space has been obtained already by combining other taskbar buttons.","Alternatively, the rich presentation taskbar button may combine by taskbar button consolidation with other taskbar buttons to preserve space on the taskbar as additional taskbar buttons are added to the taskbar.","The present invention may be implemented in an operating environment.  illustrates an example of a suitable operating environment  in which aspects of the present invention may be implemented. The operating environment  is only one example of a suitable operating environment and is not intended to suggest any limitation as to the scope of use or functionality of the invention. Other well known computing systems, environments, and\/or configurations that may be suitable for use with the invention include, but are not limited to, personal computers, server computers, hand-held or laptop devices, multiprocessor systems, microprocessor-based systems, programmable consumer electronics, network PCs, minicomputers, mainframe computers, distributed computing environments that include any of the above systems or devices, and the like.",{"@attributes":{"id":"p-0062","num":"0061"},"figref":"FIG. 1","b":["100","100","100","100"]},"The invention is operational with numerous other general purpose or special purpose computing system environments or configurations. Examples of well known computing systems, environments, and\/or configurations that may be suitable for use with the invention include, but are not limited to, personal computers, server computers, hand-held or laptop devices, multiprocessor systems, microprocessor-based systems, programmable consumer electronics, network PCs, minicomputers, mainframe computers, distributed computing environments that include any of the above systems or devices, and the like.","With reference to , an illustrative system for implementing the invention includes a general purpose computing device in the form of a computer . Components of computer  may include, but are not limited to, a processing unit , a system memory , and a system bus  that couples various system components including the system memory to the processing unit . The system bus  may be any of several types of bus structures including a memory bus or memory controller, a peripheral bus, and a local bus using any of a variety of bus architectures. By way of example, and not limitation, such architectures include Industry Standard Architecture (ISA) bus, Micro Channel Architecture (MCA) bus, Enhanced ISA (EISA) bus, Video Electronics Standards Association (VESA) local bus, and Peripheral Component Interconnect (PCI) bus also known as Mezzanine bus.","Computer  typically includes a variety of computer readable media. Computer readable media includes both volatile and nonvolatile media, removable and non-removable media. By way of example, and not limitation, computer readable media may comprise computer storage media and communication media and includes, but is not limited to, RAM, ROM, EEPROM, flash memory or other memory technology, CD-ROM, digital versatile disks (DVD) or other optical disk storage, magnetic cassettes, magnetic tape, magnetic disk storage or other magnetic storage devices, or any other medium which can be used to store the desired information and which can accessed by computer . Communication media typically embodies computer readable instructions, data structures, program modules or other data in a modulated data signal such as a carrier wave or other transport mechanism and includes any information delivery media. The term \u201cmodulated data signal\u201d means a signal that has one or more of its characteristics set or changed in such a manner as to encode information in the signal. By way of example, and not limitation, communication media includes wired media such as a wired network or direct-wired connection, and wireless media such as acoustic, RF, infrared and other wireless media. Combinations of the any of the above should also be included within the scope of computer readable media.","The system memory  includes computer storage media in the form of volatile and\/or nonvolatile memory such as read only memory (ROM)  and random access memory (RAM) . A basic input\/output system  (BIOS), containing the basic routines that help to transfer information between elements within computer , such as during start-up, is typically stored in ROM . RAM  typically contains data and\/or program modules that are immediately accessible to and\/or presently being operated on by processing unit . By way of example, and not limitation,  illustrates operating system , application programs , other program modules , and program data .","The computer  may also include other removable\/non-removable, volatile\/nonvolatile computer storage media. By way of example only,  illustrates a hard disk drive  that reads from or writes to non-removable, nonvolatile magnetic media, a magnetic disk drive  that reads from or writes to a removable, nonvolatile magnetic disk , and an optical disk drive  that reads from or writes to a removable, nonvolatile optical disk  such as a CD ROM or other optical media. Other removable\/non-removable, volatile\/nonvolatile computer storage media that can be used in the exemplary operating environment include, but are not limited to, magnetic tape cassettes, flash memory cards, digital versatile disks, digital video tape, solid state RAM, solid state ROM, and the like. The hard disk drive  is typically connected to the system bus  through a non-removable memory interface such as interface , and magnetic disk drive  and optical disk drive  are typically connected to the system bus  by a removable memory interface, such as interface .","The drives and their associated computer storage media discussed above and illustrated in , provide storage of computer readable instructions, data structures, program modules and other data for the computer . In , for example, hard disk drive  is illustrated as storing operating system , application programs , other program modules , and program data . Note that these components can either be the same as or different from operating system , application programs , other program modules , and program data . Operating system , application programs , other program modules , and program data  are given different numbers here to illustrate that, at a minimum, they are different copies. A user may enter commands and information into the computer  through input devices such as a keyboard  and pointing device , commonly referred to as a mouse, trackball or touch pad. Other input devices (not shown) may include a microphone, joystick, game pad, satellite dish, scanner, or the like. These and other input devices are often connected to the processing unit  through a user input interface  that is coupled to the system bus, but may be connected by other interface and bus structures, such as a parallel port, game port or a universal serial bus (USB). A monitor  or other type of display device is also connected to the system bus  via an interface, such as a video interface . In addition to the monitor, computers may also include other peripheral output devices such as speakers  and printer , which may be connected through an output peripheral interface .","The computer  may operate in a networked environment using logical connections to one or more remote computers, such as a remote computer . The remote computer  may be a personal computer, a server, a router, a network PC, a peer device or other common network node, and typically includes many or all of the elements described above relative to the computer , although only a memory storage device  has been illustrated in . The logical connections depicted in  include a local area network (LAN)  and a wide area network (WAN) , but may also include other networks. Such networking environments are commonplace in offices, enterprise-wide computer networks, intranets and the Internet.","When used in a LAN networking environment, the computer  is connected to the LAN  through a network interface or adapter . When used in a WAN networking environment, the computer  typically includes a modem  or other means for establishing communications over the WAN , such as the Internet. The modem , which may be internal or external, may be connected to the system bus  via the user input interface , or other appropriate mechanism. In a networked environment, program modules depicted relative to the computer , or portions thereof, may be stored in the remote memory storage device. By way of example, and not limitation,  illustrates remote application programs  as residing on memory device . It will be appreciated that the network connections shown are exemplary and other means of establishing a communications link between the computers may be used.","It will be appreciated that the network connections shown are exemplary and other means of establishing a communications link between the computers can be used. The existence of any of various well-known protocols such as TCP\/IP, Ethernet, FTP, HTTP and the like is presumed, and the system can be operated in a client-server configuration to permit a user to retrieve web pages from a web-based server. Any of various conventional web browsers can be used to display and manipulate data on web pages.","In an aspect of the present invention, a custom user interface is provided in a taskbar button associated with an application. The custom user interface in the taskbar button may provide content that may be specified by the application itself. For example, the taskbar may contain a programming interface such that applications may author content and provide the content to the programming interface for display.","A programming interface (or more simply \u201cinterface\u201d) may be viewed as any mechanism, process, protocol for enabling one or more segment(s) of code to communicate with or access the functionality provided by one or more other segment(s) of code. Alternatively, a programming interface may be viewed as one or more mechanism(s), method(s), function call(s), module(s), object(s), etc. of a component of a system capable of communicative coupling to one or more mechanism(s), method(s), function call(s), module(s), etc. of other component(s). The term \u201csegment of code\u201d in the preceding sentence is intended to include one or more instructions or lines of code, and includes, e.g., code modules, objects, subroutines, functions, and so on, regardless of the terminology applied or whether the code segments are separately compiled, or whether the code segments are provided as source, intermediate, or object code, whether the code segments are utilized in a runtime system or process, or whether they are located on the same or different machines or distributed across multiple machines, or whether the functionality represented by the segments of code are implemented wholly in software, wholly in hardware, or a combination of hardware and software.","Notionally, a programming interface may be viewed generically, as shown in  or .  illustrates an interface Interface as a conduit through which first and second code segments communicate.  illustrates an interface as comprising interface objects I and I (which may or may not be part of the first and second code segments), which enable first and second code segments of a system to communicate via medium M. In the view of , one may consider interface objects I and I as separate interfaces of the same system and one may also consider that objects I and I plus medium M comprise the interface. Although  show bi-directional flow and interfaces on each side of the flow, certain implementations may only have information flow in one direction (or no information flow as described below) or may only have an interface object on one side. By way of example, and not limitation, terms such as application programming interface (API), entry point, method, function, subroutine, remote procedure call, and component object model (COM) interface, are encompassed within the definition of programming interface.","Aspects of such a programming interface may include the method whereby the first code segment transmits information (where \u201cinformation\u201d is used in its broadest sense and includes data, commands, requests, etc.) to the second code segment; the method whereby the second code segment receives the information; and the structure, sequence, syntax, organization, schema, timing and content of the information. In this regard, the underlying transport medium itself may be unimportant to the operation of the interface, whether the medium be wired or wireless, or a combination of both, as long as the information is transported in the manner defined by the interface. In certain situations, information may not be passed in one or both directions in the conventional sense, as the information transfer may be either via another mechanism (e.g. information placed in a buffer, file, etc. separate from information flow between the code segments) or non-existent, as when one code segment simply accesses functionality performed by a second code segment. Any or all of these aspects may be important in a given situation, e.g., depending on whether the code segments are part of a system in a loosely coupled or tightly coupled configuration, and so this list should be considered illustrative and non-limiting.","This notion of a programming interface is known to those skilled in the art and is clear from the foregoing detailed description of the invention. There are, however, other ways to implement a programming interface, and, unless expressly excluded, these too are intended to be encompassed by the claims set forth at the end of this specification. Such other ways may appear to be more sophisticated or complex than the simplistic view of , but they nonetheless perform a similar function to accomplish the same overall result. We will now briefly describe some illustrative alternative implementations of a programming interface.","A communication from one code segment to another may be accomplished indirectly by breaking the communication into multiple discrete communications. This is depicted schematically in . As shown, some interfaces can be described in terms of divisible sets of functionality. Thus, the interface functionality of  may be factored to achieve the same result, just as one may mathematically provide 24, or 2 times 2 times 3 times 2. Accordingly, as illustrated in , the function provided by interface Interface may be subdivided to convert the communications of the interface into multiple interfaces InterfaceA, InterfaceB, InterfaceC, etc. while achieving the same result. As illustrated in , the function provided by interface I may be subdivided into multiple interfaces I, I, I, etc. while achieving the same result. Similarly, interface I of the second code segment which receives information from the first code segment may be factored into multiple interfaces I, I, I, etc. When factoring, the number of interfaces included with the 1st code segment need not match the number of interfaces included with the 2nd code segment. In either of the cases of , the functional spirit of interfaces Interface and I remain the same as with , respectively. The factoring of interfaces may also follow associative, commutative, and other mathematical properties such that the factoring may be difficult to recognize. For instance, ordering of operations may be unimportant, and consequently, a function carried out by an interface may be carried out well in advance of reaching the interface, by another piece of code or interface, or performed by a separate component of the system. Moreover, one of ordinary skill in the programming arts can appreciate that there are a variety of ways of making different function calls that achieve the same result.","In some cases, it may be possible to ignore, add or redefine certain aspects (e.g., parameters) of a programming interface while still accomplishing the intended result. This is illustrated in . For example, assume interface Interface of  includes a function call Square (input, precision, output), a call that includes three parameters, input, precision and output, and which is issued from the 1st Code Segment to the 2nd Code Segment. If the middle parameter precision is of no concern in a given scenario, as shown in , it could just as well be ignored or even replaced with a meaningless (in this situation) parameter. One may also add an additional parameter of no concern. In either event, the functionality of square can be achieved, so long as output is returned after input is squared by the second code segment. Precision may very well be a meaningful parameter to some downstream or other portion of the computing system; however, once it is recognized that precision is not necessary for the narrow purpose of calculating the square, it may be replaced or ignored. For example, instead of passing a valid precision value, a meaningless value such as a birth date could be passed without adversely affecting the result. Similarly, as shown in , interface I is replaced by interface I\u2032, redefined to ignore or add parameters to the interface. Interface I may similarly be redefined as interface I\u2032, redefined to ignore unnecessary parameters, or parameters that may be processed elsewhere. The point here is that in some cases a programming interface may include aspects, such as parameters, which are not needed for some purpose, and so they may be ignored or redefined, or processed elsewhere for other purposes.","It may also be feasible to merge some or all of the functionality of two separate code modules such that the \u201cinterface\u201d between them changes form. For example, the functionality of  may be converted to the functionality of , respectively. In , the previous 1st and 2nd Code Segments of  are merged into a module containing both of them. In this case, the code segments may still be communicating with each other but the interface may be adapted to a form which is more suitable to the single module. Thus, for example, formal Call and Return statements may no longer be necessary, but similar processing or response(s) pursuant to interface Interface may still be in effect. Similarly, shown in , part (or all) of interface  from  may be written inline into interface I to form interface I\u2033. As illustrated, interface I is divided into Iand I, and interface portion Ihas been coded in-line with interface I to form interface I\u2033. For a concrete example, consider that the interface I from  performs a function call square (input, output), which is received by interface I, which after processing the value passed with input (to calculate the square of an input) by the second code segment, passes back the squared result with output. In such a case, the processing performed by the second code segment (squaring input) can be performed by the first code segment without a call to the interface.","A communication from one code segment to another may be accomplished indirectly by breaking the communication into multiple discrete communications. This is depicted schematically in . As shown in , one or more piece(s) of code (Divorce Interface(s), since they divorce functionality and\/or interface functions from the original interface) are provided to convert the communications on the first interface, Interface, to conform them to a different interface, in this case interfaces InterfaceA, InterfaceB and InterfaceC. This might be done, e.g., where there is an installed base of applications designed to communicate with, say, an operating system in accordance with an Interface protocol, but then the operating system is changed to use a different interface, in this case interfaces InterfaceA, InterfaceB and InterfaceC. The point is that the original interface used by the 2nd Code Segment is changed such that it is no longer compatible with the interface used by the 1st Code Segment, and so an intermediary is used to make the old and new interfaces compatible. Similarly, as shown in , a third code segment can be introduced with divorce interface DI to receive the communications from interface I and with divorce interface DI to transmit the interface functionality to, for example, interfaces Iand I, redesigned to work with DI, but to provide the same functional result. Similarly, DI and D may work together to translate the functionality of interfaces I and I of  to a new operating system, while providing the same or similar functional result.","Yet another possible variant is to dynamically rewrite the code to replace the interface functionality with something else but which achieves the same overall result. For example, there may be a system in which a code segment presented in an intermediate language (e.g. Microsoft IL, Java ByteCode, etc.) is provided to a Just-in-Time (JIT) compiler or interpreter in an execution environment (such as that provided by the Net framework, the Java runtime environment, or other similar runtime type environments). The JIT compiler may be written so as to dynamically convert the communications from the 1st Code Segment to the 2nd Code Segment, i.e., to conform them to a different interface as may be required by the 2nd Code Segment (either the original or a different 2nd Code Segment). This is depicted in . As can be seen in , this approach is similar to the Divorce scenario described above. It might be done, e.g., where an installed base of applications are designed to communicate with an operating system in accordance with an Interface protocol, but then the operating system is changed to use a different interface. The JIT Compiler could be used to conform the communications on the fly from the installed-base applications to the new interface of the operating system. As depicted in , this approach of dynamically rewriting the interface(s) may be applied to dynamically factor, or otherwise alter the interface(s) as well.","It is also noted that the above-described scenarios for achieving the same or similar result as an interface via alternative embodiments may also be combined in various ways, serially and\/or in parallel, or with other intervening code. Thus, the alternative embodiments presented above are not mutually exclusive and may be mixed, matched and combined to produce the same or equivalent scenarios to the generic scenarios presented in . It is also noted that, as with most programming constructs, there are other similar ways of achieving the same or similar functionality of an interface which may not be described herein, but nonetheless are represented by the spirit and scope of the invention, i.e., it is noted that it is at least partly the functionality represented by, and the advantageous results enabled by, an interface that underlie the value of an interface.",{"@attributes":{"id":"p-0083","num":"0082"},"figref":["FIG. 2","FIG. 2","FIG. 2"],"b":["201","201","201","202","202","203","204","205","201","206","203","207","204","208","205","209"]},{"@attributes":{"id":"p-0084","num":"0083"},"figref":["FIG. 3","FIG. 3","FIG. 3","FIG. 3"],"b":["301","301","302","303","303","302","302","304","305","306","307","301"]},{"@attributes":{"id":"p-0085","num":"0084"},"figref":["FIG. 4","FIG. 4"],"b":["401","402","403","401","402","403","404","405","404","405","401","406","407","406","407","406","407"]},"In this example, the rich presentation taskbar button of the media player application  contains control display elements that provide a user with control of the operation\/functionality of the media player application. In this example, the rich presentation taskbar button  contains buttons that perform an operation in the application upon selection. In this example, the rich presentation taskbar button  contains user interface buttons for transport control (i.e., \u201cPLAY\u201d, \u201cSTOP\u201d, \u201cFF\u201d, \u201cREV\u201d, etc.). The buttons for transport control include buttons for playing , rewinding or replaying a track , fast forwarding or skipping a track , pausing  or stopping , for example.  is only an example of the types of display elements that may be used to control an application. The media player application rich presentation taskbar button  may contain many other controls such as but not limited to record or scan.",{"@attributes":{"id":"p-0087","num":"0086"},"figref":["FIG. 4","FIG. 4"],"b":["407","407","407","407","407"]},"In another example, the rich presentation taskbar buttons may display information, control display elements or dynamic information for updating only when the corresponding window is minimized or obscured by overlapping windows. For example, a media player window may be minimized (e.g., to save space on the display) such that the media player window is not visible on the display even though the media player application is still active on the computer. When the media player application window is minimized, the corresponding rich presentation taskbar button may display the control display elements as depicted in . Alternatively, the media player application window remains on the display but is obscured by other display elements. The rich presentation taskbar button associated with the obscured application window may also display elements as depicted in . In this example, the rich presentation taskbar button displays transport controls such that the user may control the operation of the application (e.g., PLAY, STOP, etc.) by clicking the corresponding control display element in the rich presentation taskbar button. In this example, when the media player application window is restored to the display (e.g., by clicking a predetermined location on the rich presentation taskbar button), the rich presentation taskbar button associated with the media player application may convert to a simple taskbar button. When the media player application window is minimized or when the media player application window is obscured by overlapping display elements on the display (e.g., other windows), the simple taskbar button associated with the media player application may convert to a rich presentation taskbar button. Thus, the user may continue to control the media player application in this example, even though the window is either minimized, obscured by other display elements, or is otherwise inaccessible.",{"@attributes":{"id":"p-0089","num":"0088"},"figref":["FIG. 5","FIG. 5","FIG. 5"],"b":["501","502","501","506","506","502","506","506","503","501","507","507","507","504","501","508","508","508","508","504","504","501"]},"As  illustrates, a cursor  is positioned on the minimize box  of the media player application window . If the minimize box  is activated or selected, the window  will not be displayed on the display  but the taskbar button  will remain in the taskbar.",{"@attributes":{"id":"p-0091","num":"0090"},"figref":["FIG. 6","FIG. 5","FIG. 6","FIG. 6"],"b":["601","602","605","603","601","603","606","601","604","607","607","607","607","607"]},"In this example, the rich presentation taskbar button  associated with the media player application contains rich presentation information that is pertinent to the media player application and may be updated on an on-going basis. As  illustrates, the artist's name and the track number is provided in the taskbar button in this example. This information may be updated as the track may change as well as the artist.  illustrates one implementation of the present invention. However, the present invention is not so limited as the rich presentation taskbar button may provide any enhanced information.","Taskbar buttons may be associated with a thumbnail display.  illustrates display of a thumbnail associated with an application and a rich presentation taskbar button of the present invention. As  illustrates, a display  displays open windows. A window for a folder (e.g., \u201cMy Documents\u201d window ) is displayed on the display  and is associated with a corresponding simple taskbar button . A word processing application window  is also displayed on the display  and is also associated with a corresponding simple taskbar button . A media player application has been minimized so that the media player application window is not present on the display . However, the corresponding rich presentation taskbar button  associated with the media player application is present in the taskbar of the display . The rich presentation taskbar button  in this example contains control display elements for the media player application (e.g., transport controls). In this example as illustrated in , the rich presentation taskbar button  corresponding to the media player application provides buttons that can be used to control the application, i.e., the playing of media.","A cursor  is hovered over a predetermined location on the rich presentation taskbar button  to cause the display of a thumbnail . The thumbnail  is associated with the media player application. In the example illustrated in , the predetermined location on the rich presentation taskbar button  is on a side of the rich presentation taskbar button . The thumbnail  in this example is a miniature version of the full media player application in this example. However, the present invention is not so limited. The thumbnail may contain any information associated with the application. In the case of a media player application, the corresponding thumbnail may display stream information, album art, a visualization, a video, etc.","The content of a thumbnail may vary based on the associated application. Also, the content may be specified or authored by an application and presented to the taskbar programming interface. If the content of the thumbnail is specified by the application, the application (e.g., the media player application), may specify the content of the corresponding thumbnail to the programming interface of the taskbar. Thus, the resulting thumbnail may provide enhanced information that may be customized to the specific application or may be tailored to the needs of the user.",{"@attributes":{"id":"p-0096","num":"0095"},"figref":["FIG. 8","FIG. 8","FIG. 7"],"b":["801","802","801","805","802","803","803","806","803","807","807","807","801"]},"The cursor  is moved away from the predetermined location on the rich presentation taskbar button , the predetermined location being the location which provides a thumbnail of the corresponding application if, for example, a cursor is hovered over the predetermined location.  illustrates that the thumbnail is dismissed after the cursor  is moved away from the predetermined location thus saving space on the display .","A user may wish a thumbnail to remain visible on the display even when a cursor is moved away from the predetermined area.  illustrates a method of pinning a thumbnail so that the thumbnail remains visible on a display even when the cursor is moved away from the predetermined location.  illustrates a display  containing open windows. A folder window (e.g., \u201cMy Documents\u201d window ) is displayed on the display  and is associated with a corresponding simple taskbar button . A word processing application window  is also displayed on the display  and partially obscures the \u201cMy Documents\u201d window . The word processing application window  is associated with a simple taskbar button  present in the taskbar. As in the examples of , a media player application window is not visible on the display  after having been either minimized or obscured by other display elements. However, a rich presentation taskbar button  associated with the media player application is displayed in the taskbar. The rich presentation taskbar button  contains interactive control display elements such that a user may control the operation or functionality of the media player application without having to take up space on the display  with an opened media player application window. As  illustrates, the rich presentation taskbar button  associated with the media player application contains transport controls as interactive control display elements.","As  illustrates, the cursor  has been moved away from the predetermined location on the rich presentation taskbar button  for opening the thumbnail . However, the thumbnail  remains open and visible on the display  because the thumbnail has been pinned open. Pinning the thumbnail may be accomplished by a variety of techniques. For example, the thumbnail may be pinned open by clicking on a designated icon or display element or by selecting an option on a menu. A menu may be invoked, for example, by pulling a menu down, by right-clicking, etc. The thumbnail may also be pinned open by default, if desired. When the thumbnail  is pinned open, the cursor may be moved to any location on the display without affecting the thumbnail , i.e., the thumbnail  remains open even when the cursor  is moved away from the taskbar button . When a thumbnail is pinned open, the user may continue to have access to additional information contained in the thumbnail even when the cursor is moved away from the predetermined location for opening the thumbnail. For example, a user may wish to view a video playing on the media player application while working on other projects on the computer. A thumbnail version of the video may play on the thumbnail that is pinned open on the display. The rich presentation taskbar button  provides the user with control of the operation of the media player application (and, hence, the playing\/stopping\/searching\/etc. of the video) while also watching the video. At the same time, the user saves space on the display because a smaller version of the application is displayed as opposed to the full size window.",{"@attributes":{"id":"p-0100","num":"0099"},"figref":"FIG. 9","b":["909","904","909","908","908","909","908"]},{"@attributes":{"id":"p-0101","num":"0100"},"figref":["FIG. 10","FIG. 10","FIGS. 7 and 8"],"b":["1001","1002","1005","1003","1002","1003","1006","1001","1007","1007","1007","1001","1008","1004","1007","1008","1001"]},"A cursor  is used in this example to select a close button . When the close button  is selected (e.g., clicked), the thumbnail is closed and is no longer visible on the display .",{"@attributes":{"id":"p-0103","num":"0102"},"figref":["FIG. 11","FIG. 10","FIG. 11"],"b":["1101","1102","1103","1102","1102","1103","1105","1106","1104","1107"]},"In addition, thumbnails from multiple taskbar buttons may be displayed.  illustrates a display  containing a folder window (\u201cMy Documents\u201d window ) that is partially obscured by a word processing application window . The \u201cMy Documents\u201d window  and the word processing application window  are associated with simple taskbar buttons ( and , respectively). In the example illustrated in , a media player application window and an instant messaging application window have been minimized and are therefore not displayed on the display , however each application has an associated taskbar button ( and , respectively) in the taskbar. The media player application is associated with a rich presentation taskbar button  that provides interactive control display elements that provide control of the media player application. By selecting (e.g., clicking) an interactive control display element in the rich presentation taskbar button , a user may control the operation or functionality of the media player application itself. Likewise, the instant messaging application is associated with a rich presentation taskbar button . The rich presentation taskbar button  provides interactive control display elements that permit a user to enter text and to send entered text via instant messaging through the rich presentation taskbar button . Also, a user is provided with dynamic information (i.e., information that is updated) that is periodically changed as events occur. In this case, a conversation thread of a conversation via instant messaging is updated to include the latest messages sent by a user.","A cursor  is hovered over the rich presentation taskbar button  for the media player application such that a thumbnail  for the media player application appears on the display . The thumbnail may include any variety of information associated with the media player application. For example, the thumbnail may include a miniature version of a video that is playing on the application, the name of a musical artist who is performing, a visual associated with the music or media playing, or any other pertinent information. The cursor may be moved away from the rich presentation taskbar button  as indicated by the arrow in .",{"@attributes":{"id":"p-0106","num":"0105"},"figref":["FIG. 13","FIG. 12","FIG. 13","FIG. 13","FIG. 13"],"b":["1207","1301","1302","1303","1302","1305","1303","1306","1307","1308","1308","1308"]},"The cursor  has been moved away from the rich presentation taskbar button  associated with the media player application. Therefore, the thumbnail associated with the media player application has been dismissed and is no longer visible on the display . However, the cursor  has been moved to the rich presentation taskbar button  corresponding to an instant messaging application such that a thumbnail  for the instant messaging application is displayed.","Also multiple thumbnails may be displayed simultaneously. For example, thumbnails may be pinned such that the thumbnails may remain displayed even after a cursor is moved away from a corresponding taskbar button.  illustrates a display  containing a folder window (e.g., \u201cMy Documents\u201d window ) and an overlapping word processing application window . In addition, a media player application and an instant messaging application are active but minimized. There is a taskbar button displayed that corresponds to each of the applications. For example, the \u201cMy Documents\u201d window  is associated with simple taskbar button , the word processing application window  is associated with a simple taskbar button , the media player application is associated with an rich presentation taskbar button  and the instant messaging application is associated with a rich presentation taskbar button .",{"@attributes":{"id":"p-0109","num":"0108"},"figref":["FIG. 14","FIG. 14"],"b":["1409","1401","1404","1408","1410","1401","1410","1404","1408","1401"]},"When thumbnails are displayed and dismissed, there may be a possibility of accidental or premature dismissal of a thumbnail or display of a thumbnail.  illustrates an example of a method for preventing premature or accidental displaying of a thumbnail or dismissal of a thumbnail. A cursor is located in step  and is determined if the cursor has been moved over a predetermined location for which a thumbnail is to be invoked in step . The predetermined location may be located anywhere on the display and is preferably located on a corresponding taskbar button. If the cursor is in the proper location (the \u201cYES\u201d branch of step ), it is further determined if a predetermined delay has elapsed while the cursor is in the proper location. The delay period may be set based on user preference or the individual circumstances. If insufficient time has elapsed after the cursor is positioned in the location to open a thumbnail, the system waits until either the delay period has elapsed (the \u201cYES\u201d branch of step ) signifying that the thumbnail should be displayed (step ) or the cursor is again moved away from the location (signifying that the thumbnail should not be displayed). If the cursor has been located in the location for displaying the thumbnail for the predetermined period of time, the thumbnail is displayed (step ).",{"@attributes":{"id":"p-0111","num":"0110"},"figref":"FIG. 15","b":["1504","1505","1505","1506","1506","1507"]},{"@attributes":{"id":"p-0112","num":"0111"},"figref":["FIG. 16","FIG. 16"],"b":["1600","1601","1602","1603","1603","1604","1602","1602","1604","1605","1606"]},{"@attributes":{"id":"p-0113","num":"0112"},"figref":"FIG. 17","b":["1700","1701","1702","1702","1703","1702","1704"]},"In another aspect of the present invention, the taskbar buttons may be scaled. For example, when a plurality of taskbar buttons are present in the taskbar, the taskbar buttons may change in size or content to accommodate all of the taskbar buttons with the amount of space available.  illustrate examples of scaling the taskbar buttons based on size.",{"@attributes":{"id":"p-0115","num":"0114"},"figref":"FIG. 18A","b":["1801","1802","1803"]},{"@attributes":{"id":"p-0116","num":"0115"},"figref":["FIG. 18B","FIG. 18A","FIG. 18B","FIG. 18A","FIG. 18B"],"b":["1804","1085","1086","1807","1807"]},{"@attributes":{"id":"p-0117","num":"0116"},"figref":["FIG. 18C","FIG. 18C","FIG. 18C"],"b":["1811","1808","1089","1810","1811","1811","1810","1808","1809","1810","1811","1808","1809","1810","1811"]},"As additional taskbar buttons are added to the taskbar of , it may become necessary to decrease the size of the rich presentation taskbar buttons. In this example (not illustrated), the size of simple taskbar buttons may be decreased to a particular minimum threshold before the size of rich presentation taskbar buttons is decreased. For example, the size of the simple taskbar buttons may be decreased in size to a point where useful information is no longer available in the taskbar button. One non-limiting example of a taskbar button too small to provide useful information would be a taskbar button that lacks sufficient space to provide even a name or logo that can identify the application associated with the taskbar button. Thus, in this example, the individual sizes of taskbar buttons are decreased according to a priority scheme. In one example, the priority scheme gives priority to rich presentation taskbar buttons such that rich presentation taskbar buttons retain their original size over simple taskbar buttons. After the size of simple taskbar buttons decreases to a point where any further decrease in size would degrade useful information from the simple taskbar button, the rich presentation taskbar buttons would then begin to decrease in size.","In another example (not illustrated), the size of rich presentation taskbar buttons would decrease either in proportion to all other taskbar buttons (i.e., simple taskbar buttons) or after the other simple taskbar buttons have decreased in size to a point where any further reduction in size would render the taskbar buttons uninformative, however, the rich presentation taskbar buttons would only decrease in size to a point where they would provide sufficient information or control capability. At that point, the rich presentation taskbar buttons would no longer decrease in size.","In addition, taskbar buttons may merge together to save space in the taskbar, for example, through taskbar button consolidation. As used herein, the phrase \u201ctaskbar button consolidation\u201d means multiple taskbar buttons being combined into a single taskbar button. When information from at least 2 taskbar buttons are placed into a single taskbar button, more space is available in the taskbar for other display items. Thus, particularly when additional space is needed in the taskbar, multiple taskbar buttons may be combined through taskbar button consolidation.  illustrate examples of taskbar button consolidation.  illustrates an example of a taskbar containing three taskbar buttons. A folder taskbar button (e.g., \u201cMy Documents\u201d taskbar button ) and a word processing application taskbar button  are present in this example. Both the \u201cMy Documents\u201d taskbar button  and the word processing application taskbar button  are simple taskbar buttons. A third taskbar button  associated with a media player application is present in this application. The taskbar button  associated with a media player application is a rich presentation taskbar button as illustrated in . In this example, there is sufficient space on the taskbar to accommodate all three taskbar buttons. As a result, all three taskbar buttons are displayed individually and at full size.",{"@attributes":{"id":"p-0121","num":"0120"},"figref":["FIG. 19B","FIG. 19B","FIG. 19A","FIG. 19B","FIG. 19A","FIG. 19A","FIG. 19B"],"b":["1906","1906","1906","1901","1902","1904","1905","1906"]},{"@attributes":{"id":"p-0122","num":"0121"},"figref":["FIG. 19C","FIG. 19C","FIG. 19A","FIG. 19A","FIG. 19C","FIG. 19B","FIG. 19B","FIG. 19C"],"b":["1909","1901","1902","1907","1905","1906","1908","1907","1908","1909"]},{"@attributes":{"id":"p-0123","num":"0122"},"figref":["FIG. 19D","FIG. 19D","FIG. 19D","FIG. 19A","FIG. 19A","FIG. 19B","FIG. 19D"],"b":["1912","1912","1901","1902","1905","1901","1902","1910"]},{"@attributes":{"id":"p-0124","num":"0123"},"figref":["FIG. 19E","FIG. 19E","FIG. 19C"],"b":["1921","1922","1920","1920","1924","1923","1923","1925","1920"]},{"@attributes":{"id":"p-0125","num":"0124"},"figref":"FIG. 19F","b":["1932","1930","1934","1933","1930","1930","1933","1934","1933","1930","1930","1935"]},"Alternatively, taskbar buttons may be placed on an overflow menu to allow space on the taskbar to accommodate the taskbar buttons.  illustrate examples of taskbar buttons being placed in overflow.  illustrates a taskbar containing three taskbar buttons\u2014a \u201cMy Documents\u201d taskbar button , a word processing application taskbar button  and a media player taskbar button . As in the previous examples, the \u201cMy Documents\u201d taskbar button  and the word processing application taskbar button  are simple taskbar buttons and the media player taskbar button  is a rich presentation taskbar button.",{"@attributes":{"id":"p-0127","num":"0126"},"figref":["FIG. 20B","FIG. 20A"],"b":["2004","2005","2006","2001","2010"]},{"@attributes":{"id":"p-0128","num":"0127"},"figref":["FIG. 20D","FIG. 20D","FIG. 20D"],"b":["2017","2015","2017","2016","2018","2018"]},{"@attributes":{"id":"p-0129","num":"0128"},"figref":"FIG. 20E","b":["2021","2023","2022","2022","2012","2023"]},{"@attributes":{"id":"p-0130","num":"0129"},"figref":["FIG. 20C","FIG. 20B"],"b":["2009","2004","2011"]},"Selection of which application to place into overflow in these examples may depend on user preferences or needs in the particular situation. For example, rich presentation taskbar buttons (such as the media player taskbar button or the instant messaging application taskbar button) may be preserved over simple taskbar buttons (e.g., the \u201cMy Documents\u201d taskbar button and the word processing application taskbar button). In this example, the simple taskbar buttons are placed in overflow first. After there are no simple taskbar buttons in the taskbar, then rich presentation taskbar buttons may be placed into overflow. In this example, rich presentation taskbar buttons would be placed into overflow only after all simple taskbar buttons are already placed into overflow.","It is understood that aspects of the present invention can take many forms and embodiments. The embodiments shown herein are intended to illustrate rather than to limit the invention, it being appreciated that variations may be made without departing from the spirit of the scope of the invention. Although illustrative embodiments of the invention have been shown and described, a wide range of modification, change and substitution is intended in the foregoing disclosure and in some instances some features of the present invention may be employed without a corresponding use of the other features. Accordingly, it is appropriate that the appended claims be construed broadly and in a manner consistent with the scope of the invention."],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"BRIEF DESCRIPTION OF THE DRAWINGS","p":[{"@attributes":{"id":"p-0011","num":"0010"},"figref":"FIG. 1A"},{"@attributes":{"id":"p-0012","num":"0011"},"figref":"FIGS. 1B through 1M"},{"@attributes":{"id":"p-0013","num":"0012"},"figref":"FIG. 2"},{"@attributes":{"id":"p-0014","num":"0013"},"figref":"FIG. 3"},{"@attributes":{"id":"p-0015","num":"0014"},"figref":"FIG. 4"},{"@attributes":{"id":"p-0016","num":"0015"},"figref":"FIG. 5"},{"@attributes":{"id":"p-0017","num":"0016"},"figref":"FIG. 6"},{"@attributes":{"id":"p-0018","num":"0017"},"figref":"FIG. 7"},{"@attributes":{"id":"p-0019","num":"0018"},"figref":"FIG. 8"},{"@attributes":{"id":"p-0020","num":"0019"},"figref":"FIG. 9"},{"@attributes":{"id":"p-0021","num":"0020"},"figref":"FIG. 10"},{"@attributes":{"id":"p-0022","num":"0021"},"figref":"FIG. 11"},{"@attributes":{"id":"p-0023","num":"0022"},"figref":"FIG. 12"},{"@attributes":{"id":"p-0024","num":"0023"},"figref":"FIG. 13"},{"@attributes":{"id":"p-0025","num":"0024"},"figref":"FIG. 14"},{"@attributes":{"id":"p-0026","num":"0025"},"figref":"FIG. 15"},{"@attributes":{"id":"p-0027","num":"0026"},"figref":"FIG. 16"},{"@attributes":{"id":"p-0028","num":"0027"},"figref":"FIG. 17"},{"@attributes":{"id":"p-0029","num":"0028"},"figref":"FIGS. 18A-18C"},{"@attributes":{"id":"p-0030","num":"0029"},"figref":"FIGS. 19A-19F"},{"@attributes":{"id":"p-0031","num":"0030"},"figref":"FIGS. 20A-20E"}]},"DETDESC":[{},{}]}
