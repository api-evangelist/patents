---
title: Motion picture file encryption method and digital rights management method using the same
abstract: A method of encrypting a motion picture file and a method of digital rights management using the same, wherein encryption method includes: extracting information on the location of at least one video sample, which is a real-time streaming unit, from meta-data of the motion picture file; extracting the video samples based on the location information; encrypting the extracted video samples, excluding a start code within a video sample header of each extracted video sample, based on predetermined encryption information; and producing an encrypted motion picture file by recombining the encrypted video samples. Since the file is encrypted in units of video object planes (VOPs) while maintaining an MEPG-4 file format, the encryption method can be easily applied to a completed file format and streaming service is also possible.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08755524&OS=08755524&RS=08755524
owner: Sejong Industry-Academy Cooperation Foundation
number: 08755524
owner_city: Seoul
owner_country: KR
publication_date: 20041208
---

{"@attributes":{"id":"description"},"BRFSUM":[{},{}],"heading":["BACKGROUND OF THE INVENTION","SUMMARY OF THE INVENTION","DETAILED DESCRIPTION OF ILLUSTRATIVE, NON-LIMITING EMBODIMENTS OF THE INVENTION"],"p":["This application claims the priority from Korean Patent Application No. 2003-88795, filed on Dec. 8, 2003, in the Korean Intellectual Property Office, the disclosure of which is incorporated herein in its entirety by reference.","1. Field of the Invention","The present invention relates to a method of encrypting a motion picture file and a method of managing digital rights using the same, and more particularly, to a method of encrypting a motion picture file while maintaining the format of the motion picture file so that a streaming service under digital rights management is possible, and a method of digital rights management using the encryption method.","2. Description of the Related Art","Currently, service providers provide multi-media data to users in the form of download service or streaming service. Download service enables an entire multi-media file to be downloaded from a service provider's computer to a user's computer and then reproduced. Streaming service is when a service provider segments a file into real-time refreshable segments and transmits the segments to a user who reproduces the segments in real-time.","Whichever service is provided by the service provider, the user has to complete a process of acquiring legitimate rights for relevant multi-media data before being able to reproduce the files. A user who attempts to access the files without acquiring legal rights to the files should be blocked. To facilitate such selective provision and denial of access, multi-media files are encrypted.","Digital rights management (DRM) is a solution for all sorts of systems that only allow users with legal rights to access encrypted files. Generally, a DRM system includes a contents provider, a user, a DRM server, and so on, and can include an electronic payment process, a user authentication process, and a public key infrastructure (PKI).","The most basic DRM method is encrypting a Motion Picture Experts Group (MPEG) file, transmitting the encrypted MPEG file to a user, and then providing a key that can decrypt the encrypted file to the user if it is confirmed through a user authentication process that the user has legal rights. The user authentication process can include an electronic payment process and a PKI can be used for transmitting the key.","However, such an encryption method cannot be used for streaming service because decryption is possible only after downloading the entire file. That is, even if a user key is transmitted from the DRM server, reproduction of the corresponding file is not possible until the entire encrypted file is downloaded.","Another encryption method involves encrypting discrete cosine transform coefficients, for example, AC or DC values, during a motion picture file encoding process.","This method, however, does not encrypt a completed motion picture file but adds an additional encryption process to a motion picture file encoding process. As a result, this method cannot be easily applied to a completed motion picture file. In addition, if a contents provider has to apply an encryption algorithm that is specifically designated for the contents provider in a motion picture file production process, the contents provider has the disadvantage of having to depend on a motion picture file provider to provide the service. This inhibits the growth and development of the on-line contents industry.","Illustrative, non-limiting embodiments of the present invention overcome the above disadvantages and other disadvantages not described above. Also, the present invention is not required to overcome the disadvantages described above, and illustrative, non-limiting embodiment of the present invention may not overcome any of the problems described above.","The present invention provides an encryption method that can be applied to streaming service and at the same time easily applied to a complete motion picture file without taking part in a motion picture file production process, and a digital rights management method using the encryption method.","According to an aspect of the present invention, there is provided a method of encrypting a motion picture file that comprises a media data region and a meta-data region, the encryption method comprising extracting information on the location of at least one video sample, which is a real-time streaming unit, from meta-data of the motion picture file; extracting the at least one video sample based on the location information; encrypting the extracted video samples, excluding a start code within a video sample header of each extracted video sample, based on predetermined encryption information; and producing an encrypted motion picture file by recombining the encrypted video samples.","Extracting location information of the at least one video sample may include checking whether a video media information atom exists among lower level atoms of a moov atom; when the video media information atom exists, extracting a chunk size, a chunk offset, and a sample size from a chunk offset atom and a sample size atom; and calculating an offset of each video object plane (VOP) based on the extracted chunk size, the chunk offset, and the sample size.","According to another aspect of the present invention, there is provided a method of decrypting an MPEG-4 file encrypted in units of VOPs based on predetermined encryption information, the decryption method including: detecting a start code of each VOP within the MPEG-4 file; extracting each VOP based on the start code; extracting encrypted VOPs among the extracted VOPs based on encryption information; decrypting the encrypted VOPs based on decryption information that corresponds to the encryption information; and reproducing the decrypted MPEG-4 file by recombining the decrypted VOPs.","The encryption information may include a decryption key, an encryption type, an encryption mode, and a VOP ID.","According to another aspect of the present invention, there is provided a method of a digital rights management comprising: a contents server and a contents client receiving encryption and decryption information by carrying out a user authentication process for a predetermined MPEG-4 file through a DRM server; the contents server encrypting a relevant MPEG-4 file in units of VOPs based on the encryption information; transmitting a packet that includes the VOPs of the encrypted MPEG-4 file to the contents client through a streaming server; the contents client extracting the encrypted VOPs from the packet; decrypting the extracted VOPs using the decryption information; and reproducing the decrypted MPEG-4 file in real-time by recombining the decrypted VOPs.","The present invention will now be described more fully with reference to the accompanying drawings, in which exemplary embodiments of the invention are shown.",{"@attributes":{"id":"p-0034","num":"0033"},"figref":"FIG. 1"},"The motion picture file includes MPEG-1, MPEG-2, and MPEG-4 file formats. Each motion picture file is divided into a media data region which includes user data, and a meta-data region which stores meta-data needed for reproducing the file, such as the location and size of the user data. Below, an exemplary embodiment of the present invention applied to an MPEG-4 file format will be described.","An MPEG-4 file  includes a number of atoms , , , , , and . Each atom , , , , , and  has lower level atoms, thus forming a layered structure. Here, a higher atom is called a container atom and a lower atom is called a leaf atom. The two top-level atoms are a moov atom  and a media data atom mdat . User media data, i.e., audio or video data that is saved inside an MPEG file, is saved in the media data atom . Information regarding media data, i.e., meta-data, is saved in the moov atom . The media data atom  includes a plurality of video object planes VOP , , and so on, and audio data  and .",{"@attributes":{"id":"p-0037","num":"0036"},"figref":"FIG. 2"},"A system for digital rights management (DRM) includes a contents server  and a contents client . The contents server  provides media data to a user and includes a DRM server module , a contents database , an encryption unit , and a streaming module . The contents client  receives contents from the contents server  and reproduces the contents, and includes a DRM client module , a packet receiving unit , a decryption unit , and a media reproduction unit .","A DRM server  carries out user authentication and transmission of a key between the contents server  and the contents client . When the DRM client module , within the contents client , sends a request for user authentication  to the DRM server , the DRM server  carries out the user authentication process using an electronic payment system (not shown). After the user authentication is completed, the DRM server  produces DRM authentication information  using, for example, user information that has been used to perform user authentication. Then, the produced DRM authentication information  is transmitted to the contents server .","The DRM server module , within the contents server , produces an encryption key from DRM authentication information  that is transmitted from the contents client , and sends the encryption key and optional encryption information  input by the user to the encryption unit  as encrypted information . The optional encryption information  includes a type of encryption method, a VOP ID, which is the object of encryption, an encryption mode, and so on.","The DRM server module  within the contents server  and the DRM client module  within the contents client  carry out the user authentication process with the DRM server . The DRM server module  receives the DRM authentication information  from the DRM server  and uses the DRM authentication information  to produce the encryption key. Also, the DRM server module  sends the encryption information , which includes the encryption key and the optional encryption information  input by the user, to the encryption unit . In addition, the DRM server module  produces DRM encryption information  using the encryption information  and other information needed for the DRM service, and sends the DRM encryption information  to the DRM server .","The DRM server  performs user authentication process and produces DRM decryption information  by adding various information received from the user authentication process to the DRM encryption information  received from the DRM server module , and sends the DRM decryption information  to the DRM client module . If the DRM service uses a symmetrical key structure, the encryption key included in the DRM encryption information  and a decryption key included in the DRM decryption information  are the same. If the DRM service uses an asymmetrical key structure, however, the encryption key and the decryption key differ. As a result, the DRM encryption information  and the DRM decryption information  are different.","The DRM client module  receives the DRM decryption information  from the DRM server  and extracts decryption information  from the DRM decryption information . The decryption unit  decrypts the motion picture file using the decryption information .","In , the encryption unit  within the contents server  produces encrypted contents  by receiving contents  from a contents database  and encrypting the contents . According to the exemplary embodiment of the present invention, the contents  and the encrypted contents  have the same MPEG-4 file format illustrated in .",{"@attributes":{"id":"p-0045","num":"0044"},"figref":"FIG. 3"},"In accordance with the exemplary embodiment of the present invention, an MPEG-4 file is encrypted in units of VOPs, rather than encrypting the MPEG-4 file as a whole. A VOP that is to be encrypted can be selected through the optional encryption information . The encryption method is a block encryption method such as a data encryption standard (DES) or a 128-bit type standard Korean encryption algorithm (SEED). Since the encryption method is a block encryption method, it does not change the size and form of the original MPEG-4 file. In other words, the size and format of the MPEG-4 file before and after encryption are the same. Therefore, a reproduction algorithm of the original MPEG-4 file can be used without any modification. Also, although encryption is carried out in units of VOPs, the first 4 bytes of each VOP are not encrypted because the first 4 bytes are a start code used to extract the VOP at the contents client .","An offset of each VOP is extracted from the moov atom of the MPEG-4 file received from the contents database (operation ). The offset of a VOP refers to location information of the VOP within the MPEG-4 file. With offset of each VOP as a basis, VOPs selected by the optional encryption information  are extracted (operation ). Extracted VOPs are encrypted using DES or SEED (operation ). An encrypted MPEG-4 file is produced by combining the encrypted VOPs and non-encrypted VOPs (operation ).","Below, an offset extraction process for each VOP of the MPEG-4 file will be described with reference to .",{"@attributes":{"id":"p-0049","num":"0048"},"figref":"FIG. 4"},"Depending on an MPEG-4 file format, a media data atom includes a chunk where actual media data exists and an unused portion where media data does not exist. The chunk includes a video chunk and an audio chunk, and each chunk is divided into a number of samples. When the media data included in the chunk is video data the sample is a VOP.",{"@attributes":{"id":"p-0051","num":"0050"},"figref":"FIG. 5A"},"A moov atom  includes a number of track atoms (Track )  and each track atom (Track )  includes a media atom  as a lower level atom, the media atom  includes a media information atom  as a lower level atom, and the media information atom  includes a sample table atom  as a lower level atom.","The first 4 bytes of each atom have information on the size of the atom, the next 4 bytes have information on the type of the atom, and the rest of the region has meta-data information which the atom shows. The media information atom  also has a video information atom  as a lower level atom. The video information atom  shows that corresponding media data is video data. The sample table atom  has a chunk size atom , a sample number atom , and a sample size atom , as lower level atoms.",{"@attributes":{"id":"p-0054","num":"0053"},"figref":"FIG. 5B","b":["551","552","553"]},"In the first diagram of , information on the number of samples in each chunk is included in a meta-data region of the chunk size atom . This diagram shows that the first and fourth chunks  and  each have 14 video samples and the tenth chunk  has 13 video samples. In the second diagram of , information on the location of each chunk is included in a meta-data region of the sample number atom . This diagram shows that the first chunk  is shown from 40 bits and the tenth chunk  from 607848 bits. In the third diagram of , the sample size atom  shows information on the size of each sample. This diagram shows that the first sample  has a size of 12604 bits.","A process of extracting the offset of each VOP within the MPEG-4 file is carried out through parsing the meta-data. First, it is determined whether the video media information atom  exists within the media information atom  by confirming that the corresponding media data is video data. If the media data is video data, the media data is parsed to the sample table atom , which is the next lower level atom, to extract the meta-data.","From the combination of information saved in the above-mentioned three atoms, offset information of the samples, that is, the VOPs, can be extracted. In the first diagram of , the size of the first chunk, that is, the number of samples included in the first chunk, is 14. In the second diagram of , the offset of the first chunk is 40 bits. In the third diagram of , the size of the first chunk is 12604 bits. Therefore, the offset of the second chunk is 40+12604=12644 bits. Offsets of all the samples (VOPs) can be extracted using the same method.",{"@attributes":{"id":"p-0058","num":"0057"},"figref":"FIGS. 6A through 6C"},"A VOP that is to be encrypted can be selected through the optional encryption information (). The optional encryption information () is input to the DRM server module () by the user, transmitted together with the encryption key to the encryption unit (), and used for encryption.","Optional encryption information includes an encryption mode or an encryption identification ID. The encryption mode is divided into a first mode that encrypts all I-VOPs, a second mode that encrypts all B-VOPs and P-VOPs, and a third mode that encrypts all I-VOPs, P-VOPs, and B-VOPs. If an encryption ID is selected, only VOPs that correspond to an encryption number input as the optional encryption information are encrypted. The VOPs that are encrypted are selected regardless of their types.","In , the image on the left is an image before encryption and the image on the right is an MPEG image after encryption using the first mode. Since the I-VOP is an intra-coded VOP, all information on pictorial images is included within a macroblock. Thus, it can be seen that intra-block information is completely lost. In addition, a totally different image is reproduced because reference locations of the I-VOPs, P-VOPs, and B-VOPs change.","In , the image on the left is an original image before encryption and the image on the right is an MPEG image encrypted using the second mode. Information on an intra-coded macroblock and a motion vector coexist in the B-VOP and P-VOP. Therefore, the encrypted MPEG image in the second mode is more similar to the original image than the first mode. The motion vector in the P-VOP is encrypted but due to the influence of the intra-block in the I-VOP, an entire frame between continuous frames can occasionally be shown. It can be seen that only a movement path of each object becomes irregular because the motion vector is encrypted.","In  the image on the left is the original image before encryption and the image on the right is an MPEG image encrypted using the third mode. The third mode produces the most complete encrypted motion picture because the third mode encrypts all of the VOPs. As the number of VOPs that are encrypted increases, encryption performance increases, but more resources are required for decryption.","After encryption, by recombining encrypted VOPs, a new encrypted MPEG-4 file is produced. The produced encrypted MPEG-4 file is streamed to the contents client  by the streaming module . In order for the MPEG-4 file to be streamed, it needs to be packetized.",{"@attributes":{"id":"p-0065","num":"0064"},"figref":"FIG. 7"},"Referring back to , the streaming module  produces a transmission packet  by packetizing the received encrypted MPEG-4 file.  shows four transmission packets that are transmitted in chronological order. Each transmission packet , , , and  includes transmission protocol headers , , , , , , , and , and transmission data , , , , , and . The transmission protocol headers differ according to a transmission path, and generally a user data program protocol and a real-time transmission protocol are used.","The first transmission packet  includes a part of the first VOP (VOP) as the transmission data  and the second transmission packet  includes the rest of the first VOP (VOP) as the transmission data  and a part of the second VOP (VOP) as the transmission data . The third transmission packet  includes another part of the second VOP (VOP) as the transmission data , and the fourth transmission packet  includes the rest of the second VOP (VOP) as the transmission data  and a part of the third VOP (VOP) as the transmission data . The reason why each transmission packet has a part of the VOP as the transmission data is because the size of the VOP is different, and the length of the transmission packet and the size of the transmitted VOP do not match. In , the hatched portions of the transmission data , , and  show the encrypted VOP.","The streaming module  can be constructed as an independent server and separate from the contents server . In this case, transmission of an MPEG-4 file from the encryption unit  to a streaming server (not shown) is carried out over a communications network like the Internet.",{"@attributes":{"id":"p-0069","num":"0068"},"figref":"FIG. 8","b":["300","241"]},"The packet receiving unit  within the contents client  receives the transmission packet  and extracts a VOP. The VOP extraction process is carried out by monitoring the packets that enter a buffer within the packet receiving unit . First, the packet receiving unit  performs decapsulization by removing the transmission protocol headers , , , , , , , and  from the received transmission packet  (operation ).","Next, it is checked whether a start code within the VOP header in each VOP is received (operation ).",{"@attributes":{"id":"p-0072","num":"0071"},"figref":"FIG. 9","b":["900","910","920","930","911","912","913","911"]},"A start code is the first 4 bytes of each VOP and has a predetermined value. When the start code of a next VOP is detected, the present VOP is extracted and sent to the decryption unit  (operation ).","Using the DRM decryption information  received from the contents server  through the DRM server , the decryption unit  decrypts the relevant VOP (operation .) The DRM encryption information  includes an encryption type, an encrypted VOP ID, information on an encryption mode, and an encryption key, and is sent to the decryption unit  through the DRM server module , the DRM server , and the DRM client module , respectively.","The media reproduction unit  creates and reproduces a decrypted MPEG-4 file after receiving decrypted VOPs from the decryption unit  and recombining the decrypted VOPs (operation ).",{"@attributes":{"id":"p-0076","num":"0075"},"figref":"FIG. 10"},"In another exemplary embodiment of the present invention, a new atom that is meta-data of a conventional MPEG-4 file is included. In , the encryption information  is included in the DRM encryption information  and is sent to the DRM server , but in the present exemplary embodiment, the encryption information  is included in a DRM atom . The encryption information  can include an encryption key, an encryption type, an encryption mode, and an encrypted VOP ID.","The DRM atom  illustrated in  includes an atom size , an atom type , an encryption mode , an encryption flag , a number of entries , and an entry table .","When the encryption flag  is set as 1, it means all VOPs are encrypted and when the encryption flag  is set as 0, it means only a portion of VOPs are encrypted. The VOP IDs of the portion of the VOPs that are encrypted are saved in the entry table , and the number of encrypted VOPs is saved in the entry number .","In order not to change the conventional MPEG-4 file format, the DRM atom  is located as a top level atom within the moov atom. If the DRM atom  was located at a lower level within the moov atom, the size of all of the higher level DRM atoms would have to be changed.","The present exemplary embodiment has an effect of alleviating the need for the contents client  to manage a separate file system on the decryption information  that corresponds to the encryption information , because the encryption information  is transmitted along with the MPEG-4 file.",{"@attributes":{"id":"p-0082","num":"0081"},"figref":["FIG. 11","FIG. 11","FIG. 11"]},"As described above, because a file is encrypted in units of VOPs while maintaining the MPEG-4 file format, the MEPG-4 file encryption method and the digital rights management method using the same according to the present invention are easily applicable to a completed form of a file format and streaming service is also possible.","In addition, because a file can be encrypted without taking part in an MEPG-4 file production process, independent encryption by a contents provider is possible, which will help to advance the contents providing industry.","While the present invention has been particularly shown and described with reference to exemplary embodiments thereof, it will be understood by those of ordinary skill in the art that various changes in form and details may be made therein without departing from the spirit and scope of the present invention as defined by the following claims and their equivalents."],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"BRIEF DESCRIPTION OF THE DRAWINGS","p":["The aspects of the present invention will become more apparent by describing in detail exemplary embodiments thereof with reference to the attached drawings in which:",{"@attributes":{"id":"p-0021","num":"0020"},"figref":"FIG. 1"},{"@attributes":{"id":"p-0022","num":"0021"},"figref":"FIG. 2"},{"@attributes":{"id":"p-0023","num":"0022"},"figref":"FIG. 3"},{"@attributes":{"id":"p-0024","num":"0023"},"figref":"FIG. 4"},{"@attributes":{"id":"p-0025","num":"0024"},"figref":"FIG. 5A"},{"@attributes":{"id":"p-0026","num":"0025"},"figref":"FIG. 5B"},{"@attributes":{"id":"p-0027","num":"0026"},"figref":"FIGS. 6A","b":["6","6"]},{"@attributes":{"id":"p-0028","num":"0027"},"figref":"FIG. 7"},{"@attributes":{"id":"p-0029","num":"0028"},"figref":"FIG. 8"},{"@attributes":{"id":"p-0030","num":"0029"},"figref":"FIG. 9"},{"@attributes":{"id":"p-0031","num":"0030"},"figref":"FIG. 10"},{"@attributes":{"id":"p-0032","num":"0031"},"figref":"FIG. 11"}]},"DETDESC":[{},{}]}
