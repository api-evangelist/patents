---
title: System, method, and computer program product for administering channels, content, and data for mobile devices
abstract: Described herein are systems, methods, computer program products, and combinations and sub-combinations thereof, for enabling web content (as well as other objects) to be loaded on mobile devices (as well as other types of devices), and for users of mobile devices to operate with such web content on their mobile devices in an interactive manner while in an off-line mode.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=06839744&OS=06839744&RS=06839744
owner: Ianywhere Solutions, Inc.
number: 06839744
owner_city: Dublin
owner_country: US
publication_date: 20000428
---

{"@attributes":{"id":"description"},"RELAPP":[{},{}],"heading":["CROSS-REFERENCE TO RELATED APPLICATIONS","BACKGROUND OF THE INVENTION","SUMMARY OF THE INVENTION","DETAILED DESCRIPTION OF THE PREFERRED EMBODIMENTS","1. Overview of Embodiments of the Present Invention","3. Operational Embodiments of the Present Invention","4. Example User Interface Screen Shots","5. Conclusion"],"p":["This application is a continuation-in-part application of U.S. Ser. No. 09\/393,390, \u201cInteractive Applications for Handheld Computers,\u201d filed Sep. 10, 1999, now abandoned, and claims the benefit of U.S. Provisional Application No. 60\/173,807, \u201cArrangements for Providing Improved Network Services to Wireless Handheld Devices,\u201d filed Dec. 30, 1999, and U.S. Provisional Application No. 60\/189,969, \u201cArrangements for Providing Improved Network Services to Wireless Handheld Devices,\u201d filed Mar. 17, 2000, all of which are incorporated by reference herein in their entireties.","This patent application is potentially related to the following co-pending U.S. utility patent applications, which are all herein incorporated by reference in their entireties: \u201cSystem, Method, and Computer Program Product for Enabling On-Device Servers, Offline Forms, and Dynamic Ad Tracking On Mobile Devices,\u201d U.S. Ser. No. 09\/559,964, filed concurrently herewith.","\u201cSystem, Method, and Computer Program Product for Syncing to Mobile Devices,\u201d U.S. Ser. No. 09\/560,965, filed concurrently herewith, now U.S. Pat. No. 6,341,316.","\u201cSystem, Method, and Computer Program Product for Customizing Channels, Content, and Data for Mobile Devices,\u201d U.S. Ser. No. 09\/560,957, filed concurrently herewith, now U.S. Pat. No. 6,421,717.","\u201cSystem, Method, and Computer Program Product for Web Content Aggregation and Development, and Web Content Delivery to Clients,\u201d U.S. Ser. No. 09\/560,956, filed concurrently herewith, now U.S. Pat. No. 6,553,412.","1. Field of the Invention","The present invention relates generally to mobile communications, and more particularly relates to technology for using interactive applications while on-line and off-line on mobile devices.","2. Related Art","A variety of mobile devices (such as personal data assistants, or PDAs) exist. Such mobile devices include ones based on the Palm operating environment and the Windows CE operating environment.","A variety of software applications for those mobile devices also exist.","What does not exist prior to the invention are software applications for enabling web content (as well as other objects) to be loaded on mobile devices, and for users of mobile devices to operate with such web content on their mobile devices in an interactive manner while in an off-line mode.","Briefly stated, the invention includes systems, methods, computer program products, and combinations and sub-combinations thereof for enabling web content (as well as other objects) to be loaded on mobile devices (as well as other types of devices), and for users of mobile devices to operate with such web content on their mobile devices in an interactive manner while in an off-line mode.","These and additional features and advantages of the present invention will become more apparent from the detailed description set forth below when taken in conjunction with the drawings in which like reference characters generally identify corresponding elements throughout.","It should be understood that these figures depict embodiments of the invention. Variations of these embodiments will be apparent to persons skilled in the relevant art(s) based on the teachings contained herein. For example, the flow charts contained in these figures depict particular operational flows. However, the functions and steps contained in these flow charts can be performed in other sequences, as will be apparent to persons skilled in the relevant art(s) based on the teachings contained herein.","Embodiments of the present invention are briefly described in this section.","Briefly stated, the invention is directed to placing objects such as, but not limited to, Internet or Web content on data processing devices, such as but not limited to mobile devices. Table I lists examples of such Internet content, although the invention is not limited to these examples.",{"@attributes":{"id":"P-d0e5663","num":"00002"},"tables":{"@attributes":{"id":"TABLE-US-00001","num":"00001"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"center"}},"thead":{"row":[{"entry":"TABLE 1"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}},{"entry":"Internet Content"},{"entry":"Internet content includes but is not limited to:"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}]},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"HTML"},{"entry":"JavaScript\u2009\u2122"},{"entry":"Channels"},{"entry":"Java\u2009\u2122"},{"entry":"ActiveX"},{"entry":"Multimedia:"},{"entry":"Images (e.g., JPEG, GIF, PNG, vector graphics, etc.)"},{"entry":"Audio Files (e.g. MP3)"},{"entry":"Video (e.g. AVI)"},{"entry":"Streaming Content:"},{"entry":"Voice\/Data\/Video"},{"entry":"Binary files"},{"entry":"XML"},{"entry":"Applications"},{"entry":"Data Objects"},{"entry":"Documents"},{"entry":"Anything that can be delivered via a \u201cbrowser\u201d"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}]}}}}},"Table 2 lists examples of mobile devices, although the invention is not limited to these examples.",{"@attributes":{"id":"P-d0e5866","num":"00002"},"tables":{"@attributes":{"id":"TABLE-US-00002","num":"00002"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"center"}},"thead":{"row":[{"entry":"TABLE 2"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}},{"entry":"Mobile Devices"},{"entry":"Mobile devices include but are not limited to:"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}]},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"Handheld Computers"},{"entry":"Cellular Phones"},{"entry":"Internet-enabled Phones"},{"entry":"Pagers"},{"entry":"Radios"},{"entry":"TVs"},{"entry":"Audio Devices"},{"entry":"Car Audio Systems"},{"entry":"Recorders"},{"entry":"Text-to-Speech Devices"},{"entry":"Bar-code Scanners"},{"entry":"Net Appliances"},{"entry":"Mini-browsers"},{"entry":"Personal Data Assistants (PDAs)"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}]}}}}},{"@attributes":{"id":"P-00052","num":"00052"},"figref":"FIG. 1U"},"1.1. Enabling Mobile Devices to Interact With Networked Applications","The invention includes technology for using applications on mobile devices that interact with the Internet or with intranets. The invention enables applications available via a network or via an Internet\/intranet to download and to run on mobile devices. Consequently, the invention includes software and methods for administering a server that manages the variables relevant to a mobile device\/server environment.","The invention enables:","Mobile devices to operate in conjunction with a Web server, even when the mobile devices are not coupled directly to the PC using portable on-device servers: Web pages are loaded, viewed, cached, and deleted even when the device is not coupled to any network.","Mobile devices to operate in conjunction with the Web, Internet, or intranet via a connection mechanism and then in disconnected mode or with the Web, Internet, or intranet in wireless mode with a continuous or a discontinuous connection mechanism.","A technique for interactive connectivity between handheld computers and computer networks.","Fleet management for centrally administering information in a handheld network environment that includes, but is not limited to, user data, user groups, group channels, channel data, personal channels, commercial channels, user accounts, corporate account, software groupings, personal information management, form delivery, form management, device configuration, device databases, device contents, and devices parameters. Obtaining updated Web pages and other network objects, for use when the mobile device is not communicating with the PC.","An example mobile device\/server environment is shown in FIG. V.","1.2. Rapid Transfer of Web Pages to Mobile Devices","To improve efficiency of data exchange between mobile devices and networked content, the invention includes an improved communication protocol that collects requests and responses for network objects into a smaller number of protocol (such as HTTP) requests and responses. The server also determines the nature and the resources of the mobile device. This protocol is represented, for example, in FIG. W.","Downstream, the data is encoded in a data format called ABC (tokenized version of the data) and sent to the device. Already Been Chewed (ABC) format creates a tokenized codification of HTML pages that is sent to the device. (The device receives the ABC and presents the material on the device.)","The HTML page is encoded into ABC and sent to the device. The encoding is a mapping of parent and child HTML elements and\/or resources to alphanumeric values.","The sync operation of the invention includes various synchronization processes that can collect information from the Internet to a server, and to the client. The usage of the term \u201csync,\u201d as described herein, refers to the overall operation of connecting a client to a server for the exchange, interaction, creation, and removal of data.","In one embodiment, syncing can be defined as mirroring data on a client and a server, such that the data is the same on client and server. In other embodiments, syncing can be defined as overwriting data on a client or on a server, such that the data on either a client replaces the data on a server, and vice versa.","In one embodiment,.a sync operation involves a user placing a mobile device into an adapter that includes a sync button. The adapter is connected to a server. Upon pressing the sync button, the user initiates the sync operations of the present invention, which include various synchronization processes (specific delivery modes). Thus, the term sync is meant to refer to the overall operation of linking a client to a server. Synchronization is meant to refer to the specific process of copying, adding, filtering, removing, updating and merging the information between a client and a server. Any number of synchronization processes can be executed during a sync.","Before being sent downstream the data is compared to the data that is known to be on the client and then the client is updated all at once in a one-up\/one-down synchronization method, which is represented in  X. The server sets the client to preemptively prepare all device information necessary during the sync. Then the server receives the set of information in a one-up fashion. The server collates the information and sends the information in a one-down fashion. This optimizes the sync's efficiency and speed. The sync process is represented in .","1.3. Optimizing Content of Web Pages for Mobile Devices","When Web content and other network objects pass through the server they are processed to minimize their size and to optimize their delivery to mobile devices: for presentation, for ease of use, for efficiency, for size, etc.","The invention uses server logic to optimize content. The server assesses the mobile device to optimize web content for the device. Factors that the server logic considers when performing this optimization include, but are not limited to:\n\n","An example optimization process is shown in FIG. AA.","On the server, the graphic is optimized per the state information of the device. If the device sends down the need for the graphic on a page for a device with a display that is 27 cm wide and in grayscale, the server sends its best version of a graphic optimized for that environment.","The technology of the invention is extended by tags on HTML pages that identify content that is designed for additional modifications. Any and all bytes processed by the server are potentially examined for compression\/optimization. The server detects the tag and executes the necessary logic.","Table 3 illustrates example tags (the invention is not limited to the tags shown in Table 3).",{"@attributes":{"id":"P-d0e6291","num":"00002"},"tables":{"@attributes":{"id":"TABLE-US-00003","num":"00003"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"center"}},"thead":{"row":{"entry":"TABLE 3"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}},{"entry":"Sample Markup Language"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"105pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"112pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["Tag","Effect"]},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}},{"entry":["<META NAME=\u201cHandheld-","This tag enables several HTML"]},{"entry":["Friendly\u201d content=\u201cTrue\u201d>","features that are normally turned off."]},{"entry":[{},"Most notably, The invention does not"]},{"entry":[{},"try to display TABLE tags or the"]},{"entry":[{},"HSPACE and VSPACE attributes of"]},{"entry":[{},"IMG tags unless the page is marked"]},{"entry":[{},"as \u201cHandheldFriendly\u201d. Most"]},{"entry":[{},"TABLEs or H\/VSPACEs are"]},{"entry":[{},"designed for much larger screens."]},{"entry":["<AGIGNORE><\/AGIGNORE>","Used in a wireless channel. Use the"]},{"entry":[{},"AGIGNORE tag to surround content"]},{"entry":[{},"within an HTML page that may be"]},{"entry":[{},"inappropriate or unattractive on"]},{"entry":[{},"Internet-enabled phones."]},{"entry":["<AGPAGEBREAK TITLE=\u201cyour","Used in a wireless channel. Breaks up"]},{"entry":["title\u201d>","pages on request. When processing"]},{"entry":[{},"pages for devices other than WAP"]},{"entry":[{},"phones, the server ignores the"]},{"entry":[{},"AGPAGEBREAK tag."]},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}}]}}]}},"br":{}},"The invention is extended by the coupling of devices to the content available at the server web site (see the example shown in FIG. AB).","These and other embodiments of the present invention are described in greater detail below.","Structural Embodiments of the Present Invention",{"@attributes":{"id":"P-00100","num":"00100"},"figref":"FIG. 1A","b":["102","102","104","104","102","106","118","128"]},"Generally, the server  maintains a collection of channels. In an embodiment, a channel comprises a collection of objects. An object is any entity that can be transferred to a client i , such as but not limited to content, applications, services, images, movies, music, links, etc.","A channel includes a number of properties. At least some of these properties define the objects that the channel includes. Such properties include, but are not limited to, the following:","A name of the channel.","A location of a root object (such as but not limited to a URL). In an embodiment, this root object is included in the channel.An indication of the number of levels below the root object, for which to include objects in the channel. For example, in an embodiment, if this property is equal to \u201c1 level,\u201d then all objects that are 1 level down from the root object (reached by traversing links in the root object), are included in the channel. If this property is equal to \u201c2 levels,\u201d then all objects that are 1 level down from the root object (reached by traversing links in the root object), and all objects that are 1 level down from those objects (reached by traversing links in those objects), are included in the channel. Embodiments of the invention allow \u201cuneven\u201d trees, where some branches of the tree extent to a greater number of levels than other branches of the tree. In other embodiments, the trees are even or balanced.","A maximum size of the channel. For example, if this is set to 500 Kbytes, then the aggregate size of the objects in the channel cannot be greater than 500 Kbytes. If the aggregate size of the objects in the channel is greater than this value, then embodiments of the invention may delete objects from the channel and\/or delete portions of objects in the channel.","An indication of which resource objects are enabled for the channel:","An indication of whether or not images are to be included in or excluded from objects in the channel; and","An indication of whether or not scripts are enabled in objects in the channel.","A refresh methodology.","It is noted that the properties associated with channels may vary from implementation to implementation. Also, implementations may employ combinations of the above properties, and\/or properties in addition to the following, as will be appreciated by persons skilled in the relevant art(s).","The invention includes processes for managing channels, including but not limited to adding channels to the collection of channels maintained by the server .","The server  offers channels to clients . A client  may access the server  and view the collection of channels. The client  may then select any combination of the channels in the collection. The server  maintains a list of the channels associated with each of the clients .","During a synchronization process, the server  loads a device  with the channels associated with the client . Generally, the server  does this by obtaining from providers  the objects defined by the channels, and causing those objects to be stored on the client . Thus, during the synchronization process, the server  will load the client  with the selected channels. More particularly, the server  will load the client  with the objects associated with the channels.","The client  may process and use those objects when not connected to the server . The invention enables the client  to actively interact with the objects and channels.","In one embodiment, the client A directly interacts with the server  via some transmission medium B, which may be any wired or wireless medium using any communication protocol.","In another embodiment, the client B indirectly interacts with the server  via an adapter . For example, the client B may be a mobile device (such as a Palm device) and the adapter  may be a cradle and a computer coupled to the cradle (the mobile device is inserted into the cradle). In this instance, the adapter  presents itself to the server  as a client B (via client communications module C). When the server  sends objects to the adapter , the adapter interface module  writes those objects to client B. In embodiments, adapter interface module  can be a Hot Sync\u2122 Manager, an Active Sync\u2122, etc. It is noted that the invention is not limited to any of the implementation examples discussed herein.","The components shown in  shall now be described in greater detail.","The server  includes an administration module , a database module , a user interface , a web synchronization module , a server extension module , a fleet management module , a notification module , and a server communication module . Other embodiments of server  may include a subset of these modules, and\/or may include additional modules.","The administration module  controls and manages the states of the server  and the clients . For example, the administration module  manages and controls groups of clients , permissions assigned to clients , groups, and channels. For example, the administration module  administers the users\/clients  assigned to groups, and the channels associated with users. These and additional functions performed by the administration module  are described herein.","The database module  controls access to databases associated with the server . The database module  maintains information relevant to the clients , as well as information relevant to the modules contained in the server . The database module  manages information on the collection of channels maintained by server . These and additional functions performed by the database module  are described herein.","The user interface  is, in an embodiment, a graphical user interface (GUI) that enables users and clients  to access functions and modules offered by the server . More generally, the user interface  within server  provides access to server  and the modules and resources contained therein.","The invention supports various server web sites that are available through any communication medium, such as but not limited to the Internet, intranets, direct dial up links, etc. The UI  enables such web sites.","These and additional functions performed by the user interface  are described herein.","The web synchronization module  is an application\/instance of server extension module , and controls synchronization of web content to client . The invention may include other synchronization modules (which are application\/ instances of server extension module ) that control synchronization of other types of objects to clients . For example, the server  may administer a calendar that may be installed on clients . The synchronization of appointments, events and\/or dates on this calendar between clients  and the server  may be performed by a calendar synchronization module. These and additional functions performed by the server extension module  are described herein.","The fleet management module  performs functions associated with fleets of clients , which are groups of clients . For example, fleet management module  may perform global or mass operations on groups (fleets) of clients , such as loading or updating an application on groups (fleets) of clients . Another example of a mass operation is retrieval of information on clients  in a fleet, such as the free memory in clients  in a fleet (this would help an organization determine if its clients  need a memory upgrade). These and additional functions performed by the fleet management module  are described herein.","The server extension interface\/module  enables modules, such as third party modules, to operate in or work with the server  (and modules contained in the server ). The server extension module  presents an API (application programming interface). Modules in the server  may operate with other devices in the server  by conforming to the server API.","For example, the web synchronization module  and the fleet management module  (as well as other types of synchronization modules, not shown in ) may interact with databases on the server  via the database module  by going through the server extension module . The web synchronization module  and the fleet management module  may not be able to interact directly with the database module  for a number of reasons. For example, they may support different data formats, or simply \u201cspeak different languages.\u201d However, they can interact via the server extension module  as well as other server modules as long as they conform to the API of the server extension module . This is true of any modules in the server , or that interact with the server .","Server communication module  enables communication between the server  and entities external to the server , such as clients , adapters , providers , work stations, etc. The server  communicates with these entities via communication mediums , which may be any type of wireless or wired communication using any protocol. It is noted that multiple server communication modules  may execute in a single server . For example, in one embodiment, server communication module  is a TCP\/IP stack. In another embodiment, server communication module  is a secure socket layer stack or a compression stack. The invention is not limited to any implementation examples discussed herein. These and additional functions performed by the server communication module  are described herein.","The notification module  sends objects to clients  beyond objects related to channels associated with clients . Such objects could be requested by client  in advance. For example, a client  could ask for a notification when an event happens, such as when a stock reaches a target price. When the event occurs, the notification module  would cause an appropriate notification(s)\/object(s) to be sent to the client . Alternatively, the notification module  may send objects to clients  without any prior explicit request from the client . For example, the notification module  might send channels to clients  when such channels are identified to be similar to those already selected by the clients . Also, the notification module  might send appropriate notifications\/objects to the clients  when such clients  receive email or faxes at the server . In embodiments, the notification module  transmits such objects to the client  immediately when the event occurs, during the next synchronization with the client , or at some other future synchronization.","An alternative representation of server  is shown in FIG. B.  illustrates, for example, that messages from entities outside of server  are received by server extension interface\/module  via server communications modules . Generally, such messages represent requests for the server  to perform various functions. The server extension module  conceptually operates as a dispatcher who routes such messages to other modules contained in the server , such as web synchronization module  (who handles requests to synchronize with web content), notification module , fleet management module  (who handles fleet related requests), and\/or third party modules  (such as other synchronization modules). Thus, the invention supports modules  generated by third parties to perform various functions. Such modules  \u201cplug-in\u201d to the server  via the server extension module .","Referring again to , the devices  may be any type of data processing device. In embodiments of the invention, the devices  are mobile computing devices, although the invention is not limited to these embodiments. In such example embodiments, the devices  may include, but are not limited to, handheld computers, cellular phones, internet-enabled phones, pagers, radios, tvs, audio devices, car audio systems, recorders, text-to-speech devices, bar-code scanners, net appliances, mini-browsers, personal data assistants (PDAs), etc.","In embodiments of the invention, the devices  include software, hardware, and\/or combinations thereof related to client functionality (such client functionality is described herein). When a device  includes such software, hardware, and\/or combinations thereof, the device  is referred to herein as a client . Accordingly, it can be said that the data processing environment  includes one or more clients .","Clients  each may include a layout and rendering module , a forms module , a control module , a user interface , a client extension interface , a client interface module , a client communications module , a JavaScript\u2122 engine , and a database module . Other embodiments of clients  may include a subset of these modules, and\/or may include additional modules.","Layout and rendering module  controls the processing of data objects on client , such as the layout and rendering of data objects on client . For example, the layout portion of module  obtains information from databases of the client  (via the database manager ) and determines where such information should be rendered on the display of the client . Such information may include anything that can be rendered, such as but not limited to images, text, links, etc. The rendering portion of module  is responsible for drawing items on the display (drawing bits to the screen). These and additional functions performed by the layout and rendering module  are described herein.","The forms module  controls and manages forms. For example, in embodiments the forms module  manages aspects of off-line forms, such as HTML forms and\/or multi-page forms. The forms module  enables access to and user interaction with forms (in some embodiments, the forms module  via UI  enables users of client  to directly access forms). The forms module  maintains the status of forms. Forms module  can also include a forms manager (not shown) to provide added functionality. These and additional functions performed by the forms module  are described herein.","The user interface  is preferably a graphical user interface that enables users to interact with client  and functions and modules provided by the client . More generally, UI  controls how functions presented by modules of the client  are presented to users. The UI  controls how users interact with such functions and modules. It is noted that the functionality of the UI  may be distributed. For example, portions of the UI  may reside in the forms module , as well as other modules of client . These and additional functions performed by the user interface  are described herein.","The client extension interface  enables modules, such as third party modules, to operate in or work with the client  (and modules contained in the client ). The client extension interface , also known as an on-device server, presents an API (application programming interface) that is, in embodiments, common to clients  on many architectures.","Modules in the client  can work together via the client extension interface . For example, the JavaScript\u2122 engine  may decide that it wishes to display a message to the user. To do this, the JavaScript\u2122 engine  would work through the client extension interface  to cause the UI  to display the message to the user. The JavaScript\u2122 engine  may not know how to directly interact with the UI . However, as long as both the JavaScript\u2122 engine  and the UI  conform to the API of the client extension interface , then they can operate together.","Similarly, the control module  may decide that it needs to store some data in a database. The control module  would do this by working with the client extension interface  to access the database module  to effect such a modification to the databases in the client . These and additional functions performed by the client extension interface  are described herein.","The JavaScript\u2122 engine  executes-objects written in the JavaScript\u2122 language that operate on client . As noted, the JavaScript\u2122 engine  conforms to the API of the client extension interface , and works with the client extension interface  to work with other modules in client . These and additional functions performed by the JavaScript\u2122 engine  are described herein.","Although not shown in , embodiments of the invention include other engines for executing other types of scripts on client . These other engines can interact with other modules on client  as long as the engines conform to the API of the client extension interface .","The database module  controls access to databases associated with client . More generally, the database manager  controls access to resources on the client . For example, the control module  may interact with the database manager  to open an address book in the databases, and to write a record to the address book. Alternatively, the forms module  can interact with the database module  to access forms that are stored in the databases. These and additional functions performed by the database module  are described herein.","Client communications module  enables the client  to interact with external entities, such as server . In embodiments, the client communications module  enables TCP\/IP traffic, although the invention is not limited to this example. More generally, the client communications module  enables communication over any type of communication medium , such as wireless, wired, etc., using any communication protocol, such as a pager protocol. These and additional functions performed by the client communications module  are described herein. The client interface module  enables the client  to communicate with adapters . Client interface module  optionally links to client communications module  in some embodiments to provide functionality (for example, when the client communications module  uses a wireless modem's drivers, which are accessed via client interface module ). In embodiments, the client interface module  may be Hot Sync\u2122 Manager in the Palm operating environment, or Active Sync\u2122 in the Windows CE\u2122 operating environment, or Pilot Link\u2122 in the Unix operating environment. It is noted that these implementation examples are provided for illustrative purposes only. The invention is not limited to these examples. These and additional functions performed by the client interface module  are described herein.","The control module  coordinates the activities of the other modules in client  so that all the modules share resources properly. For instance, control module  can determine priorities for shared resources such as processing time, accessing memory, etc.","Providers  are sources of various types of objects, such as but not limited to content (content providers A), applications (application providers B), services (service providers C), etc. Providers  may also include servers \u2032 (similar to server ), which may provide objects such as but not limited to content, applications, services, etc. For example, and without limitation, the application providers B may provide objects relating to (without limitation) operating system updates\/changes, system upgrades, application updates\/changes, etc.","Adapters  include an adapter interface module , a user interface , a database module , an adapter synchronization module , and a client communications module . Other embodiments of adapters  may include a subset of these modules, and\/or may include additional modules.","Client communications module  is the same as similarly named modules in clients .","The adapter interface module  enables the adapter  to communicate with clients .","The adapter synchronization module  is involved with synchronization operations between server  and clients .","The UI  enables users to interact with modules and functions of adapter .","The database module  controls access to databases associated with adapter . The database module  manages information needed for clients  to remain in sync with server . In some embodiments, the adapter  does not include the database module  or the UI  (i.e., in embodiments where the adapter  operates essentially as a pipe, as in some embodiments on Unix).","These and additional functions performed by modules of the adapter  are described herein.","2.1. Example Implementation Embodiments","FIG. B illustrates a block diagram of a data processing unit A that can be used to implement the entities shown in . It is noted that the entities shown in  may be implemented using any number of data processing units A, and the configuration actually used is implementation specific.","Data processing unit A may represent laptop computers, hand held computers, lap top computers, and\/or any other type of data processing devices. Which type of data processing device used to implement entities shown in  is implementation specific.","Data processing unit A includes a communication medium B (such as a bus, for example) to which other modules are attached.","Data processing unit A includes one or more processor(s) C, and a main memory D. Main memory D may be RAM, ROM, or any other memory type, or combinations thereof.","Data processing unit A may include secondary storage devices E, such as but not limited to hard drives F or computer program product interfaces G. Computer program product interfaces G are devices that access objects (such as information and\/or software) stored in computer program products . Examples of computer program product interfaces G include, but are not limited to, floppy drives, ZIP\u2122 drives, JAZ\u2122 drives, optical storage devices, etc. Examples of computer program products H include, but are not limited to, floppy disks, ZIP\u2122 and JAZ\u2122 disks, memory sticks, memory cards, or any other medium on which objects may be stored.","The computer program products H include computer useable mediums in which objects may be stored, such as but not limited to optical mediums, magnetic mediums, etc.","Control logic or software may be stored in main memory D, secondary storage device(s) E, and\/or computer program products H.","More generally, the term \u201ccomputer program product\u201d refers to any device in which control logic (software) is stored, so in this context a computer program product could be any memory device having control logic stored therein. The invention is directed to computer program products having stored therein software that enables a computer\/processor to perform functions of the invention as described herein.","The data processing unit A may also include an interface J which may receive objects (such as data, applications, software, images, etc.) from external entities N via any communication mediums including wired and wireless communication mediums. In such cases, the objects L are transported between external entities N and interface J via signals K, M. In other words, such signals K, M include or represent control logic for enabling a processor or computer to perform functions of the invention. According to embodiments of the invention, such signals K, M are also considered to be computer program products, and the invention is directed to such computer program products.","3.1. Enabling On-Device Servers, Off-Line Forms, and Dynamic Ad Tracking On Mobile Devices","3.1.1. Caching Objects on Clients for Off-Line Browsing","Referring to , a flowchart  is shown that illustrates a process by which content is captured and stored on client  to thereby allow the user to view the content on device  offline, according to an embodiment of the invention. Flowchart  begins with a user expressing the desire to see content on device  (step A). Device  may be a handheld unit of the type as described herein.","It is noted that when client  is resident on device , the terms client and device are used interchangeably herein (unless noted otherwise either explicitly or implicitly by context).","For convenience, functions are described herein as being performed by certain module(s). The invention is not limited to these descriptions. In embodiments, such functions are performed by other module(s). This is true throughout the discussion herein.","While device  is described in terms of the above-mentioned units, this is for convenience only and is not intended to limit its application. In fact, after reading the following description, it will be apparent to one skilled in the relevant art(s) how to implement the following invention in alternative embodiments (e.g., by providing the functionality of device  in emulation on a desktop PC or workstation).","In manipulating device , the user interacts with server  via user interface  to identify channels (step B). In one embodiment of the invention, channels contain content. As previously mentioned, content can be information. Additionally, content may be organized topically into areas of interest to a user. Generally, the channels can include any objects.","In another embodiment of the invention, the content in channels may be altered over time. For example, channels may be updated periodically in a predetermined fashion. In another example, channels are updated conditionally upon the occurrence of an event. In order to obtain the altered content, the user synchronizes device  via server  (step C). The synchronization process is discussed in detail in later sections of this application. During synchronization, server  gathers channel content and sends it to device  (step D).","3.1.2. Channel Aggregation and Selection by Clients","As discussed herein, the server  collects or aggregates channels for selection by clients .",{"@attributes":{"id":"P-00173","num":"00173"},"figref":"FIG. 2","b":["160","106","202"]},"In step , top level resources that server  needs to fulfill client 's request are identified by server . For example, if client  is requesting a full synchronization, server  will identify any changed objects from providers  and send them to client . Client  can also request that a subset of providers  be updated Server  will identify any changed objects within the subset of providers  and send them to client .","In step , Web synchronization module  communicates with providers  to obtain the top-level resources. Other resources, such as images, links, JavaScript\u2122, etc., needed to maintain the integrity of the information provided for each object are then determined in step . In step , objects are transformed so that they fit within the parameters of device . Such parameters may include, but are not limited to, memory size, the size of device , capabilities of device , etc. When all resources have been amassed to fulfill client 's request, the process proceeds to step .","In step , the objects retrieved in the preceding steps are compared with the objects already cached on device . Server  determines the set of changes that have occurred between the retrieved objects and the objects already cached on device  in step . Only the set of changes determined in step  are transmitted to device .To improve the efficiency of the synchronization session between client  and server , as well as optimize the content displayed by client , a communication protocol collects requests and responses for network objects into a smaller number of protocol (such as HTTP) requests and responses. In an embodiment of the present invention, specific values are transformed in a conversion process to a tokenized encoding that is optimized for the device, client, and\/or application. In one example, the encoding can be a mapping of parent and child HTML elements and\/or resources to alphanumeric values designed to present content on the client's display.",{"@attributes":{"id":"P-00177","num":"00177"},"figref":["FIG. 1W","FIG. 1W"],"b":["128","104","106","104","106","108","104","106","104","106","106","106","108"]},"Returning again to , the revised channels are cached on device  so that the content can be later accessed (step E) by the user in an off-line manner.","In order to access the cached content, the user launches client  on device  (step F). The user selects channels via user interface  (step G). User interface  provides logic for displaying the means to access the resources of client . In one embodiment, user interface  displays a list of channels from which a user may select specific channels.","Once a channel is selected, layout and rendering module  displays the selected channel (step H). In one embodiment, the content of the selected channel is presented. In another embodiment, a form is presented for a user to enter a query. Thus, the invention allows the user to interact with the channels (step I) even when not connected to server  or provider(s) . In one embodiment, a user is essentially viewing Internet content off-line via cached Web pages.","3.1.3. Forms to Enable Off-Line Interactive Processing by Clients","As described herein, in one embodiment channel content may contain a form or forms. For a single form, the form may be a multiple submit form or a single submit form. A multiple submit form contains multiple submissions for a single page. A single submit form contains one submission for a single page. Multiple submit forms will allow a user to submit the form multiple times prior to synchronization. Alternatively, the single submit form can only be submitted once per synchronization. Referring to , flowchart I illustrates a user's interaction with a channel having a single form ( is an example embodiment of step I in FIG. C). Starting with step A, a page is displayed by user interface  that contains form elements. Form elements may contain fields for the entry of data\/commands such as query criteria. For example, query criteria may include identification information, location information, etc. Additionally, form elements may present a user with a list of choices and means by which a choice can be selected, such as radio boxes, check boxes, popup menus, etc. A user enters data\/commands into the form elements via user interface  (step B).","Forms module  caches the data\/commands for later synchronization (step C). During the synchronization process, which is discussed below in detail, control module  provides an appropriate notification (step D). In one embodiment, the appropriate notification is a message displayed by control module  that the response to the form will be obtained during the next synchronization.","Forms module  maintains the status of the forms cached and manages the completion of the forms (step E). In one embodiment, a user can access forms module  directly and review the cached forms before and after synchronization.","Multiple page forms may also be implemented. Multiple page forms may result from a single form that is too large to display on client . In this instance, server  transforms the single page form into multiple page forms for display on client . Referring to , flowchart I\u2032 illustrates user interaction with a multiple page form ( is an embodiment of step I in FIG. C). Starting with step A, the user accesses a channel containing a multiple page form. User interface  displays the first page of the form (step B). In much the same way as in step B of , the user enters data\/commands into the form elements on the page of the displayed form (step C).","Client extension interface  stores the data\/commands from the displayed form page (step D). User interface  displays the next page of the form (step E). Steps C, D, and E are repeated until all the pages of the form are completed. In one embodiment, client extension interface  delivers the completed multiple page form as a single form to forms module  (step F). In another embodiment, client extension interface  delivers each completed page of the form to the forms module  (not shown). During the synchronization process, which is discussed below in detail, control module  provides an appropriate notification (step G). In one embodiment, the appropriate notification is a message displayed by control module  that the response to the form will be obtained during the next synchronization. Similarly to step E of , forms module  maintains and manages the forms (step H).","3.1.4. Tracking Client Behavior","As described herein, the invention enables client  to record user\/client behavior. Examples may include, but are not limited to, tracking page impressions, such as tracking the number of times that a particular user has viewed a particular page or listened to a particular song, the amount of time a user spends viewing a page, or any other client activity. Other information that can be tracked includes, but is not limited to, user name, current time of request, page that is being viewed, the referred page, etc.","FIG. F is a flow diagram describing a method for tracking page impressions offline, and for tracking other client  activity. In step A, the user selects a page to view. It is then determined whether provider  of the page\/object has requested that client activity be tracked and recorded (step B). If provider  has not requested that client activity be recorded, the page is displayed and the client is not tracked (step C). If provider  has requested that client activity be tracked and recorded, the process proceeds to step D.","In step D, client extension interface  tracks client activity (as defined by the provider ). The process proceeds to step E.","In step E, the tracked information is transmitted to server  upon synchronization. In step F, server  then sends the information to the appropriate provider . The provider  may pay some compensation for this service.","3.1.5. Display of Context Sensitive Objects","The invention enables the processing of context sensitive objects based on context sensitive triggers while the client  is browsing pages\/objects in either an off-line mode (i.e., when not connected to server ) or an on-line mode (i.e., when connected to server ). Table 4 displays a listing of exemplary context sensitive objects. Table 5 displays a listing of exemplary context sensitive triggers. One skilled in the relevant art(s) would realize that other context sensitive objects and context sensitive triggers may be used without departing from the scope of the present invention. This process is shown in FIG. F.",{"@attributes":{"id":"P-d0e10208","num":"00002"},"tables":{"@attributes":{"id":"TABLE-US-00004","num":"00004"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"center"}},"thead":{"row":[{"entry":"TABLE 4"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}},{"entry":"Context Sensitive Objects"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}]},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"Business card"},{"entry":"Advertisement"},{"entry":"e-mail"},{"entry":"to do list"},{"entry":"calendar event"},{"entry":"ticket notification"},{"entry":"channels"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}]}}}}},{"@attributes":{"id":"P-d0e10318","num":"00002"},"tables":{"@attributes":{"id":"TABLE-US-00005","num":"00005"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"center"}},"thead":{"row":[{"entry":"TABLE 5"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}},{"entry":"Context Sensitive Triggers"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}]},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"Global positioning satellite locator"},{"entry":"Zip code"},{"entry":"Time of day"},{"entry":"User preferences"},{"entry":"Last sync location"},{"entry":"In range of a transmitter (e.g., bluetooth)"},{"entry":"Credit card"},{"entry":"Temperature"},{"entry":"Altitude"},{"entry":"Agent, arbiter, avatar"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}]}}}}},"In step A, the user selects a page to view on the client . The page is obtained from the cache of the client , or if not in the cache then from the server  (in on-line mode, or via the sync process when not on-line).","In step B, the client  determines if there are any context sensitive objects. Such objects may be related to the page of step A, or status information of client , or a combination thereof (or sensitive to other factors, as will be appreciated to persons skilled in the relevant art(s)).","If there are not context sensitive objects, then in step D the page is displayed on client .","If there are context sensitive objects, then in step C the objects are processed and the page is displayed on client . Processing of the objects depends on the nature of the objects. For example, if the object is an image, then the image is displayed. If the object is a script, then the script is processed.","In an embodiment, the objects may be advertisements, although the invention is not limited to this example. The sources of objects may pay the server  (or a party associated with server ) for the ability to have such objects loaded and processed on clients .","3.2. Syncing to Mobile Devices","Referring to , flowchart  illustrates a synchronization initialization process according to an embodiment of the present invention. This process is also explained by a corresponding example event trace diagram in .","Client  initializes a synchronization session and sends a null data marker [Cn] to server  (step A). See  in FIG. A. In one embodiment, a data marker is a synchronization token associated with the state of data on the client . More specifically, in one example, a synchronization token is a number that is sequentially increased by server  with each synchronization. Server  tells client  which client databases it wishes to track and sends data marker [C] to client  (step B). See  in FIG. A. At this point, the synchronization data marker for the client  is equal to C at both the client  and the server , as indicated by  and , respectively.","FIGS. H and H collectively illustrate a synchronization process that occurs subsequent to the initialization process of FIG. G.","As shown in flowcharts  in FIG. H, and \u2032 in FIG. H, the synchronization process checks to see if it can proceed from an earlier known state of information on the client. In one embodiment, client communication module  of client  initializes a synchronization session (step A). Client control module  of client  sends a current data marker C to web synchronization module  on server  (step B). This is indicated by  in FIG. B.","Server  uses the data marker C received from client  ( in ) to determine whether the last synchronization with client  was successful (step C). In an embodiment, a successful synchronization is indicated if the value of the synchronization data marker that is maintained by the server  for the client  is equal to the data marker sent by the client  to the server  in the sync request. In the example of , the data marker sent by the client.  to the server  in the sync request is C ( in FIG. B), which matches the data marker maintained in the server  for the client  ( in FIG. B). Accordingly, in the example of , the server  in step D determines that the last sync with the client  was successful. Accordingly, in step E, a normal sync process is performed, which is described below.","If the last sync was not successful as determined in step D then control flows to step F (described below).  shows an example where the sync with client  is not successful. At , the client  sends a sync request with data marker C. At this point in time, the data marker maintained by the server  for the client  is equal to C ( in FIG. B). Accordingly, a match exists, and in  the server  performs a normal sync and transmits new data marker C to client . However, due to some event , this transmission is not received by client . Thus, client  never receives the new data marker C. When the client  sends the next sync request, it transmits data marker C ( in FIG. B). At this point in time, the data marker maintained by the server  for the client  is equal to C ( in FIG. B), which does not match data marker C received from the client  in the sync request ( in FIG. B). Thus, the server  in step D determines that the last sync with client  was not successful. Accordingly, step F is performed.","In step F, the server  compares the latest data marker received from the client  (C in the example of B) with ones stored in the server  for the client . Essentially, the server  attempts in step F to \u201croll back\u201d to a previous known state of client . In the example of , the server  in step F determines that it can roll back to a known state of the client  corresponding to data marker C ( in FIG. B).","In steps G, H, and I, the server  determines what instructions are needed to cause the client  to roll back to the known state associated with data marker C identified in step F, and what instructions are needed to cause the client  to move forward from the previous state associated with data marker C to the current state associated with data marker C.","In steps J, the instructions determined from steps G, H, and  are sent to client , along with the new data marker C ( in FIG. B). In one embodiment, a data marker is a synchronization token which is specifically constructed to provide information about the state of information on a client.","In steps K and L, the client interface module  executes these instructions to update the client , and saves the new data marker C ( in FIG. B).","Referring back to step F, if the server  cannot find a previous state of the client  corresponding to the data marker contained in the latest sync request from the client  ( in FIG. B), then step M is performed. In step M, the server  identifies the instructions needed to initialize the client . In one embodiment, the server  initializes the client  completely. Control then passes to step J, described above.","The full normal synchronization step discussed at step E in FIG. H is shown in FIG. I. This process applies to a case where the client  communicates directly with the server .","Control module  identifies the deltas in the client databases identified by server  during initialization in step B (step A). In one embodiment of the present invention, a delta is a set of differences between versions of content or, more generally, objects (i.e., different versions of the same pages, documents, links, images, applications, services, etc.). In other words, deltas are sets of differences in the state of the objects currently being offered and the state of the objects in client .","Control module  sends the deltas to synchronization module(s)  via server extension module  (step B). In an embodiment, these deltas are sent in the synchronization request from client  to server . This is possible since the client  knows which databases the server is interested in. This enables the client  to only make one transmission to server  during the synchronization process, thereby improving performance.","In one embodiment, synchronization module(s)  include web synchronization module , fleet management module , and\/or other synchronization modules. These modules are responsible for synchronizing to different types of providers . Server extension module  checks database module  to obtain a list of synchronization modules  resident on server . Depending on the implementation, only some synchronization modules are present on server . The server extension module  distributes the synchronization responsibilities among the synchronization modules . Synchronization modules  synchronize the deltas from client  with providers  (step C). Based on the information from provider(s) , synchronization modules  compile instructions to synchronize the client  with providers  (step D). Synchronization module  sends such instructions to client , plus updated data marker (step E).","Note this is the only transmission from the server  to the client  during the synchronization process. Thus, the invention achieves a one-up\/one-down synchronization process, thereby improving performance. The instructions are transmitted via any reliable transport medium. For example, in one embodiment, HTTP is used. Control module  on the client  then executes the instructions (step F).","FIG. I illustrates a synchronization process of step E (FIG. H) applied to a case where client B communicates with server  via adapter .","Adapter  reads data from the client  (step M). Specifically, adapter interface module  reads data from client  that includes state information about the resources of the device , user specific information, etc.","Adapter  identifies deltas in client databases identified by server  in step B (step N). Adapter  sends these deltas to synchronization module(s)  via server extension module  (step ). Such deltas are transmitted in the initial synchronization request, thus effecting a \u201cone-up\u201d protocol.","As discussed above, synchronization module(s)  on server  synchronize deltas from adapter  with providers  (step P). Synchronization module(s)  compile instructions to synchronize client  with providers  (step Q). These instructions are transmitted to the adapter , along with the updated data marker (step R). This is the only transmission from the server  to the adapter  during the synchronization process, thus effecting a \u201cone-down\u201d protocol. Adapter  then writes the updated data to client  (step T).",{"@attributes":{"id":"P-00220","num":"00220"},"figref":"FIG. 1X","b":["106","108","104","106","108","108","104","155","104","156","155","156"]},{"@attributes":{"id":"P-00221","num":"00221"},"figref":"FIG. 1Y"},"Other synchronization embodiments shall be discussed. It is noted that the synchronization embodiments can be used individually or in combination, as will be appreciated by persons skilled in the relevant art(s).",{"@attributes":{"id":"P-00223","num":"00223"},"figref":"FIG. 1Z","b":"118"},{"@attributes":{"id":"P-00224","num":"00224"},"figref":"FIG. 3A","b":["300","304","108","118"]},"In step , client  sends updated information to adapter .","In step , server  receives updated information from adapter  (one-up transmission).","In step , server  examines the updated information and in step , server  obtains updated information from provider(s) .","In step , server  receives information regarding the sets of content available from provider(s) .","In step , server  constructs a set of content requests for provider(s) .","In step , server  sends requests to provider(s) .","In step , server  receives responses from provider(s) .","In step , server  interacts with client  to determine the state of its resources.","As already described herein, client  provides state information regarding the nature of its resources. In one embodiment, server  assesses the state information preemptively prepared and sent down in order to fit all the required information to the all the necessary device specifications including but not limited to: Dynamic memory specifications, high memory specifications, available storage space, screen size, user profile(s), color depth, applications on device, buttons on-device, data markers, preferences, fonts, sync type, supported data types, supported mime types, and connection\/network profile. These types of state information are only for illustration and are not intended to limit the present invention.","In step , server  optimizes the content received from provider(s) . In one embodiment, HTML content is optimized into a tokenized \u201cmachine friendly\u201d format which provide specific functionality for client . Other embodiments include optimized formats for XML, JavaScript\u2122, music files, images, etc. For example, as shown in FIG. AA, an image is optimized to meet the requirements of client  as determined by the state information determined in step . As described already herein, image A is optimized into image A, which may be in color, reduced to fewer colors, etc.","In step , server  encodes the content received from provider(s)  for transmission to adapter  and\/or client . Some of the content may be optimized for display, storage, and\/or other functionality on client . Some other content may not require any optimization. All content is then encoded for transmission. In one embodiment, the encoding protocol is HTTP. In another embodiment, the transmission protocol is TCP\/IP. Various transmissions protocols can be implemented in the present invention with little or no added steps or loss of functionality.","In step , adapter  signals that it is ready to process content and other network objects from server . Client  may or may not signal its readiness. In embodiments described herein, client  does not communicate with server  other than to provide the \u201cup\u201d transmission with all the information required for server  to respond completely.","In step , server  constructs a transmission protocol message for the content and other network objects to be transmitted to adapter  or client . As discussed with regard to step , the transmission protocol selected may determine the characteristics of the message, but not the content of the message.","In step , server  sends protocol message to providers(s) . In one embodiment, the messages sent are queries for forms which were selected and activated by a user of client .","In step , server.  receives responses from provider(s)  with interactive content. As discussed with regard to step , in one embodiment the interactive content can be the responses to form queries.","In step , server  presents the responses from provider(s)  to client  and\/or adapter .","In step , server  sends modified content to client  and\/or adapter .","In step , server  sends updated content to client  and\/or adapter .","The variable granularity protocol discussed in , A and in the methods of  do not use file serving or other conventional methods for synchronizing a device to a server or desktop. Instead, the synchronization methods of the present invention can synchronize by using any reliable transport protocol because the delivery of the byte code is transportable in the widest array of delivery protocols. HTTP is one embodiment described herein which is widely implemented and accepted in current computer network topologies. The protocol of the present invention enables operation between client  and server  and pre-configures the client to preemptively send sets of data to the server . This synchronization process of the present invention dynamically checks the need to update or not update content. In one embodiment, it checks the integrity of all data on any page sent via the protocol for the level of granularity. Granularity is determined by a set of deltas. For example, the protocol could acknowledge and read tags associated with HTML and\/or XML and sort the objects modeled by theses languages to a client or to a database during a synchronization. In addition this synchronization enables clients with disparate data markers (synchronization tokens) to synchronize by resetting data marker data and maintaining authentication integrity. The features of the present invention described herein are now discussed in more detail with respect to certain embodiments.","As an extension of the variable granular protocol and the use of deltas to determine what should be transmitted up or down, server  can deliver XML objects to client . The server  creates data structures for applications on a client  and can receive data structures from the client  for conversion to XML for use with a database.",{"@attributes":{"id":"P-00245","num":"00245"},"figref":["FIG. 3B","FIG. 3C","FIGS. 63A and 63B","FIG. 3C"],"b":["350","106","106","104","354","352","358","356","134","106","104","360","106","375","1","1","1","2"]},"3.3. Administering Channels, Content, and Data for Mobile Devices","Example administrative related functions are described below. It is noted that these functions are described for illustrative purposes only, and are not limiting.","3.3.1. Cached Device Information on Server","Conventionally, state information on a user or device  is stored on the device  (such as HTML data markers). Accordingly, functionality to process and maintain such state information resides on a device . Locating such functionality on the device  may not be optimal in some situations where the resources of the device  are limited, such as when the device  is a handheld computer.","Accordingly, according to embodiments of the invention, state information (and associated functionality) associated with clients  is maintained or cached on the server .",{"@attributes":{"id":"P-00251","num":"00251"},"figref":"FIG. 1J","b":"104"},"In step A, the client  accesses a provider  via the server .","In step B, the provider  returns some state information to the server . This may be a data marker, for example, or any other type of information on the device\/client\/user\/transaction\/etc.","In step C, the server  maintains such state information on behalf of the client . This is performed by the web synchronization module  and the database module .","In step D, the client A requests the server  to access the same provider  as in step A.","In step E, the server  (specifically, the web synchronization module ) accesses the provider.  using the state information that is maintained on behalf of the client .","3.3.2. Server Side Optimization of Content","When the server  obtains an object from a provider , the server  in some instances passes that object to a client . In other cases, however, it may be more efficient for the server  to transform the object to a form that is more suitable for use by the client . In an embodiment, this transformation is performed by the web synchronization module .","This process is represented, for example, in FIG. K. Steps A-C illustrate the initial configuration actions in one embodiment of the present invention. Steps D and E illustrate an embodiment of any subsequent actions where the client's state information is already stored on the server .","In step A, client  sends state information to server  via client communications module . State information may contain, among other things, user identity, secure login information, current resources, etc.","In step B, server communications module  receives client's state information.","In step C, server communications module  forwards the received state information to database module  and web synchronization module .","In the case where the client's state information is already stored by database module , steps D and E replace steps A-C.","In step D, client  identifies itself to server .","In step E, server  obtains state information about client  from database module .","In step F, the web synchronization module  obtains an object from a provider . In one embodiment, the object is content which conforms to that which is requested by client's  state information, although the object can be any entity, such as an application, service, etc.","In step G, the web synchronization module  translates\/transforms\/optimizes the object for use by a particular client. The state information of the device  and\/or client  is considered in this optimization process. The following list of state information is only some of the factors that the web synchronization module  considers when performing this optimization (and when determining what, if any, transformations\/conversions\/optimizations to perform):\n\n","Other factors will be apparent to persons skilled in the relevant art(s) bases on the teachings contained herein.",{"@attributes":{"id":"P-00289","num":"00289"},"figref":"FIG. 4A","b":["400","410","104","400","412","414","416"]},"3.3.3. Hashed Device State","In embodiments, during synchronization operations, prior to sending an object to a client , the server  checks to see if the object differs from the instance of the object already resident on the client . If the object is the same as that already resident on the client , then the server  does not send the object to the client . This process is illustrated in FIG. L.","In step A, the client  requests an object (directly or indirectly).","In step B, the web synchronization module  obtains the requested object from a provider .","In step C, the web synchronization module  performs a hash operation on the object and compares the hash result to a previously stored hash result for the object.","In step D, the web synchronization module  determines if the hash result generated in step C is the same as the previously generated and stored hash result of the object.","In step E, if they are the same, then the client  is informed that the object has not changed.","In step F, if they are not the same, then object is transformed as in step B of FIG. K. Also, the new hash value generated in step C is stored by the server .","In step G, the web synchronization module  performs a hash operation on the transformed object.","In step H, the web synchronization module  compares the hash result of the transformed object to a previously stored hash result of the transformed object.","In step I, the web synchronization module  determines if the hash result generated in step G is the same as the previously generated and stored hash result of the transformed object.","In step E, if they are the same, then the client  is informed that the object has not changed.","In step J, if they are not the same, then the transformed object is sent to the client . Also, the new hash value generated in step G is stored by the server .","Thus, according to embodiments of the invention, the server  determines whether current versions of objects already reside on clients  by using hash results, as opposed to the objects themselves. This reduces the amount of memory needed on the server  (since only the hash results need to be stored, not the objects themselves).","Also, according to embodiments, there are two checks to see if the current versions of objects already reside on clients . The first check is made to the raw object, and the second check is made to the transformed versions of the objects.",{"@attributes":{"id":"P-00305","num":"00305"},"figref":"FIG. 4B","b":["402","402","104","106","422","422","426","427","104","424","104","104","427","426"]},"3.3.4. Syncing Music, Movies, Books, Photo Albums, and Other Collections of Objects","The invention supports channels which comprise web sites having collections of objects, such as collections of music, images, books, movies, applications, services, etc. By selecting such a channel, the client  can be populated with such collections of objects.","For example, if a channel having a collection of music is selected, then it is possible to turn the client  into a \u201cjukebox\u201d once the music collection is stored on the client  during the synchronization process. Similarly, a client  can become a photo album, a book library, a movie theater, an application library, etc., by selecting appropriate channels. This process is represented by FIG. M. It is noted that this process is applied to collections of music, but it is also applicable to collections of any types of objects. It is also noted that a given channel may have combinations of different types of objects, such as combinations of music, movies, applications, images, services, etc.","In step A, a provider  is added to list of the channels supported by the server . The provider  offers a collection of objects.","In step B, a user of client  selects the channel .","In step C, during the next synchronization operation, the selected channel is synchronized with client .","3.3.5. Fleet Management","The invention supports organizing groups of clients  as \u201cfleets.\u201d For example, all clients  associated with employees of a company, or of a department of a company, may be a fleet. As another example, client  in a family can be a fleet. Generally, any group of clients  can be a fleet.","The invention supports performing mass operations on or relating to clients  in a given fleet (or multiple fleets). This process is shown, for example, in FIG. N.","In step A, a desired mass operation is defined. For example, one may define a mass operation to be the collection and processing of state information relating to clients  in a fleet. Another operation could involve installing an application on all clients  in a fleet. In embodiments, a third party is permitted to define the mass operation by paying some amount to the server  (specifically, by providing some compensation or consideration to the entity associated with or responsible for the server ).","In step B, the fleet or fleets are identified.","Steps D and C\/E illustrate processing relating to two types of mass operations.","In step C, cached information in server  relating to the clients  in the identified fleet(s) are collected and processed in a manner defined by the mass operation defined in step A. Optionally in step E, perhaps upon payment by a third party of some consideration to the entity associated with or responsible for server , such information is used in a manner desirable to the third party (such as providing marketing information to the third party).","In step D, during synchronization with the clients  in the fleet(s), the desired mass-operation defined in step A is performed on the client  (such as upgrading software on the clients ).","3.4. Customizing Channels, Content, and Data","3.4.1. Creating Custom Channels","As described herein, the invention provides a user or an administrator with the ability to navigate or \u201csurf\u201d to a Web page or site and automatically add that Web page or site to the user's list of channels and\/or to the channels provided by server , respectively.  is a flow diagram describing a process  for automatically adding a Web page or Web site to a user's list of channels from a Web browser. Although flow diagram  is described from a user's perspective, flow diagram  is equally applicable to an administrator for automatically adding channels provided by server . Process , as well as other applicable processes described herein, may be performed using a desktop Web browser, such as Internet Explorer, developed by Microsoft and Netscape Communicator, developed by Netscape, or other browsers. Process  begins with step A.","In step A, the user bookmarks an automatic channel link from the Web page of server . Bookmarking identifies the URL (Uniform Resource Locator) of the automatic channel Web page. For example, with Internet Explorer 4.0, the user creates a bookmark by right clicking on the automatic channel link and selecting \u201cAdd to Favorites.\u201d In another example, using Netscape Communicator 4.0, a bookmark is created by right clicking on the automatic channel link and selecting \u201cAdd Bookmark.\u201d Bookmarking is a well known technique to those skilled in the relevant art(s). The process proceeds to step B.","In step B, the user surfs to a Web site. The user determines that he\/she wishes to create a channel. In step C, the user invokes the automatic channel bookmark. The process then proceeds to step D, where the user is brought back to the automatic channel Web page. The URL of the preceding Web site is now available to server . The process proceeds to step E.","In step E, in an embodiment, a script in the automatic channel Web page queries the browser for the URL of the previous Web site and automatically populates an automatic channel form for the Web site to be added to the user's list of channels. In another embodiment, a header is used to determine the URL of the previous Web site. The automatic channel form contains fields identifying the title and URL of the Web site, the maximum channel size, the link depth, whether images are to be included, whether to follow off-site links, when to refresh, etc. The process proceeds to step F.","In step F, the user reviews the channel settings that were automatically generated, and, if satisfied, selects the save channel button to save the channel settings. If the user is not satisfied, the user may modify the settings to the user's satisfaction and then select the save button to save the channel settings. The process proceeds to step G.","In step G; user interface  causes a new channel to be added to the user's list of channels. The new channel is entered in database module  of server . On the next sync of client , the new channel will be synced to the client.","The invention also allows a provider  to enable a user of device  to have the Web page of provider  loaded on the user's device . Provider  provides a link or quick channel button on its Web page that, if selected by the user, indicates that the user would want the Web page converted into a channel that is loaded on his\/her mobile device. This process does not require that the user be a registered user of server .  describes a process  for allowing a provider  to enable a user of device  to have the Web page of provider  converted into a channel that is then loaded on device . As described herein, device  may be a mobile device. Process  begins with step A.","In step A, a user surfs to the Web page of a provider . Provider  has a quick channel button that, when selected by the user, links the user to a Web page of server . The process proceeds to step B.","In step B, the user selects the quick channel button indicating that the user would like the Web page converted into a channel that is loaded on his\/her device . In step C, the user is automatically sent to the Web site of server  by selecting the quick channel button. The process proceeds to step D.","In step D, the server attempts to determine whether the user is a registered user of server . The process proceeds to step E.","In step E, server  determines if the user is a registered user of the Web site of server . If the user is detected to be a registered user with the Web site of server , the process proceeds to step F. If the user cannot be detected as a registered user of the Web site of server , the process proceeds to step G.","In step G, server  queries the user as to whether or not the user is registered with the server . If the user's response is yes, the process proceeds to step I. In step , the user logs on to server . The process then proceeds to step F.","Returning to step G, if the user response is no, that he\/she is not registered as a user of the Web site of server , the process proceeds to step H. In step H, the server allows the user to register by taking the user through the registration process. The process proceeds to step F.","In step F, server  adds a new channel (that is, the Web site of the content provider having the quick channel button) to the user's list of channels, returns the user to the Web site from which it was linked, and presets state information to enable the Web site to be displayed on the user's device  on the next syncing operation.","3.4.2. Tags","As described herein, the invention delivers Web content to clients . Server  optimizes the Web content display to enable the display to fit within the parameters of the client . Such parameters may include, but are not limited to, dynamic memory specifications, high memory specifications, protected memory, storage memory, database memory, available storage space, screen size, user profile(s), color depth, applications on the device, buttons on the device, data markers, preferences, fonts, font specifications, sync type, supported data types, supported mime types, and connection\/network profile. FIG. AA illustrates an optimization of a Web site page for display on a handheld device. As shown in FIG. AA, Web page graphic display A is from a large screen desktop display and Web page graphic display A is an optimized version A of Web page graphic display A that has been optimized to fit on a handheld device, such as device .","The invention also identifies Web content that is designed for additional modifications. Server  identifies the additional modifications through the use of tags. Any and all bytes processed by server  are potentially examined for compression. Server  detects the tag and executes the necessary logic.  is a flow diagram describing an overview of a process  for handling predefined tags by server  and clients . The process begins with step A.","In step A, providers  create Web page content using predefined tags to optimize use on devices . The process proceeds to step B.","In step B, server  and clients  process objects within the Web page using tags contained therein.",{"@attributes":{"id":"P-00341","num":"00341"},"figref":"FIG. 1Q","b":["186","106","188"]},"In step A, client  accesses a Web page cached in client  or provided to client  by server . The process proceeds to step B.","In step B, client  processes the Web page based on the presence or absence of tags. For example, META tags may be used. An example META tag is <META NAME=\u201cHandheld-Friendly\u201d content=\u201cTrue\u201d>. This META tag (if set to true) enables several HTML features that are normally turned off. For example, most TABLES, HSPACEs, and VSPACES are designed for much larger screens, and are therefore not usually processed by client . However, TABLE tags are displayed, and HSPACE and VSPACE attributes of IMG (image) tags are processed if the page is marked as \u201cHandheld Friendly.\u201d Another exemplary tag is an <AGIGNORE> or <\/AGIGNORE> tag used in a wireless channel. The AGIGNORE tag is used to surround content within an HTML page that may be inappropriate or unattractive on Internet-based phones. Content surrounded by this tag is ignored by client . A tag also exists to control how JavaScript\u2122 is handled. If the tag exists, JavaScript\u2122 behavior is enabled. If the tag does not exist, JavaScript\u2122 behavior is ignored.","A page tracking tag may be used that enables client  to report to server  the number of times a user has viewed a Web page (in embodiments, the client  may report other client activity). A page break tag, <PAGEBREAK TITLE=\u201cyour title\u201d> is used in a wireless channel. Such a tag breaks up pages on request. When processing pages for devices other than WAP (Wireless Application Protocol) phones, server  ignores the page break tag.",{"@attributes":{"id":"P-00345","num":"00345"},"figref":"FIG. 1R","b":["186","104","190"]},"In step A, server  accesses a Web page. The process proceeds to step B.","In step B, server  processes the Web page based on the presence or absence of tags, as previously described above. In one embodiment, tags exist for server  that indicate whether to follow a link, not to follow a link, or to follow a link a number of layers (N) down.","The invention is not limited to the tags described above. One skilled in the relevant art(s) would know that other types of tags may be used without departing from the scope of the present invention, based on the teachings contained herein.","3.4.3. Client Registration Process Embodiment","In one embodiment, the invention includes a client registration process that includes GUI elements for the capture and configuration of client details and preferences. The invention is not limited to all of the steps described herein. One skilled in the relevant art(s) would know that other steps may be used without departing from the scope of the present invention, based on the teachings contained herein.","In one embodiment, the invention registers a user from the Web site of server .  are flow diagrams describing the registration process. In , the process begins with step . In step , a user arrives at the home page of server . The user may arrive at the home page from a link or a direct URL. If the user has previously registered, the user is identified via a data marker, and the user's identification is displayed on the screen.","In step , if the user is a current user, the process proceeds to step . If the user is not a current user, the process proceeds to step .","In step , a new user is registered. The registration process for a new user is described below with reference to .","In step , the current user may select between an editing option for editing their account or an add channel(s) option for adding additional channels to their account. If the current user selects the add channel(s) option, the process proceeds to step .","In step , the user may add new channels using an \u201cAdd featured channels\u201d option or the user may add new channels via an explore and add new channels option. If the user adds new channels via the \u201cAdd featured channels\u201d option, the process proceeds to step .","In step , the user may select channels from a featured channels list. The added channel is displayed in a smart little unit (SLU) labeled \u201cuser account.\u201d An indicator will appear beside the added channel to indicate that the channel has not been synchronized with client  (step ).","Returning to step , if the user adds new channels via the \u201cexplore and add new channels\u201d option, the process proceeds to step . In step , the user selects a category from a directory of channel categories. A list of Web sites from the selected category is displayed in step . In step , the user may explore any Web site in the list and\/or add any of the Web sites to their account. If the user adds a Web site to their account, the process proceeds to step .","Returning back to step , if the user selects the edit account option, the process proceeds to step . In step , the user is linked to a \u201cuser channel\u201d page of the Web site of server . The process then proceeds to step  in FIG. B.","In step , the user is presented with a plurality of options. The user may add and remove channels, export channels, import older channels and data files for viewing, alter settings, upgrade the software, or view their sync history. If the user wishes to view their sync history, the process proceeds to step .","In step , the user selects the sync log option. The user's sync history is accessed and displayed in step .","Returning to step , if the user wishes to alter their account settings, the process proceeds to step . In step , the user selects the settings option. The user is then linked to an account settings page in step . In step , the user is queried to change their password and email address, as well as other user information.","Returning back to step , if the user wishes to export channels, the process proceeds to step . In step , the user selects the export channels option. URLs from the user's channels are automatically generated for adding the channels to another user account.","Returning back to step , if the user wishes to import older channels and data files, the process proceeds to step . In step , the user selects the import option. Old versions of channels and data files are then selected and displayed in step .","Returning back to step , if the user wishes to modify their existing channel(s), the process proceeds to step . In step , the user clicks on a channel to edit. Once the clicks on the channel, the channels parameter settings are displayed. In step , the user may edit the channel parameter settings. Channel parameter settings may include, but are not limited to, the channel name, root URL, an images option, link depth, an offsite links option, maximum size, and refresh period.","Returning back to step , if the user wishes to add a customized channel, the process proceeds to step  in FIG. C. In step , the user selects a \u201ccreate custom channel\u201d option. The user is then queried to manually enter information for adding a user favorite Web site to the SLU. The process then proceeds to step  in , where the added channel is entered into the SLU.","Returning back to step  in , if the user wishes to add a channel automatically, the process proceeds to step  in FIG. C. In step , the user selects the automatic channel option. A channel is then created while surfing the Web when the user clicks a button or chooses a bookmark, as described with reference to . The process then proceeds to step  in , where the added channel is entered into the SLU.","Returning back to step  in , if the user wishes to remove a channel, the process proceeds to step  in FIG. C. In step , the user removes a channel by checking the channel to be deleted in the SLU and selecting the delete button.","Returning back to step  in , if the user wishes to update the software, the process proceeds to step  in FIG. D. In step , the user selects the software setup option. The user is then linked to a software setup page in step . The process proceeds to step .","In step , the user may either download the software or configure a client communication module . If the user selects the configure client communication module , the process proceeds to step .","In step , the user is linked to a configure client communications page. In step , the user must click the select button to begin the configuration. Therefore, the client communication module  is configured to identify the particular server that will send data to device .","In step , the software is configured to communicate with the appropriate servers. The process then proceeds to step  in FIG. H.","In step , a browser prompts the user to sync the device. In one embodiment, a browser prompts the user to place their device in a cradle and synchronize the device. In step , the user synchronizes the device. A notification from the browser will be displayed to indicate that the client communication module  process is complete.","Returning to step  in , if the user wishes to download the software, the download software option is selected. The process proceeds to step .","In step , the software is downloaded. In step , a notification is displayed to indicate that client  will be installed on device  upon synchronization.","In step , the browser is displayed to prompt the user to sync the device. In one embodiment, the browser prompts the user to place the device in the cradle and press the sync button to sync the device . The process then proceeds to step  in FIG. E.","In step , the browser queries the user as to whether the user wants to use their present account or create a new account. In step , if the user selects to use their existing account, the process proceeds to step  in  to configure the client communication module . If, in step , the user selects to create a new account, the process proceeds to step . In step , a new account for the user is created. The process then proceeds to step  in  to configure the client communication module .","The process of configuring the software to communicate with the servers, such as server , will now be described in greater detail in FIG. F. The process begins with step .","In step , it is determined whether the user is a pre-existing user. If the user is a pre-existing user, the user is queried for the type of device that will use the server in step . In step , the user selects the type of device. The process then proceeds to step .","Returning to step , if the user is not a pre-existing user, the process proceeds to step .","In step , details of the configuration are displayed. The process proceeds to step .","In step , the user may replace their existing server profile or add another server profile. Many reasons may exist as to why a single user may want different server profiles. For example, a first server profile may contain only sports channels and a second server profile may be directed to stock channels. The process then proceeds to step  in FIG. G.","The user has the option of testing their settings. In step , the user is queried as to whether the user desires to test their settings. If the user selects the test settings option, the process proceeds to step . In step , the results of the tests are displayed. The process then proceeds to step .","Returning to step , if the user does not select the test settings option, the process proceeds to step .","In step , the process ends.",{"@attributes":{"id":"P-00385","num":"00385"},"figref":"FIG. 51","b":["506","501","501","503"]},"In step , the user selects the type of mobile device the user will be synchronizing;","In step , a security notification pertaining to import\/export laws is displayed.","In step , the user selects the download software prompt. The software is downloaded in step . A notification is displayed indicating that the software has been successfully downloaded in step .","In step , the browser prompts the user to sync the device. In one embodiment, the browser prompts the user to place their device  into a cradle and initialize the sync process for the device. The process then proceeds to step  in FIG. J.","In step , the user is prompted to enter their user account information. The user account information may include, but is not limited to, the user's name, address, email address, and password. The process then proceeds to step .","In step , the browser is displayed for configuring the client communication module . The client communication module  application must be informed of the server that will send data to the user's device . The client communication module  is processed in a similar matter as described in steps , , and  of FIG. D.","In step , it is determined whether the new user is pretending to be a new user or is a real new user. If the user is pretending to be a new user, the process proceeds to step , where steps - in  are performed to allow the user to replace their existing server profile, and to test the settings, if desired. If the user is an actual new user, the process proceeds to step . In step , the user is instructed to perform the synchronization process as described in steps - in FIG. H.","In one embodiment, a user may have access to a user account without having to be registered.  is a flow diagram describing a process for enabling an unregistered user to access server . The process begins with step A.","In step A an unregistered user invokes client . Control then proceeds to step B.","In step B, client  is synchronized with server . Server  assigns client  an anonymous account in step C. The process proceeds to step D.","In step D, server  periodically reminds client  to register. It is not a requirement that the user register. If the user registers, in step E, the user is promoted to a registered user.","3.4.4. Selecting and Organizing Channels for a Client","As described herein, the invention allows a user to select and organize channels for client  of device .  is a flow diagram describing a method for selecting and organizing channels. A process  begins with step . In step , a SLU, also referred to as a basket or cart, displays the current channels in a user's account. The SLU is representative of the user's account. In step , the SLU enables the user to create, remove, or modify channels.",{"@attributes":{"id":"P-00399","num":"00399"},"figref":"FIG. 5L","b":["535","537","537","539"]},"In step , the user may select the create channel button displayed in the SLU. In step , the user is then linked to the create channel page, where the user may manually enter information to add a favorite site to their account. The user may also create a new channel automatically using the automatic channel methods described above.","Returning to decision step , if the user wishes to remove channels from their SLU, the process proceeds to step . In step , the user selects the removal link associated with the channel to be deleted in the SLU. In step , the channel is deleted.","Returning to decision step , if the user wishes to modify channels that are contained in their SLU, the process proceeds to step .","In step , the user selects the edit button displayed on their SLU. The edit button links the user to the \u201cuser channels\u201d page. In step , the user may click on a channel to be modified. Parameter data for that channel is then displayed, the parameter data may include, but is not limited to, the channel name, root URL, maximum size, link depth, an offsite links option, and refresh period setting.","In step , the user may modify the parameter(s) for the channel.","Device  may contain a channel manager. The channel manager operates in a similar manner as the SLU.","3.4.5. An Account Management Process","The invention also allows a user to manage their accounts without having to use the registration process for a current user. A flow diagram describing an account management process is shown in FIG. M. With the account management process, a user may choose to alter the settings of their account, update the software, view their sync history, create custom channels manually or automatically, export channels, import channels, modify channels, and delete channels. The process begins with step . In step , a user is allowed to manage their account from the \u201cuser channels\u201d page of the Web site for server .","If the user wishes to alter their settings, the process proceeds to step . Account settings, such as the user's password and\/or email address, may be altered in a similar manner as described in FIG. B.","If the user wishes to update the software, the process proceeds to step . The software may then be updated in a similar manner as described in , E, and H.","If the user wishes to view their sync history, the process proceeds to step . The user may view their sync history in a similar manner as described in FIG. B.","If the user wishes to create customized channels manually, the process proceeds to step . Customized channels are created in a similar manner as described in FIG. C.","If the user wishes to create channels automatically while surfing, the process proceeds to step . Channels are automatically created in a similar manner as described in FIG. C.","If the user wishes to export channels to other users, the process proceeds to step . The user's channels are exported to other users in a similar manner as described in FIG. B.","If the user wishes to import old channels and data files, the process proceeds to step . Old channels and data files are imported for viewing as described in FIG. B.","If the user wishes to modify channels, the process proceeds to step.. Current user channels may be modified in a similar manner as described in FIG. B.","If the user wishes to remove channels from their account, the process proceeds to step . Channels are removed from the user's account in a similar manner as described in FIG. C.","Various example screen shots related to the functionality of the invention are considered in this section. It is noted that these screen shots are provided for illustrative purposes only, and are not limiting. Additional screen shots will be apparent to persons skilled in the relevant art(s).","These screen shots are generated by the user interfaces of the invention, such as user interface  in the server  and user interface  in the clients . However, other modules of the invention may also contribute to the user interface function with regard to their respective functionalities and responsibilities. For example, and without limitation, the forms module  may contribute to user interface functionality with regard to forms.","Generally, screen shots are generated to enable interaction with users. For example, screen shots may be generated to provide information to users, or to obtain information from users. Other uses of screen shots will be apparent to persons skilled in the relevant art(s).","The screen shots in  depict functionality of embodiments of the invention. The invention is directed to such functionality.",{"@attributes":{"id":"P-00421","num":"00421"},"figref":"FIG. 6","b":["136","108","108"]},{"@attributes":{"id":"P-00422","num":"00422"},"figref":"FIG. 7","b":"108"},{"@attributes":{"id":"P-00423","num":"00423"},"figref":"FIG. 8","b":["108","108"]},{"@attributes":{"id":"P-00424","num":"00424"},"figref":"FIG. 9","b":["108","108"]},"According to the invention, the client  can cache web pages in the databases of the client  when it is browsing the Internet (while connected to the server , for example). Then, when not connected to the Internet, the user of the client  may browse and interact with pages stored in the cache.  is an example screen shot that enables the client  to delete pages from the cache.",{"@attributes":{"id":"P-00426","num":"00426"},"figref":"FIG. 11","b":["108","1102","108","108"]},{"@attributes":{"id":"P-00427","num":"00427"},"figref":"FIG. 12","b":["108","108","108"]},{"@attributes":{"id":"P-00428","num":"00428"},"figref":"FIG. 13","b":"108"},"According to an embodiment of an invention, a corporate entity (or enterprise) controls a server , and its employees have devices  that interact with the server  in the manner discussed herein. The server  may support channels that are specific to the enterprise, or otherwise relevant to the enterprise (as well as supporting any other channels).  is an example screen shot of a home page for an enterprise having a server . The home page includes personal channels  and group channels .  shows an example screen shot corresponding to an enterprise specific channel that is displayed on the client .",{"@attributes":{"id":"P-00430","num":"00430"},"figref":"FIG. 15","b":["108","108","104","108","104"]},{"@attributes":{"id":"P-00431","num":"00431"},"figref":"FIG. 16","b":["108","108","108","108"]},{"@attributes":{"id":"P-00432","num":"00432"},"figref":"FIG. 17","b":["108","108","106"]},{"@attributes":{"id":"P-00433","num":"00433"},"figref":"FIG. 18","b":["108","104","104","108","104","19"]},{"@attributes":{"id":"P-00434","num":"00434"},"figref":"FIG. 19","b":["162","1"]},{"@attributes":{"id":"P-00435","num":"00435"},"figref":"FIG. 20"},{"@attributes":{"id":"P-00436","num":"00436"},"figref":"FIGS. 21 and 22","b":"108"},{"@attributes":{"id":"P-00437","num":"00437"},"figref":"FIG. 23","b":["108","2302","2304","2306","2308","2310"]},{"@attributes":{"id":"P-00438","num":"00438"},"figref":["FIG. 24","FIG. 25","FIG. 26","FIG. 27"],"b":["108","108","108","108","108","108"]},{"@attributes":{"id":"P-00439","num":"00439"},"figref":"FIG. 28"},{"@attributes":{"id":"P-00440","num":"00440"},"figref":"FIG. 29"},{"@attributes":{"id":"P-00441","num":"00441"},"figref":"FIG. 30"},{"@attributes":{"id":"P-00442","num":"00442"},"figref":"FIG. 31"},{"@attributes":{"id":"P-00443","num":"00443"},"figref":"FIG. 32","b":["108","108","108"]},{"@attributes":{"id":"P-00444","num":"00444"},"figref":"FIG. 33"},{"@attributes":{"id":"P-00445","num":"00445"},"figref":"FIG. 34"},{"@attributes":{"id":"P-00446","num":"00446"},"figref":"FIG. 35","b":"108"},{"@attributes":{"id":"P-00447","num":"00447"},"figref":"FIG. 36"},{"@attributes":{"id":"P-00448","num":"00448"},"figref":"FIG. 37"},{"@attributes":{"id":"P-00449","num":"00449"},"figref":"FIG. 38"},{"@attributes":{"id":"P-00450","num":"00450"},"figref":"FIG. 39"},{"@attributes":{"id":"P-00451","num":"00451"},"figref":"FIG. 40"},{"@attributes":{"id":"P-00452","num":"00452"},"figref":"FIG. 41"},{"@attributes":{"id":"P-00453","num":"00453"},"figref":"FIG. 42"},{"@attributes":{"id":"P-00454","num":"00454"},"figref":"FIG. 43","b":"104"},{"@attributes":{"id":"P-00455","num":"00455"},"figref":"FIG. 44"},{"@attributes":{"id":"P-00456","num":"00456"},"figref":"FIG. 45","b":"104"},{"@attributes":{"id":"P-00457","num":"00457"},"figref":"FIG. 46","b":["108","104","4602","108","4604","4604","4604","4604","128","4604","4604","4606","4608"]},{"@attributes":{"id":"P-00458","num":"00458"},"figref":"FIG. 47","b":["108","104","4702","108"]},{"@attributes":{"id":"P-00459","num":"00459"},"figref":"FIG. 48","b":["108","108","104"]},{"@attributes":{"id":"P-00460","num":"00460"},"figref":"FIGS. 49-62","b":["108","104"]},{"@attributes":{"id":"P-00461","num":"00461"},"figref":["FIG. 49","FIG. 50","FIG. 51","FIGS. 49-50"],"b":["49","106","106"]},{"@attributes":{"id":"P-00462","num":"00462"},"figref":"FIG. 52","b":"106"},"After the client software is installed on device , example screen shot in  is displayed. In this page, the user is able to indicate whether he is an existing user and wishes to use his existing account, or whether he wishes to open a new account. If the user indicates that he wants to open a new account, then the registration process follows (described elsewhere herein).",{"@attributes":{"id":"P-00464","num":"00464"},"figref":"FIG. 54","b":["108","108","104","5402","108","104","104","5402","108","104","104"]},{"@attributes":{"id":"P-00465","num":"00465"},"figref":"FIG. 55","b":["106","104","106"]},{"@attributes":{"id":"P-00466","num":"00466"},"figref":["FIG. 56","FIGS. 54 and 55"]},{"@attributes":{"id":"P-00467","num":"00467"},"figref":"FIG. 57"},{"@attributes":{"id":"P-00468","num":"00468"},"figref":["FIG. 58","FIG. 59","FIG. 60"],"b":["108","104"]},{"@attributes":{"id":"P-00469","num":"00469"},"figref":"FIG. 61","b":"104"},{"@attributes":{"id":"P-00470","num":"00470"},"figref":"FIG. 62","b":"104"},"While various embodiments of the present invention have been described above, it should be understood that they have been presented by way of example only, and not limitation. It will be understood by those skilled in the art that various changes in form and details may be made therein without departing from the spirit and scope of the invention as defined in the appended claims. Thus, the breadth and scope of the present invention should not be limited by any of the above-described exemplary embodiments, but should be defined only in accordance with the following claims and their equivalents."],"BRFSUM":[{},{}],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"BRIEF DESCRIPTION OF THE FIGURES","p":["The accompanying drawings, which are incorporated herein and form part of the specification, illustrate embodiments of the present invention and, together with the description, further serve to explain the principles of embodiments of the invention.",{"@attributes":{"id":"P-00016","num":"00016"},"figref":"FIG. 1A"},{"@attributes":{"id":"P-00017","num":"00017"},"figref":"FIG. 1B"},"FIG. B is a block diagram of an example data processing unit useful for implementing items from ;",{"@attributes":{"id":"P-00019","num":"00019"},"figref":"FIG. 1C"},{"@attributes":{"id":"P-00020","num":"00020"},"figref":"FIG. 1D"},{"@attributes":{"id":"P-00021","num":"00021"},"figref":"FIG. 1E"},"FIG. F is an example flowchart of a process for tracking client activity according to an embodiment of the invention;","FIG. F is an example flowchart of a process for context sensitive processing (such as but not limited to processing relating to advertising) on a client according to an embodiment of the invention;",{"@attributes":{"id":"P-00024","num":"00024"},"figref":"FIG. 1G"},"FIGS. H and H collectively illustrate an example flowchart of an \u201coff by N\u201d synchronization process according to an embodiment of the invention;","FIG. I is an example flowchart of a synchronization process (where the client is connected directly to the server) according to an embodiment of the invention;","FIG. I is an example flowchart of a synchronization process (where the client is connected to the server via an adapter) according to an embodiment of the invention;",{"@attributes":{"id":"P-00028","num":"00028"},"figref":"FIG. 1J"},{"@attributes":{"id":"P-00029","num":"00029"},"figref":"FIG. 1K"},{"@attributes":{"id":"P-00030","num":"00030"},"figref":"FIG. 1L"},{"@attributes":{"id":"P-00031","num":"00031"},"figref":"FIG. 1M"},{"@attributes":{"id":"P-00032","num":"00032"},"figref":"FIG. 1N"},{"@attributes":{"id":"P-00033","num":"00033"},"figref":"FIG. 1O"},{"@attributes":{"id":"P-00034","num":"00034"},"figref":"FIG. 1P"},{"@attributes":{"id":"P-00035","num":"00035"},"figref":"FIG. 1Q"},{"@attributes":{"id":"P-00036","num":"00036"},"figref":"FIG. 1R"},{"@attributes":{"id":"P-00037","num":"00037"},"figref":"FIG. 1S"},{"@attributes":{"id":"P-00038","num":"00038"},"figref":"FIG. 1T"},{"@attributes":{"id":"P-00039","num":"00039"},"figref":"FIGS. 1U","b":["1","1","1","1","1","1","1"]},{"@attributes":{"id":"P-00040","num":"00040"},"figref":"FIG. 2"},{"@attributes":{"id":"P-00041","num":"00041"},"figref":"FIG. 3A"},{"@attributes":{"id":"P-00042","num":"00042"},"figref":"FIG. 3B"},{"@attributes":{"id":"P-00043","num":"00043"},"figref":"FIGS. 3C and 4A"},{"@attributes":{"id":"P-00044","num":"00044"},"figref":"FIG. 4B"},{"@attributes":{"id":"P-00045","num":"00045"},"figref":"FIGS. 5A","b":["5","5","5","5","5","5","5","5","5","5","5","5"]},{"@attributes":{"id":"P-00046","num":"00046"},"figref":"FIGS. 6-62"},{"@attributes":{"id":"P-00047","num":"00047"},"figref":"FIGS. 63A and 63B"}]},"DETDESC":[{},{}]}
