---
title: System and method of distributing replication commands
abstract: A transactional replication system wherein each replicated command applies to a single row as identified by the primary key, replicated commands are dispatched among multiple connections by hashing of primary key from a single command queue to ensure that changes to the same data row are always dispatched to the same connection to maintain the order of commands as originally occurred on publisher. All connections commit their transactions at the same time in a coordinated fashion without a two phase commit. Retry logic based on a logical sequence number is used to reapply commands from any connection that fails to commit.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=07707181&OS=07707181&RS=07707181
owner: Microsoft Corporation
number: 07707181
owner_city: Redmond
owner_country: US
publication_date: 20030219
---

{"@attributes":{"id":"description"},"BRFSUM":[{},{}],"heading":["FIELD OF THE INVENTION","BACKGROUND OF THE INVENTION","SUMMARY OF THE INVENTION","DETAILED DESCRIPTION OF ILLUSTRATIVE EMBODIMENTS","Exemplary Computing Environment"],"p":["The present invention relates to the field of computing and, in particular, to the field of transactional replication.","Replication is the capability to copy data and changes to that data from one database to another.  illustrates an overview of conventional transactional replication. A Publisher  is a server or database that sends its data to another server or database. The Publisher  may contain publication\/publications that are a collection of one or more articles that are sent to a subscriber server or database. In transactional replication, an article is what is to be replicated, and may be an entire table, select rows from a table, specified columns from a table or a stored procedure.","A Distributor  manages the flow of data through the replication system. The distributor  contains a distribution database that tracks the changes (to publications) that need to be replicated from publishers . A publisher  may act as its own distributor , or a remote database server can be used to hold the distribution database.","A Subscriber(s)  is a server or database that receives data from the publisher  or other database. A subscription is the group of data that a server or database  will receive. This can be one or more publications. There are push and pull subscriptions. A push subscription is subscription when the publishing server will periodically push transactions out to the subscribing server or database. A pull subscription is subscription when the subscribing server will periodically connect to the distribution database and pull information.","In conventional transactional replication, replicated commands are typically applied through a single connection  at the subscriber, as shown in . While a single connection ensures the transactions will be applied at the subscriber in the exact order as the transactions occur on the publisher, there are performance losses with this method, especially when requests are from a heavily loaded publisher.","In addition, conventional replication technique utilizes triggers when an insert, update, or delete operation occurs, to keep track of changes made to published table. This adds additional overhead to Publisher  because of the triggers. Thus, there is a need for increasing the performance of transactional replication systems, while reducing overhead costs and ensuring that transactions are properly applied at the subscriber. The present invention provides such a solution.","The present invention advantageously overcomes the limitations of the prior art by utilizing multiple transactions queues in the distribution process when applying replication commands. In accordance with an aspect of the invention, there is provided a system for distributing replication commands. The system includes a distributor having a command queue that receives replication commands from a publisher. The distributor has multiple connections to communicate the replication commands to subscribers. A plurality of command buckets receive the commands from the distributor. Each of the command buckets communicates to the distributor via one of the multiple connections and receives only those replication commands with the same hash key The received replication commands each containing an identifier of an unique row.","In accordance with a feature of the system, the publisher decorates each of the replication commands with a hash of the primary key of the row of a table to be operated upon. The replication commands are sorted into a respective command bucket in accordance with the hash of the primary key.","In accordance with a further feature, the distributor marks each bucket ready for a commit, and the replication commands in each bucket are applied to the subscriber at substantially the same time. An executor of each bucket notifies the distributor that the commit has been completed such that the distributor resumes processing.","In accordance with another feature, a retry mechanism is employed to determine if each of the connections has successfully committed. If a connection has failed to commit, the retry mechanism restarts the commit process from an earliest failed point in accordance with a logical sequence number of the replication commands, and applies the replication commands having newer logical sequence numbers than a last logical sequence number of a replication command to successfully commit.","In accordance with another aspect of the invention, there is provided a method for distributing replication commands in a system having a subscriber, distributor and publisher. The method includes decorating replication commands at the publisher with a unique identifier of a row on which the replication commands are to be operated upon; forwarding the replication commands to the distributor; storing the replication commands in a command queue; and forwarding the replication commands to a plurality of command buckets, each of the plurality of command buckets having a connection to the distributor. Each command bucket receives replication commands to be applied to a unique row of a table of the subscribers in accordance with the unique identifier of the unique row.","Additional features and advantages of the invention will be made apparent from the following detailed description of illustrative embodiments that proceeds with reference to the accompanying drawings.",{"@attributes":{"id":"p-0018","num":"0017"},"figref":"FIG. 2"},"Although not required, the invention can be implemented via an application programming interface (API), for use by a developer, and\/or included within the network browsing software which will be described in the general context of computer-executable instructions, such as program modules, being executed by one or more computers, such as client workstations, servers, or other devices. Generally, program modules include routines, programs, objects, components, data structures and the like that perform particular tasks or implement particular abstract data types. Typically, the functionality of the program modules may be combined or distributed as desired in various embodiments. Moreover, those skilled in the art will appreciate that the invention may be practiced with other computer system configurations. Other well known computing systems, environments, and\/or configurations that may be suitable for use with the invention include, but are not limited to, personal computers (PCs), automated teller machines, server computers, hand-held or laptop devices, multi-processor systems, microprocessor-based systems, programmable consumer electronics, network PCs, minicomputers, mainframe computers, and the like. The invention may also be practiced in distributed computing environments where tasks are performed by remote processing devices that are linked through a communications network or other data transmission medium. In a distributed computing environment, program modules may be located in both local and remote computer storage media including memory storage devices.",{"@attributes":{"id":"p-0020","num":"0019"},"figref":"FIG. 2","b":["100","100","100","100"]},"With reference to , an exemplary system for implementing the invention includes a general purpose computing device in the form of a computer . Components of computer  may include, but are not limited to, a processing unit , a system memory , and a system bus  that couples various system components including the system memory to the processing unit . The system bus  may be any of several types of bus structures including a memory bus or memory controller, a peripheral bus, and a local bus using any of a variety of bus architectures. By way of example, and not limitation, such architectures include Industry Standard Architecture (ISA) bus, Micro Channel Architecture (MCA) bus, Enhanced ISA (EISA) bus, Video Electronics Standards Association (VESA) local bus, and Peripheral Component Interconnect (PCI) bus (also known as Mezzanine bus).","Computer  typically includes a variety of computer readable media. Computer readable media can be any available media that can be accessed by computer  and includes both volatile and nonvolatile media, removable and non-removable media. By way of example, and not limitation, computer readable media may comprise computer storage media and communication media. Computer storage media includes both volatile and nonvolatile, removable and non-removable media implemented in any method or technology for storage of information such as computer readable instructions, data structures, program modules or other data. Computer storage media includes, but is not limited to, RAM, ROM, EEPROM, flash memory or other memory technology, CDROM, digital versatile disks (DVD) or other optical disk storage, magnetic cassettes, magnetic tape, magnetic disk storage or other magnetic storage devices, or any other medium which can be used to store the desired information and which can be accessed by computer . Communication media typically embodies computer readable instructions, data structures, program modules or other data in a modulated data signal such as a carrier wave or other transport mechanism and includes any information delivery media. The term \u201cmodulated data signal\u201d means a signal that has one or more of its characteristics set or changed in such a manner as to encode information in the signal. By way of example, and not limitation, communication media includes wired media such as a wired network or direct-wired connection, and wireless media such as acoustic, RF, infrared, and other wireless media. Combinations of any of the above should also be included within the scope of computer readable media.","The system memory  includes computer storage media in the form of volatile and\/or nonvolatile memory such as read only memory (ROM)  and random access memory (RAM) . A basic input\/output system  (BIOS), containing the basic routines that help to transfer information between elements within computer , such as during start-up, is typically stored in ROM . RAM  typically contains data and\/or program modules that are immediately accessible to and\/or presently being operated on by processing unit . By way of example, and not limitation,  illustrates operating system , application programs , other program modules , and program data .","The computer  may also include other removable\/non-removable, volatile\/nonvolatile computer storage media. By way of example only,  illustrates a hard disk drive  that reads from or writes to non-removable, nonvolatile magnetic media, a magnetic disk drive  that reads from or writes to a removable, nonvolatile magnetic disk , and an optical disk drive  that reads from or writes to a removable, nonvolatile optical disk , such as a CD ROM or other optical media. Other removable\/non-removable, volatile\/nonvolatile computer storage media that can be used in the exemplary operating environment include, but are not limited to, magnetic tape cassettes, flash memory cards, digital versatile disks, digital video tape, solid state RAM, solid state ROM, and the like. The hard disk drive  is typically connected to the system bus  through a non-removable memory interface such as interface , and magnetic disk drive  and optical disk drive  are typically connected to the system bus  by a removable memory interface, such as interface .","The drives and their associated computer storage media discussed above and illustrated in  provide storage of computer readable instructions, data structures, program modules and other data for the computer . In , for example, hard disk drive  is illustrated as storing operating system , application programs , other program modules , and program data . Note that these components can either be the same as or different from operating system , application programs , other program modules , and program data . Operating system , application programs , other program modules , and program data  are given different numbers here to illustrate that, at a minimum, they are different copies. A user may enter commands and information into the computer  through input devices such as a keyboard  and pointing device , commonly referred to as a mouse, trackball or touch pad. Other input devices (not shown) may include a microphone, joystick, game pad, satellite dish, scanner, or the like. These and other input devices are often connected to the processing unit  through a user input interface  that is coupled to the system bus , but may be connected by other interface and bus structures, such as a parallel port, game port or a universal serial bus (USB).","A monitor  or other type of display device is also connected to the system bus  via an interface, such as a video interface . A graphics interface , such as Northbridge, may also be connected to the system bus . Northbridge is a chipset that communicates with the CPU, or host processing unit , and assumes responsibility for accelerated graphics port (AGP) communications. One or more graphics processing units (GPUs)  may communicate with graphics interface . In this regard, GPUs  generally include on-chip memory storage, such as register storage and GPUs  communicate with a video memory . GPUs , however, are but one example of a coprocessor and thus a variety of coprocessing devices may be included in computer . A monitor  or other type of display device is also connected to the system bus  via an interface, such as a video interface , which may in turn communicate with video memory . In addition to monitor , computers may also include other peripheral output devices such as speakers  and printer , which may be connected through an output peripheral interface .","The computer  may operate in a networked environment using logical connections to one or more remote computers, such as a remote computer . The remote computer  may be a personal computer, a server, a router, a network PC, a peer device or other common network node, and typically includes many or all of the elements described above relative to the computer , although only a memory storage device  has been illustrated in . The logical connections depicted in  include a local area network (LAN)  and a wide area network (WAN) , but may also include other networks. Such networking environments are commonplace in offices, enterprise-wide computer networks, intranets and the Internet.","When used in a LAN networking environment, the computer  is connected to the LAN  through a network interface or adapter . When used in a WAN networking environment, the computer  typically includes a modem  or other means for establishing communications over the WAN , such as the Internet. The modem , which may be internal or external, may be connected to the system bus  via the user input interface , or other appropriate mechanism. In a networked environment, program modules depicted relative to the computer , or portions thereof, may be stored in the remote memory storage device. By way of example, and not limitation,  illustrates remote application programs  as residing on memory device . It will be appreciated that the network connections shown are exemplary and other means of establishing a communications link between the computers may be used.","One of ordinary skill in the art can appreciate that a computer  or other client device can be deployed as part of a computer network. In this regard, the present invention pertains to any computer system having any number of memory or storage units, and any number of applications and processes occurring across any number of storage units or volumes. The present invention may apply to an environment with server computers and client computers deployed in a network environment, having remote or local storage. The present invention may also apply to a standalone computing device, having programming language functionality, interpretation and execution capabilities.","Exemplary Embodiments of the Transactional Replication of the Present Invention",{"@attributes":{"id":"p-0030","num":"0029"},"figref":"FIG. 3","b":["300","301","301"]},"The decorated commands are forwarded by the publisher  to a distributor  that stores the command in a command queue . The command queue  stores the commands for forwarding to subscribers, as described below. A dispatcher thread  reads and sorts the command queue  based on the primary key hashed with each command, and sends the commands for a single row via one of connections  to a unique bucket ,  or  associated with that particular row. The present invention is not limited to three connections  and three buckets, as any number of connections and buckets may be utilized. For example, all commands applied to row  are delivered to bucket  via its respective connection, row  to bucket  via its respective connection, etc. Hashing by the primary key at the publisher  ensures that each replicated command applies to a single row and that the commands for that data row are delivered to the appropriate bucket ,  or . Further, this ensures that the order of commands in the buckets ,  and  are maintained in the order as they originally occurred on publisher .","The multiple connections  perform a \u201ccoordinated commit\u201d in accordance with the present invention to ensure transactional consistency at the end of each successful batch as follows. The dispatcher thread  marks each the buckets , ,  as ready for commit and ceases sending additional commands to the command buckets. An executor thread running on each bucket is marked for commit upon receipt of the commit command and reads from its associated command bucket and applies changes to a subscriber. In accordance with the present invention, all executors to commit at substantially the same time to apply the commands to their respective rows. The dispatcher thread  waits for a event from the executors that signals the completion of the commit process so it can resume its normal processing.","The coordinated commit process advantageously avoids the communication and logging overhead associated with the two phase commit operation where a write and prepare step is necessary prior to the commit. While this feature is optimized for high performance distribution, it may comprise transactional consistency because there is no prepare and commit stage offered by the conventional two phase commit. As such, committed executors may not be rolled back if any executor fails to commit. To ensure consistency, the present invention implements a retry logic which handles mixture of successful and un-successful committed connections is contemplated herein. In accordance with the present invention, replicated commands in the serialized command queue  are sorted by a Logical Sequence Number (LSN) of commit record. Because the commands then are dispatched to multiple connections based on hash value of primary key, commands in the same transaction may arrive at the subscriber  via different connections .","If a particular connection fails to commit, the retry logic restarts from the earliest failed point, refetches the command queue , and identifies which commands have been applied successfully by the committed transaction and which commands need to be reapplied. To perform this feature, the present invention tracks the last committed LSN for all connections, restarts from the earliest committed command, and checks the LSN of each command against the last LSN committed in the connection (identified by the hash value). Only those command having LSNs newer than associated last LSN are reapplied. This approach advantageously ensures that at the end of a successful batch, a subscriber is at transactional consistent state.","Thus, as can now be recognized by one of ordinary skill in the art from the above description, distributing the commands among multiple connections serves to increase performance without compromising transactional consistency at the end subscriber.","While the present invention has been described in connection with the preferred embodiments of the various Figs., it is to be understood that other similar embodiments may be used or modifications and additions may be made to the described embodiment for performing the same function of the present invention without deviating therefrom. For example, one skilled in the art will recognize that the present invention as described in the present application may apply to any computing device or environment, whether wired or wireless, and may be applied to any number of such computing devices connected via a communications network, and interacting across the network. Furthermore, it should be emphasized that a variety of computer platforms, including handheld device operating systems and other application specific operating systems are contemplated, especially as the number of wireless networked devices continues to proliferate. Still further, the present invention may be implemented in or across a plurality of processing chips or devices, and storage may similarly be effected across a plurality of devices. Therefore, the present invention should not be limited to any single embodiment, but rather should be construed in breadth and scope in accordance with the appended claims."],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"BRIEF DESCRIPTION OF THE DRAWINGS","p":["The foregoing summary, as well as the following detailed description of preferred embodiments, is better understood when read in conjunction with the appended drawings. For the purpose of illustrating the invention, there is shown in the drawings exemplary constructions of the invention; however, the invention is not limited to the specific methods and instrumentalities disclosed. In the drawings:",{"@attributes":{"id":"p-0015","num":"0014"},"figref":"FIG. 1"},{"@attributes":{"id":"p-0016","num":"0015"},"figref":"FIG. 2"},{"@attributes":{"id":"p-0017","num":"0016"},"figref":"FIG. 3"}]},"DETDESC":[{},{}]}
