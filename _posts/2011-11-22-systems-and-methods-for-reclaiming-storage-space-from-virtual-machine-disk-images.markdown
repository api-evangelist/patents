---
title: Systems and methods for reclaiming storage space from virtual machine disk images
abstract: A computer-implemented method for reclaiming storage space from virtual machine disk images may include (1) identifying a virtual machine that uses a virtual machine disk image as a virtual disk for storage, the virtual machine disk image being stored on a thin-provisioned volume within a host file system, (2) determining that a portion of the virtual machine disk image represents a portion of the virtual disk that is unused by a file system of the virtual machine, (3) based on determining that the portion of the virtual machine disk image represents the portion of the virtual disk that is unused by the file system of the virtual machine, marking the portion of the virtual machine disk image for reclamation from the thin-provisioned volume, and (4) reclaiming the marked portion of the virtual machine disk image from the thin-provisioned volume. Various other methods, systems, and computer-readable media are also disclosed.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08881144&OS=08881144&RS=08881144
owner: Symantec Corporation
number: 08881144
owner_city: Mountain View
owner_country: US
publication_date: 20111122
---

{"@attributes":{"id":"description"},"BRFSUM":[{},{}],"heading":["BACKGROUND","SUMMARY","DETAILED DESCRIPTION OF EXEMPLARY EMBODIMENTS"],"p":["Organizations increasingly rely on virtualization technologies to improve the flexibility, efficiency, and stability of their data centers. One aspect of virtualization involves provisioning virtual machines with virtual disks for data storage. Virtual disks, like physical disks, may have unallocated space (e.g., unformatted disk regions) and\/or unused space (e.g., formatted but unused).","Due to the potentially large amounts of data required to store virtual disks, an organization may wish to maximize data storage performance while minimizing the cost of storage by using thin-provisioning solutions. In an effort to efficiently utilize available storage space, thin-provisioning solutions typically allocate storage space from a common pool to computing systems on an as-needed or just-in-time basis in an effort to prevent storage space from going to waste. Thin-provisioning solutions may also later reclaim previously allocated storage space when it is no longer in use and\/or required.","Unfortunately, virtual disk files may continue to consume storage space in host file systems even when virtual volumes no longer utilize all of the corresponding virtual disk space. Traditional thin-provisioning solutions may therefore fail to reclaim unused storage space at the virtualized level. Accordingly, the instant disclosure identifies a need for systems and methods for reclaiming storage space from virtual machine disk images.","As will be described in greater detail below, the instant disclosure generally relates to systems and methods for reclaiming storage space from virtual machine disk images by identifying portions of virtual machine disk images stored on thin-provisioned volumes that represent unused portions of virtual disks and reclaiming the unused portions of the virtual machine disk images. In one example, a computer-implemented method for reclaiming storage space from virtual machine disk images may include (1) identifying a virtual machine that uses a virtual machine disk image as a virtual disk for storage, the virtual machine disk image being stored on a thin-provisioned volume within a host file system, (2) determining that a portion of the virtual machine disk image represents a portion of the virtual disk that is unused by a file system of the virtual machine, (3) based on determining that the portion of the virtual machine disk image represents the portion of the virtual disk that is unused by the file system of the virtual machine, marking the portion of the virtual machine disk image for reclamation from the thin-provisioned volume, and (4) reclaiming the marked portion of the virtual machine disk image from the thin-provisioned volume.","Determining that the portion of the virtual machine disk image represents a portion of the virtual disk that is unused by the file system of the virtual machine may include any of a variety of steps. For example, determining that the portion of the virtual machine disk image represents the unused portion of the virtual disk may include querying a virtualization system that implements the virtual machine for information identifying at least one portion of the virtual disk that is used by the file system of the virtual machine. Additionally or alternatively, determining that the portion of the virtual machine disk image represents the unused portion of the virtual disk may include receiving a communication from an agent running within the virtual machine identifying the portion of the virtual disk as unused by the file system of the virtual machine. In some examples, determining that the portion of the virtual machine disk image represents the unused portion of the virtual disk may include parsing the virtual machine disk image to locate unused portions based on a format of the virtual machine disk image. In one embodiment, determining that the portion of the virtual machine disk image represents the unused portion of the virtual disk may be performed in response to identifying a reclamation request received by the host file system.","In some examples, the computer-implemented method may also include pausing the virtual machine before determining that the portion of the virtual machine disk image represents the portion of the virtual disk that is unused by the file system of the virtual machine and resuming the virtual machine after reclaiming the marked portion. Additionally or alternatively, the computer-implemented method may also include taking a snapshot of the virtual machine disk image before determining that the portion of the virtual machine disk image represents the portion of the virtual disk that is unused by the file system of the virtual machine.","In one example, the computer-implemented method may also include (1) identifying an additional portion of the virtual machine disk image that represents a portion of the virtual disk that was used by the file system of the virtual machine to store a file that was subsequently deleted, (2) based on determining that the additional portion is unused by the file system of the virtual machine, marking the additional portion of the virtual machine disk image for reclamation from the thin-provisioned volume, and (3) reclaiming the marked additional portion of the virtual machine disk image from the thin-provisioned volume.","In some examples, the computer-implemented method may also include (1) identifying an attempt to read from the marked portion of the virtual machine disk image and (2) fulfilling the attempt with null data based on the marked portion being marked.","In one embodiment, a system for implementing the above-described method may include (1) an identification module programmed to identify a virtual machine that uses a virtual machine disk image as a virtual disk for storage, the virtual machine disk image being stored on a thin-provisioned volume within a host file system, (2) a determination module programmed to determine that a portion of the virtual machine disk image represents a portion of the virtual disk that is unused by a file system of the virtual machine, (3) a marking module programmed to, based on determining that the portion of the virtual machine disk image represents the portion of the virtual disk that is unused by the file system of the virtual machine, mark the portion of the virtual machine disk image for reclamation from the thin-provisioned volume, and (4) a reclamation module programmed to reclaim the marked portion of the virtual machine disk image from the thin-provisioned volume. The system may also include at least one processor configured to execute the identification module, the determination module, the marking module, and the reclamation module.","In some examples, the above-described method may be encoded as computer-readable instructions on a computer-readable-storage medium. For example, a computer-readable-storage medium may include one or more computer-executable instructions that, when executed by at least one processor of a computing device, may cause the computing device to (1) identify a virtual machine that uses a virtual machine disk image as a virtual disk for storage, the virtual machine disk image being stored on a thin-provisioned volume within a host file system, (2) determine that a portion of the virtual machine disk image represents a portion of the virtual disk that is unused by a file system of the virtual machine, (3) based on determining that the portion of the virtual machine disk image represents the portion of the virtual disk that is unused by the file system of the virtual machine, mark the portion of the virtual machine disk image for reclamation from the thin-provisioned volume, and (4) reclaim the marked portion of the virtual machine disk image from the thin-provisioned volume.","As will be explained in greater detail below, by identifying portions of virtual machine disk images stored on thin-provisioned volumes that represent unused portions of virtual disks and reclaiming the unused portions of the virtual machine disk images, the systems and methods described herein may facilitate greater reclamation of storage space from thin-provisioned volumes storing virtual machine disk files. Additionally, in some examples these systems and methods may reclaim storage space used for virtual machine disk images without reclaiming the storage space from within the corresponding virtual machines.","Features from any of the above-mentioned embodiments may be used in combination with one another in accordance with the general principles described herein. These and other embodiments, features, and advantages will be more fully understood upon reading the following detailed description in conjunction with the accompanying drawings and claims.","Throughout the drawings, identical reference characters and descriptions indicate similar, but not necessarily identical, elements. While the exemplary embodiments described herein are susceptible to various modifications and alternative forms, specific embodiments have been shown by way of example in the drawings and will be described in detail herein. However, the exemplary embodiments described herein are not intended to be limited to the particular forms disclosed. Rather, the instant disclosure covers all modifications, equivalents, and alternatives falling within the scope of the appended claims.","The following will provide, with reference to , detailed descriptions of exemplary systems for reclaiming storage space from virtual machine disk images. Detailed descriptions of corresponding computer-implemented methods will also be provided in connection with . Detailed descriptions of an exemplary virtual disk will be provided in connection with . In addition, detailed descriptions of an exemplary computing system and network architecture capable of implementing one or more of the embodiments described herein will be provided in connection with , respectively.",{"@attributes":{"id":"p-0023","num":"0022"},"figref":"FIG. 1","b":["100","100","102","100","104","100","106","100","108"]},"In addition, and as will be described in greater detail below, exemplary system  may include a reclamation module  programmed to reclaim the marked portion of the virtual machine disk image from the thin-provisioned volume. Although illustrated as separate elements, one or more of modules  in  may represent portions of a single module or application.","In certain embodiments, one or more of modules  in  may represent one or more software applications or programs that, when executed by a computing device, may cause the computing device to perform one or more tasks. For example, and as will be described in greater detail below, one or more of modules  may represent software modules stored and configured to run on one or more computing devices, such as the devices illustrated in  (e.g., computing device  and\/or storage system ), computing system  in , and\/or portions of exemplary network architecture  in . One or more of modules  in  may also represent all or portions of one or more special-purpose computers configured to perform one or more tasks.","Exemplary system  in  may be implemented in a variety of ways. For example, all or a portion of exemplary system  may represent portions of exemplary system  in . As shown in , system  may include a computing device  hosting a virtual machine .","In one embodiment, one or more of modules  from  may, when executed by at least one processor of computing device , facilitate computing device  in reclaiming storage space from virtual machine disk images. For example, and as will be described in greater detail below, one or more of modules  may cause computing device  to (1) identify a virtual machine (e.g., virtual machine ) that uses a virtual machine disk image (e.g., a virtual machine disk image ) as a virtual disk for storage, the virtual machine disk image being stored on a thin-provisioned volume (e.g., a thin-provisioned volume ) within a host file system (e.g., a file system ), (2) determine that a portion of the virtual machine disk image represents a portion of the virtual disk that is unused by a file system of the virtual machine (e.g., determine that an unused space  within virtual machine disk image  represents a portion of the virtual disk that is unused by a file system of virtual machine ), (3) based on determining that the portion of the virtual machine disk image represents the portion of the virtual disk that is unused by the file system of the virtual machine, mark the portion of the virtual machine disk image for reclamation from the thin-provisioned volume (e.g., mark unused space  for reclamation from thin-provisioned volume ), and (4) reclaim the marked portion of the virtual machine disk image from the thin-provisioned volume (e.g., reclaim unused space  of virtual machine disk image  from thin-provisioned volume ).","Computing device  generally represents any type or form of computing device capable of reading computer-executable instructions. Examples of computing device  include, without limitation, servers, desktops, hypervisors, laptops, cellular phones, personal digital assistants (PDAs), multimedia players, embedded systems, combinations of one or more of the same, exemplary computing system  in , or any other suitable computing device.","Storage system  may represent portions of a single storage or computing device or a plurality of storage or computing devices. For example, storage system  may represent a portion of computing system  in  and\/or portions of exemplary network architecture  in . Alternatively, storage system  in  may represent one or more physically separate devices capable of being accessed by a computing device, such as computing system  in  and\/or portions of exemplary network architecture  in . In some examples, storage system  may represent a storage array supporting thin provisioning.",{"@attributes":{"id":"p-0030","num":"0029"},"figref":["FIG. 3","FIG. 3","FIG. 3","FIG. 1","FIG. 2","FIG. 5","FIG. 6"],"b":["300","100","200","510","600"]},"As illustrated in , at step  one or more of the systems described herein may identify a virtual machine that uses a virtual machine disk image as a virtual disk for storage, the virtual machine disk image being stored on a thin-provisioned volume within a host file system. For example, at step  identification module  may, as part of computing device  in , identify virtual machine  using virtual machine disk image  as a virtual disk. In this example, virtual machine disk image  may be stored on thin-provisioned volume  within file system .","As used herein, the phrase \u201cvirtual machine\u201d generally refers to a computing system platform that may not have direct correspondence to hardware of an underlying host machine. For example, hardware of a host system may be abstracted to a virtual machine using a hypervisor or other virtualization software. A virtual machine may run a guest operating system and\/or various other software applications.","As used herein, the phrase \u201cvirtual machine disk image\u201d may refer to any file and\/or image containing data stored for the use of a virtual machine. In some examples, the data as stored within the virtual machine disk image may reflect the raw contents and\/or structure of a virtual storage device. For example, the phrase \u201cvirtual machine disk image\u201d may refer to any data structure that may be interpreted by a virtual machine as a disk or other physical storage medium (e.g., a solid-state storage device), In one example, the phrase \u201cvirtual machine disk image\u201d may refer to a VMWARE VIRTUAL MACHINE DISK (\u201cVMDK\u201d).","As used herein, the phrase \u201cthin-provisioned volume\u201d may refer to a volume for which storage space is allocated on an as-needed and\/or just-in-time basis. Additionally or alternatively, the phrase \u201cthin-provisioned volume\u201d may refer to a volume that may represent more available storage space than is exclusively allocated for the volume. In some examples, the phrase \u201cthin-provisioned volume\u201d may refer to a volume using storage space allocated from a common storage pool (e.g., with other thin-provisioned volumes).","As used herein, the phrase \u201cfile system\u201d may refer to any system for organizing, managing, and\/or storing files. Accordingly, the phrase \u201chost file system\u201d may refer to a file system storing a virtual machine disk image which may be accessed as a virtual disk by a virtual file system.","Identification module  may identify the virtual machine in any suitable manner. For example, identification module  may read a configuration file and\/or receive a message identifying the virtual machine. Additionally or alternatively, identification module  may identify the virtual machine by identifying the virtual machine disk image. For example, identification module  may scan the host file system for virtual machine disk images in order to reclaim storage space from the virtual machine disk images.",{"@attributes":{"id":"p-0037","num":"0036"},"figref":["FIG. 4","FIG. 4","FIG. 4"],"b":["400","400","400","400","400","302","104","400"],"i":["a","b","a","b","a","a"]},"Returning to , at step  one or more of the systems described herein may determine that a portion of the virtual machine disk image represents a portion of the virtual disk that is unused by a file system of the virtual machine. For example, at step  determination module  may, as part of computing device  in , determine that unused space  within virtual machine disk image  represents a portion of the virtual disk that is unused by a file system of virtual machine .","As used herein, the term \u201cunused\u201d as applied to virtual disk space may refer to any space that is currently unneeded for storage and\/or could be safely reclaimed. For example, the term \u201cunused\u201d as applied to virtual disk space may refer to any space that is managed by, accessible to, and\/or under the control of a file system of a virtual machine but which is not currently used by the file system to store data.","Determination module  may determine that the portion of the virtual machine disk image represents the portion of the virtual disk that is unused by the file system of the virtual machine in any of a variety of ways. For example, determination module  may query a virtualization system that implements the virtual machine for information identifying at least one portion of the virtual disk that is used by the file system of the virtual machine. As used herein, the phrase \u201cvirtualization system\u201d may refer to any virtualization platform. For example, the phrase \u201cvirtualization system\u201d may refer to virtualization software, a hypervisor, and\/or a virtual machine manager. In some examples, determination module  may use an application programming interface (\u201cAPI\u201d) of the virtualization system to query the virtualization system. In one example, determination module  may query VMWARE ESX by using a \u201cQueryChangedDiskAreas\u201d method call with the parameter \u201c*\u201d. Determination module  may then receive a list of all blocks of the virtual disk that are in use. Determination module  may then invert the list of used blocks to derive a list of unused blocks and translate the list of unused blocks within the virtual disk into a list of corresponding blocks in the virtual machine disk image. In some examples, determination module  may identify the disk capacity of the virtual disk as a part of determining which blocks within the virtual disk represent unused blocks within the virtual machine disk image.","In some examples, determination module  may determine that the portion of the virtual machine disk image represents the portion of the virtual disk that is unused by the file system of the virtual machine by receiving a communication from an agent running within the virtual machine identifying the portion of the virtual disk as unused by the file system of the virtual machine. For example, determination module  may inject the agent into the virtual machine. Additionally or alternatively, determination module  may operate as a part of the agent within the virtual machine. The agent may communicate with the file system within the virtual machine (the \u201cguest file system\u201d) to gather information regarding unused virtual disk space. For example, the agent may identify virtual disk space that is not allocated to any volume within the guest file system. Additionally or alternatively, the agent may identify virtual disk space that is allocated to a volume but which is not in use for storing data. In some examples, the agent may identify virtual disk space that stores data of deleted files within the guest file system.","In some examples, determination module  may determine that the portion of the virtual machine disk image represents the portion of the virtual disk that is unused by the file system of the virtual machine by parsing the virtual machine disk image to locate unused portions based on a format of the virtual machine disk image. For example, determination module  may parse the virtual machine disk image for metadata structures (e.g., partition maps, inode tables, inodes, etc.). Determination module  may then analyze and\/or crawl through the metadata structures to determine which portions of the virtual machine disk image are unused by a guest file system within the virtual machine.","Determination module  may also perform one or more additional steps to prepare the virtual machine disk image for analysis (e.g., in order to ensure a consistent view of the virtual machine disk image and\/or to ensure safe reclamation of space from the virtual machine disk image). For example, determination module  may pause the virtual machine before determining that the portion of the virtual machine disk image represents the portion of the virtual disk that is unused by the file system of the virtual machine. Determination module  may pause the virtual machine in any suitable manner. For example, determination module  may issue a pause command via an API to a virtualization system hosting the virtual machine. As will be explained in greater detail below, one or more of the systems described herein may resume the virtual machine after reclaiming the unused portion of the virtual machine disk image is reclaimed.","In some examples, determination module  may take a snapshot of the virtual machine disk image before determining that the portion of the virtual machine disk image represents the portion of the virtual disk that is unused by the file system of the virtual machine. Determination module  may thereby create a point-in-time view of the virtual machine disk image on which to operate. As used herein, the term \u201csnapshot\u201d may refer to any representation of a volume and\/or a portion of a volume in a certain state and\/or point in time. In some examples, a \u201csnapshot\u201d may refer to a space-saving snapshot (e.g., a snapshot that references a primary volume for unchanged data) and\/or a copy-on-write snapshot (e.g., a snapshot that copies protected data as it existed at the time of the snapshot before overwriting the protected data in order to preserve a point-in-time copy of the data). In some examples, the snapshot may include a block-level snapshot (e.g., copying and\/or preserving changed blocks).","In some examples, determination module  may lock the virtual machine disk image from writes before determining that the portion of the virtual machine disk image represents the portion of the virtual disk that is unused by the file system of the virtual machine.","Determination module  may perform step  in any of a variety of contexts. For example, determination module  may determine that the portion of the virtual machine disk image represents the portion of the virtual disk that is unused by the file system of the virtual machine in response to identifying a reclamation request received by the host file system. For example, determination module  may operate as a part of the host file system and\/or receive a message from the host file system and\/or intended for the host file system requesting and\/or instructing the reclamation of storage space from one or more volumes accessed by the host file system. Additionally or alternatively, determination module  may monitor virtual machine disk images on the host file system for changes and identify potential reclamation opportunities by analyzing these changes.","In some examples, determination module  may also identify an additional portion of the virtual machine disk image that represents a portion of the virtual disk that was used by the file system of the virtual machine to store a file that was subsequently deleted. For example, the portion of the virtual disk may store the contents of the deleted file even though the file has been marked as deleted within the guest file system. In this example, as will be described in greater detail below, while the portion of the virtual disk may still store the contents of the deleted file, determination module  may identify the additional portion of the virtual machine disk image so that one or more of the systems and methods described herein may reclaim it.","Using  as an example, determination module  may determine that a portion of virtual machine disk image () represents a portion of a virtual disk that is unused by a file system. For example, determination module  may generate block map () of virtual machine disk image () (e.g., based on API calls to a virtualization system, receiving information from an agent running within a virtual machine, parsing virtual machine disk image (), etc.). Accordingly, determination module  may determine that a block  of virtual machine disk image () is used by a guest file system and therefore not available for reclamation. Determination module  may also determine that a block  is allocated but unused by a guest file system and therefore determine that block  is available for reclamation. Determination module  may also determine that a block  is unallocated by a guest file system and therefore determine that block  is available for reclamation.","Returning to , at step  one or more of the systems described herein may, based on determining that the portion of the virtual machine disk image represents the portion of the virtual disk that is unused by the file system of the virtual machine, mark the portion of the virtual machine disk image for reclamation from the thin-provisioned volume. For example, at step  marking module  may, as part of computing device  in , based on determining that unused space  within virtual machine disk image  represents a portion of the virtual disk that is unused by a file system of virtual machine , mark unused space  for reclamation from thin-provisioned volume .","Marking module  may mark the portion of the virtual machine disk image for reclamation in any suitable manner. For example, marking module  may mark the portion of the virtual machine disk image as a hole (or \u201cpunch a hole\u201d) within the virtual machine disk image within the host file system. For example, marking module  may communicate with the host file system to reassign the portion of the virtual machine disk image as a hole. The host file system may then alter an inode corresponding to the portion of the virtual machine disk image (e.g., by storing a reserved value indicating a hole within the inode pointer data structure instead of an address pointing to one or more data blocks). Additionally or alternatively, marking module  may mark the portion of the virtual machine disk image for reclamation by marking one or more blocks and\/or extents corresponding to the portion of the virtual machine disk image with an attribute indicating that the block and\/or extent is reclaimable. In some examples, marking module  may mark the portion of the virtual machine disk image for reclamation by adding the portion of the virtual machine disk image to a list of blocks and\/or extents within the host file system to be reclaimed.","As mentioned earlier, in some examples, one or more of the systems described herein may identify an additional portion of the virtual machine disk image that represents a portion of the virtual disk that was used by the file system of the virtual machine to store a file that was subsequently deleted. In these examples, marking module  may, based on determining that the additional portion is unused by the file system of the virtual machine (e.g., because the additional portion only represents a deleted file), mark the additional portion of the virtual machine disk image for reclamation from the thin-provisioned volume.","Returning to , at step  one or more of the systems described herein may reclaim the marked portion of the virtual machine disk image from the thin-provisioned volume. For example, at step  reclamation module  may, as part of computing device  in , reclaim unused space  of virtual machine disk image  from thin-provisioned volume .","Reclamation module  may reclaim the marked portion of the virtual machine disk image in any suitable manner. For example, reclamation module  may send a message to a thin-provisioning system and\/or device (e.g., a thin-provisioning-capable storage array) identifying the marked portion as available and\/or reclaimed. Accordingly, the underlying storage space previously used to store the marked portion of the virtual machine disk image may no longer be allocated to the thin-provisioned volume.","In some examples, subsequent attempts to read from the marked portions may be fulfilled with null data. For example, one or more of the systems described herein may identify an attempt to read from the marked portion of the virtual machine disk image. These systems may then fulfill the attempt with null data based on the marked portion being marked (e.g., as a hole within the virtual machine disk image). In this manner, a read attempt performed on the virtual disk by the virtual machine, which may result in a read attempt performed on the virtual machine disk image within the host file system, may return null data to the requesting application within the virtual machine. Because the corresponding space within the virtual disk is unused and\/or unallocated, returning null data may match with an expected result on the virtual machine. As used herein, the phrase \u201cnull data\u201d may refer to any data which may be received in response to a request to read from an unused and\/or unallocated portion of a disk (e.g., a string of zeroes).","In some examples, subsequent attempts to write to the marked portions may be fulfilled by first reallocating space for the write attempts. For example, one or more of the systems described herein (e.g., the host file system) may identify an attempt to write to the marked portion of the virtual machine disk image. These systems may then allocate space for the marked portion to the thin-provisioned volume before allowing the write attempt.","As mentioned earlier, in some examples one or more of the systems described herein may pause the virtual machine before determining that the portion of the virtual machine disk image represents the portion of the virtual disk that is unused by the file system of the virtual machine. In these examples, reclamation module  may resume the virtual machine after reclaiming the marked portion (e.g., allowing the virtual machine to resume after assuring a consistent view of the virtual machine disk image during analysis and reclamation).","As mentioned earlier, in some examples, one or more of the systems described herein may identify an additional portion of the virtual machine disk image that represents a portion of the virtual disk that was used by the file system of the virtual machine to store a file that was subsequently deleted and, based on determining that the additional portion is unused by the file system of the virtual machine (e.g., because the additional portion only represents a deleted file), mark the additional portion of the virtual machine disk image for reclamation from the thin-provisioned volume. In these examples, reclamation module  may also reclaim the marked additional portion of the virtual machine disk image from the thin-provisioned volume.","As explained above, by identifying portions of virtual machine disk images stored on thin-provisioned volumes that represent unused portions of virtual disks and reclaiming the unused portions of the virtual machine disk images, the systems and methods described herein may facilitate greater reclamation of storage space from thin-provisioned volumes storing virtual machine disk files. Additionally, in some examples these systems and methods may reclaim storage space used for virtual machine disk images without reclaiming the storage space from within the corresponding virtual machines.",{"@attributes":{"id":"p-0059","num":"0058"},"figref":"FIG. 5","b":["510","510","510"]},"Computing system  broadly represents any single or multi-processor computing device or system capable of executing computer-readable instructions. Examples of computing system  include, without limitation, workstations, laptops, client-side terminals, servers, distributed computing systems, handheld devices, or any other computing system or device. In its most basic configuration, computing system  may include at least one processor  and a system memory .","Processor  generally represents any type or form of processing unit capable of processing data or interpreting and executing instructions. In certain embodiments, processor  may receive instructions from a software application or module. These instructions may cause processor  to perform the functions of one or more of the exemplary embodiments described and\/or illustrated herein.","System memory  generally represents any type or form of volatile or non-volatile storage device or medium capable of storing data and\/or other computer-readable instructions. Examples of system memory  include, without limitation, random access memory (RAM), read only memory (ROM), flash memory, or any other suitable memory device. Although not required, in certain embodiments computing system  may include both a volatile memory unit (such as, for example, system memory ) and a non-volatile storage device (such as, for example, primary storage device , as described in detail below). In one example, one or more of modules  from  may be loaded into system memory .","In certain embodiments, exemplary computing system  may also include one or more components or elements in addition to processor  and system memory . For example, as illustrated in , computing system  may include a memory controller , an Input\/Output (I\/O) controller , and a communication interface , each of which may be interconnected via a communication infrastructure . Communication infrastructure  generally represents any type or form of infrastructure capable of facilitating communication between one or more components of a computing device. Examples of communication infrastructure  include, without limitation, a communication bus (such as an ISA, PCI, PCIe, or similar bus) and a network.","Memory controller  generally represents any type or form of device capable of handling memory or data or controlling communication between one or more components of computing system . For example, in certain embodiments memory controller  may control communication between processor , system memory , and I\/O controller  via communication infrastructure .","I\/O controller  generally represents any type or form of module capable of coordinating and\/or controlling the input and output functions of a computing device. For example, in certain embodiments I\/O controller  may control or facilitate transfer of data between one or more elements of computing system , such as processor , system memory , communication interface , display adapter , input interface , and storage interface .","Communication interface  broadly represents any type or form of communication device or adapter capable of facilitating communication between exemplary computing system  and one or more additional devices. For example, in certain embodiments communication interface  may facilitate communication between computing system  and a private or public network including additional computing systems. Examples of communication interface  include, without limitation, a wired network interface (such as a network interface card), a wireless network interface (such as a wireless network interface card), a modem, and any other suitable interface. In at least one embodiment, communication interface  may provide a direct connection to a remote server via a direct link to a network, such as the Internet. Communication interface  may also indirectly provide such a connection through, for example, a local area network (such as an Ethernet network), a personal area network, a telephone or cable network, a cellular telephone connection, a satellite data connection, or any other suitable connection.","In certain embodiments, communication interface  may also represent a host adapter configured to facilitate communication between computing system  and one or more additional network or storage devices via an external bus or communications channel. Examples of host adapters include, without limitation, SCSI host adapters, USB host adapters, IEEE 1394 host adapters, SATA and eSATA host adapters, ATA and PATA host adapters, Fibre Channel interface adapters, Ethernet adapters, or the like. Communication interface  may also allow computing system  to engage in distributed or remote computing. For example, communication interface  may receive instructions from a remote device or send instructions to a remote device for execution.","As illustrated in , computing system  may also include at least one display device  coupled to communication infrastructure  via a display adapter . Display device  generally represents any type or form of device capable of visually displaying information forwarded by display adapter . Similarly, display adapter  generally represents any type or form of device configured to forward graphics, text, and other data from communication infrastructure  (or from a frame buffer, as known in the art) for display on display device .","As illustrated in , exemplary computing system  may also include at least one input device  coupled to communication infrastructure  via an input interface . Input device  generally represents any type or form of input device capable of providing input, either computer or human generated, to exemplary computing system . Examples of input device  include, without limitation, a keyboard, a pointing device, a speech recognition device, or any other input device.","As illustrated in , exemplary computing system  may also include a primary storage device  and a backup storage device  coupled to communication infrastructure  via a storage interface . Storage devices  and  generally represent any type or form of storage device or medium capable of storing data and\/or other computer-readable instructions. For example, storage devices  and  may be a magnetic disk drive (e.g., a so-called hard drive), a solid state drive, a floppy disk drive, a magnetic tape drive, an optical disk drive, a flash drive, or the like. Storage interface  generally represents any type or form of interface or device for transferring data between storage devices  and  and other components of computing system .","In certain embodiments, storage devices  and  may be configured to read from and\/or write to a removable storage unit configured to store computer software, data, or other computer-readable information. Examples of suitable removable storage units include, without limitation, a floppy disk, a magnetic tape, an optical disk, a flash memory device, or the like. Storage devices  and  may also include other similar structures or devices for allowing computer software, data, or other computer-readable instructions to be loaded into computing system . For example, storage devices  and  may be configured to read and write software, data, or other computer-readable information. Storage devices  and  may also be a part of computing system  or may be a separate device accessed through other interface systems.","Many other devices or subsystems may be connected to computing system . Conversely, all of the components and devices illustrated in  need not be present to practice the embodiments described and\/or illustrated herein. The devices and subsystems referenced above may also be interconnected in different ways from that shown in . Computing system  may also employ any number of software, firmware, and\/or hardware configurations. For example, one or more of the exemplary embodiments disclosed herein may be encoded as a computer program (also referred to as computer software, software applications, computer-readable instructions, or computer control logic) on a computer-readable-storage medium. The phrase \u201ccomputer-readable-storage medium\u201d generally refers to any form of device, carrier, or medium capable of storing or carrying computer-readable instructions. Examples of computer-readable-storage media include, without limitation, transmission-type media, such as carrier waves, and physical media, such as magnetic-storage media (e.g., hard disk drives and floppy disks), optical-storage media (e.g., CD- or DVD-ROMs), electronic-storage media (e.g., solid-state drives and flash media), and other distribution systems.","The computer-readable-storage medium containing the computer program may be loaded into computing system . All or a portion of the computer program stored on the computer-readable-storage medium may then be stored in system memory  and\/or various portions of storage devices  and . When executed by processor , a computer program loaded into computing system  may cause processor  to perform and\/or be a means for performing the functions of one or more of the exemplary embodiments described and\/or illustrated herein. Additionally or alternatively, one or more of the exemplary embodiments described and\/or illustrated herein may be implemented in firmware and\/or hardware. For example, computing system  may be configured as an application specific integrated circuit (ASIC) adapted to implement one or more of the exemplary embodiments disclosed herein.",{"@attributes":{"id":"p-0074","num":"0073"},"figref":"FIG. 6","b":["600","610","620","630","640","645","650","600","600"]},"Client systems , , and  generally represent any type or form of computing device or system, such as exemplary computing system  in . Similarly, servers  and  generally represent computing devices or systems, such as application servers or database servers, configured to provide various database services and\/or run certain software applications. Network  generally represents any telecommunication or computer network including, for example, an intranet, a wide area network (WAN), a local area network (LAN), a personal area network (PAN), or the Internet. In one example, client systems , , and\/or  and\/or servers  and\/or  may include all or a portion of system  from .","As illustrated in , one or more storage devices ()-(N) may be directly attached to server . Similarly, one or more storage devices ()-(N) may be directly attached to server . Storage devices ()-(N) and storage devices ()-(N) generally represent any type or form of storage device or medium capable of storing data and\/or other computer-readable instructions. In certain embodiments, storage devices ()-(N) and storage devices ()-(N) may represent network-attached storage (NAS) devices configured to communicate with servers  and  using various protocols, such as NFS, SMB, or CIFS.","Servers  and  may also be connected to a storage area network (SAN) fabric . SAN fabric  generally represents any type or form of computer network or architecture capable of facilitating communication between a plurality of storage devices. SAN fabric  may facilitate communication between servers  and  and a plurality of storage devices ()-(N) and\/or an intelligent storage array . SAN fabric  may also facilitate, via network  and servers  and , communication between client systems , , and  and storage devices ()-(N) and\/or intelligent storage array  in such a manner that devices ()-(N) and array  appear as locally attached devices to client systems , , and . As with storage devices ()-(N) and storage devices ()-(N), storage devices ()-(N) and intelligent storage array  generally represent any type or form of storage device or medium capable of storing data and\/or other computer-readable instructions.","In certain embodiments, and with reference to exemplary computing system  of , a communication interface, such as communication interface  in , may be used to provide connectivity between each client system , , and  and network . Client systems , , and  may be able to access information on server  or  using, for example, a web browser or other client software. Such software may allow client systems , , and  to access data hosted by server , server , storage devices ()-(N), storage devices ()-(N), storage devices ()-(N), or intelligent storage array . Although  depicts the use of a network (such as the Internet) for exchanging data, the embodiments described and\/or illustrated herein are not limited to the Internet or any particular network-based environment.","In at least one embodiment, all or a portion of one or more of the exemplary embodiments disclosed herein may be encoded as a computer program and loaded onto and executed by server , server , storage devices ()-(N), storage devices ()-(N), storage devices ()-(N), intelligent storage array , or any combination thereof. All or a portion of one or more of the exemplary embodiments disclosed herein may also be encoded as a computer program, stored in server , run by server , and distributed to client systems , , and  over network .","As detailed above, computing system  and\/or one or more components of network architecture  may perform and\/or be a means for performing, either alone or in combination with other elements, one or more steps of an exemplary method for reclaiming storage space from virtual machine disk images.","While the foregoing disclosure sets forth various embodiments using specific block diagrams, flowcharts, and examples, each block diagram component, flowchart step, operation, and\/or component described and\/or illustrated herein may be implemented, individually and\/or collectively, using a wide range of hardware, software, or firmware (or any combination thereof) configurations. In addition, any disclosure of components contained within other components should be considered exemplary in nature since many other architectures can be implemented to achieve the same functionality.","In some examples, all or a portion of exemplary system  in  may represent portions of a cloud-computing or network-based environment. Cloud-computing environments may provide various services and applications via the Internet. These cloud-based services (e.g., software as a service, platform as a service, infrastructure as a service, etc.) may be accessible through a web browser or other remote interface. Various functions described herein may be provided through a remote desktop environment or any other cloud-based computing environment.","The process parameters and sequence of steps described and\/or illustrated herein are given by way of example only and can be varied as desired. For example, while the steps illustrated and\/or described herein may be shown or discussed in a particular order, these steps do not necessarily need to be performed in the order illustrated or discussed. The various exemplary methods described and\/or illustrated herein may also omit one or more of the steps described or illustrated herein or include additional steps in addition to those disclosed.","While various embodiments have been described and\/or illustrated herein in the context of fully functional computing systems, one or more of these exemplary embodiments may be distributed as a program product in a variety of forms, regardless of the particular type of computer-readable-storage media used to actually carry out the distribution. The embodiments disclosed herein may also be implemented using software modules that perform certain tasks. These software modules may include script, batch, or other executable files that may be stored on a computer-readable storage medium or in a computing system. In some embodiments, these software modules may configure a computing system to perform one or more of the exemplary embodiments disclosed herein.","In addition, one or more of the modules described herein may transform data, physical devices, and\/or representations of physical devices from one form to another. For example, one or more of the modules recited herein may transform a computing system into a system for reclaiming storage space from virtual machine disk images. As another example, one or more of the modules recited herein may transform a virtual machine disk image into a sparse virtual machine disk image. As an additional example, one or more of the modules recited herein may transform a storage device into a storage device for efficiently allocating storage space for virtual machine disk images.","The preceding description has been provided to enable others skilled in the art to best utilize various aspects of the exemplary embodiments disclosed herein. This exemplary description is not intended to be exhaustive or to be limited to any precise form disclosed. Many modifications and variations are possible without departing from the spirit and scope of the instant disclosure. The embodiments disclosed herein should be considered in all respects illustrative and not restrictive. Reference should be made to the appended claims and their equivalents in determining the scope of the instant disclosure.","Unless otherwise noted, the terms \u201ca\u201d or \u201can,\u201d as used in the specification and claims, are to be construed as meaning \u201cat least one of.\u201d In addition, for ease of use, the words \u201cincluding\u201d and \u201chaving,\u201d as used in the specification and claims, are interchangeable with and have the same meaning as the word \u201ccomprising.\u201d"],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"BRIEF DESCRIPTION OF THE DRAWINGS","p":["The accompanying drawings illustrate a number of exemplary embodiments and are a part of the specification. Together with the following description, these drawings demonstrate and explain various principles of the instant disclosure.",{"@attributes":{"id":"p-0015","num":"0014"},"figref":"FIG. 1"},{"@attributes":{"id":"p-0016","num":"0015"},"figref":"FIG. 2"},{"@attributes":{"id":"p-0017","num":"0016"},"figref":"FIG. 3"},{"@attributes":{"id":"p-0018","num":"0017"},"figref":"FIG. 4"},{"@attributes":{"id":"p-0019","num":"0018"},"figref":"FIG. 5"},{"@attributes":{"id":"p-0020","num":"0019"},"figref":"FIG. 6"}]},"DETDESC":[{},{}]}
