---
title: System and method for input/output scheduling
abstract: A system and method for Input/Output scheduling are described herein. In one embodiment, the method includes installing a plurality of Input/Output (I/O) schedulers to schedule I/O requests for a plurality of I/O devices, wherein each of the I/O schedulers schedules I/O requests according to a different scheduling method. The method also includes scheduling one of the I/O requests with at least one of the plurality of I/O schedulers. The method also includes determining that a second I/O scheduler replaces an I/O scheduler of the plurality of I/O schedulers, installing the second I/O scheduler, and scheduling one of the I/O requests with the second scheduler.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=07457886&OS=07457886&RS=07457886
owner: Apple Inc.
number: 07457886
owner_city: Cupertino
owner_country: US
publication_date: 20040615
---

{"@attributes":{"id":"description"},"RELAPP":[{},{}],"heading":["CROSS-REFERENCE TO RELATED APPLICATION","FIELD","BACKGROUND","SUMMARY","DESCRIPTION OF THE EMBODIMENTS","System-Level Overview","Methods of the Invention","Example Implementation","Hardware and Operating Environment"],"p":["This application is a continuation of U.S. patent application Ser. No. 10\/770,856, filed Feb. 3, 2004, now abandoned which application is incorporated herein by reference.","This invention relates generally to the field of computer operating systems and more particularly Input\/Output scheduling.","Operating systems typically schedule Input\/Output (I\/O) requests based on scheduling algorithms, which are carried out by I\/O schedulers. According to one prior-art I\/O scheduling technique, a single I\/O scheduler schedules all I\/O requests occurring within an operating system environment. For example, a single I\/O scheduler schedules disk requests, printer requests, etc. One disadvantage of such an I\/O scheduling technique is that a single scheduler is not typically suited for all I\/O devices. For example, using a FIFO scheduler for scheduling both printer requests and disk requests may provide mixed results. That is, the FIFO scheduler may perform well for the printer requests, as printer requests are often expected to be scheduled on a first-come first-served basis. However, FIFO may not perform well vis-\u00e0-vis the disk requests, as disk requests can typically be scheduled with shorter turn-around times when the I\/O scheduling algorithm considers the physical and logical properties of the disk. Thus, a single scheduler may not provide good performance for multiple I\/O devices.","Another prior art technique calls for configuring multiple I\/O schedulers when an operating system is compiled. Typically, before an operating system can be executed on a computer, the operating system source code must be compiled into executable machine code. During this compilation process, the operating system is configured to employ certain I\/O schedulers for scheduling I\/O on the target computer. For example, at compile time, an operating system is configured to use a FIFO scheduler for printer requests and a SCAN scheduler for disk requests. One disadvantage of this prior art technique is that every time the I\/O scheduler is reconfigured, certain operating system components must be recompiled. Moreover, the I\/O schedulers cannot be reconfigured to respond to changing I\/O demands while the operating system is executing. For example, the operating system could not shift from a SCAN scheduler to an Earliest Deadline First scheduler in response to launching an application that requires real-time disk-scheduling.","According to embodiments of the invention, an Input\/Output (I\/O) scheduling system includes an operating system, which is adapted to install a set of I\/O schedulers at boot-up. After boot-up, during typical operation, the operating system receives I\/O scheduler requests from application and\/or control programs. In response to the I\/O scheduler requests, the operating system can dynamically replace (i.e. replace without rebooting) installed I\/O schedulers with requested I\/O schedulers.","A system and method for Input\/Output scheduling are described herein. In the following description, numerous specific details are set forth. The following description and the drawing figures illustrate aspects and embodiments of the invention sufficiently to enable those skilled in the art. Other embodiments may incorporate structural, logical, electrical, process, and other changes; e.g., functions described as software may be performed in hardware and vice versa. Examples merely typify possible variations, and are not limiting. Individual components and functions are optional unless explicitly required, and the sequence of operations may vary or run in parallel. Portions and features of some embodiments may be included in, substituted for, and\/or added to those of others. The scope of the invention encompasses the full ambit of the claims and all available equivalents.","This description of the embodiments is divided into four sections. In the first section, a system-level overview is presented. In the second section, methods for using example embodiments are described. In the third section, an example implementation is described. In the fourth section, a hardware and operating environment is described.","This section provides a system level overview of example embodiments of the invention.",{"@attributes":{"id":"p-0022","num":"0021"},"figref":"FIG. 1","b":["100","102","104","106","112","104","106","108","102","108","112","110","112"]},"One advantage of certain embodiments is that the I\/O scheduling policy manager  can, in response to changing I\/O demands, dynamically replace any installed I\/O scheduler with another of the I\/O schedulers . As a result, the operating system  can tailor its I\/O scheduling capabilities to accommodate a vast range of operating conditions. For example, when a real-time application is launched, the real-time application can request that the I\/O scheduling policy manager  install a real-time I\/O scheduler. In response to this request, the I\/O scheduling policy manager  installs a real-time I\/O scheduler (e.g., an earliest deadline first I\/O scheduler) to meet the real-time application's I\/O scheduling needs. When the real-time application terminates, the I\/O scheduling policy manager  can replace the real-time scheduler with a non-real-time scheduler.","As another example, the I\/O scheduling policy manager  can install different I\/O schedulers based on I\/O performance statistics collected by the operating system .","For example, if the operating system  indicates that print request turn-around times are extremely slow for an installed FIFO I\/O scheduler, the I\/O scheduling policy manager  can dynamically replace the FIFO I\/O scheduler with a round robin I\/O scheduler.","This section describes methods performed by embodiments of the invention. In certain embodiments, the methods are performed by machine-readable media (e.g., software), while in other embodiments, the methods are performed by hardware or other logic (e.g., digital logic). In this section,  will be discussed. In particular,  describes operations performed by an operating system for dynamically replacing an I\/O scheduler, while  describes operations performed by an application program for requesting a particular I\/O scheduler to accommodate its I\/O scheduling needs.  describes operations for installing a newly selected I\/O scheduler.",{"@attributes":{"id":"p-0027","num":"0026"},"figref":"FIG. 2","b":["104","102","200","202","204","206","208","210","210"]},{"@attributes":{"id":"p-0028","num":"0027"},"figref":"FIG. 3","b":["104","300","302"]},"At block , an application program is initialized (e.g., the application program is launched by a user). At block , the application program transmits an I\/O scheduler selection to an operating system. At block , the application program transmits I\/O requests to the operating system.","While  describes operations for selecting an I\/O scheduler,  describes operations for installing the newly selected I\/O scheduler.",{"@attributes":{"id":"p-0031","num":"0030"},"figref":"FIG. 4","b":["402","404","406","408","410"]},"This section describes an example implementation of an I\/O system. In this section,  will be presented.  describes an example system architecture, while  describe the operations performed by each component of the system architecture.","In particular,  describes more detailed operations for installing a set of initial I\/O schedulers and replacing one of those initial I\/O schedulers.  describe more detailed operations for installing an I\/O scheduler, while  describes operations performed by an application program for requesting that the operating system install a particular I\/O scheduler.  describes operations performed by a control program, which collects I\/O statistics and requests a new I\/O scheduler based on a statistical analysis.",{"@attributes":{"id":"p-0034","num":"0033"},"figref":"FIG. 5","b":["500","502","502"]},"In , application programs  are connected to an I\/O scheduling dispatch unit . The I\/O scheduling dispatch unit  is connected to I\/O schedulers A-C. The I\/O schedulers A-C can include I\/O schedulers that schedule I\/O requests using a first-in first-out I\/O scheduling method, a last-in first-out I\/O scheduling method, variations of the SCAN disk-scheduling method, etc. The I\/O schedulers A-C can also include I\/O schedulers that schedule I\/O requests using real-time I\/O scheduling methods such as earliest deadline first, least laxity, etc.","The I\/O scheduling dispatch unit  is also connected to an I\/O scheduling policy manager  and I\/O devices A and B. The I\/O devices A-B can include any suitable I\/O device such as a disk drive, printer, video controller card, keyboard, memory unit, etc.","The I\/O scheduling policy manager  is connected to a control program . The control program  can be software or hardware that monitors I\/O performance and tracks I\/O statistics. According to one embodiment, the control program  is part of the operating system , while in another embodiment, the control program  is not part of the operating system  (e.g., the control program communicates with the operating system through an application programming interface). In one embodiment, the control program  tracks the number of I\/O requests processed by each of the I\/O devices A-B, the turnaround time for processing I\/O requests, the throughput of each of the I\/O schedulers A-C, and other information relevant to optimizing the I\/O system .","Any of the components used in conjunction with embodiments of the invention can include machine-readable media including instructions for performing operations described herein. Machine-readable media includes any mechanism that provides (i.e., stores and\/or transmits) information in a form readable by a machine (e.g., a computer). For example, a machine-readable medium includes read only memory (ROM), random access memory (RAM), magnetic disk storage media, optical storage media, flash memory devices, electrical, optical, acoustical or other forms of propagated signals (e.g., carrier waves, infrared signals, digital signals, etc.), etc. According to embodiments of the invention, the functional units can be other types of logic (e.g., digital logic) for executing the operations for I\/O scheduling described herein.","While  describes an example system architecture,  will described the functionality of each of the system components.",{"@attributes":{"id":"p-0040","num":"0039"},"figref":["FIG. 6","FIG. 6","FIG. 5"]},"At block , the I\/O scheduling policy manager  installs an initial set of I\/O schedulers to schedule I\/O requests for service by the I\/O devices A-B. More detailed operations for installing an I\/O scheduler are described in greater detail below, with reference to . The I\/O scheduling policy manager  can install one I\/O scheduler to schedule I\/O requests for service by one I\/O device. Alternatively, the I\/O scheduling policy manager  can install an I\/O scheduler to schedule I\/O requests for service by multiple I\/O devices. For example, the I\/O scheduling policy manager  can install a FIFO I\/O scheduler to schedule I\/O requests for both a printer and a fax machine. In one embodiment, all of the installed I\/O schedulers schedule I\/O requests according to different scheduling algorithms. In an alternative embodiment, two or more of the installed I\/O schedulers schedule I\/O requests according to the same scheduling algorithm. In one embodiment, the I\/O scheduling policy manager  does not install any install any initial I\/O schedulers.","At block , the I\/O scheduling policy manager  receives an I\/O scheduler selection, which indicates a replacement I\/O scheduler type (e.g., FIFO, SCAN, etc.). The I\/O scheduler selection is received from the application program  or the control program .","At block , the I\/O scheduling policy manager  selects a replacement I\/O scheduler from the set of I\/O schedulers A-C. The replacement I\/O scheduler is of the type indicated in the I\/O scheduler selection.","As shown in block , the I\/O scheduling policy manager  determines whether the I\/O scheduler selection indicates an I\/O scheduler type that is included within the operating system . For example, if the I\/O scheduler selection indicates a FIFO I\/O scheduler, and if one of the I\/O schedulers A-C is a FIFO I\/O scheduler, the selection is valid. However, if the operating system  does not include a FIFO I\/O scheduler, the I\/O selection is not valid. If the I\/O scheduler selection is valid, the flow continues at block . Otherwise, the flow ends.","At block , the I\/O scheduling policy manager  determines which of the installed I\/O schedulers will be replaced by the replacement I\/O scheduler.","At block , the I\/O scheduling policy manager  deactivates the selected installed I\/O scheduler and installs the replacement I\/O scheduler. As noted above, operations for installing an I\/O scheduler are described in greater detail below, with reference to .","While the discussion of  described general operations for initially installing and replacing I\/O schedulers, the discussion of  more detailed methods for installing a replacement I\/O scheduler. In particular,  describe the operation of block  in more detail.",{"@attributes":{"id":"p-0048","num":"0047"},"figref":"FIG. 7","b":["502","700","702"]},"At block , the I\/O scheduling policy manager  directs an I\/O scheduler that is being replaced to stop transmitting I\/O requests to an I\/O device. The I\/O scheduling policy manager  also directs the I\/O scheduling dispatch unit, which receives, stores, and dispatches I\/O requests, to stop transmitting I\/O requests to an I\/O scheduler that is being replaced.","At block , the I\/O scheduling policy manager  retrieves any I\/O requests stored in the I\/O scheduler that is being replaced and stores them in a temporary storage unit. The temporary storage unit can be located within the I\/O scheduling policy manager . However, the temporary storage location can be in any suitable location (e.g., in the I\/O scheduling dispatch unit ).","As shown in block , the I\/O scheduling policy manager  terminates the I\/O scheduler that is being replaced. The I\/O scheduling policy manager  terminates the I\/O scheduler by disassociating it from I\/O device and I\/O request sources (e.g., application programs ). If the I\/O scheduler is a software program, the I\/O scheduling policy manager  may terminate the I\/O scheduler by removing it from memory.","At block , the I\/O scheduling policy manager  transmits the temporarily stored I\/O requests to a replacement I\/O scheduler.","At block , the I\/O scheduling policy manager  directs the I\/O scheduling dispatch unit  to begin transmitting I\/O requests to the replacement I\/O scheduler A. The I\/O scheduling dispatch unit  also directs the replacement I\/O scheduler to begin transmitting I\/O requests to one or more I\/O device.",{"@attributes":{"id":"p-0054","num":"0053"},"figref":"FIG. 8","b":"502"},"At block , the I\/O scheduling policy manager  directs the I\/O scheduling dispatch unit  to stop transmitting I\/O requests an I\/O scheduler that is to be replaced. The I\/O scheduling dispatch unit  receives and stores I\/O requests received during the I\/O scheduler installation process.","At block , the I\/O scheduling policy manager  waits until the I\/O scheduler being replaced does not hold any I\/O requests. That is, the I\/O scheduling policy manager  waits until the I\/O scheduler that is being replaced schedules all its in-flight I\/O requests for service by an I\/O device. In-flight I\/O requests are I\/O requests that are in the process of being scheduled for service. In other words, in-flight I\/O requests are I\/O requests that have been received by the operating system , but which have not been scheduled for service by an I\/O device.","At block , the I\/O scheduling policy manager  terminates the I\/O scheduler that is being replaced. The I\/O scheduling policy manager  terminates the I\/O scheduler by disassociating it from I\/O devices and I\/O request sources.","At block , the I\/O scheduling policy manager  directs the I\/O scheduling dispatch unit  to begin transmitting I\/O requests to the replacement I\/O scheduler A. The I\/O policy manager also directs the I\/O scheduler A to begin transmitting I\/O requests to the I\/O device A.","The discussion of  above described operations for installing and replacing I\/O schedulers. The discussion of  below will describe a method defining how an application program requests an operating system to install a particular I\/O scheduler.  will describe how a control program selects an I\/O scheduler. According to some embodiments, either application programs or control programs request the operating system to install a particular scheduler. However, according to other embodiments, both application programs and control programs can make such requests.",{"@attributes":{"id":"p-0060","num":"0059"},"figref":"FIG. 9","b":["902","506"]},"At block , the application program  transmits an I\/O scheduler selection to the I\/O scheduling policy manager .","At block , the application program  determines whether the selected I\/O behavior is still required.","At block , the application program  determines whether it is in a termination state (i.e., a state from which application program operations cease). If the application program is in a termination state, the flow ends. Otherwise, the flow continues at block .",{"@attributes":{"id":"p-0064","num":"0063"},"figref":"FIG. 10"},"At block , the control program  determines which of the I\/O schedulers A-C are installed and what scheduling methods the installed schedulers include. The control program  also determines for which I\/O device each I\/O scheduler is scheduling I\/O requests. The control program  can also determine any other necessary operational parameters.","At block , the control program  collects various I\/O statistics, such as statistics about the throughput and turnaround time of the I\/O requests being scheduled for service by the I\/O devices. The control program  also collects statistics about the flow of the I\/O requests from various I\/O request sources.","At block , the control program  analyzes the I\/O statistics. The control program  performs a statistical analysis to determine whether different I\/O schedulers could improve I\/O scheduling performance. In one embodiment, the I\/O scheduling needs of various I\/O sources (e.g., the application program ) define I\/O performance. Thus, I\/O performance can be improved when different I\/O schedulers can better meet the I\/O needs of various I\/O request sources. The control program  can use heuristics to determine whether I\/O scheduling performance could be improved.","As shown in block , the control program  determines whether its I\/O performance heuristics recommend changing I\/O schedulers. The heuristics analyze the I\/O statistics to determine whether a scheduler should be changed. If the heuristics recommend that an I\/O scheduler should be changed, the process continues at block . Otherwise, the flow continues at block .","At block , the control program  transmits an I\/O scheduler selection to the I\/O scheduling policy manager .","At block , the control program  determines whether it is in a termination state. If the control program is in a termination state, the flow ends. Otherwise, the flow continues at block .","This section provides an overview of the example hardware and the operating environment in which embodiments of the invention can be practiced.",{"@attributes":{"id":"p-0072","num":"0071"},"figref":["FIG. 11","FIG. 11"],"b":["1100","1102","1100","1130","1122","1124","1102","1130","1124","1122","1102","1100"]},"The memory unit  includes an operating system , which includes an I\/O scheduling policy manager  and I\/O schedulers . The memory unit  stores data and\/or instructions, and may comprise any suitable memory, such as a dynamic random access memory (DRAM), for example. The computer system  also includes IDE drive(s)  and\/or other suitable storage devices. A graphics controller  controls the display of information on a display device , according to embodiments of the invention.","The Input\/Output controller hub (ICH)  provides an interface to I\/O devices or peripheral components for the computer system . The ICH  may comprise any suitable interface controller to provide for any suitable communication link to the processor(s) , memory unit  and\/or to any suitable device or component in communication with the ICH . For one embodiment of the invention, the ICH  provides suitable arbitration and buffering for each interface.","For one embodiment of the invention, the ICH  provides an interface to one or more suitable integrated drive electronics (IDE) drives , such as a hard disk drive (HDD) or compact disc read only memory (CD ROM) drive, or to suitable universal serial bus (USB) devices through one or more USB ports . For one embodiment, the ICH  also provides an interface to a keyboard , a mouse , a CD-ROM drive , and one or more suitable devices through one or more firewire ports . For one embodiment of the invention, the ICH  also provides a network interface  though which the computer system  can communicate with other computers and\/or devices.","In one embodiment, the computer system  includes a machine-readable medium that stores a set of instructions (e.g., software) embodying any one, or all, of the methodologies for dynamically loading object modules described herein. Furthermore, software can reside, completely or at least partially, within memory unit  and\/or within the processor(s) .","Thus, a system, method, and machine readable medium including instructions for Input\/Output scheduling have been described. Although the present invention has been described with reference to specific example embodiments, it will be evident that various modifications and changes may be made to these embodiments without departing from the broader spirit and scope of the invention. Accordingly, the specification and drawings are to be regarded in an illustrative rather than a restrictive sense."],"BRFSUM":[{},{}],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"BRIEF DESCRIPTION OF THE FIGURES","p":["The present invention is illustrated by way of example and not limitation in the Figures of the accompanying drawings in which:",{"@attributes":{"id":"p-0008","num":"0007"},"figref":"FIG. 1"},{"@attributes":{"id":"p-0009","num":"0008"},"figref":"FIG. 2"},{"@attributes":{"id":"p-0010","num":"0009"},"figref":"FIG. 3"},{"@attributes":{"id":"p-0011","num":"0010"},"figref":"FIG. 4"},{"@attributes":{"id":"p-0012","num":"0011"},"figref":"FIG. 5"},{"@attributes":{"id":"p-0013","num":"0012"},"figref":"FIG. 6"},{"@attributes":{"id":"p-0014","num":"0013"},"figref":"FIG. 7"},{"@attributes":{"id":"p-0015","num":"0014"},"figref":"FIG. 8"},{"@attributes":{"id":"p-0016","num":"0015"},"figref":"FIG. 9"},{"@attributes":{"id":"p-0017","num":"0016"},"figref":"FIG. 10"},{"@attributes":{"id":"p-0018","num":"0017"},"figref":"FIG. 11"}]},"DETDESC":[{},{}]}
