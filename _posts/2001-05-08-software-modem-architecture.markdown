---
title: Software modem architecture
abstract: A system is described comprising: a finite state machine having a plurality of states interconnected through a plurality of events, wherein certain states and events in said plurality are implemented in software and other states and events in said plurality are implemented in hardware; and a scheduler communicatively coupled to the finite state machine and being programmable with one or more parameters defining scheduled operations to be performed by the scheduler, wherein the finite state machine is configured to select one or more of said parameters to be used by said scheduler upon transition by said finite state machine from a first state to a second state.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=07075914&OS=07075914&RS=07075914
owner: Microtune (San Diego), Inc.
number: 07075914
owner_city: San Diego
owner_country: US
publication_date: 20010508
---

{"@attributes":{"id":"description"},"RELAPP":[{},{}],"heading":["PRIORITY","BACKGROUND OF THE INVENTION","SUMMARY OF THE INVENTION","DETAILED DESCRIPTION","Introduction","EMBODIMENTS OF THE INVENTION","FSM Engine","Scheduler","Master Page\u2014One Example of System Operation"],"p":["This application claims the benefit of U.S. Provisional Application No. 60\/202,734, filed May 8, 2000.","1. Field of the Invention","This invention relates generally to communication systems. More particularly, the invention relates to an improved architecture for implementing communication protocols such as the \u201cBluetooth\u201d wireless protocol.","2. Description of the Related Art","Various combinations of hardware, firmware and software may be used to implement wireless and terrestrial communication protocol stacks. For example, referring to , the \u201cBluetooth\u201d specification is comprised of several different protocol layers including a radio frequency (\u201cRF\u201d) layer , a baseband layer (\u201cBB\u201d) , a link control layer (\u201cLC\u201d) , a link manager layer (\u201cLM\u201d) , a logical link control and adaptation protocol layer (\u201cLCAP\u201d), and a serial line emulation layer (\u201cRFCOMM\u201d). The functionality of each of these layers (as well as additional Bluetooth protocol layers) is described in detail in 1.0 (Aug. 25, 1999) (\u201c\u201d), which can be found at \u201chttp:\/\/www.Bluetooth.com.\u201d","Briefly, Bluetooth is a short-range radio standard intended to replace the cables connecting portable and fixed electronic devices. The standard, which operates in the unlicensed Industrial-Scientific-Medical (\u201cISM\u201d) band at 2.4 GHz, focuses on robustness, low complexity, low power, and low cost. Within the RF layer , a frequency hop transceiver is applied to combat interference and fading and a shaped, binary FM modulation is applied to minimize transceiver complexity. A symbol rate of 1 Ms\/s, is maintained with a slotted channel having a nominal slot length of 625 ms. For full duplex transmission, a Time-Division Duplex (\u201cTDD\u201d) scheme is used. Information is exchanged through data packets, with each packet being transmitted on a different hop frequency. A packet typically covers a single slot, but can be extended to cover up to five slots, depending on the application. Additional features of the Bluetooth standard are described in Jaap Haartsen, ERICSSON REVIEW No. 3, (1998).","As illustrated in , a Bluetooth integrated circuit (\u201cIC\u201d)  is typically configured to implement the lower layers of the Bluetooth protocol stack (e.g., the RF , BB  LC  and LM  layers). The Bluetooth IC  in this example is typically an Application Specific Integrated Circuit (\u201cASIC\u201d), a chip custom designed for a specific application (in this case the Bluetooth protocol). ASICs improve performance over general-purpose processors because ASICs are \u201chardwired\u201d to do a specific job and do not incur the overhead of fetching and interpreting instructions stored in memory. As such, an ASIC chip typically performs an electronic operation as fast as it is possible to do so, providing that the circuit is efficiently designed.","The Bluetooth IC in  communicates with a host processor environment  through a host interface . The host processor environment  is typically comprised of a general purpose CPU (e.g., an Intel Pentium\u00ae-class processor) and software executed by the CPU (e.g., an operating system with an application programming interface (\u201cAPI\u201d) and one or more application programs). As shown, in a typical configuration the host processor environment  is configured to support only the upper layers of the protocol stack, RF Comm , and LCAP .","A software modem is described comprising: a finite state machine having a plurality of states interconnected through a plurality of events, wherein certain states and events in said plurality are implemented in software and other states and events in said plurality are implemented in hardware; and a scheduler communicatively coupled to the finite state machine and being programmable with one or more parameters defining scheduled operations to be performed by the scheduler, wherein the finite state machine is configured to select one or more of said parameters to be used by said scheduler upon transition by said finite state machine from a first state to a second state.","In the following description, for the purposes of explanation, numerous specific details are set forth in order to provide a thorough understanding of the present invention. It will be apparent, however, to one skilled in the art that the present invention may be practiced without some of these specific details. For example, although embodiments of the invention are described below in the context of the \u201cBluetooth\u201d standard, it should be noted that the underlying principles of the invention are not limited to any particular communication standard. For example, features of the invention may be performed in virtually any wireless or wireline network environment. Moreover, in some instances, well-known structures and devices are shown in block diagram form to avoid obscuring the principles of the invention.","A system and method is described below which may be applied to a multitude of wireless and wireline protocols which, in general, rely on very fast, hard real-time responses within the physical or medium access control (\u201cMAC\u201d) protocol layers. While this type of system and method is not always required for wireline modems such as V.90 (56 k) dialup modems, it is necessary for a Time Division Duplexing (\u201cTDD\u201d) wireless protocol such as Bluetooth. One embodiment of the invention implements a software based modem on a host processor that does not respond to real-time events fast enough due, for example, to a slow link between the target hardware and the host processor (e.g. serial RS232), or the host processor running an OS that is non-real time (e.g. Windows). In addition, according to embodiments of the invention described herein, the software-based modem may be configured to process a larger portion of the protocol stack.","Moreover, embodiments of the invention described below provide increased flexibility by logically partitioning a protocol finite state machine (\u201cFSM\u201d) between hardware and software. This property, combined with the programmable nature of the FSM, allows one to dynamically \u201cfine-tune\u201d the performance of the modem according to the capability of the host CPU. For example, with a relatively high-powered processor such as a 1 GHz CPU Pentium a larger number of slave devices may be handled in a piconet (i.e., when compared with slower CPU).","Although ASICs improve performance over general-purpose CPUs for the reasons set forth above, they incur additional costs to the overall product when compared with software that may be executed by a general-purpose CPU and that may already exist for that product. As such, in some situations (e.g., for low-speed applications or applications which require only partial real-time support, or in situations where the host processor is fast enough to handle the necessary high-speed processing) it may be more efficient to offload the lower level protocol layers , , , and  from the Bluetooth IC to the host processing environment . This configuration will reduce the gate hardware requirement for the Bluetooth IC and thereby reduce overall product costs for adding Bluetooth capability to electronic devices that already require a host CPU.","One embodiment of a software modem, illustrated in , is comprised of a finite state machine (\u201cFSM\u201d) engine ; a scheduler unit  including a priority control unit ; a hop sequencer  communicatively coupled to a phase locked loop (\u201cPLL\u201d) unit through a PLL interface ; one or more Bluetooth clocks  feeding a clock signal to the scheduler unit  and the hop sequencer ; and an RF unit comprised of a packet processor  for receiving\/transmitting (\u201cTxD, RxD\u201d) incoming\/outgoing data packets and a control unit  for controlling (e.g., enabling\/disabling) the packet processor .  illustrates a packet processor  according to one embodiment of the invention.","The FSM engine  of one embodiment provides a simple, efficient programming model for the baseband processor which allows baseband functions to be implemented using a limited number of gates in the baseband IC (and therefore provides a smaller IC footprint). More particularly, referring to , which illustrate a state diagram  and a state look-up table  respectively, the FSM engine  is comprised of a series of baseband processor states \u2013 connected through a series of baseband processor events \u2013. In operation, when the baseband processor is operating in one state, e.g., state , for example, and detects an event , the processor will transition to state  and wait for the next event. In addition, as indicated in the look-up table , one or more baseband processor actions (e.g., Action B) may also be associated with a state\/event pair.","As an example, at state  the baseband processor may listen for an incoming data packet; event  may be the receipt by the processor of an incoming data packet; and action \u2018A\u2019 taken by the processor may be a data packet transmission by the processor in response to the received data packet. Various other states, events and actions may be employed consistent with the underlying principles of the invention.","For time-critical applications such as real-time audio\/video transmissions and other types of high-speed data applications, transitions from one state to another must be dealt with very quickly. By contrast, other types of applications such as wireless input devices (i.e., keyboards, mice, game controllers . . . etc) do not require the same level of high-speed event transitioning.","In addition, in a communication protocol stack, some kind of FSM logic may be implemented in almost every layer to provide the required handshake and message exchange between two devices. As described previously, the real-timeliness of the transitions between states generally decreases as one goes up the protocol layers. At the same time, within each layer the response time requirements between different states also vary significantly depending on the particular design of the protocol. Accordingly, as illustrated in , for these different types of requirements, portions of the FSM engine  may be implemented using software  as well as hardware . In addition, it should be noted that even applications which require real-time\/high-speed functionality may be implemented as described herein if the host processor is powerful enough. In one embodiment, the software component  is executed in the host processing environment  and the hardware component  is programmed in an ASIC. It should also be noted that portions of the state diagram  may exist at the link control (\u201cLC\u201d) layer as well as the baseband layer.","If the system is configured to support the Bluetooth protocol, the protocol stack may be divided as illustrated in , with the RF layer  and portions of the baseband layer  implemented in a Bluetooth IC  (which may be an ASIC) and the remaining layers, including certain portions of the baseband layer , implemented as software  executed in the host processor environment . In this embodiment, transitions between hardware states (e.g., state ) and software states (e.g., state ) will occur over the host interface .","As illustrated in , one embodiment of an FSM engine  is comprised generally of a lookup table unit , a decode unit  and a latch . The lookup table unit  of one embodiment is comprised of a memory (not shown) for storing a lookup table such as the one illustrated in . The memory may be a volatile memory (e.g., random access memory or \u201cRAM\u201d) or a non-volatile memory (e.g., an electrically erasable programmable read only memory or \u201cEEPROM\u201d; a programmable read only memory or \u201cPROM\u201d, etc), depending on the particular embodiment. It should be noted, however, that the underlying principles of the invention may be implemented using virtually any type of memory capable of storing look-up table data. New look-up table data may be generated to support new applications and loaded\/programmed into the memory in the look-up table unit  via the Load data path . The look-up table data in one embodiment is transmitted from the host processor environment  (via the load data path ).","The FSM engine  of one embodiment also includes an address input  and a data output . New events  and the current state of the FSM engine  (stored in latch ) are combined to form a look-up table address which is used by the FSM engine  to identify the next state  to which the FSM engine  will transition and\/or the next action  which the FSM engine  will perform. The next state  may either be programmed in software or in hardware as described above. If programmed in software, the next state signal will be transmitted over the host interface  and processed in the host processing environment .","Upon transition to a new state, an action code  may be generated by the FSM engine . The action code is received by the decode logic unit , which produces a predefined action signal in response (e.g., such as transmit enable \u201cTxEN\u201d or receive enable \u201cRxEN\u201d as illustrated in ). The action signals may be executed in the baseband layer  or, alternatively, may be transmitted down the protocol stack to the RF layer  or up the protocol stack to the link control layer , depending on the type of action required.","As illustrated in , one embodiment of the software modem also includes a scheduler unit  which operates in conjunction with the FSM engine . When implementing wireless\/networking protocols (e.g., such as Bluetooth) there are typically predefined time periods during which certain actions must be taken (e.g., transmit packets, listen for packets, etc). The scheduler unit  provides a simple, efficient mechanism and programming model for supporting these types of timed, periodic actions.","As illustrated in , the host processor may offload operations to the scheduler unit  by specifying parameters including a start count value , a period , a repetition number , and one or more actions to be performed , . The start count  specifies a point in time when the scheduler unit  should begin executing a specified series of operations. The period  indicates the amount of time which should be allocated to perform one iteration of a particular set of actions , . For example, as illustrated in when implemented in a Bluetooth environment, the period  may be defined by a specified number of  us time slots (e.g., slots \u2013; \u2013; etc), with each slot representing a different action (e.g., transmit in slot , receive in slot ), and a specified hop frequency.","The number of periods  to be executed by the scheduler unit  may be specified by a \u201cnumber of repetitions\u201d parameter . This value may be set to a definite number (e.g., 10) or, alternatively, may be set to an infinite value (i.e., execute until interrupted).","One particular embodiment of a scheduler unit  is illustrated in . This embodiment includes a set of parameter registers  for storing the various scheduler unit  parameters described above. New parameters may be loaded into the registers  via a load signal  originating from the host processor environment. Once the values are loaded, the FSM engine  may select a particular set of parameters via a select signal . In one embodiment, the select signal  transmitted to the scheduler unit  is defined by an FSM engine action  as described above.","In one embodiment, the scheduler  compares the start count value  to with a Bluetooth clock  to determine when to initiate the scheduled routine. As described above, each Bluetooth clock  operates on a specified frequency hop sequence. The scheduler unit  may identify a particular hop count within the hop sequence as the start count. Upon identification of the start count, an enable signal  is transmitted to the period counter . In one embodiment (e.g., in a Bluetooth environment) the slot clock , having a period of 625 us (i.e., a frequency of 1600 slots\/sec), triggers the period counter . In response, the period counter  identifies the beginning and end of each period  based on the number of time slots counted (e.g., in each \u201cperiod\u201d is equal to 10 time slots).","A trigger signal  having a period based on the slot clock  period is transmitted as an input to a slot counter  which identifies the beginning and end of each time slot. In a Bluetooth environment, the slot counter  triggers on a \u00bd slot clock  because this is the resolution required by the Bluetooth protocol. In response to the trigger signal  and the \u00bd slot clock signal , a binary control signal  is transmitted to a lookup table unit .","In one embodiment, the lookup table unit  uses the control signal  as an address to perform a lookup operation and determine the next action  to be executed. For example, referring once again to , the scheduler unit  may generate a \u201ctransmit\u201d command in the first slot of the period (e.g., slot ) based on a control signal of \u20180\u2019 and may generate a \u201creceive\u201d command in the second slot of the period (e.g., slot ) based on a control signal of \u20181.\u2019 It should be noted, however, that various more complex look-up addressing operations may be performed consistent with the underlying principles of the invention (e.g., using control addresses with multiple digits). New look-up tables may be loaded into a memory configured in the look-up table unit  via a load signal  and individual look-up tables may be selected by a table-select parameter  stored in one of the parameter registers .","Interaction between the FSM engine , the scheduler unit  and the host processor environment  will now be described with reference to  which illustrates a Bluetooth page operation. Briefly, the page operation is used to establish communication between a \u201cmaster\u201d Bluetooth device and one or more \u201cslave\u201d devices. In the embodiment illustrated in  the initial sequence  of the page operation is performed by software executed in the host processor environment . The master device attempts to capture the slave device by transmitting pages which include the slave device's access code (\u201cDAC\u201d) on different hop channels. Since the Bluetooth clocks of the master device and the slave device are not synchronized, the master device does not know exactly when the slave device wakes up and on which hop frequency. Therefore, it transmits a train of identical DACs at different hop frequencies, listening between the transmit intervals until it receives a response from the slave.","The master device also selects a packet type and an active member address code (\u201cAM_ADDR\u201d). The packet type identifies (among other things) the number of time slots the packet will occupy (up to five Bluetooth time slots may be occupied by a packet) and the AM_ADDR identifies active members of the local Bluetooth network (referred to as a \u201cpiconet\u201d) once a master-slave connection is established.","Thus, transmissions  and  which contain the DAC of the slave are transmitted on two different hop frequencies. In the following receive (\u201cRx\u201d) slot , the receiver listens sequentially to two corresponding Rx hops for an incoming packet with the slave DAC. The master device continues these transmissions at various hop frequencies until it receives a response from the slave (i.e., one which contains the slave's DAC).","When it receives such a transmission, the FSM engine  (at sequence ) freezes the input to the hop sequencer. In addition, it transitions to a new state (a \u201cmaster page response\u201d state) and selects a new set of parameters (e.g., from the parameter registers ) so that the scheduler unit  will execute the master device's page response.","At sequence , the scheduler unit  executes the response by transmitting an FHS packet  in the next slot following the Rx event. An FHS packet  is a special control packet transmitted in a single time slot which contains, among other things, the Bluetooth device's address and the clock of the master device. After the master device transmits the FHS packet , it waits for a second response from the slave device which acknowledges the reception of the FHS packet  with a packet containing the slave device's DAC.","At this point (see sequence ) the FSM engine  selects a particular hop sequence referred to as the \u201cchannel hopping sequence,\u201d which uses all 79 hop channels in a random fashion. The master device may now send its first traffic packet in a hop frequency based on the new master parameters. As illustrated in , this first packet will be a POLL packet . The slave device is expected to respond to the POLL packet  with any type of data packet over the newly-generated master-slave channel. Finally, at sequence , the host processor loads the scheduler unit  with parameters for the new connection.","It is important to note that the apparatus and method described herein may be implemented in environments other than a physical integrated circuit (\u201cIC\u201d). For example, the circuitry may be incorporated into a format or machine-readable medium for use within a software tool for designing a semiconductor IC. Examples of such formats and\/or media include computer readable media having a VHSIC Hardware Description Language (\u201cVHDL\u201d) description, a Register Transfer Level (\u201cRTL\u201d) netlist, and\/or a GDSII description with suitable information corresponding to the described apparatus and method.","Throughout the foregoing description, for the purpose of explanation, numerous specific details were set forth in order to provide a thorough understanding of the invention. It will be apparent, however, to one skilled in the art that the invention may be practiced without some of these specific details. For example, while the embodiments described above focused on the Bluetooth protocol, the underlying principles of the invention may practiced using various other types of wireless and terrestrial protocols. Similarly, while the interaction between the scheduler unit , the FSM engine  and the host processor environment was described in the context of a master page operation, various other operations may be performed while complying with the underlying principles of the invention. Accordingly, the scope and spirit of the invention should be judged in terms of the claims which follow."],"BRFSUM":[{},{}],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"BRIEF DESCRIPTION OF THE DRAWINGS","p":["A better understanding of the present invention can be obtained from the following detailed description in conjunction with the following drawings, in which:",{"@attributes":{"id":"p-0012","num":"0011"},"figref":"FIG. 1"},{"@attributes":{"id":"p-0013","num":"0012"},"figref":"FIG. 2"},{"@attributes":{"id":"p-0014","num":"0013"},"figref":"FIG. 3"},{"@attributes":{"id":"p-0015","num":"0014"},"figref":"FIG. 4"},{"@attributes":{"id":"p-0016","num":"0015"},"figref":"FIG. 5"},{"@attributes":{"id":"p-0017","num":"0016"},"figref":"FIG. 6"},{"@attributes":{"id":"p-0018","num":"0017"},"figref":"FIG. 7","i":"a "},{"@attributes":{"id":"p-0019","num":"0018"},"figref":"FIG. 7","i":"b "},{"@attributes":{"id":"p-0020","num":"0019"},"figref":"FIG. 8"},{"@attributes":{"id":"p-0021","num":"0020"},"figref":"FIG. 9"},{"@attributes":{"id":"p-0022","num":"0021"},"figref":"FIG. 10"}]},"DETDESC":[{},{}]}
