---
title: Dynamic downloading of keyboard keycode data to a networked client
abstract: The present invention is directed toward dynamic downloading of keyboard keycode data to a networked client. According to one or more embodiments of the present invention, a user logs into a networked client by presenting a smart card to a card reader attached to the client (or by some other authentication mechanism) and enters a PIN into the keyboard. The keycodes entered by the user logging into the client are obtained, translated into ASCII characters, and presented to the smart card. If the PIN is correct, the user is able to log in, otherwise the log in fails. In one embodiment, when the user enters the PIN, a translation table is downloaded from the server into the client. The client uses the translation table to convert the keycodes to ASCII text and presents the ASCII text to the smart card for authentication.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=07010806&OS=07010806&RS=07010806
owner: Sun Microsystems, Inc.
number: 07010806
owner_city: Santa Clara
owner_country: US
publication_date: 20010518
---

{"@attributes":{"id":"description"},"BRFSUM":[{},{}],"heading":["BACKGROUND OF THE INVENTION","SUMMARY OF THE INVENTION","DETAILED DESCRIPTION OF THE INVENTION"],"p":["1. Field of the Invention","The present invention relates to network security. More specifically, the invention relates to the dynamic downloading of keyboard keycode data to a networked client.","Portions of the disclosure of this patent document contain material that is subject to copyright protection. The copyright owner has no objection to the facsimile reproduction by anyone of the patent document or the patent disclosure as it appears in the Patent and Trademark Office file or records, but otherwise reserves all copyright rights whatsoever.","2. Background Art","When logging into a distributed network of computing devices, it is typical for a security measure to be in place which helps to insure the identity of the individual logging in. One instance where this occurs is on a system that uses a smart card. The user inserts the card into a card reading device attached to the computing system and enters a personal identification number (PIN) onto a keyboard, keypad, or other input device of the computing system. If the PIN number is authenticated then the user logs in and begins using the distributed network.","As will be further explained below, the manner in which the PIN number is currently authenticated is vulnerable to snooping attacks from entrusted third parties that night use the PIN to compromise the network. Before further describing the problems associated with current techniques which authenticate PINs, an example computing environment where this problem occurs is described below.","Multi-Tier Application Architecture","In the multi-tier application architecture, a client communicates requests to a server for data, software and services, for example, and the server responds to the requests. The server's response may entail communication with a database management system for the storage and retrieval of data. The multi-tier architecture includes at least a database tier that includes a database server, an application tier that includes an application server and application logic (i.e., software application programs, functions, etc.), and a client tier. The application server responds to application requests received from the client. The application server forwards data requests to the database server.",{"@attributes":{"id":"p-0010","num":"0009"},"figref":"FIG. 1","b":["100","110","110"]},"Further application functionality is provided by application logic managed by application server  in application tier . The apportionment of application functionality between client tier  and application tier  is dependent upon whether a \u201cthin client\u201d or \u201cthick client\u201d topology is desired. In a thin client topology, the client tier (i.e., the end user's computer) is used primarily to display output and obtain input, while the computing takes place in other tiers. A thick client topology, on the other hand, uses a more conventional general purpose computer having processing, memory, and data storage abilities. Database tier  contains the data that is accessed by the application logic in application tier . Database server  manages the data, its structure and the operations that can be performed on the data and\/or its structure.","Application server  can include applications such as a corporation's scheduling, accounting, personnel and payroll applications, for example. Application server  manages requests for the applications that are stored therein. Application server  can also manage the storage and dissemination of production versions of application logic. Database server  manages the database(s) that manage data for applications. Database server  responds to requests to access the scheduling, accounting, personnel and payroll applications' data, for example.","Connection  is used to transmit data between client tier  and application tier , and may also be used to transfer the application logic to client tier . The client tier can communicate with the application tier via, for example, a Remote Method Invocator (RMI) application programming interface (API) available from Sun Microsystems\u2122. The RMI API provides the ability to invoke methods, or software modules, that reside on another computer system. Parameters are packaged and unpackaged for transmittal to and from the client tier. Connection  between application server  and database server  represents the transmission of requests for data and the responses to such requests from applications that reside in application server .","Elements of the client tier, application tier and database tier (e.g., client , application server  and database server ) may execute within a single computer. However, in a typical system, elements of the client tier, application tier and database tier may execute within separate computers interconnected over a network such as a LAN (local area network) or WAN (wide area network).","Security Measures","Smart cards are used in environments like the multi-tier application architecture as a security measure to insure the identity of the user when he\/she logs into a computing device on the client tier. Once identified, data on the database tier and applications on the application tier may be used. One advantage associated with using a smart card or other identification technique is that no matter where the computing device is located on the client tier, the same data and applications that the user needs, or was using before his\/her last log-off, can be retrieved.","Smart cards are useful for securely storing secret information and embedding cryptographic algorithms for use in a cryptographic system. In many cases, the smart card requires the presentation of a secret that only the cardholder knows. Sometimes this secret is called a PIN. Since the smart card itself has no mechanism for interacting with a human being (i.e., no keyboard or display), it requires the system it is being used with to provide the human I\/O facilities to prompt the cardholder for a PIN and to accept the cardholder's input of the PIN, typically on a keyboard or other suitable input device.","As the PIN is being entered on the keyboard, it is vulnerable to a snooping attack where an entrusted third party might be able to access the PIN and compromise it. In particular, when a key is pressed on a keyboard, the keyboard sends a code that represents the location of the key in a keyboard matrix. To obtain an ASCII representation of that key, the keycode is applied to a translation table that translates keycodes into ASCII characters. When such a keyboard is connected to a networked client, the keycodes are typically not processed in the client, but are sent via the network to a server. The server performs the necessary translations and passes the translated codes to the applications.","In cases where the keyboard translation is part of a secure process (i.e., a PIN code entry, the keyboard codes are vulnerable to an interception attack at two points\u2014on their way from the client to the server and on their way back from the server to the client. Moreover, since the keyboard codes of the PIN are resident on the server, at least for the time required to send those codes back to the client system, the PIN is vulnerable to a snooping attack while it is on the server.","One solution is to provide a smart card reader with a built in keypad used to enter the PIN. This avoids the danger of snooping that might occur when the PIN is authenticated via a server on the distributed network. This solution, however, is disadvantageous because it requires expensive and dedicated hardware to authenticate the PIN.","The present invention is directed toward dynamic downloading of keyboard keycode data to a networked client. According to one or more embodiments of the present invention, a user logs into a networked client by presenting a smart card to a card reader attached to the client (or by some other authentication mechanism) and enters a PIN into the keyboard. The keycodes entered by the user logging into the client are obtained, translated into ASCII characters, and presented to the smart card. If the PIN is correct, the user is able to log in, otherwise the log in fails. The process occurs completely on the client and thereby avoids the danger associated with snooping the keycodes when they are sent over the network to the server for translation and then sent back over the network to the client for processing.","In one embodiment, when the user enters the PIN, a client generates a request to a server for a translation table by sending the server information about the configuration of the keyboard connected to it. In response, the server accesses a database to obtain the appropriate translation table and downloads it from the server into the client. The client uses the translation table to convert the keycodes to ASCII text and presents the ASCII text to the smart card for authentication. In one embodiment, the server provides the client wit a list and a range of valid keycodes that the client should process since not all keycodes are of interest to the client.","In another embodiment, a set of special keycodes are specified by the server in the keyboard translation table sent from the server to the client. The special keyboards include, for instance, \u201cend of input\u201d, \u201cdelete previous character\u201d, and \u201cabort operation\u201d. When one of the special codes is generated by the keyboard, the client performs special processing such as deleting a character in a buffer or returning a special status code to the server to indicate that the current user input processing should be terminated.","The invention relates to the dynamic downloading of keyboard keycode data to a networked client. In the following description, numerous specific details are set forth to provide a more thorough description of embodiments of the invention. It will be apparent, however, to one skilled in the art, that the invention may be practiced without these specific details. In other instances, well known features have not been described in detail so as not to obscure the invention.","Dynamic Downloading of Keyboard Keycodes","A keycode is entered every time a key on a keyboard is pressed. Moreover, each keyboard has a different configuration. For instance, a keyboard in China is configured differently than an English or German keyboard. Typically, network computers do not include the state necessary to understand what type of keyboard they are connected to. Instead, the raw keycodes are obtained when the key is pressed and they are sent over the network to a server that applies the keycodes to a translation table so it can determine the actual character that corresponds to the location on the type of keyboard connected to the network computer (client). In this process, there is a danger of interception of the keycodes when they are traveling over the network","According to one or more embodiments of the present invention, the danger of interception is avoided as follows: a user logs into a networked client by presenting a smart card to a card reader attached to the client (or by some other authentication mechanism) and enters a PIN into the keyboard. The keycodes entered by the user logging into the client are obtained, translated into ASCII characters, and presented to the smart card. If the PIN is correct, the user is able to log in, otherwise the log in fails. The process occurs completely on the client and thereby avoids the danger associated with snooping the keycodes when they are sent over the network to the server for translation and then sent back over the network to the client for processing.","One embodiment of the present invention is shown in . At step  a user logs into a networked client by presenting a smart card to a card reader attached to the client. At step , a translation table is downloaded from the server into the client. At step  the user enters a PIN into the keyboard. After the user enters the PIN, the client uses the translation table at step  to convert the keycodes to ASCII text. At step  the ASCII text is presented to the smart card for authentication. At step , it is determined whether the PIN is correct. If it is, the user is able to log in at step . Otherwise the log in fails at step .","Another embodiment of the present invention is shown in . In this embodiment, each networked computer connected to an input device contains the information necessary to instruct a server of the configuration of the input device and instructs the server at an appropriate time. At step  one or more users log into networked clients by presenting a smart cards to card readers attached to the clients. At step , each of the network clients sends a message to the server instructing it on the type of configuration for its input device (e.g., keyboard). Next at step , the server receives the message and accesses a database to obtain translation tables for each configuration.","At step  the translation tables are downloaded from the server into the clients. At step , the users enters PIN numbers into the keyboard. The client uses the translation table at step  to convert the keycodes to ASCII text and at step  the ASCII text is presented to the smart card for authentication.","Keycode Ranges","In one embodiment, the server provides the client with a list and a range of valid keycodes that the client should process since not all keycodes are of interest to the client. This embodiment of the present invention is shown in . At step  a user logs into a networked client by presenting a smart card to a card reader attached to the client. At step , the client instructs the server to send a translation table for the current keyboard configuration. A translation table and a range of valid keycodes is downloaded from the server into the client at step .","At step , the PIN is entered. At step , the client examines a keycode. At step , it is determined whether the keycode is in range. If it is not, it is ignored at step  or an error handling routine is initiated before the process repeats at step . Otherwise, the client uses the translation table to convert the keycode to ASCII text at step . At step , it is determined whether there are any more keycodes. If there are, the process repeats at step . Otherwise, at step  the ASCII text is presented to the smart card for authentication.","Special Keycodes","In one embodiment of the present invention, a set of special keycodes are specified by the server in the keyboard translation table sent from the server to the client. The special keycodes include, for instance, \u201cend of input\u201d, \u201cdelete previous character\u201d, and \u201cabort operation\u201d. When one of the special codes is generated by the keyboard, the client performs special processing operations. This embodiment of the present invention is shown in .","At step  a user logs into a networked client by presenting a smart card to a card reader attached to the client. A translation table and a set of special keycodes are downloaded from the server into the client at steps  and  respectively. At step , the user enters the PIN which generates one or more keycodes. At step , the client examines a keycode. At step , it is determined whether the keycode is a special keycode. If it is not, the translation table is used by the client to convert the keycode to ASaI text at step .","Otherwise, the special keycode is used to perform a special processing operation at step  and the process repeats at step . Special processing operations include, for instance, deleting a character in a buffer or returning a special status code to the server to indicate that the current user input processing should be terminated. After step , at step , it is determined whether there are anymore keycodes. If there are, the process repeats at step . Otherwise, at step  the ASCII text is presented to the smart card for authentication.","Smart Card Architecture",{"@attributes":{"id":"p-0050","num":"0049"},"figref":"FIG. 6","b":["600","605","610","615","620","625","630","635","650"]},"In one embodiment, the smart card has the ability to have software downloaded into its non-volatile memory where it can execute the program by moving it to RAM where the smart card will act according to the instructions of the computer software. The smart card further has a communications channel  between the processor and an external source  such as a host computer.","The processor in the smart card is configured to retain information within the smart card that is secret. For instance, a secret key in the smart card will never be divulged across the communications channel . The smart card will, however, allow information to come in across the communication channel and use the data. For instance, the smart card is configured to receive data from an external source across the communications channel, to use the secret key in the smart card (i.e., PIN, for example to sign and encrypt the incoming data, and to send the results out along the communications channel  to the external source .","Keycode Translation Table Formats","In one embodiment, the client sends a message to the server whenever the client needs a keyboard translation table. The client sends a message consisting of a keyboard translation table request. Table 1 shows an example of one embodiment of a keyboard translation table that is returned from such a request.",{"@attributes":{"id":"p-0055","num":"0054"},"tables":{"@attributes":{"id":"TABLE-US-00001","num":"00001"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"4"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"35pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"56pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"63pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"63pt","align":"left"}}],"thead":{"row":[{"entry":[{},"TABLE 1"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"3","align":"center","rowsep":"1"}}]}]},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"type","country","instance"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"3","align":"center","rowsep":"1"}}]}]}}}}},"Table 1 comprises one or more keyboard translation table triples. Type refers to the type of keyboard. Country refers to the country associated with the keyboard. Instance refers to the ASCII representation that corresponds to the keycode.","One embodiment of the invention uses HexDump format. This format is a human readable 2 byte ASCII representation of 1 binary byte. Literally any of the 2 bytes concatenations generated by choosing two characters from the following:\n\n\u20180\u2019, \u20181\u2019, \u20182\u2019, \u20183\u2019, \u20184\u2019, \u20185\u2019, \u20186\u2019, \u20187\u2019, \u20188\u2019, \u20189\u2019, \u20180\u2019, \u2018A\u2019, \u2018B\u2019, \u2018C\u2019, \u2018D\u2019, \u2018E\u2019, \u2018F\u2019,\n","Using this scheme, the decimal value  is represented as \u201c59\u201d.","Keyboard intervals are used as a compact way to represent a consecutive range of USB keycodes (or any code that represents a key on a keyboard). One or more repetitions of the construct:","<keycode>[\u2018-\u2019 <keycode>] \u2018;\u2019 (definitions surrounded by square brackets are optional.","<keycode> is specified in HexDump format and the value on the left of the range should be numerically lower than the number on the right of the range (it is an interval).","In one embodiment, \u201ckeytable download\u201d is a command (CIRL) for downloading a keytable (KT) to the firmware and follows this syntax:\n\nCIRL=KT KT=Keyboard spec>_<Special characters>_<keycodes>_<Keymap>\n\nThe underscore is used as a separator between elements.\n","The <Keyboard spec> is a 3 bytes long combination expressed in Hexdump values whose first byte is keyboard type, the second is the keyboard index, and the third is the country code. A US type Sunray keyboard has a keyboard type set to \u201c06\u201d, the keyboard index is \u201c00\u201d, and the countrycode for the US is 33 (decimal). In HexDump the 33 translates to \u201c21\u201d. Thus, the keyboard spec for this keyboard is \u201c060021\u201d.","The <Special characters> is a string defining the USB keycodes to be used for the ENTER, ESCAPE, and BACKSPACE characters, in the following format:\n\n<kc>[<kc> . . .]@E<kc>[<kc> . . . ]@B<kc>[<kc> . . . ]@Q\n\nwhere E means ENTER, B means BACKSPACE, Q means ESCAPE. All three specifications should be present, and for each one or more keycodes should be specified. Keycodes are expressed in the HexDump values as above.\n","The US keyboard of the example is specified as:\n\n2858@E2A4C@B29@Q\n","\u201c28 and \u201c58\u201d are keycodes for keyboard enter and keypad enter for ENTER","\u201cE2\u201d and \u201cA4\u201d are keycodes for keyboard backspace and delete, keypad delete for BACKSPACE","\u201c29\u201d is a keycode for keyboard escape for ESCAPE.","The <keycodes> specify the keyboard keycodes to be used to enter a PIN. Keycodes are specified as keyboard intervals as described above.","The example US keyboard could be specified as:\n\n04-27:2B-38:54-57:59-63:64:\n","The <Keymap> is a string that defines the characters to be used when translating USB keycodes to characters. Each character is specified in HexDump value, as defined above. Since a key meaning can be modified by the use of modifiers, like SHIFT\/CONTROL, the keymap has to specify what happens if one of these has been pressed. For each keycode there should be three characters in the keymap, representing normal character, SHIFT-key character, and CONTROL-key character.","The <Keymap> length is defined by the total numbers of keycodes specified as in <keycodes> multiplied by three. No separator is specified between different parts.","For the example keyboard, keycodes defined as \u20182B-38:54-57:\u2019 in the US keymap are defined as:\n\n\u201c0909092020202D5F303D2B305B7B305D7D305C7C30237E303B3A 30272230607E 302C3C302E3E302F3F302F2F2F2A2A2A2D2D2D2B2B2B\u201d\n\nSmart Card Reader Protocol\n","The protocol makes use of a device manager\/remote device driver (DM\/RDD) layer as transport mechanism. When the host wants to communicate with the smartcard, the EXCHANGE primitive is used, and the transfer of data follows these rules:","a) Commands are specified as \u201cCMD=xxx\u201d as header of the string.","b) All parameters, if any, follow in the string.","c) Each parameter is a key\/value pair.","Not all operations are atomic, for example changing the PIN on a card could require asking for the old PIN, the new PIN and a second copy of the PIN as confirmation. Only if the two copies match will the APDU for writing the new PIN on the card be sent. All the while, the user may want to do other things. To address this, a small \u201clanguage\u201d is defined. All commands are atomically and sequentially executed, no two commands are in execution at the same time.","One feature is to type a PIN without sending it to the Host, but directly to the smartcard, in a sort of loopback mode. Again, this is not always possible right away, so we need a way to type a PIN and temporarily store it until it can be embedded in an APDU to the card. Some operations, like entering\/exiting the loopback keyboard mode and downloading the keymaps, are accomplished via control callback.","Typical operation requires the service to enter secure mode, download a keytable, and operate. In case a keytable has not been specified, some commands cannot execute, notably READ, CMP, APDU. The latter is a special case, since an APDU could be sent to the card independently of Secure Mode. In that case the keytable error is generated when reference to a buffer is made in the APDU itself.","An LED near the smartcard reader will blink according to the following rules as described by the Sun Service Indicator Standard which covers user-visable indicators on Sun platforms:","No LED activity","There is no readable card in the reader.","Green LED blinking","While in Secure PIN Entry Mode the blink rate should be 3\u20135 Hertz at a 50% on, 50% off duty cycle for the duration that the mode is active.","While data is being exchanged with the card, the LED shall flash at a random or intermittent rate for no less than 1 full second with the LED ending in the lit state.","Green LED fully lit","The smart card has been read and is ready (i.e. The card is still able to be accessed).","There is another primitive available via RDD, CONTROL. This call is used to initiate\/terminate Secure PIN Entry Mode, download the keytable and to signal cancellation of an operation.","For operations to be successfully carried on, the DM notification facilities are used to tell the DM service about card properties, keyboard attached to the unit and keypresses. These internal properties are embedded in a message in the format described below.",{"@attributes":{"id":"p-0088","num":"0087"},"tables":{"@attributes":{"id":"TABLE-US-00002","num":"00002"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"thead":{"row":{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":"Key\/value Description for EXCHANGE"}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"21pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"196pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"A sample transaction could be:"]},{"entry":[{},"Host \u2003\u2003\u2003\u2003\u2003\u2003\u2003DTU"]},{"entry":[{},"\u201cCMD=APDU APDU=00B0000008\u201d"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"63pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"154pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"\u201cRES=760833EF PB=60 STATUS=9000\u201d"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"21pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"196pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"(values random)"]},{"entry":[{},"Where I asked for a certain APDU to be sent to the card and the"]},{"entry":[{},"result is sent back along with the procedure bytes and status."]},{"entry":[{},"All described parameter and return keys have a"]},{"entry":[{},"<Key>=<value> syntax."]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"7pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"210pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"CMD= \u2003\u2003\u2003Description and values"]},{"entry":[{},"APDU \u2003\u2003Asks for a certain APDU to be sent to the card."]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"Parameters:"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"21pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"196pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"Key"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"21pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"154pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"APDU","APDU's bytes as an HexDump string. Buffers are"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"35pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"182pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"referred to by \u2018X\u2019 for buffer 0, \u2018Y\u2019 for buffer 1"]},{"entry":[{},"\u2018Z\u2019 for buffer 2. Each buffer specification is"]},{"entry":[{},"prepended by \u2018P\u2019. a byte specified as \u201cPP\u201d means"]},{"entry":[{},"a pad byte."]},{"entry":[{},"For more information, see APDUpatterns.txt"]},{"entry":[{},"\u2018L\u2019 means substitute the apdu lenght."]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"21pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"196pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"This pair is mandatory."]},{"entry":[{},"FP \u2003\u2003specifies in HexDump format the byte to use as pad"]},{"entry":[{},"This pair is optional."]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"Returns:"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"21pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"196pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"Key"]},{"entry":[{},"RES \u2003the hexdump bytes from the card"]},{"entry":[{},"PB \u2003\u2003procedure bytes"]},{"entry":[{},"STATUS the status bytes"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"All return pairs are mandatory unless an error has occurred"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"7pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"210pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"READ \u2003\u2003\u2003reads a series of keystrokes from the keyboard"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"Parameters:"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"21pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"196pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"Key"]},{"entry":[{},"BN \u2003\u2003The number of the buffer where henceforth"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"35pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"182pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"keycodes will be stored. \u2018S\u2019 will be used"]},{"entry":[{},"to signal \u201cstop buffering keycodes\u201d"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"21pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"196pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"EP \u2003\u2003Specifies options to report keypresses."]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"35pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"182pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"Default behaviour is to report keypresses"]},{"entry":[{},"belonging to the downloaded keytable only."]},{"entry":[{},"Values for this keyword are as follows:"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"175pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"KS \u2003Does not send notifications back on keys"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"49pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"168pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"presses for any key except Enter,"]},{"entry":[{},"backspace and escape"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"175pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"NP \u2003Sends a notification each time a key not"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"49pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"168pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"belonging to the specified key-table"]},{"entry":[{},"has been pressed"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"21pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"196pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"This pair is optional."]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"Returns:"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"21pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"196pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"Key"]},{"entry":[{},"READ \u2003\u2003the current buffer number."]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"7pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"182pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"CMP","compares two the translated keycode buffers"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"Parameters:"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"21pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"168pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"Key",{}]},{"entry":[{},"BN1","first buffer number"]},{"entry":[{},"BN2","second buffer number"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"Example:"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"21pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"196pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"CMD=CMP BN1=0 BN2=1"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"Returns:"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"21pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"168pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"Key",{}]},{"entry":[{},"CMP","\u201c1\u201d is ther is a match. \u201c0\u201d no match."]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"Exactly one of the two pair is acceptable."]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"7pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"182pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"CLR","clears a buffers."]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"Parameters:"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"21pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"168pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"Key",{}]},{"entry":[{},"BN","a buffer number"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"If absent all buffers are cleared."]},{"entry":[{},"Example:"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"21pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"196pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"CMD=CLR BN=1"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"7pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"210pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"Returns:"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"21pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"168pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"Key",{}]},{"entry":[{},"CLR","\u201cOK\u201d."]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"7pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"182pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"PAUSE","Suspends keyboard loopback mode."]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"No input parameters."]},{"entry":[{},"Returns:"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"21pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"35pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"161pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"Key",{}]},{"entry":[{},"PAUSE","\u201cOK\u201d."]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"7pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"35pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"175pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"RESUME","Re-enters keyboard loopback mode."]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"No input parameters."]},{"entry":[{},"Returns:"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"21pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"35pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"161pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"key",{}]},{"entry":[{},"RESUME","\u201cOK\u201d."]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"Error codes for EXCHANGE"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}]}}]}}},"Some error return values are defined for cases in which parameters do not comply with the protocol. So instead of the return keyvalue pairs described above, a keypair ERR=< . . . > is returned with the following values defined:",{"@attributes":{"id":"p-0090","num":"0089"},"tables":{"@attributes":{"id":"TABLE-US-00003","num":"00003"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0","pgwide":"1"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"259pt","align":"left"}},"thead":{"row":{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":"ERR= Description"}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"7pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"35pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"217pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"NOKT","No keytable is present. command cannot continue."]},{"entry":[{},"PE","In case the command is not recognized, or general"]},{"entry":[{},{},"parsing error."]},{"entry":[{},"NB","No buffer number has been specified in a READ"]},{"entry":[{},{},"command."]},{"entry":[{},"WB","An illegal buffer number has been specified."]},{"entry":[{},{},"one or more BN=xx keypairs will specify which"]},{"entry":[{},{},"buffer number is illegal."]},{"entry":[{},"MB","in case of a CMP command, one buffer number has"]},{"entry":[{},{},"not been specified."]},{"entry":[{},"NO","The unit is not operating in Secure Pin entry mode."]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"259pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":"Key\/value Description for CONTROL"}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"7pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"252pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"A sample transaction could be:"]},{"entry":[{},"Host \u2003\u2003\u2003\u2003DTU (Desk Top Unit)"]},{"entry":[{},"\u201cCTRL=ON\u201d"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"\u201cKT=060021\u201d"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"231pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"An attempt has been mad to enter Secure PIN ENtry Mode, and the"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"259pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":"unit sent back the Keytable necessary for entering a PIN."}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"7pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"252pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"All described parameter and return keys have a <Key>=<value> syntax."]},{"entry":[{},"CTRL=\u2003\u2003\u2003Description and values"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"7pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"210pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"ON","Enter Secure PIN Entry Mode (this is also referred"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"to as \u201cloopback mode\u201d)."]},{"entry":[{},"Parameters:"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"49pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"210pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"(none)"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"Returns:"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"49pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"210pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"Key"]},{"entry":[{},"KT \u2003Required Keytables, See KeytableDownloadFormat.txt"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"63pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"196pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"for more information."]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"7pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"252pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"OFF \u2003\u2003Exit Secure PIN Entry Mode"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"Parameters:"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"49pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"210pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"(none)"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"Returns:"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"49pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"210pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"(none)"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"7pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"252pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"KT \u2003\u2003\u2003Downloads a Keytable"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"77pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"182pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"Parameters:"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"84pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"175pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"Key"]},{"entry":[{},"KT \u2003a keytable specification, as described in"]},{"entry":[{},"KeytableDownloadFormat.txt"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"Returns:"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"49pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"210pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"(none)"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"7pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"252pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"INT \u2003\u2003\u2003Interrupts the current operation"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"21pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"238pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"Parameters:"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"231pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"(none)"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"21pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"238pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"Returns:"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"231pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"(none)"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"259pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":"Error codes for CONTROL"}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"245pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"With the exception of CTRL=ON, CONTROL messages do not use the channel"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"259pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":"to send results back, but set the return message return value as follows"}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"7pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"252pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"UT_SUCCESS \u2003Command completed ok."]},{"entry":[{},"UT_FAILURE \u2003Keytable download did not succeed. Bad KT=syntax"]},{"entry":[{},"UT_ACCESS \u2003Could not enter Sesure PIN Mode."]},{"entry":[{},"UT_EIO \u2003\u2003Cannot interrupt current operation."]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"49pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"210pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"Keytable download did not succeed. not in Secure PIN entry"]},{"entry":[{},"Mode"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"7pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"252pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"UT_NOTSUP \u2003Wrong command"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"259pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":"DM messages"}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"245pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"Messages to the DM have the following DM format:"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"7pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"252pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"sc.props=<SCBus properties>"]},{"entry":[{},"<SCBus properties> follow a format similar to the key\/value pairs as"]},{"entry":[{},"descrbied before, but since they are embedded in a more general framework,"]},{"entry":[{},"values are separated from keys by a \u2018:\u2019 instead of \u2018=\u2019 and pairs are"]},{"entry":[{},"separated by \u2018_\u2019 instead of spaces."]},{"entry":[{},"A property is always present, \u201csc.sn\u201d a serial number assuming values"]},{"entry":[{},"from 0 to 255, in HexDump format."]},{"entry":[{},"Example:"]},{"entry":[{},"device term=IEEE802.080020f56dc7 bus=sc addr=smartcard\\"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"245pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"sc.props=sc.sn:03_sc.kbd:060021"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"7pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"252pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"reports a USB type 6 keyboard, US keymap."]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"259pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":"<SCBus properties>"}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"7pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"252pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"sc. \u2003\u2003\u2003Description"]},{"entry":[{},"sn \u2003\u2003\u2003Internal serial number."]},{"entry":[{},"kbd \u2003\u2003\u2003Reports keyboard suitable for downloading a keytable"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"49pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"210pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"via CTRL=KT. it is keyboard spec that appears in that control"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"7pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"252pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"keypress \u2003\u2003Reports a keypress notification. Possible values are:"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"49pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"210pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"\u2018*\u2019 \u2003a character belonging to the PIN has been pressed"]},{"entry":[{},"\u2018E\u2019 \u2003ENTER has been pressed"]},{"entry":[{},"\u2018Q\u2019 \u2003ESCAPE has been pressed"]},{"entry":[{},"\u2018B\u2019 \u2003BACKSPACE has been pressed"]},{"entry":[{},"\u2018N\u2019 \u2003a character not belonging to the PIN has been pressed"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"7pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"252pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"status \u2003\u2003Tells SmartCard reader status. Values:"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"49pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"210pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"in \u2003a smartcard is in the reader or recognized"]},{"entry":[{},"out \u2003a smartcard is not present or has been removed"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"7pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"252pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"atr \u2003\u2003Reports the SmartCard ATR in HexDump format"]},{"entry":[{},"atr.hs \u2003\u2003ATR History, HexDump format."]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}]}}]}}},"Virtual Desktop System Architecture",{"@attributes":{"id":"p-0092","num":"0091"},"figref":"FIG. 7","b":["700","710"]},"The functionality of the virtual desktop system is partitioned between a display and input device such as a remote system and associated display device, and data sources or services such as a host system interconnected to the remote system via a communication link. The display and input device is a human interface device (HID). The system is partitioned such that state and computation functions have been removed from the HID and reside on data sources or services. One or more services communicate with one or more HIDs through a communication link such as network. An example of such a system is illustrated in , wherein the system comprises computational service providers  communicating data through communication link  to HIDs .","The computational power and state maintenance are provided by the service providers or services. The services are not tied to a specific computer, but may be distributed over one or more traditional desktop systems such as described in connection with , or with traditional servers. One computer may have one or more services, or a service may be implemented by one or more computers. The service provides computation, state and data to HIDs and the service is under the control of a common authority or manager. In , the services are provided by computers , , and . In addition to the services, a central data source can provide data to the HIDs from an external source such as for example the Internet or world wide web. The data source can also be broadcast entities such as those that broadcast data (e.g., television and radio signals).","Examples of services include X11\/Unix services, archived or live audio or video services, Windows NT service, Java\u2122 program execution service and others. A service herein is a process that provides output data and response to user requests and input. The service handles communication with an HID currently used by a user to access the service. This includes taking the output from the computational service and converting it to a standard protocol for the HID. The data protocol conversion is handled by a middleware layer, such as the X11 server, the Microsoft windows interface, video format transcoder, the OpenGL\u00ae interface, or a variant of the java.awt.graphics class within the service producer machine. The service machine handles the translation to and from a virtual desktop architecture wire protocol described further below.","Each service is provided by a computing device optimized for its performance. For example, a machine, such as an Enterprise class machine, may be used to provide X11\/Unix service, a Sun MediaCenter\u2122 may be used to provide video service, a Hydra based NT machine may provide applet program execution services. The service providing computer system can connect directly to the HIDs through the interconnect fabric. It is also possible for the service producer to be a proxy for another device providing the computational service, such as a database computer in a three-tier architecture, where the proxy computer might only generate queries and execute user interface code.","The interconnect fabric can comprise any of multiple suitable communication paths for carrying data between the services and the HIDs. In one embodiment the interconnect fabric is a local area network implemented as an Ethernet network. Any other local network may also be utilized. The architecture also contemplates the use of wide area networks, the Internet, the world wide web, and others. The interconnect fabric maybe implemented with a physical medium such as a wire or fiber optic cable, or it may be implemented in a wireless environment.","The interconnect fabric provides actively managed, low-latency, high-bandwidth communication between the HID and the services being accessed. One embodiment contemplates a single-level, switched network, with cooperative (as opposed to completing) network traffic. Dedicated or shared communications interconnects may also be used.","The HID is the means by which users access the computational services provided by the services.  illustrates HIDs ,  and . Each HID comprises a display , a keyboard , mouse , and audio speakers . The HID includes the electronics need to interface these devices to the interconnection fabric and to transmit to and receive data from the services.","A block diagram of an example embodiment of the HID is illustrated in . The components of the HID are coupled internally to a bus . Network control block  communicates to the interconnect fabric, such as an Ethernet, through line . An audio code  receives audio data on interface  and is coupled to network control block . Universal senal bus (USB) data communication is provided on lines  to a USB controller . The HID further comprises a embedded processor  such as a Sparcep processor with coupled flash memory  and dynamic random access memory (DRA . The USB controller , the network control block  and the embedded processor  are all coupled to the internal bus . A video controller , also coupled to the internal bus , can include an AIT RagePro+frame buffer controller which provides. Super video graphics array (SVGA) output on the line . National television standards committee (N qSC) data is provided in and out of the video controller through video decoder  and encoder  respectively. A smartcard interface  may also be coupled to the video controller .","Alternatively, the HID can comprise a single chip implementation as illustrated in . The single chip includes the necessary processing capability implemented via CPU  and graphics renderer . Chip memory  is provided, along with video controller\/interface . A internal bus (USB) controller  is provided to permit communication to a mouse, keyboard and other local devices attached to the HID. A sound controller  and interconnect interface  are also provided. The video interface shares memory  with the CPU  and graphics renderer . The software used in this embodiment may reside locally in on-volatile memory or it can be loaded through the interconnection interface when the device is powered.","The operation of the virtual desktop system architecture is described in co-pending U.S. patent application Ser. No 09\/063,335, filed Apr. 20, 1998, entitled \u201cMethod and Apparatus for Providing A Virua Desktop System Architecture\u201d and assigned to the present assignee, and incorporated herein by reference.","Thus, the dynamic downloading of keyboard keycode data to a networked client is described in conjunction with one or more specific embodiments. Me invention is defined by the claims and their full scope of equivalents."],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"BRIEF DESCRIPTION OF THE DRAWINGS","p":["These and other features, aspects and advantages of the present invention will become better understood with regard to the following description, appended claims and accompanying drawings where:",{"@attributes":{"id":"p-0025","num":"0024"},"figref":"FIG. 1"},{"@attributes":{"id":"p-0026","num":"0025"},"figref":"FIG. 2"},{"@attributes":{"id":"p-0027","num":"0026"},"figref":"FIG. 3"},{"@attributes":{"id":"p-0028","num":"0027"},"figref":"FIG. 4"},{"@attributes":{"id":"p-0029","num":"0028"},"figref":"FIG. 5"},{"@attributes":{"id":"p-0030","num":"0029"},"figref":"FIG. 6"},{"@attributes":{"id":"p-0031","num":"0030"},"figref":"FIG. 7"},{"@attributes":{"id":"p-0032","num":"0031"},"figref":"FIG. 8"},{"@attributes":{"id":"p-0033","num":"0032"},"figref":"FIG. 9"},{"@attributes":{"id":"p-0034","num":"0033"},"figref":"FIG. 10"}]},"DETDESC":[{},{}]}
