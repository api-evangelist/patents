---
title: Access to search results
abstract: A method and system for improving access to search results are described. Aspects of the disclosure minimize the delay between a search query and display of results responsive to the query by prerendering the search engine result page and passing a query to the search engine result page as soon as the query is entered. The search query may be provided to the search engine result page using a search application programming interface provided by scripts executing on the prerendered web page. Non-search-result content may be requested, downloaded, and rendered in the background prior to receiving the search query in order to minimize delay in the displaying of search results.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09104664&OS=09104664&RS=09104664
owner: Google Inc.
number: 09104664
owner_city: Mountain View
owner_country: US
publication_date: 20111007
---

{"@attributes":{"id":"description"},"BRFSUM":[{},{}],"heading":["BACKGROUND","BRIEF SUMMARY","DETAILED DESCRIPTION"],"p":["The advent of the World Wide Web has placed more information at the fingertips of today's users than ever before. Various websites cater to nearly every need and interest, providing access to reference information, business and financial documents, social networking, and more. Widespread broadband Internet access provides faster access to these sites than ever before.","However, as fast as current high-speed Internet services are, the act of browsing the web is not instantaneous. When a user selects a link on a page or enters a uniform resource locator (URL) in a text field, there is a delay while data is requested from the host, sent to the client, and rendered in the browser. The user is typically idle while waiting for their requested site to load. While high-speed Internet access may limit this delay to a few seconds, even this short delay can add up to thousands of man-hours of lost productivity each year.","A method and system for improving access to search results are provided in the disclosure herein. Aspects of this disclosure minimize the delay in accessing search results by prerendering elements of a search page. Aspects of the disclosure may provide a search query to the preloaded search page via a search application programming interface. The preloaded search web page may be made visible in response to the search query such that the user does not need to wait for rendering of the web page (e.g., fetching and rendering of page formatting, logos, scripts, and the like), thus allowing for immediate display of search results as soon as the results are received.","Aspects of the disclosure describe a computer-implemented method for improving access to search results. The method may include prerendering, using a processor, a search engine page in a hidden browser instance, such that at least some portion of content of the search engine page other than search results responsive to a search query is rendered, receiving the search query via a text entry field, passing the search query to the search engine page to perform a search using the search query, and merging the search engine page into an active browser instance to facilitate display of one or more search results responsive to the search query as the one or more search results are received via the search engine. The text entry field may allow for navigation within a web browser by entry of a website address. The text entry field may determine whether the text entry is a search query or a website address. The search query may be passed to the search engine page using a search application programming interface (API). The search engine page may be configured to receive a search query via a scripted interface provided by the search API. The method may further include configuring a web browser to use a particular search engine for the search engine page. The method may also include prerendering the search engine page in response to at least one of the browser executing, detecting interface focus on the text entry field, detecting text entry in the text entry field, determining that the text entry in the text entry field is not an address, and detecting an enter character in the text entry field. The search query may be passed to the search engine in response to at least one of detecting interface focus on the text entry field, detecting text entry in the text entry field, determining that the text entry in the text entry field is not an address, and detecting an enter character in the text entry field.","Aspects of the disclosure may also provide a processing system for improving access to search results. The processing system may include at least one processor and a memory coupled to the processor. The processor may be configured to execute a browser application, prerender a search engine page in a hidden instance of the browser application, such that at least some portion of content of the search engine page other than search results responsive to a search query is rendered, receive the search query via a text entry field, pass the search query to the search engine page to perform a search using the search query, and merge the search engine page into an active browser instance to facilitate display of one or more search results responsive to the search query as the one or more search results are received via the search engine. The text entry field may allow for navigation within a web browser by entry of a website address. The text entry field may determine whether the text entry is a search query or a website address. The search query may be passed to the search engine page using a search application programming interface (API). The search engine page may be configured to receive a search query via a scripted interface provided by the search API. The processor may be further configured to configure a web browser to use a particular search engine for the search engine page. The processor may also be configured to prerender the search engine page in response to at least one of the browser executing, detecting interface focus on the text entry field, detecting text entry in the text entry field, determining that the text entry in the text entry field is not an address, and detecting an enter character in the text entry field. The search query may be passed to the search engine in response to at least one of detecting interface focus on the text entry field, detecting text entry in the text entry field, determining that the text entry in the text entry field is not an address, and detecting an enter character in the text entry field.","Aspects of the disclosure may also provide a non-transitory computer readable storage medium containing instructions that, when executed by a processor cause the processor to perform a method. The method may include prerendering a search engine page in a hidden browser instance, such that at least some portion of content of the search engine page other than search results responsive to a search query is rendered, receiving the search query via a text entry field, passing the search query to the search engine page to perform a search using the search query, and merging the search engine page into an active browser instance to facilitate display of one or more search results responsive to the search query as the one or more search results are received via the search engine. The text entry field may allow for navigation within a web browser by entry of a website address. The text entry field may determine whether the text entry is a search query or a website address. The search query may be passed to the search engine page using a search application programming interface (API).","A method and system for improving access to search results are provided in the disclosure herein. Aspects of this disclosure minimize the delay in accessing search results by prerendering elements of a search page. Aspects of the disclosure may provide a search query to the preloaded search page via a search application programming interface. The preloaded search web page may be made visible in response to the search query such that the user does not need to wait for rendering of the web page (e.g., fetching and rendering of page formatting, logos, scripts, and the like), thus allowing for immediate display of search results as soon as the results are received. Various methods for performing the prerendering operation, configuring the prerendering operation, and managing the prerendering operation are described. For the purposes of this application, the term \u201cprerendering\u201d generally refers to the act of requesting all resources (e.g., any executable code, scripting language, files, and\/or interactive objects) necessary to load the content of a web address, and loading the content in a web browser instance.","As shown in , an example system  in accordance with one aspect includes a server  in communication with one or more client devices , ,  displaying web browser interfaces , , . The user of the client device  may browse to a web page located at \u201cwww.a.com\u201d as displayed on the web browser interface . That page includes content selectable by the user.","The client devices may be any device capable of managing data requests via a network . Examples of such client devices include a personal computer (PC) , a mobile device , or a server . The client devices , ,  are operable to perform prerendering operations during the execution of a web browser application. In some aspects, the client devices , ,  predict a search event by identifying cursor placement, text entry, or interface focus. The prerender operation may also be determined dynamically by, for example, a JAVASCRIPT code. While the concepts described herein are generally described with respect to a web browser interface , ,  executing on a client device , , , aspects of the disclosure can also be applied to any computing node capable of managing navigation events over a network, including a server .","The client devices , ,  may also comprise personal computers, personal digital assistants (\u201cPDA\u201d): tablet PCs, netbooks, laptops, mobile phones, etc. Indeed, client devices in accordance with the systems and methods described herein may comprise any device operative to process instructions and transmit data to and from humans and other computers including general purpose computers, network computers lacking local storage capability, etc.","The client devices , ,  may be operable to predict search operations to assist in data access on the network . For example, the client devices may predict a search operation to facilitate prerendering of a search page in order to decrease delay in the display of search results, thus improving the user's browsing experience. In some aspects, the server  provides navigation data which may be used by the client devices , ,  to predict a search operation. In some aspects, the client devices , ,  predict a search operation using local data.","The network , and the intervening nodes between the server  and the client devices , , , may comprise various configurations and use various protocols including the Internet, World Wide Web, intranets, virtual private networks, local Ethernet networks, private networks using communication protocols proprietary to one or more companies, cellular and wireless networks (e.g., Wi-Fi), instant messaging, hypertext transfer protocol (\u201cHTTP\u201d) and simple mail transfer protocol (\u201cSMTP\u201d), and various combinations of the foregoing. It should be appreciated that a typical system may include a large number of connected computers.","Although certain advantages are obtained when information is transmitted or received as noted above, other aspects of the system and method are not limited to any particular manner of transmission of information. For example, in some aspects, information may be sent via a medium such as an optical disk or portable drive. In other aspects, the information may be transmitted in a non-electronic format and manually entered into the system.","Although some functions are indicated as taking place on the server  and other functions are indicated as taking place on the client devices , , , various aspects of the system and method may be implemented by a single computer having a single processor. It should be appreciated that aspects of the system and method described with respect to the client may be implemented on the server, and vice-versa.",{"@attributes":{"id":"p-0022","num":"0021"},"figref":["FIG. 2","FIG. 1"],"b":["200","106","108","110","200","204","202","202","204","204","200"]},"The memory  may be any type of tangible memory operative to store information accessible by the processor , including a computer-readable medium, or other medium that stores data that may be read with the aid of an electronic device, such as a hard-drive, memory card, read-only memory (\u201cROM\u201d), random access memory (\u201cRAM\u201d), digital versatile disc (\u201cDVD\u201d) or other optical disks, as well as other write-capable and read-only memories. The system and method may include different combinations of the foregoing, whereby different portions of the instructions and data are stored on different types of media.","The instructions may be any set of instructions to be executed directly (such as machine code) or indirectly (such as scripts) by the processor . For example, the instructions may be stored as computer code on a computer-readable medium. In that regard, the terms \u201cinstructions\u201d and \u201cprograms\u201d may be used interchangeably herein. The instructions may be stored in object code format for direct processing by the processor , or in any other computer language including scripts or collections of independent source code modules that are interpreted on demand or compiled in advance. Functions, methods and routines of the instructions are explained in more detail below (see ).","Data may be retrieved, stored or modified by processor in accordance with the instructions. For instance, although the architecture is not limited by any particular data structure, the data may be stored in computer registers, in a relational database as a table having a plurality of different fields and records, Extensible Markup Language (\u201cXML\u201d) documents or flat files. The data may also be formatted in any computer readable format such as, but not limited to, binary values or Unicode. By further way of example only, image data may be stored as bitmaps comprised of grids of pixels that are stored in accordance with formats that are compressed or uncompressed, lossless (e.g., BMP) or lossy (e.g., JPEG), and bitmap or vector-based (e.g., SVG), as well as computer instructions for drawing graphics. The data may comprise any information sufficient to identify the relevant information, such as numbers, descriptive text, proprietary codes, references to data stored in other areas of the same memory or different memories (including other network locations) or information that is used by a function to calculate the relevant data.","The processor  may be any suitable processor, such as various commercially available general purpose processors. Alternatively, the processor  may be a dedicated controller such as an application-specific integrated circuit (\u201cASIC\u201d).","Although  functionally illustrates the processor and memory as being within a single block, it should be understood that the processor  and memory  may actually comprise multiple processors and memories that may or may not be stored within the same physical housing. Accordingly, references to a processor, computer or memory will be understood to include references to a collection of processors, computers or memories that may or may not operate in parallel.","The computing device  may be at one node of a network and be operative to directly and indirectly communicates with other nodes of the network. For example, the computing device  may comprise a web server that is operative to communicate with client devices via the network such that the computing device  uses the network to transmit and display information to a user on a display of the client device.","The system can provide privacy protections for the client data including, for example, anonymization of personally identifiable information, aggregation of data, filtering of sensitive information, encryption, hashing or filtering of sensitive information to remove personal attributes, time limitations on storage of information, and\/or limitations on data use or sharing. Data can be anonymized and aggregated such that individual client data is not revealed. A user may also be provided with an opportunity to opt in\/out to enable the collection of sharing of data.","In order to facilitate the prerendering and search operations of the computing device , the memory  may further comprise a browser , a navigation prediction module , a prerender module , a client navigation history , and an aggregate navigation history . Although a number of discrete modules (e.g., , , ,  and ) are identified in connection with , the functionality of these modules may overlap and\/or exist in a fewer or greater number of modules than what is shown, with such modules residing at one or more processing devices, which may be geographically dispersed.","The browser  provides for the display of a web page to a user of the client device via a visible browser instance  by sending and receiving data across a computer network. The web page may be received in response to a network request, such as a Hypertext Transfer Protocol (HTTP) GET request. The web page may be provided in a markup language, such as Hypertext Markup Language (HTML). The web page may also include various scripts, data, forms, and the like viewable and\/or executed in the visible browser instance , including interactive and\/or executable content such as ADOBE FLASH content, JAVASCRIPT content, and the like.","The browser  may further comprise a preloaded search page . The preloaded search page  represents a search engine for which non-search-result data (e.g., page formatting, logos, images, style sheets, scripts, and the like) has been requested and rendered by the prerender module . The preloaded search page  may be stored in a hidden rendering environment such that the preloaded search page  is not visible to a user until the user provides a search query. The hidden rendering environment refers to any representation that does not have an immediately apparent interface for the user. For example, the preloaded search page  may be stored within a browser \u201ctab\u201d that does not have an associated selection control in a web browser tab interface. The hidden rendering environment may be accessible via a menu or interface command, and in response to the selection of this interface command an interface for the prerendered content is generated, such as by adding a selection control for the prerendered content to the browser tab interface. The hidden rendering environment may also be provided by a variety of other methods suitable to receive and render the page environment while avoiding distraction of the user with potentially irrelevant content. The preloaded search page  may be stored in a completely executed and rendered format. For example, any executable code, scripting language, multimedia files, and\/or interactive objects may be fully requested and loaded in the prerendering environment provided by the hidden browser instance. In the event the user enters a search query, the browser  may execute the search query using the preloaded search page , and merge the preloaded search page  with the visible browser instance , thus providing search results responsive to the search query without the need to request the search engine page or wait for the search engine page to render. Throughout this process the preloaded search page  may issue the query over the network to the search engine, receive data providing results for the search query, blend the results into the preloaded search page , and make itself visible","The web browser  may further comprise a search application programming interface (API) . The search API  allows for a scripted interface with a search engine, such as the preloaded search page . When the browser  detects a search query (e.g., entered into a text field provided by the browser), the browser  may pass the search query to the preloaded search page  using the search API . For example, the search query may be passed to the preloaded search page  using an asynchronous JavaScript and extensible markup language (AJAX) protocol. The preloaded search page  may be specifically configured to communicate in this manner, allowing the client computing device  to provide a search query without the need to navigate to a new URL to perform the query. The search API  may be configurable within the browser . For example, a user may specify a particular search engine for use in search operations performed by the browser.","The memory  may further comprise a prerender module  to perform fetching of the preloaded search page  when identified by the navigation prediction module . In some aspects, the navigation prediction module  may identify when the user intends to perform a search operation for the purpose of prerendering the preloaded search page . For example, a search operation may be predicted when a text field receives focus. The prerender module  sends a network request for a web page, such as a search home page, if it is determined the user wishes to perform a search. The web page received in response to this request is stored in the browser  as the preloaded search page . In some aspects, the web page request generated by the prerender module  is identical to a standard web page request. In some aspects, the web page request generated by the prerender module  comprises certain features to facilitate the prerender process as described further below (see ).","In some aspects, the computing device  may determine a likely navigation event or search operation using a client navigation history, such as the client navigation history . The client navigation history  comprises a set of navigation events associated with past activity of the browser . The client navigation history  may track a set of visited URLs, also known as a \u201cclickstream,\u201d which tracks an order in which the user typically visits URLs (e.g., when the user visits a news website, they tend to next select a URL corresponding to the top story of the day), a set of access times associated with the URLs, and the like. The aggregate navigation history  may comprise similar data, but keyed to multiple users rather than a single user. The client navigation history  and aggregate navigation history  may represent data collected using one or more browser add-ons, scripts, or toolbars. In some aspects, the client navigation history  and\/or aggregate navigation history  are maintained on a remote server, such as the server , and provided to the computing device . The computing device  may maintain separate records to facilitate the prediction of a next likely navigation event or search operation, or it may act in concert with remotely stored data. In some aspects, only aggregate navigation history  pertaining to the particular web page the user is currently viewing is provided to the computing device .","As described above, the aggregate navigation history data  can be maintained in an anonymous fashion, with privacy protections for the individual client data that comprises the aggregate navigation history, including, for example, anonymization of personally identifiable information, aggregation of data, filtering of sensitive information, encryption, hashing or filtering of sensitive information to remove personal attributes, time limitations on storage of information, and\/or limitations on data use or sharing. The aggregate navigation history  data can be anonymized and aggregated such that individual client data is not revealed.",{"@attributes":{"id":"p-0037","num":"0036"},"figref":"FIG. 3","b":["300","218","300","300","200","300","206","208","210","300","200","300","104"]},"At stage , the computing device  determines a next navigation event, such as a search operation, within a web browser. The next navigation event may be received from a navigation prediction element, such as the navigation prediction module , or the next navigation event may be embedded within the web page displaying within the web browser. For example, a search engine may embed a tag within a set of search results to indicate that a particular link associated with the most relevant result should be prerendered by the web browser. A method for embedding prerendering tags within a web page is described below (see ).","At stage , the computing device  requests the content associated with the navigation event or search page identified at stage . The request may comprise a hypertext transfer protocol (HTTP) GET request, a file transfer protocol (FTP) request, or any other network data access request as known in the art. A first set of web content may be provided in response to a HTTP GET request, which may then lead to additional HTTP GET requests in accordance with the first set of web content. For example, a HTTP GET request may result in a base search page being sent to the web browser, which may trigger other page loading operations, such as additional GET requests. The base search page may have multiple embedded images, which are then fetched and rendered using HTTP GET requests for each image. The prerendering process as described may request the full search page, including associated scripts, and then execute those scripts.","At stage , the computing device  renders content associated with the navigation event determined at stage . The content may be rendered in an alternate instance of the web browser that is hidden from the user. For example, the content may be rendered by an alternate process or in a hidden web browser tab.","In some aspects, the rendered content may include a redirection operation. An example of a redirection operation is when the act of loading a first page, for instance, www.a.com, causes the browser to load a second page, such as www.b.com. Redirection may occur in response to a HTML tag, a JAVASCRIPT navigation command, or the like. In the case a prerendered page requests a redirection operation, said redirection operation would also occur in the alternate instance.","In some aspects, a first redirection operation may lead to subsequent redirections. For example, www.a.com may lead to www.b.com, which leads to www.c.com. Aspects of the system and method may account for this fact, such as by storing a history of redirection operations and prerendering the last page in a series in response to a first page being identified to prerender. In some aspects, the method  may short-circuit redirection operations by not prerendering intermediate pages when the destination result page (i.e. the page at the end of the redirection operations) is known, and only prerendering the final page in the series.","At stage , the computing device  may determine whether the user has selected the link identified at stage  or performed a search operation within a particular time period. For example, the method  may wait for 10 seconds, 20 seconds, 30 seconds, one minute, 5 minutes, or any other time frame. In some aspects, the time frame may be configurable within an options menu associated with the web browser. The time frame may also be specified by the server . For example, the server  may embed a timeout value within a prerender tag, indicating the length of time the content associated with the tag should be held before being discarded. If the user has selected the link within the time period, the method  proceeds to stage . Otherwise, the method  proceeds to stage .","At stage , the computing device  discards the prerendered content. The prerendered content is allowed to expire in this manner in order to free up system resources associated with the prerender operation and prevent the user from being presented with stale data. In some aspects, a different expiration period may be specified for different types of data. For example, data that is likely to rapidly change, such as breaking news articles, stock quotes, syndication feeds, and the like, is more likely to grow stale quickly, and might be associated with a shorter expiration timer, such as 10 seconds, 20 seconds, or one minute. Data that is less likely to change, such as reference articles, archives, box scores, and the like, might be associated with a longer expiration timer, such as an hour, 6 hours, 24 hours, a week, or the like. In some aspects, the wait time is based on a page type. For example, if the user is viewing a lengthy news article, a longer wait time may be specified when prerendering a next page of the article to provide the user time to read the current page of the article before selecting the next page. In some aspects, the wait time is determined by a time-to-live (TTL) parameter embedded within the page. In some aspects, the wait time is hard coded within the browser. The method  then ends after the prerendered content is discarded, though in some aspects the method  may repeat indefinitely as the user browses web content.","At stage , the computing device  merges the alternate instance containing the prerendered content into the visible user instance, in response to the user performing a search operation. In this manner, the computing device  displays the content associated with the navigation event instantly, without a delay while the page data is requested from and received from the host server. Search results may be merged into the search page as the results are received from a server. In some aspects, the user may select the navigation event prior to the prerendering operation completing. In such cases, the partially loaded page would be merged into the current user instance. The partially loaded page would then continue to load in the current user instance as normal. The method  then ends after making the prerendered content available to the user.",{"@attributes":{"id":"p-0046","num":"0045"},"figref":"FIG. 4","b":["400","402","402"]},{"@attributes":{"id":"p-0047","num":"0046"},"figref":"FIG. 5","b":["500","500","502","504","504","502","504"]},{"@attributes":{"id":"p-0048","num":"0047"},"figref":"FIG. 6","b":["600","600"]},"At stage , the search engine page is prerendered in a hidden browser instance. The search engine page may be prerendered in response to user input, or it may be prerendered when the browser is loaded. For example, the search engine page may be prerendered when a text entry field that accepts search queries receives focus, when the user enters at least one text character in the text entry field, or after at least one \u201cspacebar\u201d character is entered in the text entry field (to distinguish the text entry from a URL). The prerendering process of the search engine may include requesting any or all of page formatting instructions, images, logos, scripts, style sheets, or any other content that must be received in order to render the web page, aside from the search results responsive to the query.","At stage , a search query is received. The search query may be received in response to the user entering text in the text field, or the query may be identified after the user performs a selection operation, such as pressing the \u201center\u201d key after entering text in the text field. The search query may also be identified via other methods, such as by detecting a \u201cspacebar\u201d character in a text entry field. In some aspects, the search query is only sent to the search engine after the \u201center\u201d key has been pressed and the text string is determined to not be a URL, in order to preserve user privacy (e.g., to avoid sending URLs typed by the user for navigation purposes to the server as search engine queries).","At stage , the search query is passed to the prerendered search engine page. The search query may be communicated to the prerendered search page using a search API, where the query is sent via a scripting interface. For example, the query may be sent to the search engine via an AJAX interface on the search engine page.","At stage , the prerendered search page is merged into the active browser instance to display the search results. Search results may thus be instantly presented to the user as they are received from the search engine server, as the other content of the search engine page has already been rendered.","The stages of the illustrated methods are not intended to be limiting. The functionality of the methods can exist in a fewer or greater number of stages than what is shown and, even with the depicted methods, the particular order of events may be different from what is shown in the figures.","The systems and methods described herein advantageously provide for faster display of search results. Since the non-search-result content of the search engine page is prerendered, delay associated with requesting, downloading, and rendering such content is eliminated. This allows display of search results as soon as the results are received from the search engine server. Display of search results in such a manner may save multiple seconds of delay during which the user would otherwise be idle while waiting for the page data to render.","As these and other variations and combinations of the features discussed above can be utilized without departing from the disclosure as defined by the claims, the foregoing description of the embodiments should be taken by way of illustration rather than by way of limitation of the disclosure as defined by the claims. It will also be understood that the provision of examples of the disclosure (as well as clauses phrased as \u201csuch as,\u201d \u201ce.g.\u201d, \u201cincluding\u201d and the like) should not be interpreted as limiting the disclosure to the specific examples; rather, the examples are intended to illustrate only some of many possible embodiments."],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"BRIEF DESCRIPTION OF THE DRAWINGS","p":[{"@attributes":{"id":"p-0008","num":"0007"},"figref":"FIG. 1"},{"@attributes":{"id":"p-0009","num":"0008"},"figref":"FIG. 2"},{"@attributes":{"id":"p-0010","num":"0009"},"figref":"FIG. 3"},{"@attributes":{"id":"p-0011","num":"0010"},"figref":"FIG. 4"},{"@attributes":{"id":"p-0012","num":"0011"},"figref":"FIG. 5"},{"@attributes":{"id":"p-0013","num":"0012"},"figref":"FIG. 6"}]},"DETDESC":[{},{}]}
