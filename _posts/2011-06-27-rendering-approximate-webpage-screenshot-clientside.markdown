---
title: Rendering approximate webpage screenshot client-side
abstract: Methods, systems, and apparatuses, including computer programs encoded on a computer storage medium, for rendering an approximate webpage screenshot client-side are disclosed. A system may receive an indication to render a screenshot of a webpage presented on the client device, and create a canvas at the client device. The system may traverse a document object model (DOM) of the webpage, whereby for each of one or more nodes in the DOM, the system may identify a property of a respective node and render data in the respective node on the canvas based on the property.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08286076&OS=08286076&RS=08286076
owner: Google Inc.
number: 08286076
owner_city: Mountain View
owner_country: US
publication_date: 20110627
---

{"@attributes":{"id":"description"},"BRFSUM":[{},{}],"heading":["CROSS-REFERENCE TO RELATED APPLICATIONS","BACKGROUND","BRIEF SUMMARY","DETAILED DESCRIPTION OF THE INVENTION"],"p":["This application claims priority to co-pending Polish Patent Application No. P395376, filed Jun. 22, 2011, which is incorporated by reference herein in its entirety.","1. Field","This invention relates generally to rendering approximate webpage screenshots.","2. Background","Capturing screen shots is not new in the world of computing. There have been many techniques used to capture what is displayed on a user's local device, such as pressing the \u201cPrint Screen\u201d button on the typical computer keyboard. Many of these techniques however are not sufficient when one desires to capture only a screenshot of a particular application page, such as a webpage the user is viewing (rather than the entire viewing area as may be displayed in a user's monitor). While currently there are techniques for capturing screen shots of web pages, these techniques often require that the user install an additional application, extension, or other code to capture the image that the user is viewing.","Amongst the problems with these approaches beyond the additional time it takes for the user to install whatever code is necessary to capture the screenshot is that many users have become increasingly wary of installing such applications or code onto their computers, fearful they may unintentionally download infected code that may be malware. As a result, rather than capturing the screenshot of the webpage, the user will often forego the process of capturing the screenshot altogether. This could be detrimental, for example, to a website host who may desire that a screenshot is captured of a webpage the user is viewing so that the host may have a better idea of what problems a user may be experiencing.","Methods, systems, and computer program products for rendering an approximate webpage screenshot client-side are disclosed herein.","According to an example embodiment, a computer-implemented method is disclosed. An indication to render a screenshot of a webpage presented on a client device may be received at the client device. A canvas may be created at the client device. A document object model (DOM) of the webpage may be traversed. For each of one or more nodes in the DOM: a property of a respective node may be identified and data in the respective node may be rendered on the canvas based on the property.","According to an example embodiment, a computer storage medium encoded with a computer program is disclosed, the program comprising instructions that when executed by one or more computers cause the one or more computers to perform operations. An indication to render a screenshot of a webpage presented on the client device may be received at a client device. A canvas may be created at the client device. A document object model (DOM) of the webpage may be traversed. For each of one or more nodes in the DOM: a property of a respective node may be identified, and data in the respective node may be rendered on the canvas based on the property.","According to an example embodiment a system comprising one or more computers is disclosed. A computer-readable medium may be coupled to the one or more computers having instructions stored thereon which, when executed by the one or more computers, cause the one or more computers to perform operations. An indication to render a screenshot of a webpage presented on the client device may be received at a client device. A canvas may be created at the client device. A document object model (DOM) of the webpage may be traversed. For each of one or more nodes in the DOM a property of a respective node may be identified, and data in the respective node may be rendered on the canvas based on the property.","Other embodiments of this aspect include corresponding systems, apparatus, and computer programs, configured to perform the actions of the methods, encoded on computer storage devices. Further embodiments, features, and advantages, as well as the structure and operation of the various embodiments are described in detail below with reference to accompanying drawings.","While the present invention is described herein with reference to illustrative embodiments for particular applications, it should be understood that embodiments are not limited thereto. Other embodiments are possible, and modifications can be made to the embodiments within the spirit and scope of the teachings herein and additional fields in which the embodiments would be of significant utility. Further, when a particular feature, structure, or characteristic is described in connection with an embodiment, it is submitted that it is within the knowledge of one skilled in the relevant art to affect such feature, structure, or characteristic in connection with other embodiments whether or not explicitly described.","It would also be apparent to one of skill in the relevant art that the embodiments, as described herein, can be implemented in many different embodiments of software, hardware, firmware, and\/or the entities illustrated in the figures. Any actual software code with the specialized control of hardware to implement embodiments is not limiting of the detailed description. Thus, the operational behavior of embodiments will be described with the understanding that modifications and variations of the embodiments are possible, given the level of detail presented herein.","In the detailed description herein, references to \u201cone embodiment,\u201d \u201can embodiment,\u201d \u201can example embodiment,\u201d etc., indicate that the embodiment described may include a particular feature, structure, or characteristic, but every embodiment may not necessarily include the particular feature, structure, or characteristic. Moreover, such phrases are not necessarily referring to the same embodiment. Further, when a particular feature, structure, or characteristic is described in connection with an embodiment, it is submitted that it is within the knowledge of one skilled in the art to affect such feature, structure, or characteristic in connection with other embodiments whether or not explicitly described.","Disclosed herein is a system for rendering an approximate webpage screenshot client-side. A screenshot may include any image taken to record the visible items on a user's screen, monitor or other display device, or portion thereof. The embodiments disclosed herein may capture the contents of the pixels that are rendered for a user. For example, if a user is viewing a webpage (or other application), the user and\/or the webhost may desire that the user captures a screen shot of only that which the user is seeing on the webpage.","There are many reasons why it may be beneficial to have a screenshot of a particular webpage or website. For example, screenshots may be used by users to explain particular features of an application. Screenshots may also be useful to archive the current state of a webpage, as well as being useful in troubleshooting problems with a website. In troubleshooting a website or other web-enabled application, the content provider may desire that a screenshot be taken of the user's environment to more easily identify and\/or resolve the user's problem.","In troubleshooting a website, the website host may then desire to make the process of taking a screenshot as easy and as seamless for the user as possible. For example, the content provider would prefer to be able to render screenshots of the user's environment without requiring the user to download and install any additional code. Because installing additional code may be enough reason for many users to avoid or abandon the troubleshooting process altogether. Many users may, for example, be wary of downloading unknown or additional code onto their machines because they do not want to unintentionally install malware on their machines.",{"@attributes":{"id":"p-0026","num":"0025"},"figref":"FIG. 1","b":"100"},"To render an approximate screenshot of the webpage, the DOM may be traversed to identify and collect information about the screen elements appearing in the webpage. Then, as the nodes of the DOM are being traversed, the corresponding screen elements may be rendered in a canvas, thus resulting in an approximate webpage screenshot being rendered. According to an example embodiment, the screen shot rendering may be done on the client-side without requiring a client device or user to download or install additional code for capabilities that may not already be supported by the client's or user's browser.","A webpage , as shown in the example , may include any arrangement of visual elements viewable through a browser. The webpage  may be viewable by a user of a computer, such as a laptop, desktop or tablet computer, or through a mobile phone. The webpage  may include any varying number of visual elements, including text and images (as shown in the exemplary webpage ). The webpage  as discussed herein may include other elements or nodes including, but not limited to, text and image elements, such as form elements, links, videos, frames\/iframes containing other documents or webpages, active elements. Herein text and images are used as examples of elements, but one skilled in the art will recognize that the embodiments described herein are not limited to only text and image elements or nodes. The webpage  is thought to include any page(s) of a website accessible through a network such as an intranet or the Internet.","The webpage  may correspond to a document object model (DOM) . The DOM  may include any convention for representing the objects that may be rendered in the webpage . According to an example embodiment, the DOM  may include a cross-platform, language-independent convention for interacting with objects in HTML, XHTML and XML documents.","The DOM  may include any number of DOM nodes A-F that correspond to one or more visual elements (e.g., characteristics, nodes or other features) of the webpage . In the example embodiment shown in , the nodes A and B may include Box elements which may include any visual element that may be rendered in the webpage . Or for example, the box elements may include a container or storage indicating that several elements are grouped together in the rendering of a webpage. For example, the box B may group together nodes E and F.","The text nodes C, D and F may include or correspond a text element that corresponds to text rendered on the webpage , while the DOM node E may include an image element that corresponds to an image rendered on the webpage . The term \u2018element\u2019 when used herein is used to capture any characteristic of a webpage  that may be represented in a DOM , and may include elements and\/or nodes as associated with the text, images and\/or other features. According to an example embodiment, the DOM nodes A-F may be arranged in a tree format.","As shown in the system , the DOM nodes A-F may include some property that is associated with the particular DOM node. The property may be used to determine how, when and\/or where to render the corresponding screen element on the webpage . The properties may include a size, border, location, font, placement or other properties of the element. For example, the property for DOM node B may indicate the font of the text to be \u201cTimes New Roman\u201d, the size to be \u201c12\u201d, the text is \u2018bolded and underlined\u2019 and the text is \u2018left justified\u2019 within a text box that has a height of 65 and a width of 60. According to an example embodiment, the properties may include cascading style sheet (CSS) properties. The CSS properties may describe the presentation of the webpage . In another example embodiment, it may be that a text nodes C, D and F, for example, may only include text and the properties that define how the text is to be rendered may be included with another element (not shown) associated with the text nodes. Other example DOMs  may include different nodes A-F and arrangements.","A canvas  may include an element or region where a screenshot  is rendered. The canvas  may include a drawable region in which the screen elements (as they correspond to the DOM nodes A-F) may be rendered. The canvas , according to an example embodiment may be rendered in a browser. According to an example embodiment, the canvas  may include a canvas element of the hyper-text markup language (HTML). The canvas element may allow dimensions of the canvas  to be specified and elements drawn using function calls accessible through client-side code or a client-side scripting language, such as ECMAScript (European Computer Manufacturers Association). Example client-side scripting languages include, but are not limited to, Jscript, VBScript and JavaScript. One skilled in the art will recognize that other client-side scripting languages or code may be used with the embodiments described herein.","Most browsers on which the webpage  is viewed may support the canvas functionality, such that implementing the canvas  with the canvas element of HTML (HTML as used herein may include any version of HTML that includes the canvas functionality described herein, including HTML  and future versions of HTML), for example, may the screenshot  of the webpage  (including a portion thereof) to be rendered without downloading or otherwise installing any additional plug-ins or other elements into their browser. According to example embodiments, the canvas  may include an HTML CanvasElement or FlashCanvas. According to an example embodiment, FlashCanvas can be a library that adds HTML canvas support to a browser or other webpage viewer. FlashCanvas may, for example, render shapes and images using a Flash application programming interface (API).","The screenshot  may include an approximate screenshot of the webpage . As referenced above, the screenshot  may include a rendering of the DOM nodes A-F of the webpage . Through the process of rendering the DOM nodes A-F, rather than capturing an exact image of the webpage , the screenshot  may be an approximate representation or approximate screenshot of the webpage . As referenced above however, the screenshot  may be advantageous such that no additional applications, plug-in or other code may be necessary to capture or render and then display the screenshot  (of the webpage ).",{"@attributes":{"id":"p-0036","num":"0035"},"figref":"FIG. 2","b":["200","202","204","208","206"]},"The client  may include any computer, processor or other device on which a user may access a browser . The client  may include, for example, a laptop or mobile phone on which a user may view webpages () on the browser . Examples of the embodiments for the client , the server , and methods or any parts or function(s) thereof may be implemented using hardware, software modules, firmware, tangible computer readable or computer usable storage media having instructions stored thereon, or a combination thereof and may be implemented in one or more computer systems or other processing systems.","According to an example embodiment, the browser  may include any device, application or module that enables a user or computer to navigate and\/or retrieve data from another data source, typically over a network. The browser  may include, but is not limited to, any conventional web browser such as those that are widely available, such Chrome\u00ae, Safari\u00ae, Firefox\u00ae, and\/or Internet Explorer\u00ae.","The browser  may include or otherwise be capable of rendering the text and images of a webpage that may be encoded within HTML and a scripting language such as JavaScript\u00ae. The browser  may be configured to render the webpage  from the DOM  onto the canvas element . According to a further embodiment, the browser  may also be configured to use any number of protocols, known now or developed in the future, including protocols such as HTTP, FTP, and underlying protocols such as TCP\/IP or UDP.","The browser  may further communicate with an input (not shown) to allow a user to input data, commands, or otherwise provide other control information to the browser . The browser  may request content from the server , based on user input. The server  may respond to the request by providing content back to the browser  and the client  via the network . The browser  may also be configured to retrieve content from the server  without user intervention. For example, the server  may push and\/or update data in the browser .","The network  may include any telecommunications or computer network that communicatively couples the client  to the server . In an example embodiment, the network(s)  may include any type of data network or combination of data networks including, but not limited to, a local area network (LAN), a medium area network, or a wide area network such as the Internet. The network , for example, may be a wired or wireless network that allows the client  and the server  to communicate with each other. The network  may further support world-wide-web (e.g. Internet) protocols and services. For example, the client  may include mobile phone or tablet PC that is wirelessly connected to the Internet and the server  through a service provider that maintains the network .","The server  may include a server that provides the webpage , or a portion thereof, to the client  over the network . For example, using the client device , a user may browse a website via the browser , the data of the website may be provided from the server  over the network  that connects the client  to the Internet. The website may include one or more webpages, including the webpage  as hosted by, or otherwise provided by the server . The server  may include one or more web servers, data servers and\/or other servers that include information used to generate the webpage . According to an example embodiment, the server  may include a plurality of servers of a server farm or other network and\/or service provider host.","The server  may provide content (e.g., web pages, applications (or \u201capps\u201d), audio, video, etc.) that may be retrieved or otherwise accessed by the client  over the network . The content accessed by the client  may be viewed, used, displayed or otherwise disseminated via the browser .","In an example embodiment, the client  and the server  may each be implemented on a computing device. Such a computing device may include, but is not limited to, a personal computer, mobile device such as a mobile phone, workstation, tablet computer, embedded system, game console, television, set-top box, or any other computing device that can support web browsing. Such a computing device may include, but is not limited to, a device having a processor and memory for executing and storing instructions. Such a computing device may include software, firmware, and hardware. The computing device may also have multiple processors and multiple shared or separate memory components. Software may include one or more applications and an operating system. Hardware can include, but is not limited to, a processor, memory and graphical user interface display. An optional input device, such as a mouse or touch screen, may be used. According to an example embodiment, the system  functionality as discussed above, may be performed at least in part on the client  and\/or the server , communicating over the network .",{"@attributes":{"id":"p-0045","num":"0044"},"figref":["FIG. 3","FIGS. 1 and 2"],"b":["300","302","202","204","102","102","208","102"]},"At step , a canvas may be created at the client device. For example, the client  may create a canvas element  at the client . According to an example embodiment, the server  may indicate the height and width, or other size dimensions, of the canvas  upon creation. In another example embodiment, the client  and\/or the browser  operating on the client  may have been previously loaded with code that is configured to render the screenshot  upon the occurrence of an error or other request (e.g., by the user and\/or the server ). Then for example, the preconfigured code may create the canvas  on the client .","At step , a DOM tree of the webpage may be traversed. As referenced above, the DOM  may be used to render the webpage  in the browser . According to an example embodiment, code such as JavaScript\u00ae code may be provided by the server  to the client  over the network . This code may then traverse the DOM  of the webpage . Traversing the DOM  may include stepping through the DOM nodes A-F to determine which DOM nodes A-F correspond to screen elements.","According to an example embodiment, traversing the DOM  may include determining whether images are used on the webpage  based on corresponding DOM image nodes (e.g., D and E) existing in the DOM . If it is found that images are used on the webpage , the code may then request the images. For example, the code may request the images from the server . There may be two kinds of images that are used on the webpage , same-domain images and cross-domain images.","Same-domain images may include those images that exist on or with the same domain as the webpage . For example, if the webpage  was being provided by google.com, then a same-domain image may be found on a google.com server, perhaps under a subdirectoiy such google.com\/private\/directory\/images. Hence the images may reside within the same domain as the webpage .","Cross-domain images may include those images that do not exist on or with the same domain as the webpage  (e.g., all the images that are not same-domain images). For example, if the webpage  was being provided by google.com, then a cross-domain image may be have been pulled from or otherwise exist on a different server, such as from espn.com. Then for example, with cross-domain images, the images may exist and be retrieved or requested from the foreign server on which they reside. A servlet (e.g., Java\u00ae servlet) or other proxy may be used to retrieve the cross-domain images used in the webpage  and store them for later use. For example, in those portions of the DOM  where a reference or call is made to a cross-domain image (e.g., on espn.com), a proxy servlet may be located on the google.com domain. Then for example, when the image from the foreign server is called by client code, the proxy servlet may request the image from the foreign server, and the image may be rendered.","Cross-domain images, unlike same-domain images, may need to be retrieved from their foreign server(s) prior to being rendered in the screenshot  because the cross-domain nature of the images may cause a security exception with the canvas . However, by retrieving the cross-domain images prior to rendering the screenshot , and storing the images and using a proxy address, when the screenshot  of the webpage  is rendered on the canvas , the security exception may be avoided. According to an example embodiment, the images may be stored locally in a random access memory (RAM). Or for example, the images may be downloaded from an image proxy, and converted to an encoded string (e.g., a base-64 encoded string) and may exist as variables within a JavaScript\u00ae or other scripting program being run.","According to an example embodiment, the canvas  used to draw or render the screenshot  may not exist on the same-domain as the webpage . Then for example, an iFrame element (e.g., from HTML) may be used, where one or more frames may be used for the canvas . The canvas  may then be rendered and\/or otherwise displayed in the corresponding frame(s) of the iFrame element. However, whether or not the canvas  is rendered using an iFrame element may not make any visual difference to a user who is viewing the screenshot  on the browser .","After retrieving whatever images may exist in the DOM , the system (e.g., ) may then traverse the DOM  node by node (e.g., A-F). At step , a property for a respective node may be identified. For example, the property for DOM node A may be identified. As discussed above, the property may include any number of visual and\/or display properties corresponding to how the image or text element is to be rendered. For example, the properties may include size, location, font, color, texture and\/or other properties. In an example embodiment, the DOM nodes A-F may include a significant number of properties only a few of which may be used and\/or retrieved to render the screenshot  on the canvas .","At step , data may be rendered in the respective node on the canvas based on the property. For example, after identifying the property of a DOM node, the corresponding screen element may be rendered on the canvas  as the screenshot . This rendering may include a rendering of both the text elements and the image elements as they correspond to the DOM nodes A-F being traversed. The rendered screenshot  of the webpage  may then be used by the website host, for example, to identify, correct and\/or otherwise analyze the error encountered by the user.","According to an example embodiment, additional steps may be performed to render the text elements of the screenshot . The text elements may require additional steps because the canvas  may not allow the system  to wrap text when rendering the screenshot  of the webpage . To overcome this limitation of the canvas , the system  may use, for example, an additional algorithm or other sequence of steps. According to an example embodiment, the system  may use one or more of two algorithms, a locate lines algorithm and\/or a locate words algorithm. The locate lines algorithm may for example be used with a certain type of browser (e.g., Chrome\u00ae, Safari\u00ae and Firefox\u00ae), which has a canvas API (application programming interface). While the locate words algorithm may be used with another type of browser (e.g., Internet Explorer\u00ae) which may not support the canvas API but may support another text API such as TextRange API.","Using the locate lines algorithm, the system  may determine (e.g., from the property of a DOM node ) the size of a text box corresponding to a text element and the size of the text being used within the text box. One example embodiment of this would be to use a canvas method, such as canvas.measureText, the system  may determine the width of text (in pixels). The system  may then determine the width of the box as it relates to the size of the text. For example, the system  may try inserting longer and longer lines of text to determine the box's width (without displaying the trial text on the canvas  so it may be visible to the user). The system  may then render the text element in the appropriate text box and wrap, or otherwise rendering the next text on the following line based on the determined width of the text box and width of the text. This may be reason why the screenshot  may be an approximation of the webpage , and not an exact replica. There may be some slight variation in the width lengths as determined due to the more restrictive nature of rendering the screenshot  in canvas .","Using the locate words algorithm, the system  may create ranges of text on the canvas . A range of text may include a beginning and an end. Using the locate words algorithm, the system  may place one word on the canvas  at a time, until the end of the respective text box and\/or canvas  is reached, at which point the system  may continue placing words on the next line. This may be another reason why the screenshot  may be an approximation of the webpage , and not an exact replica. There may be some slight variation in the width lengths as determined due to the more restrictive nature of rendering the screenshot  in canvas .","As shown in the method , after data has been rendered in step , the method may loop back to step  to identify a property of the next node. The steps  and  may repeat until the processing has completed, at which point the method  ends.",{"@attributes":{"id":"p-0059","num":"0058"},"figref":["FIG. 4A","FIG. 4A"],"b":["400","400","402","404","400","404","400","400","404","402","400"]},"According to an exemplary embodiment, the system may also provide the user with a feedback box , where the user may manually enter a description of the problem the user is experiencing. The feedback box , along with the user's description and rendered screenshot of the webpage  may then be provided to the webhost or other system for troubleshooting the user's issue(s).",{"@attributes":{"id":"p-0061","num":"0060"},"figref":["FIG. 4B","FIG. 4B","FIG. 4A"],"b":["420","430","400","420","404","402","400","420","406","400","432","432","206","208","400","420","400","430"]},{"@attributes":{"id":"p-0062","num":"0061"},"figref":["FIG. 5","FIGS. 1-4"],"b":["500","202","208","500"]},"If programmable logic is used, such logic may execute on a commercially available processing platform or a special purpose device. One of ordinary skill in the art may appreciate that embodiments of the disclosed subject matter can be practiced with various computer system configurations, including multi-core multiprocessor systems, minicomputers, mainframe computers, computers linked or clustered with distributed functions, as well as pervasive or miniature computers that may be embedded into virtually any device.","For instance, a computing device having at least one processor device and a memory may be used to implement the above-described embodiments. A processor device may be a single processor, a plurality of processors, or combinations thereof. Processor devices may have one or more processor \u201ccores.\u201d","Various embodiments of the invention are described in terms of this example computer system . After reading this description, it will become apparent to a person skilled in the relevant art how to implement the invention using other computer systems and\/or computer architectures. Although operations may be described as a sequential process, some of the operations may in fact be performed in parallel, concurrently, and\/or in a distributed environment, and with program code stored locally or remotely for access by single or multi-processor machines. In addition, in some embodiments the order of operations may be rearranged without departing from the spirit of the disclosed subject matter.","Processor device  may be a special purpose or a general-purpose processor device. As will be appreciated by persons skilled in the relevant art, processor device  may also be a single processor in a multi-core\/multiprocessor system, such system operating alone, or in a cluster of computing devices operating in a cluster or server farm. Processor device  is connected to a communication infrastructure , for example, a bus, message queue, network, or multi-core message-passing scheme.","Computer system  also includes a main memory , for example, random access memory (RAM), and may also include a secondary memory . Secondary memory  may include, for example, a hard disk drive , removable storage drive . Removable storage drive  may comprise a floppy disk drive, a magnetic tape drive, an optical disk drive, a flash memory, or the like. The removable storage drive  reads from and\/or writes to a removable storage unit  in a well-known manner. Removable storage unit  may comprise a floppy disk, magnetic tape, optical disk, etc. which is read by and written to by removable storage drive . As will be appreciated by persons skilled in the relevant art, removable storage unit  includes a computer usable storage medium having stored therein computer software and\/or data.","Computer system  (optionally) includes a display interface  (which may include input and output devices such as keyboards, mice, etc.) that forwards graphics, text, and other data from communication infrastructure  (or from a frame buffer not shown) for display on display unit .","In alternative implementations, secondary memory  may include other similar means for allowing computer programs or other instructions to be loaded into computer system . Such means may include, for example, a removable storage unit  and an interface . Examples of such means may include a program cartridge and cartridge interface (such as that found in video game devices), a removable memory chip (such as an EPROM, or PROM) and associated socket, and other removable storage units  and interfaces  which allow software and data to be transferred from the removable storage unit  to computer system .","Computer system  may also include a communications interface . Communications interface  allows software and data to be transferred between computer system  and external devices. Communications interface  may include a modem, a network interface (such as an Ethernet card), a communications port, a PCMCIA slot and card, or the like. Software and data transferred via communications interface  may be in the form of signals, which may be electronic, electromagnetic, optical, or other signals capable of being received by communications interface . These signals may be provided to communications interface  via a communications path . Communications path  carries signals and may be implemented using wire or cable, fiber optics, a phone line, a cellular phone link, an RF link or other communications channels.","In this document, the terms \u201ccomputer program medium\u201d and \u201ccomputer usable medium\u201d are used to generally refer to media such as removable storage unit , removable storage unit , and a hard disk installed in hard disk drive . Computer program medium and computer usable medium may also refer to memories, such as main memory  and secondary memory , which may be memory semiconductors (e.g. DRAMs, etc.).","Computer programs (also called computer control logic) are stored in main memory  and\/or secondary memory . Computer programs may also be received via communications interface . Such computer programs, when executed, enable computer system  to implement the present invention as discussed herein. In particular, the computer programs, when executed, enable processor device  to implement the processes of the present invention, such as the stages in the method illustrated by the flowchart in  discussed below. Accordingly, such computer programs represent controllers of the computer system . Where the invention is implemented using software, the software may be stored in a computer program product and loaded into computer system  using removable storage drive , interface , and hard disk drive , or communications interface .","Embodiments of the invention also may be directed to computer program products comprising software stored on any computer useable medium. Such software, when executed in one or more data processing device, causes a data processing device(s) to operate as described herein. Embodiments of the invention employ any computer useable or readable medium. Examples of computer useable mediums include, but are not limited to, primary storage devices (e.g., any type of random access memory), secondary storage devices (e.g., hard drives, floppy disks, CD ROMS, ZIP disks, tapes, magnetic storage devices, and optical storage devices, MEMS, nanotechnological storage device, etc.).","The Summary and Abstract sections may set forth one or more but not all exemplary embodiments of the present invention as contemplated by the inventor(s), and thus, are not intended to limit the present invention and the appended claims in any way.","Embodiments of the present invention have been described above with the aid of functional building blocks illustrating the implementation of specified functions and relationships thereof. The boundaries of these functional building blocks have been arbitrarily defined herein for the convenience of the description. Alternate boundaries can be defined so long as the specified functions and relationships thereof are appropriately performed.","The foregoing description of the specific embodiments will so fully reveal the general nature of the invention that others can, by applying knowledge within the skill of the art, readily modify and\/or adapt for various applications such specific embodiments, without undue experimentation, without departing from the general concept of the present invention. Therefore, such adaptations and modifications are intended to be within the meaning and range of equivalents of the disclosed embodiments, based on the teaching and guidance presented herein. It is to be understood that the phraseology or terminology herein is for the purpose of description and not of limitation, such that the terminology or phraseology of the present specification is to be interpreted by the skilled artisan in light of the teachings and guidance.","The breadth and scope of the present invention should not be limited by any of the above-described exemplary embodiments, but should be defined only in accordance with the following claims and their equivalents."],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"BRIEF DESCRIPTION OF THE FIGURES","p":["Embodiments are described with reference to the accompanying drawings. In the drawings, like reference numbers may indicate identical or functionally similar elements. The drawing in which an element first appears is generally indicated by the left-most digit in the corresponding reference number.",{"@attributes":{"id":"p-0014","num":"0013"},"figref":"FIG. 1"},{"@attributes":{"id":"p-0015","num":"0014"},"figref":"FIG. 2"},{"@attributes":{"id":"p-0016","num":"0015"},"figref":"FIG. 3"},{"@attributes":{"id":"p-0017","num":"0016"},"figref":"FIG. 4A"},{"@attributes":{"id":"p-0018","num":"0017"},"figref":"FIG. 4B"},{"@attributes":{"id":"p-0019","num":"0018"},"figref":"FIG. 5"}]},"DETDESC":[{},{}]}
