---
title: Method for controlling access to the resources of a data processing system, data processing system, and computer program
abstract: In a data processing system with at least one data processing device, a large number of databases allocated to the data processing system and having user-specific data are linked together for forming a single resulting user database. Access permissions for resources provided by the at least one data processing device are awarded by predefined user roles. At least one user role is allocated to at least one user of the data processing system.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=07730093&OS=07730093&RS=07730093
owner: Siemens Aktiengesellschaft
number: 07730093
owner_city: Munich
owner_country: DE
publication_date: 20020926
---

{"@attributes":{"id":"description"},"BRFSUM":[{},{}],"heading":["CROSS REFERENCE TO RELATED APPLICATIONS","BACKGROUND OF THE INVENTION","SUMMARY OF THE INVENTION","DETAILED DESCRIPTION OF THE PREFERRED EMBODIMENT"],"p":["This application is based on and hereby claims priority to German Application No. 101 47 465.2 filed on Sep. 26, 2001, the contents of which are hereby incorporated by reference.","Market- and customer-oriented organizations change many times faster than the data processing systems which the organization uses to image its business processes. Special requirements arise from this in regard to the control of access to resources of data processing systems in organization units which are rapidly changing.","From DE 199 54 358 A1, a method is known for the control of user access in a network environment, using user roles. A user role determines the function of a user within an organization unit and serves to define of the scope of his operating responsibility.","A user role access control includes one or more user roles and access permissions, by which it is determined whether actions can be performed on computer-based objects. The user role access control is used to approve a user's request if user access roles grant access permissions which permit him to perform specific actions on a computer-based object.","One potential object of the present invention is to provide a method, a data processing system and a computer program for the efficient control of access to resources of a data processing system with different kinds of data processing devices, with different kinds of program applications which are provided by the data processing devices, and with frequent user data changes.","An important aspect relates to user-specific data being made accessible, in an integrated structure in a resulting user database, for substantially all the data processing devices of a data processing system. The resulting user database arises from the combination of a large number of databases with user-specific data. User roles, as the basis of a role-based resource access control, are also counted among the user-specific data. The data processing devices of the data processing system are target systems for the resource access control. In particular, a prerequisite is created for role-based resource access control in data processing systems with heterogeneous target systems and user-specific data recorded in a distributed manner.","Moreover, a use of role-based access control mechanisms in a resulting user database, also known as a meta-catalog, means a violation of a paradigm of the conventional meta-catalog technology. Namely, no n:m relationships are provided in the data model in conventional meta-catalog technology. These n:m relationships are however necessary for a role-based access control because of an allocation of users to roles, an allocation of roles to access permissions, and an allocation of access permissions to resources.","Reference will now be made in detail to the preferred embodiments of the present invention, examples of which are illustrated in the accompanying drawings, wherein like reference numerals refer to like elements throughout.",{"@attributes":{"id":"p-0014","num":"0013"},"figref":"FIG. 1","b":["1","4","1","3","1","4","1","4","1","1","4","1","1","3","1","4","1","4","1","1","4"]},"The data processing system shown in  has numerous databases DB-DBn with user-specific data such as organization, location, responsibility region, personnel staff data, and available services. The user-specific data are not necessarily stored in the individual databases according to a unified data structure. The individual databases are linked together for forming a single resulting user database MDIR, hereinafter termed meta-catalog. For linking, the data stored in the individual databases DB-DBn are converted according to an overall data model. Any data redundancies in the individual databases DB-DBn are eliminated during data migration into the meta-catalog MDIR. With a change in the user-specific data in the individual databases DB-DBn, or in the meta-catalog MDIR, a synchronization takes place between the individual databases DB-DBn and the meta-catalog MDIR. For synchronization of the meta-catalog MDIR with the individual databases DB-DBn, synchronization requests REQ are exchanged between a server MDS, hereinafter termed meta-catalog server, allocated to the meta-catalog MDIR, and database servers DBS-DBSn which are allocated to the individual databases DB-DBn. The synchronization requests REQ are here transmitted over a data network NET which connects the database servers DBS-DBSn with the meta-catalog server MDS.","The meta-catalog MDIR has memory regions M-M with user staff data, role definitions, and access permissions for resources. Application programs APP-APPn and memory regions MEM-MEMp, which are provided by data processing devices TSYS-TSYSp, belong to the resources. The data processing devices TSYS-TSYSp providing the resources are termed \u201ctarget systems\u201d hereinafter.","The access permissions for the resources provided by the target systems TSYS-TSYSp are awarded by the predefined user roles memorized in the meta-catalog MDIR. The predefined user roles are here allocated to access permissions, and the access permissions to resources of the target systems TSYS-TSYSp. Allocations of users to roles are furthermore memorized in the meta-catalog MDIR, so that the access permissions allocated to the respective roles are granted to the respective users. The allocations of users to roles are memorized in the meta-catalog MDIR, for example as a portion of the personnel staff data. The predefined user roles are preferably made available for allocation by a role catalog memorized in the meta-catalog MDIR.","The meta-catalog server MDS is connected to the target systems TSYS-TSYSp via interface devices TSA-TSAm. The interface devices TSA-TSAm are termed \u201ctarget system agents\u201d hereinafter. The target system agents resolve user roles allocated to users of the data processing system into application specific or operating system specific access permissions for application programs APP-APPpn and memory regions MEM-MEMp which are provided by the target systems TSYS-TSYSp. Coordinating functions in regard to program access control and data holding are thus attributed to the target system agents TSA-TSAm. For coupling the meta-catalog server MDS to the program access control and the data holding of the target systems TSYS-TSYSp, the target system agents TSA-TSAm have LDAP (Lightweight Directory Access Protocol) converters and API (Application Programming Interface) access interfaces, not explicitly shown in , and resolve the user roles into instruction sequences which can be interpreted by the respective target systems TSYS-TSYSp.","With a change of role-defined user-specific data in the meta-catalog MDIR, a message MSG is sent to the respective target system agents TSA-TSAm. The respective target system agent TSA-TSAm thereupon inspects the message MSG for a change of application specific or operating system specific access permissions which are to be signaled to the respective target systems TSYS-TSYSp.","The resource access control method described hereinabove is implemented by a computer program which can be loaded into a working memory RAM of the meta-catalog server MDS and has software code sections whose execution initiates the process described hereinabove. The meta-catalog server MDS has a non-volatile memory medium MEM for permanent memorization of the computer program and a central processor unit CPU for its execution.","The conversion by data processing technology of a role-based access control information model into a meta-catalog is explained using the data model shown in . The following considerations hold without limitation of generality, particularly for an access control information model corresponding to the standard of the NIST (National Institute of Standards and Technology). and a LDAP meta-catalog. The NIST standard access control information model is termed hereinafter the RBAC (role based access control) information model.","The following object classes are defined in the LDAP meta-catalog for the conversion of the RBAC information model:\n\n","Access permissions spreading over the target system are brought together in an object of the object class \u201cPermission\u201d .","For allocations between object instances, the following attributes describing the allocations are introduced:\n\n","The attribute \u201cRoleLink\u201d  represents an object reference (Distinguished Name Reference) in an LDAP meta-catalog. Since attributes in a LDAP meta-catalog can be multivalued, the m:n relationships between users, roles and permissions can be converted in the sense of the RDAC information model with the three object classes \u201cUser\u201d , \u201cRole\u201d  and \u201cPermission\u201d  in a simple fashion.","For the support of role hierarchies, the object class \u201cRole\u201d  likewise contains an attribute \u201cRoleLink\u201d . Hierarchies of role instances can be generated therewith. For example, a role object \u201cGroup Manager\u201d can refer via the attribute \u201cRoleLink\u201d  to a role object \u201cemployee\u201d and thereby inherit the permissions allocated to the role object \u201cemployee\u201d in the sense of the RBAC information model.","For a specification of a time binding between users and roles, an object class \u201cAssignment\u201d  is introduced. Allocations between users and roles, and also a beginning and an end of the respective allocation, are both given with the object class \u201cAssignment\u201d . For this purpose, the object class \u201cAssignment\u201d  contains the following attributes:\n\n","In order to support an automatic administration of user identifiers and user groups and an allocation of user identifiers to user groups by an LDAP meta-catalog, the following object classes are used:\n\n","The object class \u201cTargetSystem\u201d contains among other things an attribute \u201cAccNameRule\u201d  for a rule for the formation of user identifier names. This serves as an automatic facility for user identifiers in the respective target system.","The object class \u201cTSAccount\u201d  contains among other things the following attributes:\n\n","The object class \u201cTSGroup\u201d  contains among other things the following attributes:\n\n","For a connection of an award of access permissions by the RBAC information model and an automatic administration of user identifiers, user groups and of an allocation of user identifiers to user groups in an LDAP meta-catalog, the object class \u201cPermission\u201d  is extended by an attribute \u201cTSGroupLinK\u201d . The attribute \u201cTSGroupLink\u201d  serves as an allocation of permissions spreading over target systems to user groups in specific target systems, therefore target system specific permissions.","For the support of role parameters, the object class \u201cTSGroup\u201d is extended by the attribute \u201cRPMatchRule\u201d . The attribute \u201cRPMatchRule\u201d  serves for the establishment of a selection rule for the consideration of a user group when awarding a permission for a user to whom specific role parameter values are allocated.","With the described data model, the conversion by data processing technology of a role-based access control information model into a meta-catalog takes place in the fashion described hereinbelow:","A user is first imaged in an instance of the object class \u201cUser\u201d . An allocation of roles without time binding takes place by the attribute \u201cRoleLink\u201d . An allocation of roles with time binding takes place rolewise by a respective instance of the object class \u201cAssignment\u201d . There the allocation is set up by the attributes \u201cAssignFrom\u201d  and \u201cAssignTo\u201d  and by the attributes \u201cStartDate\u201d  and \u201cEndDate\u201d .","A role is imaged in an instance of the object class \u201cRole\u201d . A construction of role hierarchies takes place by the attribute \u201cRoleLink\u201d . An allocation of roles to permissions takes place by the attribute \u201cPermissionLink\u201d .","A permission which spreads over target systems is imaged in an instance of the object class \u201cPermission\u201d . An allocation of permissions to user groups as target system specific permissions takes place by the attribute \u201cTSGroupLink\u201d .","A target system which is administered by the resource access control is imaged in an instance of the object class \u201cTargetSystem\u201d . A selection rule is laid down there for the formation of user identifier names. A target system specific user group is imaged in an instance of the object class \u201cTSGroup\u201d.","By a search according to the name of an instance of the object class \u201cUser\u201d  over all instances of the object class \u201cTSAccount\u201d , it is determined in which target systems user identifiers already exist for a user. Furthermore, which roles are allocated to a user can be determined for each point in time. For this purpose, references in the attribute \u201cRoleLink\u201d  of the object class \u201cUser\u201d  are evaluated. Role allocations without time binding result from this. Role allocations with time binding are determined by an evaluation of the attributes \u201cAssignFrom\u201d  and \u201cAssignTo\u201d  of instances of the object class \u201cAssignment\u201d .","At each point in time, starting from a user, via the roles allocated to the user and the target system specific access permissions allocate to the roles, it can be determined to which user groups a user is to be allocated. A corresponding allocation takes place by a user identifier which is specific for the respective target system. By the described determination of already existing user identifiers, whether a usable user identifier is already arranged for the respective user in a given target system can be inspected. If no user identifier is yet arranged, a new user identifier can be arranged for use. The name of a new user identifier is formed using the attribute \u201cAccNamerRule\u201d  of the object class \u201cTargetSystem\u201d .","If user groups are determined which depend on role parameters due to a selection rule set up by the attribute \u201cRPMatchRule\u201d  of the object class \u201cTSGroup\u201d , the corresponding selection rule is applied to the user role parameter values of the respective user. A classification of a user in a user group is only performed when the selection rule for the user role parameter values of the user gives a positive result.","At each point in time, to which user groups a user is allocated can be determined. For this purpose, the user identifiers of the respective user are determined. By a search, the user groups in which the respective user identifier is allocated are determined for each of these user identifiers.","The data processing technological conversion described here of a role-based access control information model into a meta-catalog offers the advantage of a simple traceability and visibility. Moreover, a further advantage relates to allocations and relationships of the individual object classes being stored free from redundancy. The allocations can therefore be determined either directly, by object references, or indirectly, by search requests. Furthermore the allocation of users to roles is optimized as regards memory utilization and access time because of the direct object reference in the object class \u201cUser\u201d . In addition, a role allocation without time binding occurs more frequently in practice than a role allocation with time binding.","Furthermore, the use is made possible of meta-catalogs for the automatic administration of user identifiers and user groups in specific target systems based on the modeling of the user identifiers and user groups into their own object classes and based on the assessment of the permission award by an allocation of the user identifiers to user groups.","The application of the present invention is not limited to the embodiment example described herein.","The invention has been described in detail with particular reference to preferred embodiments thereof and examples, but it will be understood that variations and modifications can be effected within the spirit and scope of the invention."],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"BRIEF DESCRIPTION OF THE DRAWINGS","p":["These and other objects and advantages of the present invention will become more apparent and more readily appreciated from the following description of the preferred embodiments, taken in conjunction with the accompanying drawings of which:",{"@attributes":{"id":"p-0010","num":"0009"},"figref":"FIG. 1"},{"@attributes":{"id":"p-0011","num":"0010"},"figref":"FIG. 2"},{"@attributes":{"id":"p-0012","num":"0011"},"figref":"FIG. 3"}]},"DETDESC":[{},{}]}
