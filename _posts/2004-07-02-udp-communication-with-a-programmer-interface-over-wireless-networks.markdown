---
title: UDP communication with a programmer interface over wireless networks
abstract: Systems and methods provide for secure communications between local and remote devices or networks in virtual private networks. Data can be communicated between the local and remote devices using the User Datagram Protocol (UDP) to reduce network overhead for the data communications. The UDP-based data communications are made secure and reliable by various techniques, for example: confirming that a packet sent by a source component is received by the receiving component, and guaranteeing packet sequencing by buffering packets as they are received and only delivering them to the target in the original sequence that they were sent from the source. Because TCP based communications are common, a TCP-style API can be used to enable programmers to more easily implement the UDP-based communications. Other embodiments of the invention relate to transport protocol enhancements for use within virtual private networks, including protocol mapping, protocol buffering, and protocol filtering.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08266677&OS=08266677&RS=08266677
owner: Intellisync Corporation
number: 08266677
owner_city: San Jose
owner_country: US
publication_date: 20040702
---

{"@attributes":{"id":"description"},"RELAPP":[{},{}],"heading":["CROSS-REFERENCE TO RELATED APPLICATIONS","BACKGROUND OF THE INVENTION","BRIEF SUMMARY OF THE INVENTION","DETAILED DESCRIPTION OF THE PREFERRED EMBODIMENTS"],"p":["This application is a continuation-in-part of U.S. patent application Ser. No. 10\/794,243, filed Mar. 5, 2004, now U.S. Pat. No. 7,673,133 which claims the benefit of U.S. Provisional Patent Application Ser. No. 60\/452,248, filed Mar. 5, 2003. Said U.S. patent application Ser. No. 10\/794,243 is also a continuation-in-part of U.S. patent application Ser. No. 09\/767,465, filed Jan. 22, 2001, now U.S. Pat. No. 7,124,189 which claims the benefit of U.S. Provisional Patent Application Ser. No. 60\/257,481, filed Dec. 20, 2000. The foregoing patent applications are incorporated herein by reference.","1. The Field of the Invention","The present invention generally relates to virtual private networks. In particular, the present invention relates to systems and methods for enabling both the exchange of data and the execution of software applications remotely via a virtual private network. More particularly, one aspect of the present invention relates to various communication features, including protocol features, that enable and enhance the use of the User Datagram Protocol (UDP) in facilitating the communications.","2. The Related Technology","In today's business world, many businesses protect their data from unauthorized access by installing firewalls into their network infrastructure. Typically, a firewall prevents unidentified users from accessing network data from a remote location. Although firewalls are generally very beneficial for enabling a business to have more control over who accesses its network data, they also have the undesirable consequence of disconnecting mobile professionals from critical and urgent business information when they are away from the office or otherwise unable to gain local access to the network data.","To enable a mobile professional to access business information from a remote location, some businesses have installed virtual private networks (VPNs) between the business and designated remote locations, such as from a professional's home or satellite office. The function of a VPN is to open a secure connection between the business network and a designated remote location through the business firewall. Although beneficial for providing remote access to network data, a VPN often requires the installation of expensive hardware and\/or software at the business network and sometimes at the remote location.","In typical VPN arrangements, a user communicates with a business network from a remote location through a VPN tunnel. At each end of the VPN tunnel is a VPN node. At the business network, one of the VPN nodes straddles the business network's firewall. Network data is transmitted through the firewall at the VPN node and through the VPN tunnel to the user. It may also be possible for a remote business to communicate with the business network through a second VPN tunnel between the two VPN nodes.","VPN hardware and software employ encryption technology and other security features at the VPN nodes to ensure that data transmitted through a VPN tunnel is not intercepted and that the user or remote business is authorized to access the business network data. The benefits of a VPN, however, are limited to discrete, remote locations where the appropriate VPN software and\/or hardware is installed. Accordingly, VPNs do not currently provide users with mobile remote access to network data stored behind business firewalls. In particular, conventional VPN does not readily enable a user to access network data from a telephone while commuting in a moving vehicle, or from various other mobile devices, including pagers, personal digital assistants (\u201cPDAs\u201d), and laptop computers.","With regard to the aforesaid mobile devices, it is highly desirable in today's mobile society to provide enhanced connectivity between such devices and a remote location, such as a business network at the user's place of employment. The ability for such mobile devices to remotely and securely exchange both data and applications with the business network greatly enhances both their utility and value, particularly for mobile professionals and others who spend a significant amount of time away from the office. As already described, typical VPN configurations do not readily enable such mobile remote connectivity.","In addition, there is a need to maintain the bandwidth usage for data transmission to remote wireless devices to a minimum. The data transport mechanisms associated with the conventional TCP\/IP systems currently use greater bandwidth than is desirable. Systems and methods that reduce the bandwidth usage would therefore represent a significant advance in the field.","Further complicating the secure transfer of data between a remote device and the business network is the fact that the remote device and business network may employ respectively differing communication protocols for transmitting data. For example, an e-mail application locally based in a business network may employ the Messaging Application Programming Interface (\u201cMAPI\u201d) protocol for exchanging e-mail messages to network users. A remote device, such as a PDA, however, may use the differing Post Office Protocol (\u201cPOP\u201d) for retrieving, sending, and reading e-mail. Without resolution, the incongruity of the two protocols renders communication between the remote and local devices impossible.","In view of the foregoing, a need currently exists for providing a means by which secure communication can be transacted between a local host device and a remote device without the attendant problems discussed above. In addition, such a means should provide for the ability to exchange data and\/or share applications between the host and remote device even in cases where differing protocols are respectively employed.","The present invention relates to systems and methods for establishing secure communications between a local device or network and a remote device or network. The secure communications are enabled via a virtual private network, or tunnel, established between the devices or networks. More particularly, one aspect of the present invention relates to various communication features that enable and enhance the use of the User Datagram Protocol (UDP) in facilitating the communications. In addition, transport protocol enhancements as further described below are also provided for use within the virtual private networks.","More specifically, aspects of the present invention relate to methods and systems wherein each of a computing network and a remote device, and optionally an intermediate carrier network, each include a tunneling client. The tunneling clients enable the establishment of data tunnel legs between the computing network and the carrier network and\/or between the carrier network and the remote device.","UDP is a connectionless protocol that, like TCP, runs on top of IP networks. Because UDP lacks many reliability-related features of TCP, UDP is used typically for broadcasting messages over a network. According to one embodiment of the invention, a programmer is provided with a TCP style programmer interface for programming software modules that use UDP over wireless networks. This is provided, in part, because TCP is the protocol that programmers are most familiar with. In addition, in order to use UDP in wireless networks, other embodiments of the invention provide guaranteed packet delivery by one or more of various techniques. These techniques can include, among other things: confirming that a packet sent by a source component is received by the receiving component; guaranteeing packet sequencing by buffering packets as they are received and only delivering them to the target end of the tunnel in the original sequence that they were sent from the source end of the tunnel; separating data into optimally sized packets at the source end of the tunnel and then reassembling the packets at the target end of the tunnel; combining small data packets into larger packets that are more optimally sized for transmission; as well as the use of checksums, compression, and encryption.","The transport protocol enhancements include protocol mapping, protocol buffering, and protocol filtering for use in virtual private networks. Protocol mapping allows for data transfer between the corporate network and the remote device over different protocols. This is achieved as templates are assigned to protocols and inflection points on different templates are mapped to each other. By way of example, protocol mapping allows e-mail sent from a remote device in the POP protocol to be mapped to an e-mail server in the corporate network in the MAPI protocol.","Protocol buffering can be implemented with the protocol mapping feature to accommodate mapping between protocols when certain complicating circumstances arise. In one circumstance, transient conditions occurring along the communication route can temporarily interrupt the stream of data transmitted between the corporate network and the remote device. If this occurs, a specified template can temporarily suspend the transmission of the data and instead store the data within the template itself until the transient conditions along the communication route are resolved and the data tunnel is reestablished.","Protocol filtering matches incoming data packets against protocol templates. If the data packets match a particular protocol template, they are input into that template and processed. If no matching template is found for a particular data packet, the system can reject the data packet and delete it from the system. Protocol filtering enables the system to act in an auxiliary firewall capacity by rejecting those data packets, such as hacker-related and malicious packets, that do not fit within pre-configured data templates, thereby enhancing security within the system.","Accordingly, a first example embodiment of the invention is a method for transmitting data in a secure manner between a computing network and a remote device. Each of the computing network and the remote device include a tunneling client. This method generally includes: establishing a data tunnel leg between a tunneling switch of a carrier network and a tunneling client of a computing network; at the tunneling switch of the carrier network, receiving a first packet from a tunneling client of a remote device in a UDP protocol, the first packet comprising a request for access to network data stored on the computing network; transmitting a packet acknowledgement signal from the tunneling switch to the remote device, wherein the tunneling client of the remote device can use the packet acknowledgement signal to confirm that the first packet was accurately transmitted; and transmitting, via the data tunnel leg, the first packet from the tunneling switch to the computing network.","Another example embodiment of the invention is a method performed in a device having a tunneling client. This method enables a user operating a device to access network data of a remote computing network. The method generally includes: transmitting a UDP-formatted packet to a tunneling switch on a carrier network, the packet comprising a request to access network data stored on a remote computing network, wherein a data tunnel leg has previously been established between the tunneling switch and the remote computing network; receiving a packet acknowledgement signal from the tunneling switch, whereby the device can use the packet acknowledgement signal to confirm that the packet was accurately received by the tunneling switch; receiving the requested data from the remote computing network via the tunneling switch in the form of one or more UDP-formatted packets; and transmitting a second packet acknowledgement signal to the tunneling switch, whereby the tunneling switch can use the second packet acknowledgement signal to confirm that one of the one or more UDP-formatted requested data packets were accurately transmitted.","Yet another example embodiment of the invention is a method for transmitting data in a secure manner between a device and remote computing network via a carrier network. Each of the computing network and the device, and optionally the carrier network, include a tunneling client. The method generally includes: establishing a first data tunnel leg between a tunneling client of a remote computing network and a carrier network, the carrier network including a tunneling server; establishing a second data tunnel leg between the carrier network and a device; at a tunneling client of the device, fitting data in a first protocol format to a first template, the first template located in a tunneling client of the remote device and comprising one or more inflection points that correspond to commands or other data aspects of the first protocol; transmitting the templated data to the computing network via the first data tunnel leg; and at the tunneling client of the computing network, if the first template matches a second template, the second template comprising one or more inflection points that correspond to commands or other data aspects of a second protocol, matching the inflection points of the first template to the inflection points of the second template, whereby data of the first protocol format is switched to represent the data in the second protocol format.","Another example embodiment of the invention is a system for enabling a user of a remote device to access network data and software applications stored on a computing network. The system generally includes: a first tunneling client on a remote device; a second tunneling client on a computing network; and a tunneling server on a carrier network. The second tunneling client and the tunneling server are configured to communicate with each other and maintain a first data tunnel leg therebetween. The first tunneling client, the second tunneling client, and the tunneling server are also each configured to transmit and receive data packets that are transmitted in a UDP protocol, wherein each of the first tunneling client, the second tunneling client, and the tunneling server are further configured to send confirmation signals upon receipt of UDP-formatted data packets that enable the sending application to verify that the UDP-formatted data packets were accurately transmitted.","These and other features of the present invention will become more fully apparent from the following description and appended claims, or may be learned by the practice of the invention as set forth hereinafter.","The present invention relates to systems and methods for establishing secure communications between a local device or network and a remote device or network. The secure communications are enabled via a virtual private network established between the devices or networks. The methods and systems provide each of a computing network and a remote device, and optionally an intermediate carrier network, with a tunneling client. The tunneling clients enable the establishment of data tunnel legs between the computing network and the carrier network and\/or between the carrier network and the remote device.","More particularly, one aspect of the present invention relates to various communication features that enable and enhance the use of the User Datagram Protocol (UDP) in facilitating the communications. As used herein, the term \u201cpacket\u201d includes within its scope \u201cdatagram.\u201d A datagram is a piece of a message transmitted over an IP network. One of the features of a datagram is that it contains the destination address in a header in addition to the data. More generally, however, datagrams are a type of packets. According to the invention, packets, preferably UDP-formatted as disclosed herein, are communicated back and forth to enable the remote device to access data and\/or applications stored on the computing network.","UDP is a connectionless protocol that, like TCP, runs on top of IP networks. Because UDP lacks many reliability-related features of TCP, UDP is used primarily for broadcasting messages over a network. According to one embodiment of the invention, a programmer is provided with a TCP style programmer interface for programming software modules that use UDP over wireless networks. This is provided, in part, because TCP is the protocol that programmers are most familiar with. In addition, in order to use UDP in wireless networks, another embodiment of the invention provides guaranteed packet delivery by one or more of various techniques. These techniques can include, among other things: confirming that a packet sent by a source component is confirmed by the receiving component; and guaranteeing packet sequencing by buffering packets as they are received and only delivering them to the target end of the pipe in the original sequence that they were sent from the source end of the pipe.","In addition, transport protocol enhancements are also provided for use within the virtual private networks. These transport protocol enhancements include, for example, protocol mapping, protocol buffering, and protocol filtering for use in virtual private networks. Protocol mapping allows for data transfer between the corporate network and the remote device over different protocols. This is achieved as templates are assigned to protocols and inflection points on different templates are mapped to each other. By way of example, protocol mapping allows e-mail sent from a remote device in the POP protocol to be mapped to an e-mail server in the corporate network in the MAPI protocol. Protocol buffering allows a packet template to temporarily suspend the transmission of the data within a data tunnel when transient conditions along the communication route interrupt the communications. Finally, protocol filtering matches incoming data packets against protocol templates. If the data packets match a particular protocol template, they are input into that template and processed. If no matching template is found for a particular data packet, the system can reject the data packet and delete it from the system.","Reference will now be made to the figures wherein like structures will be provided with like reference designations. It is understood that the drawings are diagrammatic and schematic representations of presently preferred embodiments of the invention, and are not limiting of the present invention nor are they necessarily drawn to scale.","In the following description, numerous specific details are set forth in order to provide a thorough understanding of the present invention. It will be obvious, however, to one skilled in the art that the present invention may be practiced without these specific details. In other instances, well-known aspects of computing and communications systems have not been described in particular detail in order to avoid unnecessarily obscuring the present invention.","Embodiments of the present invention include or are incorporated in computer-readable media having computer-executable instructions or data structures stored thereon. Examples of computer-readable media include RAM, ROM, EEPROM, CD-ROM or other optical disk storage, magnetic disk storage or other magnetic storage devices, or any other medium that can be used to carry or store desired program code means in the form of computer-executable instructions or data structures and which can be accessed by a general purpose or special purpose computer. When information is transferred or provided over a network, tunnel, channel or another communications connection (either hardwired, wireless, or a combination of hardwired or wireless) to a computer, the computer properly views the connection as a computer-readable medium. Thus, any such connection is properly termed a computer-readable medium. Combinations of the above should also be included within the scope of computer-readable media. Computer-executable instructions comprise, for example, instructions and data that cause a general purpose computer, special purpose computer, or special purpose processing device to perform a certain function or group of functions. The computer-executable instructions and associated data structures or modules represent an example of program code means for executing the steps of the invention disclosed herein.","As previously noted, the invention further extends to computer systems for enabling a remote user access to network data of a corporate network that is stored behind corporate network firewalls. This includes, but is not limited to, opening data tunnels that operate as virtual private networks between the corporate network and a data center, and transmitting network data through the data tunnels. Those skilled in the art will understand that the invention may therefore be practiced in many environments with many types of computer and telephone systems, including portable computers, telephones, wireless telephones, PDA's, personal computers, multi-processor systems, network PCs, minicomputers, mainframe computers, and the like.","1. System Environment","Reference is first made to , which shows one embodiment of a system for enabling secure communication between a local network and a remote device, the system being generally designated at . As described, the system  generally comprises several components, including a corporate network , a carrier network , and a remote device . In particular,  illustrates systems and methods of the present invention for enabling a user of the remote device  to access network data  and\/or one or more software applications  of the corporate network  through a data tunnel  initially established between the corporate network  and carrier network , and between the carrier network  and the device , respectively. In one embodiment, the corporate network  is a business computer network containing network data  and applications  that are protected behind a firewall  to prevent unauthorized access.","As used herein, the term \u201ccorporate network\u201d should be broadly construed to include any computing environment where tasks are performed by processing devices that are linked together. The corporate network  can include, for example, the computing environment or network of any enterprise, business, corporation, individual, or other entity. In the corporate network , computer-executable instructions and program modules for performing the features of the invention may be located in local and remote memory storage devices. The term \u201ccorporate\u201d used in this context does not require the entity that operates the network to have any business or organizational structure. The term \u201ccomputing network\u201d includes within its scope \u201ccorporate networks.\u201d","The term \u201cremote device\u201d is understood to include a variety of electronic devices and apparatus that are remotely disposed with respect to the corporate network. Examples of a remote device include a mobile or cellular phone, PDA, pager, laptop computer, etc. The remote device can be capable of receiving, executing, and transmitting computer-executable instructions.","The terms \u201cnetwork data\u201d and \u201cbusiness network data\u201d should be construed to include any data that is stored in local and remote memory storage devices and is accessible to the corporate network . Network data  may include for example, email data or web page data. In one embodiment, network data  is protected behind a firewall infrastructure that includes the firewall . It should be appreciated, however, that network data  can include any data that is accessible to the corporate network , even if it is not protected behind the firewall infrastructure. Similarly, the term \u201capplication\u201d should be broadly construed to include any set of computer executable instructions for performing one or more functions in connection with a computer or other electronic device.","The term \u201ctunnel\u201d should be interpreted to include any channel or other line of communication through which data can be securely transmitted. One skilled in the art will appreciate that there are numerous protocols and methods of encryption and authentication that can be employed to enable secure communication through a tunnel, such that the data transmitted through the tunnel is delivered only to an identified user who is authorized to access said data. It should further be appreciated that the terms \u201ctunnel,\u201d \u201cdata tunnel,\u201d and \u201cchannel,\u201d are interchangeable as used herein. The tunnel operates as a virtual private network by enabling secure remote access to network data through a business's firewall infrastructure.","In , a data tunnel leg A is established between the corporate network  and the carrier network , and a data tunnel leg B is established between the carrier network and the remote device . The data tunnel legs A and B are used to transmit data between the corporate network  and the device . Specifically, the data tunnel leg A in one embodiment is established and maintained as a continuously open data tunnel, or alternatively open when needed for a VPN, between the corporate network  and the carrier network , through which information can be transmitted from the corporate network  for eventual receipt by the remote device . The data tunnel leg B is also established as a tunnel between the remote device  and the carrier network  to enable the transfer of information between the remote device and the corporate network . The data tunnel leg B in one embodiment is only opened as the need for data to be either transmitted from or received by the remote device  is present. Thus, in contrast to the data tunnel leg A, which is continuously established, the data tunnel leg B in one embodiment is intermittently established as the need for communication arises. This arrangement can be preferable in cases where the remote device  comprises a battery operated device, such as PDA, where power resources are to be conserved when possible.","In general, to establish the data tunnel leg A, the corporate network  transmits a connection signal A to the carrier network . In response, the carrier network  establishes the data tunnel leg A with the corporate network . Similarly, the remote device  transmits a connection signal B to the carrier network , which establishes the data tunnel leg B in response. In the illustrated embodiment, the carrier network , in establishing the respective data tunnel leg, can send a connection signal reply  to the corporate network , the remote device , or both. It is appreciated, however, that the connection signal reply  is not essential in establishing the data tunnel legs A or B. More details concerning the establishment of the data tunnel legs A and B are given below.","As used herein, the term \u201cconnection signal\u201d should be broadly construed to include data comprising a uniform resource identifier (\u201cURI\u201d), which represents a request for the carrier network to provide access to a web page, hypertext markup language (\u201cHTML\u201d) data, extensible markup language (\u201cXML\u201d) data, or other data resources. The connection signals A and B made by the corporate network  and the remote device , respectively, can be performed independently of each other, or in concert, according to system design. Likewise, the carrier network  is preferably configured to respond to each connection signal A and B independently, though the response to both the corporate network  and the remote device  by the carrier network can, if desired, be coordinated to occur simultaneously.","In the case of the corporate network , the data tunnel leg A, once established, is maintained by a keep alive signal . In one embodiment, the keep alive signal  comprises a small amount of nominal data sent to the corporate network  from the carrier network  in order to continually maintain the presence of the data tunnel leg A. This data is incrementally sent in packets having a size such as 100 bytes. In one embodiment, the keep alive signal  can comprise a nominal request for data from the corporate network . In response, the corporate network  can reply via the data tunnel leg A to the carrier network  with the requested data, thereby maintaining the tunnel leg A open. In a similar manner, the keep alive signal  is also sent by the carrier network  to the device  in order to maintain the presence of the data tunnel leg B when that leg is active.","As mentioned above, the data tunnel leg A between the corporate network  and the carrier network  is established repeatedly or on an ongoing basis so that the tunnel leg A is continuously available in the event that the remote device  attempts to establish the virtual private network connection with corporate network  described herein. For instance, the keep alive signal  can be sent on a periodic basis with a frequency, such as every 20 seconds, that is high enough to minimize the latency experienced by the remote device  when the remote device attempts to establish communication with the virtual private network. The connection signal A and the keep alive signal  transmitted between the corporate network  and the carrier network  can be performed automatically and in the background in preparation for the remote device  to eventually make the attempt to establish the virtual private network connection. In contrast, the connection signal B sent by the remote device  to the carrier network  is generally performed in response to input from a user of the remote device indicating that the user wishes to establish the virtual private network connection. In the case where multiple corporate networks are included in the present system, the initial connection signal B, or data subsequently transmitted over the tunnel leg B can identify the target corporate network  with which the device is to communicate.","In the case of the corporate network , the connection signal A, the keep alive signal , and the connection signal reply  are transmitted through the firewall . One skilled in the art will appreciate that the firewall  can include hardware, software, or a combination of both. Essentially, a firewall is a security mechanism that prohibits access through designated ports of a network and ensures network data cannot be accessed from an unauthorized user from outside of the firewall. Though only one firewall  is shown, multiple firewalls can be employed to afford enhanced data protection, if needed. The connection signal A, the keep alive signal , and any connection signal reply  relating to the corporate network  can also pass through one or more proxy servers  that are employed in conjunction with the firewall  as a security feature.","As shown in , the carrier network  receives the connection signals A and B and transmits keep alive signals  using a server. In the present embodiment, a web server, or tunneling server , operating as a component of a tunneling network is utilized. Though only one tunneling server  is depicted in , it should be appreciated that the carrier network  can comprise multiple web and\/or tunneling server  to enable the carrier network  to communicate with multiple corporate networks\/remote devices and to maintain multiple data tunnels (not shown). The tunneling server  or web servers are examples of \u201ctunneling servers\u201d that operate with tunneling clients as described herein to establish data tunnels between computing networks and remote devices. It should be appreciated that, according to the present invention, multiple data tunnels can be established between a single corporate network or remote device and a single web server, or between a single corporate network or remote device and multiple web servers.","The corporate network  and the remote device  use a tunneling corporate client  and a tunneling device client , respectively, to transmit their respective connection signals A and B to the carrier network  and to receive the connection signal reply  in response. \u201cConnection signal reply\u201d should be construed to include any data transmitted by the carrier network  in response to receiving the connection signal A or SOB and which is transmitted in an ongoing manner so as to keep open the tunnel legs A and B between the carrier network  and the corporate network , and between the carrier network  and the remote device , respectively. The tunneling corporate client  is an example of a \u201cnetwork client\u201d that operates in the network with which the remote device communicates. Similarly, tunneling corporate client  and tunneling device client  are examples of \u201ctunneling clients\u201d that reside, respectively, on the network and the remote device and establish data tunnel legs that are connected to form a complete data tunnel as described herein.","As mentioned, data entering or exiting the corporate network  must pass through the firewall , which acts as a security feature to prevent unauthorized access to the network. In the present invention, penetration of the firewall  by the transmission and reception of the connection signals A, the keep alive signal , and the connection signal reply  is accomplished due to the fact that the data are packetized in a TCP\/IP or another appropriate format typically associated with web traffic. Thus, transmission of the connection signal A, the keep alive signal , and the connection signal reply  is performed via ports already established through the firewall  that are reserved for web traffic, thereby eliminating the need for establishing additional ports through the firewall and simplifying data transmission. Alternatively, the connection signal A, the keep alive signal , and the connection signal reply  can be packetized in a UDP\/IP format consistent with the transport of network data according to the invention.","The corporate client , the device client , and the tunneling server  incorporate software for implementing tunneling communication technology, which includes software for initiating or responding to the connection signals A and B and, as will be described below in further detail, software for transcoding data between protocols, as needed. In turn, this enables the corporate client  and the device client  to establish the secure data tunnel legs A and B, respectively, with the tunneling server , as referred to earlier. Because a traditional VPN interface between these components is avoided, the challenges corresponding to typical VPN installations are avoided as well. In particular, because the data tunnel legs A and B are established by sending outgoing connection signals that permit ports to be opened through the firewalls, the virtual private network is established without requiring VPN hardware at the corporate network  that is otherwise required in conventional VPN systems. Further details regarding the establishment and use of tunneling connections with components similar to those discussed above can be found in U.S. patent application Ser. No. 09\/767,465, entitled \u201cSpontaneous Virtual Private Network Between Portable Device and Enterprise Network,\u201d which was filed Jan. 22, 2001, and which is incorporated herein by reference in its entirety.","The tunneling component of the corporate network  in the present discussion is characterized as a corporate client that is located on a computer server or similar component within the corporate network. The present invention is not so limited, however. Indeed, in one embodiment, the tunneling component can be implemented as a desktop client located on a desktop computer within the corporate network . In such an implementation, the desktop client can reside as a WIN  application on the computer, for example. The example illustrated in  is therefore exemplary with regard to the variations possible with this component of the present system.","Reference is now made to , which shows the data tunnel  established from the corporate client  of the corporate network  to the device client  of the remote device . As will be explained, the formation of the data tunnel leg A between the corporate client  and the tunneling server  of the carrier network , and the data tunnel leg B between the tunneling server  and the device client  via the connection signal\/connection signal reply interaction discussed above, enables the tunneling server  to broker the linkage of the two data tunnel legs and operatively form the complete data tunnel  from the corporate network  to the remote device . The data tunnel  enables secure data transfer to occur between the remote device  and the corporate network , and more specifically, between and through tunneling-enabled devices, such as the corporate client , the device client , and the tunneling server . It is appreciated that in presently preferred embodiments, access between the corporate client  and the carrier network , and between the carrier network and the device client  is implemented, either wholly or partially, via the Internet. By extension, therefore, each of the above components is configured to transmit and receive data via the Internet.","The corporate client  and device client  monitor their respective tunnel legs A and B to ensure that the tunnel  remains open when needed. If for any reason the tunnel leg A or B is undesirably closed, the respective client opens a new data tunnel leg with the tunneling server  of the carrier network  by transmitting a new connection signal to the carrier network . Once a new tunnel leg is established, the tunneling server  brokers the linkage of the tunnel leg between itself and the respective client with the previously established tunnel leg of the other client. Although several acts are described herein as being specifically performed by the corporate client  or the device client , it should be appreciated that inasmuch as the corporate network  includes the corporate client, and inasmuch as the remote device  includes the device client, any acts performed by the corporate client are also acts performed by the corporate network, and acts performed by the device client are also acts performed by the remote device. In an alternative embodiment, the tunneling server  specifically monitors the data tunnel leg A and merely notifies the corporate network  if the leg is closed or lost for some reason. The corporate network  can then take steps to reestablish the data tunnel leg A.","The data tunnel  between the corporate client  and the device client  in various embodiments preferably uses the User Datagram Protocol (\u201cUDP\u201d) as further described hereinbelow. In addition, embodiment of the invention may also use transmission control protocol\/internet protocol (\u201cTCP\/IP\u201d), hypertext transfer protocol with secure sockets layer protocol (\u201cHTTPS\u201d), IP security protocol (\u201cIPsec\u201d), or other appropriate protocols for data transfer. Using these protocols, connection signals, network data, connection signal replies, and other access requests are encrypted in packets and transmitted through the data tunnel  using \u201cport \u201d (not shown) of the corporate network . Port  is typically open to enable users to access the Internet from the corporate network , within the firewall .","As described, the present invention uses preexisting open ports in the firewall infrastructure to enable secure, VPN-related communication from remote mobile locations. Accordingly, it should also be appreciated that the present invention is an improvement over the prior art because additional ports are not required to be opened in the firewall infrastructure, which would require the use of traditional VPN hardware and software that is expensive and time-consuming to install and to maintain. Furthermore, the present invention enables a proxy server to filter any data packets transmitted through the ports to ensure compliance with the defined protocols.","Reference is now made to , which depicts various details relating to the corporate client  and the device client . For clarity, some other components comprising the system  in this and following figures have been omitted. As illustrated, both the corporate client  and the device client  include a plurality of software templates  and , respectively. Each template  and  is configured for a specific protocol used in transmitting data between the corporate client  and the device client . Accordingly,  shows a plurality of N templates , designated template A, B, . . . , N, disposed in the corporate client . Similarly, the device client  includes N templates designated A, B, . . . , N. Each similarly designated template pair in the corporate client  and device client  is identical as to the protocol each template represents, (e.g., the protocol format contained in template D (such as Instant Messenger protocol) is identical to that contained in template D, which also pertains to the Instant Messenger protocol). Despite this similarity, in one embodiment each template  located in the corporate client  contains the actual protocol code, while the templates  located in the device client , though identical in protocol format, only contain the protocol formatting and not the actual protocol code. This is done so as to preserve the limited memory and processing resources of the remote device .","The templates ,  are employed to assist the transfer of information, such as application data, commands, etc., between the corporate client  and the device client . Specifically, each template ,  enables data transfer according to a specific communication protocol, as already mentioned. To that end, each template  and  further includes one or more inflection points  that correspond to commands or other data aspects that are unique to the respective protocol.","For instance, a template pair A\/A can be configured to correspond to a POP e-mail protocol used in transferring e-mail commands and\/or data between the corporate network  and the remote device . As such, each template A and A will include a plurality of inflection points  that can contain the various commands and data specific to the POP protocol. This enables the templates A and A to be utilized in transmitting POP e-mail data between a POP-based e-mail application  disposed in the remote device , and a POP e-mail server  at the corporate network , both of which are shown in .","In another example, a template pair \/ can be configured that corresponds to the Instant Messenger protocol, which includes four main tasks that can be executed by the instant messenger application: send a message, receive a message, retrieve a buddy list, and login. Accordingly, the template pair \/ corresponding to the instant messenger protocol contains at least four inflection points, each corresponding to one of the four tasks above that can be performed by the instant messenger application. Template pairs \/ can be readily modified or added so as to accommodate new protocols or inflection points that are introduced within the present system  as described herein.","The corresponding pair of templates  and  can be configured to correspond to any one of a variety of protocols; thus the examples illustrating both the type and number of templates as given herein are meant to be merely exemplary. Further, though  illustrates an e-mail application  being associated with the remote device  and an e-mail server  associated with the corporate network , it should be appreciated that a wide range of applications and\/or programs can be utilized in connection with the present system for enabling secure communications between a corporate network and a remote device.","2. Remote Access to Network Data","Reference is now made to  together. The system and environment just described is suitable for practicing the methods of the present invention for enabling secure data intercourse between a remote device and a corporate network through a tunneling virtual private network arrangement. According to these methods, a user wishing to remotely access network data, such as the e-mail information contained on the e-mail server  of the corporate network , opens a line of communication, or the data tunnel leg B, with the carrier network  using the remote device , which in this example comprises a web-enabled PDA. The data tunnel leg B is established using the connection signal connection signal reply mechanism for establishing connectivity between the remote device  and the carrier network , as described above. Concurrent with or prior to the establishment of the data tunnel leg B, the data tunnel leg A is established between the corporate network  and the carrier network  using the same connection signal\/connection signal reply routine discussed above.","Additional device and user authentication and security procedures that ensure that the system is properly configured and that all users and system components are properly authorized may be included. Specifically, a three-tiered regimen is utilized to accomplish the authentication and security tasks. The first tier comprises device authentication tasks for authenticating both the remote device  and the corporate network . When either the remote device  or the corporate network  attempts to establish a data tunnel leg with the tunneling server , its respective client transmits, along with or following the connection signal A or B, an identification code, such as a client identification (\u201cCID\u201d). The CID is an encrypted certificate that authenticates the corresponding client as one that is valid for transacting data with the present system . Upon receipt of the CID, the tunneling server  can authenticate that client, and hence its host (i.e., the corporate client  or the remote device ) as a component of the system . As will be seen, the CID of each client  and  will be used in later tiers in connecting the data tunnel legs A and B into a single data tunnel .","As mentioned, the transmittal of the CID and related data from either of the device  and  to the tunneling server  is encrypted. In the present embodiment, this encryption is accomplished using x.509 certificates. The x.509 certificate can be used as a digital signature to ensure the various components to be used in transacting data within the system via the tunneling server  are valid devices. In one embodiment, the tunneling server  is pre-loaded with the required digital signature and certificate data during manufacture so as to enable the tunneling server  to validate these digital signatures later during operation.","As a result of the first tier device authentication procedure above being completed, data tunnel legs A and B are established between each device  and  and the tunneling server . Before the complete data tunnel  is formed and data can be transacted between the corporate network  and the remote device , however, the other two tiers of the security and authentication tasking must also be completed. In the second tier, various security procedures are performed to enable secure data transfer. First, a session key is created for use by the corporate client  and the device client . In the present embodiment, this step is performed using an RSA algorithm, which creates a 2,048-bit session key. These steps are preferably performed by the device client  of the remote device  and transmitted via the tunneling server  to the corporate network , where the session key is received by the corporate client . In alternative embodiments other components, such as the corporate client , can create the session key.","After the session key is created, it is used to set up the encryption protocol that will be used during data transmission between the corporate network  and the remote device . In the present embodiment, RC-4 techniques are used to set up the data encryption based on the session key. Then, a message digest, such as MD-5, is used to ensure that the encryption is accurately performed and is not corrupted by extraneous events.","As a result of these various security devices and algorithms, secure encryption of data to be transmitted between the various components is ensured. At this point, the x.509 certificate created in the first tier is terminated, and the full data tunnel  from corporate network  to remote device  is established by the tunneling server , as shown in .","Once the complete data tunnel  is established, the third tier of the security and authentication regimen can be executed, wherein the corporate network  authenticates the identity of the user of the remote device  to verify that the user has authority to access the corporate network before data is transacted. In one embodiment, the user's identity is authenticated when the user enters a personal identification number. In another embodiment, the user's identity is confirmed over the Internet using encryption technology, such as twin-key encryption, with corresponding public and private keys assigned to the user. Those skilled in the art will recognize there are various methods for authenticating the identity of a user, any of which may be used in accordance with the present invention. Other such methods for authenticating the identity of a user include, but are not limited to, tokens and smart cards. More details concerning user authentication are given further below.","It is appreciated that, despite the details given herein, other methods can be used to provide the security and authentication results obtained by the above three-tiered regimen. Additionally, any one of the three tiers can be substituted with an alternative procedure that substantially accomplishes the same task. Finally, though all three tiers are preferably practiced in connection with the present invention, it is appreciated that less than three tiers\u2014or, alternatively, more than three tiers\u2014can be utilized in establishing the present system  for secure data exchange.","Once all three security and authentication tiers are satisfied, the user, by way of the device client  of the remote device , can transmit along the data tunnel  an access request to the corporate network  (via the tunneling server ), which is received by the corporate client . The access request can include any request requiring access to network data  or applications . For example, the access request can include a request to receive access to email messages, web pages, document files, or other data of the corporate network . As illustrated in , the e-mail application  of the remote device can issue an access request via the device client  to receive e-mail information from the e-mail server of the corporate network . As such, the access request is packetized by the device client  of the remote device  and transmitted using data tunnel .","It is noted here that once the data tunnel  is established and all authentication and security procedures have been met, the tunneling server  preferably does not interact with (i.e., caching, transcoding, decrypting, etc.) access requests, access replies, or any other data being transferred between the remote device  and the corporate network , but merely enables the data transfer to pass through it.","Like the connection signals , the keep alive signal , and the connection signal replies  discussed above, the access request transmitted by the device client  in the present embodiment comprises a protocol structure that enables it to be transmitted as web traffic. In particular, each packet comprising the access request includes an http header or similar protocol identifier that will cause the firewall  and the proxy  to recognize the packet as web traffic and allow its passage through the designated port of the corporate network , in this case, port . An underlying protocol, such as IPSec, also resides in the packet and contains the actual data pertaining to the access request. This arrangement of the data packets comprising the access it request transmitted by the device client  thus allows them to pass through a port already open for such traffic, thereby avoiding the need to open yet another port through the firewall . Any packets comprising the response by the corporate client  to the access request of the device client  are also packaged in this manner such that they too pass freely through the firewall , as will be seen.","The above access request, originally produced by an application and sent by the device client  of the remote device , is transmitted via the data tunnel  using the corresponding template  of the device client . For example, the access request can pertain to a request for e-mail header information to be used by the e-mail application  of the remote device . As such, the access request is transmitted using the template A pertaining to such an e-mail header request. The inflection points  of the template A correspond to such an e-mail header request. Again, the access request can comprise any one of a variety of request types, and the templates  and  can be configured to pertain to one of these types. It is noted that, in this configuration, the e-mail application  of the device client  interprets the template  as representing the application or server that is actually located in the corporate network . As such, the template  acts as a \u201cproxy\u201d for that corporate application or server, in this case, the e-mail server .","As seen in , the templated access request transmitted by the device client  is received via the data tunnel  by the corporate client  after passing through the tunneling server , the proxy server , and the firewall . Again, because the access request is transmitted in preferred embodiments in a web traffic configuration, the firewall  allows it to pass through a port already open for such traffic, thereby avoiding the need to open yet another port therethrough.","The corporate client  then matches the access request to the appropriate template  before forwarding it to the designated application in the corporate network . For instance, continuing the above example, the e-mail header access request sent from the device client  is received at the corporate client  and is matched to the appropriate template A. The data contained in the inflection points  of the template A are then extracted and sent to the e-mail server , where the access request is processed and the requested data is forwarded to corporate client  in response to the access request. As was the case with the device client , the e-mail server  interprets the template A as representing the e-mail application  that is actually remotely located in the remote device . Thus the template A acts as a proxy for the e-mail application .","The manner in which the access request is responded to can be defined and\/or limited by the corporate network . By allowing the corporate network  to control what acts are performed in response to the access request, the corporate network is able to maintain control over access to network data and applications and can control how these network elements are manipulated within the network. Predefined acts can include, but are not limited to, retrieving email headers, retrieving email message bodies, retrieving web page data, deleting email, faxing email data or web page data to the user, and transmitting other network data between the corporate client  and device client .","Once received by the corporate client , the data is packetized as an access response to the access request according to an appropriate template . The templated access response is then forwarded via the data tunnel  for receipt by the device client  in a similar manner to that described above. In one embodiment, the access response can be incorporated into the continual connection signal string being continually sent by the corporate client  to maintain the data tunnel leg A open, as described earlier.","In one embodiment, the transmission of data contained in an access response is performed via the data tunnel . In another embodiment, a second data tunnel (not shown) is established for the transmission of the access response. It is to be remembered that these data tunnels cooperate with the corporate client , the device client , and the tunneling server  in a tunneling configuration in enabling the secure transmission of data between the corporate network  and the remote device . In the case where a second data tunnel is implemented for data transfer, the second data tunnel can be established through the same port used for the data tunnel  (e.g., Internet port , port ) or through a separate port.","In one embodiment, a null template pair (not shown) can be designated in the templates  and . The null template pair can be configured to capture and transmit data between the corporate client  and the device client  that has been compared with the other templates  or  of the corporate or device client and does not match with any of those templates. Such unmatched data can then be captured by the null template on either the corporate client side or the device client side and transmitted over to the null template of the other client. The respective client  can then forward the data according to pre-defined procedures. In this configuration, the null templates enable the tunneling system to operate similar to a traditional VPN configuration, wherein data is not collected and assigned according to protocol templates  and .","It should be noted that more than one remote device can be utilized in connection with the corporate network  at any given time. Thus, the illustration of one remote device is merely exemplary. Similarly, multiple corporate clients disposed in one or more corporate networks can be utilized in accordance with the present teachings while still residing within the scope of this invention.","Reference is now made to , B, and C in describing various techniques by which implementation of the present invention into network systems can be achieved. Note that the implementations to be described are merely exemplary; as such, other means of implementation can also be employed. In the first two implementations given below with respect to , it is noted that full encryption technology is preferably employed from device client  to corporate client  in order to secure the communications transmitted therebetween.","In , a first means of implementation is depicted, wherein the device client  of the present system  is compiled into a device application  of the remote device . The corporate client  is disposed in a software configuration within the corporate network  as previously discussed. Thus, both the device client  and corporate client  are implemented as software modules in the corporate network  and remote device , respectively.","In , both the corporate client  and the device client  are implemented as software modules, similar to . In contrast to , however, the present embodiment implements the device client  as a discrete software module being separately positioned with respect to the one or more device applications  that are located within the remote device . As before, the corporate client  resides as a software module within the corporate network . In this implementation, the device client  interacts with the device application  by implementing a port listener scheme by which the device client continuously monitors the port through which commands and data from the device application are sent and received. Once detected, this command and data information is intercepted by the device client  and manipulated for inclusion into an appropriate template  before being transmitted to the corporate client  via the carrier network  and tunneling server , as described earlier.","In  a third implementation is depicted, wherein a user interface, such as a user interface service (\u201cUIS\u201d) is employed. Here, the UIS, in the form of a wireless application protocol (\u201cWAP\u201d) browser, interacts with an application protocol from the corporate client  or device client  via the respective protocol template  and\/or . As seen in , for example, requested data from the corporate database  or application  is encrypted and forwarded by the corporate network  to the tunneling server  of the carrier network , again, using the template scheme discussed earlier. The tunneling server  or other component of the carrier network  then renders this data in a visual format before forwarding it on to the remote device . The device client  of the remote device  decrypts the visual data and further processes it as needed or desired. This embodiment can be implemented, among other things, in systems employing the WAP protocol, such as e-mail service for WAP-enabled mobile phones, for instance. Also, in embodiments incorporating the present UIS configuration, the UIS is normally located with the tunneling server  at the carrier network . In such embodiments, the UIS can contribute security features to enhance those already associated with the present invention, if desired. For instance, in a UIS implementation employing WAP protocol, WTLS, which is a WAP-related security program, can be utilized to provide data protection and integrity.","3. Protocol Mapping","Reference is now made to , which depicts another embodiment of the present invention. The system  for enabling secure communication as described above can be employed to enable data transfer between the corporate network  and the remote device over differing protocols.  shows that, as before, the corporate client  and the device client  include a set of templates  and , respectively. In the present embodiment, the corporate client  and the device client  are configured to map the inflection points  of one template \/ (pertaining to a given protocol) to the inflection points  of another template \/ that pertain to a differing protocol. This feature allows data of one protocol format to be switched, or mapped, to represent the data in another, differing protocol format. Thus, traditionally non-corresponding protocol data transfers between the corporate network  and the remote device  are enabled while preserving the encrypted features of the tunnel.","In a non-limiting example of the present embodiment,  shows the e-mail application  of the remote device  in communication with the device client . Likewise, the e-mail server  of the corporate network  is shown in communication with the corporate client . The e-mail application  in this example corresponds to the POP protocol, while the e-mail server  corresponds to the MAPI protocol. Thus, the two protocols are dissimilar in their ability to directly communicate with one another. The present embodiment resolves this dissimilarity by mapping from one protocol to the other. Exemplary, a \u201cretrieve e-mail message headers\u201d command from the e-mail application  is received by the device client  and fitted to the appropriate template, in this example, POP template B. The template B contains inflection points , including at least one inflection point for containing the POP command to retrieve e-mail message headers that are stored in the e-mail server . The templated command is then sent via the data tunnel  to the corporate client  of the corporate network  as an access request in the manner described above.","Once the templated command is received, the corporate client  employs its mapping feature to match the inflection points  of the templated POP command to those of a template  that corresponds to the MAPI protocol of the e-mail server , which is the intended target of the command. Thus, the corporate client  maps the command into the template A, which corresponds to the MAPI protocol of the e-mail server . The mapped, templated command to retrieve e-mail message headers is then forwarded to the e-mail server  in MAPI protocol format, where it is understood and acted on by the server. An access response containing the requested information is then prepared by the e-mail server  and forwarded to the corporate client , where a similar mapping process is followed to convert the access response data to POP protocol format for receipt by the e-mail application  via the device client .","As performed in the above example, the corporate client is preferably used for the mapping of the various protocols, though either or both clients can be configured to accomplish such mapping. When a specified client is used to perform the mapping, the other client generally acts as a pass-through conduit for the mapped command to arrive at the intended application or server.","Many applications can benefit from the above mapping embodiment. Indeed, in addition to e-mail applications, data synchronization applications such as Active Sync and Hot Sync that are typically used for updating data on a PDA from another data storage location, are further examples of the applicability of this mapping feature. Correspondingly, the examples specified herein are not meant to limit the present invention in any way.","4. Protocol Buffering","Yet another embodiment of the present invention is shown in . A buffering feature can be implemented with the protocol mapping feature of the present invention to accommodate mapping between protocols when certain complicating circumstances arise. In one circumstance, transient conditions occurring along the communication route defined by the data tunnel  and other components can temporarily interrupt the stream of data transmitted between the corporate network  and the remote device . If this occurs, a specified template of the template pair \/ can temporarily suspend the transmission of the data and instead store the data within the template itself until the transient conditions along the communication route are resolved and the data tunnel  is reestablished. Then the specified template can resume data transmission, sending the data that was temporarily buffered therein. In this way, no data is lost due to temporary interruptions in the connection between the corporate client  and the device client .","In a second circumstance, the protocol buffering feature of the present invention enables proper delivery of data packets. In some delivery systems used in connection with the present system, the order of data packets can be mixed up during transmission between the corporate network  and the remote device . Additionally, some packets may arrive later than other packets, creating further disorder. If either or both of these situations occur, the corresponding template \/ that is located on the receiving end of the of data packets (i.e., located in either the corporate client  or the device client ) can receive the dis-ordered group of packets as they arrive and hold them until all the packets necessary to form a consecutive packet arrangement are received. The template \/, in connection with the corresponding client  or , can then arrange and deliver the packets in an ordered sequence to the appropriate device for processing, as already described. For example, an application located in the remote device  can transmit, via the template A of the device client , five data packets, ordered 1-5, to the corporate client . The template A of the corporate client  receives four of the data packets in a dis-ordered and incomplete sequence, namely, 1, 2, 5, and 4. The template A, having received this packet stream then buffers the packets before forwarding them to the proper application, while awaiting the arrival of the third data packet. Once packet # arrives, the template A, in connection with the corporate client , arranges the packets into the proper 1-5 order, then forwards them to the corresponding application. In this way, communication routes or methods that would otherwise prevent the ordered transmission and receipt of data packets are compensated for and corrected by the buffering capability of the templates of the present invention. Further, this ability ensures that the applications of the corporate network  and remote device  that use the data stream function properly.","5. Protocol Filtering","Reference is again made to . According to another feature of the present invention, the system  for enabling secure communication can be utilized as a protocol filtering tool. As data packets are received by either the corporate client  or the device client  via the data tunnel , they are matched by the respective client against its protocol templates  or . If the data packets match a particular protocol template  or , they are input into that template and processed as already described further above. If no matching template  or  is found for a particular data packet, however, the present system can reject the data packet and delete it from the system, as indicated by the arrows  in . This deletion can occur at the corporate client , the device client , or both. In one embodiment, this filtering function occurs at the corporate client , where more system computing capacity and memory is located. The filtering capability described here enables the system  to act in an auxiliary firewall capacity by rejecting those data packets, such as hacker-related and malicious packets, that do not fit within pre-configured data templates, thereby enhancing security within the system.","It should be remembered that any combination of one or more of the embodiments described above (i.e., protocol enablement, mapping, buffering, filtering) can be configured to operate within the present system, according the systems needs and user preferences.","6. Tunneling Network Pipe with Guaranteed Enhanced UDP","Referring now to , the present invention provides methods and systems that enable the use of the User Datagram Protocol (UDP) in providing secure communications in virtual private networks, the system being generally designated at . As with previous embodiments, system  generally comprises a corporate network , a carrier network , and a remote device . In particular,  illustrates systems and methods of the present invention for enabling a user of the remote device  to access network data  and\/or one or more software applications  of the corporate network  through the transmission of UDP-formatted packets over data tunnel . Although data tunnel is shown as having data tunnel legs A and B, it will be appreciated that data tunnel leg B may be omitted in the event that UDP-formatted packets are sent and received between carrier network  and device  in a non-tunneling environment.","UDP is a protocol that, like TCP, runs on top of IP networks. Unlike TCP\/IP, conventional UDP\/IP offers only the minimal transport service of non-guaranteed packet delivery. UDP provides very few error recovery services, offering instead a direct way to send and receive packets over an IP network. As such, UDP is used primarily for broadcasting messages over a network but is generally considered inadequate for communications that need to be reliable. According to the invention, however, the very nature of UDP that makes it less reliable, its connectionless nature and the fact that UDP is a \u201cminimal transport service,\u201d also makes it ideally suited for use on a wireless network. This is because UDP does not require nearly the amount of network overhead that TCP does. This reduces bandwidth requirements significantly.","As indicated by arrow  in , a request to access network data and or application is created by device  and\/or tunneling client  as one or more UDP-formatted data packets . These packets  are transmitted to tunneling server , as indicated by arrow , which in turn relays the packets to tunneling client  through data tunnel leg A. Upon validating the identity of the user and approving the data access request, the corporate network  and\/or tunneling client  generates one or more UDP-formatted data packets , which contain the requested data. These packets  are transmitted to the tunneling server  through data tunnel leg A and then relayed to the device , as indicated by arrow .","As previously noted, however, current UDP technology is unreliable if used exclusively in this manner. Therefore, in order to make UDP data delivery reliable over IP networks such as wireless networks or the Internet, a number of enhanced features are provided by a unique combination of features according to the invention. One of these embodiments is guaranteed packet delivery. To accomplish guaranteed packet delivery, each packet that is sent by a source component is confirmed by the receiving component. If the source component does not receive a confirmation within a specified time period then a copy of the original packet is re-sent by the source. This pattern continues until a confirmation from the receiving component is received by the source component for the packet or a specified maximum re-sends has been attempted by the source component.","This process is depicted in  by arrows  and . Upon tunneling server  receiving UDP-formatted packet , a confirmation signal is sent to the device , as indicated by arrow , so that the device  can verify the packet was accurately transmitted. If not, the packet can be promptly resent. Similarly, upon tunneling client  receiving one or more of UDP-formatted packets , corresponding confirmation signals are sent to the tunneling server , as indicated by arrow , so that the tunneling server can verify that the packets are accurately transmitted. Of course, such confirmation signals can also be sent between the corporate network  and the tunneling server .","Another feature of the invention is guaranteed packet sequencing. Due to the connectionless nature of UDP it is possible that packets, e.g. packets , sent from the source component could be received in a different order by the receiving component. The tunneling clients on the computing network, carrier network, or remote device can therefore buffer packets as they are received and only delivery them to the target end of the tunnel in the original sequence that they were sent from the source end of the pipe. This process is further described in conjunction with  above, in the section titled, \u201cProtocol Buffering.\u201d","In addition, a tunneling client can divide larger blocks of data into optimized pieces (chunks) so the pieces can be sent across a wireless network without being fragmented by the network. In effect, the tunneling client is preempting any fragmenting that would be done by a network in order to reduce network overhead. For example, the tunneling client can divide larger blocks of data into 512 byte chunks. In the example of , each of packets  would therefore be configured to has a size of 512 bytes. After these small chunks are delivered to the end of the tunnel, the chunks can be reassembled into a single packet that is then delivered to the target application at the end of the pipe.","In addition, dividing larger blocks of data into smaller pieces also provides the added benefit that large data chunks are prevented from dominating a secure channel between a tunneling switch (tunneling client on the carrier network) and a tunneling client. This is achieved as the data is automatically multiplexed through the tunneling switch across multiple instances of tunneling sessions.","Another advantageous feature of the invention that can optionally be implemented is smart buffering, which is essentially the opposite of fragmenting large data blocks. Smart buffering is used to further optimize communication between the remote endpoint and the switch and to minimize wireless network bandwidth usage. When a tunnel is created, each endpoint specifies a maximum packet size and a timeout value that indicates how long the tunnel should wait for more data to be added to the send buffer before executing the send. When an application sends data down the pipe, the data is actually temporarily added to a buffer and not sent down the pipe until one of two conditions are met: the buffer is full based on the maximum packet size value; or the timeout has expired for more data to be added to the buffer. Thus, whereas fragmenting large data blocks is used to reduce data blocks to an optimum size for transmission, smart buffering is used to create larger packets that are an optimum size for transmission.","In addition each UDP packet can include a checksum value that is the MD5 representation of the packet itself. This is used to verify the integrity of the packet at the target end and ensure that the packet was not corrupted during transmission or tampered with by a third-party during transmission.","Another feature that can advantageously be used by the tunneling clients to improve UDP data transmission is compression. In one embodiment, a form of LZW compression (LZW is a compression technique that is well known to those skilled in the art) is used to compress the data before it is transmitted through the pipe. The compression can be switched on and off depending on a user's preferences or the detected bandwidth availability. In addition, some data packets do not require compression because the data is already compressed. In these cases, the tunneling client can dynamically detect data that does not require compression and allows it to pass through without further compression.","Since many of the features of the tunneling systems result in a TCP style experience for the application, a TCP style application program interface (API) can be used to simplify implementation of the tunneling systems. This would simplify and standardized use and adoption of the technology.","Another embodiment of the invention is a software development kit (SDK) that enables users to quickly implement the embodiments of the invention. An SDK is a programming package that enables a programmer to develop applications for a specific platform. Typically an SDK includes one or more APIs, programming tools, and documentation. The SDKs according to the invention could include, for example: an application program interface module comprising a set of routines, protocols, and tools for building software applications, wherein the application program interface module presents a TCP style interface to a programmer; a UDP-header library including one or more headers for use by a programmer in developing an application that applies UDP formatting to data for transmission over a network; and a network communications module comprising code operable to perform any of the various methods of communications between remote and local devices or networks disclosed herein.","7. Simplified User Authentication","Reference is now made to , depicting yet another embodiment of the present invention. As already mentioned, the data tunnel  is established by creating the data tunnel leg A from the corporate client  to the tunneling server , and the data tunnel leg B from the tunneling server  to the device client . The tunneling server  can then unite the two data tunnel legs A and B to form the complete data tunnel . Before enabling data to flow between the corporate client  and the device client , however, the corporate network  in executing the third tier of the three-tiered authentication and security regimen can require the user of the remote device  to be authenticated by the network. This can be accomplished by utilizing an authentication template pair , similar to the templates \/ described above. In one embodiment, the user enters appropriate security credentials, such as an NT domain password, radius security password, active security password, or custom password, into the device client . This security credential data is then input into the authentication template  of the device client . The templated security credential data is then forwarded via the data tunnel  to the corporate client , where it is received and input into the authentication template  of the corporate client. The security credential data is then forwarded to a security layer of the corporate network , including an authentication module , for user authentication. If authentication is successful, the security credential information can be preserved in a storage device , such as a 3DES encrypted database. Data can then be enabled by the corporate network  to flow between the corporate client  and the device client .","Once authentication by this or other similar method is accomplished, the security credential information can be synchronized by the corporate client  with the authentication\/password requirements of other designated applications, such as application servers  in the corporate network  that the user of the remote device  may choose to access. This synchronization causes the user authentication requirements of each designated application server  to be met. This in turn enables the user to access the various applications without again having to enter appropriate security credential information, such as a password, for each application contained on the application servers , thereby streamlining and simplifying use of the network for the user. This synchronized authorization can be distributed as narrowly or as broadly as designated by the corporate network  and security administrator.","The present invention enables secure data transfer between remotely disposed components using a simplified connectivity infrastructure. This in turn enables data synchronization and access between a corporate network and a remote device. In particular, the synchronization of corporate data with remotely disposed devices, as well as the utilization and enablement of native device applications in conjunction with a corporate network, are provided for. It should be understood that, though the principles herein have been directed at implementation within a tunneling environment, these principles can also be largely applied to other data transport embodiments having varying hardware\/software implementations, such as typical VPN configurations.","The present invention may be embodied in other specific forms without departing from its spirit or essential characteristics. The described embodiments are to be considered in all respects only as illustrative and not restrictive. The scope of the invention is, therefore, indicated by the appended claims rather than by the foregoing description. All changes which come within the meaning and range of equivalency of the claims are to be embraced within their scope."],"BRFSUM":[{},{}],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"BRIEF DESCRIPTION OF THE DRAWINGS","p":["To further clarify the above and other advantages and features of the present invention, a more particular description of the invention will be rendered by reference to specific embodiments thereof which are illustrated in the appended drawings. It is appreciated that these drawings depict only typical embodiments of the invention and are therefore not to be considered limiting of its scope. The invention will be described and explained with additional specificity and detail through the use of the accompanying drawings in which:",{"@attributes":{"id":"p-0026","num":"0025"},"figref":"FIG. 1"},{"@attributes":{"id":"p-0027","num":"0026"},"figref":["FIG. 2","FIG. 1"]},{"@attributes":{"id":"p-0028","num":"0027"},"figref":["FIG. 3","FIG. 1"]},{"@attributes":{"id":"p-0029","num":"0028"},"figref":"FIG. 4A"},{"@attributes":{"id":"p-0030","num":"0029"},"figref":"FIG. 4B"},{"@attributes":{"id":"p-0031","num":"0030"},"figref":"FIG. 4C"},{"@attributes":{"id":"p-0032","num":"0031"},"figref":"FIG. 5"},{"@attributes":{"id":"p-0033","num":"0032"},"figref":"FIG. 6"},{"@attributes":{"id":"p-0034","num":"0033"},"figref":"FIG. 7"}]},"DETDESC":[{},{}]}
