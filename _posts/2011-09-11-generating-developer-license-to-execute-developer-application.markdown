---
title: Generating developer license to execute developer application
abstract: One or more techniques and/or systems are disclosed for generating a developer license that allows a developer application to run on developer machine. A user identification (userID) used to register a user can be used by the user to register as a developer. The userID can be authenticated for the registered developer. Further, a machine used by the developer for the developer application can be registered, and a resulting hardware identification (hardwareID) can be authenticated for the registered developer machine. Additionally, a developer certificate can be generated for the registered developer. The developer certificate can be authenticated and used to sign the developer application. The developer license can be generated for the developer, allowing the developer machine to execute the developer application, based at least upon the authenticated userID, the authenticated hardwareID, and the authenticated developer certificate.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09009855&OS=09009855&RS=09009855
owner: Microsoft Technology Licensing, LLC
number: 09009855
owner_city: Redmond
owner_country: US
publication_date: 20110911
---

{"@attributes":{"id":"description"},"BRFSUM":[{},{}],"heading":["BACKGROUND","SUMMARY","DETAILED DESCRIPTION"],"p":["Computing devices typically comprise a device platform environment, such as a device operating system, that provides an operating environment in which an application may execute on the device. Often, an application is developed to execute merely in one particular device platform environment, such that a different version of the application may be needed for respective different device platform environments. Further, an executable version of an application can be provided to a computing device in a variety ways, including via an external data storage component (e.g., disk, portable memory, etc.), a network source connected to the device and\/or from an online network site (e.g., website) to which the device has connected.","This Summary is provided to introduce a selection of concepts in a simplified form that are further described below in the Detailed Description. This Summary is not intended to identify key factors or essential features of the claimed subject matter, nor is it intended to be used to limit the scope of the claimed subject matter.","Some device platform environments used by a computing device comprise \u201cclosed systems\u201d, in which, merely those applications that are certified and\/or signed by an authority of the device platform environment, can execute. That is, for example, if a user attempts to execute an unsigned\/uncertified application in the device platform environment, the execution may be blocked. An owner of a particular device platform environment may wish to prevent unsigned\/uncertified applications from operating for security purposes (e.g., mitigating malicious code) and\/or to provide a desirable user experience (e.g., mitigating poorly written code, undesirable programs, etc.).","However, preventing unsigned and\/or uncertified applications from executing in the particular device platform can also prevent an application developer from running and testing their applications. For example, a developer may wish to write an application for the particular device platform environment. In this example, prior to certification and deployment (e.g., to an online application store) the developer may wish to test and execute the application in the device platform environment to test for a desirable end-user experience. During development, the developer application (e.g., in development, prior to certification and\/or deployment) will not be certified or signed by the authority for the device platform environment (e.g., because it may not yet be secure and\/or provide the desired user experience). Therefore, the developer may be prevented from effectively testing their developer application in the device platform environment.","Accordingly, one or more techniques and\/or systems are disclosed for an application developer to develop and deploy an application, for example, in a closed system, such as where merely a certified application may be deployed. A developer license may be issued to the developer, where the developer is registered and has been authenticated. Further, the developer license may limit execution of the developer application merely to a particular developer machine. Additionally, the developer license may merely allow the developer application to execute in the device platform environment if the application is signed by an authenticated developer certificate.","In one embodiment of generating a developer license that allows a developer application to run on developer machine, a registered developer can be authenticated, based at least upon a registered user identification (userID) for the registered developer. Further, a registered developer machine may be authenticated using a registered hardware identification (hardwareID) for the registered developer machine. Additionally, a developer certificate, used to sign the developer application, may be authenticated. The developer license can be generated based on the authenticated userID, authenticated hardwareID, and authenticated developer certificate, where the developer license can be used to allow the developer application to run on the registered developer machine.","To the accomplishment of the foregoing and related ends, the following description and annexed drawings set forth certain illustrative aspects and implementations. These are indicative of but a few of the various ways in which one or more aspects may be employed. Other aspects, advantages, and novel features of the disclosure will become apparent from the following detailed description when considered in conjunction with the annexed drawings.","The claimed subject matter is now described with reference to the drawings, wherein like reference numerals are generally used to refer to like elements throughout. In the following description, for purposes of explanation, numerous specific details are set forth in order to provide a thorough understanding of the claimed subject matter. It may be evident, however, that the claimed subject matter may be practiced without these specific details. In other instances, structures and devices are shown in block diagram form in order to facilitate describing the claimed subject matter.","As provided herein, one or more techniques and\/or systems may be devised that provide for an application developer to develop and deploy an application, for example, in a closed system, such as where merely a certified application may be deployed. As an illustrative example, a developer that may be in the process of developing an application for deployment to an online application store may merely be able to work on the application if the application has been certified for use in a device platform environment (e.g., operating system (OS)) supported by the application store (e.g., for security purposes, where the store provides applications that execute in the particular device platform environment). A developer license can be issued to the developer so that the developer's application can be tested and executed in the device platform environment on the developer's machine that comprises the device platform environment, for example (e.g., has a particular OS installed thereon).",{"@attributes":{"id":"p-0018","num":"0017"},"figref":"FIG. 1","b":["100","100","102","104"]},"As an example, a registered developer may be able to identify themselves to the online application development service using the registered userID. Further, in this example, the online application development service may require developers registered with the service to obtain a developer license in order to run and\/or test developer applications on their own machines. In this example, to obtain the developer license, the userID for the registered developer can be authenticated, such as by comparing the userID (e.g., and related security information, such as a secret key) to information associated with the registered user, stored by the online application development service.","At  in the exemplary method , a hardware identification (hardwareID) associated with a developer machine (e.g., a computer used by the developer to develop, test and\/or execute the developer application) can be authenticated. As an example, a developer machine, such as a personal computing device used by the registered developer, may comprise a hardwareID that is specific to the developer machine. Further, the registered developer can register their developer machine with the online application development service, for example, so that the registered developer machine can be used to develop an application for use by the online application development service (e.g., uploaded to the online application store).","During the developer machine registration, for example, the hardwareID for the developer machine may be stored (e.g., on a server remotely situated from the developer machine) by the online application development service for authentication purposes (e.g., for subsequent comparison with a hardwareID submitted for authentication). Further, in this example, when the registered developer wishes to obtain the developer license, the online application development service may obtain the hardwareID from the developer machine submitting a request for the developer license. The obtained hardwareID can be compared to the hardwareID stored for authentication purposes by the online application development service, for example, to authenticate the developer machine comprising the hardwareID.","At , a developer certificate that is used to sign the developer application, for which the developer license is being requested, can be authenticated. As an example, a developer certificate can comprise a certificate associated with the developer (e.g., identifying the developer) that may be used to sign an application authored by the developer. The developer certificate can be provided by the online application development service, for example, and rooted in a network site (e.g., website) associated with online application development service (e.g., providing a trusted authority for identifying the developer). In this way, for example, the developer certificate used to sign developer application can be authenticated by comparing a serial number for the certificate to a database of developer certificates issued by the online application development service.","At , the developer license can be generated for the authenticated developer, for a developer application that is signed by the authenticated developer certificate. Further, the developer license provides for the authenticated developer to run the developer application, signed by the authenticated developer certificate, on the registered developer machine that comprises the authenticated hardwareID. In this way, for example, the authenticated developer may be able to test and\/or execute the developer application on their authenticated machine, comprising a device platform environment supported by the online application development service, before certifying the application for use by the service (e.g., making the application available on an online application store). Having generated the developer license, the exemplary method  ends at .",{"@attributes":{"id":"p-0024","num":"0023"},"figref":"FIG. 2","b":["200","202"]},"At , the developer can request a developer certificate that may be used to sign a developer application (e.g., an application developed by the registered developer, such as for a device platform environment supported by the online application development service). A developer certificate can comprise a digital document that indicates the identity of the developer (e.g., like a written signature on a document), where the identity has been verified by a trusted authority issuing the certificate. In this way, for example, when the developer certificate is used to sign an application it can identify the owner\/developer\/author of the application; and indicate that the identity has been verified by the trusted authority (e.g., if the certificate is authenticated).","At , the developer can register a developer machine and create a hardware identification (hardwareID) for the developer machine. In one embodiment, a developer certificate issuing process (e.g., initiated at ) may comprise registering the developer machine. For example, the online application development service may require that a request for the developer certificate come from a registered developer machine, comprising a known hardwareID (e.g., for security purposes). In one embodiment, the hardwareID may be provided to the developer  (e.g., stored on the developer machine) and\/or stored by a service  generating the developer license (e.g., the online application development service).","In one embodiment, the developer machine can be registered as the registered developer machine, resulting in the hardwareID. As an example, the developer machine being registered can comprise a computing device that the developer uses to request the developer certificate, develop a developer application for the online application development service and\/or request a developer license for executing the developer application in a device platform environment supported by the online application development service. In this embodiment, the registration process may provide the hardwareID for the registered machine, such as by extracting data from the developer machine that is particular to the developer machine and\/or by receiving a unique hardwareID from the registered developer.","In one embodiment, the hardwareID can be created, at least in part, by combining one or more portions of one or more serial numbers that may be associated with one or more pieces of hardware comprised in the developer machine being registered. As an illustrative example, a computing device can comprise a basic input\/output system (BIOS), motherboard, video card, hard disk drive, input device, memory, processor, and other components. In this example, one or more of the components in the device may comprise a serial number that can be identified. Further, one or more portions of respective identified serial numbers can be extracted, for example, and combined to create a hardwareID that is particular to the computing device. For example, a serial number is typically specific to merely one component; and, by combining one or more portions of one or more serial numbers for the device, the resulting hardwareID can be particular to merely the developer machine.","At  in the example embodiment , the developer certificate can be created for the developer. In one embodiment, the developer certificate can be rooted in a verified certificate for an online network site, such as associated with the service that is generating the developer license (e.g., an online application store). In this embodiment, for example, rooting the developer certificate in the verified certificate for the online network site can provide the \u201ctrusted authority\u201d used to verify the identity of the developer requesting the developer license.","Further, a copy of the developer certificate can be provided to the developer , for example, for use by the developer to sign the developer application. In one embodiment, the generated developer certificate can be stored locally on the registered developer machine. Additionally, a serial number associated with the developer certificate can be stored remotely  from the developer machine (e.g., by the online application development service), for example, for use in subsequent certificate authentication (e.g., retrievable from a database identifying valid certificates).","At  in the example embodiment , the registered developer can open a developer tool (e.g., used to write, test and\/or execute the developer application) on the registered developer machine. In one embodiment, opening the developer tool to interact with the developer application can initiate a response in which a developer license may be identified. As an example, the device platform environment, in which the developer application is executed, may require that a valid developer license be appropriately stored on the developer machine in order to run the developer application, and\/or for the developer tool to be able to interact with the developer application.","At , a developer license cache on the registered developer machine may be searched to identify a developer license (e.g., and\/or the developer may provide a location of the developer license on the developer machine, and\/or the developer may provide the developer license). If the developer license is identified (YES at ), the identified developer license can be validated, at . If the developer license is not identified (NO at ), the developer license can be generated, at .","Generating the developer license for the authenticated developer can comprise requesting credentials for the developer license, at . For example, credentials used for creating the developer license can comprise the registered developers userID, the hardwareID for the registered developer machine, and\/or the developer certificate. In one embodiment, one or more of the credentials may be provided by the registered developer, and\/or one or more of the credentials may be identified on the developer machine.","For example, the registered developer may provide their userID, and the hardwareID may be retrieved from the developer machine (e.g., stored on the machine, or derived from the one or more portions of the respective serial numbers of the one or more components from the developer machine). Further, the developer certificate may be provided by the registered user, or the developer certificate (e.g., or the serial number from the certificate) may be identified from the signature of the developer application intended to be executed on the developer machine.","At  in the example embodiment , the credentials can be authenticated. Authenticating the credentials can comprise authenticating the registered userID, for example, thereby authenticating the registered developer. Further, the hardwareID for the registered developer machine can be authenticated, along with the developer certificate provided for the developer application.","As an example, the userID may be compared against a database comprising registered developers to authenticate the identity of the developer requesting the developer certificate. Additionally, as an example, the hardwareID can be can be compared against one or more hardwareIDs stored (e.g., at ) by the service, for registered developer machines. Similarly, as an example, the serial number of the developer certificate provided for the developer application can be compared to one or more stored serial numbers (e.g., at ) of valid developer certificates. In this way, in this example, the respective userID, hardwareID, and developer certificate may be authenticated for the registered developer, associated with the userID, wishing to execute the developer application, signed by the developer certificate, on the registered developer machine, comprising the hardwareID.","At  in the example embodiment , the developer license can be created, where the developer license comprises the authenticated credentials, comprising the authenticated userID, the authenticated hardwareID, and\/or the authenticated developer certificate (e.g., the serial number or other identifier or identification of the authenticated developer certificate). That is, for example, the authenticated credentials can be embedded in the developer license in such a way that mitigates altering one or more aspects of the license.","At , the developer license is signed with a trusted certificate from an online network site (e.g., a trusted and\/or verified website, and\/or web service that authenticates certificate credentials). In one embodiment, the generated developer license can be provided to the developer , where the generated developer license may be stored locally on the registered developer machine (e.g., in cache). In one embodiment, the generated developer license (e.g., or an identification associated with the license) can be stored by the service generating the developer license  (e.g., stored remotely by the online application store), for subsequent comparison purposes (e.g., to validate the developer license).",{"@attributes":{"id":"p-0039","num":"0038"},"figref":"FIG. 3","b":["300","302"]},"At , it may be determined whether the developer application is signed by an authenticated developer certificate. In one embodiment, the developer can sign the developer application with the developer certificate, at . If the developer application is signed by the developer certificate, an identification (e.g., serial number) associated with the developer certificate may be identified, for example. In order to determine whether the signing developer certificate is authenticated, for example, the certificate's serial number can be compared against stored serial numbers of valid developer certificates  (e.g., stored on a remote server by the licensing service).","At , if the developer application is signed by an authenticated developer certificate, it may be determined whether a developer license  is stored locally on the developer machine. As an example, when the developer license is generated for the developer, running the developer application, the generated developer license may be stored locally in a developer license cache. In this example, the development license cache can be searched for a developer license. In one embodiment, the developer may provide the developer license  (e.g., upon request), or may provide a location in which the developer license is stored on the developer machine.","At , if the developer license is identified on the developer device and\/or provided by the developer, the identified developer license can be validated. Validating the developer license can comprise validating information comprised in the developer license , such as an authenticated userID, an authenticated hardwareID, the authenticated developer certificate, and\/or a signature. At  the userID can be validated, for example, by comparing the userID in the developer license  with stored validation information  for the device and\/or developer.","At , the hardwareID in the developer license  can be validated, for example, by comparing the information in the developer license  with the stored validation information  for the developer machine, and\/or compared against the actual hardwareID derived from the developer machine. At , the developer certificate in the developer license  can be validated, for example, by comparing a serial number of the developer certificate in the developer license  with the stored validation information  for the device.","At  in the example embodiment , the developer license validation can comprise matching the developer license  stored locally on the registered developer machine and\/or provided by the developer with a remotely stored developer license  for the developer. As an example, an identification (e.g., serial number) associated with the developer license on the developer machine can be checked against a database of identifications comprising valid developer licenses, to determine validity. At , the signature comprised in the developer license , stored locally on the registered developer machine, can be validated for the issuer of the developer license. For example, a valid developer license is signed by a trusted certificate from trusted online network site (e.g., comprising the online application development service). The trusted certificate can be validated by comparing an identification of the certificate against a list of valid certificates, for example.","If one or more portions of the developer license are not validated, for example, the developer license may not be validated. If the developer license  is not validated (NO at ) the developer application can be blocked, at , from executing on the developer machine (e.g., or run\/tested by the developer tool on the developer machine). If the developer license  is found to be validated (YES at ) the developer application may be allowed to be written, tested and\/or executed on the developer machine, at . In this way, for example, in order for the developer application to execute on the developer machine, the developer license must be installed on the registered developer machine and\/or provided by the developer, the developer license must be validated (e.g., comprise valid information, an authenticated userID, an authenticated hardwareID, and a valid signature), and the developer application must be signed by an authenticated developer certificate.","A system may be devised that allows a developer to write, test and\/or execute a developer application on the developer's computer, where the developer application is configured to execute in a particular device platform environment. For example, if the particular device platform environment is a \u201cclosed-type\u201d platform, the developer application may need to be certified by an authority for the particular device platform environment before it is allowed to execute in the device platform environment. A developer license can be generated that allows the developer to write, test and\/or execute the developer application on the developer's computer, for example, where the license can be validated at runtime of the developer application.",{"@attributes":{"id":"p-0047","num":"0046"},"figref":"FIG. 4","b":["400","400","402","402","404","450"]},"Further, the authentication component  is operably coupled with a developer license generation component . The developer license generation component  is configured to generate the developer license  for the authenticated developer. The developer license allows the developer application to run on a registered developer machine that comprises an authenticated hardware identification (hardwareID), where the developer application is signed by an authenticated developer certificate.","In one embodiment, the developer application can be configured to execute in a device platform environment that is supported by an online application service. In this embodiment, the online application service may provide one or more applications from one or more developers, where the one or more applications are for use in the device platform environment. As an illustrative example, the device platform environment may comprise an operating system configured for a particular type of computing device. In this example, the one or more applications, created by the one or more developers, may be written merely for use in the operating system used by the particular type of computing device.","Further, in this example, the online application service may comprise a web-based service that provides the applications to users, where the applications must be certified (e.g., for security purposes) by the web-based service before they can be made available by the web-based service. In this example, prior to certification and deployment to the web-based service, the developer may wish to write, test and\/or execute the developer application on their own developer machine. The exemplary system  may be used to generate the developer license that allows the developer to write, test and\/or execute the developer application on their own developer machine prior to certification and deployment to the web-based service.",{"@attributes":{"id":"p-0051","num":"0050"},"figref":["FIG. 5","FIG. 4","FIG. 4"],"b":["500","500","552","566","500","552","554","556","558"]},"In the example embodiment , the developer license generation component  comprises a hardwareID authentication component  that can be configured to authenticate a hardwareID  resulting in the authenticated hardwareID . Further, the developer license generation component can comprise a developer certificate authentication component  that can be configured to authenticate a developer certificate  resulting in the authenticated developer certificate, as indicated by the authenticated developer certificate serial number . Additionally, the developer license generation component can comprise a license creation component  that is configured to create the developer license , where the developer license  comprises the authenticated userID , the authenticated hardwareID , the authenticated developer certificate identification , and where the developer license  is signed by a trusted certificate from an online network site (e.g., the online application service).","In the example embodiment , a developer certificate generation component  can be configured to generate the developer certificate  for use in signing the developer application, where the generated developer certificate  is valid for a registered developer  using a registered developer machine . For example, the developer certificate generation component  can utilize a userID  from the registered developer  and\/or the hardwareID  from the registered developer machine  to generate the developer certificate  that identifies the registered developer  and\/or the registered developer's registered machine . In this way, the registered developer  may use the developer certificate  to sign the developer application, for example, providing a trusted verification of the developer's identity, and\/or an identity of the developer machine , where the developer certificate  is rooted in trusted certificate from an online network site (e.g., an online application service).","A registration component  can be configured to register a user as the registered developer  based at least upon the registered userID . That is, for example, a user that has been authenticated by an online service (e.g., by providing personal identification information) can utilize a userID resulting from the user registration to register as a registered developer , using the registration component . Further, the registration component  can be configured to register a developer machine as the registered developer machine  resulting in the hardwareID . For example, the registration component may create the hardwareID by combining one or more portions of respective serial numbers from one or more components comprised in the developer machine (e.g., resulting in a unique hardwareID for the developer machine).","In the example embodiment , a developer license validation component  can be configured to validate the developer license , for example, at runtime of the developer application on the registered developer machine . The developer license validation component  can be configured to determine that the developer license  is stored on the registered developer machine, such as stored in a local cache. Further, the developer license validation component  can be configured to match the developer license  (e.g., a serial number assigned to, and comprised in, the developer license) with a remotely stored developer license (e.g., remotely stored serial number associated with a valid developer license).","Additionally, the developer license validation component  can be configured to validate the registered userID , the authenticated hardwareID , the authenticated developer certificate , and\/or a license signature, respectively comprised in the developer license . For example, at runtime of the developer application on the developer machine, the developer license validation component  can find the locally stored developer license , and then validate the respective components (e.g., embedded information) of the license prior to allowing the developer application to execute on the developer machine . In this way, for example, the online application service may be more assured that merely those applications that are authorized to execute in a particular device platform environment, supported by the online application service, may be run on an authorized developer machine.","Still another embodiment involves a computer-readable medium comprising processor-executable instructions configured to implement one or more of the techniques presented herein. An exemplary computer-readable medium that may be devised in these ways is illustrated in , wherein the implementation  comprises a computer-readable medium  (e.g., a CD-R, DVD-R, or a platter of a hard disk drive), on which is encoded computer-readable data . This computer-readable data  in turn comprises a set of computer instructions  configured to operate according to one or more of the principles set forth herein. In one such embodiment , the processor-executable instructions  may be configured to perform a method, such as at least some of the exemplary method  of , for example. In another such embodiment, the processor-executable instructions  may be configured to implement a system, such as at least some of the exemplary system  of , for example. Many such computer-readable media may be devised by those of ordinary skill in the art that are configured to operate in accordance with the techniques presented herein.","Although the subject matter has been described in language specific to structural features and\/or methodological acts, it is to be understood that the subject matter defined in the appended claims is not necessarily limited to the specific features or acts described above. Rather, the specific features and acts described above are disclosed as example forms of implementing the claims.","As used in this application, the terms \u201ccomponent,\u201d \u201cmodule,\u201d \u201csystem\u201d, \u201cinterface\u201d, and the like are generally intended to refer to a computer-related entity, either hardware, a combination of hardware and software, software, or software in execution. For example, a component may be, but is not limited to being, a process running on a processor, a processor, an object, an executable, a thread of execution, a program, and\/or a computer. By way of illustration, both an application running on a controller and the controller can be a component. One or more components may reside within a process and\/or thread of execution and a component may be localized on one computer and\/or distributed between two or more computers.","Furthermore, the claimed subject matter may be implemented as a method, apparatus, or article of manufacture using standard programming and\/or engineering techniques to produce software, firmware, hardware, or any combination thereof to control a computer to implement the disclosed subject matter. The term \u201carticle of manufacture\u201d as used herein is intended to encompass a computer program accessible from any computer-readable device, carrier, or media. Of course, those skilled in the art will recognize many modifications may be made to this configuration without departing from the scope or spirit of the claimed subject matter.",{"@attributes":{"id":"p-0061","num":"0060"},"figref":["FIG. 7","FIG. 7"]},"Although not required, embodiments are described in the general context of \u201ccomputer readable instructions\u201d being executed by one or more computing devices. Computer readable instructions may be distributed via computer readable media (discussed below). Computer readable instructions may be implemented as program modules, such as functions, objects, Application Programming Interfaces (APIs), data structures, and the like, that perform particular tasks or implement particular abstract data types. Typically, the functionality of the computer readable instructions may be combined or distributed as desired in various environments.",{"@attributes":{"id":"p-0063","num":"0062"},"figref":["FIG. 7","FIG. 7"],"b":["700","712","712","716","718","718","714"]},"In other embodiments, device  may include additional features and\/or functionality. For example, device  may also include additional storage (e.g., removable and\/or non-removable) including, but not limited to, magnetic storage, optical storage, and the like. Such additional storage is illustrated in  by storage . In one embodiment, computer readable instructions to implement one or more embodiments provided herein may be in storage . Storage  may also store other computer readable instructions to implement an operating system, an application program, and the like. Computer readable instructions may be loaded in memory  for execution by processing unit , for example.","The term \u201ccomputer readable media\u201d as used herein includes computer storage media. Computer storage media includes volatile and nonvolatile, removable and non-removable media implemented in any method or technology for storage of information such as computer readable instructions or other data. Memory  and storage  are examples of computer storage media. Computer storage media includes, but is not limited to, RAM, ROM, EEPROM, flash memory or other memory technology, CD-ROM, Digital Versatile Disks (DVDs) or other optical storage, magnetic cassettes, magnetic tape, magnetic disk storage or other magnetic storage devices, or any other medium which can be used to store the desired information and which can be accessed by device . Any such computer storage media may be part of device .","Device  may also include communication connection(s)  that allows device  to communicate with other devices. Communication connection(s)  may include, but is not limited to, a modem, a Network Interface Card (NIC), an integrated network interface, a radio frequency transmitter\/receiver, an infrared port, a USB connection, or other interfaces for connecting computing device  to other computing devices. Communication connection(s)  may include a wired connection or a wireless connection. Communication connection(s)  may transmit and\/or receive communication media.","The term \u201ccomputer readable media\u201d may include communication media. Communication media typically embodies computer readable instructions or other data in a \u201cmodulated data signal\u201d such as a carrier wave or other transport mechanism and includes any information delivery media. The term \u201cmodulated data signal\u201d may include a signal that has one or more of its characteristics set or changed in such a manner as to encode information in the signal.","Device  may include input device(s)  such as keyboard, mouse, pen, voice input device, touch input device, infrared cameras, video input devices, and\/or any other input device. Output device(s)  such as one or more displays, speakers, printers, and\/or any other output device may also be included in device . Input device(s)  and output device(s)  may be connected to device  via a wired connection, wireless connection, or any combination thereof. In one embodiment, an input device or an output device from another computing device may be used as input device(s)  or output device(s)  for computing device .","Components of computing device  may be connected by various interconnects, such as a bus. Such interconnects may include a Peripheral Component Interconnect (PCI), such as PCI Express, a Universal Serial Bus (USB), firewire (IEEE 1394), an optical bus structure, and the like. In another embodiment, components of computing device  may be interconnected by a network. For example, memory  may be comprised of multiple physical memory units located in different physical locations interconnected by a network.","Those skilled in the art will realize that storage devices utilized to store computer readable instructions may be distributed across a network. For example, a computing device  accessible via network  may store computer readable instructions to implement one or more embodiments provided herein. Computing device  may access computing device  and download a part or all of the computer readable instructions for execution. Alternatively, computing device  may download pieces of the computer readable instructions, as needed, or some instructions may be executed at computing device  and some at computing device .","Various operations of embodiments are provided herein. In one embodiment, one or more of the operations described may constitute computer readable instructions stored on one or more computer readable media, which if executed by a computing device, will cause the computing device to perform the operations described. The order in which some or all of the operations are described should not be construed as to imply that these operations are necessarily order dependent. Alternative ordering will be appreciated by one skilled in the art having the benefit of this description. Further, it will be understood that not all operations are necessarily present in each embodiment provided herein.","Moreover, the word \u201cexemplary\u201d is used herein to mean serving as an example, instance, or illustration. Any aspect or design described herein as \u201cexemplary\u201d is not necessarily to be construed as advantageous over other aspects or designs. Rather, use of the word exemplary is intended to present concepts in a concrete fashion. As used in this application, the term \u201cor\u201d is intended to mean an inclusive \u201cor\u201d rather than an exclusive \u201cor\u201d. That is, unless specified otherwise, or clear from context, \u201cX employs A or B\u201d is intended to mean any of the natural inclusive permutations. That is, if X employs A; X employs B; or X employs both A and B, then \u201cX employs A or B\u201d is satisfied under any of the foregoing instances. Further, At least one of A and B and\/or the like generally means A or B or both A and B. In addition, the articles \u201ca\u201d and \u201can\u201d as used in this application and the appended claims may generally be construed to mean \u201cone or more\u201d unless specified otherwise or clear from context to be directed to a singular form.","Also, although the disclosure has been shown and described with respect to one or more implementations, equivalent alterations and modifications will occur to others skilled in the art based upon a reading and understanding of this specification and the annexed drawings. The disclosure includes all such modifications and alterations and is limited only by the scope of the following claims. In particular regard to the various functions performed by the above described components (e.g., elements, resources, etc.), the terms used to describe such components are intended to correspond, unless otherwise indicated, to any component which performs the specified function of the described component (e.g., that is functionally equivalent), even though not structurally equivalent to the disclosed structure which performs the function in the herein illustrated exemplary implementations of the disclosure. In addition, while a particular feature of the disclosure may have been disclosed with respect to only one of several implementations, such feature may be combined with one or more other features of the other implementations as may be desired and advantageous for any given or particular application. Furthermore, to the extent that the terms \u201cincludes\u201d, \u201chaving\u201d, \u201chas\u201d, \u201cwith\u201d, or variants thereof are used in either the detailed description or the claims, such terms are intended to be inclusive in a manner similar to the term \u201ccomprising.\u201d"],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"DESCRIPTION OF THE DRAWINGS","p":[{"@attributes":{"id":"p-0009","num":"0008"},"figref":"FIG. 1"},{"@attributes":{"id":"p-0010","num":"0009"},"figref":"FIG. 2"},{"@attributes":{"id":"p-0011","num":"0010"},"figref":"FIG. 3"},{"@attributes":{"id":"p-0012","num":"0011"},"figref":"FIG. 4"},{"@attributes":{"id":"p-0013","num":"0012"},"figref":"FIG. 5"},{"@attributes":{"id":"p-0014","num":"0013"},"figref":"FIG. 6"},{"@attributes":{"id":"p-0015","num":"0014"},"figref":"FIG. 7"}]},"DETDESC":[{},{}]}
