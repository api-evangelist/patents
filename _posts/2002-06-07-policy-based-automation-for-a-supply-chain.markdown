---
title: Policy based automation for a supply chain
abstract: A method is provided for implementing a computer network system for managing a supply chain, wherein the computer network system comprising a plurality of application server computers. The method includes: identifying a business context for the supply chain; identifying a set of business policy rules for the business context, the set of business policy rules governing the relationship between two or more entities involved in the supply chain; creating at least one use-case description from the set of business policy rules; creating a plurality of executable code modules corresponding to the use-case description; specifying a plurality of name/value pair for modeling the set of business policy rules; provisioning the plurality of application server computers of the computer network system with the executable code modules; and provisioning a central directory database with the plurality of name/value pairs; whereby the computer network system, in response to one or more events in business transactions between at least two entities involved in the supply chain, is operable to dynamically deliver at least one name/value pair from the central directory database and to execute at least one code module.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08055527&OS=08055527&RS=08055527
owner: Servigistics, Inc.
number: 08055527
owner_city: Atlanta
owner_country: US
publication_date: 20020607
---

{"@attributes":{"id":"description"},"RELAPP":[{},{}],"heading":["CROSS-REFERENCE TO RELATED APPLICATIONS","COPYRIGHT AND TRADEMARK NOTICE","FIELD OF THE INVENTION","BACKGROUND OF THE INVENTION","SUMMARY OF THE INVENTION","DETAILED DESCRIPTION"],"p":["This application is a nonprovisional of, and claims the priority of, U.S. Provisional Patent Application Ser. No. 60\/297,018 filed on Jun. 8, 2001, entitled \u201cSupply Chain Management,\u201d which is assigned to the present Assignee and is incorporated herein by reference. This application is related to co-filed U.S. application Ser. No. 10\/165,737, filed on Jun. 7, 2002, entitled, \u201cSeparating Decision Logic from Action Logic in a Supply Chain Management System,\u201d which is assigned to the present Assignee and incorporated herein by reference in its entirety. This application is also related to U.S. application Ser. No. 10\/028,542, filed on Dec. 19, 2001, entitled, \u201cSupply Chain Management\u201d and to U.S. application Ser. No. 10\/027,965, also filed on Dec. 19, 2001, entitled, \u201cReporting in a Supply Chain.\u201d","A portion of the disclosure of this patent document contains material which is subject to copyright protection. The owner has no objection to the facsimile reproduction by any one of the patent document or the patent disclosure, as it appears in the Patent and Trademark Office patent file or records, but otherwise reserves all copyrights whatsoever. Certain marks referenced herein may be common law or registered trademarks of third parties, affiliated or unaffiliated, with the applicant or the assignee. Use of these marks is by way of example and shall not be construed as descriptive or limit the scope of this invention to material associated only with such marks.","The invention relates to the management of supply chains for creating, procuring, and delivering tangible goods. In particular, it relates to policy based automation for a supply chain.","Systems and methods for conducting commerce via an electronic means, such as a computer network are commonplace. Some such systems have been used to coordinate entities involved in manufacturing, procuring, distributing, supplying, repairing, and returning products and parts. Previously developed techniques may have been custom tailored to individual commercial activities and are commonly, but not always, oriented towards trade. Previous techniques have also not been adaptable to provide a versatile system capable of supporting a wide range, and, more importantly, a dynamic range of providers of raw materials, goods and, sometimes, related services.","For example, personal computer manufacturers may offer many series of computer models, that can be individually configured with board level, drive level or similar subsystems, each of which may have dozens or thousands of components having multiple layers of assembly and permutation. These components themselves may involve complex supply chains, which must be organized, not merely for production, but also for providing spare parts for servicing, supplies for product development, and ad hoc needs. The requirements for components may continually change as the technology evolves so that parts and models are introduced and obsoleted in quick succession.","A traditional approach to the problem of managing a supply chain is vertical integration. Vertical integration essentially allows in-house service to be supplied with minimal tracking or internal accounting when both \u201cvendor\u201d and \u201cconsumer\u201d belong to the same enterprise. Vertical integration, however, is unfeasible for any but the largest enterprises when the product is complex and large volume. Even for giant corporations, it is easy to be overwhelmed by ever growing complexity, expectations and sheer size not to mention an ongoing drive towards more efficiency and accountability of many operational business units.","Moreover, vertically integrated business models are rapidly giving way to outsourcing. Oftentimes, OEMs (original equipment manufacturers) respond to cost and competitive issues by divesting operations and outsourcing key functions, such as manufacturing, distribution, logistics, service, and inventory management. The rationale behind outsourcing is to focus on core competencies, and to transfer responsibility for other activities to service providers who can enjoy, and share, the benefits of their own economies of scale and scope.","Outsourcing has delivered significant financial value (and sometimes, unexpected financial opportunities and\/or problems) to both the OEMs and the growing clusters of companies that support them. However, outsourcing, along with globalization and system\/application proliferation, has also caused an increase in administrative complexity across supply chains. Responses to such issues have included initiatives for enterprise and collaborative planning across supply chain networks.","Initiatives in outsourcing and collaborative planning have exposed a critical flaw in today's extended supply chains: specifically that they are not configured for efficient execution. Ostensibly, efficient execution is typical for companies that are vertically integrated. Thus, managing a supply chain has become a task of near exponentially growing complexity that enterprise-focused systems cannot adequately support. Furthermore, collaborative planning solutions, though useful, fail to coordinate execution across supply chains.","Computer architectures for online electronic commerce have been developed using, for example, the Internet as a transport mechanism to transmit data representing purchase (and similar) requests between a proprietary browser and server product pair. However, such computer architectures have resulted in further complexity and have failed to adequately address the need for efficiency.","For example, Netscape Communications Corporation uses its Navigator\/Netsite World Wide Web (WWW) browser\/server pair. A buyer may use a Navigator to select a seller's \u201cNetsite Server\u201d (a form of electronic storefront), which is in turn coupled to ordinary application server computers (back-end subsystems), e.g., a credit server or a member server for collecting demographic information on customers. Such servers may contain representations of business rules that are defined by the seller (but are subject to external constraints). Some of these servers are connected to external third-party services, for example, the credit server may be connected to an external credit card processing network. The actual commerce applications are typically represented as being extensions of the application servers. Such application server computers, or application servers for short, are said to be instantiated in the applications. An outcome of such approaches is that business rules (which may be from the application servers) are bound together with the application logic. Thus, such a system meets required levels of efficiency only at the undesirable cost of inflexibility as to business rules of the participants (typically partners) and is inadequate in the present context.","Wide ranges of verifications may be required for various electronic commerce transactions. For example, verification of a buyer's credit or legal standing to place an order, or verification of a seller's ability to deliver the desired item may be required. Previously developed systems do not readily support diverse and dynamically evolving verification requirements and other implications of local and distant business policies, laws and so on.","In systems where the business policies and rules must be determined in advance, changing them can be inefficient and may create interruptions in service. One prior approach is the use of client-server systems, but this too often leads to a situation of unbounded growth in the complexity of the supply chain operations. This results in a problem of \u201cbusiness logic everywhere\u201d having to be skillfully coordinated for changes\u2014a typical result is inefficiency in operation, inefficiency in changing to accommodate evolving needs and general lack of robustness.","Another previously developed approach involves the use of a distributed inference engine. But such systems may be inefficient. Furthermore, design and implementation of such systems is a highly skilled art and very complex. Moreover in such a system there are serious problems as to proving correctness of actions for audit purposes. Moving away from vertical integration typically increases the need for audit activities.","Commonly, the failure of such systems to be sufficiently flexible is highlighted when there is a need to accommodate a new participant (e.g. supplier, manufacturer or customer) in a supply chain, and the new participant has its own requirements, rules and pre-existing procedures.","Thus, a need exists for effective coordination of execution of business policies across networks even as service and lead-time and other requirements evolve and participants therein come and go.","In contrast with previously developed implementations, the systems and methods for managing supply chains, according to embodiments of the present invention, avoid inference engines and embedded business procedures and data. Techniques are disclosed wherein there is a clear, and usually physical, separation of decision driving logic, data processing and data\/name space associations. Inventive are not only the methods of implementing computer systems, methods and computer products for managing supply chains but also the resultant systems, methods and computer products themselves.","In one aspect, a process is provided for provisioning from one or more business contracts to a technical implementation of a supply chain management system and corresponding methods. Under this process, the supply chain management system and corresponding methods are implemented based upon the actual terms of contract (policies) between the various entities involved in a supply chain. This policy-based approach provides rapid implementation and avoids a technically procedural approach that would require a tedious, involved translation from policy into a static technical procedure.","In another aspect, in a system and method for supply chain management, decision logic is separated from action logic using a framework. The decision logic can be related to one or more business policies that govern conduct between two or more entities in the supply chain. This decision logic can be implemented as one or more name\/value pairs embodying the business policies. The action logic is related to tasks or actions that are or should be performed as transactions take place in the supply chain. The action can be implemented as one or more state machines. Because the business policies which are the framework for decision logic are very susceptible to change, this aspect provides an advantage in that the name\/value pairs can be readily modified without any need to modify the part of the system implementing the action logic.","According to an embodiment of the present invention, a method is provided for implementing a computer network system for managing a supply chain, wherein the computer network system comprising a plurality of application server computers. The method includes: identifying a business context for the supply chain; identifying a set of business policy rules for the business context, the set of business policy rules governing the relationship between two or more entities involved in the supply chain; creating at least one use-case description from the set of business policy rules; creating a plurality of executable code modules corresponding to the use-case description; specifying a plurality of name\/value pair for modeling the set of business policy rules; provisioning the plurality of application server computers of the computer network system with the executable code modules; and provisioning a central directory database with the plurality of name\/value pairs; whereby the computer network system, in response to one or more events in business transactions between at least two entities involved in the supply chain, is operable to dynamically deliver at least one name\/value pair from the central directory database and to execute at least one code module.","Important technical advantages of the present invention are readily apparent to one skilled in the art from the following figures, descriptions, and claims.","Turning first to the nomenclature of the specification, the detailed description which follows is represented largely in terms of processes and symbolic representations of operations performed by conventional computer components, such as a local or remote central processing unit (CPU), processor, server, or other suitable processing device associated with a general purpose or specialized computer system, memory storage devices for the processing device, and connected local or remote pixel-oriented display devices. These operations may include the manipulation of data bits by the processing device and the maintenance of these bits within data structures resident in one or more of the memory storage devices. Such data structures impose a physical organization upon the collection of data bits stored within computer memory and represent specific electrical or magnetic elements. These symbolic representations are the means used by those skilled in the art of computer programming and computer construction to most effectively convey teachings and discoveries to others skilled in the art.","For purposes of this discussion, a process, method, routine, or sub-routine is generally considered to be a sequence of computer-executed steps leading to a desired result. These steps generally require manipulations of physical quantities. Usually, although not necessarily, these quantities take the form of electrical, magnetic, or optical signals capable of being stored, transferred, combined, compared, or otherwise manipulated. It is conventional for those skilled in the art to refer to these signals as bits, values, elements, symbols, characters, text, terms, numbers, records, files, or the like. It should be kept in mind, however, that these and some other terms should be associated with appropriate physical quantities for computer operations, and that these terms are merely conventional labels applied to physical quantities that exist within and during operation of the computer.","It should also be understood that manipulations within the computer system are often referred to in terms such as adding, comparing, moving, searching, or the like, which are often associated with manual operations performed by a human operator. It must be understood that no involvement of the human operator may be necessary, or even desirable, in the present invention. Some of the operations described herein are machine operations performed in conjunction with the human operator or user that interacts with the computer or system.","In addition, it should be understood that the programs, processes, methods, and the like, described herein are but an exemplary implementation of the present invention and are not related, or limited, to any particular computer, system, apparatus, or computer language. Rather, various types of general purpose computing machines or devices may be used with programs constructed in accordance with the teachings described herein. Similarly, it may prove advantageous to construct a specialized apparatus to perform one or more of the method steps described herein by way of dedicated computer systems with hard-wired logic or programs stored in non-volatile memory, such as read-only memory (ROM).","Overview","Business policies establish performance expectations, obligations, and liabilities between various parties, such as, for example, an enterprise and its business partners. Business policies can be outlined in contracts and agreements between two or more parties. These business policies may have been negotiated by the parties, each of which may apply classic business analysis techniques, such as discounted cash flow (DCF) and mean time to serve, mean time between services (MTTS\/MTBS) analyses. In addition, policy decisions are useful for manufacturing and distribution issues, such as to near just-in-time (JIT) parts procurement.","According to one aspect of the invention, systems and methods are provided for implementing policy based automation for a supply chain. According to another aspect of the invention, systems and methods are provided for automated execution of business policies in a supply chain. According to yet another aspect, systems and methods are provided for separating decision logic from action logic in an implementation for an automated supply chain management system.","In accordance with some embodiments, an application for supply chain management is decomposed into different application elements. These application elements can include, for example, business policy rules and business processes. The business policy rules may determine or dictate the business decisions to be made. A business policy rule can be embodied in one or more name\/value pairs, which can be stored in a centralized directory. The business processes can relate to or encompass actions (tasks), events (which trigger business processes), and decision nodes (branching logic). The actions or tasks may be configured for business policy rules. The business processes may be implemented throughout an implementation for a system for supply chain management. When the system is operated, the name\/value pairs for business policy rules may be retrieved from the centralized directory and distributed to appropriate parts of the system implementation. This may be referred to as \u201cadaptive execution\u201d of the application. For example, the business policy rules can be evaluated as part of the decision nodes or branching logic. Because the name\/value pairs can be easily changed without programmer\/developer support, any system implementation can be readily configured and re-configured to adjust for new or different business policy rules. Accordingly, embodiments of the present invention allow rapid configuration and reusability. This is in contrast to previously developed techniques which involved hard-coded, static implementations that are difficult to change and adapt to new and different relationships.","In some of the disclosed embodiments, purchasing, manufacturing, distribution, selling, servicing, or other business situations are broken down into a set of contexts. Each context may cover a logistical area of commercial activity. For example, there may be a purchase-order (PO) context, a forecasting context, a manufacturing context, a materials resource planning (MRP) context, and so on. These contexts may be translated and documented into one or more inter-relationship diagrammatic forms.","Contexts and diagrammed inter-relationships may be formalized into a systematic encoding or use-case descriptions, for example, using a use-case engine. Once use-case descriptions have been generated, name\/value data pairs may be described which, in turn, may lead to a description of a decision process wherein the name\/value pairs will be encoded. Such name\/value pairs may embody business policies, for example, by including policy values that define limits, parameters and modes of business constraints. System implementation follows wherein data and processing code are collected or derived. In one embodiment, the processing code may be implemented in a variant of the Java programming language.","A process of provisioning may follow. Provisioning may include the providing of data, control programs, database controls, rules, policies and the like. If these items are expressible as scalar or simple data structures, a lightweight directory access protocol (LDAP) may be used for the storage and propagation. It is noted that rules, such as those implementing policies, are scoped with dynamic, configurable branching logic, as opposed to internal programmed static logic as found in previously developed implementations.","In some embodiments of the present invention, systems and methods are provided for the automated administration of terms and policies outlined in contracts, such as, for example, service level agreements (SLAs) between two or more entities in the supply chain.","Embodiments of the present invention and their advantages may be understood by referring to  of the drawings. For simplicity in reference, like numerals are used for like and\/or corresponding parts and\/or aspects of the various drawings.","Network for Managing a Supply Chain","Referring now to the drawings,  illustrates a network  for managing a supply chain. Network  provides an environment in which some systems and methods of the present invention may be implemented, run, or executed.  is a high-level representation of a number of domains communicating in a communication network , including a network domain , one or more enterprise domains , one or more partner domains , and a customer domain . The network  allows integration of the one or more partner domains  with an enterprise domain .","Communication network  can include any portion of one or more suitable networks for communicating information or data. For example, such a network can be a telecommunications network or the Internet. The Internet is an interconnection of computer \u201cclients\u201d and \u201cservers\u201d located throughout the world and exchanging information according to Transmission Control Protocol\/Internet Protocol (TCP\/IP), Internetwork Packet eXchange\/Sequence Packet eXchange (IPX\/SPX), AppleTalk, or other suitable protocol. The Internet supports the distributed application known as the \u201cWorld Wide Web.\u201d Web servers maintain websites, each comprising one or more web pages at which information is made available for viewing. Each website or web page can be identified by a respective uniform resource locator (URL) and may be supported by documents formatted in any suitable language, such as, for example, hypertext markup language (HTML), extended markup language (XML), or standard generalized markup language (SGML). Clients may locally execute a \u201cweb browser\u201d program. A web browser is a computer program that allows the exchange of information with the World Wide Web. Any of a variety of web browsers are available, such as NETSCAPE NAVIGATOR from Netscape Communications Corp., INTERNET EXPLORER from Microsoft Corporation, and others that allow convenient access and navigation of the Internet. Information may be communicated from a web server to a client using a suitable protocol, such as, for example, HyperText Transfer Protocol (HTTP) or File Transfer Protocol (FTP).","A telecommunications network may include telephony and voice services, including plain old telephone service (POTS), digital services, cellular service, wireless service, pager service, etc. The telecommunications network allows communication via a telecommunications line, such as an analog telephone line, a digital T1 line, a digital T3 line, or an OC3 telephony feed. The telecommunications network may include a public switched telephone network (PSTN) and\/or a private system (e.g., cellular system) implemented with a number of switches, wire lines, fiber-optic cable, land-based transmission towers, spaced-based satellite transponders, etc. In one embodiment, the telecommunications network may include any other suitable communication system, such as a specialized mobile radio (SMR) system. As such, the telecommunications network may support a variety of communications, including, but not limited to, local telephony, toll (i.e., long distance), and wireless (e.g., analog cellular system, digital cellular system, Personal Communication System (PCS), Cellular Digital Packet Data (CDPD), ARDIS, RAM Mobile Data, Metricom Ricochet, paging, and Enhanced Specialized Mobile Radio (ESMR)). The telecommunications network may utilize various calling protocols (e.g., Inband, Integrated Services Digital Network (ISDN) and Signaling System No. 7 (SS7) call protocols) and other suitable protocols (e.g., Enhanced Throughput Cellular (ETC), Enhanced Cellular Control (EC), MNP10, MNP10-EC, Throughput Accelerator (TXCEL), Mobile Data Link Protocol, etc.). Transmissions over the telecommunications network may be analog or digital. Transmissions may also include one or more infrared links (e.g., IRDA).","Domains , , , and  are part of a supply chain. Each domain corresponds to a particular entity in the supply chain. These entities may include an enterprise, one or more partners who provide services or products to the enterprise, possibly an entity which maintains or operates one or more systems of the network for the enterprise and\/or partners, and one or more customers of the enterprise. The enterprise may be a manufacturer of goods, such as an original equipment manufacturer (OEM), or a provider of services to businesses or consumers buying products from OEM companies, such as an electrical utility or a telecommunications company. These companies rely on efficient supply chains both for inbound materials and goods and services. A partner may be a supplier of raw materials or parts, a third party logistics (3PL) vendor such as a warehouse hub, a carrier, or a service provider, a third party maintainer (3PM) such as field service, third party repair center, third party returns handling center, or a third party fulfillment provider such as a distributor. A customer may purchase goods or services from the enterprise. Associated with each domain may be one or more functions that are performed by the respective entity. Each entity may have its own systems (e.g., computer systems) to implement some aspects of the functionality, whereas some entities may lack its own systems to implement some aspects of the functionality.","Furthermore, a network system of network  may be implemented at least in part at each of enterprise domain , partner domains , network domain , or customer domain  to execute the functionality of the respective domain. One or more subsystems  (only some of which are labeled, for clarity) of the network system supports communication with the network domain  and each of the enterprise domain , a partner domain , or the customer domain .","The network domain  may be linked through a gateway to another network domain . For example, one network domain  may be associated with a service network, and another network domain  may be associated with an inbound or supplier network. The service network may be linked to the supplier network through the respective network domains  to route transactions between the networks.","An enterprise operating through the enterprise domain , partner domains , network domains , and customer domain  of network  manages execution of one or more tasks, processes, events, or actions (e.g., receiving orders, manufacturing products, warehousing products, delivering products, etc.) by the enterprise or its supply chain partners. As such, network  facilitates the management of the supply chain by the enterprise.","A more detailed description of the network environment in which the systems and methods according to embodiments present invention may operate is provided in U.S. application Ser. No. 10\/027,965 filed on Dec. 19, 2001, entitled \u201cReporting in a Supply Chain,\u201d and U.S. application Ser. No. 10\/028,542, filed on Dec. 19, 2001, entitled \u201cSupply Chain Management,\u201d both of which assigned to same assignee as the present Application, and the disclosures of which are incorporated herein by reference in their entireties.",{"@attributes":{"id":"p-0056","num":"0055"},"figref":["FIG. 2","FIG. 2"],"b":["10","34","36","38","32","40","42","44","46"]},"As depicted, the inbound network  may involve, for example, manufacturers , suppliers , and logistics providers . Manufacturers , suppliers , and logistics providers  may cooperate to manufacture and deliver products to an enterprise . The contract manufacturer  may manufacture parts for goods manufactured by the enterprise . The supplier  may supply raw materials to contract manufacturer  and\/or the enterprise . Logistics providers  may be needed to deliver parts, raw materials, or finished goods to the enterprise .","The fulfillment network  and the service network  include various entities which may cooperate with the enterprise  in delivering goods and services to customers . The fulfillment network  may involve, for example, call centers, contract manufacturers, logistics providers, hubs, distributors, wholesalers, or retailers who cooperate to take and fulfill orders from one or more customers. The service network  may include, for example, call centers, customer support, field service, repair vendors, or logistics providers who cooperate to provide services (e.g., repair, replacement, warranty, installation, etc.) for one or more customers. Logistics providers  may work with the fulfillment network  and the service network . Logistics providers  may include, for example, warehouse providers or delivery service providers.","The various entities in the supply chain may each operate under one or more business policies, which may require, govern, dictate, or otherwise specify the desired or appropriate conduct and actions of the entities in particular situations. For example, for the enterprise , one such business policy may specify the minimum quantity of product for a particular order or the warranty replacement of a defective product along with turnaround time for the same. As another example, for a logistic provider , a business policy may specify the target times for product delivery after receiving the products to be delivered. Another policy may relate to prices for parts, with schedules for large quantity discounts and\/or small quantity surcharges. Yet another exemplary policy can be related to the obsolescence of parts, such as a \u201clast call for orders of production parts\u201d date after which the parts are available only on a more limited basis (e.g., service exchange, repair, or refurbishment). In some instances, the business policies may, at least in part, govern the relationships between one or more entities in the supply chain.","Each entity in the supply chain may have its own business for performing at least some of the functions or tasks for which the entity is responsible. Embodiments of the present invention enable business policy based automation for the supply chain. This may include both systems and methods for implementing the business policies into aspects of the supply chain and systems and methods for automatically executing the business policies throughout the supply chain. Business policies form a foundation for specification and implementation of the supply chain system as discussed below.","At least some of the business policies under which entities of the supply chain operate may be set forth or embodied in one or more contracts . For example, each manufacture, transfer, sale, purchase, or delivery of goods or services through any of the various networks , ,  can governed by one or more contracts . Each contract  can be an agreement between two or more entities in the supply chain (such as, enterprise  and one of its partners), which is reached after business issues are raised, negotiated, resolved and specified between the relevant entities.","When the operational system is created or implemented, contracts and policies are embodied in executable code (which is configurable), database tables and LDAP repositories as described below.","Implementation Environment",{"@attributes":{"id":"p-0063","num":"0062"},"figref":["FIG. 3","FIG. 3"],"b":["200","200","18","14"]},"In the implementation environment , a connection subsystem  resides within the partner domain . Data and information for the transactions may be transferred by a secure transport mechanism, i.e., a messaging service  (which can use HyperText Transfer Protocol (HTTP)), between the partner domain  and the network domain .","A connection subsystem  at the partner domain  may send and receive messages  from the network domain  via the messaging service . In one embodiment, these messages  can be formatted in any suitable markup language, such as, for example, eXtensible Markup Language (XML) or some variant thereof. The connection subsystem  may perform partner-specific data manipulation, and may communicate with, for example, enterprise resource planning (ERP) applications or subsystems  at the partner. The connection subsystem  may comprise a partner coordinator component . In one embodiment, such partner coordinator component  may have or be accessed by a particular uniform resource locator (URL). The connection subsystem  is shown as physically residing in the partner domain , but it could also reside in the enterprise domain  () or the network domain .","If context-based routing is required, a gateway subsystem  in the network domain  may send and receive messages  from the partner domain  via a messaging service , which may use HyperText Transfer Protocol (HTTP). The gateway subsystem  can be an implementation of a network gateway. The gateway subsystem  may route those messages via Java Messaging System (JMS)  to other subsystems in the network domain , such as, for example, an execution subsystem . If context-based routing is not required, messages may be sent directly between the connection subsystem  and the execution subsystem .","The execution subsystem  may provide the process management services for generating requests and evaluating responses related to a transaction. The execution subsystem is shown as part of the network domain , but it could also be part of a partner domain  or the enterprise domain  (). The execution subsystem  may also be referred to or implemented as a network execution component.","A performance measurement subsystem  functions to monitor the system performance statistics. The performance measurement subsystem  may be part of an administration component (not shown). The performance measurement subsystem  provides decision support to users, for example, based on graphs and reports. It also can define metrics for the performance (e.g., on-time delivery) of various entities in the supply chain. The performance management subsystem  can display the performance statistics in one or more reports on a GUI (graphical user-interface e.g., \u201cdashboard\u201d) to facilitate monitoring and management by a user. The reports and dashboards may be metric based. The report statistics can be defined with customized structured query language (SQL) requests.","In one embodiment, the execution subsystem  and the performance measurement system  may each implement business rules that may be derived from or correspond to the policies of contracts  (). For example, the execution subsystem  may implement business rules that are associated with a purchase order (PO) context (described herein), and the performance measurement subsystem  implements rules to determine whether business deadlines are being met. In one embodiment, one or more business rules are applied whenever events of a transaction event cause triggers (discussed below).","A provisioning subsystem  may initialize (i.e. bring to a well-known initial state) the applications in network domain  in response to messages from partner domain . The provisioning subsystem  may provide or support the configuration of the network system for business policy automation. That is, the provisioning subsystem  may be used to deploy business rules. It can be part of an administration component (not shown).","In one embodiment, the provisioning subsystem  can manage or facilitate the management of partners, agreements, enterprise business units (EBUs), processes, and users. It may set up EBUs, associated relationships, as well as group and user entitlements (e.g., associating users to the appropriate level of security, etc.). It may be also responsible for creating rules and associating those rules to the appropriate processes and tasks that are governed by these policies. Provisioning subsystem  may receive requests to manage EBU and partnership activities. It may also service requests from the staff at an EBU to manage contract-related activities.","The provisioning subsystem  may support the creation or collection of information and data relating to partners, users, groups, security, and network policy. Prior to a partner coming on-line, this information may be defined by operations and professional services at an enterprise. This information may be stored in an lightweight directory access protocol (LDAP) repository. Thus, for example, when the network system of network domain  receives a message from a partner, provisioning subsystem  may provide the appropriate uniform resource locator (URL) for the partner coordinator component  of that partner, a digital certificate, and other partner-specific information needed to generate a valid request. User information may specify groups that each user belongs to and user policy information. The contracts or agreements between an enterprise and its partners may specify business policy and collections. For each partner, configuration properties may define the specifics for a partner configuration.","In one embodiment, the functionality of gateway subsystem , execution subsystem , performance measurement subsystem , and provisioning subsystem  can be performed by any suitable communications hub or router in combination with any one or more suitable processors, such as a main-frame, a file server, a workstation, or other suitable data processing facility supported by memory (either internal or external), running appropriate software, and operating under the control of any suitable operating system (OS), such as MS-DOS, MacINTOSH OS, WINDOWS NT, WINDOWS 95, OS\/2, UNIX, LINUX, XENIX, and the like.","A data storage facility  can store the data and information received, generated, collected, or used by network domain . Data storage facility  can be implemented with any one or more suitable storage media, such as random access memory (RAM), disk drives, tape storage, or other suitable volatile and\/or non-volatile data storage facility. The data facility  may typically be configured as a relational database according to common practice. In one embodiment, data storage facility  can maintain a lightweight directory access protocol (LDAP) repository for business policies and rules.","The LDAP repository may function as a central storage facility for representations of business policy rules, from which all parts of a network system (including components physically or logically located at the enterprise domain, the partner domains, the customer domains, or the network domain) may draw for up-to-date information and data. In some embodiments, components of a network system may query or make requests to retrieve this policy rule data and information from the LDAP; in other embodiments, the data and information is actively distributed to relevant components of the network system using a suitable \u201cpush\u201d technology. Access to the LDAP repository can be token-based data retrieval through process managers. The LDAP repository can provide or support the administration or management of unified policies for extended supply chain processes. The policies maintained in the LDAP repository can support one or more business process workflows. The LDAP repository may provide storage for service level agreement (SLA) configuration. In addition, the LDAP may be used as to maintain user roles\/access right information.","Implementing Policy Based Automation","Typically, business activities occur in specific contexts. Particular tasks in a supply chain, and the people\/equipment for performing the same, can be separated or partitioned in areas of specialized expertise. By dividing into somewhat independent operating sectors, such partitioning is effective to limit risk and to reduce time needed to train operational staff. For example, persons processing purchase orders (POs) have little need to understand procedures in return material authorization (RMA). Systems and methods, in accordance with embodiments of the present invention, realize corresponding economies and risk containment by dividing the areas of business activity among contexts. Exemplary contexts include purchase order, forecast, materials resources planning, manufacturing, inventory, shipping, and return materials authorization (RMA) processing. In one embodiment for automated supply chain, there can be separate (and somewhat orthogonal) design and implementation activities for these various contexts. One or more systems for policy based automation for operating a supply chain can be implemented by generating a vertical prototype data processing requirements specification (e.g., software specification) for each context within the supply chain.",{"@attributes":{"id":"p-0077","num":"0076"},"figref":"FIG. 4","b":"300"},"A number of contexts are specified and subsystems developed for each system implementation. Method  may be considered an overview of a system development approach to be used for each business context. The method  is performed for a single context, and may be repeated for multiple contexts. In one embodiment, method  may be performed, at least in part, by provisioning subsystem  in conjunction with a human user, such as, for example, a system administrator or a developer.","Method  begins at step  where business policies are identified, for example, from contractual agreements, guarantees, memoranda of understanding, statements of purpose and intent, and the like. One type of contract can be, for example, a service level agreement (SLA). An SLA may include timing policies and comparative policies. A timing policy may specify a time limit for some event; if the event occurs within the time limit, then a first action is taken (main flow triggered). Alternatively if the event does not occur within the period specified in a timing policy, then a second action is taken at the end of the time limit. A comparative policy may set some kind of threshold, typically a value limit. For example a comparative policy may set upper and lower bounds to acceptable values for certain costs or totals of a transaction in trade.","At step , one or more use case descriptions are created. Use case descriptions encode each policy relating to the business context. Use case descriptions are understood by those in the relevant arts for the design of software for complex business application systems, and also for GUI (graphical user interface) driven software. A system implementation, according to an embodiment of the present invention, can include complex business application systems and be driven at least in part with a GUI.","A use case represents a particular business process with decision logic and corresponding policy rules. For each context, one or more use cases be identified and diagrammed. An exemplary use case diagram  for one particular business context is illustrated in . This use case diagram  relates to a purchase order (PO) context. It shows the processes that can be initiated by one or more people who may operate parts of the system to be implemented. That is, a use case diagram shows a set of use cases and actors and the relationships among them. The purchase order context is a relatively simple one from a use case standpoint and is documented here as an example. Similar or different use cases exist for a number of other contexts within a supply chain implementation.","Referring to , the three people involved in this purchase order context are a buyer coordinator , a seller coordinator  and a PO scheduler , which may be representatives for one or more enterprise business units (EBU). The diagrammed cases for the purchase order context of  are as follows: an authenticate use case , process create PO use case , a process update PO use case , a process delete PO use case , a process release PO use case , a process close PO use case , a process cancel PO use case , a process acknowledge PO use case , a process accept PO use case , a process confirm PO use case , a process reject PO use case , a notify user use case , and a generate request PO timeout alert use case .","Authenticate use case  allows the buyer or seller coordinators to log into and be authenticated by the system. Process create PO use case  allows a purchase order to be created, for example, by the buyer coordinator . The process update PO use case  allows updating of a purchase order that has not been released to the seller. Process release PO use case  allows the buyer coordinator  to issue a purchase order to a seller. Process delete PO use case  allows the buyer coordinator  to delete a purchase order that has not yet been released to the seller. Process close PO use case  allows the buyer coordinator  to close a purchase order. Process cancel PO use case  allows a purchase order to be canceled, for example, by the buyer coordinator . Process acknowledge PO use case  allows the seller coordinator  to acknowledge the receipt of a purchase order. Process accept PO use case  allows the seller coordinator  to indicate the acceptance of a purchase order. Process confirm PO use case  allows the seller coordinator  to confirm a purchase order. Process reject PO use case  allows the seller coordinator  to reject a purchase order. Generate Request PO timeout alert use case  allows the PO Scheduler  to generate an alert when the buyer has not confirmed or rejected the request PO change from the seller in a pre-defined time. Notify user use case  allows the user to be notified when the buyer or seller employs one or more of the other use cases described herein. This notification can be provided wireless device, email, pager and\/or user interface. Taken together, these illustrate the use case breakdown for a typical PO context.","Use case specifications are mapped onto use case diagrams for the purchase order context as described herein. A use case specification may include a portion, up to all, of the use cases shown in the diagram  together, but there may also be many underlying use-cases, which are separated from the diagrammed cases. The use case specification provides details on the purpose of each use-case. A use case specification may also be referred to as a use case description.","An exemplary use case specification is given below as Table 1. Table 1 shows a use case construct for a process create PO use case , and illustrates a use of policies for business rules.",{"@attributes":{"id":"p-0086","num":"0085"},"tables":{"@attributes":{"id":"TABLE-US-00001","num":"00001"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"center"}},"thead":{"row":[{"entry":"TABLE 1"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}},{"entry":"Use Case specification for Process Create PO:"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}]},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":{}}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"21pt","align":"right"}},{"@attributes":{"colname":"2","colwidth":"196pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["8 ","Process Create PO"]},{"entry":["8.1","Description"]},{"entry":[{},"This use case allows the Buyer Coordinator or "]},{"entry":[{},"the \u201cCreate PO\u201d Use Case to create a Purchase Order."]},{"entry":["8.2","Primary Actor"]},{"entry":[{},"Buyer Coordinator"]},{"entry":["8.3","Pre-conditions"]},{"entry":[{},"Buyer is successfully logged in to the system."]},{"entry":["8.4","Post-conditions"]},{"entry":[{},"Transaction is added to the Audit Log."]},{"entry":["8.5","Trigger"]},{"entry":[{},"A new Purchase Order is needed by the user."]},{"entry":["8.6","\u201cIncluded\u201d Use Cases"]},{"entry":[{},"Authorize"]},{"entry":[{},"Audit Log"]},{"entry":["8.7","Primary Flow"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"1","colwidth":"21pt","align":"right"}},{"@attributes":{"colname":"2","colwidth":"21pt","align":"center"}},{"@attributes":{"colname":"3","colwidth":"175pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"Step","Action"]},{"entry":[{},"1.","The use case starts when the system receives a"]},{"entry":[{},{},"Create PO Message."]},{"entry":[{},"2.","The system uses \u201cAuthorize\u201d Use Case."]},{"entry":[{},"3.","The system validates:"]},{"entry":[{},{},"company id exists in the WC database"]},{"entry":[{},{},"shipment and billing addresses exist"]},{"entry":[{},{},"part number(s) is valid"]},{"entry":[{},{},"order quantity is valid (>0)"]},{"entry":[{},{},"part and currency exist and are valid for the line items"]},{"entry":[{},{},"If data is found to be invalid,"]},{"entry":[{},{},"<See Secondary Flow \u201cData Invalid\u201d>."]},{"entry":[{},"4.","The system persists the PO. If the PO already exists"]},{"entry":[{},{},"in the database <See Secondary Flow \u201cAlready Exists\u201d>."]},{"entry":[{},"5.","The system sets the state of the PO to \u201cPre-Released\u201d."]},{"entry":[{},{},"IN HERE?"]},{"entry":[{},{},"Turnaround time TAT (from policy repository) is applied to"]},{"entry":[{},{},"the persisting PO."]},{"entry":[{},"6.","The system creates PO CREATE RESPONSE message with"]},{"entry":[{},{},"a completion status \u201cSuccess\u201d."]},{"entry":[{},"7.","The system uses \u201cAudit Log\u201d Use Case."]},{"entry":[{},"8.","The use case ends."]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"21pt","align":"right"}},{"@attributes":{"colname":"2","colwidth":"196pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["8.8","Secondary Flows"]},{"entry":["8.8.1","DATA INVALID"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"1","colwidth":"21pt","align":"right"}},{"@attributes":{"colname":"2","colwidth":"21pt","align":"center"}},{"@attributes":{"colname":"3","colwidth":"175pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"Step","Branching Action"]},{"entry":[{},"3.a","If the data is found to be invalid, the system creates PO"]},{"entry":[{},{},"CREATE RESPONSE message with a completion"]},{"entry":[{},{},"status of \u201cData Invalid\u201d."]},{"entry":[{},"3.b","Return to step 7 in Primary Flow."]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"21pt","align":"right"}},{"@attributes":{"colname":"2","colwidth":"196pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":["8.8.2 ","ALREADY EXISTS"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"1","colwidth":"21pt","align":"right"}},{"@attributes":{"colname":"2","colwidth":"21pt","align":"center"}},{"@attributes":{"colname":"3","colwidth":"175pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"Step","Branching Action"]},{"entry":[{},"4.a","If the PO already exists in the database, the system creates"]},{"entry":[{},{},"a PO CREATE RESPONSE message with a completion"]},{"entry":[{},{},"status of \u201cPO Already Exists\u201d."]},{"entry":[{},"4.b","Return to step 7 in Primary Flow."]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"21pt","align":"right"}},{"@attributes":{"colname":"2","colwidth":"196pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["8.9 ","Sub Flows"]},{"entry":[{},"None"]},{"entry":["8.10","Extensions"]},{"entry":[{},"None"]},{"entry":["8.11","Technology and Data Variations"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"1","colwidth":"21pt","align":"right"}},{"@attributes":{"colname":"2","colwidth":"21pt","align":"center"}},{"@attributes":{"colname":"3","colwidth":"175pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"Step","Variation"]},{"entry":[{},"1.a","Actor can be a Buyer or Seller Coordinator or another"]},{"entry":[{},{},"Use Case."]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"21pt","align":"right"}},{"@attributes":{"colname":"2","colwidth":"196pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["8.12","Assumptions"]},{"entry":[{},"None"]},{"entry":["8.13","Data Entities"]},{"entry":[{},"Purchase Order"]},{"entry":[{},"(Continued)"]},{"entry":[{},"(Continuation)"]},{"entry":[{},"Purchase Order Line Item"]},{"entry":[{},"Company"]},{"entry":[{},"Item Master"]},{"entry":[{},"Contact Address"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"End of Table 1"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}]}}]}}},"Referring again to , after use case descriptions have been created for the particular context, then at step  a unified modeling language (UML) model or equivalent for the use case descriptions may be derived. In general, UML is a language for specifying, visualizing, constructing, and documenting the artifacts of software systems, and is understood by those of ordinary skill in the art. See, e.g., Rumbaugh, J., Jacobson, I. and Booch, G. (Addison Wesley, 1998). One or more UML models can form a semantically complete abstraction of a system to be implemented. Such models may represent a simplification of the realities of the system.","At step , one or more name\/value pairs or tagged values are specified for modeling the business policies. Name\/value pairs are properties that can be attached to UML model elements. For example, one policy may specify that the turn-around time (TAT) for replacing a particular part should not be greater than 72 hours. This policy can be realized by creating and using a name\/value pair of \u201cTAT 72,\u201d wherein \u201cTAT\u201d is the name and \u201c72\u201d is the value. The values in a name\/value pair can be configurable. Name\/value pairs are understood by those of ordinary skill. Name\/value pairs may be provided in the form of scalars, tables, or other suitable structures that can be used to implement or embody business policies in the target system.","At step , a specification is made as to where and at what point in the process the name\/value pairs are to be coded (e.g., when a developer creates process models). This may be carried out as part of the development of decision process executable code. The decision process executable code may embody or implement one or more business workflows or process models, which execute in the system to be implemented. Each process model is defined as or is implemented by a set of tasks. In one embodiment, a process is observable through one or more process traces, which allow various events related to the process to be tracked. Each such process event may be recorded in a database for process trace history. Two processes may communicate via documents, each of which defines the structure of the information to be communicated by some agent.","Some portion of the process executable code may be related to business policies in business contexts. Business policies can govern how to distribute work, such as, for example, repair orders, to a specific enterprise business unit (EBU) from among many potential EBUs. There may also be policies which govern how the work is communicated to the EBU of choice. In addition, policies are defined to govern the relationship between specific transactions. This is used to manage an iteration of the business process and determine the alerts that are generated when a workflow or process violates one or more policies. For instance, if an EBU attempts to replace a particular item, but a policy prohibits replacing such items that are out of warranty, an alert can be generated. A relationship between two EBUs may require many relationship policies. Business policies may also govern access to the system to be implemented and data handled therein. In one embodiment, such policy can be implemented as an access control list (ACL). One or more ACL policies may govern the role of each user in a system.","Business processes or workflows for a system implementation relate to or encompass one or more actions (tasks) which can be carried out in accordance with the implemented system, events which trigger these actions, and conditions (which exist before or after the actions). Events, conditions, and actions can be related to the business policies which are set forth in contracts. For example, one service level agreement between an enterprise and a partner delivery service provider may specify that the partner delivery service provider is required to deliver a product to a customer within 72 hours after it has picked such product up from a third party warehouse provider. The agreement may further specify that if the delivery service provider fails to do so for a particular delivery, the enterprise is not required to pay anything for that delivery.","During development of the system to be implemented, a number of event-condition-action (ECA) items can be generated. Each ECA item embodies a relationship between an event, a condition, and an action. An event can comprise the occurrence of something within the supply chain, such as, for example, the placement of an order by a customer, the delivery of a shipment of product from a partner-vendor to an enterprise, or notification to a partner service provider to send a repair person to a customer for servicing of a machine. A condition can be a pre-condition (what exists before) or a post condition (what exists after) a particular event. An action may be carried out pursuant to an event. One or more actions, which can take place in sequence or in parallel, may be triggered by an event or a condition. For example, in response to the placement of an order at a partner call center, the partner call center may notify the enterprise of the order, which in turn, polls its databases to identify a warehouse facility which is closest to the customer, and then directs the identified warehouse facility to package a product for delivery; at the same time or shortly thereafter, the enterprise may contact one of its partner delivery services to pick up the product from the third party warehouse facility and to deliver to the customer. A number of actions which are related to a particular event or condition may constitute a portion of a workflow (or a business process model).","In the system to be implemented, ECA items may be monitored, controlled, or otherwise managed by one or more applications, such as, for example, a business workflow component (described in more detail below). ECA items may be policy driven, rather than database driven, as with previously developed techniques. As such, ECA items can be associated with business process logic rather than specific data items in a database.","The ECA items may be provided or incorporated in one or more condition-action tables (e.g., \u201cif (condition), then (action)\u201d). These condition-action tables may be used in making decisions during the operation of the implemented system for managing the supply chain. Decision logic for the system may comprise one or more decision nodes (each of which may correspond to a condition of an ECA item) at which a decision should be made. Decision logic is implemented with the name\/value pairs. When a decision node is reached in a business process, one or more name\/value pairs can be retrieved for making the decision. This provides for a highly configurable system with dynamic execution, because name\/value pairs can be changed without shutting down the application, and thus, there is no change in run time even when the system is being, or has been modified. Typically, decision logic is what is most frequently changed in a system implementation (e.g., possibly base on revised or changed business policy).","In the system to be implemented, ECA items may be supported by messages which are exchanged between and within the various domains in the supply chain (e.g., partner domain, enterprise domain) to convey, for example, information pertaining to an event\/condition for which action needs to be taken. Some of these messages can formatted in eXtensible Markup Language (XML), or some variant thereof. In one embodiment, each such message include a header and a body. The header may comprise information or data identifying an originator of the message, the intended recipient of the message, and a system agent which generates the message. The header may also include information for credential, digital signature, message type, process type, and process identifier.","In an organizational hierarchy such as a network of enterprise business units (EBUs), one or more condition-action tables can be used as a network routing table. The network routing table makes sure that information pertaining to an event\/condition gets to the right EBU for processing\/handling. Each EBU may have its defined network node. A network node may invoke one or more policies to govern the routing and delivery of messages.","In one embodiment, one or more state machines are defined or created for handling and managing process flows involving various ECA items. State machines are able to maintain or track execution status or state of a process flow. For example, an action may result in one or more transitions of state within a state machine for a business process. In terms of such an embodiment, a process can be defined as the set of tasks that transition an entity (e.g., the enterprise) from one state to another state. The state transition is governed by state policies.  illustrates an exemplary state diagram  for a state machine corresponding to a process flow in the of a purchase order (PO) context. Such state machine includes a number of states for \u201ccreate PO,\u201d \u201cdelete PO,\u201d \u201cupdate PO,\u201d \u201crelease PO,\u201d \u201cacknowledge PO,\u201d \u201ccancel PO,\u201d \u201caccept PO,\u201d \u201cclose PO,\u201d \u201cconfirm PO,\u201d and \u201creject PO.\u201d In this example, the state machine can be implemented in target systems at a buyer and a seller (which can be an enterprise and one of its partners).","In one embodiment, the state machines are provided with real-time data. The state machines are aware of transactions. State machines can be distributed throughout the implemented system. For example, one or more state machines can be provided, in whole or in part, in an execution subsystem  or performance measurement subsystem  (see ).","In one embodiment, the state machines and the ECA items may implement action logic in the system for managing the supply chain. Action logic relates to the tasks or actions that must be performed once a decision has been made. In another embodiment, a workflow engine (which can be commercially available) can be used for managing state for the action logic.","An advantage of the systems and methods, according to some embodiments of the present invention, includes separating the decision logic of the computer network system for managing a supply chain from the action logic of the computer network system. This is because separating decision logic from action logic in a business process makes the system highly configurable. This is in contrast to previously developed systems and techniques which use hard-coded, static process models at the data level, thus making it difficult to change or modify the systems; indeed, modification of older systems generally required a developer or programmer.","Returning again to , at step  each case of the use case specification may be implemented in procedural code, such as, for example, in Java language using Enterprise Java Beans (EJB). At least a portion of this procedural code, when executed, may implement one or more process managers and business object managers. The process managers are invoked by commands and may translate XML data to data objects for processing by the business object managers. Business object managers form the core platform functionality. Process managers and business object managers are described in more detail below.","At step , entries are provisioned for a lightweight directory access protocol (LDAP) repository. In one embodiment, the LDAP repository may store or maintain the name\/value pairs which embody the various business policies that govern, for example, how to distribute work (e.g., repair orders) to a specific EBU from among many potential EBUs. Thus, policy based automation is supported or provided for managing a supply chain.","Once a name\/value pair is created by a developer and stored in the central repository, a user is given the ability (via, e.g., a suitable GUI) to change the value of the pair, thereby allowing ease of configurability for the implemented system. Thus, the implemented system is customizable or extensible because a user can add or modify name\/value pairs, for example, to reflect changes in business policies, or to implement additional or different business policies.","At step , one or more databases for supporting the business processes are provisioned. Then at step , the executables for the system for managing the supply chain are provisioned. Thereafter, method  ends.","Steps - of method  may be performed for implementing and provisioning a network system for a given supply chain. It should be understood that these steps are exemplary and, in other embodiments, more, less, or different steps may be performed.","In one embodiment, the implementation method  can be performed, at least in part, by a provisioning subsystem  () in conjunction with a human user.  illustrates one embodiment for a provisioning component , according to an embodiment of the invention. Provisioning component  can be an implementation of provisioning subsystem . Provisioning component  is responsible for rules creation and associating those rules to the appropriate processes and tasks. Provisioning component  can be used for initializing of aspects of applications. Provisioning component  sets up on or more enterprise business units (EBUs), associated relationships, as well as group and user entitlement (e.g., associating individual users with the appropriate level security).","The provisioning component  may service requests from the EBU staff to manage and organize various activities related to one or more contracts. The activities may include partnership management, agreement management, EBU management, process management, and user management. These management activities may be part of the activity which occurs in supply chain wherein different EBUs cooperate.","Referring to , a system administrator may interact with provisioning component  through a graphical web browser type interface . The administrator manages EBU and partnership activities using provisioning component . A provisioning controller  can function to create or modify various resources, such as, for example, business policy name\/value pairs, executables that implement event-condition-action (ECA) based procedures, and other resources as described herein. In one embodiment, provisioning controller  may be part of the network domain .","A provisioning views server  may be in communication with provisioning controller . Provisioning views server  provides insight into the business policy name\/value pairs, executables for event-condition-action (ECA) based procedures, etc. that are created or modified with provisioning controller . Provisioning views server  can be implemented, for example, using JAVA Servlets. JAVA Servlets support the use of Java Server Pages (JSP), which provides for mixing regular, static HTML content with dynamically generated HTML on the server side. This may in turn reflect the dynamic nature of the data being \u201cprovisioned.\u201d","Provisioning manager  organizes the transmission of the resources created or modified by the provisioning controller . In particular, provisioning manager  may organize the distribution of resources across the network domain to one or more data brokers , which are typically physically dispersed. In one embodiment, provisioning manager  can be implemented in Enterprise Java Beans (EJB).","Data broker  can also be implemented using EJB. Data broker  generally functions to coordinate the storage of resources in a LDAP directory  or relational database management system (RDBMS)  memories in response to commands from provisioning manager . In one embodiment, data broker  can be implemented in Enterprise Java Beans (EJB).","Provisioning controller , provisioning manager , and data broker  may be implemented in the same or separate hardware.","Provisioning component  also provides for the creation of company information (for EBUs) containing partnership information, users, groups, security and network policy. Prior to a partner coming on line, this information is defined using provisioning component  by operations and professional services personnel. All this information may be stored in an LDAP  or RDBMS policy resource repository .","The LDAP  may be used as a repository for policy rules related to contractual obligations or trade agreements between or among various entities involved in the supply change to be managed. For example, these contractual obligations can be related to or specified in a service level agreement (SLA) for services provided by humans. An example of such a service could be the repairing of an appliance such as a microwave oven.","Whenever a user logs in through a browser , provisioning controller  provides the appropriate partner coordinator URL, digital certificate and other partner-specific information needed to generate a valid request. User information set up by the provisioning system includes such entities as a list of groups to which the user belongs, and user policy information. Partnership contracts handled by the provisioning component  comprise policy information and collection information. Configuration properties handled by the provisioning component  comprise specifics for the partner configuration.","In one embodiment, provisioning component  implements a business process modeler. This business process modeler functions to model business tasks, business events, service level agreement (SLA) decisions, and other business related items into one or more processes or workflows which are carried out or managed by the system to be implemented. The business process modeler may design or provide template flows for processes, such as, for example, a process to handle a repair order. In one embodiment, business tasks may be triggered through XML-based messages. SLAs may be supported by automated as well as manual decision nodes. In a supply chain, multiple instances of the same process may be carried out at one time.","In one embodiment, provisioning component  may also include a master data coordinator, an ERP broker, and business repository database.","Automated Execution of Business Policies",{"@attributes":{"id":"p-0118","num":"0117"},"figref":["FIG. 8","FIG. 8"],"b":["14","14","132","134","136","138","14","146","148","150","152","132"]},"The transaction messages that enter process execution component  may contain transaction data and corresponding event triggers responsive to actions taken in the network system. Alternatively, the transaction data and associated event trigger may arise out of execution of another transaction including the expiration of a timeout period. The transaction data can be processed or handled pursuant to a workflow which is governed by business policies as set forth in terms of one or more contracts  ().","The API component  and the event management component  provide an interface for external activities to connect to and use the workflow(s) that are driven by the process execution component .","The functions of business data manager component , data access layer component , process execution component , common services component , workflow event management component , and workflow task API  can be performed by any suitable computer data processor such as a main-frame, file server, workstation, or etc. The computer data processor may typically operate under the control of any suitable operating system software, such as OS\/2\u00ae, UNIX\u00ae, and\/or the like.","The network domain  enables control and management of workflows , , and  in the process execution component  through access to real-time data. A workflow or process may be initiated by a transaction or a demand, and may execute tasks.","The behavior of processes and tasks are governed at least in part by externally defined policies. For example, a transaction process can be for the delivery of a product, and a policy associated with that process may specify that the product be delivered within two days provided certain criteria are met. As another example, a task can be the handling of a purchase order modification in which the desired quantity is to be changed; an associated policy may set minimum and maximum acceptable values for such a changed quantity.","During the execution of a workflow, the context of a transaction or a demand is maintained by the use of real-time data. Each of workflow , , and  may include triggers that call on common services component  or business data managers component . The workflows may have triggers that map onto, and are derived during system implementation from, the one or more use-case specifications (described above).","The process execution component  is designed to execute objects representing decision nodes, events, and actions (e.g., tasks). The process execution component  may include software or applications for business workflow , exception workflow , and routing workflow . The business workflow  manages business policies and transactions in network domain , for example, by monitoring and controlling various ECA events which are related to the terms of various agreements between and among parties in the supply chain. The exception workflow  monitors and manages alerts (inter alia). The routing workflow  routes transaction messages throughout the network domain , as well as to and from other domains (e.g., partner domains , enterprise domain , both of ).","The business data managers component  may manage the processes involving one or more objects which are instantiated pursuant to the transaction messages that flow through network domain  and other domains. As depicted, the business data managers component  may include a policy manager component , an enterprise business unit (EBU) manager component , an alert manager component , and a repair order manager component . The policy manager component  maintains the policies and practices specific to an enterprise's way of doing business with a partner, such as an extended EBU. Resources of the policy manager component  may be invoked by the business data managers component  to ensure that a workflow complies with organizational conditions of one or more entities in the supply chain (e.g., enterprise, partner, etc.). The alert manager component  may provide or support alert handling, exception management, and event management capabilities for the actions take (or not taken) by the various entities pursuant to the transaction messages. The repair order manager  provides or supports the management of events or transaction messages related to the orders for repair of products provided by the enterprise and\/or its partners.","The data access layer component  provides access for other components of the network domain  to databases, such as LDAP database  and relational database . The use of the LDAP  provides for easy distribution of key information throughout the network  for access by network system components. Business policy rules can be implemented or incorporated using a LDAP database  or a relational database  to allow for separation of decision logic from process (or action) logic. Separation of decision logic from process logic makes system application elements (e.g., process, tasks, and decisions) more configurable to various business conditions. Some elements can be networked and sharable, for example, from LDAP database . This mechanism allows for dynamic reconfiguration of business policy rules with distribution throughout the network . The business logic in the network  dynamically loads policy rules through the use of a policy manager component .","The common services component  administers or manages areas, such as security, directory, auditing, alert notification, logging , eXtensible Markup Language (XML) converting , and messaging , which can be commonly performed for various transactions. Logging  facilitates the auditing of data. XML converting  converts or formats messages into XML. Messaging  provides secure messaging between components. Security provides authentication, non-repudiation, authorization, and confidentiality services. Directory provides a data flow for platform configuration data and parameters. Alerts provide warnings and errors encountered by the network domain  and\/or other domains involved with the supply chain.","The common services component  and business data managers component  may obtain real-time access to data in databases, such as LDAP (lightweight directory access protocol) database  and a relational database (for example, an Oracle database, as labeled in ) , through the data access layer . The network domain  can then use the real-time data in the databases to control and manage the workflows , , and .",{"@attributes":{"id":"p-0130","num":"0129"},"figref":["FIG. 9","FIG. 9","FIG. 9"]},"Referring to , in network execution, a network domain gateway  may receive and convert an XML-formatted message into a JMS-formatted message for handling within a system. The message may be picked off or selected from a JMS queue. The message may contain data or information specifying an event which will trigger one or more actions which can be part of a workflow or process , , and  in an execution process engine . In general, the execution process engine  facilitates the creation, customization, and monitoring of processes.","Each workflow or process , , and  within the execution process engine  may be one of the processes modeled by a business process modeler of a provisioning component  (as described above with reference to ). These processes can perform specific functions and may be granular in nature. Processes , , and  may be designed to be used in a variety of situations. Thus, for example, the same process may be used as part of an effort to manage exceptions or an effort to calculate interest. Each process , , and  within the execution process engine  may have an exception management sub-process (not shown in ) to handle exception conditions. Such exception management sub-processes may be part of one or more exception workflows  (see ).","Each process , , and  may comprise one or more tasks , , and , such as, for example, transforming data according to specified business rules. In one embodiment, there are two categories of tasks within each process: action tasks and policy (or decision) tasks. Action tasks perform specific actions while policy tasks facilitate the interrogation of policy rules. For example, an action task might provide for the creation of a purchase order (PO) responsive to user initiation, whereas a policy task might involve checking a promised turnaround time responsive to reaching a decision node in that action task. A decision node can be a dynamic branch in process logic.","One or more process managers  can be invoked by each of the tasks (e.g., , , and ) in a process , , or , for example, by being passed a command. The command indicates which process manager  should be invoked and the action to be taken. A process manager  generally functions to manage at least a portion of a process or workflow. Process managers  may, for example, keep track of the events, commands, and actions that have or should occur in the execution of various tasks of a workflow. A process manager  may implement actions by using the command pattern, and actions invoked. In one embodiment, each process manager  brokers access to a respective business object managers , which form the core platform functionality. Process managers  may translate XML-formatted data to data objects for processing by the business object managers . The process managers  may use the business object managers  by converting XML content to objects to perform functions, for example, to create and update purchase orders. In one embodiment, process managers  can be implemented or executed using stateless session beans.","Business object managers  form the core platform functionality. For each process , , and , a respective business object manager  may be responsible for servicing requests initiated by the execution process engine . For example, if there is a request to create a purchase order, the process , , or  delegates the request to an appropriate business object manager  to create the purchase order on the caller's behalf. Business object managers  may be abstracted from changes in the process and changes to the XML data structures by the process managers . Each business object manager  may provide an abstraction layer for database access to an application data repository . Business object managers  may provide or support the creation and updating of data in the database. Business object managers  provide search functionality for the workflows or processes. Like process managers , in one embodiment, business object managers  can be implemented or executed using stateless session beans.","The policy manager  maintains or enforces business policies and related practices that are specific to an entity's (e.g., enterprise's) way of doing business and that are used to ensure that a workflow does not violate organizational conditions. The execution system  will call on the policy manager  based upon the business processes that are executed in the system. Business policies and the organizational conditions of one or more entities can be stored in a policy data repository . Policy data repository  may implement a lightweight directory access protocol (LDAP) database.",{"@attributes":{"id":"p-0137","num":"0136"},"figref":"FIG. 10","b":"700"},"As depicted, in each of a subnet execution , a network execution , and a business unit execution , data and information for policies may be retrieved or distributed from the LDAP policy store . In one embodiment, access to the LDAP policy store  can be token-based data retrieval. The data\/information for policy rules may be in the form of name\/value pairs which are used for decision making in the system. Subnet execution  may utilize policies for local automation. Network execution  may receive or obtain policies relating to, for example, order and inventory routing. Business unit execution  may use policies from LDAP policy store  during the execution of one or more processes , , and . Each process , , and  may operate under a different policy or set of policies. For example, process  may operate under a policy that requires delivery of a particular part within two hours; process  may operate under a policy that requires delivery of the part within four hours; and process  may operate under a policy that requires delivery overnight. Each process , , and  may be associated with or managed by a respective state machine. Each of subnet execution , network execution , and business unit execution  may comprise one or more queues  for queuing messages that may be exchanged throughout the network system.",{"@attributes":{"id":"p-0139","num":"0138"},"figref":"FIG. 10","b":["702","704","706"]},"The scoping of policy rules in the network system allows for centralized administration, but with distributed execution. This provides a technical advantage in that there is greater flexibility in the configuration options, and also greater scalability. In contrast, previously developed systems, which used inference engines, stored and executed rules in one place.",{"@attributes":{"id":"p-0141","num":"0140"},"figref":"FIG. 11","b":["950","950","950"]},"A network infrastructure for computer-based system  includes routers , intrusion detection hubs , and primary HTTP load balancers . Multiple border routers provide high reliability. Redundant firewalls  are configured as primary and standby. The network may be supported with two levels of firewalls : an inner firewall and an outer firewall. The inner firewall, which interfaces between a DMZ and the backend application, allows communication across TCP\/SSL and HTTP(s). The outer firewall interfaces between the DMZ and the Internet, a virtual private network (VPN), or other suitable communication network. The outer firewall may allow communication across HTTP(s).","Major software components may be categorized as web services, messaging services, application services, and persistent data services. These software components can be deployed in several layers: a messaging layer, a web services layer, an application server layer, and a database server layer.","The messaging layer, which resides in the DMZ, handles business-to-business input into the computer-based system . The messaging layer includes a proxy server  and one or more message servers . The message servers  may receive requests and delegate them directly to the application services layer, thus, bypassing the web services layer. The messaging layer can be clustered.","The web services layer may handle browser-based input into computer-based system . It receives requests and delegate them to a policy server  (in the application server layer) for authentication or authorization. The request may then be forwarded to a specified application server . The web services layer may include one or more web servers . Each web server  may map directly to an application server .","The application server layer provides or supports application services. The application server layer may include one or more application servers . This layer also contains policy (e.g., Netegrity) and LDAP servers . The policy and LDAP servers  may provides data services that are common to all applications.","The database server layer provides fail-over redundancy. As depicted, the database server layer includes primary and secondary database management system (DBMS) servers  and network storage . Database server layer may utilize a redundant array of independent disks (RAID) protocol to mirror the data. The database repositories may be stored using network attached technology to provide flexibility.","Each of the servers within the three layers can be implemented using any number of suitable server hardware configurations, such as SUN SOLARIS, WINDOWS NT, OS\/2 WARP, and NETWARE.","Each component of computer-based system  can be configured with multiple NIC cards to provide fail over local area network (LAN) reliability.","Computer-based system  may communicate with other systems via a communication network, such as the Internet or VPN. This communication network may be capable of supporting data transfer between a client device and a server device. The communication network may support communication via the Internet, using any suitable protocol, such as, Transmission Control Protocol\/Internet Protocol (TCP\/IP), Internetwork Packet eXchange\/Sequence Packet eXchange (IPX\/SPX), or AppleTalk.link.",{"@attributes":{"id":"p-0151","num":"0150"},"figref":["FIG. 12","FIG. 9"],"b":["1002","1004","1006","1008","1002","1004","1006","132","802","838","830"]},"Methods , , , and  illustrates how components of an implemented system are modeled to execute processes as tasks within the selected open operating environment. Process execution method  handles transactions that may be initiated by some triggering event. At step , the event causes a trigger for the transaction. At step , the trigger invokes a response from a procedure, which in one implementation, can be an execution of an Enterprise JAVA Bean (EJB). When the EJB execution reaches a policy decision node at step , it is triggered to use a policy manager  to retrieve the relevant business policy rule. In one embodiment, retrieval of the policy rule is initiated by process execution forming and passing a specific token to a process manager .","At step , the process manager  receives the token. It then identifies the token and determines the need for a policy manager  resource at step . The policy resource is requested at step  from the policy manager , which is poised to receive such requests at step . The policy manager  identifies the name\/value pair(s) from the token and at step  requests the actual values from the LDAP repository . The value(s) for the specified name is retrieved from the LDAP repository services  at step , and returned to the policy manager  at step .","At step , the policy manager , in turn, sends the name\/value pair(s) to the process manager . Process manager  at step  evaluates the token criteria against the name\/value pairs obtained. Depending upon the result of the evaluation, the appropriate trigger, (selected from one or more alternatives) is activated at step . The new trigger thus formed will invoke an EJB response, thus providing continued asynchronous process execution to fulfill the business operational objectives. Thus, a scoped rule dynamic branching logic is implemented. It can be noted that the various managers (process and policy) may be implemented across various open low level architectures, including different types of network and computer hardware, and therefore, data massaging of various kinds may be present. The value obtained may, for example, be defined in an SLA (service level agreement) and is checked against incoming data that triggered the process execution leading to the policy evaluation. In short, the process execution (which may be Java code in the form of EJB) evaluates the policy, and the evaluation leads the process execution to be triggered to follow the desired specific paths in the execution process. This approach strictly limits complexity at run-time, thereby providing significant advantages over previously developed techniques (e.g., those using inference engines).","By way of further illustration, the following is sample policy in accordance with one embodiment. The sample policy specifies that the turnaround time for a particular part return should not be greater than 72 hours. The \u201c72 hours\u201d is actually a configurable value that is stored in an LDAP repository. In this example the policy is a timer policy. This sample policy is realized as a name value pair, specifically: Name=TAT, Value=72 hours. The execution process engine  may have a policy decision node defined therein to evaluate policy whenever it is triggered in accordance with use-case criteria. When the policy rule needs to be examined, the process manager  invokes the policy manager , with enough information being passed thereto so that the policy manager  can identify the policy rule based upon a token. In the present example, the token may be the name of the policy (i.e., \u201cTAT\u201d) together with supporting information such as, for example, EBU identification that enables the policy manager  to retrieve the appropriate information. Data is retrieved to the process manager , which then returns the parameter in a comparable form to the invoking engine. This engine, in turn, evaluates the value against and incoming value and causes the configured execution route to be followed.","As described above, use-case methods are used together with UML diagrams to document business rules to be automated as processes within the network system. The UML guides the creation of policies by human effort. Policies are then decomposed by a human business analyst into meaningful name\/value pairs. Policies may be implemented in the target process as either LDAP entities or in the database, the decision as to which being made by a system architect. The actual data population is controlled by LDAP programmers or data modelers as appropriate. Exceptionally, some policies are in the process engine itself and may be realized as name\/value pairs stored as XML (extended markup language programs).","As to run-time policy execution, in the exemplary network system, Java language code fetches the provisioned policies from the database or LDAP. EJBs (Enterprise Java Beans) in the process engine may contain the logical algorithms to evaluate the policies and to follow execution paths based upon the results of the process\/evaluation.","To facilitate policies a user interface is provided to provision the data for the policy rules. For an LDAP repository, this could be the use of an LDAP browser which allows a system admin to manage the information stored in the LDAP repository. Alternatively, a custom UI (User Interface) may provide a means to update LDAP data.","Although particular embodiments of the present invention have been shown and described, it will be obvious to those skilled in the art that changes and modifications may be made without departing from the present invention in its broader aspects, and therefore, the appended claims are to encompass within their scope all such changes and modifications that fall within the true scope of the present invention."],"BRFSUM":[{},{}],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"BRIEF DESCRIPTION OF DRAWINGS","p":["For a more complete understanding of the present invention and for further features and advantages, reference is now made to the following description, taken in conjunction with the accompanying drawings, in which:",{"@attributes":{"id":"p-0024","num":"0023"},"figref":"FIG. 1"},{"@attributes":{"id":"p-0025","num":"0024"},"figref":"FIG. 2"},{"@attributes":{"id":"p-0026","num":"0025"},"figref":"FIG. 3"},{"@attributes":{"id":"p-0027","num":"0026"},"figref":"FIG. 4"},{"@attributes":{"id":"p-0028","num":"0027"},"figref":"FIG. 5"},{"@attributes":{"id":"p-0029","num":"0028"},"figref":"FIG. 6"},{"@attributes":{"id":"p-0030","num":"0029"},"figref":"FIG. 7"},{"@attributes":{"id":"p-0031","num":"0030"},"figref":"FIG. 8"},{"@attributes":{"id":"p-0032","num":"0031"},"figref":"FIG. 9"},{"@attributes":{"id":"p-0033","num":"0032"},"figref":"FIG. 10"},{"@attributes":{"id":"p-0034","num":"0033"},"figref":"FIG. 11"},{"@attributes":{"id":"p-0035","num":"0034"},"figref":"FIG. 12"}]},"DETDESC":[{},{}]}
