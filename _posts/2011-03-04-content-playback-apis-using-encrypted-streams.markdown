---
title: Content playback APIS using encrypted streams
abstract: One embodiment of the present invention sets forth a technique for decrypting digital content in a secure environment. The technique includes the steps of receiving a digital rights management (DRM) license associated with a first frame of encrypted data from a DRM server, where the DRM license includes a decryption key for decrypting the first frame of encrypted data, transmitting the DRM license to a secure content playback pipeline for storage, and transmitting the first frame of encrypted data to the secure content playback pipeline for decryption, where, in response to receiving the first frame of encrypted data, a trusted processing entity within the secure content playback pipeline decrypts the first frame of encrypted data based on the decryption key included in the DRM license to generate a first set of decrypted data and store the first set of decrypted data in a secure memory space.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08532290&OS=08532290&RS=08532290
owner: Netflix, Inc.
number: 08532290
owner_city: Los Gatos
owner_country: US
publication_date: 20110304
---

{"@attributes":{"id":"description"},"BRFSUM":[{},{}],"heading":["BACKGROUND OF THE INVENTION","SUMMARY OF THE INVENTION","DETAILED DESCRIPTION"],"p":["1. Field of the Invention","Embodiments of the present invention relate generally to digital media and, more specifically, to content playback APIs using encrypted streams.","2. Description of the Related Art","Digital content distribution systems conventionally include a content server, a content player, and a communications network connecting the content server to the content player. The content server is configured to store digital content files, which can be downloaded from the content server to the content player. Each digital content file corresponds to a specific identifying title, such as \u201cGone with the Wind,\u201d which is familiar to a user. The digital content file typically includes sequential content data, organized according to playback chronology, and may comprise audio data, video data, or a combination thereof.","The content player is configured to download and play a digital content file, in response to a user request selecting the title for playback. The process of playing the digital content file includes decoding and rendering audio and video data into an audio signal and a video signal, which may drive a display system having a speaker subsystem and a video subsystem. Playback typically involves a technique known in the art as \u201cstreaming,\u201d whereby the content server sequentially transmits the digital content file to the content player, and the content player plays the digital content file while content data is received that comprises the digital content file.","Content data is typically encrypted and needs to be decrypted before the data can be played. The playback process, therefore, includes four steps, (i) retrieve content, (ii) decrypt content, (iii) decode content and (iv) output content. For the purposes of content protection, the content is most vulnerable and step (ii). At this step, the decrypted (and, therefore, unprotected) but still compressed content data is available. Since it is not always desirable or possible to prevent execution of un-trusted code, the decrypted content at step (ii) is vulnerable to attacks from third-party applications.","As the foregoing illustrates, what is needed in the art is an approach for decrypting digital data in a secure environment.","One embodiment of the present invention sets forth a method for decrypting digital data within a secure execution environment. The method comprises the steps of receiving a digital rights management (DRM) license associated with a first frame of encrypted data from a DRM server, where the DRM license includes a decryption key for decrypting the first frame of encrypted data, transmitting the DRM license to a secure content playback pipeline for storage, and transmitting the first frame of encrypted data to the secure content playback pipeline for decryption, where, in response to receiving the first frame of encrypted data, a trusted processing entity within the secure content playback pipeline decrypts the first frame of encrypted data based on the decryption key included in the DRM license to generate a first set of decrypted data and store the first set of decrypted data in a secure memory space.","One advantage of the disclosed technique is that the encrypted digital content is decrypted in a secure environment of the trusted execution environment and, therefore, is less vulnerable to attacks from a malicious third-party application executing on the CPU.","In the following description, numerous specific details are set forth to provide a more thorough understanding of the present invention. However, it will be apparent to one of skill in the art that the present invention may be practiced without one or more of these specific details. In other instances, well-known features have not been described in order to avoid obscuring the present invention.",{"@attributes":{"id":"p-0016","num":"0015"},"figref":"FIG. 1","b":["100","100","102","104","106","108"]},"The communications network  includes a plurality of network communications systems, such as routers and switches, configured to facilitate data communication between the CDN , the DRM server and the endpoint device . Persons skilled in the art will recognize that many technically feasible techniques exist for building the communications network , including technologies practiced in deploying the well-known internet communications network.","The endpoint device  may comprise a computer system, a set top box, a mobile device such as a mobile phone, or any other technically feasible computing platform that has network connectivity and is coupled to or includes a display device and speaker device for presenting video frames, and generating acoustic output, respectively.","The CDN  comprises one or more computer systems configured to serve download requests for digital content files received from the endpoint device . The digital content files may reside on a mass storage system accessible to the computer system. The mass storage system may include, without limitation, direct attached storage, network attached file storage, or network attached block-level storage. The digital content files may be formatted and stored on the mass storage system using any technically feasible technique. A data transfer protocol, such as the well-known hyper-text transfer protocol (HTTP), may be used to download digital content files from the CDN  to the endpoint device .","The DRM server  serves requests for licenses associated with encrypted digital content files received from the endpoint device . In operation, an encrypted digital content file downloaded from the CDN  by the endpoint device  must be decrypted before the digital content file can be played. The license associated with the encrypted digital content file is stored in the DRM server  and is transmitted to the endpoint device , which in turn uses the license to decrypt the digital content file.  describe in detail a technique for securely decrypting encrypted digital content files.","Although, in the above description, the content distribution system  is shown with one endpoint device  and one CDN , persons skilled in the art will recognize that the architecture of  contemplates only an exemplary embodiment of the invention. Other embodiments may include any number of endpoint devices  and\/or CDNs . Thus,  is in no way intended to limit the scope of the present invention in any way.",{"@attributes":{"id":"p-0022","num":"0021"},"figref":["FIG. 2","FIG. 1"],"b":["108","108","210","212","214","218","220","222","230","242","244","108","216"]},"The CPU  is configured to retrieve and execute programming instructions stored in the memory subsystem . Similarly, the CPU  is configured to store and retrieve application data residing in the memory subsystem . The interconnect  is configured to facilitate transmission of data, such as programming instructions and application data, between the CPU , graphics subsystem , I\/O devices interface , mass storage , network interface , secure memory space  and memory subsystem .","The graphics subsystem  is configured to generate frames of video data and transmit the frames of video data to display device . In one embodiment, the graphics subsystem  may be integrated into an integrated circuit, along with the CPU . The display device  may comprise any technically feasible means for generating an image for display. For example, the display device  may be fabricated using liquid crystal display (LCD) technology, cathode-ray technology, and light-emitting diode (LED) display technology (either organic or inorganic). An input\/output (I\/O) device interface  is configured to receive input data from user I\/O devices  and transmit the input data to the CPU  via the interconnect . For example, user I\/O devices  may comprise one of more buttons, a keyboard, and a mouse or other pointing device. The I\/O device interface  also includes an audio output unit configured to generate an electrical audio output signal. User I\/O devices  includes a speaker configured to generate an acoustic output in response to the electrical audio output signal. In alternative embodiments, the display device  may include the speaker. A television is an example of a device known in the art that can display video frames and generate an acoustic output. A mass storage unit , such as a hard disk drive or flash memory storage drive, is configured to store non-volatile data. A network interface  is configured to transmit and receive packets of data via the communications network . In one embodiment, the network interface  is configured to communicate using the well-known Ethernet standard. The network interface  is coupled to the CPU  via the interconnect .","The memory subsystem  includes programming instructions and data that comprise an operating system , a user interface , a playback application , a digital rights management (DRM) agent  and a playback application programming interface (API) . The operating system  performs system management functions such as managing hardware devices including the network interface , mass storage unit , I\/O device interface , and graphics subsystem . The operating system  also provides process and memory management models for the user interface  and the playback application . The user interface  provides a specific structure, such as a window and object metaphor, for user interaction with endpoint device . Persons skilled in the art will recognize the various operating systems and user interfaces that are well-known in the art and suitable for incorporation into the endpoint device .","The playback application  is configured to retrieve encrypted digital content from the CDN  via the network interface . In addition, the playback application  is configured to interact with the DRM agent  via the playback API  so that the retrieved digital content is decrypted and rendered. In operation, the playback application  first retrieves the header information associated with a digital content file to be played from the CDN . The playback application  then transmits a request for a DRM challenge that includes the header information to the DRM agent  via the playback API . In response to the request, the DRM agent  generates a DRM challenge that is encrypted by an encryption\/decryption module executing in the TEE . The DRM agent  then transmits the DRM challenge to the playback application .","Once the playback application  receives the DRM challenge, a request for a DRM license that includes the DRM challenge is transmitted to the DRM server . As previously described herein, the DRM server , upon receiving the DRM challenge, transmits a DRM license associated with the digital content file to be played to the playback application . The DRM license includes the decryption key needed to decrypt the encrypted digital content file. Upon receipt, the playback application  transmits the DRM license to the DRM agent  via the playback API  for storage in the TEE . In another embodiment, the TEE  only stores the decryption key included in the DRM license. In addition, the playback application  transmits a request for a decryption context generated based on the DRM license to the DRM agent  via the playback API . Any subsequent decryption and rendering operations are performed using the decryption context generated by the DRM agent .","Again, the playback application  is configured to retrieve encrypted digital content from the CDN  via the network interface . Once the encrypted digital content is retrieved from the CDN  and the decryption context is received from the DRM agent , the playback application  transmits the encrypted digital content along with the decryption context to the DRM agent  for decryption and rendering. The DRM agent , in turn, transmits the encrypted digital content and the decryption context to the TEE . The TEE  decrypts the encrypted digital content using decryption algorithms within the TEE . Importantly, the TEE  is a secure processing environment, and a third-party application executing outside the TEE  cannot access the decrypted digital content. The decrypted digital content is then stored in the secure memory space . In an alternate embodiment, the decrypted digital content is stored in a memory space that is not secure, i.e., a standard random access memory (RAM). In such an embodiment, the same decryption and rendering processes described herein still apply. In addition, a pointer to the storage location that stores the decrypted digital content is transmitted to the DRM agent .","The DRM agent , in response to receiving the pointer to the storage location that stores the decrypted digital content, transmits a request to the audio\/video decoder  to render the decrypted digital content. In an alternate embodiment, the TEE  transmits the pointer to the storage location that stores the decrypted digital content directly to the audio\/video decoder  to render the decrypted digital content.","In the case of video data, the audio\/video decoder  reads units of video data from the secure memory space , and renders the units of video data into a sequence of video frames corresponding in duration to the fixed span of playback time. The sequence of video frames is processed by graphics subsystem  and transmitted to the display device . In the case of audio data, the audio\/video decoder  reads units of audio data from the secure memory space , and renders the units of audio data into a sequence of audio samples, generally synchronized in time with the sequence of video frames. In one embodiment, the sequence of audio samples is transmitted to the I\/O device interface , which converts the sequence of audio samples into the electrical audio signal. The electrical audio signal is transmitted to the speaker within the user I\/O devices , which, in response, generates an acoustic output.","It should be noted that any combination of encrypted\/unencrypted audio\/video data can be processed by the system described herein. In some cases, both audio and video data are encrypted, while in other cases only one of the audio or video data is encrypted.","In such a manner, the encrypted digital content is decrypted in a secure environment of the TEE  and, therefore, is less vulnerable to attacks from a malicious third-party application executing on the CPU .",{"@attributes":{"id":"p-0033","num":"0032"},"figref":["FIG. 3","FIGS. 1-2"]},"The method  begins at step , where the playback application  retrieves header information associated with a digital content file (audio\/video data) to be played from the CDN . The playback application  then transmits a request for a DRM challenge that includes the header information to the DRM agent  via the playback API . At step , the DRM agent  generates a DRM challenge based on the header information that is then encrypted by an encryption\/decryption module executing in the TEE . The DRM agent  then transmits the DRM challenge to the playback application .","At step , the playback application  transmits a request for a DRM license that includes the DRM challenge to the DRM server . As previously described herein, the DRM server , upon receiving the DRM challenge, transmits a DRM license associated with the digital content file to be played to the playback application . The DRM license includes the decryption key needed to decrypt the encrypted digital content file. At step , the playback application  transmits the DRM license to the DRM agent  via the playback API  for storage in the TEE .","At step , the playback application  retrieves the encrypted digital content from the CDN  via the network interface . At step , the playback application  transmits the encrypted digital content to the DRM agent  for decryption and rendering. The DRM agent , in turn, transmits the encrypted digital content to the TEE , and the TEE  decrypts the encrypted digital content. The decrypted digital content is then stored in the secure memory space . In addition, a pointer to the storage location that stores the decrypted digital content is transmitted to the DRM agent .","At step , the DRM agent , in response to receiving the pointer to the storage location that stores the decrypted digital content, transmits a request to the audio\/video decoder  to render the decrypted digital content.","One advantage of the disclosed technique is that the encrypted digital content is decrypted in a secure environment of the TEE  and, therefore, is less vulnerable to attacks from a malicious third-party application executing on the CPU .","One embodiment of the invention may be implemented as a program product stored on computer-readable storage media within the endpoint device . In this embodiment, the endpoint device  comprising an embedded computer platform such as a set top box. An alternative embodiment of the invention may be implemented as a program product that is downloaded to a memory within a computer system, for example as executable instructions embedded within an internet web site. In this embodiment, the endpoint device  comprises the computer system.","While the forgoing is directed to embodiments of the present invention, other and further embodiments of the invention may be devised without departing from the basic scope thereof. For example, aspects of the present invention may be implemented in hardware or software or in a combination of hardware and software. One embodiment of the invention may be implemented as a program product for use with a computer system. The program(s) of the program product define functions of the embodiments (including the methods described herein) and can be contained on a variety of computer-readable storage media. Illustrative computer-readable storage media include, but are not limited to: (i) non-writable storage media (e.g., read-only memory devices within a computer such as CD-ROM disks readable by a CD-ROM drive, flash memory, ROM chips or any type of solid-state non-volatile semiconductor memory) on which information is permanently stored; and (ii) writable storage media (e.g., floppy disks within a diskette drive or hard-disk drive or any type of solid-state random-access semiconductor memory) on which alterable information is stored. Such computer-readable storage media, when carrying computer-readable instructions that direct the functions of the present invention, are embodiments of the present invention.","In view of the foregoing, the scope of the present invention is determined by the claims that follow."],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"BRIEF DESCRIPTION OF THE DRAWINGS","p":["So that the manner in which the above recited features of the present invention can be understood in detail, a more particular description of the invention, briefly summarized above, may be had by reference to embodiments, some of which are illustrated in the appended drawings. It is to be noted, however, that the appended drawings illustrate only typical embodiments of this invention and are therefore not to be considered limiting of its scope, for the invention may admit to other equally effective embodiments.",{"@attributes":{"id":"p-0012","num":"0011"},"figref":"FIG. 1"},{"@attributes":{"id":"p-0013","num":"0012"},"figref":["FIG. 2","FIG. 1"]},{"@attributes":{"id":"p-0014","num":"0013"},"figref":"FIG. 3"}]},"DETDESC":[{},{}]}
