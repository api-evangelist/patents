---
title: Methods, systems, and computer program products for using a personal conference to privately establish and control media connections with a telephony device
abstract: Methods, systems, and computer program products for using a personal conference to privately establish and control media connections with a telephony device are disclosed. According to one method, a media connection is established between a first user and a personal conference instance. The first user is connected to the personal conference instance via a telephony device, such as a PSTN phone. A plurality of second media connections is established between a plurality of second users and the personal conference instance in a manner that conceals existence of the personal conference instance to at least one of the second users. Media packets from the second users are mixed and sent to the first user. Media packets from the first user are sent to the second users. The first user dynamically controls at least one aspect of the personal conference call instance.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=07715541&OS=07715541&RS=07715541
owner: BroadSoft M6, LLC
number: 07715541
owner_city: Gaithersburg
owner_country: US
publication_date: 20050901
---

{"@attributes":{"id":"description"},"BRFSUM":[{},{}],"heading":["TECHNICAL FIELD","BACKGROUND ART","SUMMARY","DETAILED DESCRIPTION"],"p":["The subject matter described herein relates to methods, systems, and computer program products for establishing and controlling a plurality of media streams to a telephony device. More particularly, the subject matter described herein relates to methods, systems, and computer program products for privately establishing and controlling media streams to a telephony device using a personal conference call.","In telephony networks, it may be desirable to provide a mechanism where more than two media streams can be privately mixed and sent to a general purpose PSTN telephony device. Conventional telephony devices, such as PSTN phones, are limited in that they can only handle two different incoming media streams. If it is desirable to send more than two media streams from a local PSTN phone to a remote PSTN phone or to receive more than two media streams from the remote PSTN phone, it is necessary to use a conference bridge. However, using a conference bridge requires that all parties connected to the conference bridge hear each other.","In some instances, it may be desirable for the local PSTN phone to receive more than two media streams without requiring that the mixed media streams be delivered to all users or devices connected to the local PSTN phone. For example, if a business manager is communicating with multiple employees in the field, it may be desirable for the manager to be able to simultaneously hear multiple employees in the field. However, it may not be necessary that the employees in the field know that the manager can hear all of them or that they be able to hear each other. In another example, one user may desire to listen to music while communicating with other users but may not desire to transmit the music to the other users. In yet another example it may be desirable for an administrator or supervisor at a call center to hear multiple calls with customers, to selectively adjust features of the calls, and to prevent the customers from hearing each other. Conventional conference bridges lack the flexibility to implement these scenarios.",{"@attributes":{"id":"p-0005","num":"0004"},"figref":["FIG. 1","FIG. 1"],"b":["100","102","104","102","104","106","104","100"]},"Accordingly, in light of these shortcomings, there exists a long felt need for methods, systems, and computer program products for privately establishing and controlling media connections with a PSTN telephony device.","According to one aspect, the subject matter described herein includes a method for privately establishing and controlling media connections with a telephony device using a personal conference. The method includes establishing a media connection between a first user and a personal conference call instance. A plurality of second media connections is established between a plurality of second users and the personal conference instance. The first user is connected to the personal conference instance via a telephony device, such as a PSTN phone. The second media connections are established in a manner that conceals existence of the personal conference call instance from at least one of the second users. Media packets from the second users are mixed and delivered to the first user. Media packets from the first user are sent to the second users. The first user can dynamically control at least one feature of the personal conference call.","One advantage of using a personal conference call to privately establish and control media streams to a telephony device over using conventional conference calls is that the users other than the initiator may be unaware of each other. In addition, the initiator can selectively control features of the media streams that he or she hears. Exemplary features that can be controlled by the initiator include per line volume, muting, and directionality. Another advantage of using a personal conference call user to privately establish and control multiple media streams to a telephony device is that the telephony device is not required to have its own multi-line conferencing capabilities.","According to one aspect, the subject matter described herein includes a method for private establishment and control of multiple media connections to a telephony user using a personal conference call. The establishment and control of the connections is private because the connections are established and controlled in a manner that conceals the existence of the personal conference call from at least one user.  is a schematic diagram illustrating the use of a personal conference call to deliver multiple media streams to a telephony user according to an embodiment of the subject matter described herein. Referring to , a conference owner or initiator  initiates a connection with a personal conference call instance . Personal conference call instance  includes hardware and software for establishing media connections with user , user , audio transmitter , and audio recorder . According to an important aspect of the subject matter described herein, users  and  are preferably unaware that they are participating in a conference call. That is, media connections  and  are preferably established and controlled in such a manner to conceal the fact that users  and  are connected to personal conference call instance . Rather, users  and  may believe that they are connected directly to the phone of conference owner .","According to another aspect of the subject matter described herein, conference owner  may dynamically control one or more aspects of the personal conference. One aspect controllable by conference owner  may include directionality. For example, connections  and  may be send\/receive so that users  and  can hear conference owner  and so that conference owner  can hear users  and . Connection  from audio transmitter  may be receive only. For example, audio transmitter  may generate music that conference owner  wishes to hear but does not wish to broadcast to other users. Connection  with audio recorder  may be send only so that audio recorder  receives media packets from conference owner  but not from other sources. Alternatively, audio recorder  may receive mixed packets from any one or more of the audio sources in the conference call where the packets being mixed are controlled by conference owner .","The directionality, volume, or other feature of any of the connections connected to personal conference instance  may be changed on the fly. Exemplary messages that may be used to dynamically control features of a personal conference call that is used to control multiple media connections with a telephony user will be described in detail below.","Although the diagram in  relates primarily to audio streams being delivered to and from the conference owner, the subject matter described herein is not limited to delivering only audio content. Any media type that can be packetized and sent over a network may be delivered to and from a conference owner using the methods described herein. For example, video streams from each non-owner user may be mixed and sent to the conference owner but not to other non-owners. Similarly, a video stream from the owner may be fanned out and distributed to each non-owner.","Table 1 shown below illustrates exemplary comparisons between a personal conference call used to privately deliver multiple media streams to a conference owner as illustrated in  and a traditional conference call.",{"@attributes":{"id":"p-0026","num":"0025"},"tables":{"@attributes":{"id":"TABLE-US-00001","num":"00001"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"center"}},"thead":{"row":{"entry":"TABLE 1"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}},{"entry":"Personal Conference Call-Traditional Conference Call Comparison"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"112pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"105pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["Personal Conference Call","Traditional Conference Call"]},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}},{"entry":["Attached to specific user (owner) or","Not attached to a specific user, but"]},{"entry":["device.","is attached to multiple users or"]},{"entry":[{},"participants."]},{"entry":["None of the end users including","Every end user is aware of his or"]},{"entry":["specific user are aware that they are","her own and other user's presence"]},{"entry":["in a conference, i.e., it's completely","in a conference call."]},{"entry":"hidden from the user perspective."},{"entry":["Audio streams are only added by an","Audio streams are added by an"]},{"entry":["action from specific user.","action from participant, such as"]},{"entry":[{},"dialing a conference number."]},{"entry":["Audio streams from other users are","Audio streams from other users are"]},{"entry":["presented only to the specific user.","presented to every other user."]},{"entry":["Other users hear audio from specific","Users hear audio from each other."]},{"entry":"user only."},{"entry":["Only a specific user can change the","Any participant who has the"]},{"entry":["direction or volume of an audio","privileges as a moderator can"]},{"entry":["stream.","adjust the volume or change the"]},{"entry":[{},"properties on a connection through"]},{"entry":[{},"floor control application software."]},{"entry":["An audio stream connected to such","An audio stream connected to such"]},{"entry":["conference is not a participant.","conference is a participant."]},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}}]}}]}}},"According to the first row of Table 1, one difference between a personal conference call and a traditional conference call is that a personal conference call is attached to a specific user or device, whereas a traditional conference call is not attached to a specific user. Instead, a traditional conference call is attached to multiple users who are also participants in the call. By \u201cattached,\u201d it is meant that a user receives multiple audio streams. As illustrated in the second row of Table 1, another difference between a personal conference call and a traditional conference call is that in a personal conference call, none of the non-owner users are aware that they are in a conference call. In contrast, in a conventional conference, each user is aware of his or her presence and each additional user's presence in the conference call.","Although the second row of Table 1 illustrates that one aspect of a personal conference call may be that no users are aware of other users presence conference call, the subject matter described herein is not limited to call in which no users are aware of any other users. In an alternative implementation, some users may be aware of other users, as controlled by the conference owner.","As indicated in the third row of Table 1, another difference between a personal conference call and a traditional conference call is that in a personal conference call, audio streams are added only by action from a specific user. In a traditional conference, audio streams can be added by action from any participant who dials the conference number.","According to row four of Table 1, another difference between a personal conference call and a traditional conference call is that in a personal conference call, audio streams from other users are presented only to the conference owner, and in a traditional conference call, audio streams from non-owner users are presented to each non-owner user. Some traditional conferences allow selective muting of participants. However, in general, the goal of traditional conference calls is for users other than the initiator to be able to hear each other. In contrast, in a personal conference call, the goal is for the conference owner to hear non-owner users and for the non-owner users to hear the conference owner but not each other.","Although row four of Table 1 indicates that in a personal conference call, streams from other users are only presented to the conference owner, the subject matter described herein is not limited to such an embodiment. For example, audio streams from non-owner users may be presented to other non-owner users in a personal conference call where such presentation is selectively controlled by the conference owner.","As indicated in row five of Table 1, yet another difference between a personal conference call and a traditional conference call is that in a personal conference call, non-owner users hear audio only from the conference owner whereas in a traditional conference, non-owner users hear audio from each other.","Although row five in Table 1 indicates that in a personal conference call, non-owner users only hear audio from the conference owner, the subject matter described herein is not limited to such an implementation. For example, it an alternate implementation, the conference owner may selectively allow certain non-owner users to hear other non-owner users.","As indicated by row six of Table 1, yet another difference between a personal conference call and a traditional conference call is that in a personal conference call, only a conference owner can change the directionality and volume of an audio connection, whereas in a traditional conference, any participant who has moderator privileges can adjust the properties of a connection through floor control software. However, it should be noted that in a personal conference call, multiple users can control packets sent to them as owners without departing form the scope of the subject matter described herein.","Still another difference between a personal conference call and a traditional conference call is that in a personal conference call, an audio stream connected to the conference call is not a participant, whereas an audio stream connected to a traditional conference is a participant. In this context, a participant is someone who receives multiple audio streams.  is a schematic diagram illustrating the use of the personal conference call instance illustrated in  in more detail. In particular,  shows that audio stream  delivered to conference owner  is a mixture of packets from audio connections , , and . However, the outbound sides of audio connections , , and  represent only a fanned out version of the outbound side of media stream . An exemplary algorithm for mixing media streams and controlling features of the personal conference call instance will be described in detail below.","As described above, one aspect of the subject matter described herein is that the conference owner can selectively control the volume level of other users and the volume level of his or her own outbound media stream.  illustrates this concept. In , personal conference call instance  maintains a volume table  including data used by personal conference call instance  for adjusting volume levels for media packets received from users  and  and audio transmitter . Similarly, personal conference call instance  also maintains separate volume tables , , and  for individually adjusting the volume level of media packets delivered from conference owner  to users  and  and to audio transmitter .",{"@attributes":{"id":"p-0037","num":"0036"},"figref":["FIG. 5","FIG. 5"],"b":["500","502","500","200","204","206","208","210","502","200","204","206","208","210","202","502","502","7","323","7"]},"Soft bridge  and call agent  may be located on the same computing platform or on different computing platforms. In one exemplary implementation, soft bridge  is implemented on an Intel\u00ae server platform running a VxWorks\u00ae operating system and call agent  is implemented on a SUN\u00ae platform executing a Solaris\u00ae operating system. Soft bridge  and call agent  may communicate with each other via commands, referred to as simple device control protocol (SDCP) commands.","Exemplary SDCP commands that may be exchanged between soft bridge  and call agent  to establish and control features of a personal conference call include:\n\n","As stated above, in delivering multiple media streams to a conference owner, it is preferable that only the conference owner be able to adjust volume levels, since non-owner members may not be aware that other non-owner members are present or that a personal conference call is the mechanism used to deliver each media stream to a conference owner. Table 2 shown below illustrates and example of a volume table that may be maintained by each member of a personal conference with one owner and three non-owners.",{"@attributes":{"id":"p-0041","num":"0047"},"tables":{"@attributes":{"id":"TABLE-US-00002","num":"00002"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"center"}},"thead":{"row":{"entry":"TABLE 2"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}},{"entry":"Volume Table for Personal Conference"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"5"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"56pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"49pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"49pt","align":"left"}},{"@attributes":{"colname":"4","colwidth":"49pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"O1","M1","M2","M2"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"4","align":"center","rowsep":"1"}}]},{"entry":[{},"M1, +3 dB","O1, +2 dB","O1, \u22124 dB","O1, +5 dB"]},{"entry":[{},"M2, 0 dB","*M2, 0 dB","*M1, 0 dB","*M1, 0 dB"]},{"entry":[{},"M3, \u22121 dmB","*M3, 0 dB","*M3, 0 dB","*M2, 0 dB"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"4","align":"center","rowsep":"1"}}]}]}}]}}},"As illustrated in Table 2, each non-owner member (M-M) includes a zero dB volume adjustment for other non-owner members. In addition, the asterisks in Table 2 indicate that the volume adjustments are not modifiable by non-owner members. The entries without asterisks may be modifiable. For example, owner O can selectively modify the volumes of incoming media streams from members M-M and selectively modify O's outgoing volumes of media to M-M.","In the illustrated example, soft bridge  maintains personal conference call instance . Personal conference call instance  stores data about media connections , , , , and . In the illustrated example, personal conference call instance  stores a call table  which contains call IDs for each of the media connections and corresponding data structures for each call. The data structure for call A, which corresponds to the connection with conference owner , is shown as an example. In the illustrated example, per-call data structure  includes the IP address and port of conference owner  to which media packets should be sent. Volume levels for each call that is mixed and provided to conference owner  are also include in data structure . These volume levels are listed in data structure  as V, V, and V. Data structure  also includes a direction indicator for the call. The direction indicator indicates whether the call is send only, receive only, send and receive, or not send and not receive. In one implementation, the direction indicator may be used to selectively mute non-owner members in a personal conference. Table 3 shown below illustrates exemplary values that may be used for the direction indicator:",{"@attributes":{"id":"p-0044","num":"0050"},"tables":{"@attributes":{"id":"TABLE-US-00003","num":"00003"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"center"}},"thead":{"row":{"entry":"TABLE 3"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}},{"entry":"Values for Direction Indicator"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"4"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"21pt","align":"center"}},{"@attributes":{"colname":"2","colwidth":"70pt","align":"center"}},{"@attributes":{"colname":"3","colwidth":"98pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"Send","Receive","Direction"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"3","align":"center","rowsep":"1"}}]},{"entry":[{},"0","0","Soft bridge will not"]},{"entry":[{},{},{},"send or receive"]},{"entry":[{},{},{},"packets for this"]},{"entry":[{},{},{},"member"]},{"entry":[{},"0","1","Soft bridge will accept"]},{"entry":[{},{},{},"packets from this"]},{"entry":[{},{},{},"member for mixing"]},{"entry":[{},"1","0","Soft bridge will send"]},{"entry":[{},{},{},"mixed packets to this"]},{"entry":[{},{},{},"member"]},{"entry":[{},"1","1","Soft bridge will send"]},{"entry":[{},{},{},"mixed packets to this"]},{"entry":[{},{},{},"member and accept"]},{"entry":[{},{},{},"packets from this"]},{"entry":[{},{},{},"member for mixing"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"3","align":"center","rowsep":"1"}}]}]}}]}},"br":{}},"Call agent  includes phone instances  that store user contact and protocol information for contacting user terminals corresponding to call terminations , , , , and . Call agent  also includes protocol agents . Protocol agents  implement the protocol specified by phone instances  for performing call signaling to establish calls with each user terminal.","Although  illustrates soft bridge  and call agent  as being implemented on separate platforms, the subject matter described herein is not limited to such an implementation. In an alternate implementation, soft bridge  and call agent  may be implemented on a single hardware platform without departing from the scope of the subject matter described herein.",{"@attributes":{"id":"p-0047","num":"0053"},"figref":["FIG. 6","FIG. 6"],"b":["600","602","508","502","202","202"]},"In an alternate implementation, the personal conference call may be established by having call agent  dial the directory number of each user that is to be connected to the personal conference call. In such an implementation, protocol agents  may perform signaling functions for connecting each user to personal conference call instance . The signaling messages may include a calling party number corresponding to conference owner  so that any user with caller ID capabilities will think that the call is from conference owner , rather than conference call instance . Call agent  may instruct personal conference call instance  to add each participant to the conference call using the appropriate SDCP commands.","In step , media packets from the second users are mixed and sent to the owner via the first media connection. In step , media packets from the owner or first user are sent to the second users via the second media connections. In step , the personal conference call instance is controlled dynamically. For example, the conference owner may dynamically control volume, directionality, or muting of any of the media connections. Dynamically controlling an aspect of the personal conference call instance may include having the owner send a command to call agent  via any suitable means. For example, the owner may send a command via the owner's handset or via a computer terminal separate from the owner's handset to adjust the volume of one of the media connections associated with the personal conference call instance. In an implementation in which the owner uses his or her handset to dynamically control a feature of the conference, two methods for controlling the features may be provided\u2014one using star codes and the other using other buttons on the owner's handset. Each of these control examples will now be described in detail.","In an implementation in which the owner uses star codes, the owner may identify the non-owner user whose audio stream is being modified using an identification number corresponding to the non-owner user. Each non-owner user may be given an identifier in the conference such that the owner can reference the audio stream to or from that user for feature invocation. Once the particular audio stream is selected, call agent  may be programmed to recognize star codes so that the owner can change the directionality of the media stream, modify the volume of the media stream, or mute the media stream. Using star codes will allow the conference owner to control features of the personal conference call using any type of phone. However, such an implementation requires that the user remember the star codes in order to modify the calls.","In an implementation that uses other phone buttons to dynamically control personal conference call features, the phone may include an LCD screen that displays indicators of each of the multiple calls that make up the personal conference call. The LCD screen may also include a menu of buttons for accessing each call. Once a call is selected, the owner has the option of using star codes to modify call properties using keys to navigate menus to control each call. For example, once a call is selected, the LCD screen may allow a user to dynamically adjust the volume level of a call using arrow keys provided on the keypad.","In an implementation in which a computer terminal separate from the conference owner's phone is used to control features of a personal conference call, the computer terminal may include a command line interface or a GUI interface that allows the owner to select and control individual conference features. In one example, a GUI interface may provide information relating to calls connected to the personal conference call instance. The information may be published to the computer terminal on which the GUI interface is running using application programming interface (API) commands. The owner can modify call properties by selecting one of the calls and a required action. The selection may be performed using a keyboard, mouse, or other input device connected to the computer terminal. The request will be translated into an API command and transmitted to the call agent.","In response to receiving a feature control command from conference owner , call agent  may send the appropriate SDCP command to soft bridge . Soft bridge  may adjust the appropriate value in the per-conference call data table  and adjust the volume level on the corresponding RTP media stream.",{"@attributes":{"id":"p-0054","num":"0060"},"figref":["FIG. 7","FIG. 7"],"b":["700","702"]},"In step , the adjusted volume is determined for each member. As illustrated in , personal conference call instance  may maintain separate volume tables containing volume adjustment levels in decibels for each connection. The adjusted volume may be determined by computing the average energy of each received packet and multiplying the average energy times the volume adjustment level.","In step , for each time slice and for each conference owner that is flagged for packet reception, a list of members to mix is determined based on the adjusted volume. This step may include, for each conference member from which the conference is receiving packets:\n\n","In step , packets are mixed and sent to the conference owner or owners. In order to mix the packets to each owner, the following steps may be performed:\n\n","In step , mixed owner packets are sent to the non-owners that are flagged for reception. This step may be accomplished as follows:\n\n","In the last \u201cIf\u201d statement in the above-referenced algorithm, mixed packets are sent to other members who are also owners. This statement allows a personal conference to have multiple owners who receive mixed packets from non-owner members.","According to another aspect, the subject matter described herein may include pre-storing volume adjustment levels for different speech compression algorithms. For example, in one implementation, soft bridge  may not include a digital signal processor (DSP) for converting volume adjustments between different voice compression algorithms, such as G.711 \u03bcto pulse code modulation (PCM). Instead, soft bridge  may include a general-purpose microprocessor that performs volume adjustment as well as other personal conference functions. Since converting volume adjustments between different voice compression standards can involve floating point mathematics, it is desirable to reduce the number of these calculations that must be performed by the microprocessor of soft bridge . Accordingly, in one implementation of the subject matter described herein, volume adjustment tables may be precomputed and stored in memory of soft bridge .",{"@attributes":{"id":"p-0061","num":"0088"},"figref":["FIG. 8","FIG. 8","FIG. 9","FIG. 9"],"b":["800","900","900","256"]},"Returning to , in step , PCM values are computed and stored in array elements corresponding to each G.711 value and volume adjustment level. For example, for G.711 value of 4, PCM values may be computed for volume adjustments ranging from \u221210 dB to 10 dB. The computed PCM values may be stored in the appropriate elements of array . This process is repeated for each G.711 value and volume adjustment level.","In step , at run time, in order to determine an adjusted PCM volume level, the G.711 value and the volume adjustment are used to extract the PCM value from array . For example, if the G.711 value is eight and it is desirable to adjust the element by +3 dB, then array  will be accessed at array element [\u2212128][13] to extract the appropriate PCM value. By precomputing and storing volume adjustment levels, the subject matter described herein allows dynamic volume adjustment without requiring dedicated DSP resources to perform the volume adjustment.","According to another aspect, the subject matter described herein includes mirroring a personal conference call from a master soft bridge to a slave soft bridge so that the personal conference can be switched over without dropping calls and with minimal delay.  is a flow chart illustrating an exemplary process for mirroring a personal conference call to n slave soft bridges where n is an integer of at least one, and switching to one of the n slaves soft bridge in response to failure of the master soft bridge according to an embodiment of the subject matter described herein. Referring to , in step , master and slave soft bridges reachable by the same virtual IP address are maintained. In step , for each connection added to a personal conference call instance, a mirror connection is added to the slave soft bridge. In one exemplary implementation, connections may be added using commands transmitted from the call agent to the master and slave soft bridges.",{"@attributes":{"id":"p-0065","num":"0092"},"figref":["FIG. 11","FIG. 11"],"b":["1","2"]},"In line  of the message flow diagram, the call agent sends an add mirror command to the slave soft bridge to instruct the slave soft bridge to add a connection corresponding to the IP address, port, and call ID specified in the SB add command in line . In response to this request, the slave soft bridge preferably reserves resources for processing the call but does not send or receive any media streams relating to the call. In line  of the message flow diagram, the slave soft bridge acknowledges the soft bridge add mirror acknowledgement command. In lines  and  of the message flow diagram, the call agent sends a modify command to the master and slave soft bridges. The modify command includes the virtual IP address of the master and slave soft bridges, the conference ID, the call ID of the call being modified, the feature being modified, and the setting. The modify command is sent to both soft bridges so that the features of the personal conference instance on the slave soft bridge will be synchronized with those of the personal conference instance of the master soft bridge.","Returning to , in steps  and , the master soft bridge is monitored for a failure. Such monitoring may be accomplished in any suitable manner, such as periodically requesting operational status from the master soft bridge or having the master soft bridge periodically send heartbeat messages to the slave soft bridge. If no failure is detected, the monitoring continues.","However, if a failure is detected, control proceeds to step  where the slave soft bridge broadcasts a gratuitous address resolution protocol (ARP) message to intermediate switches and routers to direct the media streams to the slave soft bridge. The gratuitous ARP message will update intermediate switches and routers to start sending media packets to the slave soft bridge on the port on which the gratuitous ARP message was received. In step , the slave soft bridge begins mixing and sending media packets. Thus, by maintaining a mirror soft bridge and switching to the mirror soft bridge in response to failure of the master soft bridge, personal conference can be maintained without dropping calls.","The subject matter described herein is not limited to mirroring a personal conference. For example, the methods illustrated in  may be used to mirror any type of multi-party communication, including ad-hoc conferences where all participants are aware of each other.","It will be understood that various details of the invention may be changed without departing from the scope of the invention. Furthermore, the foregoing description is for the purpose of illustration only, and not for the purpose of limitation, as the invention is defined by the claims as set forth hereinafter."],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"BRIEF DESCRIPTION OF THE DRAWINGS","p":["Preferred embodiments of the subject matter described herein will now be explained with reference to the accompanying drawings of which:",{"@attributes":{"id":"p-0010","num":"0009"},"figref":"FIG. 1"},{"@attributes":{"id":"p-0011","num":"0010"},"figref":"FIG. 2"},{"@attributes":{"id":"p-0012","num":"0011"},"figref":"FIG. 3"},{"@attributes":{"id":"p-0013","num":"0012"},"figref":"FIG. 4"},{"@attributes":{"id":"p-0014","num":"0013"},"figref":"FIG. 5"},{"@attributes":{"id":"p-0015","num":"0014"},"figref":"FIG. 6"},{"@attributes":{"id":"p-0016","num":"0015"},"figref":"FIG. 7"},{"@attributes":{"id":"p-0017","num":"0016"},"figref":"FIG. 8"},{"@attributes":{"id":"p-0018","num":"0017"},"figref":["FIG. 9","FIG. 8"]},{"@attributes":{"id":"p-0019","num":"0018"},"figref":"FIG. 10"},{"@attributes":{"id":"p-0020","num":"0019"},"figref":"FIG. 11"}]},"DETDESC":[{},{}]}
