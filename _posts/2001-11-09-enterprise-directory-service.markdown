---
title: Enterprise directory service
abstract: An apparatus and method provides directory service to software applications throughout an enterprise. Directory entries are kept in a data store. A web server having one or more API's is coupled to the data store. The web server may have an API locator for selecting an appropriate API. An enterprise software application such as a purchasing or accounts payable transaction requests directory information by sending a query to an appropriate wrapper based on the programming language, protocol or format of the application. The wrapper sends the request to the appropriate API which then sends a request to the data store. A directory entry is received and returned to the enterprise.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08387074&OS=08387074&RS=08387074
owner: International Business Machines Corporation
number: 08387074
owner_city: Armonk
owner_country: US
publication_date: 20011109
---

{"@attributes":{"id":"description"},"BRFSUM":[{},{}],"heading":["TECHNICAL FIELD","BACKGROUND OF THE INVENTION","OBJECTS AND SUMMARY OF THE INVENTION","BEST MODE FOR CARRYING OUT THE INVENTION"],"p":["The invention relates to apparatus and methods for providing directory service to user applications. In particular the invention relates to use of a web server having an API (application programming interface) coupled to a data store of directory entries and a wrapper for accepting queries from a user application.","Computer programs for looking up names in a directory are used throughout businesses, organizations, and even by the general public such as looking up a person's telephone number using a search engine on the World Wide Web. Initially programs required that a person's name be spelled correctly in order for a search to be successful. However, various improvements have been developed to provide an improved and less strict capability.","Richard H. Boivie in U.S. Pat. No. 4,453,217 describes a spelling correction arrangement for finding the name in the directory that most closely resembles the name requested by the user. Assuming the desired name is in a directory, three possibilities one correct and two in error are recursively investigated. A count is kept of the number of errors for each possibility. Those with a higher number of errors than an earlier encountered possibility with a lower number of errors, are discarded leading eventually to the closest matching name. The user may also request any number of additional close names.","Garland et al. in U.S. Pat. No. 5,600,835 describe a method of performing a \u201cfuzzy\u201d search for a text string in a stored document. A dissimilarity value is generated for selected text strings from the document based on rules defining differences from a text string query and a weighting value indicating the relative importance of the rule. The selected text strings may then be displayed in order based on their dissimilarity values. The user chooses the correct string and the weighting values are accordingly adjusted based on the user choice.","Marti A. Hearst in U.S. Pat. No. 6,223,145 B1 describes a user interface for creating a search query for documents. The invention uses a cone tree generation method and a category hierarchy. There is a two way interaction with the user with the method suggesting related categories which may be unfamiliar to the user. A search query is generated based on user interaction with a display of suggested categories.","Another type of directory lookup searches for an e-mail address for a particular name. If a person wishes to receive e-mail messages from senders without revealing his\/her email address, a directory service as described by Lee et al. in U.S. Pat. No. 5,742,769 may be used. The directory service has a database of records of user's e-mail addresses. When a request to send an e-mail to a user is received, the service determines whether or not the user's e-mail address is to be displayed. If not, the service sends the message to the intended recipient without providing the recipient's e-mail address to the requester.","Edward Waskiewicz in U.S. Pat. No. 5,822,526 describes an email directory using proxy addresses associated with e-mail addresses to facilitate the transfer from one e-mail system to another across a gateway.","Kevin Marcus in U.S. Pat. No. 6,230,188 B1 describes another method of protecting the privacy of a person's e-mail address. When a request is received for a person's email address, a proxy address is displayed in lieu of the person's actual email address. The sender is then enabled to send an email message to the party without knowing the person's actual email address.","Polnerow et al. in U.S. Pat. No. 5,813,006 describe a method and system of directory service which permits users to retrieve records without authenticating the requesting user. However, if the user wishes to modify a record, such as to update or correct his own listing, then the user can register with the service and upon authentication is permitted to access the user's own record to modify the information that is already present.","Pinard et al. in U.S. Pat. No. 6,075,851 describe a method of routing calls based on a relationship or organization roles. Relationships of organizational roles are stored in a database including names and directory numbers of persons filling said roles and alternative numbers of temporary persons associated with the roles. In response to a request to complete a call to a directory number associated with a role, the call is processed to an alternate directory number instead of the requested directory number.","In an article titled \u201cVoice Recognition Workstation Phone System,\u201d published in the IBM Technical Disclosure Bulletin of March 1994, pages 479-80 there is described a system for directory lookup combining voice recognition techniques with a language translation program. The system is therefore able to respond to spoken requests and spoken commands.","Within a business enterprise, in addition to user's needs to query a directory as described above, there are many software applications running either in real time or periodically which need some of the same directory type of information as is provided by the user query system. None of the above-described developments address the unique challenges presented by such needs. In accordance with the teachings of the present invention, there is defined a new enterprise directory service which provides a capability for satisfying such needs. It is believed that this invention constitutes a significant advancement in the directory service art.","It is therefore, a principal object of the present invention to enhance the directory service art by providing a system with enhanced capabilities.","It is another object to provide a system wherein enhanced operational capabilities are possible.","It is a further object to provide a method of providing enhanced directory service to a user application.","These and other objects are attained in accordance with one embodiment of the invention wherein there is provided an enterprise directory service apparatus, comprising, a data store having a plurality of directory entries, a web server having an API coupled to the data store, for sending a query to the data store and receiving a directory entry, and a wrapper coupled to the API for accepting the query from a user application.","In accordance with another embodiment of the invention there is provided a method of providing directory service to a user application, the method comprising the steps of, providing a data store having a plurality of directory entries, providing a web server having an API coupled to the data store and a wrapper coupled to the API, receiving at the wrapper a query from a user application, and in response thereto sending the query from the wrapper to the API and thereafter to the data store, and receiving at the API a directory entry from the data store in response to the query, and sending the directory entry to the user application.","In accordance with yet another embodiment of the invention there is provided a computer program product for instructing a processor to provide enterprise directory service, the computer program product comprising, a computer recordable medium, first program instruction means for providing a data store having a plurality of directory entries, second program instruction means for providing a web server having an API coupled to the data store and a wrapper coupled to the API, third program instruction means for receiving at the wrapper a query from a user application, and in response thereto sending the query from the wrapper to the API and thereafter to the data store, and fourth program instruction means for receiving at the API a directory entry from the data store in response to the query, and sending the directory entry to the user application, and wherein all the program instruction means are recorded on the medium.","For a better understanding of the present invention, together with other and further objects, advantages, and capabilities thereof, reference is made to the following disclosure and the appended claims in connection with the above-described drawings.","In  there is shown an enterprise service apparatus. Data store  has a plurality of directory entries. The data store  may be any type of recordable media including but not limited to DASD (direct access storage device), floppy disk, CD ROM, DVD, semiconductor memory, or magnetic tape along with a drive or other apparatus for accessing data in the directory entries. The data store may be either rewritable media, or read-only. If read-only then the directory entries have to be placed on the media by some process other than use of the drive or apparatus used for access. The directory entries on data store  may be stored in a relational database such as DB2\u00ae (DB2 is a trademark of IBM Corp.). The entries may also be stored using the LDAP (Lightweight Directory Access Protocol) standard. LDAP as used herein is defined by RFC1777 March 1995 of the IETF (Internet Engineering Task Force).","Data store  is coupled bidirectionally with couplings  and  to a web server . Any type of processor or group of processors with appropriate software may be used for web server . An API (application programming interface)  and API Locator  are software shown as residing on web server . API  may also reside on a different web server (not shown). Data store  may also reside on web server  in which case couplings  and  represent internal data buses within web server . If data store  is located remotely, couplings  and  may be any interconnect hardware and protocol known in the art for connecting a remote data store to a web server processor such as a network, dial up, satellite, wireless. Data store  may also be distributed across multiple interconnected locations including distribution across various sites within an enterprise.","In operation, API  receives a query directed by API locator  over path  and in response sends a query to data store  over coupling . A directory entry is received in response over coupling .","Web server  is coupled to wrapper  which is adapted to interface with user application  over paths  and . A wrapper as used herein shall be taken to mean software code which takes lower level information and makes it usable at a higher level. A wrapper may be a Java class. For example if user application  is a Java program or applet then wrapper  is adapted to handle Java language protocols and standards.","User application  may be any software application having a need for directory data such as directory entries on data store . For example, user application  may be an enterprise software application such as purchasing processing or an accounts payable transaction software application. User application  may be running on any compatible processor including running on web server . If user application  is running on a processor different from web server , then wrapper  may also be running on this different processor. A query is sent across path  to wrapper . The directory entry response may be routed from API  back through API locator , wrapper , and across return path . However, either API locator , or wrapper  or both may be bypassed such as shown with return path .","Paths , , and  are all data paths between user application  and wrapper  or API . Understandably, if all applications are running on the same processor, then paths , , and  are interapplication data paths. Numerous techniques are known to provide such data paths. In the case where user application  or wrapper  are running on different processors than API , then data connectivity hardware and software is used in implementing paths , , and  in a manner similar to couplings  and  described earlier.","In  there is shown another embodiment of the present invention having API   and API   running on web server . Data store  is accessed by both API  and API  using couplings  and . A query from user application   or user application   is sent over path  or  respectively to wrapper   or wrapper   respectively. For example user application  may be a Java based application and user application  may be a LOTUS SCRIPT\u00ae (LOTUS SCRIPT is a registered trademark of Lotus Development Corporation) based application. Wrapper  may be written to interface to Java applications and wrapper  written to interface to LOTUS SCRIPT\u00ae application. Other wrappers may interface to user applications specific to other programming languages such as the REXX programming language or the \u201cC\u201d programming language or other programming languages. API locator  accepts the query from wrapper  or wrapper , may perform some formatting, protocol, or programming language conversions, and locates the proper API, in this case either API  or API , to process the query. As in , API , or API  or both may be running on a web server different than web server  (not shown). The query is sent to data store  and a directory entry is received. The directory entry may then be sent to the requesting user application back through path , API locator , and the appropriate wrapper. Alternatively the appropriate API may bypass this string and send the directory entry directly e.g. over a path such as  shown in .","Data store  in  may also serve a conventional directory application . User  at workstation  requests a directory lookup using directory application  which, after some processing sends the lookup request on coupling  and receives a directory entry on coupling . The directory entry is presented to user  for example as text on a visual display of workstation .","An advantage of the present invention using wrappers is that a change in the structure or format of data store  can be easily made without affecting user applications , , or . However, conventional directory application  would require appropriate code changes to accommodate a change in data store .","In  there is shown a flowchart  of steps comprising an embodiment of the present invention. In step  a data store having directory entries as explained above is provided. In step  a web server is provided having at least one API and at least one wrapper as defined above is also provided.","The wrapper may be running on the same web server as the API, or it may be running on another server interconnected therewith.","In step  a query for directory information is received at the wrapper from a software application. The software application may be running on any processor capable of sending a query to the wrapper including the web server provided in step .","In step  the wrapper sends the query on to the API which then sends it on to the data store provided in step . If more than one API are present on the web server, then an API locator receives the query from the wrapper and determines which API to send it to based on the formats, protocols, or programming languages used by the query. Both the wrapper and the API may process the query by altering its format, protocol, or programming language in order to facilitate the required interoperability. The API locator may designate the appropriate API using a uniform resource locator (URL) address.","In step  a directory entry is received from the data store and sent by the API to the user application either directly or indirectly such as back through the wrapper.","While there have been shown and described what are at present considered the preferred embodiments of the invention, it will be obvious to those skilled in the art that various changes and modifications may be made therein without departing from the scope of the invention as defined by the appended claims."],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"BRIEF DESCRIPTION OF THE DRAWINGS","p":[{"@attributes":{"id":"p-0020","num":"0019"},"figref":"FIG. 1"},{"@attributes":{"id":"p-0021","num":"0020"},"figref":"FIG. 2"},{"@attributes":{"id":"p-0022","num":"0021"},"figref":"FIG. 3"}]},"DETDESC":[{},{}]}
