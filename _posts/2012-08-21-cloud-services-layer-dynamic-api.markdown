---
title: Cloud services layer dynamic API
abstract: A network device receives a first file having a service-specific Application Programming Interface (API) definition for a first cloud service, and loads the service-specific API definition for the first cloud service into a Cloud Services Layer (CSL) API. The network device receives a service request involving the first cloud service, and handles, at the CSL API, the service request using the service-specific API definition for the first cloud service.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09098346&OS=09098346&RS=09098346
owner: Verizon Patent and Licensing Inc.
number: 09098346
owner_city: Basking Ridge
owner_country: US
publication_date: 20120821
---

{"@attributes":{"id":"description"},"BRFSUM":[{},{}],"heading":["BACKGROUND","DETAILED DESCRIPTION OF THE PREFERRED EMBODIMENTS"],"p":["Cloud storage includes networked on-line storage where multiple virtual servers are used to store data. Operators of physical data centers virtualize their data storage resources and expose those virtualized resources to cloud storage customers as storage pools. The physical data centers may span multiple servers across multiple regions in the Internet. Cloud services involve the delivery of computing and storage capacity as services to multiple end users. For example, cloud services may include the provision of application software and\/or databases as services to the end users. End users may access the cloud-based applications or databases through a web browser or a mobile application.","The following detailed description refers to the accompanying drawings. The same reference numbers in different drawings may identify the same or similar elements. The following detailed description does not limit the invention which is defined by the claims.",{"@attributes":{"id":"p-0015","num":"0014"},"figref":"FIG. 1A","b":["100","100","105","1","105","120","115","130","135","140","105","1","105","105","130","115","120"],"i":["n ","n "]},"A respective user - through -(generically referred to herein as \u201cuser \u201d) of cloud services may be associated with each client - through -. For example, user - may be associated with (e.g., may use) client -, etc. Each of clients - through -may include, for example, a telephone (e.g., smart phone): a laptop, desktop, palmtop or tablet computer, a personal digital assistant (PDA); or other type of digital computing device that may communicate with CSL server  and\/or cloud services  via network .","Network  may include one or more networks of various types. For example, network  may include a cable network (e.g., an optical cable network), a wireless satellite network, a wireless public land mobile network (PLMN) (e.g., a Code Division Multiple Access (CDMA) 2000 PLMN, a Global System for Mobile Communications (GSM) PLMN, a Long Term Evolution (LTE) PLMN and\/or other types of PLMNs), a telecommunications network (e.g., a Public Switched Telephone Network (PSTN)), a local area network (LAN), a wide area network (WAN), a metropolitan area network (MAN), an intranet, and\/or the Internet.","Cloud services  may include multiple cloud services - through -(with x being any integer greater than or equal to one). Each of cloud services - through -may include a cloud-based application or a cloud-based database that users - through -may access via respective clients - through -and CSL server . Each of cloud services  may be implemented in hardware, software, or a combination of hardware and software in a single device, or by multiple different devices (e.g., network devices, servers, etc.).","CSL server  may include one or more servers, computing devices, or network devices that control access to cloud services . CSL server  may receive service requests from clients - through -, and may process those requests to create job submissions that may be serviced by one or more of cloud services - through -","Identity MGT DB  may include a data structure (e.g., a database) that stores information related to the identities of users - through -and may include functionality for restricting access and control to cloud services  by users - through -. Job CTRL DB  may include a data structure (e.g., a database) that stores information related to job submissions that are based on service requests received from clients - through -","The configuration of network components of network environment  illustrated in  is for illustrative purposes. Other configurations may be implemented. Therefore, network environment  may include additional, fewer and\/or different components than those depicted in .",{"@attributes":{"id":"p-0022","num":"0021"},"figref":["FIG. 1B","FIG. 1B"],"b":["105","1","105","115","145","1","145","130","105","150","130","130","155","125","1","125","105","130","105","1","105","115","105"],"i":["n ","n","x ","n"]},{"@attributes":{"id":"p-0023","num":"0022"},"figref":["FIG. 2","FIG. 2"],"b":["130","105","1","105","130","205","1","205","205","205","1","205","135","140","205","135","140"],"i":["n","x ","x "]},{"@attributes":{"id":"p-0024","num":"0023"},"figref":"FIG. 3","b":["125","1","125","115","125","1","305","1","305","310","1","310","305","1","305","310","1","310"],"i":["x ","y ","p ","y ","p "]},"As further shown, cloud services -may include one or more service controllers - through -(with y being any integer greater than or equal to one), and one or more service nodes - through -(with q being any integer greater than or equal to one). Each of service controllers - through -may include a controller entity that controls the execution of a respective cloud service at one or more cloud service nodes that implement that cloud service. Each of service nodes - through -may execute a specific cloud service that may include a cloud-based application or a cloud-based database.",{"@attributes":{"id":"p-0026","num":"0025"},"figref":["FIG. 4","FIGS. 5 and 6","FIGS. 5 and 6"],"b":["105","400","1","400","400","405","1","405","405","410","415","400","410","415","205","1","205","205","1","205","420","305","1","305","315","1","315","420","205","1","205","305","1","305","315","1","315","420"],"i":["n ","n ","x","x","y ","m","x ","y ","m"]},{"@attributes":{"id":"p-0027","num":"0026"},"figref":"FIG. 5","b":["415","415","415","505","505","505","505","505","415","135","110","110","115"]},"CSL API  may use instructions contained in the API definition of service specific API definition file  for packaging the request into a CSL layer packet format  as a job submission . API definition file  may, for example, include an Extensible Markup Language (XML) Schema Document (XSD) file. The XSD file may be used to express a set of rules to which a service request must conform. Other types of API definition files may alternatively be used.","CSL API  may submit job submission  for job control  such that the requested services can be executed by cloud services. Job control  may be implemented by one or more of job controllers - through -and, as described with respect to , may include various aspects of job processing, including job creation, job fetching, job orchestration, service controller determination, and handling of service execution results.",{"@attributes":{"id":"p-0030","num":"0029"},"figref":["FIG. 6","FIG. 5"],"b":["520","520","205","510","415","610","510","510","1","510","2","415","610","610","140"]},"Job fetching  may include job controller  invoking a job by retrieving the job, including all of the sub-jobs, from storage in job CTRL DB . Job orchestration  may include job controller  identifying each sub-job of the job and determining a sequential order for the execution of each sub-job, such as, for example, executing the sub-jobs in sequence, or executing at least some of the sub-jobs in parallel and possibly others of the sub-jobs in sequence. Based on job orchestration , job controller  may perform service controller determination  to identify which service controller \/ to which each sub-job is to be sent for cloud service execution. Based on service controller determination , job controller  may send each sub-job to a determined service controller \/ which, in turn, may determine a cloud service node \/ for execution of the cloud service required by the sub-job. After execution of the cloud service by the determined cloud service node \/, service controller \/ may return the results of the cloud service execution for the sub-job to job controller . Job controller  may accumulate the results of the cloud service execution for all of the sub-jobs of the job. The accumulated results of the cloud service execution may be returned to CSL API  for further delivery to the requesting user  via network .",{"@attributes":{"id":"p-0032","num":"0031"},"figref":"FIG. 7","b":["700","700","105","1","105","130","135","140","305","1","305","315","1","315","310","1","310","320","1","320","125","1","125"],"i":["n","v ","m","p ","q","x. "]},"Device  may include a bus , a processing unit , a main memory , a read only memory (ROM) , a storage device , an input device(s) , an output device(s) , and a communication interface(s) . Bus  may include a path that permits communication among the elements of device .","Processing unit  may include one or more processors or microprocessors, or processing logic, which may interpret and execute instructions. Main memory  may include a random access memory (RAM) or another type of dynamic storage device that may store information and instructions for execution by processing unit . ROM  may include a ROM device or another type of static storage device that may store static information and instructions for use by processing unit . Storage device  may include a magnetic and\/or optical recording medium. The process\/methods set forth herein can be implemented as instructions that are stored in main memory , ROM  and\/or storage device  for execution by processing unit .","Input device  may include one or more mechanisms that permit an operator to input information to device , such as, for example, a keypad or a keyboard, a display with a touch sensitive panel, voice recognition and\/or biometric mechanisms, etc. Output device  may include one or more mechanisms that output information to the operator, including a display, a speaker, etc. Communication interface(s)  may include a transceiver that enables device  to communicate with other devices and\/or systems. For example, communication interface(s)  may include wired or wireless transceivers for communicating via network .","The configuration of components of device  illustrated in  is for illustrative purposes. Other configurations may be implemented. Therefore, device  may include additional, fewer and\/or different components than those depicted in .",{"@attributes":{"id":"p-0037","num":"0036"},"figref":["FIG. 8","FIG. 8","FIG. 8","FIG. 9"],"b":"130"},"The exemplary process may include receiving a file with a service-specific API definition for a service z (block ). A user  at a client  may create an API definition file  such as, for example, an XSD file. The XSD file may be used to express a set of rules to which a service request for service z must conform. Other types of API definition files may alternatively be used.  depicts user  engaging in API definition file creation  to create service specific API definition file . Alternatively, an administrator of CSL server  may engage in API definition file creation .","CSL server  may load the service z API definition into CSL API  and into the service controller(s) for service z (block ).  depicts API definition file being loaded  into CSL API  and being loaded  into an appropriate service controller \/ for service z. CSL API  and service controller \/ may subsequently use the service specific API definition file for handling service requests, and the jobs generated based on the service requests, for service z. CSL server  may advertise service-related objects exposed on CSL API  based on the service specific API definition for service z (block ). CSL server  may advertise objects related to service z on CSL API  using instructions contained in the service specific API definition file for service z.","The exemplary process of  may be repeated for each service specific API definition for a cloud service of cloud services - through -. Therefore, for each cloud service of cloud services - through -, a service specific API definition for that cloud service may be received and loaded into CSL API . The exemplary process of  may also be used to load a revised API definition for a given cloud service. For example, a first service specific API definition file may be received and loaded into CSL API, and a subsequent revised version of the API definition file, that contains changes to the service specific API definition, may be received and loaded into CSL API  in place of the previous version. The exemplary process of  may, therefore, be used to maintain a dynamic CSL API, where service specific API definitions may be added to the CSL API as new cloud services are made available and where API definitions for existing cloud services may be revised and\/or updated.",{"@attributes":{"id":"p-0041","num":"0040"},"figref":["FIG. 10","FIG. 10","FIG. 10","FIGS. 11 and 12"],"b":["130","125","1","125"],"i":"x"},"The exemplary process may include receiving a new service request (block ). A user  at a client  may generate a new request for a cloud service, using UI , and may submit the request to CSL server  via network . The messaging diagram of  depicts client  sending a service request  to CSL API  of CSL server ","CSL API  may package the service request into a CSL formatted job submission based on a service-specific API definition and may deliver the job submission to a job controller  (block ). CSL API  may package the service request into a CSL job submission as described above with respect to .  depicts CSL API  sending a submission  for Job A to job controller .","Job controller  may create a new job in job control DB  (block ). Job controller  may generate a new job that corresponds to the service(s) requested by the job submission. Generating the job may include identifying sub-jobs that are components of the job that may involve the execution of multiple cloud services. For example, Job A may include sub-jobs A-1 and A-2, where sub-job A-1 involves the execution of cloud service 1 and sub-job A-2 involves the execution of cloud service 2. Job controller  may create a unique identifier for each job and store each job, including the sub-jobs, in job CTRL DB .  depicts job controller  storing  Job A in job CTRL DB , and returning a confirmation message  to CSL API  confirming the creation of a new job that corresponds to the received service request. In turn, as further shown in , CSL API  may return a confirmation message  to client  confirming the creation of the new job that corresponds to the service request  sent by client .","Job controller  may fetch the new job from job CTRL DB  (block ). Job fetching may include job controller  invoking a job by retrieving the job, including all of the job's sub-jobs, from storage in job CTRL DB .  depicts job controller  retrieving Job A from job CTRL DB  via a message .","Job controller  may orchestrate the sub-jobs of the new job (block ). Orchestration may include job controller  identifying each sub-job of the new job and determining a sequence of execution of each sub-job such as executing the sub-jobs in sequence, or executing at least some of the sub-jobs in parallel and possibly others of the sub-jobs in sequence.","Job controller  may determine the service controller for each sub-job of the job submission (block ). Based on the job orchestration of block , job controller  may identify which service controller \/ to which each sub-job of the job is to be sent for cloud service execution. Job controller  may deliver each sub-job to its corresponding service controller determined in block  (block ). In the example depicted in , Job A consists of n sub-jobs (i.e., sub-job A-1, sub-job A-2, . . . sub-job A-n). As further shown in , job controller  sends a job invocation message  for sub-job A-1 to service controller - and service controller - may return a job confirmation message  confirming the receipt of sub-job A-1.  depicts job controller  sending a subsequent job invocation message  for sub-job A-n to service controller -, and service controller - returning a confirmation message  for sub-job A-n.","Each service controller may deliver a received sub-job to a service node for service execution (block ). Each service controller \/ receiving a sub-job from job controller  may determine a cloud service node \/ for execution of the cloud service required by the sub-job, and may then deliver the sub-job to the determined cloud service node \/.  depicts service controller - sending sub-job A-1  to cloud service node -, and service controller - sending sub-job A-n  to cloud service node -.","Job controller  may receive the result(s) of the service execution for each sub-job(s) from each service controller (block ). After execution of the cloud service(s) by the determined cloud service node(s) \/, service controller \/ may return the results of the cloud service execution for the sub-jobs to job controller . Job controller  may accumulate the results of the cloud service execution for all of the sub-jobs of the job.  depicts service node -, after execution of a cloud service, returning a result  for sub-job A-1 to service controller -, and, in turn, service controller - may return a result  of the sub-job A-1 to job controller .  further depicts service node -, after execution of a cloud service, returning a result  for sub-job A-2 to service controller -, and, in turn, service controller - may return a result  of the sub-job A-2 to job controller . Job controller  may return the accumulated result(s)s of the cloud service execution to CSL API  for further delivery to the requesting user  via network .","The exemplary process of  may be repeated for each service request received at CSL server  from clients - through -","The foregoing description of implementations provides illustration and description, but is not intended to be exhaustive or to limit the invention to the precise form disclosed. Modifications and variations are possible in light of the above teachings or may be acquired from practice of the invention. For example, while series of blocks have been described with respect to , the order of the blocks may be varied in other implementations. Moreover, non-dependent blocks may be performed in parallel.","Certain features described above may be implemented as \u201clogic\u201d or a \u201cunit\u201d that performs one or more functions. This logic or unit may include hardware, such as one or more processors, microprocessors, application specific integrated circuits, or field programmable gate arrays, software, or a combination of hardware and software.","No element, act, or instruction used in the description of the present application should be construed as critical or essential to the invention unless explicitly described as such. Also, as used herein, the article \u201ca\u201d is intended to include one or more items. Further, the phrase \u201cbased on\u201d is intended to mean \u201cbased, at least in part, on\u201d unless explicitly stated otherwise.","In the preceding specification, various preferred embodiments have been described with reference to the accompanying drawings. It will, however, be evident that various modifications and changes may be made thereto, and additional embodiments may be implemented, without departing from the broader scope of the invention as set forth in the claims that follow. The specification and drawings are accordingly to be regarded in an illustrative rather than restrictive sense."],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"BRIEF DESCRIPTION OF THE DRAWINGS","p":[{"@attributes":{"id":"p-0003","num":"0002"},"figref":"FIGS. 1A and 1B"},{"@attributes":{"id":"p-0004","num":"0003"},"figref":["FIG. 2","FIGS. 1A and 1B"]},{"@attributes":{"id":"p-0005","num":"0004"},"figref":["FIG. 3","FIGS. 1A and 1B"]},{"@attributes":{"id":"p-0006","num":"0005"},"figref":"FIG. 4"},{"@attributes":{"id":"p-0007","num":"0006"},"figref":["FIG. 5","FIG. 4"]},{"@attributes":{"id":"p-0008","num":"0007"},"figref":["FIG. 6","FIG. 5"]},{"@attributes":{"id":"p-0009","num":"0008"},"figref":["FIG. 7","FIGS. 1A and 1B"]},{"@attributes":{"id":"p-0010","num":"0009"},"figref":"FIG. 8"},{"@attributes":{"id":"p-0011","num":"0010"},"figref":["FIG. 9","FIG. 8"]},{"@attributes":{"id":"p-0012","num":"0011"},"figref":"FIG. 10"},{"@attributes":{"id":"p-0013","num":"0012"},"figref":["FIGS. 11 and 12","FIG. 10"]}]},"DETDESC":[{},{}]}
