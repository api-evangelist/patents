---
title: Platform extensibility framework
abstract: A platform extensibility framework may be provided. A visualization platform may register feature extensions and receive requests to create objects. The objects may be created according to drawing instructions provided by the visualization platform, an application requesting the object's creation, and/or at least one of the feature extensions.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09250926&OS=09250926&RS=09250926
owner: Microsoft Technology Licensing, LLC
number: 09250926
owner_city: Redmond
owner_country: US
publication_date: 20090430
---

{"@attributes":{"id":"description"},"BRFSUM":[{},{}],"heading":["RELATED APPLICATIONS","BACKGROUND","SUMMARY","DETAILED DESCRIPTION"],"p":["Related U.S. patent application Ser. No. 12\/433,288, now U.S. Pat. No. 8,638,343, filed on Apr. 30, 2009 and entitled \u201cData Visualization Platform Performance,\u201d as well as related U.S. patent application Ser. No. 12\/049,280, now U.S. Pat. No. 8,786,628, filed on Mar. 15, 2008 and entitled \u201cRendering Electronic Chart Objects,\u201d assigned to the assignee of the present application, are hereby incorporated by reference.","Platform extensibility provides a framework for allowing feature plug-ins to communicate with software applications. In some situations, product release schedules may dictate when new features may be incorporated into an application. For example, a new application version may be released on an annual basis, but users may request new features more frequently. Thus, the conventional strategy is to incorporate selected features in each scheduled release. This often causes problems because the conventional strategy is not always responsive to user demand. For example, a requested feature may take years to be incorporated into an application release and may result in customer dissatisfaction.","A platform extensibility framework may be provided. This Summary is provided to introduce a selection of concepts in a simplified form that are further described below in the Detailed Description. This Summary is not intended to identify key features or essential features of the claimed subject matter. Nor is this Summary intended to be used to limit the claimed subject matter's scope.","A platform extensibility framework may be provided. A visualization platform may register feature extensions and receive requests to create objects. The objects may be created according to drawing instructions provided by the visualization platform, an application requesting the object's creation, and\/or at least one of the feature extensions.","Both the foregoing general description and the following detailed description provide examples and are explanatory only. Accordingly, the foregoing general description and the following detailed description should not be considered to be restrictive. Further, features or variations may be provided in addition to those set forth herein. For example, embodiments may be directed to various feature combinations and sub-combinations described in the detailed description.","The following detailed description refers to the accompanying drawings. Wherever possible, the same reference numbers are used in the drawings and the following description to refer to the same or similar elements. While embodiments of the invention may be described, modifications, adaptations, and other implementations are possible. For example, substitutions, additions, or modifications may be made to the elements illustrated in the drawings, and the methods described herein may be modified by substituting, reordering, or adding stages to the disclosed methods. Accordingly, the following detailed description does not limit the invention. Instead, the proper scope of the invention is defined by the appended claims.","A platform extensibility framework may be provided. Consistent with embodiments of the present invention, a visualization platform may provide an intermediary between user applications and add-ons that provide extended features. Add-ons may be developed by third parties and used by any application comprising support for the visualization platform without needing to wait for a formal product release.",{"@attributes":{"id":"p-0013","num":"0012"},"figref":"FIG. 1","b":["100","110","110","115","120","110"]},"Operating environment  may further comprise a feature extension , an application  comprising a rendering component , and a output device . Feature extension  may comprise, for example, a functionality add-on providing a drawing instruction override, additional data, and\/or additional drawing elements. Application  may comprise, for example, a user application such as a word processing application, a spreadsheet application, a web browser, an email application, and\/or other software application. Output device  may comprise, for example, a screen, a printer, an electronic document, and\/or a web page.","Visualization platform  may comprise a shared core comprising software libraries and\/or utilities for providing interactive visualizations. The shared core may be implemented, for example, in C++ or C#, and may be platform independent. The shared core may comprise visualization utilities for providing layouts, shapes and\/or geometry, line services, 3-dimensional rendering, animation frame generation, and\/or interactive hotspots. Visualization platform  may further comprise application programming interfaces (APIs) for interacting with application  and\/or feature extension .","Application  and feature extension  may interface with visualization platform  to create objects in memory that may be rendered to output device  by application . Feature extension  may interface with visualization platform  rather than directly with application . Application  and feature extension  may be allowed to create the object together in a cooperative and independent manner. For example, application  may create a chart object with associated data bindings and feature extension  may create a legend and a series of data objects. Consistent with embodiments of the invention, feature extension  may create the object but leave it up to application  to provide the data.","Operating system independence by operating environment  may be supported by a plurality of versions of visualization platform . Visualization platform  may be implemented using a platform-independent code, such as in a dynamically linked library (DLL) implemented using the NET protocols developed by Microsoft Corporation of Redmond, Wash. Thus, feature extension  may comprise an addon that may be operative on any operating system supporting the platform-independent code. Consistent with embodiments of the invention, applications may not support the platform-independent code but may support the use of platform-independent feature extension  through the use of an operating system specific version of visualization platform .",{"@attributes":{"id":"p-0018","num":"0017"},"figref":["FIG. 2","FIG. 3"],"b":["200","200","300","200","200","205","210","300","300","110"]},"From stage , where computing device  instantiated, method  may advance to stage  where computing device  may register at least one feature extension with the visualization platform. For example, computing device  may locate feature extension  stored in a common memory location designated for feature extensions and feature extension  may provide details regarding available functionality to visualization platform . Consistent with embodiments of the invention, visualization platform  may determine and provide a list of objects that visualization platform  is operative to create. The list of createable objects may comprise objects for which drawing instructions are available from at least one of visualization platform , feature extension , and\/or application .","Once computing device  registers the at least one feature extension in stage , method  may continue to stage  where computing device  may receive a request to create an object. For example, visualization platform  may receive a request from application  to create an object, such as a chart, a graph, a picture, and\/or a multimedia object. The request may comprise an object type, a data structure, at least one drawing instruction, a data series, and\/or at least one data value.","After computing device  receives the request to create the object in stage , method  may proceed to stage  where computing device  may create the object. For example, object manager  of visualization platform  may create the object according to at least one default drawing instruction associated with visualization platform  for an object of a requested type.","From stage , method  may proceed to stage  where computing device  may determine whether the requested object is associated with at least one feature extension. For example, computing device  may determine whether the creation and\/or modification of the requested object may make use of a drawing instruction, a data value, and\/or another provided functionality that may be provided by feature extension . If the requested object is determined not to be associated with the at least one feature extension, method  may advance to stage  where computing device  may provide access to the created object to the requesting application as described in greater detail below.","If, at stage , computing device  determines that the requested object is associated with the at least one feature extension, method  may advance to stage  where computing device  may determine whether the at least one feature extension is compatible with the requester. For example, application  may request the creation of a chart object by visualization platform  that may request use of a data series provided by feature extension . Visualization platform  may verify the compatibility between the requested chart object and the requested data series. Consistent with embodiments of the invention, verifying compatibility may comprise validating that the requested data series is designated for use with a chart object of the requested type. Further consistent with embodiments of the invention, visualization platform  may verify that application  comprises a compatible version with feature extension  and\/or visualization platform . For example, visualization platform  may verify that application  comprises a version release number (e.g. 2.0), of a designated value or higher, and\/or that application  comprises a particular release tier (e.g. Standard, Professional, Home, Business, and\/or Educational). Visualization platform  may also verify whether application  comprises a valid license to make use of feature extension .","If, at stage , computing device  determines that the at least one feature extension is not compatible with the requesting application, method  may advance to stage , described below. If computing device  determines that the at least one feature extension is compatible with the requesting application, method  may advance to stage  where computing device  may receive at least one object modification from the at least one feature extension. Consistent with embodiments of the invention, feature extension  may add, remove, and\/or override at least one drawing instruction provided by visualization platform  and\/or application  for the creation of the requested object. For example, feature extension  may provide a legend, a background, and\/or an additional data value and\/or data series to be added to a chart object. Further consistent with embodiments of the invention, feature extension  may provide drawing instructions comprising alternate shape geometry for data points on a chart object that override drawing instructions for the shape geometry as provided by application. For example, feature extension  may provide drawing instructions comprising an octagon shape for use as a data point on a chart object instead of a default circular shape provided by application . As another example, feature extension  may provide overriding drawing instructions for modifying the object such as by re-drawing a chart as a log scale rather than a linear scale and\/or using a split axis.","From stage , where computing device  received at least one object modification, method  may advance to stage  where computing device  may modify the object in accordance with the received modification. For example, visualization platform  may draw a new element or redraw an already drawn element of the created object. Consistent with embodiments of the invention, visualization platform  may receive modifications from feature extension  and\/or application  and may modify the object accordingly. For example, visualization platform  may create a chart object with a displayed data value according to a request from application , add a data series according to a modification received from feature extension , and modify a color of the data series displayed on the object according to a modification received from application .","From stage , method  may advance to stage  where computing device  may provide access to the created object to the requesting application. For example, visualization platform  may create the object in a memory location associated with the visualization platform and grant access to the memory location to feature extension  and\/or application  using an application programming interface (API). Consistent with embodiments of the invention, visualization platform  may provide a copy of the object to the requestor rather than providing access to the object in the memory location associated with visualization platform .","From stage , method  may advance to stage  where computing device  may display the created object. For example, application  may access the created object and render it to display device  using rendering component . Rendering the object may comprise generating an image from a model associated with the object. The model associated with the object may comprise a description of three-dimensional objects in a data structure and may comprise geometry, viewpoint, texture, lighting, and\/or shading information. The image may comprise a digital image or raster graphics image.","Once computing device  displays the object in stage , method  may then end at stage .","As an example of method , application  may request a chart object from visualization platform , wherein the request provides a chart type, at least one data value and\/or data series. Visualization platform  may create the chart object and populate the chart object with a legend and a title according to drawing instructions associated with visualization platform . At stage , where application  renders the chart object, application  may ask visualization platform  to provide the shapes associated with the chart object. Application  may walk through the shapes and receive drawing instructions for each in order to render them to an output device such as a printer or display device . Feature extension  may override and\/or extend all kinds of visual elements of the created object. For example, they may add a new series type such as a line series, a column, and\/or a pie series. For another example, feature extension  may override a particular map shape, a legend, a title, a legend item, an axis, and\/or the entire chart.","Each element and\/or function provided by feature extension  may be associated with an element name, and those element names may be provided as part of providing the list of objects that visualization platform  may be operative to create. Visualization platform  may determine that the requested object is associated with feature extension  by including the element names associated with feature extension  in the object creation request. For example, application  may provide a drop-down of available charts and\/or data series selectable by the user. Upon receiving the user's selection, application  may request the object be created by visualization platform , and visualization platform  may query each known feature extension such as feature extension  to determine whether the feature extension is associated with the named element. Once visualization platform  determines the applicable feature extension, visualization platform  may receive drawing instructions from the applicable feature extension for adding, updating, and\/or modifying the named element.","An embodiment consistent with the invention may comprise a system for providing an extensibility framework. The system may comprise a memory storage and a processing unit coupled to the memory storage. The processing unit may be operative to instantiate a visualization platform, register at least one feature extension with the visualization platform, receive a request to create at least one object from at least one application, and create the at least one object, determining whether the request is associated with the at least one feature extension; in response to determining that the request is associated with the at least one feature extension: receiving at least one object modification from the at least one feature extension, and modifying the object according to the at least one object modification; and rendering the object on a display device.","Another embodiment consistent with the invention may comprise a system for providing application extensibility. The system may comprise a memory storage and a processing unit coupled to the memory storage. The processing unit may be operative to locate at least one feature extension operative for use with a visualization platform, receive a request to create at least one object from at least one user application, and create the at least one object. The system may determine whether the request is associated with the at least one feature extension, and in response to determining that the request is associated with the at least one feature extension, receive at least one object modification from the at least one feature extension and modify the object according to the at least one object modification. The system may then render the object on a display device.","Yet another embodiment consistent with the invention may comprise a system for providing an application extensibility framework. The system may comprise a memory storage and a processing unit coupled to the memory storage. The processing unit may be operative to instantiate a visualization platform, register at least one feature extension, provide a list of objects that the visualization platform is operative to create to an application, receive a request to create at least one of the list of objects from the application, and create the at least one requested object according to at least one drawing instruction provided by the visualization platform and associated with the requested object type. If the object is associated with a feature extension, and the feature extension is compatible with the at least one application, the system may be operative to receive at least one object modification from the at least one feature extension, modify the object according to the at least one object modification, and render the object on a display device.",{"@attributes":{"id":"p-0034","num":"0033"},"figref":["FIG. 3","FIG. 3"],"b":["300","300","300","318","300","300","100","100","300"]},"With reference to , a system consistent with an embodiment of the invention may include a computing device, such as computing device . In a basic configuration, computing device  may include at least one processing unit  and a system memory . Depending on the configuration and type of computing device, system memory  may comprise, but is not limited to, volatile (e.g. random access memory (RAM)), non-volatile (e.g. read-only memory (ROM)), flash memory, or any combination. System memory  may include operating system , one or more programming modules , and may include visualization platform  and\/or feature extension . Operating system , for example, may be suitable for controlling computing device 's operation. In one embodiment, programming modules  may include user application . Furthermore, embodiments of the invention may be practiced in conjunction with a graphics library, other operating systems, or any other application program and is not limited to any particular application or system. This basic configuration is illustrated in  by those components within a dashed line .","Computing device  may have additional features or functionality. For example, computing device  may also include additional data storage devices (removable and\/or non-removable) such as, for example, magnetic disks, optical disks or tape. Such additional storage is illustrated in  by a removable storage  and a non-removable storage . Computer storage media may include volatile and nonvolatile, removable and non-removable media implemented in any method or technology for storage of information, such as computer readable instructions, data structures, program modules, or other data. System memory , removable storage , and non-removable storage  are all computer storage media examples (i.e memory storage.) Computer storage media may include, but is not limited to, RAM, ROM, electrically erasable read-only memory (EEPROM), flash memory or other memory technology, CD-ROM, digital versatile disks (DVD) or other optical storage, magnetic cassettes, magnetic tape, magnetic disk storage or other magnetic storage devices, or any other medium which can be used to store information and which can be accessed by computing device . Any such computer storage media may be part of device . Computing device  may also have input device(s)  such as a keyboard, a mouse, a pen, a sound input device, a touch input device, etc. Output device(s)  such as a display, speakers, a printer, etc. may also be included. The aforementioned devices are examples and others may be used.","Computing device  may also contain a communication connection  that may allow device  to communicate with other computing devices , such as over a network in a distributed computing environment, for example, an intranet or the Internet. Communication connection  is one example of communication media. Communication media may typically be embodied by computer readable instructions, data structures, program modules, or other data in a modulated data signal, such as a carrier wave or other transport mechanism, and includes any information delivery media. The term \u201cmodulated data signal\u201d may describe a signal that has one or more characteristics set or changed in such a manner as to encode information in the signal. By way of example, and not limitation, communication media may include wired media such as a wired network or direct-wired connection, and wireless media such as acoustic, radio frequency (RF), infrared, and other wireless media. The term computer readable media as used herein may include both storage media and communication media.","As stated above, a number of program modules and data files may be stored in system memory , including operating system . While executing on processing unit , programming modules  (e.g. visualization platform  and\/or feature extension ) may perform processes including, for example, one or more of method 's stages as described above. The aforementioned process is an example, and processing unit  may perform other processes. Other programming modules that may be used in accordance with embodiments of the present invention may include electronic mail and contacts applications, word processing applications, spreadsheet applications, database applications, slide presentation applications, drawing or computer-aided application programs, etc.","Generally, consistent with embodiments of the invention, program modules may include routines, programs, components, data structures, and other types of structures that may perform particular tasks or that may implement particular abstract data types. Moreover, embodiments of the invention may be practiced with other computer system configurations, including hand-held devices, multiprocessor systems, microprocessor-based or programmable consumer electronics, minicomputers, mainframe computers, and the like. Embodiments of the invention may also be practiced in distributed computing environments where tasks are performed by remote processing devices that are linked through a communications network. In a distributed computing environment, program modules may be located in both local and remote memory storage devices.","Furthermore, embodiments of the invention may be practiced in an electrical circuit comprising discrete electronic elements, packaged or integrated electronic chips containing logic gates, a circuit utilizing a microprocessor, or on a single chip containing electronic elements or microprocessors. Embodiments of the invention may also be practiced using other technologies capable of performing logical operations such as, for example, AND, OR, and NOT, including but not limited to mechanical, optical, fluidic, and quantum technologies. In addition, embodiments of the invention may be practiced within a general purpose computer or in any other circuits or systems.","Embodiments of the invention, for example, may be implemented as a computer process (method), a computing system, or as an article of manufacture, such as a computer program product or computer readable media. The computer program product may be a computer storage media readable by a computer system and encoding a computer program of instructions for executing a computer process. The computer program product may also be a propagated signal on a carrier readable by a computing system and encoding a computer program of instructions for executing a computer process. Accordingly, the present invention may be embodied in hardware and\/or in software (including firmware, resident software, micro-code, etc.). In other words, embodiments of the present invention may take the form of a computer program product on a computer-usable or computer-readable storage medium having computer-usable or computer-readable program code embodied in the medium for use by or in connection with an instruction execution system. A computer-usable or computer-readable medium may be any medium that can contain, store, communicate, propagate, or transport the program for use by or in connection with the instruction execution system, apparatus, or device.","The computer-usable or computer-readable medium may be, for example but not limited to, an electronic, magnetic, optical, electromagnetic, infrared, or semiconductor system, apparatus, device, or propagation medium. More specific computer-readable medium examples (a non-exhaustive list), the computer-readable medium may include the following: an electrical connection having one or more wires, a portable computer diskette, a random access memory (RAM), a read-only memory (ROM), an erasable programmable read-only memory (EPROM or Flash memory), an optical fiber, and a portable compact disc read-only memory (CD-ROM). Note that the computer-usable or computer-readable medium could even be paper or another suitable medium upon which the program is printed, as the program can be electronically captured, via, for instance, optical scanning of the paper or other medium then compiled, interpreted, or otherwise processed in a suitable manner, if necessary, and then stored in a computer memory.","Embodiments of the present invention, for example, are described above with reference to block diagrams and\/or operational illustrations of methods, systems, and computer program products according to embodiments of the invention. The functions\/acts noted in the blocks may occur out of the order as shown in any flowchart. For example, two blocks shown in succession may in fact be executed substantially concurrently or the blocks may sometimes be executed in the reverse order, depending upon the functionality\/acts involved.","While certain embodiments of the invention have been described, other embodiments may exist. Furthermore, although embodiments of the present invention have been described as being associated with data stored in memory and other storage mediums, data can also be stored on or read from other types of computer-readable media, such as secondary storage devices, like hard disks, floppy disks, or a CD-ROM, a carrier wave from the Internet, or other forms of RAM or ROM. Further, the disclosed methods stages may be modified in any manner, including by reordering stages and\/or inserting or deleting stages, without departing from the invention.","All rights including copyrights in the code included herein are vested in and the property of the Applicant. The Applicant retains and reserves all rights in the code included herein, and grants permission to reproduce the material only in connection with reproduction of the granted patent and for no other purpose.","While the specification includes examples, the invention's scope is indicated by the following claims. Furthermore, while the specification has been described in language specific to structural features and\/or methodological acts, the claims are not limited to the features or acts described above. Rather, the specific features and acts described above are disclosed as example for embodiments of the invention."],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"BRIEF DESCRIPTION OF THE DRAWINGS","p":["The accompanying drawings, which are incorporated in and constitute a part of this disclosure, illustrate various embodiments of the present invention. In the drawings:",{"@attributes":{"id":"p-0008","num":"0007"},"figref":"FIG. 1"},{"@attributes":{"id":"p-0009","num":"0008"},"figref":"FIG. 2"},{"@attributes":{"id":"p-0010","num":"0009"},"figref":"FIG. 3"}]},"DETDESC":[{},{}]}
