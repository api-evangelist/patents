---
title: Server for handling multimodal information
abstract: To integrate telephony with Web-based information services, and develop multi-modal telephony applications that combine graphical input and output with traditional speech-based user interfaces, a Web server for handling information which is in these different modal forms, has an internet interface for supporting connections on the internet, and a terminal interface for supporting connections from the server to user terminals, and for passing information in at least one of the modal forms. A service controller controls input or output of the information on the interfaces, and processes the information received from or sent to either interface, according to its modal form.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=06859451&OS=06859451&RS=06859451
owner: Nortel Networks Limited
number: 06859451
owner_city: St. Laurent
owner_country: CA
publication_date: 19980421
---

{"@attributes":{"id":"description"},"RELAPP":[{},{}],"heading":["RELATED APPLICATIONS","BACKGROUND TO THE INVENTION","SUMMARY OF THE INVENTION","DETAILED DESCRIPTION","HARDWARE EXAMPLES"],"p":["This application is related to U.S. Pat. No. 6,012,030 issued on Jan. 4, 2000, entitled Management of Speech and Audio Prompts in Multimodal interfaces, and U.S. Pat. No. 6,018,711 issued an Jan. 25, 2000, entitled Interface Management for communication Systems and Devices, both of which were filed concurrently herewith, and both of which are hereby incorporated by reference. This application is also related to U.S. Pat. No. 6,351,771 issued Feb. 26, 2002, entitled Distributed Service Network and U.S. Pat. No. 6,310,889 issued Oct. 30, 2001 entitled \u201cMethod of Servicing Data Access Request from Users Connecting to a Distributed Service Network\u201d, both of which were filed on Mar. 12, 1998, and U.S. patent application Ser. No. 09\/041,129, filed on Mar. 12, 1998, entitled \u201cReconfigurable Service Network\u201d, and application U.S. patent application Ser. No. 09\/041,131, filed on Mar. 12, 198, entitled \u201cA Data Stream Conversion System and Method\u201d all claiming a foreign priority date of Nov. 10, 1997 and are hereby incorporated by reference. This application is also related to U.S. patent application Ser. No. 08\/992,630 filed on Dec. 19, 1997, entitled \u201cMultimodal User Interface\u201d, and hereby incorporated by reference.","1. Field of the Invention","The invention relates to servers for handling information which is in different modal for, to servers for interfacing between telephone calls and the internet, to methods of using such servers, to methods of using a multi-modal service provided by a server on the internet, and to software on a computer readable medium for carrying out such methods.","2. Background Art","It is known to integrate telephone and computer technologies in many ways. For example, it is known to provide a telephone which can be controlled by a desktop computer to enable the telephone to be controlled from menus on the screen of the computer. This enables numbers to be selected from on screen directories, and calls to be initiated by mouse button click.","Integration of telephony with the internet has also been tried in various ways. One example is mobile telephones having small displays and rudimentary internet access software for email and Web page downloading. A further example is a system enabling a user viewing a Web page the opportunity to click on a button to launch a telephone call which will connect their telephone to an agent of the business owning the Web page. This can be achieved either by a call over the PSTN (Public Service Telephone Network), or, if the user has a suitably equipped computer, by a voice over IP telephone conversation. The agent may given automatically a view of the same Web page as the user sees.","Such systems may be implemented using a Web server which is operable to respond to queries from the user's Web browser to fetch Web pages, and to execute CGI (Common Gateway Interface) scripts outside the server. CGI scripts are a mechanism to enable Web pages to be created at the time they are requested, enabling them to be tailored to the requester, or to contain up to date information from a database for example. For features such as animation sequences, or audio files which need to be played on the user's machine, it is known to send Java programs called applets to the user's machine, for execution there.","It is also known to provide computer speech recognition of speech on a telephone call, for applications such as directory assistance.","Various event-driven, state-based frameworks are also known to support speech recognition application development. They do not necessarily provide the functionality to develop complex applications, or can be difficult to interface to outside data sources. They may have separate graphical and speech user interfaces. It may be awkward to synchronize the two interfaces and implement complex applications using this loosely-integrated architecture. Also, it may be awkward to synchronise multiple interfaces using this architecture. Access to the internet may require a custom bridge between the state machine framework and the low level networking features of the host operating system. Specialised facilities for talking to the internet are not providedis difficult to manage the additional complexity and synchronisation problems caused by trying to support access to the internet.","It is also known to provide Web browsers with a user interface capable of supporting speech recognition in addition to the standard graphical interface. Similar capabilities are known in user terminals not having Web browsers.","It is also known to extend the capabilities of Web browsers through \u201cplug-ins\u201d which can be downloaded by the browser from another Web site, to enable the browser to handle new data formats such as audio files.","It is an object of the invention to provide improved methods and apparatus.","According to a first aspect of the invention there is provided a server for handling information which is in different modal forms suitable for more than one mode of user interface, the server comprising:\n\n","Advantages of having multi modal capability, or modal sensitivity in the server rather than only in the user's terminal include:\n\n","Preferably the service controller is operable to interact with a user having a multi-modal terminal, and to select which modal form or forms to use. An advantage of selecting modes is that a service designer can adapt a service to suit the interface mode characteristics of different terminals.","Preferably the selection is made according to the content of the information, and the context of the interaction. This is advantageous because the user interface can be adapted to make the communication more effective, and by having the adaptation made in the server, the service designer has more control over the user interface. This can be important because small or subtle changes in the user interface can have disproportionate effects.","Preferably the service controller is operable to receive inputs in different modes simultaneously from the same user, to resolve any conflicts, and determine an intention of the user based on the inputs. If the server receives conflicting information, perhaps from user mistakes, or poor performance of communication in one or more modes, e.g. lots of background noise in an audio channel, the service designer now has the capability to handle such situations.","Preferably the terminal interface is arranged to recognise speech as an input. Many applications can be enhanced by making use of this interface mode either to complement textual or graphical input, or instead of them.","Preferably the terminal interface is arranged to generate audio as an output mode. Many applications can be enhanced by making use of this interface mode, often to complement a visual display or in place of the visual display.","Preferably the service controller is arranged to conduct a dialogue with the user in the form of a sequence of interactions. This is particularly useful when the mode of interaction limits the amount of information which can be passed in each interaction, e.g. speech recognition may be limited to single utterances from the user. It is also useful in cases where the system response at any instance depends on earlier interactions in the sequence, and to enable context dependent responses.","Preferably the server further comprises means for translating information from one modal form to another. This may enable new services to be created by bridging between channels operating in different modes, e.g. an email to telephone bridge, to enable emails to be read or delivered from a telephone.","Preferably the server further comprises means for initiating a connection to the user's terminal. This is advantageous in cases where the response may be delayed, or to enable a user to be alerted of some event.","Preferably the server comprises a link to a telephone network, and a call processor for making and receiving telephone calls on the telephone network. The wide reach and ease of use of the telephone network make it advantageous to provide connections to enable services to make use of telephony and the internet.","According to another aspect of the invention, there is provided a server for interfacing between telephone calls and the internet, and comprising:\n\n","According to another aspect of the invention, there is provided a method of using a server to handle information in different modal forms suitable for more than one mode of user interface, and comprising the steps of:\n\n","According to another aspect of the invention, there is provided a method of using a multi-modal service provided by a server on the internet, the server having an internet interface for supporting one or more connections on the internet, a terminal interface for supporting a connection to a user of the service, and for passing information in at least one of the modal forms; and a service controller for controlling input or output of information on the terminal interface and the internet interface, and for processing the information received from or sent to either interface, according to its modal form, the method comprising the steps of:\n\n","Another aspect of the invention provides software stored on a computer readable medium for carrying out the above methods.","Any of the preferred features may be combined, and combined with any aspect of the invention, as would be apparent to a person skilled; in the art. Other advantages will be apparent to a person skilled in the art, particularly in relation to prior art other than that mentioned above.","To show, by way of example, how to put the invention into practice, embodiments will now be described in more detail, with reference to the accompanying drawings.","Information in different modal forms is defined as information for different modes of interface with a human user. Thus an audio signal is in the audio modal form, even if it is represented as data packets. Different modes of interface are distinguished by whether they appeal to or use different human sensory faculties. More than one distinct type of user interface may make use of the same mode, e.g. text and graphics both use the visual mode. Input modes can be distinguished from output modes, for example a user might press keys on a telephone handset, (tactile) and hear a response (audio). Different modes have different characteristics in terms of e.g. type of information which can be conveyed, the amount of information, the reliability of the mode, speed of use, and suitability for user circumstances.",{"@attributes":{"id":"P-00066","num":"00066"},"figref":"FIGS. 1-3"},{"@attributes":{"id":"P-00067","num":"00067"},"figref":"FIG. 1","b":["100","110","120","140","130"]},{"@attributes":{"id":"P-00068","num":"00068"},"figref":["FIG. 2","FIG. 1"]},{"@attributes":{"id":"P-00069","num":"00069"},"figref":"FIG. 3","b":["230","180","180","190","200","210","220","180","230","200","230"]},"The user's computer  may also use the local area network to access the internet . In this instance, the switch  handles internet traffic and PSTN traffic as two different, independent data streams. In an alternative system, the user may be able to choose to send or initiate a telephone call either via the PSTN, or as a voice-over-IP call routed through the local area network, and the switch , to the internet .","FIG. \u2014Schematic of Embodiment of Server of the Invention.","A server  is shown in  in schematic form, and connected to a user's terminal , and to the internet . Some of the principal functions of the server are shown, including a terminal interface , a multi-modal service controller , and an internet interface . In this arrangement, the server is used to facilitate access to the internet from the user's terminal. The terminal interface may support one or more connections, and may pass information for more than one mode of user interface. The service controller may have one or more of a number of individual functions as follows:\n\n","Many user terminals may be connected to the server simultaneously, and in this case, the server would be arranged to be able to process interactions with each of them independently, or interdependently, if conferencing type services are implemented.","The server may be conveniently located close to or in a central office, or other hub of a telephone network, and could be run and managed by an internet service provider.","FIG. \u2014Schematic of user Terminal and Server Terminal Interface.",{"@attributes":{"id":"P-00083","num":"00083"},"figref":["FIG. 5","FIG. 4"],"b":["400","500","510","520","430","410","520"]},"The terminal interface comprises an HTTP bridge , which connects the internet protocol local area network to other elements of the server. A telephony interface  is provided for connecting the PSTN to other elements of the server. In this example, a speech recognition function  is provided connected to the telephony interface, and an audio generation function  is also provided, connected to the telephony interface.","All of the above-mentioned elements of the terminal interface are connected to an event manager of the service controller, which will be described in more detail below.","The HTTP bridge is arranged to convert HTTP requests or HTML files into formats which can be handled by other elements in the server.","The telephony interface  is arranged to be able to initiate calls on the PSTN, answer calls, and manage the status of calls, using signalling appropriate to the PSTN. The speech recognition function can detect and recognize speech on any call made to or from the telephony interface, and can pass text to the service controller under the control of the event manager.","The audio generation function can generate audio prompts, or speech on the basis of text or commands supplied to it by the service controller, under the control of the event manager.","FIG. \u2014Service Controller and Internet Interface.",{"@attributes":{"id":"P-00090","num":"00090"},"figref":["FIG. 6","FIG. 4"],"b":["440","600","610","620","450","4"]},"The internet interface is a software entity which uses a physical port to access the internet. The same physical port may be used by the terminal interface to make a connection to the user across the internet.","FIG. \u2014Schematic of Java Web Server Implementation",{"@attributes":{"id":"P-00093","num":"00093"},"figref":["FIG. 7","FIG. 4"],"b":["700","710","700"]},"The information flow described above to the user's terminal may pass through the host port even if the information relates to different modes of user interface. Alternatively, physical ports for passing the information in the different modal forms, may be provided, as shown in  port  is provided for audio mode signals, a port  is provided for video mode signals, and a further port  is provided for tactile mode signals.","A Java based implementation is preferred because it provides an object oriented software environment, provides multi threading, and a variety of network interface classes. Conventionally, the Java Web Server environment provides a servlet API (Application Programming Interface) and a mechanism for managing and invoking servlets in response to received HTTP requests. The request is processed by the servlet under a handler thread running in parallel with the servlets main thread of execution. Normally a mechanism called servlet chaining is used for forwarding requests from one servlet to another. Aswell, a servlet may obtain a reference to another servlet from the Java Web Server to invoke methods belonging to the other servlet. For better coordination between servlets, the multi-modal servlets may have an enhanced communication capability, involving event-driven message passing between servlets. This will be explained in more detail below. First, an example of an architecture of multi-modal servlets to implement a voice-enabled Web server will be described.","FIG. \u2014Voice Enabled Web Server Example.",{"@attributes":{"id":"P-00097","num":"00097"},"figref":"FIG. 8","b":["710","790","800","810","820","830","800","810","820"]},"The HTTP bridge is arranged to convert HTTP requests into messages which can be understood by other MMSs. It is also arranged to convert MMS messages into HTML for onward transmission over the internet. It may also be arranged to manage the internet connection to the user and handle errors.","The media server MMS provides an interface to the public service telephone network, audio prompts (pre-recorded and synthesized speech) for output onto the PSTN and speech recognition capability. Accordingly, it can be seen that the multi-modal terminal interface function is provided by the HTTP bridge and the media server MMSs, using the host port and the telephony port. The internet interface function is provided by the data server MMS using the host port.","The controller MMS is arranged to implement a programmed dialogue with the user via a multi-modal user interface on the user's terminal. The exact dialogue can be determined according to the application, and determined by a service designer.","The user's terminal can take the form of a separate telephony device, and a computer with a Web browser, or can be a single device having multimodal user interface capabilities. An example of the latter is described in abovementioned copending U.S. patent application Ser. No. 08\/992,630 filed on 19th Dec. 1997, entitled MULTIMODAL USER INTERFACE.","FIG. \u2014Typical Dialogue Between the Server and a Multi-Modal user Terminal.",{"@attributes":{"id":"P-00103","num":"00103"},"figref":["FIG. 9","FIG. 9"],"b":"8","ul":{"@attributes":{"id":"ul200003","list-style":"none"},"li":{"@attributes":{"id":"ul200004-li00004"},"ul":{"@attributes":{"id":"ul200004","list-style":"none"},"li":["1. The user's terminal initiates a phone call to the server.","2. The media server MMS detects the phone call, answers it, and notifies the controller of the new call.","3. The controller MMS determines an appropriate play greeting message, and sends this greeting message to the media server MMS.","4. The media server plays the audio greeting message to the user's terminal over the telephone network connection.","5. The controller sends a suitable page to the HTTP bridge MMS.","6. The HTTP bridge MMS sends the HTML page to the user's terminal. (If the bridge determines that the terminal is unable to accept the page, the bridge will notify the controller accordingly, and the controller may adjust its dialogue to reflect this.)","7. The user activates a button on the displayed Web page, which causes the Web browser on the user's terminal to send an HTTP request.","8. The HTTP bridge sends an HTTP request event to the controller MMS.","9. The controller MMS sends a query event to the data server MMS.","10. The data server MMS returns data to the controller MMS.","11. The data server MMS may have filtered the required data from the pages data returned.","11. The controller MMS sends a play prompt event message to the media server MMS.","12. The media server MMS plays a corresponding audio prompt at the user's terminal using the telephone network connection.","13. The controller MMS sends a page of result data to the HTTP bridge MMS.","14. The HTTP bridge MMS sends the result page in HTML to the user's terminal where it is displayed."]}}}},"FIG. \u2014Multi-Modal Servlet Architecture.","The Java Web server sold by Sun Microsystems includes a servlet API which in turn includes a class called Javax.servlet.http.HttpServlet. This class, labelled  in , is already provided with an HTTP\/HTML interface, , for communicating with Web browsers. The multi-modal servlet  is a subclass of the HTTP servlet class . It provides the following enhancements over the HTTP servlet class:\n\n","An administrative servlet is provided as part of the Java Web Server to start an appropriate set of MMSs running. The administrative servlet will specify what MMS are to be started, and what are their initial parameters. Another standard servlet takes an incoming URL received from a Web browser, and directs the HTTP request to the appropriate Servlet or MMS.","FIG. \u2014Operation of the Event Processing.",{"@attributes":{"id":"P-00127","num":"00127"},"figref":"FIG. 11","ul":{"@attributes":{"id":"ul200007","list-style":"none"},"li":{"@attributes":{"id":"ul200008-li00008"},"ul":{"@attributes":{"id":"ul200008","list-style":"none"},"li":["1. MMS A sends an event to MSSB B.","2. MMS B sends the event to its event manager.","3. The event manager sends the event to the manageable object registered with the event manager.","4. The manageable object processes the event to generate a reply event. The reply event is sent to the event manager.","5. The event manager, in order to send the reply event to Servlet A, requests a handle for Servlet A from the look-up facility.","6. The Java server look-up facility returns the Servlet A handle to event manager B.","7. The event manager sends the reply events to Servlet A using the reference obtained."]}}}},"FIG. \u2014Media Server MMS.","The media server MMS is a subclass of the MMS . It manages the telephony port  shown in FIG. . In addition to having an event manager , and a send event interface , (not shown), it is provided with a finite state machine for overall control of the media server MMS. To manage the telephony port, shown in the form of a telephony card , use is made of the Java Native Method Interface (NMI), to enable Java programs to interface with external libraries such as Dynamic Link Libraries (DLL). The NMI  is linked to a core processing DLL , an audio recording and playback DLL , a speech synthesis DLL , for synthesizing speech from text, and a speech recognition DLL , for generating text from speech.","The media server finite state machine  is arranged to handle initialization, dispatch of commands to external DLLs, receipt of replies from the DLLs, and communication with other MMSs. Implementation of these DLLs, and the phone card  can follow well established principles, and therefore need not be described in more detail here.","The NMI is the preferred method for interfacing with low level device drivers or pre-existing software modules supplied in native binary format. An alternative way is to wrap these binary format modules in a native program which provides a socket connection to Java. This complicates the design by creating another process. It is inefficient because data needs to be packed and unpacked to be sent over the socket. Another alternative is to use program components which already have a Java API, which enable them to be run in the Java environment.","In principle, the server could be implemented on a wide range of different types of well known hardware. If the server is implemented as a Java server, it could be run on any machine which supports the Java run time environment, and the necessary hardware interface. Examples include Unix or Windows based workstations, or network computers (an example of a thin client) and other devices running Java or Java OS (Operating System), such as devices using a custom processor chip dedicated to Java, or other network appliances such as those running the Windows CE operating system.","Computationally intensive parts such as the speech recognition, may be run on dedicated hardware. Implementations of this; can follow well known design principles, and so need not be described in more detail here. Such hardware could be connected to the server hardware through either a system bus to give a direct connection to the main processor. Alternatively the dedicated hardware could be stand alone and connected over a network connection such as an ethernet link. In principle the separate hardware elements could be widely distributed.","FIGS. ,\u2014Use with Single mode user Terminals.",{"@attributes":{"id":"P-00142","num":"00142"},"figref":"FIG. 13","b":["4","520"]},"In the embodiment of , a server is shown which again uses reference numerals corresponding to those in FIG. . In this case, the user's terminal  is only capable of interfacing with a user in a graphical mode, e.g., by displaying Web pages, and accepting text or mouse inputs. The terminal interface is connected to the PSTN, and able to use it as a data source or destination, by making telephone calls to remote telephone terminals .","In this case, the service controller will include dialogues enabling a user to access telephone based services, or leave voicemail messages, or even engage in synthesized conversations. Voicemails left for a user could be converted into text and sent to the user's terminal . In this case, the user's terminal could be connected to the server through the internet, and thus through the same physical port on the server as is used by the internet interface.","Concluding Remarks","The embodiments discussed above can address a number of issues:\n\n","They provides a way to integrate telephony with Web-based information services. They also make it easier to test and develop generic multimodal user interfaces, which will be of increasing importance as wireless or wired \u201csmart phones\u201d become popular.","As can be seen, five elements can make notable contributions to the embodiments described, as follows. Java provides an object-oriented software environment, multi-threading, and a variety of network interface classes. These classes simplify the task of writing applications which can directly access the internet. A second element is the Java Web Server, which adds the servlet API and a mechanism for managing and invoking servlets in response to information requests from Web browsers. A third element is the MediaServerServlet developed to enhance the Java Web Server with telephony (originate and answer calls, play and record audio) and speech (recognize speech, generate synthetic speech) functionality. A fourth element is the HTTPBridge, a servlet that mediates between HTML\/HTTP traffic outside the Web Server and event-driven messages inside. A fifth element is the EventManager class hierarchy, that was developed to provide a means for servlets to communicate with one another using event-driven messages.","The architecture described above comprises a set of modules (servlets) that run on the Java Web Server, a product of Sun Microsystems. The servlets provide a framework for the development of telephony applications that employ multi-modal user interfaces. Interface modes supported in one embodiment are speech (recorded audio prompts and synthesized speech, and speech recognition) and graphics (standard Web browser graphics and user input based on HTML\/HTTP). The Sun Java Web Server is a proprietary product, but the multi-modal server can be based on Web Servers from any vendors that support the Servlet API on a PC.","Other Variations","Although in the embodiments described, there is shown a direct connection to the user's terminal, this can of course be indirect, e.g. via other servers on the internet, or other networks.","Although the term \u201cuser\u201d may mean a human user, it is also intended to include apparatus which could provide responses to satisfy the terminal interface on the server automatically, e.g. software agents acting on behalf of a human user.","Numerous terminals may be served simultaneously and the terminals may be of different types. A terminal may have more than one connection to the server running simultaneously, to enable multiple interface modes to be used, or to run simultaneously many services for the same user.","A new set of servlets may be instanciated for each service for each user.","Although Web servers on the internet are conventionally passive, and respond only to queries sent to them from e.g. Web browsers, the server described above can be arranged to run a service which involves alerting a user without waiting for a query from the user. This can be achieved by making a phone call to the user, or by simulating a query from the user, to trigger a response from the server to the user. This would enable paging type services to be offered, enhanced over conventional paging services since information in multimodal forms may be transmitted.","Other variations within the scope of the claims will be apparent to persons of average skill in the art."],"BRFSUM":[{},{}],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"BRIEF DESCRIPTION OF DRAWINGS","p":[{"@attributes":{"id":"P-00054","num":"00054"},"figref":"FIGS. 1","b":"3"},{"@attributes":{"id":"P-00055","num":"00055"},"figref":"FIG. 4"},{"@attributes":{"id":"P-00056","num":"00056"},"figref":["FIG. 5","FIG. 4"]},{"@attributes":{"id":"P-00057","num":"00057"},"figref":["FIG. 6","FIG. 4"]},{"@attributes":{"id":"P-00058","num":"00058"},"figref":["FIG. 7","FIG. 4"]},{"@attributes":{"id":"P-00059","num":"00059"},"figref":["FIG. 8","FIG. 7"]},{"@attributes":{"id":"P-00060","num":"00060"},"figref":"FIG. 9"},{"@attributes":{"id":"P-00061","num":"00061"},"figref":"FIG. 10"},{"@attributes":{"id":"P-00062","num":"00062"},"figref":["FIG. 11","FIG. 10"]},{"@attributes":{"id":"P-00063","num":"00063"},"figref":["FIG. 12","FIG. 8"]},{"@attributes":{"id":"P-00064","num":"00064"},"figref":"FIGS. 13 and 14"}]},"DETDESC":[{},{}]}
