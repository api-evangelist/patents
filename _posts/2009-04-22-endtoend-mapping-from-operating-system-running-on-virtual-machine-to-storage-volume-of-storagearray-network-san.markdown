---
title: End-to-end mapping from operating system running on virtual machine to storage volume of storage-array network (SAN)
abstract: An end-to-end mapping from a file system of an operating system running on a virtual machine to a storage volume of a SAN is determined. The virtual machine reported by the operating system is mapped to a definition of the virtual machine as provided by a management component managing the virtual machine. A storage device reported by the operating system is mapped to a definition of a virtual storage device as provided by the management component, such as by using a SCSI controller number and target identifier of the virtual machine storage device to correlate the virtual machine storage device to the definition. The definition of the virtual storage device is mapped to a storage device on a physical computing device on which the management component and the virtual machine are running. The storage device on the physical computing device is mapped to the storage volume of the SAN.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08799894&OS=08799894&RS=08799894
owner: International Business Machines Corporation
number: 08799894
owner_city: Armonk
owner_country: US
publication_date: 20090422
---

{"@attributes":{"id":"description"},"BRFSUM":[{},{}],"heading":["FIELD OF THE INVENTION","BACKGROUND OF THE INVENTION","SUMMARY OF THE INVENTION","DETAILED DESCRIPTION OF THE DRAWINGS"],"p":["The present invention relates generally to a virtual machine having a storage device physically implemented by a storage volume of a storage-array or storage-area network (SAN). The present invention relates more particularly to determining an end-to-end mapping from an operating system running on such a virtual machine to the storage volume of the SAN physically implementing the storage device of the virtual machine.","Historically, a single computing device ran a single operating system. Each computer user, for instance, was assigned his or her own client computing device, and that computing device ran an operating system in which the user could run application programs as desired. Similarly, a server computing device ran a single operating system that ran application programs.","However, this type of computer architecture has disadvantages. First, it is costly, because each computing device needs a complete assortment of processors, memory, and input\/output (I\/O) devices to properly function whether it is being utilized or not. Second, the use of this type of architecture can be inefficient. At any given time, a given computing device may not be performing work, and rather is sitting idle, waiting for a task to be performed during times when workloads increase.","Therefore, a technology has been developed in which more than one operating system is capable of running on a single computing device, sharing at least the memory and the processors of the computing device. Such technology is referred to as virtualization. With virtualization, a given computing device has a number of virtual machines, where an operating system is run in each virtual machine. Therefore, operating systems for multiple computer users can be run simultaneously on a single computing device, such as a single server computing device. When workload demands are high, more virtual machines can be instantiated and run. When workloads are low, virtual machines can be suspended.","As such, periodically, maintenance and management of the virtual machines may have to be performed. As one example, a virtual machine may have to be migrated from one server computing device, or server, to another server computing device, or server. For instance, the server that is currently hosting the virtual machine may need to be serviced, such that the virtual machine has to be migrated to another server while the service or maintenance is being performed. Improving the ability of a user such as an administrator to maintain and manage virtual machines in this and other ways is advantageous, because it makes the administrator's job easier, and can enhance the business case for adopting virtual machines within organizational environments like corporate environments.","The present invention relates to determining an end-to-end mapping from an operating system running on a virtual machine to a storage volume of a storage-array or storage-area network (SAN). A method of one embodiment of the invention determines such an end-to-end mapping as follows. The method maps a virtual machine as reported by an operating system running on the virtual machine to a definition of the virtual machine as provided by a management component that manages the virtual machine. The method maps a storage device as reported by the operating system running on the virtual machine to a definition of a virtual storage device as provided by the management component managing the virtual machine.","This mapping is achieved by using a storage interface controller number, such as a small computer system interface (SCSI) controller number, and a storage interface target identifier (ID), such as a SCSI target ID, of the virtual storage device to correlate the storage device as reported by the operating system to the definition of the virtual storage device as provided by the management component. The definition of the virtual storage device is itself mapped to a storage device on a physical computing device on which the management component and the virtual machine are running. The storage device on the physical computing device is then mapped to a storage volume of a SAN. The storage interface controller number and the storage interface target ID are normally dynamic.","A method of another embodiment of the invention determines an end-to-end mapping from a file system of an operating system running on a virtual machine to a storage volume of a SAN as follows. A virtual machine file system portion of the end-to-end mapping is determined. The virtual machine file system portion includes identification of the file system of the operating system running on the virtual machine. A virtual machine storage device portion of the end-to-end mapping and a virtual machine storage device definition portion of the end-to-end mapping are determined. The virtual machine storage device portion includes identification of a virtual machine storage device defined within the file system of the operating system running on the virtual machine. The virtual machine storage device definition portion includes a definition of the virtual machine storage device as provided by a management component managing the virtual machine.","The method further determines a physical computing device file system portion of the end-to-end mapping and a physical computing device storage device portion of the end-to-end mapping. The physical computing device file system portion includes a file system of a physical computing device on which the virtual machine is running. The physical computing device storage device portion includes identification of a storage device defined within the file system of the physical computing device on which the virtual machine is running. The method also determines a SAN storage volume portion of the end-to-end mapping. The SAN storage volume portion includes identification of a storage volume of a SAN that implements the storage device defined within the file system of the physical computing device on which the virtual machine is running.","The method determines the virtual machine storage device portion and the virtual machine storage device definition portion of the end-to-end mapping by mapping a storage device as reported by the operating system running on the virtual machine to a definition of a virtual storage device as provided by the management component. Furthermore, the method maps the storage device as reported by the operating system running on the virtual machine to the definition of the virtual storage device as provided by the management component by using a storage interface controller number, such as a small computer system interface (SCSI) controller number, and a storage interface target identifier (ID), such as a SCSI ID, of the virtual storage device. Such usage correlates the storage device as reported by the operating system to the definition of the virtual storage device as provided by the management component. The storage interface controller number and the storage interface target ID are normally dynamic.","A computer-readable medium of an embodiment of the invention has one or more computer programs stored thereon for execution by one or more processors. Execution of the computer programs by the processors results in performance of a method for determining an end-to-end mapping from an operating system running on a virtual machine to a storage volume of a SAN. The method maps a storage device as reported by the operating system running on the virtual machine to a definition of a virtual storage device as provided by the management component managing the virtual machine. This mapping is achieved by using a small computer system interface (SCSI) controller number and a SCSI target identifier (ID) of the virtual storage device to correlate the storage device as reported by the operating system to the definition of the virtual storage device as provided by the management component.","A system of an embodiment of the invention includes a physical computing device, a SAN, a virtual machine, a management component, and a mechanism. The physical computing device has a file system that defines a storage device. The SAN has a SAN storage volume to physically implement the storage device defined by the file system of the physical computing device. The virtual machine runs on the physical computing device, and has an operating system and a virtual machine file system. The virtual machine file system has a virtual machine storage device. The virtual machine storage device is implemented by the storage device defined by the file system of the physical computing device. The management component runs on the physical computing device to manage the virtual machine, and maintains a virtual machine storage device definition of the virtual machine storage device. The mechanism determines an end-to-end mapping from the file system of the operating system running on the virtual machine to the SAN storage volume of the SAN.","A system of an embodiment of the invention includes a physical computing device, a SAN, a virtual machine, a management component, and a means. The physical computing device has a file system that defines a storage device. The SAN has a SAN storage volume to physically implement the storage device defined by the file system of the physical computing device. The virtual machine runs on the physical computing device, and has an operating system and a virtual machine file system. The virtual machine file system has a virtual machine storage device. The virtual machine storage device is implemented by the storage device defined by the file system of the physical computing device. The management component runs on the physical computing device to manage the virtual machine, and maintains a virtual machine storage device definition of the virtual machine storage device. The means is for determining an end-to-end mapping from the file system of the operating system running on the virtual machine to the SAN storage volume of the SAN.","Still other aspects and embodiments of the invention will become apparent by reading the detailed description that follows, and by referring to the accompanying drawings.","In the following detailed description of exemplary embodiments of the invention, reference is made to the accompanying drawings that form a part hereof, and in which is shown by way of illustration specific exemplary embodiments in which the invention may be practiced. These embodiments are described in sufficient detail to enable those skilled in the art to practice the invention. Other embodiments may be utilized, and logical, mechanical, and other changes may be made without departing from the spirit or scope of the present invention. The following detailed description is, therefore, not to be taken in a limiting sense, and the scope of the present invention is defined only by the appended claims.","Maintenance and management of a virtual machine that has its (virtual) storage device physically implemented by a storage volume of a SAN are more easily provided by utilizing embodiments of the present invention. This is because embodiments of the invention determine an end-to-end mapping from the file system of the operating system running on the virtual machine all the way to the storage volume of the SAN. As such, for example, a network administrator can easily view how a virtual machine is implemented, all the way the file system of the operating system of the virtual machine to the actual storage volume of the SAN that physically implements the (virtual) storage device of the virtual machine.","The mapping determined by embodiments of the invention thus recites how each virtual or physical component of a virtual machine configuration is implemented. The mapping is considered an end-to-end mapping in that the entirety of the configuration is specified, from one end of the configuration (i.e., the file system of the operating system of the virtual machine) to the other end (i.e., the storage volume of the SAN) of the configuration. If a network administrator is contemplating changes to a virtual machine configuration, he or she will thus be able to understand how such changes will affect the configuration, insofar as the administrator has knowledge of how the entire configuration is mapped from end-to-end.","Representative System and Overview",{"@attributes":{"id":"p-0026","num":"0025"},"figref":"FIG. 1","b":["100","100","102","104","102","104","104","102","110"]},"The computing device  has a native file system  that supports or defines storage devices like the storage device . The file system  specifies the approach that the computing device  employs for storing and retrieving files on the storage device . The file system  is specifically the system software that receives commands from an operating system to read and write disk clusters, or groups of sectors, on the storage device . The file system  manages a folder or directory structure, which provides an index to the files, and it defines the syntax used to access them, such as the how the path to a file is coded. The file system  can dictate how files are named as well as the maximum size of a file or volume. Examples of file systems include the extended-2 (ext2) and the extended-3 (ext3) file systems, which are typically used in conjunction with versions of the LINUX\u00ae operating system. Further examples of file systems include the UNIX\u00ae file system (UFS) and the z-Series file system (ZFS), which are typically used in conjunction with versions of the UNIX\u00ae operating system.","The storage device  of the file system  in the system  is particularly implemented by the storage volume  of the SAN . In this sense, the storage device  of the computing device  is not an actual physical storage device residing within the computing device , but rather refers to an actual physical storage device represented by the storage volume  of the SAN . The storage volume  of the SAN  may be a single physical storage device, such as a single hard disk drive, or it may be implemented over a number of physical storage devices of the SAN . However, from the perspective of the file system , the storage device  is used within the computing device  as if it were a physical storage device.","The computing device  supports a number of virtual machines, such as the virtual machine , which are managed by a management component , which may also be referred to as a hypervisor or a virtual machine monitor (VMM). The virtual machine  includes an instance of an operating system , along with one or more applications, running in an isolated partition within the computing device . Using virtual machines enables different operating systems to run on the same computing device  at the same time while preventing applications running on separate virtual machines from interfering with each other.","Each virtual machine running on the computing device  is effectively a \u201cmachine within the machine\u201d and functions as if it had exclusive access to the hardware resources of the computing device . The operating system  running on the virtual machine  is referred to as a \u201cguest operating system,\u201d and the operating system  communicates with the hardware of the computing device  via the management component . The management component  thus \u201cvirtualizes\u201d the hardware of the computing device  for each virtual machine running on the computing device .","The operating system  running on the virtual machine  may have a corresponding file system , which can be a different type of file system than the file system  of the computing device  as a whole. Where present, the file system  supports or defines a (virtual) storage device . The storage device  can be considered as a part of the file system  to some degree. The storage device  is virtual in the sense that it is implemented within a virtual machine , and does not represent an actual physical storage device. However, the operating system  accesses the storage device , via the file system , as if the storage device  were an actual physical storage device. Thus, all of the components of the virtual machine , including the operating system , the file system , and the storage device , are virtual at least in the sense that they are operating as part of the virtual machine .","The management component  is implemented in software, hardware, or a combination of software and hardware, and runs on the computing device  to manage the virtual machine . Examples of software that provides for the management component  and thus provides for the instantiation of virtual machines such as the virtual machine  include VMware\u00ae virtual machine software, including VMware\u00ae ESX Server virtual machine software, available from VMware, Inc., of Palo Alto, Calif. The management component  maintains a virtual machine definition , which defines the virtual machine . The virtual machine definition  indicates, for instance, the type of operating system  and the type of file system  running on the virtual machine .","Similarly, the management component  maintains a virtual storage device definition , which defines the storage device  of the virtual machine . The virtual storage device definition  defines which storage device of the computing device , through the file system , implements the storage device  of the virtual machine . For example, in , the virtual storage device definition  indicates that the storage device  is implemented by the storage device  via the file system , where the storage device  is in turn itself implemented by the storage volume  of the SAN .","It is noted that the storage volume  is assigned to the physical computing device , and not directly to the virtual machine . As such, the mapping between the virtual machine  to the storage volume  may not be a one-to-one mapping, since more than one virtual machine may be assigned to the storage volume . However, for descriptive clarity, just one virtual machine  is described herein as having a (virtual) storage device  that is ultimately implemented by the storage volume  of the SAN .","To permit a network administrator or other user to properly manage the virtual machine  via the management component , embodiments of the invention determine an end-to-end mapping from the file system  of the operating system  running on the virtual machine , to the storage volume  of the SAN  that implements the storage device  on which the storage device  is implemented.  shows an example of such an end-to-end mapping , according to an embodiment of the invention. The end-to-end mapping  includes, in order: a virtual machine file system portion , a virtual machine storage device portion , a virtual machine storage device definition portion , a physical computing device file system portion , a physical computing device storage device portion , and a SAN storage volume portion .","In the context of , the virtual machine file system portion  identifies the file system  of the virtual machine  running on the computing device . The virtual machine file system portion  is linked or mapped to the virtual machine storage device portion , as indicated by the bi-directional arrow . In the context of , the virtual machine storage device portion  identifies the storage device  of the virtual machine . The virtual machine storage device portion  is linked or mapped to the virtual machine storage device definition portion , as indicated by the bi-directional arrow . In the context of , the virtual machine storage device definition portion  identifies the virtual storage device definition  maintained by the management component .","The virtual machine storage device definition portion  is linked or mapped to the physical computing device file system portion , as indicated by the bi-directional arrow . In the context of , the physical computing device file system portion  identifies the file system  of the computing device . The physical computing device file system portion  is linked or mapped to the physical computing device storage device portion , as indicated by the bi-directional arrow . In the context of , the physical computing device storage device portion  identifies the storage device  of the computing device . The physical computing device storage device portion  is linked or mapped to the SAN storage volume portion , as indicated by the bi-directional arrow . In the context of , the SAN storage volume portion  identifies the storage volume  of the SAN .","Determining the end-to-end mapping  permits a network administrator or other user to discern in detail how the virtual machine  is related to the SAN  of  in detail. Each mapping from the components of the virtual machine  through components of the SAN  is clearly provided within the end-to-end mapping . As such, for example, a user wishing to modify the storage device  of the computing device  will know a priori that such modification affects the virtual machine  as end-to-end mapped to the SAN . This is because the end-to-end mapping  denotes that the storage device  of the virtual machine  is ultimately implemented by the storage volume  of the SAN  via the storage device .",{"@attributes":{"id":"p-0039","num":"0038"},"figref":["FIG. 3","FIG. 2"],"b":["300","200","300","300"]},"The method  maps the virtual machine  as reported by the operating system  running on the virtual machine  to the virtual machine definition  provided by the management component  managing the virtual machine  of  (). Determining this mapping effectively provides the virtual machine file system portion  of the end-to-end mapping  of . This is because the reporting of the virtual machine  by the operating system  can include identification of the file system  to which the virtual machine file system portion  corresponds. Alternatively, this is because the virtual machine definition  provided by the management component  managing the virtual machine  can include identification of the file system  to which the virtual machine file system portion  corresponds.","The method  maps the storage device  as reported by the operating system  running on the virtual machine  to the virtual storage device definition  provided by the management component  managing the virtual machine  of  (). Determining this mapping effectively provides the virtual machine storage device portion  and the virtual machine storage device definition portion  of the end-to-end mapping  of . This is because the storage device  reported by the operating system  corresponds to the virtual machine storage device portion , and the virtual storage device definition  provided by the management component  corresponds to the virtual machine storage device definition portion .","The method  maps the virtual storage device definition  provided by the management component  managing the virtual machine  to the storage device  of the physical computing device  on which the management component  and the virtual machine  are running in  (). Determining this mapping effectively provides the physical computing device file system portion  and the physical computing device storage device portion  of the end-to-end mapping  of . As to the latter, the storage device  of the computing device  corresponds to the physical computing device storage device portion , such that identifying the storage device  provides the physical computing device storage device portion . As to the former, because the file system  specifies the approach used to retrieve and store files on the storage device , and because the file system  supports the storage device , identifying the storage device  at least implicitly identifies the file system  that corresponds to the physical computing device file system portion .","The method  finally maps the storage device  of the physical computing device  on which the management component  and the virtual machine  are running to the storage volume  of the SAN  of  (). Determining this mapping provides the SAN storage volume portion  of the end-to-end mapping  of . This is because the SAN storage volume  corresponds to the SAN storage volume portion  of the end-to-end mapping .","In the next section of the detailed description, a method for determining the end-to-end mapping  of  is presented and described that is more detailed than but consistent with the method  of . This method is described in sufficient detail to enable one of ordinary skill within the art to make and use the invention. However, those of ordinary skill within the art can appreciate that deviations from the method can be made while still practicing the invention itself, which is defined only by the claims.","Detailed Method to Determine End-to-End Mapping",{"@attributes":{"id":"p-0045","num":"0044"},"figref":["FIG. 4","FIG. 2","FIG. 1","FIG. 1"],"b":["400","200","400","100","400","116","402","402","116"]},"Hereafter, the terminology \u201cMAC address of the machine\u201d is used as shorthand to mean \u201cMAC address of a network controller of the machine,\u201d as those of ordinary skill within the art can appreciate. It is therefore determined whether the MAC address of the machine on which the operating system  of  is running falls within a range of MAC addresses assigned by the management component  to virtual machines. If the MAC address of the machine on which the operating system  is running falls within this range of MAC addresses, then the method  in part  concludes that the machine on which the operating system  is running is in fact a virtual machine. This machine is specifically the virtual machine  in . If the machine has more than one network card, this condition is tested for the MAC address of each network card.","In response to determining that the operating system  is running on the virtual machine  in , the method  determines the end-to-end mapping  of  (). This is achieved by performing parts , , , and  of the method  of , which are now described in more detail. First, the virtual machine  is mapped to the virtual machine definition  (). In one embodiment, the MAC address of the virtual machine  is used to correlate the virtual machine , as reported by the operating system , to the virtual machine definition  as provided or maintained by the management component . If the virtual machine  has more than one network card, then the MAC addresses of all its network cards are used for this correlation.","Next, the virtual machine storage device  is mapped to the virtual storage device definition  of  (). In one embodiment, a small computer system interface (SCSI) controller number and a SCSI target identifier (ID) of the virtual storage device  is used to correlate the storage device  as reported by the operating system  to the virtual storage device definition  as provided by the management component . The SCSI controller number is a particular type of storage interface controller number, and the SCSI target ID is a type of storage interface target ID. Other types of storage interface controller numbers and target ID can be employed in embodiments of the invention, besides a SCSI controller number and a SCSI target ID.","SCSI is one type of storage interface. The SCSI controller number, and thus the storage interface controller number, is a number that at least substantially uniquely identifies a controller (as compared to other controllers within a machine and that have the same storage interface) to which a storage device is attached and by which the storage device is controlled. By comparison, the SCSI target ID, and thus the storage interface target ID, is an ID that at least substantially uniquely identifies a storage device (as compared to other storage devices having the same interface). Usage of a SCSI controller number and a SCSI target ID to map the storage device  of the virtual machine  to the virtual storage device definition  is particularly innovative and non-obvious, as is now described in detail.","In a physical machine, the SCSI controller number and\/or the SCSI target ID can change when a physical SCSI controller is replaced or moved from one slot to another slot within the physical machine, such as from one peripheral component interconnect (PCI) slot to another PCI slot. The changing, or dynamic, nature of the SCSI controller number and\/or the SCSI target ID renders them unlikely candidates to be employed to map a storage device like the storage device  of  to a storage device definition like the definition  of . This is because if the SCSI controller number and\/or the SCSI target ID change, then any mapping that relies on this number and\/or this ID is at best temporary, and may change from the time when the mapping is determined to the time when the mapping is actually used (e.g., when the end-to-end mapping  of  that relies on this mapping is used).","However, the inventors have novelly determined that in practice, the SCSI controller number and the SCSI target ID are highly unlikely at worst to change in the context of a virtual machine like the virtual machine . Therefore, employing the SCSI controller number and the SCSI target ID to map the storage device  of the virtual machine  to the virtual storage device definition  provided by the management component  is satisfactory. This insight is non-obvious and innovative because the SCSI controller number and the SCSI target ID are known to change and thus are normally dynamic, such that one of ordinary skill within the art would not ordinarily use this number or ID as a way to determine a mapping. Against this prior art knowledge that teaches away from such usage of the SCSI controller number and the SCSI target ID, the inventors have nevertheless determined that using the SCSI controller number and the SCSI target ID are acceptable to within the context of a virtual machine like the virtual machine .","The method  next maps the virtual storage device definition  to the storage device  of the physical computing device  in  (). In one embodiment, an application programming interface (API) of the management component  is called to correlate the virtual storage device definition  to the physical computing device storage device . For example, the VMware\u00ae virtual machine software provides such an API that can be called to correlate the virtual storage device definition  to the storage device .","An API is a language or message format used by an application program, like virtual machine software, to communicate with the operating system or another computer program via a defined communications protocol. An API is implemented by making function calls to the application program in question, which provide the linkage to the subroutine to be executed to return the desired information and\/or perform the desired process represented by the API. Thus, an API implies that some program module is available within the application program in question, to perform an operation or return desired information, and that can be called by another computer program.","In other embodiments, an approach other than an API is employed. For example, a command line interface (CLI) command can be called, or the simple network management protocol (SNMP) can be employed. A CLI is an interface by which an application program can be called, in which arguments, such as those referred to as switches, can be specified, in order to return desired information. The SNMP is a network monitoring and control protocol. Information is passed from SNMP agents, and stored in a management information base (MIB), which can then be retrieved.","Storage within the computing device  can be provided to the virtual machine  in one of two ways. First, file mapping can be employed. File mapping uses a file on the storage device  as defined by the file system  to act as the virtual storage device  (as defined by the virtual storage device definition ) for the virtual machine  (as defined by the virtual machine definition ). The file has a size equal to the size of the storage device  in the virtual machine . The API can be called in this case to determine the file on the storage device  that corresponds to the virtual storage device  of the virtual machine .","Second, raw disk mapping can be employed. Raw disk mapping assigns the storage device  as a whole as the virtual storage device  for the virtual machine . Disk-access commands from the virtual machine  to the virtual storage device  are thus passed directly to the storage device . The API can be called in this case to determine that the virtual storage device  is mapped in a raw-disk manner to the storage device .","The method  finally maps the physical computing device storage device  to the storage-area or storage-array network (SAN) storage volume  of  (). In one embodiment, another API of the management component  is called, and a SAN management component of the SAN  is queried via an API of the SAN management component, to correlate the storage device  on the physical computing device  to the storage volume  of the SAN . For example, the VMware\u00ae virtual machine software provides such an API that can be called to correlate the storage device  to the SAN storage volume .","In one embodiment, the storage device  is identified by a logical unit number (LUN), which is retrieved by calling the API of the management component  of , by calling a CLI command of the management component , by employing SNMP, or by another approach. Information regarding the SAN storage volume  to which this LUN corresponds is then retrieved by querying the SAN management component of the SAN , such as via an API of the SAN management component. Such information can include the serial number of the SAN , as well as the serial number of the storage volume  itself In one embodiment, the SAN management component may be a common information model (CIM) object manager (OM), or CIMOM, which manages the SAN  and its constituent storage volumes like the volume .","Once the method  has determined the end-to-end mapping  of  in part , the method  can effectively manage the virtual machine  of  using this end-to-end mapping  (). For example, a network administrator or other user that is contemplating changes to the virtual storage device  of the virtual machine , the storage device  of the computing device , or the storage volume  of the SAN  is able to know a priori that such changes will affect the virtual machine . This is because the end-to-end mapping  maps the file system  of the operating system  running on the virtual machine , including the virtual storage device , on a component-by-component (i.e., on a portion-by-portion) basis to the storage volume  of the SAN . Thus, contemplating a change to any component or portion of this mapping can be considered in light of that change's effect on the virtual machine , due to the knowledge provided by the end-to-end mapping .","Exemplary System Implementation",{"@attributes":{"id":"p-0060","num":"0059"},"figref":["FIG. 5","FIGS. 3 and 4","FIG. 2","FIG. 1","FIG. 5","FIG. 5"],"b":["500","300","400","200","500","100","500","100"]},"In the system , the storage-area or storage-array network (SAN)  includes a SAN management component , as has been described in the previous section of the detailed description. The SAN management component  may be a common information model (CIM) object manager (OM), or CIMOM, which manages the SAN  and its constituent storage volumes like the volume .  also depicts a process  running on the operating system  of the virtual machine , a process  running on the management component  that manages the virtual machine  on the computing device , a process  running on the SAN management component , and a process . The processes , , , and  are software, but run on hardware, such that they can be considered as being implemented at least partially by or in hardware.","The process  in one embodiment runs on the physical computing device  outside of the virtual machine , and outside the management component , such as within an operating system of the computing device  that is not part of any virtual machine (not shown in ). In another embodiment, the process  runs on a computing device other than the physical computing device , which may be a server computing device responsible for maintaining all the computing devices, such as the device , on which virtual machines are running. In either case, the process  may be considered as a process that manages the other processes , , and  to obtain the mappings, correlations, and other information used to determine the end-to-end mapping  of .","A process as used in the context of embodiments of the invention can be considered as the actual running of at least a portion of one or more computer programs. For example, if two instances of the same computer program are launched, then two processes are considered to be running. A process may itself have one or more threads, which are sub-processes that may be able to execute in parallel to improve performance of the process in question.","The processes , , , and  together constitute a mechanism to determine the end-to-end mapping  of  from the file system  of the operating system  running on the virtual machine  to the storage volume  of the SAN . In one embodiment, the processes , , , and  together can be considered as a means for performing this functionality. As such, this mechanism or means performs parts , , , and  of the methods  and  of , and part  of the method , as have been described above. The process  interacts with the processes , , and  in order to determine the end-to-end mapping . The process  may maintain a database, for instance, that stores the information reported by the processes , , and  that represents the end-to-end mapping .","The process  running on the operating system  of the virtual machine  provides information to assist performance of parts  and  of the methods  and  of  and part  of the method . For example, the process  provides information regarding the identity of the virtual machine , regarding the identity of the virtual storage device , and regarding the file system . The process  running on the management component  provides information to assist performance of parts , , , and  of the methods  and  and part  of the method . For example, the process  provides information regarding the virtual machine definition , regarding the virtual storage device definition , regarding the identity of the storage device , and regarding the file system .","The process  running on the SAN management component  of the SAN  provides information to assist performance of part  of the methods  and  of . For example, the process  provides information regarding the identity of the storage volume . The process  thus instructs the processes , , and  to collect their relevant information in order to perform the methods  and  of . The process  can store this information in a database, can construct the end-to-end mapping  of , and can also store the end-to-end mapping  in the database. The database is subsequently queryable by during management of the virtual machine  in part  of the method  so that the specifics of the end-to-end mapping  can be learned.","Alternative Method and Conclusion","In conclusion,  shows a method  to determine the end-to-end mapping  of , according to another embodiment of the invention. The method  approaches the determination of the end-to-end mapping  in a different way than the methods  and  of , respectively. The method  is described in the context of the end-to-end mapping  of , and in the context of the system  of .","The method first determines whether the operating system  of  is running on a virtual machine (), as has been described above in relation to the method  of . In response to determining that the operating system  is running on the virtual machine , the method  determines the end-to-end mapping  of  (). This is achieved by performing parts , , , and .","First, the virtual machine file system portion  of the end-to-end mapping  of  is determined (). The virtual machine file system portion  includes identification of the file system  of the operating system  running on the virtual machine . Part  can be implemented by performing part  of the methods  and  of  in one embodiment.","The virtual machine storage device portion  and the virtual machine storage device definition portion  of the end-to-end mapping  of  is determined next (). The virtual machine storage device portion  includes identification of the virtual storage device  defined within the file system  of the operating system  of the virtual machine  of . The virtual machine storage device definition portion  includes the virtual storage device definition . Part  can be implemented by performing part  of the methods  and  of  in one embodiment.","The physical computing device file system portion  and the physical computing device storage device portion  of the end-to-end mapping  of  is then determined (). The physical computing device file system portion  includes identification of the of the file system  of the computing device  on which the virtual machine  of  is running. The physical computing device storage device portion  includes identification of the storage device  defined within the file system . Part  can be implemented by performing part  of the methods  and  of  in one embodiment.","The storage-area or storage-array network (SAN) storage volume portion  of the end-to-end mapping  of  is finally determined (). The SAN storage volume portion  includes identification of the storage volume  of the SAN  that implements the storage device  defined within the file system  of the physical computing device  of . Part  can be implemented by performing part  of the methods  and  of  in one embodiment.","The method  concludes in one embodiment by managing the virtual machine  of  using the end-to-end mapping  of  that has been determined (), as has been described above in relation to the method  of . It is finally noted that, although specific embodiments have been illustrated and described herein, it will be appreciated by those of ordinary skill in the art that any arrangement calculated to achieve the same purpose may be substituted for the specific embodiments shown. This application is thus intended to cover any adaptations or variations of embodiments of the present invention. Therefore, it is manifestly intended that this invention be limited only by the claims and equivalents thereof."],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"BRIEF DESCRIPTION OF THE DRAWINGS","p":["The drawings referenced herein form a part of the specification. Features shown in the drawing are meant as illustrative of only some embodiments of the invention, and not of all embodiments of the invention, unless otherwise explicitly indicated, and implications to the contrary are otherwise not to be made.",{"@attributes":{"id":"p-0017","num":"0016"},"figref":"FIG. 1"},{"@attributes":{"id":"p-0018","num":"0017"},"figref":"FIG. 2"},{"@attributes":{"id":"p-0019","num":"0018"},"figref":["FIG. 3","FIG. 2"]},{"@attributes":{"id":"p-0020","num":"0019"},"figref":["FIG. 4","FIG. 2"]},{"@attributes":{"id":"p-0021","num":"0020"},"figref":["FIG. 5","FIG. 2","FIG. 1"]},{"@attributes":{"id":"p-0022","num":"0021"},"figref":["FIG. 6","FIG. 2"]}]},"DETDESC":[{},{}]}
