---
title: Methods and apparatus for in-pixel filtering in focal plane arrays
abstract: Digital focal plane arrays (DFPAs) with multiple counters per unit cell can be used to convert analog signals to digital data and to filter the digital data. Exemplary DFPAs include two-dimensional arrays of unit cells, where each unit cell is coupled to a corresponding photodetector in a photodetector array. Each unit cell converts photocurrent from its photodetector to a digital pulse train that is coupled to multiple counters in the unit cell. Each counter in each unit cell can be independently controlled to filter the pulse train by counting up or down and/or by transferring data as desired. For example, a unit cell may perform in-phase/quadrature filtering of homodyne- or heterodyne-detected photocurrent with two counters: a first counter toggled between increment and decrement modes with an in-phase signal and a second counter toggled between increment and decrement modes with a quadrature signal.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08605853&OS=08605853&RS=08605853
owner: Massachusetts Institute of Technology
number: 08605853
owner_city: Cambridge
owner_country: US
publication_date: 20110908
---

{"@attributes":{"id":"description"},"RELAPP":[{},{}],"heading":["CROSS-REFERENCE TO RELATED PATENT APPLICATION","GOVERNMENT SUPPORT","BACKGROUND","SUMMARY","DETAILED DESCRIPTION","CONCLUSION"],"p":["This application claims a priority benefit, under 35 U.S.C. \u00a7119(e), of U.S. Provisional Application Ser. No. 61\/503,918, filed Jul. 1, 2011, and entitled, \u201cMethods and Apparatus for In-Pixel Filtering in Focal Plane Arrays,\u201d which application is hereby incorporated herein by reference in its entirety.","This invention was made with government support under Contract No. FA8721-05-C-0002 awarded by the Department of Defense. The government has certain rights in the invention.","Focal plane arrays (FPAs) are two-dimensional arrays of photodetectors disposed in the focal plane of a lens for imaging, spectrometry, lidar, wave-front sensing, and other applications. Conventional FPAs typically provide analog readouts, with the analog signals generated at the pixel level converted to digital signals by external analog-to-digital converters (ADCs). Once converted by the external ADCs, the digital signals may be processed according to the demands of a particular application.","Fundamental limitations on the photodetector dynamic range, active area, and readout noise floor limit the practical scalability of conventional FPAs. For example, decreasing the size of capacitors used to store accumulated photocurrents causes the data transfer rate (also known as the frame rate) to increase beyond acceptable limits. Similarly, electronics noise and ringing limit the amount of data that can be transmitted on a single output tap to maintain the desired signal-to-noise ratio (SNR) and dynamic range. Attempting to scale conventional analog technology to meet more demanding performance requirements leads to an FPA that is significantly large and complex, and consumes excessive power for most applications.","In some examples of focal plane arrays, each pixel of the FPA may be referred to as a \u201cunit cell\u201d that includes circuitry for processing electric signals associated with the pixel. In various implementations, each unit cell may include one or more of: 1) a photodetector to receive incident radiation and provide an analog electric signal in response to the incident radiation; 2) an analog-to-digital converter (an \u201cin-pixel ADC\u201d) to convert the analog electric signal to a digital signal; and 3) additional circuitry (e.g., digital logic) to process the digital signal and provide pixel data output (such additional circuitry also is referred to herein generally as \u201cin-pixel digital processing circuitry\u201d). Accordingly, it should be appreciated that, in some implementations, respective unit cells of an array may not necessarily include the photodetector itself, but instead include only the in-pixel ADC, and in some cases in-pixel digital processing circuitry to process the digital signal output by the in-pixel ADC (i.e., the analog signal applied to the in-pixel ADC is received from an external source). Furthermore, in some implementations, the digital signal output by the ADC may in some instances be provided directly as pixel data output for the corresponding pixel, while in other instances, this digital signal may be further processed by the in-pixel digital processing circuitry to provide the pixel data output.","In some implementations of such arrays, the digital signal provided as an output of an in-pixel ADC may include a series of pulses (e.g., via an in-pixel ADC implemented as a voltage-to-frequency or current-to-frequency converter). In such implementations, the series of pulses serving as the digital signal may be applied to the in-pixel digital circuitry, which in turn provides the pixel data output. The inventors have recognized and appreciated that, by providing additional circuitry in each pixel that may be flexibly configured to receive the series of pulses and implement various digital processing functionality on the series of pulses within a given pixel, a wide variety of advantageous processing (e.g., filtering) techniques may be realized. Moreover, the inventors further have recognized and appreciated that by extending such flexibility of configuring in-pixel digital circuitry to respective pixels of an array (e.g., the in-pixel digital circuitry of respective pixels may be configured to perform identical or different digital processing functionality), a number of rich processing capabilities may be realized in an array architecture.","In view of the foregoing, various inventive methods, apparatus and systems disclosed herein relate generally to digital processing circuitry disposed in respective pixels of an array, in which such digital processing circuitry may be flexibly configured\/controlled to function in various operating modes within a given pixel, and\/or in similar or different operating modes from pixel to pixel in the array. In various embodiments, variably controllable in-pixel digital processing circuitry may be particularly configured to process digital signals in the form of a series of pulses, and such circuitry may be implemented in any of a variety of manners (generally based at least in part on digital logic). Examples of in-pixel digital processing circuitry contemplated by various embodiments disclosed herein include, but are not limited to, one or more of the following elements, alone or in combination: logic gates, flip-flops, registers (e.g., shift registers), multiplexers, digital counters, and the like. In some implementations, in-pixel digital processing circuitry may be implemented in the form of one or more \u201cstate machines\u201d having multiple selectable operating modes to provide pixel data output based on a series of pulses applied to the state machine(s).","As noted above, in various aspects, in-pixel digital processing circuitry for a given pixel may be controllable to function in one of multiple possible operating modes to provide various processing functionality in connection with a received series of pulses. Furthermore, respective in-pixel digital processing circuitry of multiple pixels in an array similarly may be controlled to provide various processing functionality, independently of one another, such that similar or different digital processing functionality may be realized amongst multiple pixels in the array.","More specifically, in one exemplary embodiment, an apparatus according to the inventive concepts described herein is implemented as a digital focal plane arrays (DFPAs) comprising multiple unit cells. Each unit cell includes an analog-to-digital converter (ADC) to convert an analog signal (e.g., representing radiation incident on a photodetector) to a digital signal. In one aspect, the digital signal include a series of pulses. Each unit cell further comprises in-pixel digital processing circuitry to receive the series of pulses and provide pixel output data based at least in part on the series of pulses. In another aspect, the in-pixel digital processing circuitry comprises multiple independently controllable counters that may be respectively configured to function in one of multiple operating modes (e.g., count up, count down) to provide various processing functionality in connection with the series of pulses. In yet another aspect, each of the multiple counters in a given pixel may receive a control signal (e.g., provided by an external controller) to select a particular operating mode of the counter. In yet other aspects, such multiple counters in a given pixel may be controlled so as to select particular respective operating modes to provide a wide variety of in-pixel digital processing functionality; furthermore, in-pixel digital processing circuitry of multiple pixels (each including multiple counters) may be independently controlled (to select similar or different operating modes for the in-pixel digital processing circuitry of different pixels in the array) so as to implement various filtering techniques.","In sum, one embodiment of the present invention is directed to an apparatus for counting pulses in a series of pulses representing an analog signal. The apparatus comprises an integrated circuit including a plurality of unit cells. The plurality of unit cells comprise a first unit cell including first in-pixel digital circuitry, and a second unit cell including second in-pixel digital circuitry. The first in-pixel digital circuitry receives a first series of pulses representing a first analog signal, and further receives a first control signal to select at least one of a plurality of first operating modes for the first in-pixel digital circuitry to process the first series of pulses. The second in-pixel digital circuitry receives a second series of pulses representing a second analog signal, and further receives a second control signal to select at least one of a plurality of second operating modes for the second in-pixel digital circuitry to process the second series of pulses. In one aspect, the first control signal and the second control signal are provided such that the at least one first operating mode for the first in-pixel digital circuitry and the at least one second operating mode for the second in-pixel digital circuitry are different. In another aspect, the first in-pixel digital circuitry includes at least one first state machine, and the second in-pixel digital circuitry includes at least one second state machine, wherein the at least one first state machine and the at least one second state machine are independently controllable based at least in part on the first control signal and the second control signal.","Another embodiment is directed to an apparatus for counting pulses in a series of pulses representing an analog signal. The apparatus comprises an integrated circuit including a plurality of unit cells. At least one unit cell in the plurality of unit cells comprises a plurality of counters operably configured to count at least one pulse in the series of pulses representing the analog signal, wherein at least one counter in the plurality of counters is configured to be switched from a first operating mode to a second operating mode independently of operating modes of the other counters in the plurality of counters.","Another embodiment is directed to a method of counting pulses in a series of pulses representing an analog signal in at least one unit cell in an array of unit cells, wherein the at least one unit cell comprises a plurality of counters. The method comprises: switching at least one counter in the plurality of counters from a first operating mode to a second operating mode independent of operating modes of other counters in the plurality of counters; and changing a count in the at least one counter in response to at least one pulse in the series of pulses.","Another embodiment is directed to an apparatus for counting pulses representing an analog signal. The apparatus comprises: (A) a photodetector array comprising at least one photodetector to produce a photocurrent at an intermediate frequency in response to detection of a modulated signal and a local oscillator signal; (B) a clock to provide in-phase and quadrature clock signals at the intermediate frequency; and (C) an integrated circuit operably coupled to the photodetector array and the clock, the integrated circuit comprising a plurality of unit cells. At least one unit cell in the plurality of unit cells comprises: (i) a converter to convert the photocurrent from the at least one photodetector in the photodetector array to a series of pulses, (ii) an in-phase counter to count pulses in the series of pulses in response to the in-phase clock signal, and","(iii) a quadrature counter to count pulses in the series of pulses in response to the quadrature clock signal.","It should be appreciated that all combinations of the foregoing concepts and additional concepts discussed in greater detail below (provided such concepts are not mutually inconsistent) are contemplated as being part of the inventive subject matter disclosed herein. In particular, all combinations of claimed subject matter appearing at the end of this disclosure are contemplated as being part of the inventive subject matter disclosed herein. It should also be appreciated that terminology explicitly employed herein that also may appear in any disclosure incorporated by reference should be accorded a meaning most consistent with the particular concepts disclosed herein.","Following below are more detailed descriptions of various concepts related to, and embodiments of, inventive methods, apparatus and systems for in-pixel filtering in focal plane arrays. It should be appreciated that various concepts introduced above and discussed in greater detail below may be implemented in any of numerous ways, as the disclosed concepts are not limited to any particular manner of implementation. Examples of specific implementations and applications are provided primarily for illustrative purposes.","Various inventive methods, apparatus and systems disclosed herein relate generally to digital processing circuitry disposed in respective pixels of an array, in which such digital processing circuitry may be flexibly configured\/controlled to function in various operating modes within a given pixel, and\/or in similar or different operating modes from pixel to pixel in the array. In various embodiments, variably controllable in-pixel digital processing circuitry may be particularly configured to process digital signals in the form of a series of pulses, and such circuitry may be implemented in any of a variety of manners (generally based at least in part on digital logic). Examples of in-pixel digital processing circuitry contemplated by various embodiments disclosed herein include, but are not limited to, one or more of the following elements, alone or in combination: logic gates, flip-flops, registers (e.g., shift registers), multiplexers, digital counters, and the like. In some implementations, in-pixel digital processing circuitry may be implemented in the form of one or more \u201cstate machines\u201d having multiple selectable operating modes to provide pixel data output based on a series of pulses applied to the state machine(s).","In various aspects, in-pixel digital processing circuitry for a given pixel may be controllable to function in one of multiple possible operating modes to provide various processing functionality in connection with a received series of pulses. Furthermore, respective in-pixel digital processing circuitry of multiple pixels in an array similarly may be controlled to provide various processing functionality, independently of one another, such that similar or different digital processing functionality may be realized amongst multiple pixels in the array.","More specifically, some embodiments of the present invention include digital focal plane arrays (DFPAs) with multiple unit cells, each of which includes an analog-to-digital converter (ADC) coupled to multiple independently controllable counters. The ADC converts analog data, such as photocurrent from a detector array, to digital data that is counted by and stored in the independently controllable counters.","For the purposes of the present disclosure, \u201ca plurality of independently controllable counters\u201d is a set of two or more counting elements in which the operating mode of each counting element can be selected regardless of the operating mode of the other counting element(s) in the plurality of independent controllable counters. In other words, the setting of an independently controllable counter in a given unit cell is not contingent on the setting of any other counter in the given unit cell.","Illustrative counters can be controlled independently by logic in the form of respective control signals and\/or respective switches as described below. For instance, logic in the unit cell may activate (and deactivate) the counters in the unit cell and shift data among the counters in the unit cell. The logic, in conjunction with inter-cell transfer circuitry, can also shift data from the counters in one cell to counters in other unit cells and\/or to external memory or external processors. For more on transferring data among unit cells, see U.S. Patent Application Publication No. 2007\/0075888 and U.S. Patent Application Publication No. 2010\/0226495, each of which is incorporated herein by reference in its entirety.","The independently controllable counters in inventive DFPAs can be used to apply one or more temporal filters, facial filters, and\/or spatial-temporal filters simultaneously to imagery directly on the focal plane. For example, the counters in an inventive DFPA may implement multiple matched spatial filters to find signals of interest within an image. Inventive DFPAs may also perform focal-plane intensity thresholding of match-filtered images to eliminate irrelevant information, such as background signal or static elements. Matched filtering, intensity thresholding, and other processing capabilities of inventive DFPAs can be used to reduce off-chip data rates and processing needs for sensors and systems. In addition, inventive DFPAs can also be used to reduce the size(s) of sensors and sensing systems because they eliminate the need for external processors.","Digital Focal Plane Arrays with Independently Controllable Counters",{"@attributes":{"id":"p-0040","num":"0039"},"figref":["FIG. 1","FIG. 1","FIG. 1","FIG. 1"],"b":["10","100","200","10","200","202","1","202","202","202","200","102","1","102","102","102"],"i":["n","n"]},{"@attributes":{"id":"p-0041","num":"0040"},"figref":["FIG. 2","FIG. 1"],"b":["102","100","110","101","102","101","111","110","101","111","111"]},"A multiplexer  coupled to the ADC  receives the pulses  and couples the pulses  to a set of independent controllable digital counters  depending on the state of a binary control signal CLSEL. When the binary control signal CLSEL is in a first state (e.g., a logical high state), the multiplexer  couples an externally provided read-out clock signal ROCLK to the counters  to shift data out of the counters  as described below. When the binary control signal CL_SEL is in a second state (e.g., a logical low state), the multiplexer  couples the pulses  to one or more of the counters .","Each counter  may increment or decrement its respective count in response to the pulses  depending on its respective state, which is set by signal processing logic  and control logic . The counters  store the accumulated pulses , or counts, as digital data that can be shifted among counters  in the unit cell  and transferred out of the unit cell . Exemplary counters  can be implemented by grouping together D flips-flops in an asynchronous ripple counter that can also be used as a shift register to shift data into adjacent unit cells  by asserting the binary control signal CLKSEL and providing the external readout clock ROCLK as described above. When the counters  are in shift register mode, orthogonal transfer circuitry  couples digital data stored in the counters via an output buffer  (described below) according to instructions from the signal processing logic  and\/or control logic .","Independently Controllable Counters",{"@attributes":{"id":"p-0045","num":"0044"},"figref":"FIG. 3","b":["130","132","132","132","132","144","134","130"]},"Depending on the operating mode, the configuration multiplexer  selects one of the following input signals: QOUT, which is the output of the unit cell ; QINT, which is the output of the D flip-flop ; QBARINT, which is the complement of the output of the D flip-flop ; DIN, which receives data from another counter  in the unit cell  and\/or from other unit cells  in the DFPA ; BINH, which is an arithmetic shift right operation; and BINL, which is a rotate left operation . . . . Similarly, the clock selection multiplexer  selects between the counter clock CTRCLK and read-out clock ROCLK. Other independently controllable counter architectures fall within the scope of the present invention, including independently controllable counters with more flip-flops (e.g., to store more than one bit of data) storage elements other than flip-flops, and\/or different switching arrangements. In addition, other counters may include multiplexers with fewer or more inputs depending on the desired application.","The control inputs to the multiplexers  and  set the counter  to operate in any of the operating modes listed in TABLE 1 (below). The operating mode determines which of the two clocks and six data inputs feed into the flip-flop . The first letter of the operating mode name corresponds to the input clock: C is for the ripple counter clock and S corresponds to the readout, or shift, clock. The counter clock is used for counting operations when integrating photocurrent, and the readout clock is used for shifting data into adjacent pixels and performing other synchronous operations.","The subsequent letter(s) of each mode name correspond to the data input selected by the configuration multiplexer  using the one-hot select signal DCTRL[5:0]. Region of interest (ROI) mode is for a region of interest write operation, described in greater detail below. The input for this mode comes from the bidirectional QOUT bus. When the ROI tristate buffer is tristated, the QOUT bus is driven with ROI write data by the QCOL and QROW buses rather than the value stored in the D flip-flop . QBAR inputs the negated version of the flip-flop output to toggle the D flip-flop . Q inputs the positive version of the flip-flop output so that the D flip-flop  holds state regardless of the clock input. This is a safe mode that can be used when the clock inputs are changed to prevent unexpected clock pulses. DIN is for the external data input, which shifts in data from an adjacent unit cell and can be used for an OTS shift or to read data out of the array. BINH is for an arithmetic shift right (ASR), and BINL is for a rotate left (ROL). Both are part of the barrel shifter functionality.","The MODE signal is the external input that is used to control the counting mode. The MODE control signal includes six bits, of which the lower four control the counter clock and input data. The upper two bits select the orthogonal shift direction. DCTRL and CLKSEL are both internal signals that are generated from MODE[3:0]. DCTRL[5:0] is a one-hot control signal which selects one of the six flip-flop inputs. CLKSEL selects between the ripple counter clock and the readout clock. When CLKSEL is high, the pixel is in readout mode; when it is low, the pixel is in counter mode. Note that CLKSEL corresponds directly to MODE[3].","The sixteen modes listed in TABLE 1 implement significant functionality for the independently controllable counter  (and the unit cell  that includes the counter ). The CQBAR mode is used for normal counting operation when reading data from the photodiode array. The SROI mode is used to write data from the ROI row and column buses into a pixel. The SQBAR mode is used to toggle the counter for a ones complement negation.","The SDIN mode shifts data in from an adjacent pixel. The shift direction is determined by MODE[5:4]. The SBINH mode is used to perform an arithmetic right shift and the SBINL mode is used to perform a left rotate. The CQ and SQ modes are used as safe modes when the input clock is changed. For example, if the counter is operating in CQBAR mode, to change to SQBAR mode, one can first change to CQ mode, then SQ mode, then SQBAR, to ensure that the counter  sees only the intended clock pulse. To ensure that more than one DCTRL bit is not selected during a transient condition, the COPEN and SOPEN mode should be used as an intermediate step between mode transitions.","Setting one-hot control signals DCTRL[5:0] and CLKSEL to choose input QBARINT and the counter clock CTR_CLK puts the counter  into an asynchronous ripple counter mode in which it accepts the complement output from another counter  in the same unit cell . For shift register operation, the one-hot control signals DCTRL[5:0] and CLKSEL are set to choose input DIN and the shift register read-out clock RO_CLK and for synchronous complement, the one-hot control signals DCTRL[5:0] and CLKSEL are set to input QBARINT and shift register read-out clock RO_CLK. The input QINT can be used to avoid unwanted data corruption during mode transitions, as any spurious clock edges then have no effect. In other examples, the counter  may operate in a count-up mode in which it increments its stored count in response to a pulse ; a count-down mode in which it decrements its stored count in response to a pulse ; an inactive or sleep mode in which it does not respond to pulses ; and\/or a shift mode in which it transfers data via an inverter  and a pair of tristate buffers  and , which can be used to gate the counter output as described below.",{"@attributes":{"id":"p-0053","num":"0052"},"tables":{"@attributes":{"id":"TABLE-US-00001","num":"00001"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"center"}},"thead":{"row":{"entry":"TABLE 1"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}},{"entry":"Example encoding of counter\/register modes using DCTRL"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"5"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"35pt","align":"center"}},{"@attributes":{"colname":"3","colwidth":"56pt","align":"center"}},{"@attributes":{"colname":"4","colwidth":"70pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"Mode Name","CLKSEL","DCTRL[5:0]","Operating Mode"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"4","align":"center","rowsep":"1"}}]},{"entry":[{},"CROI","0","000001",{}]},{"entry":[{},"CQBAR","0","000010","Ripple Count Mode"]},{"entry":[{},"CQ","0","000100","Protect State used"]},{"entry":[{},{},{},{},"in Mode Transition"]},{"entry":[{},"CDIN","0","001000"]},{"entry":[{},"CBINH","0","010000"]},{"entry":[{},"CBINL","0","100000"]},{"entry":[{},"COPEN","0","000000","State Transition"]},{"entry":[{},"COPEN2","0","000000"]},{"entry":[{},"SROI","1","000001","Random-Access"]},{"entry":[{},{},{},{},"Read-In"]},{"entry":[{},"SQBAR","1","000010","Ones Complement"]},{"entry":[{},"SQ","1","000100","Protect State used"]},{"entry":[{},{},{},{},"in Mode Transition"]},{"entry":[{},"SDIN","1","001000","Shift in Data"]},{"entry":[{},"SBINH","1","010000","Right Shift"]},{"entry":[{},"SBINL","1","100000","Left Shift"]},{"entry":[{},"SOPEN","1","000000","State Transition"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"4","align":"center","rowsep":"1"}}]}]}}]}}},"Referring again to , two paths in the counter  are illustrated: a count mode path (dot\/dash line) and a readout mode path (dotted line). In count mode (CQBAR), the inverter  provides an output QBARINT, which is the complement of the flip-flop output Q, feeds back into the data input D of the D flip-flop . In some counting modes, the counter clock CLK may be supplied by the output from another counter  in the unit cell. In an asynchronous ripple counting mode, for instance, two or more independently controllable counters  may be arranged in series such that the output of the first counter  in the series serves as the input to the second counter  in the chain and so on. Alternatively, the input to the counter clock CLK may be one or more pulses  from the ADC  (). In readout mode (SDIN), the shift clock is active, and the flip-flop input D is set to the DIN bus, which is connected to the OTS tristate inverter  of an adjacent counter  in the same unit cell.","The counter  shown in  performs bidirectional counting using ones complement synchronous negation instead of performing an up\/down count operation. Specifically, the counter performs a complement-count-complement operation to get a result equivalent to a backwards count operation. To perform ones complement negation of the counter value, the D flip-flop  can be toggled using the QBAR input. This corresponds to counter mode SQBAR, or readout clock with negated input. For background subtraction or change detection, the counter  can be configured to count up and then count down, each for the same integration period. To count up, the normal counting mode is used. To count down, the value of the counter is negated using one's complement, and counting continues. A second ones complement negation completes the down counting operation to restore the D flip-flop's positive value.","Alternatively, replacing the complement bubble on the D flip-flop  with an XOR gate allows for true count-down operation. In this implementation, if the output of clock multiplexor  is connected to one input of the XOR and a direction control signal is connected to the other input, then the direction control signal can be used to choose either count-up or count-down operation.","The independently controllable counter  also includes a first tristate inverter  and a second tristate inverter  that provide random access readout and synchronous shift register readout of data stored in the D flip-flop . Each tristate inverter ,  inverts the complement output signal QBARINT when its respective control signal is asserted to provide an output that matches the bit stored in the D flip-flop . In shift register readout mode, data is output to an adjacent counter via an output OTS_OUT of the orthogonal transfer tristate inverter . In random access readout mode, the counter  emits data via an output QOUT of the ROI tristate buffer .","Together, the inverters  and  form a gating circuit used to ensure that the counter  does not perform any unnecessary switching activity. Enabling the second tristate inverter  while clocking the counter  with the read-out clock RO_CLK (e.g., by asserting the clock select signal CLKSEL) causes the second tristate inverter  to output the value stored in the D flip-flop  when in synchronous count mode, but not in asynchronous ripple count mode. Preventing the counter  from broadcasting its value while it is counting is a power saving feature.","An alternative implementation that can accommodate both counting and shifting includes a logic gate, such as a NAND gate, instead of a tristate inverter. Referring again to , the tristate inverter outputting OTS_OUT can be replaced by a NAND gate with inputs QBARINT and CLKSEL. In this case, the NAND gate prevents unnecessary toggles on the shift register output node OTS_OUT during count mode.","Segmented Counter Structures",{"@attributes":{"id":"p-0061","num":"0060"},"figref":["FIG. 4","FIG. 4","FIG. 4"],"b":["400","400","130","130","0","130","17","130"]},"To count pulses from an analog source, such as the ADC  in , with the counter structure , the clock select signal CLKSEL is set to count mode (e.g., set to a logical low value), and the one-hot signal DCTRL[5:0] selects the appropriate input signal to feed into each counter . In ripple counting mode, pulses  from the ADC  () feed the zero-order counter -. On the falling-edge triggered clock input CTR_CLK, the complementary output QBAR from the zero-order counter - drives the input CLK of the first-order counter -, the complementary output QBAR from the first-order counter - drives the clock input CLK of the second-order counter -, and so on. The output from the highest-order counter - in the counter structure  may coupled to another unit cell  or other circuitry in the integrated circuit  via one or more (optional) buffers, if desired. Thus, counter - represents the least significant bit, counter - represents the second least significant bit, and so on up to counter -, which represents the most significant bit.","As described above, the counters  in the segmented counter structure  can be switched from counting mode(s) to read-out mode by changing the clock select signal CLKSEL, e.g., from a logical low value to a logical high value or vice versa. Switching the counter structure  from count mode to shift mode causes the counter structure  to behave as a shift register, where each counter  in the counter structure  transfers stored data to the next counter  in the counter structure  (e.g., counter - transfers data to counter -). For an integrated circuit  with a six-bit data bus connecting adjacent unit cells  and eighteen one-bit counters  per unit cell, it may take three clock cycles to transfer all eighteen bits from one unit cell  to an adjacent unit cell , other portion of the DFPA , or external memory (not shown).",{"@attributes":{"id":"p-0064","num":"0063"},"figref":["FIG. 5","FIG. 4","FIG. 5"],"b":["400","402","404","406","400"]},{"@attributes":{"id":"p-0065","num":"0064"},"tables":{"@attributes":{"id":"TABLE-US-00002","num":"00002"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"center"}},"thead":{"row":{"entry":"TABLE 2"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}},{"entry":"Segmented Counter Structure Control Signals"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"35pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"84pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"98pt","align":"center"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"Register Configuration","BITMODE"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"2","align":"center","rowsep":"1"}}]},{"entry":[{},"18 bit","000"]},{"entry":[{},"12 bit + 6 bit","001"]},{"entry":[{},"9 bit + 9 bit","010"]},{"entry":[{},"9 bit + 3 bit + 6 bit","011"]},{"entry":[{},"6 bit + 12 bit","100"]},{"entry":[{},"6 bit + 6 bit + 6 bit","101"]},{"entry":[{},"6 bit + 3 bit + 9 bit","110"]},{"entry":[{},"6 bit + 3 bit + 3 bit + 6 bit","111"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"2","align":"center","rowsep":"1"}}]}]}}]}}},"Each segment (e.g., six-bit counter  or nine-bit counter ) may be implemented as one or more concatenated independently controllable counters , each of which has pins for its own enable signals (GATE, GATE, etc.). and clock inputs as described above. Because each counter  can be enabled and\/or clocked independently of the other counters  in the counter structure , each counter  can operate with a different integration time and\/or implement a different filter kernel as described below. These segments are cascaded via either the configuration multiplexers  internal to each counter , external multiplexers coupled between counters of the counter structure, and\/or other additional switches, which allows each subsequent segment to be clocked by either the MSB of the previous segment or an independent external clock.","Alternatively, the segments may be clocked independently with the output of one or more ADCs. For a unit cell  () with an ADC  that includes a current-to-frequency converter, voltage-to-frequency converter, or other pulse-emitting ADC, the external clocks (CLK, CLK, etc.) may correspond to pulses  emitted by the ADC . In unit cells with multiple pulse-emitting ADCs, each clock  and\/or each segment may be connected to the output of a different ADC.","Shifting and Operating on Data with Segmented Counter Structures","Referring again to , the configuration multiplexer  in each individual independently controllable counter  has a \u201cDIN\u201d port that allows for data to be shifted in, e.g., from a different unit cell  in the DFPA . It is also possible to use the data input port DIN to perform shift-based operations, including a barrel shift, which is useful for performing power-of-two multiplication and division and for other purposes. In shift-based operating modes, the DIN input of each counter  in the counter structure  or segment of the counter structure  is connected to the output of an adjacent bit (next higher or lower in significance). For an arithmetic shift, the counter representing the LSB or MSB is connected to a reset value (e.g., ground GND), which may be selected to allow for sign extension. For a rotate operation, the output of the counter representing the MSB is connected to the input of the counter representing the LSB.","In barrel shift mode, a group of counters  in shift-register mode shifts a data word by a specified number of bits in one clock cycle. The counters  in the segmented counter structure  () can be switched to (and\/or from) barrel shift mode using the external input signal DCTRL[5:0]. Specifically, the lower four bits of DCTRL[5:0] specify the inputs of the counters  for barrel shifting. These counter modes and the corresponding values of DCTRL[3:0] are given in TABLE 1. Counter mode SBINL and the BINL counter input correspond to a rotate left operation (i.e., a left shift), and counter mode SBINH and the BINH counter input correspond to an arithmetic shift right operation (i.e., a right shift). Based on the configuration of the counter structure , the bitmode signals (BITMODE [0:2]) given in TABLE 2 select between the shift value and the counter value for correct shifting operation.",{"@attributes":{"id":"p-0071","num":"0070"},"figref":"FIG. 6A","b":["400","406","406","406","406","406"],"i":["a","b","c "]},{"@attributes":{"id":"p-0072","num":"0071"},"figref":["FIG. 6B","FIG. 6B"],"b":["400","406"]},"Random Access of Values Stored in a Counter Structure","For some applications, a nondestructive random access approach for reading out data is more desirable than the synchronous shift register approach described above. For example, a nondestructive local query is particularly useful for reading out one or more particular regions of interest (ROI) or sampling the counter states at multiple sample times within a single integration period. Furthermore, it may be beneficial in some signal processing applications to preload counters  in one or more unit cells  without changing the contents of other unit cells  in the integrated circuit .",{"@attributes":{"id":"p-0075","num":"0074"},"figref":"FIG. 7","b":["102","100","714","712","710","712","102","146","102","102","714","718","714","714"]},"The column bus  can also accommodate write operations in which data is preloaded into one or more counters  in each of one or more unit cells  in the read-out integrated circuit . During a write operation, a write circuit  generates a voltage corresponding to ROI input data and couples the voltage to one or more selected unit cells  in a ROI along a selected column data bus  via an optional multiplexer . Referring to , the tristate inverters  in the selected unit cells  are set to tristate mode, and the control input DCTRL is set to \u201cROI\u201d mode, e.g., using the row decoder . In other words, the configuration multiplexer  in each selected unit cell  is set clock data on input QOUT (from the QOUT node of the tristate inverter ) into the D flop-flop . The row decoder  may be used to locally configure the input DCTRL so that one or more rows of unit cells  are set to receive the input QOUT while the other unit cells  in the integrated circuit  are set to receive the input QINT.","Temporal Filtering with Multiple Independently Controllable Counters per Unit Cell","DFPAs with multiple independently controllable counters per unit cell can be used to filter incident signals in the time domain by incrementing, decrementing, and\/or transferring data among counters in each unit cell and\/or among counters in different unit cells. They also enable new sensing modalities, such as coherent detection, for improved receiver sensitivity and optical dispersion compensation. For example, the simultaneous application of temporally matched filters in one or more unit cells can be used to estimate the amplitude and phase of one or more (pixel) or groups of pixels in a signal image, e.g., through in-phase and quadrature demodulation (described below).","On-chip spatial filtering can be implemented using the up\/down counting and array shifting functions. Additionally, in-pixel temporal matched filters can be utilized to detect intermediate-frequency signals while rejecting out-of-band noise and\/or clutter components. To enable parallel execution of multiple processing functions, e.g., dual in-phase and quadrature detection in the case of coherent detection, or the implementation of multiple spatial filters in image processing applications, the counters  in each unit cell  of the DFPA  can be split N times producing N+1 separate counter segments, and each counter segment can be driven by the same ADC as described above. The integration and up\/down counting of each counter can be independently controlled.","In-Phase and Quadrature Demodulation with Two Counters Per Unit Cell","Specifically, inventive DFPAs can be used as temporally matched filters in heterodyne and\/or homodyne detection, in which light from a laser or other light source is reflected from an object (or otherwise modulated) to produce a signal beam that is imaged onto an array of photodetectors in a focal plane. As understood by those of skill in the art, reflection may introduce a Doppler shift or other modulation in the signal beam depending on the object's position and velocity with respect to the focal plane. Additional light from the laser is optically combined with the reflected light and interferes with the reflected light at the focal plane. This additional light, which may be delayed and\/or shifted in frequency, is known as the local oscillator beam. Optical mixing at each detector in the focal plane results in an analog photocurrent whose frequency, which is referred to as the intermediate frequency (IF), is about equal to the difference between the frequencies of the local oscillator and signal beams and whose amplitude is proportional to the amplitude of the electric field of the signal beam.",{"@attributes":{"id":"p-0082","num":"0081"},"figref":"FIG. 8","b":["800","80","801","802","806","808","810","808","812","814","816","814","803","818","803","802"]},"A lens  collimates the transmitted beam , which is polarized in the plane of the page, as it propagates out of the fiber  through a polarizing beamsplitter , which transmits the entire beam . A quarter-wave plate  rotates the polarization of the transmitted beam  to a circular polarization state (e.g., left-handed circular) before the transmitted beam  is projected onto a target  via a zoom lens , which compensates for changes in range to the target , and an iris , which limits the amount of light coupled back into the system . The target  reflects a portion of the incident light to form a reflected beam  with a polarization orthogonal to that of the transmitted beam  (i.e., if the transmitted beam  has left-handed circular polarization, then the reflected beam  has right-handed circular polarization). This reflected beam  propagates back through the iris  and zoom lens  to the quarter-wave plate , which rotates the reflected beam's polarization to be perpendicular to the plane of the page. The polarizing beamsplitter  then reflects the reflected beam  onto the focal plane of a DFPA .","At the same time, a fiber beamsplitter  couples a fraction of the light from the laser  through an isolator , which prevents reflections from reaching the laser , and an attenuator  that reduces the beam's amplitude. A lens  collimates this additional beam , which is known as a local oscillator and polarized in the plane of the page with a half-wave plate , and directs it toward the DFPA . As understood by those of skill in the art, the local oscillator  may be frequency shifted with respect to the transmitted beam using, e.g., an AOM or other frequency shifter. (In this case, the first and second AOMs  and  introduce an equivalent shift of the frequency in the transmitted beam instead.) The difference in frequency between the local oscillator  and the transmitted beam  is referred to as the intermediate frequency.","The reflected beam  and the local oscillator  interfere with each other on the photodetector array in the DFPA . The non-linear (square-law) detection process performed at each photodetector in the DFPA  results in a sinusoidal signal whose amplitude is proportional to the amplitude of the reflected light and whose frequency is about equal to the intermediate frequency\u2014here, 5 MHz\u2014plus or minus phase shifts due to movement of and\/or range delay to the target .","Temporal filtering within each unit cell (pixel) in the DFPA  can be used to demodulate the intermediate frequency signals and extract the amplitude and phase of the reflected beam . In particular, applying an in-phase temporal filter represented by a square wave (which can be implemented using up\/down counting commands) modulated at the intermediate frequency and a quadrature temporal filter given by a square wave modulated at the intermediate frequency phase and shifted by 90 degrees relative to the in-phase filter signal yields the in-phase and quadrature components of the reflected beam . The signal amplitude can be estimated from its detected in-phase and quadrature components as (I+Q); the signal phase can estimated by the arctangent of the in-phase and quadrature values.",{"@attributes":{"id":"p-0087","num":"0086"},"figref":["FIG. 9A","FIG. 8","FIG. 4","FIG. 9A"],"b":["902","80","920","922","920","922","400","920","922"]},"A photodetector  operably coupled to the unit cell  transmits an analog photocurrent to a current-to-frequency converter  via a first transistor , a variable capacitor , a second transistor , a capacitor , an integrator , and an XOR gate  (all described in greater detail below). The output of the current-to-frequency converter  is applied simultaneously to the in-phase counter  and quadrature counter  via a multiplexor (not shown). Each counter  and  can be controlled to count up or down in many ways, such as using control signals CTL I and CTL Q to allow independent gating or actuation of the clock signals for each counter , . Digital data stored in each counter ,  can be transferred independently to adjacent units cells, e.g., by selecting the appropriate counter operating modes and using the synchronous shift and\/or random access techniques described above.","In-pixel in-phase and quadrature demodulation is accomplished as follows. A clock (not shown) generates a sinusoid at the intermediate frequency, which is rectified to produce an in-phase control signal CTL I and a rectified, phase-shifted quadrature control signal CTL Q as shown in . The in-phase counter  is toggled between count-up and count-down modes at a rate equal to the expected signal IF, and the quadrature-phase counter  is toggled as above with a 90-degree phase lag with respect to the in-phase counter . In this way the values of the in-phase and quadrature counters ,  correspond to the expected in-phase and quadrature signals after the allotted signal integration time.",{"@attributes":{"id":"p-0090","num":"0089"},"figref":["FIG. 10A-10C","FIG. 8","FIG. 9A"],"b":["800","902","80"]},{"@attributes":{"id":"p-0091","num":"0090"},"maths":{"@attributes":{"id":"MATH-US-00001","num":"00001"},"math":{"@attributes":{"overflow":"scroll"},"mrow":{"msub":{"mi":["R","Target"]},"mo":"=","mrow":{"mfrac":[{"msub":[{"mi":"\u0394\u03d5","mrow":{"mi":["Pulse","Pair"],"mo":"-"}},{"mi":"T","mrow":{"mi":["Pulse","Pair"],"mo":"-"}}]},{"mi":"\u03bb","mrow":{"mn":"4","mo":"\u2062","mi":"\u03c0"}}],"mo":"\u2062"}}}}},"where Requals the target rate in (m\/s); \u0394\u03c6is the phase difference between pulses in a given pulse par in (rad); Tis the separation between pulses in a given pulse pair in (s); and \u03bb is the wavelength of the transmitted beam in (m).","In this experiment, the wavelength was 1550 nm and pulse pair separation was about 150 \u03bcs, which resulted in an unambiguous target rate equal to \u00b12.6 mm\/s. The target rates were varied between 0 and 4 mm\/s (hence observed \u201cwrap-around\u201d at rates greater than 2.6 mm\/s). The target was imaged onto a small number of detectors (unit cells), and the rate estimates were averaged over multiple pulse-pairs to improve the signal-to-noise ratio.","Variable Capacitors for Mitigating Dead Time","Switching a counter between modes of operations (e.g., from count-up mode to count-down mode) may involve preventing the counter  from perform operations such as negation. Consider the following example implementation of in-phase and quadrature components in two register banks",{"@attributes":{"id":"p-0096","num":"0095"},"tables":{"@attributes":{"id":"TABLE-US-00003","num":"00003"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"56pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"77pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"84pt","align":"left"}}],"thead":{"row":[{"entry":[{},{"@attributes":{"namest":"offset","nameend":"2","align":"center","rowsep":"1"}}]},{"entry":[{},"In-Phase Counter","Quadrature Counter"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"2","align":"center","rowsep":"1"}}]}]},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":{}}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"4"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"77pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"84pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"Phase 1","Count up","Count down"]},{"entry":[{},"Phase 2","Count up","Count up"]},{"entry":[{},"Phase 3","Count down","Count up"]},{"entry":[{},"Phase 4","Count down","Count down"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"3","align":"center","rowsep":"1"}}]}]}}]}}},"Note that the transitions between count directions do not occur at the same time for both counters. If, for example, backward counting is implemented using a negate-count-negate method, and if pixel area constraints require the sharing of some of the control signals for both banks, then it may be desirable to stop the counting in the in-phase counter when switching the operating mode of the quadrature counter. This extra transition can induce unwanted dead time and\/or noise.","Referring again to , the unit cell  includes a variable capacitor  with a high-capacitance mode and a low-capacitance mode in the photocurrent injection path that mitigates unwanted dead time and\/or noise. One way to implement this variable capacitor  is by using a metal-oxide-semiconductor capacitor, with the depletion state used for low capacitance mode and either the accumulation or inversion region used for high capacitance mode. During normal count operation, the variable capacitor  is kept in low capacitance mode. During a mode transition, the variable capacitor  is switched to high capacitance mode, and photocurrent is integrated onto the variable capacitor  while the mode transition takes place. Then, once back in count mode, the variable capacitor  returns to low capacitance mode and discharges any integrated photocurrent collected during the mode transition into the current-to-frequency converter .","Spatial Filtering with Multiple Independently Controllable Counters Per Unit Cell","In addition to the temporal kernels described above, DPFAs with multiple independently controllable counters per unit call can also implement spatial kernels using a combination of orthogonal shifting and bidirectional counting. A Roberts' Cross filter, as used, e.g., for edge detection, may be implemented by applying the kernels shown in the insets of  to two different counters in a single unit cell. These kernels may be implemented on the readout using the sequence of operations described below. Then the resulting digital values in each register may be used to compute, edge angles and edge gradients in the scene.","Implementing a Roberts' Cross filter involves a one-time setup followed by a series of execution steps repeated once per frame. Setup includes setting the size of the least significant bit in an N-bit segmented counter structure, then partitioning the counter structure into the a pair of N\/2-bit counter segments (referred to herein as Registers A and B). The Roberts' Cross filter is executed every frame by zeroing the counter segments, then integrating pulses in each counter segment for half the integration period (T\/2) to give a count in Register A of (T\/2)(I\/LSB) and a count in Register B of (T\/2)(I\/LSB). Next, the count in Register A is shifted up by one unit cell and left one by unit cell, and the count in Register B is shifted up one by unit cell and right by one unit cell. (Data is also shifted into Registers A and B from adjacent unit cells.) The counts in both registers are negated, i.e., switched in sign, before Registers A and B integrate for the second half of the integration period (T\/2) to give a count in Register A of (T\/2)(II)\/LSB) and a count in Register B of T(II)\/LSB. The resulting N-bit image is read out for evaluation and, if desired, further processing.",{"@attributes":{"id":"p-0102","num":"0101"},"figref":["FIGS. 11A-11D","FIGS. 11A and 11B","FIG. 11C","FIG. 11D","FIGS. 11A and 11B","FIGS. 11A and 11B","FIG. 11C","FIG. 11D"],"sup":["2","2"]},"Advanced Mathematical Features","The design elements described above may be used in conjunction with additional logic to allow for the implementation of a wide variety of mathematical and signal processing features.","Absolute Value","DFPA has the ability to take the absolute value of the counter register contents and perform left and right shifts using a barrel shifter. These functions are implemented at the pixel level and can be performed on the digitized imager data in real time.",{"@attributes":{"id":"p-0107","num":"0106"},"figref":["FIG. 12","FIG. 12"],"b":"1200"},"Referring to , a control signal \u201cABS\u201d is defined to allow selection of the absolute value function. A logic function such as the following can then be used to selectively complement pixels or register segments with negative data: ENABLE=NOT(ABS) OR (ABS AND MSB). Here ENABLE is intended to be used to gate the synchronous clock. In this case, if ABS is asserted, the clock will only be seen by the register logic if the MSB of the register (i.e., the sign bit) is high.","Conditional Operations and In-Pixel Thresholding","The absolute value operation described above may be considered to be a conditional clock gating applied to the case of a negation operation. This may be used more generally. For example, consider a unit cell with a six-bit counter and a twelve-bit counter. The conditional clock gating approach applied in the absolute value operation can be used to multiply or divide the value in the twelve-bit register by a power of two based on the MSB in the six-bit register.","We can also perform a thresholding operation. Consider the case in which we have a single N-bit counter. We first initialize the counter to a negative value (the complement of the threshold). We then perform our integration step, counting up proportionate to photocurrent. Finally, we use the MSB to gate a synchronous clock-in-zero operation. Any counter that has not crossed the zero point (and thus still contains a negative value) will be reset to zero.","Local Clock Enable",{"@attributes":{"id":"p-0113","num":"0112"},"figref":["FIG. 13","FIG. 13"],"b":["1300","160"]},"Command and Control System",{"@attributes":{"id":"p-0115","num":"0114"},"figref":"FIG. 14","b":["1400","100","1400","130","102","10","1400","1400","1402","1404","1406","1408"]},"A control state machine  decodes and executes the instructions in the RAM  to generate the low-level control signals. The control state machine  is a system that includes a finite number of states and transitions between states. A transition is a set of actions that begins in one state and ends in another state or the same state. A transition is triggered by an event or a condition. An implementation of a state machine is in a digital circuit. For example, a state machine can be built using an integrated circuit, programmable logic device, a programmable logic controller, logic gates and flip flops or relays. An example of a hardware implementation of a state machine can include a register that stores state variables, combinational logic that determines state transitions, and combinational logic that determines the output of the state machine.","The command and control system  provides a command and control interface (CCI) is that of a very long word instruction set architecture (VLWISA) in which the read-out integrated circuit  in the DFPA  is treated as a single-instruction, multiple-data (SIMD) processor. TABLE 3 lists an example instruction set used by the CCI to communicate with the read-out integrated circuit .",{"@attributes":{"id":"p-0118","num":"0117"},"tables":{"@attributes":{"id":"TABLE-US-00004","num":"00004"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0","pgwide":"1"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"259pt","align":"center"}},"thead":{"row":{"entry":"TABLE 3"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}},{"entry":"Example Instruction Set"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"1","colwidth":"63pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"98pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"98pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["Instruction","Arguments","Description"]},{"entry":{"@attributes":{"namest":"1","nameend":"3","align":"center","rowsep":"1"}}},{"entry":["BCFG1","repeat_factor, bit_list,","Set ROIC input pins (set 1)"]},{"entry":[{},"mask_list"]},{"entry":["BCFG2","repeat_factor, bit_list,","Set ROIC input pins (set 2)"]},{"entry":[{},"mask_list"]},{"entry":["IOCFG","repeat_factor, io_side bit_list,","Set ROIC data input pins"]},{"entry":[{},"mask_list"]},{"entry":["PAUSEPRGM","None","Pause program counter and wait"]},{"entry":[{},{},"for resume signal to be asserted"]},{"entry":["LOOP","n_iterations","Begin finite loop block"]},{"entry":["ENDLOOP","None","End loop block"]},{"entry":["LOOPINF","None","Begin infinite loop block"]},{"entry":["ENDLOOPINF","None","End infinite loop block"]},{"entry":["DELAY","n_iterations","No-op loop"]},{"entry":["RDLN0","dir_bit_list, dir_mask_list","Read out one line of data"]},{"entry":["RESTART","None","Reset program counter to zero"]},{"entry":["NOOP","None","No-op"]},{"entry":["SUBROUTINE","pointer_name","Begin subroutine block"]},{"entry":["ENDSUBROUTINE","None","End of subroutine block"]},{"entry":["JUMP","pointer_name","Jump to subroutine"]},{"entry":["RETURN",{},"Return from subroutine"]},{"entry":["LOOPVAR","Pointer","Begin finite loop with iterations"]},{"entry":[{},{},"set in variable memory"]},{"entry":["VARIABLE","pointer, value","Set value in variable memory"]},{"entry":["IFEQ0","Pointer","Begin block that executes if"]},{"entry":[{},{},"pointer points to location with"]},{"entry":[{},{},"value 0"]},{"entry":["ENDIFEQ0","None","End of IFEQ0 block"]},{"entry":{"@attributes":{"namest":"1","nameend":"3","align":"center","rowsep":"1"}}}]}}]}}},"The instructions in TABLE 3 may be used to perform signal processing. For example, the instructions can be used to implement shift, photocurrent integration, and\/or data negation as described below. To shift data from north to south by one unit when the clock gating signal is asserted for the applicable counters , the command and control system  may transmit the following instructions to the integrated circuit :",{"@attributes":{"id":"p-0120","num":"0119"},"tables":{"@attributes":{"id":"TABLE-US-00005","num":"00005"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"189pt","align":"left"}}],"thead":{"row":{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"SUBROUTINE SHIFT_DATA_N_TO_S"]},{"entry":[{},"\u2003\u2003\u2003#\u2002Counter\/registers will shift in from the north"]},{"entry":[{},"\u2003\u2003\u2003BCFG1 MODE=SN"]},{"entry":[{},"\u2003\u2003\u2003#\u2002Shift occurs on falling edge"]},{"entry":[{},"\u2003\u2003\u2003BCFG1 ROCLK_ARRAY=0"]},{"entry":[{},"\u2003\u2003\u2003BCFG1 ROCLK_ARRAY=1"]},{"entry":[{},"ENDSUBROUTINE"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}]}}}}},"Similar instructions may be implemented to shift data in other directions (e.g., east-west), or the ISA may be extended to allow for MODE to be set to a value resident in variable memory. To integrate photocurrent, the command and control system  may transmit the following instructions to the integrated circuit :",{"@attributes":{"id":"p-0122","num":"0121"},"tables":{"@attributes":{"id":"TABLE-US-00006","num":"00006"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"189pt","align":"left"}}],"thead":{"row":{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"SUBROUTINE INTEGRATE_PHOTOCURRENT"]},{"entry":[{},"\u2003\u2003\u2003#\u2002The three steps to transition to count mode are"]},{"entry":[{},"\u2003\u2003\u2003#\u2002designed to prevent data corruption due to"]},{"entry":[{},"\u2003\u2003\u2003#\u2002unwanted clock edges"]},{"entry":[{},"\u2003\u2003\u2003BCFG1 MODE=SQ"]},{"entry":[{},"\u2003\u2003\u2003BCFG1 MODE=CQ"]},{"entry":[{},"\u2003\u2003\u2003BCFG1 MODE=CQBAR"]},{"entry":[{},"\u2003\u2003\u2003#\u2002Connect oscillator to counter"]},{"entry":[{},"\u2003\u2003\u2003BCFG1 PG0=1 PG8=1"]},{"entry":[{},"\u2003\u2003\u2003#\u2002This loop sets the integration time"]},{"entry":[{},"\u2003\u2003\u2003LOOPVAR INT_TIME"]},{"entry":[{},"\u2003\u2003\u2003\u2003\u2003\u2003DELAY 0x400"]},{"entry":[{},"\u2003\u2003\u2003ENDLOOP"]},{"entry":[{},"\u2003\u2003\u2003#\u2002Disconnect oscillator from counter"]},{"entry":[{},"\u2003\u2003\u2003BCFG1 PG0=0 PG8=0"]},{"entry":[{},"ENDSUBROUTINE"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}]}}}}},"Varying the time that the counter  is connected to the oscillator (clock) changes the counter's integration period. To negate data stored in a counter , the command and control system  may transmit the following instructions to the integrated circuit :",{"@attributes":{"id":"p-0124","num":"0123"},"tables":{"@attributes":{"id":"TABLE-US-00007","num":"00007"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"175pt","align":"left"}}],"thead":{"row":{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"SUBROUTINE NEGATE_DATA"]},{"entry":[{},"\u2003\u2003\u2003#\u2002Transition to negate mode"]},{"entry":[{},"\u2003\u2003\u2003BCFG1 MODE=SQ"]},{"entry":[{},"\u2003\u2003\u2003BCFG1 MODE=SQBAR"]},{"entry":[{},"\u2003\u2003\u2003#\u2002Pixels negated on \u2003\u2003falling edge"]},{"entry":[{},"\u2003\u2003\u2003BCFG1 ROCLK_ARRAY=0"]},{"entry":[{},"\u2003\u2003\u2003BCFG1 ROCLK_ARRAY=1"]},{"entry":[{},"\u2003\u2003\u2003BCFG1 MODE=SQ"]},{"entry":[{},"ENDSUBROUTINE"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}]}}}}},"It is possible to implement a wide range of linear static kernel filters by combining the orthogonal data transfer capability, bidirectional integration\/ones complement negation, variable integration times, and barrel shift functions of the integrated circuit . One simple example that leverages register segmentation capability is a Roberts' Cross computation as described above with respect to .","To compute a Roberts Cross, two kernels are convolved with the input image. This operation can be implemented using the following operations, expressed in terms of the instruction set and subroutines described previously. Some initialization steps are not shows, including partitioning of the 16-bit pixel register into two 8-bit registers and preloading the array shift-in registers with all zeros so that all pixels are loaded with zeros as data is shifted out.","First, perform integration for half the integration period T\/2:","JUMP INTEGRATE_PHOTOCURRENT","After integration for half the integration period, the counters contain the following values:\n\nRegister \/2\n\nRegister \/2\n","Next, the integrated circuit  performs shift operations on the upper and lower segments of the counter. Register A (bits -) data shift up and left by one pixel. Register B (bits -) data shift up and right by one pixel:",{"@attributes":{"id":"p-0130","num":"0129"},"tables":{"@attributes":{"id":"TABLE-US-00008","num":"00008"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"189pt","align":"left"}}],"thead":{"row":{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"JUMP SHIFT_DATA_S_TO_N"]},{"entry":[{},"BCFG PG0=0 PG8=1 \u2003# Next op. only for bits 8-15"]},{"entry":[{},"JUMP SHIFT_DATA_W_TO_E"]},{"entry":[{},"BCFG PG0=1 PG8=0 \u2003# Next op. only for bits 0-7"]},{"entry":[{},"JUMP SHIFT_DATA_E_TO_W"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}]}}}}},"The data collected in the previous integration cycle correspond to the negative component of the kernel. Hence, the integrated circuit  negates the data globally, then integrates to collect data corresponding to the positive component of the kernel.","JUMP NEGATE_DATA","JUMP INTEGRATE_PHOTOCURRENT","After this, the counters contain the following values:\n\nRegister *()\/2\n\nRegister *()\/2\n","A full frame can be readout or a local query can be performed for a region of interest and a decision can be made based on the reduced information set contained therein. During the readout process, the edge gradient and edge angle can be computed in the readout path on the FPGA board using the following equations:\n\nEdge gradient=()\n\nEdge angle=tan()\n",{"@attributes":{"id":"p-0134","num":"0133"},"figref":"FIGS. 11A-11D"},"The command and control system  may also instruct the integrated circuit  to perform an I\/Q detection operation with the parameters T=intermediate frequency period, N=number of IF periods to be collected per frame, and PGi=PULSEGATE signal for bit I (e.g., PG is the PULSEGATE signal for the lower bits (-) and PG is the PULSEGATE signal for the upper bits (-)). At time zero, the array is configured to a predetermined state (e.g., a segmented configuration initialized to a zero value). Some initialization steps are not shown or explicitly stated below, including configuring the sixteen-bit counter structure into two eight-bit registers and preloading the array shift-in registers with all zeros. For the purpose of discussion, the in-phase channel (I channel) and quadrature channel (Q channel) are represented by the lower eight bits and upper eight bits of the sixteen-bit counter structure, respectively. In addition, the subroutine INTEGRATE_PHOTOCURRENT is defined to integrate for T\/4 minus a slight correction time representing the elapsed time associated with operations such as digital negation and register reconfiguration.","First, the integrated circuit  begins an outer loop that implements the repetition of the I\/Q collect timing for N. Each part of the loop begins with a configuration command (BCFG) that sets the values of the control bits. Function calls following the configuration command always execute, but are applied to only the component enabled by the preceding configuration command.","LOOP {N}","First, the counters  in the integrated circuit  integrate for approximately T\/4:",{"@attributes":{"id":"p-0138","num":"0137"},"tables":{"@attributes":{"id":"TABLE-US-00009","num":"00009"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"35pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"70pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"112pt","align":"left"}}],"thead":{"row":{"entry":[{},{"@attributes":{"namest":"offset","nameend":"2","align":"center","rowsep":"1"}}]}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"BCFG PG0=1 PG8=1","# Configure both I & Q..."]},{"entry":[{},{},"#\u2002...channels to integrate"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"35pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"182pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"#\u2002Integrate photocurrent for TIF\/4"]},{"entry":[{},"JUMP INTEGRATE_PHOTOCURRENT"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}]}}]}}},"The integrated circuit  negates the contents of the quadrature register only, and then integrates for another quarter of the integration period TIF\/4 (refer to ):",{"@attributes":{"id":"p-0140","num":"0139"},"tables":{"@attributes":{"id":"TABLE-US-00010","num":"00010"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"35pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"77pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"105pt","align":"left"}}],"thead":{"row":{"entry":[{},{"@attributes":{"namest":"offset","nameend":"2","align":"center","rowsep":"1"}}]}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"BCFG PG0=0 PG8=1","#\u2002Configure Q channel..."]},{"entry":[{},"JUMP NEGATE_DATA","#\u2002...to negate data"]},{"entry":[{},"BCFG PG0=1 PG8=1","# Configure I and Q..."]},{"entry":[{},{},"#\u2002...channels to integrate"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"35pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"182pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"#\u2002Integrate photocurrent for TIF\/4"]},{"entry":[{},"JUMP INTEGRATE_PHOTOCURRENT"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}]}}]}}},"The integrated circuit  negates the contents of the in-phase register only, and then integrates for another T\/4:",{"@attributes":{"id":"p-0142","num":"0141"},"tables":{"@attributes":{"id":"TABLE-US-00011","num":"00011"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"77pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"112pt","align":"left"}}],"thead":{"row":{"entry":[{},{"@attributes":{"namest":"offset","nameend":"2","align":"center","rowsep":"1"}}]}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"BCFG PG0=1 PG8=0","#\u2002Configure I channel..."]},{"entry":[{},"JUMP NEGATE_DATA","\u2003#\u2002...to negate data"]},{"entry":[{},"BCFG PG0=1 PG8=1","\u2003#\u2002Configure both I & Q..."]},{"entry":[{},{},"\u2003#\u2002...channels to integrate"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"189pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"JUMP INTEGRATE_PHOTOCURRENT"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}]}}]}}},"Next, the integrated circuit  negates the contents of the quadrature register only, and then integrates for another T\/4:",{"@attributes":{"id":"p-0144","num":"0143"},"tables":{"@attributes":{"id":"TABLE-US-00012","num":"00012"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"21pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"77pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"119pt","align":"left"}}],"thead":{"row":{"entry":[{},{"@attributes":{"namest":"offset","nameend":"2","align":"center","rowsep":"1"}}]}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"BCFG PG0=0 PG8=1","#\u2002Configure Q channel..."]},{"entry":[{},"JUMP NEGATE_DATA","#\u2002...to negate data"]},{"entry":[{},"BCFG PG0=1 PG8=1","#\u2002Configure both I & Q channels..."]},{"entry":[{},{},"#\u2002...to integrate"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"21pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"196pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"JUMP INTEGRATE_PHOTOCURRENT"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}]}}]}}},"The integrated circuit  negates the contents of the in-phase register only to complete the loop block.",{"@attributes":{"id":"p-0146","num":"0145"},"tables":{"@attributes":{"id":"TABLE-US-00013","num":"00013"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"35pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"182pt","align":"left"}}],"thead":{"row":{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"BCFG PG0=1 PG8=0 \u2003#\u2002Negate only the I channel"]},{"entry":[{},"JUMP NEGATE_DATA"]},{"entry":[{},"ENDLOOP"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}]}}}}},"After the integrated circuit  completes the loop, data can be read out.","While various inventive embodiments have been described and illustrated herein, those of ordinary skill in the art will readily envision a variety of other means and\/or structures for performing the function and\/or obtaining the results and\/or one or more of the advantages described herein, and each of such variations and\/or modifications is deemed to be within the scope of the inventive embodiments described herein. More generally, those skilled in the art will readily appreciate that all parameters, dimensions, materials, and configurations described herein are meant to be exemplary and that the actual parameters, dimensions, materials, and\/or configurations will depend upon the specific application or applications for which the inventive teachings is\/are used. Those skilled in the art will recognize, or be able to ascertain using no more than routine experimentation, many equivalents to the specific inventive embodiments described herein. It is, therefore, to be understood that the foregoing embodiments are presented by way of example only and that, within the scope of the appended claims and equivalents thereto, inventive embodiments may be practiced otherwise than as specifically described and claimed. Inventive embodiments of the present disclosure are directed to each individual feature, system, article, material, kit, and\/or method described herein. In addition, any combination of two or more such features, systems, articles, materials, kits, and\/or methods, if such features, systems, articles, materials, kits, and\/or methods are not mutually inconsistent, is included within the inventive scope of the present disclosure.","The above-described embodiments can be implemented in any of numerous ways. For example, the embodiments may be implemented using hardware, software or a combination thereof. When implemented in software, the software code can be executed on any suitable processor or collection of processors, whether provided in a single computer or distributed among multiple computers.","Further, it should be appreciated that a computer may be embodied in any of a number of forms, such as a rack-mounted computer, a desktop computer, a laptop computer, or a tablet computer. Additionally, a computer may be embedded in a device not generally regarded as a computer but with suitable processing capabilities, including a Personal Digital Assistant (PDA), a smart phone or any other suitable portable or fixed electronic device.","Also, a computer may have one or more input and output devices. These devices can be used, among other things, to present a user interface. Examples of output devices that can be used to provide a user interface include printers or display screens for visual presentation of output and speakers or other sound generating devices for audible presentation of output. Examples of input devices that can be used for a user interface include keyboards, and pointing devices, such as mice, touch pads, and digitizing tablets. As another example, a computer may receive input information through speech recognition or in other audible format.","Such computers may be interconnected by one or more networks in any suitable form, including a local area network or a wide area network, such as an enterprise network, and intelligent network (IN) or the Internet. Such networks may be based on any suitable technology and may operate according to any suitable protocol and may include wireless networks, wired networks or fiber optic networks.","The various methods or processes outlined herein may be coded as software that is executable on one or more processors that employ any one of a variety of operating systems or platforms. Additionally, such software may be written using any of a number of suitable programming languages and\/or programming or scripting tools, and also may be compiled as executable machine language code or intermediate code that is executed on a framework or virtual machine.","In this respect, various inventive concepts may be embodied as a computer readable storage medium (or multiple computer readable storage media) (e.g., a computer memory, one or more floppy discs, compact discs, optical discs, magnetic tapes, flash memories, circuit configurations in Field Programmable Gate Arrays or other semiconductor devices, or other non-transitory medium or tangible computer storage medium) encoded with one or more programs that, when executed on one or more computers or other processors, perform methods that implement the various embodiments of the invention discussed above. The computer readable medium or media can be transportable, such that the program or programs stored thereon can be loaded onto one or more different computers or other processors to implement various aspects of the present invention as discussed above.","The terms \u201cprogram\u201d or \u201csoftware\u201d are used herein in a generic sense to refer to any type of computer code or set of computer-executable instructions that can be employed to program a computer or other processor to implement various aspects of embodiments as discussed above. Additionally, it should be appreciated that according to one aspect, one or more computer programs that when executed perform methods of the present invention need not reside on a single computer or processor, but may be distributed in a modular fashion amongst a number of different computers or processors to implement various aspects of the present invention.","Computer-executable instructions may be in many forms, such as program modules, executed by one or more computers or other devices. Generally, program modules include routines, programs, objects, components, data structures, etc. that perform particular tasks or implement particular abstract data types. Typically the functionality of the program modules may be combined or distributed as desired in various embodiments.","Also, data structures may be stored in computer-readable media in any suitable form. For simplicity of illustration, data structures may be shown to have fields that are related through location in the data structure. Such relationships may likewise be achieved by assigning storage for the fields with locations in a computer-readable medium that convey relationship between the fields. However, any suitable mechanism may be used to establish a relationship between information in fields of a data structure, including through the use of pointers, tags or other mechanisms that establish relationship between data elements.","Also, various inventive concepts may be embodied as one or more methods, of which an example has been provided. The acts performed as part of the method may be ordered in any suitable way. Accordingly, embodiments may be constructed in which acts are performed in an order different than illustrated, which may include performing some acts simultaneously, even though shown as sequential acts in illustrative embodiments.","All definitions, as defined and used herein, should be understood to control over dictionary definitions, definitions in documents incorporated by reference, and\/or ordinary meanings of the defined terms.","The indefinite articles \u201ca\u201d and \u201can,\u201d as used herein in the specification and in the claims, unless clearly indicated to the contrary, should be understood to mean \u201cat least one.\u201d","The phrase \u201cand\/or,\u201d as used herein in the specification and in the claims, should be understood to mean \u201ceither or both\u201d of the elements so conjoined, i.e., elements that are conjunctively present in some cases and disjunctively present in other cases. Multiple elements listed with \u201cand\/or\u201d should be construed in the same fashion, i.e., \u201cone or more\u201d of the elements so conjoined. Other elements may optionally be present other than the elements specifically identified by the \u201cand\/or\u201d clause, whether related or unrelated to those elements specifically identified. Thus, as a non-limiting example, a reference to \u201cA and\/or B\u201d, when used in conjunction with open-ended language such as \u201ccomprising\u201d can refer, in one embodiment, to A only (optionally including elements other than B); in another embodiment, to B only (optionally including elements other than A); in yet another embodiment, to both A and B (optionally including other elements); etc.","As used herein in the specification and in the claims, \u201cor\u201d should be understood to have the same meaning as \u201cand\/or\u201d as defined above. For example, when separating items in a list, \u201cor\u201d or \u201cand\/or\u201d shall be interpreted as being inclusive, i.e., the inclusion of at least one, but also including more than one, of a number or list of elements, and, optionally, additional unlisted items. Only terms clearly indicated to the contrary, such as \u201conly one of\u201d or \u201cexactly one of,\u201d or, when used in the claims, \u201cconsisting of,\u201d will refer to the inclusion of exactly one element of a number or list of elements. In general, the term \u201cor\u201d as used herein shall only be interpreted as indicating exclusive alternatives (i.e. \u201cone or the other but not both\u201d) when preceded by terms of exclusivity, such as \u201ceither,\u201d \u201cone of,\u201d \u201conly one of,\u201d or \u201cexactly one of\u201d \u201cConsisting essentially of,\u201d when used in the claims, shall have its ordinary meaning as used in the field of patent law.","As used herein in the specification and in the claims, the phrase \u201cat least one,\u201d in reference to a list of one or more elements, should be understood to mean at least one element selected from any one or more of the elements in the list of elements, but not necessarily including at least one of each and every element specifically listed within the list of elements and not excluding any combinations of elements in the list of elements. This definition also allows that elements may optionally be present other than the elements specifically identified within the list of elements to which the phrase \u201cat least one\u201d refers, whether related or unrelated to those elements specifically identified. Thus, as a non-limiting example, \u201cat least one of A and B\u201d (or, equivalently, \u201cat least one of A or B,\u201d or, equivalently \u201cat least one of A and\/or B\u201d) can refer, in one embodiment, to at least one, optionally including more than one, A, with no B present (and optionally including elements other than B); in another embodiment, to at least one, optionally including more than one, B, with no A present (and optionally including elements other than A); in yet another embodiment, to at least one, optionally including more than one, A, and at least one, optionally including more than one, B (and optionally including other elements); etc.","In the claims, as well as in the specification above, all transitional phrases such as \u201ccomprising,\u201d \u201cincluding,\u201d \u201ccarrying,\u201d \u201chaving,\u201d \u201ccontaining,\u201d \u201cinvolving,\u201d \u201cholding,\u201d \u201ccomposed of,\u201d and the like are to be understood to be open-ended, i.e., to mean including but not limited to. Only the transitional phrases \u201cconsisting of\u201d and \u201cconsisting essentially of\u201d shall be closed or semi-closed transitional phrases, respectively, as set forth in the United States Patent Office Manual of Patent Examining Procedures, Section 2111.03."],"GOVINT":[{},{}],"BRFSUM":[{},{}],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"BRIEF DESCRIPTION OF THE DRAWINGS","p":["The skilled artisan will understand that the drawings primarily are for illustrative purposes and are not intended to limit the scope of the inventive subject matter described herein. The drawings are not necessarily to scale; in some instances, various aspects of the inventive subject matter disclosed herein may be shown exaggerated or enlarged in the drawings to facilitate an understanding of different features. In the drawings, like reference characters generally refer to like features (e.g., functionally similar and\/or structurally similar elements).",{"@attributes":{"id":"p-0017","num":"0016"},"figref":"FIG. 1"},{"@attributes":{"id":"p-0018","num":"0017"},"figref":["FIG. 2","FIG. 1"]},{"@attributes":{"id":"p-0019","num":"0018"},"figref":"FIG. 3"},{"@attributes":{"id":"p-0020","num":"0019"},"figref":["FIG. 4","FIG. 3"]},{"@attributes":{"id":"p-0021","num":"0020"},"figref":["FIG. 5","FIG. 4"]},{"@attributes":{"id":"p-0022","num":"0021"},"figref":"FIGS. 6A and 6B"},{"@attributes":{"id":"p-0023","num":"0022"},"figref":"FIG. 7"},{"@attributes":{"id":"p-0024","num":"0023"},"figref":"FIG. 8"},{"@attributes":{"id":"p-0025","num":"0024"},"figref":["FIG. 9A","FIG. 8"]},{"@attributes":{"id":"p-0026","num":"0025"},"figref":["FIG. 9B","FIG. 9A"]},{"@attributes":{"id":"p-0027","num":"0026"},"figref":"FIGS. 10A-10C"},{"@attributes":{"id":"p-0028","num":"0027"},"figref":"FIGS. 11A-11D"},{"@attributes":{"id":"p-0029","num":"0028"},"figref":"FIG. 12"},{"@attributes":{"id":"p-0030","num":"0029"},"figref":"FIG. 13"},{"@attributes":{"id":"p-0031","num":"0030"},"figref":"FIG. 14"}]},"DETDESC":[{},{}]}
