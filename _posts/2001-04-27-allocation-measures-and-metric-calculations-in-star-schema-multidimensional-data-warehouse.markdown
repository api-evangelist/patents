---
title: Allocation measures and metric calculations in star schema multi-dimensional data warehouse
abstract: Disclosed is a system, method, and apparatus for calculating metrics by using hierarchical level metadata to describe the various structures within the database. The hierarchical level metadata permit calculation of complex metrics by an analytical server which would otherwise be difficult or impossible. As a result of the way that the analytical server calculates the metrics, slicing and drilling are supported. Additionally, dimension and fact level security are also supported.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=07080090&OS=07080090&RS=07080090
owner: Hyperion Solutions Corporation
number: 07080090
owner_city: Sunnyvale
owner_country: US
publication_date: 20010427
---

{"@attributes":{"id":"description"},"RELAPP":[{},{}],"heading":["RELATED APPLICATIONS","TECHNICAL FIELD","TECHNICAL BACKGROUND","SUMMARY","DETAILED DESCRIPTION"],"p":["This application depends and claims priority from U.S. Provisional Patent Application No. 60\/199,975 filed Apr. 27, 2000, and U.S. patent application Ser. No. 09\/837,114, filed Apr. 17, 2001, entitled \u201cAnalytical Server Including Metrics Engine\u201d, which are hereby incorporated by reference herein.","The embodiments disclosed and claimed herein are related to computer systems, and more particularly, databases.","Today's businesses have sophisticated data analysis requirements. The metrics or analyses of a business's data can be difficult to obtain. To calculate a meaningful metric, business analysts often use spreadsheets to manually analyze data. Manual analysis, of course, is a tedious and time-consuming process.","Most applications fail to deliver useful metrics that provide unique insights into an organization's performance. Useful metrics highlight significant performance measures of the business. Typically, business analysts must execute multiple queries and other time-consuming manual interventions to produce these metrics. Then, despite the time-consuming effort, analysts must start the process anew to obtain follow-up information such as an explanation of a particular anomaly in a metric.","Typically, a business's data is stored on a database or on databases. These databases are operated with associated database servers, which manage the storage and retrieval of records from the databases. Analytical servers have additionally been provided to format database queries or information requests sent from a client user interface to the database server for handling. The analytical servers can be used to improve the efficiency of the database accesses and to provide metrics of interest to the user from the retrieved records from the database.","The embodiments disclosed below provide an analytical server which efficiently accesses a Relational Database Management System (\u201cRDBMS\u201d) comprising a database and a database server. The database in this approach includes fact and dimension tables which may be, for example, configured in a star schema having a central base_fact table with surrounding dimension tables to form the star structure. Aggregate_fact tables may also be provided which aggregate measures from the base_fact table at a higher hierarchical level than such measures are maintained in the base fact table. Metadata is further stored in the database, where the metadata describes the organization of the various tables in the database, and specifically the metadata in the embodiments described below includes information about the hierarchical levels of various dimensions of the above-mentioned tables and star schema.","With further reference to the metadata stored in the database in the below-described embodiments, the analytical server described herein receives the metadata from the database and analyzes that metadata, including the hierarchical information, in order to provide relatively efficient access to the tables of the database in response to a query from a user. Such efficient access preferably supports calculation of complex metrics which might otherwise be difficult or impossible. Supported levels of stars are defined and analyzed in a sophisticated and efficient manner which facilitates the calculation of chameleon and allocated metrics.","The foregoing provides a number of additional advantages. A user can easily limit the data to a particular set of value(s) for a particular hierarchy level, known as slicing. The user can also view the metrics by moving up or down through a hierarchy, known as drilling. Additionally, fact level security and dimensional security are supported, as well as efficient collection and analysis of aggregate_fact table usage statistics.","Referring now to , there is illustrated a block diagram describing an exemplary computer architecture , configurable in accordance with an embodiment of the present invention. The computer architecture  comprises a relational database management system (RDBMS) , a database or data warehouse , an interface , and an analytical server .","The database  is accessible by the analytical server engine . The analytical server engine  accepts requests for metric calculations from clients , uses the metadata structures  to identify the necessary fact components and the best star schema for accessing them, generates and executes structured queries in a database query language, such as Structured Query Language (SQL), performs outer joins to conform query results, calculates the desired metrics, and returns them to the clients in a structured form such as multidimensional cubes.","The clients access the analytical server via an application programming interface (API) , through which metrics can be requested, possibly constrained on dimensional values. The query and metric calculation results are transmitted through the interface as objects. The client need not have knowledge of how the metric is calculated.","The database  includes a collection of base_fact tables and dimension tables organized in multiple star schemas . Exemplary star schemas are described in Ralph Kimball, THE DATA WAREHOUSE TOOLKIT (John Wiley & Sons 1996), which is hereby incorporated by reference for all purposes. Additionally, the database includes aggregate fact tables . The aggregate_fact tables  contain values summarized from the base_fact tables to certain specified levels of one or more dimensions. An aggregate fact table  is more efficient and preferable to access than a base_fact table , provided the level of detail of a given aggregate_fact table  is still sufficient for a given query. Additionally, a set of metadata structures  describe the contents of, and relationships between, the various fact and dimension tables ,.","The metadata structures  provides information for the analytical server  to determine how to access the database  for the values required to construct requested metrics and defines more abstract constructs, such as particular metrics which can be computed from one or more facts in the database . As will be described below, the metadata structures  include structures for hierarchies, stars, measure indicators, and metric indicators.","I. Metadata Structures","A. Hierarchies","Referring now to , there is illustrated a block diagram of a metadata  structure known as a hierarchy . A hierarchy  defines levels  with a minimum of two levels. The top level encompasses all elements, while successive levels further subdivide the elements into one or more non-overlapping groups.","Each level  is associated with a level name , level number , and column name . The level names describe the grouping of the elements. In the exemplary case described in , the level names include \u201call,\u201d \u201cyear,\u201d \u201cquarter,\u201d \u201cmonth,\u201d \u201cweek,\u201d and \u201cday.\u201d The level number starts with 0 for the top level  and increases sequentially for each deeper level. The column name is used to find the attribute values for the level in any table in the database which supports the hierarchy. For example, the column name for the \u201cquarter\u201d level may be used to find the attributes specifying the quarters of a particular database year.","For a dimension table to be associated with a hierarchy , the dimension table must contain the column names specified for the hierarchy  for the associated with the same hierarchy  and support it to different levels. For example, a dimension table for Time might contain columns only for Year, Quarter, and Month, and therefore provided a supported level of \u201c3,\u201d while a more complete dimension table might contain columns for all levels down to \u201cday,\u201d and therefore offer a supported level of \u201c5.\u201d","B. Stars",{"@attributes":{"id":"p-0032","num":"0031"},"figref":["FIG. 3A","FIG. 3B"]},"As shown in , a star  has a single fact table having a number of records along multiple dimensions, which dimensions in turn point to corresponding dimension tables . The fact table may be either a base level or aggregate level fact table. As shown in , the fact table , for example, may be a \u201cSales\u201d fact table, which may in turn have facts in six defined dimensions: Products, Customers; Sales Geography; Manufacturing Location; Sales Reps; and Time. These dimensions will in turn refer to the dimension tables , which may be conceptually viewed as surrounding the fact table . Exemplary hierarchical levels maintained within the dimension tables are also shown in .","The star  comprising the fact table and the surrounding dimension tables can be used to apply selection constraints and specify aggregate groupings when retrieving the fact values. A number of different stars can be identified in a database.","A star metadata structure  such as shown in  can be used to describe the various stars in a database. Each star metadata structure  identifies an fact table  in the database from which values designated as facts may be obtained. For each supported hierarchy  (see ), the star  identifies a specific dimension table to be used for performing hierarchical selection and grouping, and provides to the querying language (such as SQL), a constraint used to join the dimension table to the fact table ","The supported levels of the specific fact table  in the database are represented in a star metadata structure  by an array  of dimension indicators in which each dimension indicator  of the array  represents the supported hierarchical levels defined in a predetermined order. Additionally, an initialization process might ensure that the supported levels  are valid in all stars , thereby eliminating the need for checking the column names during the star selection process.","Still referring to , within each star metadata structure , a supported level  value is tracked for each dimension, specific to the star  and usually depending on the level  of data aggregation in the associated fact table. For example, in , the time dimension has been summarized to the \u201cday\u201d level, so the supported level  for Time in this particular star  will be \u201c5,\u201d while some other star containing only month-level fact values would support Time to level 3. If no dimension table has been assigned for some hierarchy , then hierarchy  is not supported by the star  and the supported level is recorded as \u201c0.\u201d","The star metadata structure  may also include a flag  indicating the availability of the star . Where the star is properly maintained or refreshed by some other mechanism, the flag  can be set to indicate whether the data in the star is available. The foregoing flag  can be examined during star selection.","The stars  are collected into groups called stargroups. Aggregate_fact tables  are built for frequently accessed data, in a manner that reduces table size, join complexity, a query time. For example, sales figures might be accumulated at the \u201cday\u201d level in one aggregate_fact table , and summarized more highly to the \u201cmonth\u201d level in some other aggregate_fact table . The stargroup used for accessing sales figures might contain two stars , possibly using exactly the same dimension tables but each pointing to different aggregate_fact tables . The star  using the monthly aggregate fact table  would be assigned a higher aggregate rank, or in other words would contain measures at a higher hierarchical level, and would be preferred when values were not required at a finer grain than month.","C. Measure Indicator","Referring now to , there is a block diagram of another metadata structure , specifically a measure indicator . The measure indicator  identifies and describes a measure, which is a value that can be obtained directly from the database .","The measure indicator  includes an identifier , which identifies the facts within the database  that are being referred to. Also included in the measure indicator is a flag  which indicates whether or not the measure is additive. The measure indicator  also contains a query language snippet . To support aggregate navigation, the snippet  is defined using a syntax which allows substitution of specific fact table names and dimension table names. For example, a non-SQL character is used to delimit a substitutable form which is to be replaced by the name of the fact table in the associated star, prior to executing a query.","Additionally, different stargroups may require that the snippet  be written differently. Accordingly, a measure may contain a plurality of snippets , each associated with an indicator  indicating a particular stargroup. Verification that the columns specified in the snippets  actually appear in the fact tables  defined by each star  in the associated stargroup can be done during an initialization process, thereby limiting column name lookups.","Use of multiple snippets  for different stargroups are advantageous for calculation of chameleon metrics. Chameleon metrics represent a general concept, the exact definition or calculation of which is dependent on the dimension or level. For example, a cost metric when viewed by the product dimension, may measure production or part cost. However, when viewed by dimensions other than product, the cost includes the total product cost across all parts, freight, taxes! and other top-level costs.","Chameleon metrics are constructed by taking advantage of the provision for multiple snippet \/stargroup pairs in the underlying measure definitions. Using the Geography vs. Product forecast example, a measure is defined which uses two different stargroups. The snippet  associated with the first stargroup can cause the measure to be calculated in accordance with a first definition while the snippet  associated with the second definition cause the measure to be calculated in accordance with a second definition.","Fact-based redundancy can also be provided, for example, by providing additional security hierarchy fields ,  within the measure indicator . By defining for particular measures a security hierarchy, it is possible to grant access to particular users or clients according to levels of fact-based data by defining security hierarchy levels on a measure-by-measure basis. For ultimate flexibility, the security hierarchy is defined in the measure indicator both at the broad level in field  and at the specific snippet level . The definition at these different levels allows the facts to be accessed according to the measure's use within the star structure  or fact table  being accessed rather than just having a broad prohibition of accessing certain types of data by certain users or clients.","D. Metric Indicators","Referring now to , there is illustrated a block diagram describing a metric indicator . The metric indicator  includes a metric name  identifying a particular metric. The metric name  is used in requesting results from the analytical server . The metric indicator  also includes identifiers  identifying measures and the operations to be performed thereon, to calculate the value of the metric. Although the measures are obtained from the database  from any number of database queries, the metrics are calculated at the analytical server  after obtaining each measure.","II. Metric Calculation","A. Aggregate Navigation","Referring now to , there is illustrated a flow diagram describing the calculation of a metric at an analytical server . At step , the analytical server  receives a request to calculate a particular metric. After receiving the request to calculate the particular metric, the analytical server  determines the specific measures required for calculating the metric from the metric indicator  (step ). For each measure (step ), the analytical server  selects the aggregate stargroup (step ).","At step , the analytical server  selects a particular measure and associated stargroup. Within the aggregate stargroup, the analytical server  selects (step ) the star  associated with the most highly aggregated fact table  and determines whether the star supports each constrained dimension at the level required. The foregoing is measured by comparing (step ) the requested level for each dimension in the metric request with the array  of dimension indicators  describing the supported levels  of the dimensions. Wherein the array  indicates that the requested level for each dimension is supported at the same or higher level, the star  is selected (step ).","Wherein one or more requested levels of dimensions are not supported, or supported at a lower level, the fact table  associated with the star  is rejected (step ), and a determination is made whether any remaining stars  are present in the stargroup. Wherein a remaining star  exists in the stargroup, the star  associated with the next most highly aggregated table  is selected (step ) and steps - are repeated. Wherein there are no remaining stars , data may not be obtained for the particular measure (step ). Steps - are repeated for each measure required for the requested metric(s).","After selecting the star , the analytical server  generates and conducts the queries for each measure on the selected tables  (step ). The queries are generated by substituting the fact and dimension table names where indicated in the snippets  associated with the selected star . After generating the queries, the analytical server  calculates the measures (step ), calculates the metrics (step ), and forwards the result to the client (step ), thereby completing calculation of the metric.","The foregoing approach also permits maintenance of statistics which indicate the usage levels of each star . For example, statistics can monitor events such as when a star  is considered for selection and rejected, a star  is selected for use, and when a star  is actually used in a query. The required and supported hierarchical levels can also be recorded, thereby permitting examination of usage levels. From the foregoing information, it can be determined in a given circumstance that an additional level of detail should be added to the aggregate_fact table  because a majority of requests required the additional hierarchical level. Additionally, a determination can be made that the aggregate_fact table  can be consolidated without major effect on overall performance because a majority of requests require one less level of detail.","B. Combining Queries","Certain queries can be conducted using a common fact table . For example, certain fact tables  can include multiple aggregated facts. Wherein multiple queries request different measures, but with identical constraints, the aggregated facts can be combined into a single structured query, such as a SELECT statement in SQL. Alternatively, where in multiple queries, all but one constraint are identical, and the different constraint is constrained at the same level, the queries can also be combined.","The analytical server  can advantageously preprocess the requisite queries, possibly allowing a number of queries to be combined into a single query, resulting in relational database  access efficiencies.","Referring now to , there is illustrated a flow diagram describing the operation of the analytical server  conducting queries, wherein the queries may be combined due to there being a number of queries seeking metrics along the same dimension broken down, preferably, to the same hierarchical level. The combining of the queries reduces database load and in many cases improves database response time.","At step , the analytical server  determines the fact table  from which to calculate each measure. At step , the analytical server determines which of a plurality of queries can be combined when accessing the database . In order to combine queries, the same base fact table is common between the queries to be combined, and there will be commonality to at least some of the dimension tables between the queries as well. The queries can be combined for a single star or among a number of stars , so long as there is the requisite commonality among the fact and dimension tables . The determination of step  involves a determination of the hierarchical levels involved in the plurality of queries, and it is possible that even if a requested metric or metrics requires the same measures but at differing hierarchical levels, it may be possible to consolidate these into a single query of the database  and then extract the desired information needed for the different metric requests. For example, if some metric is broken down over the last six months and also for the corresponding six months in the previous year, the underlying measure for both requests can be obtained in a single query, simply by placing all desired month numbers in the \u201cIN (l, m, n)\u201d constraint, and selectively processing the results.","At step , the analytical server  carpools combinable queries to reduce the number of queries actually made of the database  through the RDBMS . After carpooling the queries, the analytical server  generates the structured query commands for each of the database queries (step ) and forwards (step ) the structured database query commands to the RDBMS .","C. Non-Additive Metric Calculation","It is noted that it is often desirable to display metrics broken down across dimensional levels, and simultaneously display a roll-up or total. Provided all the measures that have been broken down across dimensional levels are additive, the requester of the metric can simply total the returned results. However, this is incorrect wherein certain measure components of the metrics are non-additive. Correct totals can only be obtained if the requester has knowledge of which measures are non-additive and asks for the non-additive measures separately.","By using the additive\/non-additive fields , described with respect to , it is possible for the analytical server  to readily determine which measures are non-additive. By making this determination, the analytical server can allow the rollup to be handled transparently without making the non-additive attributes visible to the requester. This is accomplished by extending the metric result to contain an additional multidimensional array of totals. The additional multidimensional array of totals may include or be based upon measures at different hierarchical levels than were necessary for the original (non-rollup) calculation. Alternatively, the original three-dimensional cube might simply reserve one extra element in the first dimension to contain the totals. Maintaining metadata  describing the hierarchical levels of the fact tables  allows for an efficient implementation of the transparent non-additive metric calculations described above.","Referring now to , there is illustrated a flow diagram describing a rollup of a metric. At step , the metric is broken down into its component measures. At step , the component measures are separated into two groups or are conceptually treated as two groups, according to the additive\/non-additive flags , (see ). To the extent the rollup can be done for the additive measures without additional difficulty, this summing is done at step .","At step , a separate totals query is generated for each non-additive measure. The query is launched using the stars as described above, and it is noted that the totals query typically requires a shallower hierarchical level on at least one dimension. Accordingly, the totals query may actually be obtained using a more highly aggregated table. Finally, at step , the metric is calculated and the process is terminated. In the foregoing manner, complex metrics composed of any combination of additive and non-additive measures can be calculated correctly and efficiently, without requiring any knowledge or action on the part of the requester.","Since the analytical server  knows which measures are additive and non-additive, the analytical server is able to adapt its inquiries and displays to minimize the possibility of displaying invalid results.","In the simple case where it turns out all component measures are additive, the analytical server  issues queries at the detail level only (business unit), and performs simple sums to calculate the totals. The individual measures are summed, and then the metric level calculations are performed using these sums.","When a measure is non-additive, the analytical server  instead generates and issues two separate queries, the extra query being for the total level (omitting the SELECT item and GROUP BY for Business Unit). In this way, complex metrics composed of any combination of additive and non-additive measures can be calculated correctly and efficiently, without requiring any knowledge or action on the part of the requester. The additive\/non-additive fields ,  (see ) are provided within the measure metadata structure to assist the analytical server  in determining whether certain measures or additive or not along certain dimensions.","As an additional benefit, there may be cases where no star is available at a certain hierarchical level, in which case the analytical server  may attempt to obtain the measures and calculate the metric at the total level only (even in the case where the measures are all additive). This can be done, for example, when the intention is to compare two metrics, such as sales vs. forecast, as when sales can be broken down by industry, customer, etc. but forecast is only available by product. In this case, forecast could still be compared to total sales across all industries or customers. To best support this capability, the server further extends the result object to provide indicators distinguishing such indicators as \u201call zero results\u201d, \u201cno data found\u201d, \u201cdetail level not supported\u201d, and so forth.","D. Cross Star Joins","Many metrics must be calculated using measures obtained from different stars. For example, a metric which measures the average numbers of days that inventory will last (inventory days on hand) is calculated by dividing the current inventory by the sales per day. Wherein one star measures sales and another star measures inventory, calculation of the inventory days on hand requires calculation of measures from both the sales star and the inventory star.","The analytical server  accesses the measures separately from each star , and then performs the equivalent of an outer join on the results. The different sets of results along the hierarchical level supplied in the request and retrieved by the queries are carefully \u201clined up\u201d, thereby allowing the server  to encapsulate this knowledge and processing, and make sophisticated metrics available to the requestor.","E. Invariant Metrics","Certain measures or metrics are \u201cinvariant\u201d by dimension. For example, to calculate the metric sales per sales rep, a measure must exist for the denominator which gives the number of sales reps. Furthermore, it may be useful to look at the sales per rep metric broken down by product business unit, family, or item. If the number of sales reps is maintained in a sales forecast star, it can be accessed only by sales geography and time. However, since all reps sell all products, the measure reporting number of reps does not change whether looking at the business unit, family, or item level, the number of sales reps is invariant along the product dimension. Therefore, the sales forecast star is degenerate along the product dimension. The analytical server is equipped with knowledge of measures which are invariant with respect to certain dimensions. Providing this knowledge to the analytical server allows a single value to be obtained as the invariant measure in the metric calculation, regardless of the level of the dimension to which the measure is invariant.","F. Allocation Metrics","An allocation metric is a metric containing a measure that is not defined at the lowest dimension level, but which is useful and desirable to allocate a value for the metric at the lowest dimension using another measure which is definable at the lowest dimension. For example, Sales Forecast numbers may be available by Geography, Sales Rep, and Time, but not by Product Business Unit. However, suppose that Sales for the previous year are available by Product Business Unit and that it is a reasonable assumption that the breakdown of Sales by Product Business Unit will be similar to the breakdown of Sales Forecast by Product Business Unit. In such a case, the Sales Forecast by Product Business Unit can be calculated by the foregoing expression:","Allocated Forecast for Product (A)=",{"@attributes":{"id":"p-0078","num":"0077"},"maths":{"@attributes":{"id":"MATH-US-00001","num":"00001"},"math":{"@attributes":{"overflow":"scroll"},"mrow":{"mi":["Total","Forecast"],"mo":["\u2062","\u2062","*"],"mstyle":{"mspace":{"@attributes":{"width":"0.8em","height":"0.8ex"}}},"mfrac":{"mrow":[{"mi":["Sales","for","Product","Last","Year"],"mo":["\u2062","\u2062","\u2062","\u2062","\u2062","\u2062","\u2062","\u2062","\u2062","\u2062"],"mstyle":[{"mspace":{"@attributes":{"width":"0.8em","height":"0.8ex"}}},{"mspace":{"@attributes":{"width":"0.8em","height":"0.8ex"}}},{"mspace":{"@attributes":{"width":"0.6em","height":"0.6ex"}}},{"mspace":{"@attributes":{"width":"0.8em","height":"0.8ex"}}},{"mspace":{"@attributes":{"width":"0.6em","height":"0.6ex"}}}],"mrow":{"mo":["(",")"],"mi":"A"}},{"mi":["Total","Sales","Last","Year"],"mo":["\u2062","\u2062","\u2062","\u2062","\u2062","\u2062"],"mstyle":[{"mspace":{"@attributes":{"width":"0.8em","height":"0.8ex"}}},{"mspace":{"@attributes":{"width":"0.8em","height":"0.8ex"}}},{"mspace":{"@attributes":{"width":"0.6em","height":"0.6ex"}}}]}]}}}}},"In the following case, the measure \u201cForecast Sales\u201d is the base measure while \u201cSales Last Year\u201d is known as the control measure. Additionally, it should be noted that while Sales for Product(A) is at the same level as the request, i.e., at the Product Business Units level, the measures of Total Forecast and Total Sales Last Year are obtained at different levels, or \u201callocated levels\u201d.","Referring now to , there is illustrated a flow diagram describing calculation of an allocated metric. The calculation of an allocated metric will be described using an exemplary case wherein a request is made for Forecasted Sales by Quarter, and Business Unit, across All Geographies. The supported levels of the stars  are described in the following dimension order: Time, Product, and Geography. The Time dimension is ordered from All, Year, Quarter, Month, Week, and Date. The Product dimension is ordered from All and Business Unit. The Geography is ordered from All, Continent, Country, State, and City.","At step , the required levels for the request are determined. In the exemplary case, the required levels are \u201c.\u201d At step , a determination is made whether a star exists with the required levels. As an example, the star metadata structure  shown in  could be used to store, in a defined fashion in the array  of integers, the available hierarchical levels within a given star. If a star exists having the required levels, the metric is calculated (step ) directly and the process is terminated. Wherein a star does not exist, the best data available for the base measure (Sales Forecast), which is simply the lowest ranked star in the stargroup, is selected (step ).","In the exemplary case, the lowest ranked star is ranked as \u201c\u201d which fails on the Product dimension. At step , the allocation levels are determined by taking the minimums of the required levels for the request and the levels of the star selected during step . The allocation levels are \u201c\u201d in the exemplary case.","During step , an attempt is made to find a star which supports the allocation levels in the base measure, e.g., the sales forecast in the present exemplary case. During step , an attempt is made to find a star in the control measure (the Sales Last Year) which support the required levels for the request (\u201c\u201d). Wherein a star for the base measure is found in step  and a star for the control measure is found in step , the allocated measure is calculated (step ), thereby completing calculation of the metric. Wherein a star is not found in either steps  or , the allocated measure cannot be calculated and calculation of the metric is terminated.","III. Security","A. Dimension Level Security","Data security is provided on both a dimension level and a fact level. Each authorized user of the database can be associated with a particular security level which restricts the levels of each hierarchy which the user is permitted access. For example, regional sales managers can be permitted to only view sales at the regional level and not be authorized access to sales data at the national or worldwide level. Additionally, the users can be restricted access to a particular value of a hierarchical level. For example, a regional sales manager might be permitted to only view sales data from their region.","The dimension level security is provided by defining security groups which specify that all metric requests have to be performed as if the required level of a certain hierarchy is at least some predetermined level. The request is rejected outright if any of the requested levels are lower than the security levels. The security definitions can also contain rules which force certain constraints. The force constraints are dynamically substituted to a given request.","B. Fact Level Security","It may also be desirable to prevent users from viewing specific metrics. An additional two level hierarchy is defined, wherein level zero is indicative that the data should not be visible, while level one is indicative that the data should be made visible. The supported level for the added hierarchy is set at zero for each restricted metric and one for each unrestricted metric. Users who are restricted are placed in a security group that only permits access to level one of the hierarchy. Therefore, when a restricted user makes a query for the restricted metric, the security definition imposes a dimensional constraint of one for the additional hierarchy. During aggregate navigation, each of the stars will be rejected because the stars only support a level zero aggregation. For users who are permitted to access the restricted metric, the zero level dimensional constraint is imposed, however each of the stars support the zero level aggregation.","IV. Graphical User Interface","As noted above, the analytical server  generates queries which are requested from the clients . The results of the query are forwarded to the clients via the API . Requests are also forwarded from the clients  to the analytical server  via the API . Communication of the requests from the clients  and the results from the analytical server  is facilitated by generation of a graphical user interface. The graphical user interface is displayed at the client  and facilitates transmission of requests for queries and displays the results of the queries.","Referring now to , there is illustrated a block diagram of the GUI . The GUI  includes a hierarchical listing of each of the dimensions . The user can click on a particular dimension  and view metrics calculated for the constraint, as well as the lower levels of the dimension hierarchy. For each dimension, the user can either select a lower level or select a constraint to constrain the dimension. Additionally, the graphical user interface includes a set of metric buttons, wherein each metric button is associated with a predefined metric.","By constraining the dimension and selecting a metric, the user can have the metric calculated for the records with the selected constraints. The user can click a query button and have constraints and selected metric forwarded to the analytical server . The analytical server  generates a structured query, transmits the structured query to the database server , receives the results of the query. Upon receiving the results of the query, the analytical server  calculates the selected metric, and prepares an object encapsulating the calculated metric for display in the GUI . The retrieved data is displayed in the form of a results page . The results page includes rows  and columns  of graphs . Each single graph  can plot any number of metrics, such as profits and costs against the vertical axis. Each row  of graphs  can represent metrics pertaining to each of the different values which comprise a level of a dimension , known as a slice. For example, each row could represent the metrics pertaining to a different country in the location dimension. Each column can represent a different quarter.","The GUI  also includes a navigation bar for changing the dimension with an indicator button  for each dimension. The user can change the dimension displayed, known as slicing, by clicking on the appropriate indicator button . For example, the user can view the profits and costs from product to product by simply clicking on the product dimension indicator button .","Additionally, the user can also traverse the levels of a dimension. For example, the user may wish to review graphs of metrics involving the various provinces of Canada. By clicking on the graph  in the row representing the Canada, the user can then review graphs for the provinces of Canada. Alternatively, the user may wish to review graphs from a higher level in the location dimension, e.g., continent. To review the graphs  on a higher level of the same dimension, the user clicks on the location dimension indicator button .","Referring now to , a representative hardware environment for practicing the present invention is depicted and illustrates a typical hardware configuration of a computer system in accordance with the subject invention, having at least one central processing unit (CPU) . CPU  is interconnected via system bus  to random access memory (RAM) , read only memory (ROM) , and input\/output (I\/O) adapter  for connecting peripheral devices such as disc units  and tape drives  to bus , user interface adapter  for connecting keyboard , mouse  having button , speaker , microphone , and\/or other user interfaced devices such as a touch screen device (not shown) to bus , communication adapter  for connecting the analytical server to a data processing network , and display adapter  for connecting bus  to display device .","In one embodiment, the invention can be implemented as sets of instructions resident in the random access memory  of one or more computer systems configured generally as described in . Until required by the computer system, the set of instructions may be stored in another computer readable memory, for example in a hard disk drive, or in a removable memory such as an optical disk for eventual use in a CD-ROM drive or a floppy disk for eventual use in a floppy disk drive. Further, the set of instructions can be stored in the memory of another computer and transmitted over a local area network or a wide area network, such as the Internet, when desired by the user. One skilled in the art would appreciate that the physical storage of the sets of instructions physically changes the medium upon which it is stored electrically, magnetically, or chemically so that the medium carries computer readable information.","Although preferred embodiments of the present inventions have illustrated in the accompanying Drawings and described in the foregoing Detailed Description, it will be understood that the inventions are not limited to the embodiments disclosed, but are capable of numerous rearrangements, modifications and substitutions without departing from the spirit of the invention as set forth and defined by the following claims and equivalents thereof."],"BRFSUM":[{},{}],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"BRIEF DESCRIPTION OF THE DRAWINGS","p":[{"@attributes":{"id":"p-0010","num":"0009"},"figref":"FIG. 1"},{"@attributes":{"id":"p-0011","num":"0010"},"figref":"FIG. 2"},{"@attributes":{"id":"p-0012","num":"0011"},"figref":"FIG. 3A"},{"@attributes":{"id":"p-0013","num":"0012"},"figref":"FIG. 3B"},{"@attributes":{"id":"p-0014","num":"0013"},"figref":"FIG. 4"},{"@attributes":{"id":"p-0015","num":"0014"},"figref":"FIG. 5"},{"@attributes":{"id":"p-0016","num":"0015"},"figref":"FIG. 6"},{"@attributes":{"id":"p-0017","num":"0016"},"figref":"FIG. 7"},{"@attributes":{"id":"p-0018","num":"0017"},"figref":"FIG. 8"},{"@attributes":{"id":"p-0019","num":"0018"},"figref":"FIG. 9"},{"@attributes":{"id":"p-0020","num":"0019"},"figref":"FIG. 10"},{"@attributes":{"id":"p-0021","num":"0020"},"figref":"FIG. 11"}]},"DETDESC":[{},{}]}
