---
title: Method and apparatus for management and representation of dynamic context
abstract: A technique for managing and representing dynamic context information. The system can manage local and remote activity information including sensor and computer application generated events such as calendar reminders. The technique allows users to store contextual relationship information associating an activity stream with temporary changes in the user interface that lie just outside a user's focus of attention in dynamic stylesheets. The dynamic stylesheets can be applied across work groups or companies and provide a similar contextual work environment. The dynamic stylesheets can also be customized to the specific needs of an individual. The techniques can be expanded beyond the computer desktop focus to include a user's complete work environment.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=07577916&OS=07577916&RS=07577916
owner: Fuji Xerox Co., Ltd.
number: 07577916
owner_city: Tokyo
owner_country: JP
publication_date: 20010221
---

{"@attributes":{"id":"description"},"BRFSUM":[{},{}],"heading":["BACKGROUND OF THE INVENTION","SUMMARY OF THE INVENTION","DETAILED DESCRIPTION OF EXEMPLARY EMBODIMENTS"],"p":["1. Field of Invention","This invention relates to managing and presenting dynamic context information to a user.","2. Description of Related Art","Computer technology has provided an ability to bring ever larger informational resources to bear on solving problems. However, the methods for obtaining or absorbing this information typically require a high degree of the user's attention in order to absorb the information. Conventional systems require the user's focus of attention be completely directed to the information retrieval application. Often, however, the user's attention is distracted from absorbing the material and is instead focused on the how to retrieve the information. As a result, problem solving becomes serialized. In particular, a large amount of time and attention is directed to information retrieval instead of information analysis.","For example, video cameras of key traffic bottlenecks are regularly broadcast on television stations. However, to access this information, the user must wait for the television station to broadcast the traffic report, while all the time keeping the user's attention focused on the television. Moreover, the user must actively tune the television to the broadcasting station of interest to acquire the desired information. This process requires a shifting of the user's focus of attention from the user's primary task to the secondary task of acquiring traffic status information.","Web-based cameras and remote sensing allow users to select the desired information more quickly. However they still require specific action and direct attention on the part of the user. For example, a web browser must be opened and a specific web page or URL loaded to obtain the traffic picture information.","The psychological studies in \u201cUser Centered System Design\u201d, Norman et al. Erlbaum Associates, Hillsdale, N.J., 1986, incorporated by reference herein in its entirety, indicate opportunistic activity is increased when the user is provided with contextually related information without having to explicitly engage in information retrieval activities directed to retrieving such information.","Conventional computer application programs, such as Microsoft Word\u00ae and Microsoft Excel\u00ae and Lotus Organizer,\u00ae and conventional window-based operating systems, such as Motif, KDE, OpenLook,\u00ae and Microsoft Windows 2000\u00ae, use dialog boxes to communicate information to a user. For example, information related to one Microsoft Word\u00ae application is communicated to a user's focus of attention even when the user is concentrating on a Microsoft Excel\u00ae application. If the user clicks on the interrupted application window, the dialog box information could then be hidden behind the current application window, suspending the application corresponding to that dialog box until the dialog box is again noticed by the user. The dialog box model of interaction acquires the user's focus of attention and requires explicit action on the part of the user that interrupts the current task.","This invention provides systems and methods that provide a user with contextually relevant information through the integration of activity information from multiple applications, operating systems and sensors and that present the contextually relevant information at the periphery of the users focus of attention.","This invention separately provides systems and methods for authoring a dynamic stylesheet that defines one or more dynamic relationships between the display attributes, the representation elements and the synthesizers used to synthesize the dynamic display attributes.","In various exemplary embodiments, the systems and methods of this invention utilize a dynamic stylesheet to manage the associations between the activity information, the display attributes, the representation elements and the synthesizers to be applied to synthesize the display attributes based on activity information. Information related to the current task is then easily acquired without direct action on the part of the user.","In various exemplary embodiments, the systems and methods of this invention dynamically synthesize display attributes of application programs and\/or operating system displays through application programming interfaces. When using application programs or operating systems that support stylesheets, dynamically synthesizing display attributes may be accomplished by applying stylesheets, such as XSL.","In various exemplary embodiments, the systems and methods of this invention allow the focus and periphery of the user's attention to be managed. Display attributes of representation elements are dynamically synthesized in response to activity information. The representation elements are selected based on entries contained in the dynamic stylesheet and a determination of the user's focus of attention.","These and other features and advantages of this invention are described in, or are apparent from, the following detailed description of various exemplary embodiments of the systems and methods according to this invention.",{"@attributes":{"id":"p-0026","num":"0025"},"figref":["FIG. 1","FIG. 1"],"b":["10","20","30","80","40","50","60","74","70","74","72","70"]},"In the exemplary embodiment shown in , the user creates a dynamic stylesheet, which is stored in a dynamic stylesheet storage memory , using the dynamic stylesheet authoring module . In this exemplary embodiment, the dynamic stylesheet authoring module  is a customized editor that allows various dynamic stylesheet functions to be entered or various dynamic stylesheet tools to be accessed. However, any text editor, such as the editors, \u201cvi\u201d or \u201cEMACS\u201d, or any word processor, such as Corel WordPerfect\u00ae or Microsoft Word,\u00ae can be used to implement at least a part of the dynamic stylesheet authoring module  used to create the dynamic stylesheet stored in the dynamic stylesheet storage memory .","The dynamic stylesheet authoring module  allows a user to create associations between activities in an activity stream provided by an activity stream source  and one or more of the display attributes of the representation elements. The elements of the activity stream are processed by the optional abstractor network . The representation elements may be representation elements in an operating system user interface and\/or in a primary document .","For purposes of description, the various exemplary embodiment are described with respect to representational elements displayed on a computer screen. However, any known or later-developed representation elements that have modifiable attributes that are sensible by a human without the human having to direct his or her focus of attention to those representational elements can be used. Such representational elements are capable of representing information about one or more activities in the activity stream in a way that can be sensed peripherally by a user using one or more of the user's senses. For example, increased air circulation in an office may be used to provide a touch representation element at the periphery of the user's focus of attention in the user's office space. In this case, the touch representation element interacts with the user's sense of touch on the user's skin. Alternatively, for a user engaged in person-to-person conversation in an office space, the periphery of the user's focus of attention may include room elements such as a curtain. Movement of the curtain may be synthesized or controlled to represent the arrival of an anticipated guest in the building lobby. Similarly, sound, olfactory and taste representation elements may also be used. For example, a distinctive odor may be released into the air circulation of a room to convey information by olfactory sense. This may be useful for a sight or hearing impaired user. Odor and sound representation elements might also be used to more effectively convey information to sight impaired users. In short, any technique for conveying information to any user may be used in the systems and methods according to this invention. Additional techniques are disclosed in co-pending application Ser. No. 60\/247,990, incorporated by reference herein in its entirety.","The display attributes of the representation elements of the exemplary embodiment may include, but are not limited to, font characteristics, window coloring, including background and foreground, current text color and desktop wallpaper. Alternatively, the dynamic stylesheet may specify new representation elements to be added to the document  as a new mediated display artifact . New representation elements may include, but are not limited to, icons placed in the system tray or on the toolbar of an application window. The dynamic-stylesheet-created representation elements may change color, shape, size and\/or any other known or later-developed display attribute in correlation with some change in the activity stream as specified in an associated dynamic stylesheet stored in the dynamic stylesheet storage memory . Any representation element having one or more changeable display attribute characteristics can be used in the systems and methods according to this invention. Representation elements are used in their broadest sense to encompass visual, sound, touch, taste and smell elements, any one or more of which can be used in the systems and methods according to this invention.","In various exemplary embodiments, changes in the activity stream values are associated with a representation element using a dynamic stylesheet. A change in the activity stream value may include an activity stream data value exceeding a threshold value, entering a preset range or based on any detected change. Each representation element is associated with a synthesizer that determines how the state of that representation element changes based on one or more activity streams. In various exemplary embodiments discussed herein, the representation elements are shown in a one-to-one relationship with activity streams. However, it should be appreciated that, in various other exemplary embodiments, a single activity stream may be associated with multiple representation elements, and\/or multiple activity streams may be associated with a single representation element.","The activity streams are provided by the activity stream source , which can be implemented using one or more external sensors that sense physical events or one or more computer application events, interrupts or any other known or later developed event capable of generating a signal. The activity stream may be local to the system running the dynamic stylesheet manager  or may be located remotely and accessed over a communication link . Remote activity streams may be received by any known or later-developed network or communication system.","An activity stream generated by a computer event or a sensed event is optionally abstracted by the abstractor network . The optional abstractor network , if implemented, analyzes the raw event or sensor data and provides normalized sensor or activity stream change data that can be more easily used by the dynamic stylesheet manager . Thus, the optional abstractor network  processes the raw sensor and\/or activity stream change data. The output of the optional abstractor network  or the activity stream is then transferred to the dynamic stylesheet manager  over the communications link .","Changes in the one or more activity streams detected by the dynamic stylesheet manager  may include, but are not limited to, reminders of scheduled events and\/or sensor values exceeding or falling below threshold values. For example, sensors may be placed in conference room seats to monitor the number of occupied seats. The multiple seat sensor values may then be abstracted to create a normalized occupancy value. For example, the activity streams for three occupied chairs in a particular conference room may reflect a percentage of total occupancy rather than the actual number of occupied seats detected. The one or more activity streams change dynamically as people enter the conference room and take their seats. As the one or more activity streams change, the changes are transmitted to the dynamic stylesheet manager . Display attributes of the associated representation elements are synthesized according to the entries specified in the dynamic stylesheet stored in the dynamic stylesheet storage memory .","The dynamic stylesheet manager  receives the raw or processed activity stream and a dynamic stylesheet that is stored in a dynamic stylesheet storage memory . The dynamic stylesheet manager  interacts with a focal determination manager  to determine a user's current focus of attention.","If the focal determination manager  determines the user is focused on, for example, a primary document , any activity stream changes defined in the dynamic stylesheet stored in the dynamic stylesheet storage memory  are used by the dynamic stylesheet manager  to dynamically synthesize display attributes for the associated representation elements of the primary document  by dynamically applying stylesheets to the primary document . The primary document  with the dynamically synthesized display attributes is used to create the mediated display artifact  within a document window  displaying the primary document  on the display device . The dynamic stylesheet stored in the dynamic stylesheet storage memory  only specifies dynamic display or informational changes to the representation elements of the primary document . The primary document  remains unaffected by the dynamic display or informational changes in the mediated display artifact . Thus, the dynamic display defined by the dynamic stylesheet provides contextually relevant information to the user in an unobtrusive manner by providing the information at the periphery of the user's focus of attention.",{"@attributes":{"id":"p-0037","num":"0036"},"figref":"FIG. 2","b":["100","100","40","110","40","20","40","20"]},"The dynamic stylesheet manager  makes calls to the application program interface  of the application  to synthesize one or more display attributes of the representation elements. The application program interface  provides a programmable interface to the display capabilities of an application program. Display attribute changes may correspond to single application program interface calls or to multiple application program interface calls. However, as discussed above, the synthesized display attributes created by the synthesizer calls to the application programming interface  do not affect the underlying application or active application file. The synthesized display attributes are only temporary display or informational artifacts used to convey additional contextual information to a user.",{"@attributes":{"id":"p-0039","num":"0038"},"figref":["FIG. 3","FIGS. 1 and 2"],"b":["80","82","84","88","82","88","80","84","88","84","88","80","80","120","40"]},"The sensor  can be a speed sensor such as a microwave radar, ultrasonic, laser and\/or a count sensor such as a photoelectric, pressure switch or any type of sensor useful in identifying the speed of vehicles and\/or the number of vehicles. The sensor signals generated by  are then used by the optional abstractor network  to create a normalized speed \u201cSan Mateo Bridge eastbound traffic speed\u201d activity stream. The optional abstractor network  then transfers the \u201cSan Mateo Bridge eastbound traffic speed\u201d east bound bridge speed activity stream over the communication link  to the dynamic stylesheet manager .",{"@attributes":{"id":"p-0041","num":"0040"},"figref":["FIG. 4","FIGS. 1 and 2","FIG. 4"],"b":["40","40","42","44","46","48","75","77","70","75","76","77","78"]},"The dynamic stylesheet manager  receives one or more activity streams through the optional abstractor network  over the communication link . In this exemplary embodiment, the dynamic stylesheet manager  receives the one or more activity streams, as well as representation element and synthesizer information encoded in one or more dynamic stylesheets stored in the dynamic stylesheet storage memory . The dynamic stylesheet manager  dynamically synthesizes a display attribute for each of the representation elements specified in one or more of the one or more dynamic stylesheets stored in the dynamic stylesheet storage memory .","In this exemplary embodiment, the display attribute for each representation element is dynamically synthesized as each activity stream changes. This reflects a push model of activity stream data, in which the abstracted activity stream data is pushed to the dynamic stylesheet manager  from the activity stream source . It should be appreciated that various other exemplary embodiments may employ a pull model in which the dynamic stylesheet manager  pulls activity stream data from the activity stream source  at scheduled times. The dynamic stylesheet manager  then synthesizes changes based on activity stream data as specified in the dynamic stylesheet stored in the dynamic stylesheet storage memory . It should be appreciated that any known or later-developed model of information transfer that permits the dynamic stylesheet manager  to respond to changes in activity stream data may be employed without departing from the spirit and scope of this invention.","It should also be appreciated that different stylesheets can be used to synthesize display attributes depending on the application or task to be performed. Multiple stylesheets may be applied to the same document or user interface. For example, a project summary document may be associated with a dynamic stylesheet stored in the dynamic stylesheet storage memory  that synthesizes a border  around the project summary document window . The state of the border  can be used to indicate whether a conference on a related aspect of the project is taking place in a conference room. Alternatively, the font color  of a second project document  may change its state to indicate whether a sub-project has been completed, the completion of which is required before the project summary can be finalized.",{"@attributes":{"id":"p-0045","num":"0044"},"figref":["FIG. 5","FIGS. 1 and 2"],"b":["40","20","80","120","20","120","40","40","42","44","46","48","20","42","44","46","48","42","44","46","48","75","76","42","100"]},"The synthesizer  is associated with the activity stream for a timer . The synthesizer  calls a second Microsoft Word\u00ae application programming interface  to synthesize the state of one or more display attributes of the current text in the second window . As the timer  countdown proceeds through the specified range, the state of these one or more attributes of the current text are dynamically synthesized to reflect the activity stream values. For example, the font color  may change state to indicate whether the sub-project has been completed.","The synthesizer  is associated with the occurrence of a calendar event. The synthesizer  calls the Microsoft Word\u00ae application programming interface  to synthesize the state of one or more display attributes of the current text in the first window , such as the text format. As the time of the calendar appointment nears the present time, the state of the current text font  is dynamically synthesized to reflect the activity stream values.",{"@attributes":{"id":"p-0048","num":"0047"},"figref":"FIG. 6","b":["500","20","500","510","520","530","530","512","510","522","520","512","522","512","522","522","512"]},"The synthesizer portion  in the dynamic stylesheet  defines associations between various ones of the representation elements  and various ones of the associated synthesizers  affecting the display attributes of the respective representation elements. The first row of exemplary stylesheet  shows the \u201csensor:conference_room3A56.occupancy\u201d activity stream  associated with the desktop wallpaper representation element  and a synthesizer  that synthesizes a video of the conference room for the desktop wallpaper as the number of occupied seats in the conference room approaches capacity. As people enter the conference room and take seats, the \u201csensor:conference_room3a56.occupancy\u201d activity stream  changes state. The dynamic stylesheet manager  receives notification of the change in occupancy value over the communication system. The dynamic stylesheet manager  dynamically synthesizes a display attribute for the associated representation element, , i.e., the desktop wallpaper. The associated synthesizer  provides for fading the wallpaper into a video of the conference room as the sensor:conference_room3a56.occupancy activity stream changes state.","The second row shows a computer calendar appointment event  in the activity stream portion . The calendar appointment is associated with the representation element  for the current text and a synthesizer  from the synthesizer portion . When the dynamic stylesheet manager  detects the appointment date and time has occurred, an italicized current text display attribute is synthesized to unobtrusively indicate the appointment information to the user at the periphery of the user's focus of attention.","The third row shows the \u201cSan Mateo Bridge eastbound traffic speed\u201d sensor activity stream  of the activity stream portion  associated with the current window border representation element  of the representation element portion . The \u201cSan Mateo Bridge eastbound traffic speed\u201d sensor activity stream  and the current border window  are associated with a synthesizer  from synthesizer portion . When the dynamic stylesheet manager  detects the relevant changes in the \u201cSan Mateo Bridge eastbound traffic speed sensor\u201d activity stream , the state of the current window border  is dynamically synthesized. The dynamic synthesis of the current window border state unobtrusively communicates to the user how well traffic is moving over the San Mateo bridge, so that the user can decide whether to start the commute home across the San Mateo bridge.","The fourth row shows the calendar timer activity stream  in the activity stream portion . The calendar timer activity stream  is associated with the current text  in the representation element portion  and a synthesizer  from the synthesizer portion . When the dynamic stylesheet manager  detects a change in the calendar timer activity stream , the dynamic stylesheet manager  dynamically synthesizes a change in the state of the current text font color to unobtrusively indicate to the user the state of the calendar timer.","In various exemplary embodiments, associations between activity streams, representation elements and synthesizers are stored in the dynamic stylesheet storage memory  using a table format. However, it should be appreciated that any encoding of the information is possible without departing form the spirit or scope of this invention. For example, the dynamic stylesheet stored in the dynamic stylesheet storage memory  may be encoded in HTML using application specific tags. Alternatively, the dynamic stylesheet stored in the dynamic stylesheet storage memory  may be encoded using XML or any known or later developed encoding of the information that allows for decoding of the information by the dynamic stylesheet manager .",{"@attributes":{"id":"p-0054","num":"0053"},"figref":"FIG. 7","b":["710","50","720"]},"In contrast, activity stream from the activity source  is used by the dynamic stylesheet manager  with a dynamic stylesheet stored in the dynamic stylesheet storage memory  and the primary document  with representation elements to create a mediated display artifact . The display attributes of the representation elements of a mediated display artifact  of a document  displayed on a display device  are synthesized display attributes based on the activity stream . However, the synthesized display attributes do not reflect substantive changes to the primary document.",{"@attributes":{"id":"p-0056","num":"0055"},"figref":"FIG. 8","b":["800","810"]},"Next, in step S, after reading the dynamic stylesheet and the primary document, the focus of the user's attention is determined. If the user's attention is determined to be focused on the primary document, the primary document is selected as the target for synthesis of display attributes of representation elements. If the user's attention is determined to be focused on a second window or on the desktop, representation elements that are determined to be at the periphery of the user's focus of attention relative to that second window or the desktop are selected. For example, the user's recent placement of the mouse within a window might be used to determine that the focus of attention is the document within the selected window. Alternatively, computer tracking of head attitude or eye positioning or any other known or later developed techniques for determining a focus of the user's attention may be used without departing from the spirit or scope of this invention.","Then, in step S, once the user's focus of attention is determined, changes in one or more activity streams are detected. The detection of these changes may be accomplished with a push model in which changed data is sent or pushed from the activity stream source. Alternatively, the changes may be pulled from the one or more activity streams by polling the one or more activity streams at specified intervals. In either the pull or push model, the changes detected between the current and previous activity stream values are identified. Control then continues to step S.","In step S, a representation element associated with the changed activity stream data is determined. The representation element may be determined from the dynamic stylesheet, or from a data structure into which the dynamic stylesheet has been read. Then, in step S, after determining the representation elements associated with the activity stream, the specific synthesizers associated with the changed activity streams are determined. Next, in step S, the display attributes associated with the determined synthesizers are synthesized based on the information encoded in the dynamic stylesheet. For example, window border colors may be dynamically synthesized according to determined values of the activity streams. Control then continues to step S.","In step S, a determination is made whether a request has been received to shutdown the dynamic stylesheet manager.","If no request to shut down the system is received control jumps back to step S, where new changes in the activity stream are detected. In contrast, once a request to shut down the system is received, control continues to step S where the process ends.",{"@attributes":{"id":"p-0062","num":"0061"},"figref":["FIG. 9","FIG. 9"],"b":["900","910","920","930","940"]},"In step S, one or more synthesizers are selected to be associated with the one or more previously selected activity streams and the one or more previously selected representation elements. Each of the one or more synthesizers may be selected from any of a number of predefined synthesizers. Alternatively, a third party or user-developed synthesizer may be selected to synthesize a new display attribute for a selected representation element. Next, in step S, a reaction range for the synthesizer is optionally selected. If specified, the selected synthesizer will synthesize the selected display attributes based the activity stream values.","In step S, the synthesized display attribute changes associated with the activity stream or the optional reaction range can be specified for the synthesizer. For example, a selected synthesizer may support font color changes, font italicization, window border color synthesis or any other change to a display attribute. Next, in step S, a determination is made whether additional activity streams are to be processed. If more activity streams are to be processed, control jumps back to step S and the steps S through S are repeated until no further activity streams remain to be processed. When the determination made in step S indicates that no further activity streams remain to be processed, control continues to step S, where the authored dynamic stylesheet is saved. Then in step S, the dynamic stylesheet authoring process ends.","As shown in ,  the systems and methods for managing and representing dynamic context according to this invention are preferably implemented on a programmed general purpose computer. However, the systems and methods for managing and representing dynamic context according to this invention can also be implemented on a special purpose computer, a programmed microprocessor or microcontroller and peripheral integrated circuit elements, an ASIC or other integrated circuit, a digital signal processor, a hardwired electronic or logic circuit such as a discrete element circuit, a programmable logic device such as a PLD, PLA, FPGA or PAL, or the like. In general, any device, capable of implementing a finite state machine that is in turn capable of implementing the flowcharts shown in  can be used to implement the systems and methods for managing and representing dynamic context according to this invention.","Various ones of the blocks shown in  can be implemented as portions of a suitably programmed general purpose computer. Alternatively, various ones of the blocks shown in  can be implemented as physically distinct hardware circuits within an ASIC, or using a FPGA, a PDL, a PLA or a PAL, or using discrete logic elements or discrete circuit elements. The particular form each of the blocks shown in  will take is a design choice and will be obvious and predicable to those skilled in the art.","As shown in , , ,  and , the dynamic stylesheet storage memory  can be implemented using any appropriate combination of alterable, volatile or nonvolatile memory or non-alterable, or fixed, memory. The alterable memory, whether volatile or non-volatile, can be implemented using any one or more of static or dynamic RAM, a floppy disk and disk drive, a write-able or rewrite-able optical disk and disk drive, a hard drive, flash memory or the like. Similarly, the non-alterable or fixed memory can be implemented using any one or more of ROM, PROM, EPROM, EEPROM, an optical ROM disk, such as a CD-ROM or DVD-ROM disk, and disk drive or the like.","The communication link  of  can be any known or later developed device or system for connecting the activity streams from the activity sources , the optional abstractor network , the dynamic stylesheet authoring module , the one or more dynamic stylesheets stored in the dynamic stylesheet storage memory , and the dynamic stylesheet manager , including one or more of a direct cable connection, a connection over a wide area network or a local area network, a connection over an intranet, a connection over the Internet, or a connection over any other distributed processing network or system. In general, the communication link  can be any known or later developed connection system or structure usable to connect the activity streams from activity stream source , the optional abstractor network , the dynamic stylesheet authoring module , the one or more dynamic stylesheets stored in the dynamic stylesheet storage memory  and the dynamic stylesheet manager .","Further, it should be appreciated that the communication link  can be a wired or wireless link to a network. The network can be a local area network, a wide area network, an intranet, the Internet, or any other distributed processing and storage network.","While this invention has been described in conjunction with the exemplary embodiments outlines above, it is evident that many alternatives , modifications and variations will be apparent to those skilled in the art. Accordingly, the exemplary embodiments of the invention, as set forth above, are intended to be illustrative, not limiting. Various changes may be made without departing from the spirit and scope of the invention."],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"BRIEF DESCRIPTION OF THE DRAWINGS","p":["Various exemplary embodiments of this invention will be described in detail, with reference to the following figures, wherein:",{"@attributes":{"id":"p-0017","num":"0016"},"figref":"FIG. 1"},{"@attributes":{"id":"p-0018","num":"0017"},"figref":"FIG. 2"},{"@attributes":{"id":"p-0019","num":"0018"},"figref":["FIG. 3","FIGS. 1 and 2"]},{"@attributes":{"id":"p-0020","num":"0019"},"figref":["FIG. 4","FIGS. 1 and 2"]},{"@attributes":{"id":"p-0021","num":"0020"},"figref":["FIG. 5","FIGS. 1 and 2"]},{"@attributes":{"id":"p-0022","num":"0021"},"figref":"FIG. 6"},{"@attributes":{"id":"p-0023","num":"0022"},"figref":"FIG. 7"},{"@attributes":{"id":"p-0024","num":"0023"},"figref":"FIG. 8"},{"@attributes":{"id":"p-0025","num":"0024"},"figref":"FIG. 9"}]},"DETDESC":[{},{}]}
