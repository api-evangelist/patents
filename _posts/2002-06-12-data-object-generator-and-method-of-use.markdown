---
title: Data object generator and method of use
abstract: The present invention creates source code that can be used by an application program to manipulate a relational database management system. An executable procedure for use in accessing a database management system (DBMS) by other software, e.g. application software, is created by dynamically obtaining a set of data representative of and useful in manipulating the DBMS and a table within the DBMS from a preexisting DBMS system catalog; merging the set of data with pre-existing source code comprising a predetermined object source code template that comprises object methods and object properties useful in manipulating the table; and generating a source file containing the merged template object source code to create the executable procedure. It is emphasized that this abstract is provided to comply with the rules requiring an abstract which will allow a searcher or other reader to quickly ascertain the subject matter of the technical disclosure. It is submitted with the understanding that it will not be used to interpret or limit the scope of meaning of the claims.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=07020660&OS=07020660&RS=07020660
owner: Siemens Medical Solutions Health Services Corp.
number: 07020660
owner_city: Malvern
owner_country: US
publication_date: 20020612
---

{"@attributes":{"id":"description"},"RELAPP":[{},{}],"heading":["RELATED APPLICATIONS","FIELD OF THE INVENTION","BACKGROUND OF THE INVENTION","SUMMARY","DETAILED DESCRIPTION OF THE PREFERRED EMBODIMENT"],"p":["This application claims priority through U.S. Provisional Application No. 60\/302,086 filed Jun. 29, 2001 by J. Woodring for \u201cData Object Generator.\u201d","The present invention relates to interfaces to database management systems and more specifically to programmatic creation of software object interfaces to database management systems.","Many computer applications need to manipulate a database and its internal components, e.g. tables, such as by storing records into and retrieving records from those tables. The database may be a traditional database management system (DBMS) such as a relational DBMS.","This manipulation often requires an application programmer to write specific code for each table. The coding effort is often tedious, is prone to errors, and requires a considerable amount of time, especially as the number of tables in the DBMS increases. In addition, the application software code often needs to be customized based on a low level DBMS application programming interface (API) and the specific DBMS being accessed.","The most common approach for coding database manipulation code is to write, by hand, the computer code needed. Typically, programs need to be written to perform the same repetitive function on every table in the DBMS. The disadvantages of this approach include (a) it requires a technical programming resource to write basic database manipulation code for each table in the system, which takes time; (b) the resulting code is prone to errors, since most of the programming is tedious and repetitive; (c) each line of code is tested during unit testing, since each line was coded by hand; (d) it requires valuable programming resources when program developers could be utilized on other programming tasks; and (e) changes to the specific underlying API or to the coding structure in general are applied to the code.","The present invention comprises a system and method to allow creation of an executable procedure for use in accessing a database management system (\u201cDBMS\u201d) by other software, e.g. application software. Code for the desired data object is created by dynamically obtaining a set of data representative of and useful in manipulating a DBMS and its components, e.g. DBMS tables, from a preexisting DBMS system catalog; merging the set of data with source code comprising a predetermined template object source code that comprises object methods and object properties useful in manipulating the table; and generating a source file containing the merged template object source code to create executable code, e.g. by compiling or interpreting the merged template object source code as required by its target language.","A system for generating an executable procedure to accomplish the methods disclosed herein may comprise an interrogation processor, used for interrogating system information associated with the DBMS and deriving database characteristics from the interrogated system information; a source of a template object source code, the template object source code being useful for accessing the database; and a code generator for merging the template object source code with the derived database characteristics to provide a merged object source code for use in manipulating data in the database.","The scope of protection is not limited by the summary of an exemplary embodiment set out above, but is only limited by the claims.","As used herein, \u201cdatabase\u201d or \u201cDBMS\u201d may comprise a relational database, an object oriented database, a flat file, a comma delimited file, or the like, or combinations thereof. Additionally, \u201ctable\u201d as used herein may be a part of a DBMS or may be free standing, i.e. not included in the DBMS' native structure. As will be familiar to those of ordinary skill in the database arts, a \u201csystem catalog\u201d is a data dictionary of a DBMS and stores meta-deta including the schemas of the databases. It is typically stored within the DBMS in one or more special tables that can be queried by users like any other table. As used herein, \u201cDBMS system catalog\u201d may therefore be either an interrogatable system catalog that is part of the DBMS structure, e.g. information about a table's fields and their data characteristics; information about fields and their data characteristics derivable from a free-standing table; information about fields in a comma-delimited, spreadsheet, or other flat file; and the like, according to the data being accessed. Accordingly, as used herein, \u201cDBMS system catalog\u201d is understood to mean an interrogatable collection of description of characteristics of data within a DBMS or a table in the DBMS, and can include a field definition row in a spreadsheet, a field definition record in a flat or comma delimited file, and the like, or combinations thereof. As used herein, a \u201cschema\u201d is a description of the tables, indexes, constraints, and the like contained within a DBMS.","As used herein, \u201csource code\u201d and \u201csource code module\u201d are understood to mean a collection of editable programmatic instructions which, when compiled or interpreted, create an executable software object as these terms are understood by those of ordinary skill in the computer programming arts.","Referring now to both , a schematic of an exemplary system of the present invention, and , a schematic of an exemplary database, a preferred embodiment of a system of the present invention comprises interrogation processor ; source  of template object source code ; and code generator . DBMS  is typically a pre-existing DBMS, e.g. an industry standard relational DBMS. Further, DBMS  and source  may be resident on a storage device associated with either of interrogation processor  and code generator .","It is understood that interrogation processor  and code generator  may be separate or a unitary computer systems, e.g. a single personal computer or several networked personal computers having mass storage devices or the like.","Interrogation processor  is used to interrogate DBMS  for system information  associated with DBMS  and derive database characteristics  from the interrogated system information , e.g. a database schema embodied in DBMS system catalog  ().","DBMS  may be a true database, comprising tables  and optionally other elements. As used herein, the numeral \u201c\u201d refers to tables in DBMS  generally, with each such table in DBMS  identified as \u201cand the like.","As used in the art, independent or freestanding tables , individually referred to by \u201cand \u201care sometimes also referred to as a database, such as with older database systems such as so-called xBase database systems like Visual FoxPro\u00ae marketed by Microsoft Corp. of Seattle, Wash. Both types of tables, e.g. table in tables  and table in freestanding tables , typically comprise one or more records . As shown in , each record  (also referred to as row ) in a table such as table or comprises one or more fields  (also referred to as columns ). Some DBMS systems  also provide validation and integrity rules for fields , records , and the like.","Additionally, especially in modern databases, DBMS  may be or otherwise comprise software objects .","As will also be familiar to those of ordinary skill in the database arts, fields  may have characteristics such as a name, a field type, a data field data length, a null character indicator, an index indicator, and the like, or combinations thereof.","Referring additionally to , source  comprises one or more template object source code modules , e.g. \u2013which are software objects which may be used to create basic database manipulation code for each table, e.g. (). In , individual software objects are referenced by a letter designator, e.g. a template query software object is shown as object Code generator  may customize a desired template object source code , e.g. template insert software object by merging template object source code  with database characteristics  derived from DBMS system catalog , as is described herein below.","Template object source code modules  may vary depending on several factors related to DBMS  upon which generated object source code  may be dependent, e.g. the actual underlying application program interface (\u201cAPI\u201d) for DBMS  that is being used (such as ActiveX\u00ae Data Objects (\u201cADO\u201d), Java Database Connectivity (\u201cJDBC\u201d), and the like) and the target DBMS , e.g. Microsoft\u00ae SQL Server, Oracle\u00ae, or IBM\u00ae DB2\u00ae.","Each template object source code  module may comprise one or more object methods and one or more object properties useful in accomplishing its task in general, e.g. object methods and object properties useful in accessing DBMS  such as predetermined object methods and object properties supporting manipulation of data from at least one of fields , records , database objects , tables ,, and\/or an entire DBMS . Accordingly, in a preferred embodiment, the object methods and object properties of merged object source code  may be used by an application invoking merged object source code  to manipulate a specific DBMS . As used herein, \u201cmanipulate\u201d means to access and modify DBMS  and its data, e.g. opening DBMS , opening table loading table such as with template load object retrieving record , querying DBMS  and\/or table such as with template query object inserting a new record  in table such as with template insert object updating an existing record  in table such as with template update object deleting record  in table such as with template delete object closing table and closing DBMS , or the like, or a combination thereof.","In a preferred embodiment template object source code  comprises source code defining an executable procedure for querying or selecting records, e.g. query records  by a primary key; loading a table template, e.g. load a entire table inserting a record template, e.g. insert a new record  into table updating a record template, e.g. update an existing record  based on a primary key; deleting a record template, e.g. delete record  based on the primary key; or the like; or combinations thereof.","The object methods may be further tailorable, e.g. to update only changed fields , verify that data is consistent with a predetermined data type such as a data type required by field , process empty fields  in accordance with requirements of table and\/or DBMS , convert data from a first type to a second type compatible with requirements of table and\/or DBMS , or the like, or combinations thereof. For example, a query template may comprise object methods and object properties to allow invocation of the compiled query object to accomplish a query and return the results of that query.","In a preferred embodiment, template object source code  may also comprise object methods to accomplish the following tasks: for a Query, populate private data members for merged object  () from a \u201cresult set\u201d returned from DBMS ; for an Insert, validate that required fields  are present and have the appropriate data type and data characteristics; for an update, only update fields  that actually changed. i.e., have new values; verify that the actual data is correct for the data type of the requisite field , e.g., validate that field  defined as an integer contains a valid integer; perform predetermined edit checks. e.g., ensure that the length of a text field  does not exceed the maximum specified in the database definition; remove leading and\/or trailing spaces from a text field ; convert empty text fields  to database \u201cnulls;\u201d handle special characters imbedded in text fields , e.g., quotes within quotes; convert the programming language's data types into DBMS specific data types, e.g., many DBMS systems  store dates and times in different formats; and provide standardized methods for other programs in the an application to retrieve data from the data object (\u201cget\u201d methods) and to store data into the data object (\u201cset\u201d methods).","Accordingly, merged object source code  may be used for manipulating data from a predetermined section of DBMS , e.g. record , a table associated with DBMS  or a freestanding table database object , and database system catalog information , or the like, or a combination thereof.","Referring back to , code generator  creates merged object source code  by merging database characteristics  derived from DBMS system catalog  with template object source code  to provide merged object source code  which can then be used to manipulate data in DBMS . Code generator  may further comprise display  and input . Input  may be one or more input devices such as are known in the art, e.g. a keyboard, mouse, or other computer input device as will be understood by those of ordinary skill in the computer arts.","In the operation of a preferred embodiment, and referring additionally to , the present invention further comprises one or more development tools that may be used during a development phase of a project to create objects  () to perform common database manipulation routines, e.g. input-output procedures, for each desired table () in DBMS  () or freestanding table ().","In a preferred embodiment, the present invention assumes that details needed to generate the database manipulation code for each table are already known and accessible in DBMS system catalog  of DBMS  or otherwise available for freestanding tables . This is true for such relational DBMS systems as Microsoft\u00ae SQL Server, Oracle\u00ae, IBM\u00ae DB2\u00ae, and Microsoft\u00ae Visual Foxpro\u00ae.","In a preferred embodiment, a user, e.g. a programmer, invokes a user interface at code generator  () during the development of an application system to dynamically obtain a set of data, at step , from a preexisting DBMS system catalog  () of DBMS  (). DBMS system catalog  may be obtained directly from DBMS , from a database script file, or the like. The set of data may be derived from DBMS system catalog  by interrogation processor  (). For example, interrogation processor  may use a standardized database API to access DBMS system catalog  of the desired DBMS .","The set of data is representative of and useful in manipulating DBMS  () and its tables  (). Once names of tables  within DBMS  have been determined, predetermined parameters are processed such as from a memory array or from a file to retrieve information required to set up an environment that includes locations and other characteristics of template object source code  (). Additionally, predetermined parameters may be obtained from freestanding tables  and processed. These characteristics may comprise language type, DBMS type, server name, database name, connection settings, and the like. In a like manner, locations and other characteristics of merged object source code  () may be processed, e.g. language type, data access methods, naming conventions, and the like. In a typical configuration, DBMS system catalog  will be interrogated for the name of each field ; predetermined characteristics of each field , e.g. data type, data field length, data format requirements, and \u201cnullable\u201d indicator; and an index value, e.g. whether field  is a primary key.","The user may also specify one or more startup parameters such as via input .","In a preferred embodiment, an object may then be defined to comprise object properties describing predetermined characteristics of data types which will be further accessible using the object, where these data types are present in DBMS  () as well as in one or more target languages for the data object, e.g. Java or C++. At least one data object is then created for each table () in DBMS  (). A database object creation routine may be run once per each such data object, e.g. in a loop processing each table found. Alternatively, all tables  for DBMS  may be processed automatically such as via an API to DBMS .","Once obtained, the set of data obtained from DBMS system catalog  () is merged, at step , with a predetermined template object source code  () to create merged object source code  (). For example, template object source code  may be populated with pre-existing source code into which one or more place holders exist, e.g. by substitution of a value for a place holder, such as where the place holders are identifiable by the merging process and relate to a predetermined set of data obtained from the preexisting DBMS system catalog  () of DBMS  (). In this manner, a \u201cget\u201d method in template source , which may be invoked by a software application to obtain values in one or more fields of a record in a table, e.g. table would have a place holder allowing for identification of each field obtained from the preexisting DBMS system catalog  () of DBMS  ().","In an alternative embodiment, the set of data obtained from DBMS system catalog  () is examined and one or more of characteristics of the data is determined. A template is then identified which corresponds to the characteristics for each datum in the set of data, and that datum is merged into its corresponding template in template object source code . For example, template insert software object may comprise the string \u201cINSERT\u201d for a structured query language (SQL) target, and the merge process may build a further string containing the template \u201cINSERT\u201d with appended names of columns  gleaned from DBMS system catalog  (). If columns  named \u201cONE,\u201d \u201cTWO,\u201d and \u201cTHREE\u201d are to exist in table named \u201cTBL,\u201d the resulting merged string would be \u201cINSERT INTO TBL (ONE,TWO,THREE) VALUES (var1, var2, var3)\u201d where var1, var2, and var3 would be program determined variables appropriate for columns  named \u201cONE,\u201d \u201cTWO,\u201d and \u201cTHREE\u201d in table ","In a preferred embodiment, when the characteristics for template object source code  and merged object source code  have been obtained, as well as the information regarding DBMS , an output file may be created. The output file may be provided with a standard header as required by a target language, including header information required for a desired software object class. As will be understood by those of ordinary skill in the software object oriented programming arts, a software object is defined via its class, i.e. an object is an individual instance of the class to which it belongs.","Member variables may then be generated for the class, based on definitions of tables , for which the class is being defined. Additional elements for the object class may then be created for the class, e.g. constructors, get methods, put methods, and the like, or combinations thereof. Specialized methods may also be created for the class, e.g. for database views present within DBMS . Characteristics for template object source code  and merged object source code  may be validated during the processing.","In addition to these methods and properties, a set of SQL code may be created to allow access and manipulation of DBMS  (), depending on the requirements of that DBMS . This SQL code may include dynamic and static syntactical statements and routines to allow loading of data, updates, inserts, deletions, executing of stored procedures, and the like. Additionally, methods to process data loaded from DBMS  as well as validation methods are created for the class.","The merged object source code  may then be stored, at step , such as created as an editable or otherwise manipulatable text source file and written to disk.","Merged object source code  may then be used to generate executable code containing the desired data object, e.g. merged object source code  may be generated in a desired target language such as C, C+, C++, C#, Visual Basic, COBOL, SQL, Java, or the like, or a combination thereof for further compilation or interpretation. Merged object source code  may then handled just like any other source file that the programmer develops, e.g., checked into a software repository, compiled, unit tested, and the like. A predetermined programming language's data types may also be converted into one or more data types specific to DBMS .","In a preferred embodiment, merged object source code  are to be used in a target application as \u201ccontainers\u201d to hold data for a specific table Data coming from DBMS  and going to DBMS  will thus pass through the compiled or interpreted merged object source code . Other programs in the software application, e.g. \u201cclasses\u201d in object oriented applications, may use \u201cget\u201d and \u201cset\u201d methods of merged object source code  to retrieve data from the data object  and to store data into the data object . With this mechanism, application business logic does not need to know the details of how the data is actually stored in DBMS , e.g., which DBMS  or table is being used, structures of tables ,, and the like.","Unit testing may also be improved, since code generator  produces application code specific to a table  in the generated code conforms to a desired \u201cmodel\u201d code, template . Further, changes to a specific underlying API or to the coding structure in general can be applied to one place, e.g. templates , and code generator  can be rerun to recreate the code  for each table instead of having to make changes manually. Similarly, common rules that need to be applied across DBMS  need to be coded once, e.g. in templates .","In the preferred embodiment as described herein, programmatic errors may be detected in a earlier, development phase, decreasing the likelihood of a runtime error. However, in a currently envisioned alternative embodiment, the present invention may be used in a runtime environment during real-time operation of a software application such that database manipulation code could be created dynamically while the application is running.","As will be familiar to those of ordinary skill in the database arts, other object methods may be present as desired to help maintain one or more standards of DBMS , its tables , freestanding tables , and their records  and fields . For example, programmers often desire to remove leading and\/or trailing spaces from text fields , convert empty fields  to database \u201cnulls,\u201d and\/or handle special characters imbedded in text fields  such as by substitutions for or deletions of those special characters. One or more methods to accomplish these tasks may be present in template source code  to handle these in a consistent manner.","The present invention may be used in application systems that need to manipulate data in DBMS , e.g. client\/server application systems that require records to be stored into and retrieved from DBMS . Among other advantages, the present invention may free up development time, allowing programmers to be utilized on other programming tasks; programming errors may be eliminated that may have resulted if the code were programmed by hand; unit testing may be faster as each line of code automatically conforms to the \u201cmodel\u201d code; changes to a specific underlying API or to the coding structure in general can be applied to one place, i.e. templates ; and common rules that need to be applied to manipulate DBMS  need to be coded once.","It will be understood that various changes in the details, materials, and arrangements of the parts which have been described and illustrated above in order to explain the nature of this invention may be made by those skilled in the art without departing from the principle and scope of the invention as recited in the following claims."],"BRFSUM":[{},{}],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"BRIEF DESCRIPTION OF THE DRAWINGS","p":["These and other features, aspects, and advantages of the present invention will become more fully apparent from the following description, appended claims, and accompanying drawings in which:",{"@attributes":{"id":"p-0011","num":"0010"},"figref":"FIG. 1"},{"@attributes":{"id":"p-0012","num":"0011"},"figref":"FIG. 2"},{"@attributes":{"id":"p-0013","num":"0012"},"figref":"FIG. 3"},{"@attributes":{"id":"p-0014","num":"0013"},"figref":"FIG. 4"}]},"DETDESC":[{},{}]}
