---
title: IP-based stream splicing with content-specific splice points
abstract: A method and system for conditioning a media stream for splicing are disclosed. In an embodiment, content-specific splice points, which correspond to a possible playout splice point within an original media stream, are identified for both audio and video components of the original media stream. Once the audio bitstream and video bitstream splice points are identified, the audio bitstream in the vicinity of the audio bitstream splice point is packetized into IP packets containing only audio with one of the audio-containing IP packets having an IP packet boundary that corresponds to the audio bitstream splice point and the video bitstream in the vicinity of the video bitstream splice point is packetized into IP packets containing only video with one of the video-containing IP packets having an IP packet boundary that corresponds to the video bitstream splice point. The conditioned original media stream is then transmitted downstream to a splicer.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09197857&OS=09197857&RS=09197857
owner: Cisco Technology, Inc.
number: 09197857
owner_city: San Jose
owner_country: US
publication_date: 20090501
---

{"@attributes":{"id":"description"},"RELAPP":[{},{}],"heading":["CROSS REFERENCE TO RELATED APPLICATIONS","TECHNICAL FIELD","BACKGROUND","SUMMARY","DESCRIPTION OF EXAMPLE EMBODIMENTS"],"p":["The current application is a continuation-in-part of patent application Ser. No. 10\/949,551, filed Sep. 24, 2004, titled, \u201cDISTRIBUTED ARCHITECTURE FOR DIGITAL PROGRAM INSERTION IN VIDEO STREAMS DELIVERED OVER PACKET NETWORK,\u201d and patent application Ser. No. 11\/933,483, filed Nov. 1, 2007, titled, LOCATING POINTS OF INTEREST USING REFERENCES TO MEDIA FRAMES WITHIN A PACKET FLOW, both of which are incorporated by reference herein.","The present invention relates generally to the field of digital video streaming technology, and more particularly, to personalized or targeted insertion of digital media into a digital media stream.","The cable and satellite television industry has experienced explosive growth in recent years. Not surprisingly, the sale and insertion of local and regional advertisements have become a huge source of revenue for cable television system operators that deliver programs to their subscriber customers. In the past, analog video ads were commonly inserted into analog satellite video feeds by the local cable operators. Most often, analog ads were stored on tape and switched into the network feed by analog video switches, with the switching process being triggered by a cue tone sequence on the associated audio feeds delivered together with the video feed and received by a satellite receiver. As more cable systems have been converted to deliver digitally compressed video to the customer's home, cable operators have developed a variety of new technologies for inserting digital advertising content into the digital bitstream.","In the digital realm, video programs are typically encoded into MPEG-2 video streams that are then multiplexed into a Multi-Program Transport Stream (MPTS) that is up-linked to an orbiting satellite. The Society of Cable Television Engineers Standard  (SCTE ) is a cable protocol that supports Digital Program Insertion (DPI) in MPEG-2 streams by defining digital cue tone signals that are inserted in the digital video stream at the \u201chead-end\u201d during the network encoding process. These cue tone messages exist as specific data packets with specific header information. Common cue tone signals include a pre-roll signal, which is sent approximately 5 to 8 seconds before splice time to indicate an upcoming available advertisement time slot (frequently referred to as an \u201cavail\u201d); a start signal, which marks the beginning of the avail and is used to trigger switching from the original video stream into the ad stream; and a stop signal, which occurs at the end of the avail for switching back to the original video stream. In DPI, digital cue tones in the form of Splice Information Tables (SIT) are typically inserted in the transport stream in the uplink and detected by a digital splicer at the local or regional head-end. A cue tone sequence is described in U.S. Pat. No. 5,600,366, which patent teaches digital ad insertion in video programming in which switchovers from network programming to local advertising occurs at packet or frame boundaries upon detection of idle information from a network source.","A conventional system for digital ad insertion is depicted in , which shows a digital video broadcast (DVB) transport stream from a satellite feed with SCTE  cue tones flowing into a centralized splicer . Splicer  also receives an ad transport stream from an ad server  that provides digital storage and streaming of various advertisements. Ads are typically selected by server  based on avail identification (avail-ID) information and program-ID (\u201cPID\u201d) information carried in the in-stream splice information tables. Control signaling between splicer  and ad server  is defined by the SCTE  standard protocol. An ad management system  may also interface with server  for handling ad scheduling, management and billing systems. Ad management system  may also provide user profiling, demographics and database analysis to determine which ads should be targeted at particular customers or end-users. By way of example, a computer-based method and system for targeting of advertisements and promotions based on past purchase behavior as a predictor of future purchase behavior is described in U.S. Pat. No. 6,735,572.","Splicer  performs the function of switching between the original video stream and the ad transport stream based on the information present in the SIT cue signals. In the example shown, for the same input signal, splicer  splices two different ads, thereby producing two video output streams containing different targeted ads that are then delivered to the end users (e.g., targeted customer groups  and ) via an Internet Protocol (IP) distribution network . Network  typically comprises a packet-based transmission medium having a plurality of edge devices (e.g., routers) - that provides connectivity across a dispersed geographic region.","One of the drawbacks of the conventional system shown in  is that the number of video output streams that can be delivered to different targeted groups is limited by the available bandwidth of distribution network . Hence, only a limited amount of targeting can be achieved. In other words, although the centralized architecture shown in  permits some targeting of ads to multiple groups, the problem is that bandwidth consumption places an upper limit on the amount of targeting that can be performed. Alternatively, the same DPI splicers used today in the central head-end location may be distributed to the edge locations of network . However, the problem with this approach is that it adds significant cost to the overall system, since expensive splicers are required at multiple edge locations.","Yet another problem with existing DPI systems is that it is often difficult to insure a seamless, high-quality transition into and out of the network stream. The reason for this difficulty lies in the fact that MPEG video streams comprise different types of frames that do not include all of the data to be displayed at any given time. In addition, the resulting stream follows a stringent buffer model. For instance, Inter-frames, or I-frames, are the only type of frame that is not coded with reference to any other frame; P-frames are coded predicatively from a previous I-frame or P-frame; B-frames are coded predicatively from I-frames and P-frames.","One of the complicating factors in the splicing of streams is that in order to be properly decoded, a B-frame associated with a group of pictures (\u201cGOPs\u201d, which usually consist of 15 frames) may need to reference the I-frame of a next GOP. To avoid delays in the decoding process, complex elementary\/picture level (i.e., at the MPEG layer) processing of the video stream often times must be performed. That is, expensive low-level processing is required to condition the digital video stream in order to guarantee seamless splicing of ads.","Transport stream level splicing is a digital splicing technique that avoids some of the drawbacks inherent in elementary\/picture level splicing. In transport stream level splicing, switching between streams takes place only on transport packet boundaries. Transport packets are typically 188 bytes long. Although this technique is simple and relatively inexpensive, it only works well in certain limited cases, such as well-conditioned streams in which there are no open GOPS, i.e., a GOP having a B-frame that can only be decoded by reference to the I-frame of a next GOP, or when the pictures are perfectly aligned with the packet boundary.","Thus, there remains an unsatisfied need for a new DPI architecture that overcomes the aforementioned problems in the prior art.","By way of further background, U.S. Pat. No. 6,718,553 teaches a system and method for delivery of digital broadcast television programming from a centralized aggregation head-end to subscribers in multiple markets using an interconnected terrestrial fiber optic network. Additionally, U.S. Pat. No. 6,505,169 teaches a method for adaptive ad insertion in streaming multimedia content. A method for splicing data packets of a commercial message into a pre-existing data stream that complies with the MPEG transmission standard is disclosed in U.S. Pat. No. 5,917,830. Finally, U.S. Pat. No. 6,044,081 teaches a hybrid communications system and multimedia system that allows private network signaling to be routed over a packet network.","In an embodiment, content-specific splice points, which correspond to a possible playout splice point within an original media stream, are identified for both audio and video components of the original media stream. Because of the temporal difference between audio transport stream packets and video transport stream packets, the audio bitstream splice point is temporally different from the video bitstream splice point. For example, the audio bitstream splice point temporally leads the video bitstream splice point by an encoder-specific time interval. Once the audio bitstream and video bitstream splice points are identified, the audio bitstream in the vicinity of the audio bitstream splice point is packetized into IP packets containing only audio with one of the audio-containing IP packets having an IP packet boundary that corresponds to the audio bitstream splice point and the video bitstream in the vicinity of the video bitstream splice point is packetized into IP packets containing only video with one of the video-containing IP packets having an IP packet boundary that corresponds to the video bitstream splice point. Content-specific splice points and may also be identified and separately packetized for other data within the original media stream, such as Entitlement Control Messages (ECMs), MPEG private data, and\/or MPEG control data.","The conditioned original media stream, which includes an audio IP packet with a boundary that corresponds to the audio bitstream splice point, a video IP packet with a boundary that corresponds to the video bitstream splice point, and possibly other content-specific IP packets with boundaries that correspond to content-specific splice points, is transmitted downstream to a splicer, for example, a splicer that is located at a PE device or a STB. The splicer can insert a secondary media stream at any of the possible playout splice points using IP packet splicing. Because the content-specific splice points are specific to a component of the original media stream (e.g., the audio, the video, and other data) there is no need to add silence or black information to IP packets and IP packet splicing can occur seamlessly without any service interruption or degradation.","In an embodiment, a method for conditioning a media stream for splicing involves receiving a media stream, wherein the media stream includes an audio bitstream and a video bitstream, identifying a possible playout splice point within the media stream, identifying an audio bitstream splice point within the audio bitstream as a function of the possible playout splice point, packetizing the audio bitstream into audio IP packets with one of the audio IP packets having an IP packet boundary that corresponds to the audio bitstream splice point, identifying a video bitstream splice point within the video bitstream as a function of the possible playout splice point, wherein the video bitstream splice point is temporally different from the audio bitstream splice point, packetizing the video bitstream into video IP packets with one of the video IP packets having an IP packet boundary that corresponds to the video bitstream splice point, generating a reference to the audio bitstream splice point, generating a reference to the video bitstream splice point, and transmitting the audio bitstream splice point reference, the video bitstream splice point reference, the audio IP packets, and the video IP packets to a splicer.","In an embodiment, a system for conditioning a media stream for splicing includes a conditioner, a point of interest producer, and a transmitter. The conditioner is configured to identify a possible playout splice point within a media stream, wherein the media stream includes an audio bitstream and a video bitstream, identify an audio bitstream splice point within the audio bitstream as a function of the possible playout splice point, packetize the audio bitstream into audio IP packets with one of the audio IP packets having an IP packet boundary that corresponds to the audio bitstream splice point, identify a video bitstream splice point within the video bitstream as a function of the possible playout splice point, wherein the video bitstream splice point is temporally different from the audio bitstream splice point, and packetize the video bitstream into video IP packets with one of the video IP packets having an IP packet boundary that corresponds to the video bitstream splice point. The point of interest producer is configured to generate a reference to the audio bitstream splice point, to generate a reference to the video bitstream splice point, and to generate a reference to any other stream for which a content-specific splice point is identified. The transmitter is configured to transmit the audio bitstream splice point reference, the video bitstream splice point reference, the audio IP packets, and the video IP packets to a splicer.","Other aspects and advantages of the present invention will become apparent from the following detailed description, taken in conjunction with the accompanying drawings, illustrating by way of example the principles of the invention.","A system for fine grain or personalized targeted insertion of a secondary media stream into an original media stream is described. In the following description, numerous specific details are set forth, such as device types, protocols, configurations, etc., in order to provide a thorough understanding of the present invention. However, persons having ordinary skill in the networking arts will appreciate that these specific details may not be needed to practice the present invention.","In the context of the present application, it should be understood that a computer network is a geographically distributed collection of interconnected subnetworks for transporting data between nodes, such as intermediate nodes and end nodes. A local area network (LAN) is an example of such a subnetwork; a plurality of LANs may be further interconnected by an intermediate network node, such as a router or switch, to extend the effective \u201csize\u201d of the computer network and increase the number of communicating nodes. Examples of the end nodes may include servers and personal computers. The nodes typically communicate by exchanging discrete frames or packets of data according to predefined protocols. In this context, a protocol consists of a set of rules defining how the nodes interact with each other.","Each node typically comprises a number of basic subsystems including a processor, a main memory and an input\/output (I\/O) subsystem. Data is transferred between the main memory (\u201csystem memory\u201d) and processor subsystem over a memory bus, and between the processor and I\/O subsystems over a system bus. Examples of the system bus may include the conventional lightning data transport (or hyper transport) bus and the conventional peripheral component interconnect (PCI) bus. The processor subsystem may comprise a single-chip processor and system controller device that incorporates a set of functions including a system memory controller, support for one or more system buses and direct memory access (DMA) engines. In general, the single-chip device is designed for general-purpose use and is not heavily optimized for networking applications.","In a typical networking application, packets are received from a framer, such as an Ethernet media access control (MAC) controller, of the I\/O subsystem attached to the system bus. A DMA engine in the MAC controller is provided a list of addresses (e.g., in the form of a descriptor ring in a system memory) for buffers it may access in the system memory. As each packet is received at the MAC controller, the DMA engine obtains ownership of (\u201cmasters\u201d) the system bus to access a next descriptor ring to obtain a next buffer address in the system memory at which it may, e.g., store (\u201cwrite\u201d) data contained in the packet. The DMA engine may need to issue many write operations over the system bus to transfer all of the packet data.","With reference now to , there is shown an example of a distributed architecture for targeted ad-insertion. In an embodiment, the centralized splicer function is disaggregated or segregated and the centralized splicer is replaced with a centralized conditioner\/marker device, which enables relatively simple IP-packet level splicing in distributed downstream locations. A head-end conditioner\/marker device creates IP splice points, with inexpensive, distributed IP-splicers being utilized downstream in the distribution network to insert personalized ads or other multimedia programs into a media stream such as a live television multicast program. In the architectural diagram of , a single output stream created by conditioner\/marker unit  is received by PE device  for distribution to end-user groups  &  via PE devices  & , respectively. The IP-packet level splicing function is performed by splicers in, or associated with, provider edge (PE) devices  and . As can be seen, PE devices  &  are located on the edge of distribution network , facing the targeted user groups  & , respectively.","In , head-end conditioner\/marker unit  receives a video transport stream embedded with SCTE  cue tone signals. In operation, conditioner\/marker unit  detects the SIT cue signals received in the input transport stream and, based on those cue signals, performs elementary and picture level processing functions. These functions may include closing open GOPs, anchor frame adjustment, inserting dummy or black frames when appropriate, ensuring that the MPEG decoder buffer is at the appropriate fullness level for splicing, and the creation of explicit transport stream splice-points. Conditioner\/marker unit  may also remap the video and audio PIDs to a commonly agreed upon set of PIDs.","Conditioner\/marker unit  is a network node that typically includes a generic networked computer platform as described above. In operation, each of the functions presently described may be performed by execution of a program of instructions on the processor of a network node or generic server or router which includes conditional\/marker unit .","In addition to performing elementary and picture level processing functions, conditioner\/marker unit  may also adjust the Real-Time Transport Protocol (RTP)\/User Datagram Protocol (UDP)\/IP packetization size to ensure that the splice-point occurs at an IP transport packet boundary. This adjustment may be performed in accordance with widely-used Society of Motion Picture and Television Engineer (SMPTE) standard known as SMPTE-312M, which is a standard that defines splice points for MPEG-2 transport streams. Additionally, unit  may mark the IP-splice point using a header field or inserting a special marking packet. For example, if RTP is used, marking may be performed by inserting a packet that contains splice information, and which packet is identified by a special splice information (\u201csplice_info\u201d) payload type. Conditioner\/marker unit  may also mark the corresponding audio RTP and adjust the packetization size to ensure that the splice-point occurs at an IP packet boundary. In certain cases, conditioner\/marker unit  may add \u201csilence\u201d information to the packet in order to make up for audio\/video time differences.","Another option is to add certain proprietary information on the RTP packet header that indicates the switching point. The ad video bitstream bit rate may be specified within this information.","Still another option is to have conditioner\/marker unit  insert a default local or regional ad, which ad may be replaced by one or more targeted ads by a downstream IP-splicer (e.g., one of the splicers shown associated with PE devices  & ).","It is to be further appreciated that the digital video elementary format employed in the system and method described herein is not limited to MPEG-2, but may also include MPEG-1, MPEG-4, H.26x, and\/or any future video compression standards. That is, the video transport port stream shown in the figures and described herein is not limited to MPEG-2 transport. In other words, the system and method described herein has applicability to other types of digital video transport streams such as directTV transport streams, RTP streams and any other future digital video transport streams.","According to the architecture shown in , conditioner\/marker unit  does not perform ad splicing. Instead, the IP-splicer functionality is located in PE devices (e.g., routers or switches)  &  on the multicast tree, so that targeted ads may be inserted for each edge multicast branch, which, in this example, comprises groups  & . The IP-splicer function may be realized by adding IP-slicing device technology to a conventional edge switch, router, or edge video server platform. In so-called \u201clast-mile\u201d networks, such as Direct Subscriber Line (DSL) and Ethernet-To-The-Home (ETTH) networks, the splicers associated with, or integrated on, PE devices  &  may insert personalized targeted ads for the streams sent to each home.","In an alternative embodiment, the splicers may be distributed into customer premises equipment (CPE) such as set-top boxes (STBs) of the end-users, with the content for insertion (e.g., ads) being stored locally or downloaded for storage therein. That is, rather than locating the splicer function in the PE devices associated with IP network , the splicers may be integrated into the set-top boxes associated with individual households. A STB is an electronic device that is connected to a communication channel, such as a phone, ISDN, or cable television line, and produces output on a conventional television screen. Set-top boxes are commonly used to receive and decode digital television broadcasts and to interface with the Internet through the user's television instead of a PC. Set-top boxes fall into several categories, from the simplest that receive and unscramble incoming television signals to the more complex that will also function as multimedia desktop computers that can run a variety of advanced services such as videoconferencing, home networking, IP telephony, video-on-demand (VoD) and high-speed Internet TV services.","In an embodiment, the IP-splicers function to receive conditioned multicast live television video streams and detect splice information and splice points, which may be marked, i.e., by conditioner\/marker unit . The distributed splicers utilize this splice information to signal an associated content (e.g., ad) insertion server to retrieve one or more content pieces (e.g., ads) for insertion into the video bitstream. In the example of , the splicer of PE device  signals ad server , and the splicer of PE device  signals ad server , to effectuate this purpose. Existing ad servers, such as those commercially sold by nCUBE Corporation of Beaverton, Oreg., may be used as servers  & . Each of ad servers  may communicate with a centralized ad management system  for handling ad scheduling, management and billing. Ad management system  may also provide store and provide information used to target at customers having certain demographics or viewing habits.","It should be understood that ad servers  &  need not be co-located or dedicated for use with the splicers associated with respective PE devices  & . That is, in certain embodiments, the ad servers may be remotely located or may comprise a single centralized ad server that serves numerous splicers of different edge devices. For example, the ad server functionality may be implemented by an ad server blade or ad cache inserted into an edge router or switch. In still another embodiment, the ad management function may be distributed throughout the IP distribution network rather than being centralized as shown in .","In operation, when an IP splice-point is detected, the IP-splicer switches between the original bitstream and the ad-bitstream. This switching occurs at the marked IP packet boundaries, and results in a single output stream sent to a particular targeted group or household (e.g.,  or ). This single stream may include both audio and video streams. Note that such an example represents the finest level of granularity for ad targeting, since basically there is a splicer\/edge device associated with each targeted group or household. Such an implementation also maximizes available bandwidth since only the single output stream generated by conditioner\/marker  need be distributed across IP network .","Another possibility is to move the IP-splicer function into a router or switch within network , but which device is not an edge device. In embodiments where the splicer function is distributed within network away from the edge devices (or where there are more than one STBs receiving the signal feed), multiple output streams may need to be generated by the splicer. Each of the output streams generated by the IP-splicer is sent\u2014with the inserted targeted ad\u2014to the appropriate branch of the multicast tree. To put it differently, an IP-splicer which is not located on an edge device may need to source multiple streams to different multicast group addresses.",{"@attributes":{"id":"p-0052","num":"0051"},"figref":["FIG. 3","FIG. 3","FIG. 2"],"b":["45","25","45","42","45","52","48"]},"Although  shows the ad server integrated into the TVoD device, it is appreciated that the ad server and TVoD device may be separate units, either co-located or remote located.","Conditioner\/marker and prep service unit  performs the same basic functions as unit  of  to produce a single output stream for targeted ad insertion of live television broadcasts as described previously. That is, unit  detects in-stream SIT cue signals that arrive in the original broadcast content received from the satellite feed, and, based on those cue signals, performs elementary and picture level processing, such as closing GOPS, inserting dummy or black frames, ensuring decoder buffer fullness levels are appropriate for splicing, align the picture with the packet boundary, and to create explicit transport stream splice-points. Unit  may also remap the video and audio PIDs to a commonly agreed upon set of PIDs. Additionally, conditioner\/marker and prep service unit  may mark the IP-splice point, using meta-information. Alternatively, marking may be performed using a header field or by inserting a packet with a special splice_info payload type, with the splice_info in the packet payload.","In addition to the basic functions described above, unit  prepares the output stream provided to TVoD\/ad server unit  for storage and subsequent viewing. (The term \u201cprogram stream\u201d is commonly used to refer to bitstreams that are primarily intended for storage and retrieval from storage media. In the context of the present description, the term \u201ctransport stream\u201d may be considered synonymous with the term \u201cprogram stream\u201d.)","In , the conditioned and marked multicast, real-time, broadcast video stream is shown passing through PE devices  &  for delivery to user group . (Note that the splicing and ad server functionality associated with edge device  is not shown in .)","The on-demand ad server of unit  uses the marked splice information points to insert personalized ads in the OD stream. This may be done in several different ways. According to one method of ad insertion, on-demand server  uses the marked splice information to create a template \u201cplay-list\u201d with place holders for personalized ads. Upon receiving a setup request from the STB the on-demand server  may use the subscriber-ID along with the splice information, such as the program-ID and avail-ID, to query an ad management system  to determine the appropriate ads to be inserted. At this point, the on-demand ad server generates a dynamic \u201cplay-list\u201d using the template previously created\u2014filling in the ad segments sequentially with selected personalized ads. In other words, a dynamic play-list is generated when a request for the program is made by the user. The video is then streamed using the dynamic play-list, with the targeted ad segments being inserted at the various marked placeholders.","According to a second method for inserting personalized or targeted ads, the on-demand server  streams the stored video transport streams in real-time. No play-list is created. Instead, upon detecting the marked splice information trigger points, the on-demand server  queries ad management system \u2014again, in real-time\u2014to determine the appropriate ads for splicing, using subscriber-ID, program-ID, avail-ID, etc., information. For example, the query may be performed in response to a pre-roll splice_info trigger which happens 5 to 8 seconds prior to the splice time. The prep service of unit  could also move the trigger point further back in time if necessary. During streaming, the on-demand server splices (e.g., simple transport stream level or IP stream level splicing) the ad stream at the marked splice_in point. At the marked splice_out point, the on-demand server  splices out of the ad stream and returns back to the original unicast stream.","As described above, splice points can be identified via digital SIT cue signals or analog cue tones. In other embodiments, possible splice points may be identified in other ways. For example, possible playout splice points can be identified by parsing event metadata, for example, event metadata that is carried in either a DVB Event Information Table (EIT) or other vendor-specific formats. In an embodiment, artificial event boundaries are identified using one-half hour wall clock boundaries. The event boundaries may correspond to traditional linear program boundaries (e.g., a showing of a sitcom or a showing of a movie), boundaries of operator generated clips (e.g., \u201cHow to run the TV remote\u201d or \u201cthe new channel lineup\u201d), boundaries of user-generated short content, boundaries of VoD assets, ad boundaries or interstitials.","Within an original media stream (e.g., a media stream that corresponds to the primary content the user desires to view), multiple possible playout splice points may be identified. The playout splice points may be used to insert any secondary media stream, including, for example, advertisement content or non-advertisement content. Regardless of whether a secondary media stream is spliced into the original media stream at any one of the possible playout splice points, the original media stream is conditioned so that splicing can be accomplished at the IP packet level.","MPEG-2 TS media streams include transport stream packets that carry portions of the audio bitstream and transport stream packets that carry portions of the video bitstream. The MPEG-2 TS media streams may also include transport stream packets that carry other information\/data, for example, Entitlement Control Messages (ECMs), MPEG private data, and\/or MPEG control data. As used herein the \u201cother data\u201d refers to data other than audio or video data. Within the MPEG-2 TS, the flow of audio transport stream packets is temporally offset from the flow of video transport stream packets. Typically, the content in the audio transport stream packets temporally leads the content in the video transport stream packets. One way to deal with the temporal offset between the audio transport stream packets and the video transport stream packets when generating an IP-based splice point is to add \u201csilence\u201d audio information or \u201cblack\u201d video information to an IP packet at the IP packet boundary. In an embodiment, the addition of silence and\/or black information can be avoided by identifying content-specific splice points, which correspond to a possible playout splice point within the original media stream, for both the audio and video bitstreams. Because of the temporal difference between the audio transport stream packets and the video transport stream packets, the audio bitstream splice point is temporally different from the video bitstream splice point. For example, the audio bitstream splice point temporally leads the video bitstream splice point by an encoder-specific time interval. Once the audio bitstream and video bitstream splice points are identified, the audio bitstream is packetized into audio IP packets with one of the audio IP packets having an IP packet boundary that corresponds to the audio bitstream splice point and the video bitstream is packetized into video IP packets with one of the video IP packets having an IP packet boundary that corresponds to the video bitstream splice point. That is, an audio IP packet is generated to have an IP packet boundary at the audio bitstream splice point and a video IP packet is generated to have an IP packet boundary at the video bitstream splice point. In an embodiment, for the entire duration of the splicing interval, the packet stream consists of IP packets containing nothing but video, IP packets containing nothing but audio, and IP packets containing other types of data. If the other types of data have their own distinct splice points, then the other data can be packetized into content-specific IP packets and spliced at their own content-specific splice point. If the other data is coupled to the video data, the other data can be comingled with the video data and spliced with the video data. Other types of data in the original media stream can be packetized in content-specific IP packets and truncated at content-specific splice points, or comingled with the video or audio bitstream splice points.","The conditioned original media stream, which includes an audio IP packet with a boundary that corresponds to the audio bitstream splice point and a video IP packet with a boundary that corresponds to the video bitstream splice point and may include other content-specific IP packets with corresponding content-specific splice points, is transmitted downstream to a splicer, for example, a splicer that is located at a PE device or a STB. The splicer can insert a secondary media stream at any of the possible playout splice points using IP packet splicing. Because the content-specific splice points are specific to the audio bitstream and the video bitstream, there is no need to add silence or black information to IP packets and IP packet splicing can occur seamlessly without any service interruption or degradation.",{"@attributes":{"id":"p-0063","num":"0062"},"figref":["FIG. 4","FIG. 4"],"b":["1000","1002","1004","1004","1006","1008","1009","1010","1012","1013"]},"In addition to conditioning the original media stream  according to content-specific splice points , references to the content-specific splice points are generated and transmitted to the splicer so that the content-specific splice points can be easily identified. A technique for generating references to points of interest (POIs) such as splice points and for transmitting the references to a POI consumer such as a splicer is described below.","In the case of possible playout splice points, which have content-specific splice points, references are generated for each content-specific splice point of each possible playout splice point. That is, for each possible playout splice point, a reference is generated for the audio bitstream splice point and a reference is generated for the video bitstream splice point. As described in more detail below, the references may be encapsulated and transmitted in special reference IP packets or in the headers of other downstream packets.  illustrates three IP packets , , and  that carry references to respective audio bitstream, video bitstream, and \u201cother\u201d bitstream splice points. The stream of IP packets illustrated in  includes audio-only IP packets, video-only IP packets, and \u201cother\u201d only IP packets in which at least one of the audio IP packets has a boundary that corresponds to the audio bitstream splice point , at least one of the video IP packets has a boundary that corresponds to the video bitstream splice point , and at least one of the \u201cother\u201d IP packets has a boundary that corresponds to the \u201cother\u201d bitstream splice point . The audio bitstream splice point reference packet identifies the audio packet that is at the audio bitstream splice point and the video bitstream splice point reference packet identifies the video packet that is at the video bitstream splice point. In the example of , the reference IP packets temporally lead the corresponding audio and video IP packets so that the splicer can efficiently perform IP packet splicing.","In an embodiment, lead-in indicators, which count down the time to the possible playout splice points, are generated and transmitted downstream to the splicer. The lead-in indicators allow the splicer to prepare for the splicing operation. In another embodiment, a simple pointer to the SCTE- data, or other native \u201cqueue tone\u201d format, is included in the reference stream. In another embodiment, pertinent information describing the possible playout splice point is extracted from the MPEG stream and included in the reference stream. In another embodiment, the entire SCTE- construct, or other native \u201cqueue tone\u201d format, is included in the reference stream.","In an embodiment, if the original media stream is encrypted, Entitlement Control Messages (ECMs) for the original media stream need to be transmitted in time for the decoder to receive the ECMs and to set up the decryptor. It is especially important to transmit the ECMs ahead of time when switching from an unencrypted secondary media stream back to the encrypted original media stream. In an embodiment, the ECMs should also be packetized into content-specific IP packets near the splice points so that the splicer can splice at the correct time.","In an embodiment, if the conditioned original media stream is interlaced. The original media steam ends with a bottom field and the inserted secondary media stream begins with a top field.","Two different techniques are described to accomplish clock recovery at the splicer. In one embodiment, a clock discontinuity is signaled at each splice point. The clock discontinuity signaling allows the splicer to seamlessly playout the audio and video. In another embodiment, the RTP headers point at each Program Clock Reference (PCR)\/Presentation Time Stamp (PTS)\/Decoding Time Stamp (DTS) reference in the secondary media stream so that the splicer can update the clock values in the secondary media stream.","In an embodiment, the audio and video PIDs of the secondary media stream are set to match the audio and video PIDs of the original media stream. In a true IPTV environment, the design of Single Program Transport Stream (SPTS) flows can make all of the PIDs the same on every service. This allows the splice points to substitute the flows without changing PIDs. In a Multiple Programs Transport Streams (MPTS) environment, the flows cannot all have the same PID values. In the MPTS case, the PIDs of the secondary media stream must be changed at the splice points to match the PIDs of the original media stream.","In an embodiment, a STB tunes to the original media stream and to one of N replacement streams. The original media stream \u201cgoes blank\u201d during an advertisement insertion window and then the replacement stream carries the desired advertisement. In an embodiment, the STB would select the replacement stream based on knowledge of the viewer.","In order to facilitate ad\/event tracking in the network and STB, a reference to the currently playing event can be included in a \u201conce-per-GOP\u201d reference. When the original media stream is playing, the \u201cevent ID\u201d from the metadata is included in the reference steam. When the secondary media stream is playing out, the \u201conce-per-GOP\u201d reference contains the \u201cevent ID\u201d for that content. Referencing the secondary media stream enables add fulfillment\/verification programs. Note that the reference to the secondary media stream may need to be obscured in order to defeat ad-skipping functionality in some STBs.","A technique for locating POIs using references to media frames within a packet flow is now described with reference to .  is a block diagram of an environment in which one embodiment of a system and method for locating points of interest using references to media frames within a packet flow is located. A system  delivers digital multimedia, video and\/or television services to subscribers over an Internet Protocol (IP) network .","Media source  encodes, formats, and transmits a digital media stream. The encoded media stream is then communicated to a media stream receiver , which stores, decodes, and\/or renders the media stream. Media stream receiver  may take the form of (for example) a digital set-top box, a digital video recorder, a home media server, a personal computer, a personal digital assistant, a mobile phone, etc. In this disclosure, the term \u201cmedia stream\u201d refers to a stream that includes video frames, audio frames, multimedia, or any combination thereof. Common encoding formats for digital media streams include MPEG-2, MPEG-4, H.264, and VC-1. In some environments, the encoded media stream represents a single program, and thus contains a video and an audio stream multiplexed together into a single program transport stream (SPTS).","System  also contains one or more components that are downstream of media source , and which perform intermediate processing of the encoded media stream.  contains one example of such a component, a video-on-demand (VoD) server . VoD server  ingests a media stream from media source  and plays the stream out at a later time in response to a user request (\u201con demand\u201d). VoD server  also processes the ingested stream to provide \u201ctrick mode\u201d capabilities, such as fast-forward, rewind, slow-motion, and pause. Another example of an intermediate processing component is a fast channel change server (not shown), which ingests a media stream from media source , and stores, into a cache, a moving \u201cwindow\u201d through the stream. This cache represents the last few seconds of the stream contents. On request, the fast channel change server plays out a portion (\u201cburst\u201d) of the cached window, in order to accelerate the channel change. Without such processing by a fast channel change server, a user typically experiences a delay in displaying the new stream that results from a channel change, during which time the screen might be frozen or blank.","These and other intermediate processing units operate by locating key frames or points of interest (POI) within the encoded stream. Key frames are video frames which can be decoded without reference to another frame. VoD server  provides some trick-mode functions by creating a trick mode stream which contains only key frames, or references to such frames. A fast channel change server uses key frames to resynchronize a decoder after a channel change. In addition to key frames, other points of interest in the encoded stream include program-specific information (PSI). Examples of PSI are program map tables (PMTs), program allocation tables (PATs), and entitlement control messages (ECM). PATs and PMTs both provide fundamental structural information about a stream, which a decoder uses to find and process the elements of that stream. ECMs contain keying information that is used to decrypt encrypted content appearing later in the stream. Having these elements explicitly identified as points of interest allows intermediate processing functions to determine which pieces to cache, without having to parse the stream. In addition to the two examples of intermediate processing discussed here (fast channel change and video-on-demand), a person of ordinary skill in the art will be aware of other intermediate processing functions which utilize points of interest, and the principles disclosed herein apply to these as well.","Using features disclosed herein, point-of-interest producer  generates references to these points of interest within the media stream, and provides these references to an intermediate component (e.g., a consumer of the points of interest) such as VoD server . Point-of-interest consumer  uses the references to locate the points of interest within the media stream. An intermediate component associated with point-of-interest consumer  uses the points of interest to perform its intermediate function (e.g. produce a trick mode stream). In the example of , this intermediate component is VoD server , and point-of-interest consumer  resides within VoD server . However, a person of ordinary skill in the art should appreciate that, in other embodiments, point-of-interest consumer  is separate from, but in communication with, an intermediate function such as VoD server .","Point-of-interest producer  can use different mechanisms to provide point-of-interest references to point-of-interest consumer .  is a block diagram of an embodiment in which media stream  is received by a point-of-interest producer \u2032 and by a point-of-interest consumer \u2032. Media stream  is a stream  of media packets that are either elementary stream packets, or elementary streams encapsulated within transport layer packets . The inventive concepts described herein apply to various types of elementary stream encapsulations, including (but not limited to): raw MPEG2 Transport Stream (TS) over legacy transport; MPEG2 Elementary Stream (ES) over UDP\/IP, RTP\/UDP\/IP and RTP\/TCP\/IP; MPEG2 TS over UDP\/IP, RTP\/UDP\/IP and RTP\/TCP\/IP.","Point-of-interest producer \u2032 examines media stream  to identify one or more media packets  that contain points-of-interest. In the example embodiment of , POI producer \u2032 generates a corresponding, but separate, points-of-interest stream  that contains references to these \u201cinteresting\u201d media packets  within media stream . Points-of-interest stream  is a stream of POI packets , where a POI packet  contains one or more references to media packets , within media stream , that were identified as points of interest. (In , these references are represented symbolically by lines . More details about mechanisms for implementing references to media packets  will be discussed later in connection with .","Point-of-interest consumer \u2032 receives points-of-interest stream , and also receives the original media stream . Point-of-interest consumer \u2032 uses points-of-interest stream  to locate individual points-of-interest (e.g., key frames, program-specific information) within media stream . In the example scenario of , four media packets (A-D) are identified as points-of-interest, and thus points-of-interest stream  contains four POI references (A-D). Once the points-of-interest are located, an intermediate processing function (not shown) uses the points-of-interest in a manner appropriate to its function.",{"@attributes":{"id":"p-0081","num":"0080"},"figref":["FIG. 7B","FIG. 7B"],"b":["150","210","270","270","210","220","270","250","220","210","160","270","250","270","230","240","250","260","230","150","120","120"]},{"@attributes":{"id":"p-0082","num":"0081"},"figref":["FIG. 7C","FIG. 7C"],"b":["150","210","280","210","280","230","210","230","220","290","230","220","160","280","290","280","220","290","290"]},"In some embodiments, RTP is used as the transport layer protocol, and the point-of-interest information is conveyed in the RTP header using RTP header extensions. The RTP header extension is formed as a sequence of extension elements, with possible padding. Each extension element has a local identifier and a length. Further details on RTP header extensions can be found in Internet draft-ietf-avt-rtp-hdrext-12.txt (\u201cA general mechanism for RTP Header Extensions\u201d). Examples of local identifiers in this context include point-of-interest classifier, SMPTE time code information, or MPEG stream hints that can be used for decoder optimization, trick play state generation, etc.","The concept of a frame or PSI as being a \u201cpoint-of-interest\u201d should be familiar to a person of ordinary skill in the art, as will various mechanisms used to select \u201cpoints of interest\u201d. Commonly used selection criteria include selecting the start of all I-frames, all PSIs, all ECMs, or various combinations of these criteria. In one embodiment, selection criteria involves selecting anchor frames. In this disclosure, an anchor frame is an I-frame, instantaneous decoder refresh frame (IDR-frame), or a frame that depends only on a past single reference frame that is the most-recently decoded anchor frame.","As described above in connection with , the same technique for identifying and encoding the POI information described herein can be used in many different ways: the POI information can be included in the steam as originated (e.g. included by the encoder); the media stream can be processed to produce a new stream of the same or a different protocol with POI annotations; or a separate POI annotation stream can be produced, leaving the original stream untouched. Having described in general the relationship between media stream  and the other streams (, , , ) the syntax and encoding of points-of-interest information will now be described in more detail in connection with the diagrams of .","As can be seen in , media stream  is formatted as a stream of application-layer packets, referred to earlier as media packets . A media packet  encapsulates items such as a video frame, PSI, audio segments, etc. In some embodiments, these items can be split across media packets , so that one media packet  contains only a portion of a video frame, PSI, or audio segment.","Media packets  are encapsulated within transport layer packets , where each transport layer packet  includes a transport layer header H and a transport layer payload P. Transport layer packets  are in turn encapsulated by additional protocol layers, shown here as an additional header . In the embodiments described herein, Internet Protocol (IP) is used as the network layer and Real-time Transport Protocol (RTP) in combination with User Datagram Protocol (UDP) is used as the transport layer, with the media packets multiplexed into an MPEG2 Transport Stream. A person of ordinary skill in the art should be familiar with MPEG2 transport, IP, UDP and RTP packet formats, so headers and payloads have been simplified in .","As described earlier, point-of-interest producer  locates key frame media packets and program-specific information (PSI) media packets, and generates a reference to each of these points of interest. The first level reference to a particular media packet  identifies the containing transport layer packet . A particular transport layer packet  is identified by a flow identifier  and a flow-unique packet identifier . A person of ordinary skill in the art should be familiar with the concept of a packet flow, which consists of a series of packets between two endpoints, where the two endpoints are identified by information contained in each packet header. An RTP flow is defined by a destination address and a destination port (both part of IP\/UDP header ), and a synchronization source identifier (SSRC, part of transport layer header H). Thus, the combination of destination address, destination port, and SSRC serves as a flow identifier  for an RTP flow. In the case of RTP, the packet identifier  is a sequence number .","In the example scenario shown in , point-of-interest producer  processes transport layer packet -A, and identifies two points of interest, namely, -A and -A. References to these two points-of-interest are then added to points-of-interest stream  (shown in ). Since both points of interest are located in the same transport layer packet (-A), the first reference begins with a flow reference  and a transport packet reference , which together identify a particular transport layer packet (here, -A). In , flow reference  \u201cpoints\u201d to the flow identifier fields of transport layer packet -A, but a person of ordinary skill in the art should appreciate that this implies that flow reference  has the same values as the flow fields (destination address, destination port, SSRC) in transport layer packet -A. Similarly, transport packet reference -A \u201cpoints\u201d to the packet identifier field  of transport layer packet -A, which implies that transport packet reference -A is set to the same value as the packet identifier field .","Since a transport layer packet can carry multiple media packets, the reference to media packet -A continues with a media packet reference -A. In , media packet reference -A \u201cpoints\u201d to media packet -A as the first media packet within the transport layer packet . A person of ordinary skill in the art should appreciate that the symbolic representation used here (arrows between packet fields) can be implemented by setting media packet reference  to any value that specifies one packet in the sequence of media packets conveyed in transport layer packet . For example, media packet reference  can be a media packet number (e.g., first, second, etc.) or a byte offset (e.g., 0, 1\u00d7 media packet size, etc.). In this example embodiment, the reference to media packet -A concludes with a point-of-interest classifier -A or type, further describing the point-of-interest. For example, a classifier  can describe a key frame, a particular type of key frame (e.g. I-frame), a PSI, or a particular type of PSI.","Point-of-interest producer  then adds a second reference to points-of-interest stream , the reference to point-of-interest -A. Since this point-of-interest is contained in the same transport layer packet (-A), it is unnecessary to repeat the flow reference () and the transport reference (-A). The second point-of-interest (-A) is simply identified as the last media packet (-A) in transport layer packet -A.",{"@attributes":{"id":"p-0092","num":"0091"},"figref":"FIG. 8B","b":["150","230","230","240"]},{"@attributes":{"id":"p-0093","num":"0092"},"figref":"FIG. 8C","b":["150","230","230","350","220","360","370"]},"The embodiment of  uses a combination of RTP and UDP as a transport layer. Another embodiment that uses UDP without RTP is now described in connection with . Media packets  are encapsulated within UDP packets , where each UDP packet  includes a UDP header H and a UDP payload P. UDP packet  is in turn encapsulated by additional protocol layers, shown here as an additional IP header . A particular UDP packet  belongs to a flow , identified by source IP address, destination IP address, protocol identifier (UDP), source UDP port, and destination UDP port.","In the example scenario shown in , point-of-interest producer  processes transport layer packet -J, and identifies one point-of-interest, namely -J. References to this point-of-interest are then added to points-of-interest stream . The first reference begins with a flow reference  that partially identifies transport layer packet -J. In , flow reference  \u201cpoints\u201d to the flow identifier fields of transport layer packet -J, but a person of ordinary skill in the art should appreciate that this implies that flow reference  has the same values as the flow fields (source and destination address, source and destination port) in transport layer packet -J.","The partial identification of transport layer packet -J is completed by transport packet reference . In the embodiment described above, RTP sequence numbers are used as transport packet references. However, UDP does not use sequence numbers, and there is nothing that is conveyed in the UDP packet itself which uniquely distinguishes one UDP packet from another. The embodiment of  uses a technique whereby UDP packets are identified by a checksum. This checksum is computed by point-of-interest producer  and used as transport packet reference  within points-of-interest stream . Point-of-interest consumer  then computes a checksum on incoming packets, and uses this computed checksum as a transport packet identifier. In this manner, point-of-interest consumer  is able to distinguish among UDP packets belonging to the same flow, even though the packets themselves do not carry a unique identifier. In these embodiments, the checksum can be computed over any combination of the UDP header and UDP payload (which encapsulates an MPEG Transport Packet). In one example, the identifier is a checksum for UDP packet .","The embodiment of  uses a media packet reference  to specify a particular media packet  within transport layer packet -J. Media packet reference  is similar to the one described above for the UDP+RTP embodiment of , specifying either a packet number offset or a byte offset within the UDP payload P. This embodiment can also use a point-of-interest classifier  or type, further describing the point-of-interest (e.g., key frame, I-frame, B-frame, P-frame, PSI, PMT, PAT, ECM, splice point, etc.)",{"@attributes":{"id":"p-0098","num":"0097"},"figref":"FIG. 10","b":["150","500","510","520"]},"Processing continues at block , where each point-of-interest is identified with a reference to a containing transport packet, and media packet within the transport packet. As described above, in one embodiment the reference is a combination that identifies the flow, the particular transport packet within the flow, and the particular media packet within the transport packet. In some embodiments, the reference also includes a description of the point-of-interest, such as frame or PSI, type of frame (I, B, P, etc.) and type of PSI (PMT, PAT, etc.).","Next, at block , a packet or series of packets that contain the references to points-of-interest are generated. As described above (in connection with ), some embodiments modify the transport layer headers of the original media packets to include point-of-interest information (such as a point-of-interest classifier), while other embodiments (described above in connection with ) generate reference packets or \u201cpoint-of-interest\u201d packets which are separate and distinct from media packets. A person of ordinary skill in the art should realize that when separate media and reference packets are used, the protocol used to carry the references is not required to be the same as the protocol that encapsulates the media packets (although the same protocol can be used). For example, one embodiment uses UDP to encapsulate MPEG-2 transport packets, but RTP to encapsulate the points-of-interest stream.","Processing continues at block , where the stream of packets containing the references to points-of-interest is transmitted to a receiver containing point-of-interest consumer  (). At block , which is optional, the packets containing the multimedia flow (received at block ) are transmitted to the same receiver. These data flows may be in real time, or may be done in a non-real-time mode.",{"@attributes":{"id":"p-0102","num":"0101"},"figref":"FIG. 11","b":["160","600","610","620","630"]},"Processing continues at block , where additional information within the current point-of-interest reference packet is used to locate the appropriate media packet within the already-identified (at block ) transport packet. In this example embodiment, the media packet reference field within the reference packet is used to find the appropriate media packet within the series (e.g., the first, second, etc.).","Next, at block , the media packet found at block  is processed by some intermediate processing function, or is handed off by such an intermediate processing functions. The role of intermediate processing functions (such as trick mode stream generation in video-on-demand servers and locating key frames in fast channel change servers) is discussed above, and should be familiar to a person of ordinary skill in the art.","Block  determines whether any reference packets remain to be processed. If Yes, then processing starts for the next reference packet, at block . If No, process  is complete.",{"@attributes":{"id":"p-0106","num":"0105"},"figref":"FIG. 12A","b":["150","160","150","710","710","160","720","710","730","730","740","730","150","150"]},{"@attributes":{"id":"p-0107","num":"0106"},"figref":"FIG. 12B","b":["150","160","150","710","710","160","750","160","720","730","710"]},"Several other flow variations (not shown) are contemplated. In one, each receiver receives the primary media stream and the points-of-interest stream on a single IP unicast address. The two streams are differentiated by UDP port number. In another variation, different IP multicast addresses are used to deliver points-of-interest stream  to different receivers. In yet another variation, the points-of-interest stream is delivered to multiple receivers using the same multicast IP address, but different UDP ports. In still another variation, the points-of-interest stream is delivered to different receivers on a single multicast IP address and a single UDP port, but distinguished by different PIDs.",{"@attributes":{"id":"p-0109","num":"0108"},"figref":"FIG. 13","b":["160","150","160","150","810","820","830","840","850"]},"Memory  contains instructions that are executed by processor  to control operations of consumer  or producer . Peripheral I\/O interface  provides input and output signals, for example, user inputs from a remote control or front panel buttons or a keyboard, and outputs such as LEDs or LCD on the front panel. Network interface  transmits\/receives points-of-interest stream , media stream , and\/or combined stream  (depending on the configuration). In some embodiments, network interface  is for a local area network (LAN) or a wide area network (WAN) such as the Internet. In other embodiments, this interface is for a radio frequency (RF) network, and so may include a tuner\/demodulator (not shown) which processes the digital signals received over the RF network.","Omitted from  are a number of conventional components, known to those skilled in the art, that are unnecessary to explain the operation of the systems and methods disclosed herein. A person of ordinary skill in the art should understand that software components referred to herein includes executable code that is packaged, for example, as a standalone executable file, a library, a shared library, a loadable module, a driver, or an assembly, as well as interpreted code that is packaged, for example, as a class.",{"@attributes":{"id":"p-0112","num":"0111"},"figref":["FIG. 14","FIG. 14"],"b":["1402","1404","1406","1408","1410","1412","1414","1416","1418"]},"In an embodiment, the conditioner\/marker  is configured to identify the possible playout splice points within the original media stream, to identify the audio and video bitstream splice points as a function of the possible playout splice point, and to packetize the audio and video bitstreams into audio-only and video-only IP packets, with one of the audio IP packets having an IP packet boundary that corresponds to the audio bitstream splice point and one of the video IP packets having an IP packet boundary that corresponds to the video bitstream splice point. The conditioner\/mark  may also identify other content-specific points as a function of the possible playout splice point and packetize the corresponding other data into IP packets that contain only the corresponding data, with one of the content-specific IP packets having an IP packet boundary that corresponds to the content-specific splice point. In an embodiment, the point of interest producer  is configured to generate references to the audio and video bitstream splice points and a transmitter (not shown) within a PE device is configured to transmit the audio bitstream splice point reference, the video bitstream splice point reference, the audio IP packets, and the video IP packets to a splicer.","The above-described technique for conditioning a media stream with content-specific splice points is applicable to multicast and unicast video applications as well as broadcast video. Additionally, the technique is not limited to ad-insertion applications. That is, the technique is applicable to conditioning any media stream for insertion of a different media stream. Additionally, possible playout splice points can be identified at locations other than locations identified by SCTE  cue tones.","It should also be understood that elements of the present invention may also be provided as a computer program product which may include a machine-readable medium having stored thereon instructions which may be used to program a computer (or other electronic device) to perform a process. The machine-readable medium may include, but is not limited to, floppy diskettes, optical disks, CD-ROMs, and magneto-optical disks, ROMs, RAMs, EPROMs, EEPROMs, magnet or optical cards, propagation media or other type of media\/machine-readable medium suitable for storing electronic instructions. For example, elements of the present invention may be downloaded as a computer program product, wherein the program may be transferred from a remote computer (e.g., a server) to a requesting computer (e.g., a customer or client) by way of data signals embodied in a carrier wave or other propagation medium via a communication link (e.g., a modem or network connection).","Furthermore, although the present invention has been described in conjunction with specific embodiments, those of ordinary skill in the computer networking arts will appreciate that numerous modifications and alterations are well within the scope of the present invention. For example, it is appreciated that the video streams of the foregoing description may be either encrypted or unencrypted signals. In the case of encrypted signaling, ordinary encryption\/decryption devices may be incorporated into one or more of the devices described above. Accordingly, the specification and drawings are to be regarded in an illustrative rather than a restrictive sense."],"BRFSUM":[{},{}],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"BRIEF DESCRIPTION OF THE DRAWINGS","p":[{"@attributes":{"id":"p-0019","num":"0018"},"figref":"FIG. 1"},{"@attributes":{"id":"p-0020","num":"0019"},"figref":"FIG. 2"},{"@attributes":{"id":"p-0021","num":"0020"},"figref":"FIG. 3"},{"@attributes":{"id":"p-0022","num":"0021"},"figref":"FIG. 4"},{"@attributes":{"id":"p-0023","num":"0022"},"figref":"FIG. 5"},{"@attributes":{"id":"p-0024","num":"0023"},"figref":"FIG. 6"},{"@attributes":{"id":"p-0025","num":"0024"},"figref":"FIG. 7A"},{"@attributes":{"id":"p-0026","num":"0025"},"figref":"FIG. 7B"},{"@attributes":{"id":"p-0027","num":"0026"},"figref":"FIG. 7C"},{"@attributes":{"id":"p-0028","num":"0027"},"figref":"FIGS. 8A-C"},{"@attributes":{"id":"p-0029","num":"0028"},"figref":"FIG. 9"},{"@attributes":{"id":"p-0030","num":"0029"},"figref":["FIG. 10","FIG. 6"]},{"@attributes":{"id":"p-0031","num":"0030"},"figref":["FIG. 11","FIG. 6"]},{"@attributes":{"id":"p-0032","num":"0031"},"figref":"FIGS. 12A and 12B","b":["150","160"]},{"@attributes":{"id":"p-0033","num":"0032"},"figref":["FIG. 13","FIG. 6"]},{"@attributes":{"id":"p-0034","num":"0033"},"figref":"FIG. 14"}]},"DETDESC":[{},{}]}
