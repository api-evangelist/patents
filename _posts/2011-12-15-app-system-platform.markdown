---
title: App system platform
abstract: Embodiments illustrated and described herein provide systems, methods, and software of an app system platform that enables apps to provide rich user experiences in accessing and utilizing functionality of an enterprise-class computing system, such as an ERP system. Some such embodiments include groups of mapper objects in a web framework for each supported app that handle specific data types communicated between the app and a web platform. The mapper objects transform data between app consumable formats and formats of connector objects. The connector objects operate to transform data between the respective connector object formats and data formats of consumable by an enterprise-class computing system via interfaces. These and other embodiments are illustrated and described herein.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09280400&OS=09280400&RS=09280400
owner: SAP SE
number: 09280400
owner_city: Walldorf
owner_country: DE
publication_date: 20111215
---

{"@attributes":{"id":"description"},"BRFSUM":[{},{}],"heading":["BACKGROUND INFORMATION","DETAILED DESCRIPTION"],"p":["Modern enterprise-class computing systems, such as Enterprise Resource Planning (ERP) systems, are highly capable of performing processing functions for many organizations. However, for many different reasons user interaction with such systems has generally required users to at least be connected to a particular network or utilize a thick-client application. Thus, despite the modern-nature of enterprise-class computing systems, users have not been able to interact with these systems according to modern application delivery models, such as through apps delivered via one or both of a web browser and device apps, such as an app that executes on a smartphone-type device.","In the following detailed description, reference is made to the accompanying drawings that form a part hereof, and in which is shown by way of illustration specific embodiments in which the inventive subject matter may be practiced. These embodiments are described in sufficient detail to enable those skilled in the art to practice them, and it is to be understood that other embodiments may be utilized and that structural, logical, and electrical changes may be made without departing from the scope of the inventive subject matter. Such embodiments of the inventive subject matter may be referred to, individually and\/or collectively, herein by the term \u201cinvention\u201d merely for convenience and without intending to voluntarily limit the scope of this application to any single invention or inventive concept if more than one is in fact disclosed.","The following description is, therefore, not to be taken in a limited sense, and the scope of the inventive subject matter is defined by the appended claims.","The functions or algorithms described herein are implemented in hardware, software or a combination of software and hardware in one embodiment. The software comprises computer executable instructions stored on computer readable media such as memory or other type of storage devices. Further, described functions may correspond to modules, which may be software, hardware, firmware, or any combination thereof. Multiple functions are performed in one or more modules as desired, and the embodiments described are merely examples. The software is executed on a digital signal processor, ASIC, microprocessor, or other type of processor operating on a system, such as a personal computer, server, a router, or other device capable of processing data including network interconnection devices.","Some embodiments implement the functions in two or more specific interconnected hardware modules or devices with related control and data signals communicated between and through the modules, or as portions of an application-specific integrated circuit. Thus, the exemplary process flow is applicable to software, firmware, and hardware implementations.","Concepts like \u201capps\u201d or \u201cappstore\u201d are today closely related to mobile apps and devices. Apps are light, fast, intuitive, and nice. Modern enterprise-class computing systems, such as Enterprise Resource Planning (ERP) systems, can be viewed as the opposite of apps, often being rigid, monolithic, and cryptic. Much of the functional value of such enterprise-class computing systems is often in the business logic implemented therein. However, the delivery of the functional value in such enterprise-class computing systems does not meet modern standards of rich user experiences, as typically provided by apps, and are often tethered exclusively to specific desktop platforms.","Various embodiments illustrated and described herein provide a platform for scalable and flexible delivery of the enterprise-class computing system functional value to any device, through native device and browser-based apps while allowing rich user experiences with high performance. Such apps are provided through unification with an architecture of an enterprise-class computing system to enable delivery and enhancement of functionality at the level of mobile devices and web browsers. These embodiments enable new solutions and greater organizational and user flexibility.","These new and flexible solutions leverage an enterprise-class computing system backend, which persists data, logic, and user interface definitions, which are transformed within a web framework for delivery to apps. Some such embodiments include connector objects that connect the web framework to the enterprise-class computing system backend and object mappers that transform data between connector objects and formats needed by apps. Different forms of data may be communicated, connected, and transformed in accordance with various communication protocols and data formatting specifications, which may include one or more of open standards-based, proprietary, and implementation specific communication protocols and data formatting specifications. Example embodiments of some such solutions are illustrated and described with regard to  and .",{"@attributes":{"id":"p-0015","num":"0014"},"figref":"FIG. 1","b":["100","100"]},"The system  generally includes three layers of devices. These layers include a delivery layer , a web platform layer , and an enterprise layer .","The delivery layer  includes various computing devices , ,  upon which apps may be delivered according to the various embodiments herein. The various computing devices , ,  may include a smartphone , a tablet , and a personal computer  (i.e., laptop, desktop, etc.). Other device types may include set top boxes; web-enabled televisions; a smart, web-enabled console of an automobile; an optical disk player (i.e., DVD player, Blu-ray player); and other device-types that currently or may in the future be enabled for apps that are either native device apps or apps that may operate within a web browser.","The web platform layer  may include one or more computing devices connected to a network, such as the Internet, over which the web platform layer  may communicate with devices in the delivery layer . The web platform layer  also communicates with devices in the enterprise layer  over a network, which may be the same network over which the web platform layer  communicates with the delivery layer  or a different network, such as one or more of a system area network, a local area network, and other network types.","The web platform layer  typically includes at least one computing device  upon which a web server and an application framework execute to receive, process, and fulfill data requests from devices in the delivery layer . As is readily apparent to a person of skill in the art, the web platform layer  may include many computing devices that may be co-located or distributed in multiple locations, but operate in conjunction with one another to load balance, enhance security and reliability, and meet demand needs with low latency.","The enterprise layer  is representative of one or more enterprise-class computing systems, such as an ERP system, for example an ERP system available from SAP AG of Waldorf, Germany. ERP systems operate on at least one computing device , but in many instances, an ERP system may operate on many computing devices . ERP systems generally integrate management functions of an organization, often including modules for accounting, finance, customer relationship management, manufacturing, sales, service, and other business functions. ERP systems persist data in databases and provide functionality and data processing capabilities throughout an organization. User interaction with ERP systems is often through thick-client applications. Some ERP systems provide abilities for users to interact with the system through web pages. However, ERP systems that allow interaction via web pages are typically provided via a hosted, Software-as-a-Service model and are entirely web-based and are not operated nor maintained by the organization the web-based ERP solution is supporting.","The web platform layer  provides abilities to organizations utilizing an ERP system that they self-host to deliver ERP system functionality to native device apps and web browsers. The web platform layer  bridges the two different computing worlds and sophisticated architectural makeups of ERP systems and web solutions. Through connector and mapper objects within the web platform layer , data, user interface definitions, and functionality are transformed to enable apps in the delivery layer to provide rich user experiences with regard to the functionality embedded within the enterprise layer .",{"@attributes":{"id":"p-0022","num":"0021"},"figref":["FIG. 2","FIG. 1"],"b":["200","200","230","202","102","104","106"]},"The app  communicates with a web server  over a network , such as the Internet and may include one or both of a wireless computer network and 3G or 4G wireless network connection. The web server  is one element of a web platform layer  of the system . The web platform layer  also includes a web framework , which in some contexts is referred to as a web application framework or an application server. Objects execute within the web framework  to communicate with an application, such as an enterprise-class computing system that executes in an enterprise layer .","The web server  is generally a software application that operates to receive, process, and respond to data requests received via the network from the app . The web server , in some embodiments, may be an NGINX\u2122 web server. However, in other embodiments the web server may be of a different type, such as an Apache web server. The web server  may retrieve data, including content, in response to received requests or redirect requests to another network location capable of servicing the request. In some embodiments, the web server  communicates via a Web Server Gateway Interface (WSGI) with the web framework , or other interface depending on the particular type of the web framework , to route requests to different objects that execute within the web framework . Requests are typically routed by the web server  based on a Universal Resource Identifier (URI), such as a Universal Resource Locator (URL), or routing data included in a request.","The web framework  is generally a software framework within which other computer code, compiled or scripting code, can execute, such as objects. The web framework  typically includes existing facilities leveraged by objects that execute therein to access databases, templates, content of various types, to access functions commonly used by objects, and other facilities. The web framework  may also perform other functions such as session management, caching, providing at least one interface such as a WSGI interface for receiving and making requests of other system  elements, and other ancillary services. The web framework , in some embodiments may be a Pyramid web framework, but other web frameworks are utilized in other embodiments, such as Python\u2122 web frameworks Zope and Django\u00ae, Ruby programming language web framework Ruby on Rails\u00ae (RoR), and other competing frameworks. Objects that execute within the web framework  are typically accessed via the WSGI interface of the web framework  by the web server , and in some instances by a process in an enterprise layer .","The enterprise layer  generally represents an enterprise-class computing system, such as an ERP system. An example ERP system, such as an ERP system available from SAP AG of Waldorf, Germany, includes business logic  executable to perform activities including creating, reading, updating and deleting data stored in one or more databases . Some such systems may utilize a data dictionary  that informs various elements of the enterprise layer  about data stored in the one or more databases  about meaning, data relationships, formats, usage, dependencies, primary and secondary sources of the data, storage locations, and other information about data stored in the one or more databases . The business logic  may provide not only receive data and command input, but also may provide data output and user interface information to requestors. In some embodiments, the business logic  may also push data to the app  via the web platform layer .","Within the enterprise layer , input is received and output is provided via one or more interfaces , , . The interfaces , ,  each typically communicate data in distinct forms from one another. Although three interfaces , ,  are illustrated and described, other embodiments may include fewer, more, and different interfaces according to different communication protocol and data specifications.","Interface , in some embodiments, is a remote function module that exists to receive and reply to remote function calls. The interface  may communicate remote function calls and responses via TCP\/IP, HTTP(S), or other protocol with the data encoded according to a proprietary remote function standard, XML, or other data-encoding standard.","Interface  may be a user interface module that exists to receive and respond to requests for user interface definitions from which user interfaces are generated. For example, some ERP systems provide client application user interface definitions, which are consumed by client applications to present user interfaces for presenting data and receiving input. Such user interface data may be communicated via the interface  via a protocol such as HTTP(s) encoded according to one or more of several data formats. User interface data transmitted via the interface  may, in some embodiments, also include application data. The data formats of the interface  may be text, HTML, XML, Java Script Object Notation (JSON), or other lightweight text-based open standard design tailored for human-readable data interchange.","Interface  is a web services interface that receives and provides web service functionality and data. The interface  may communicate via HTTP(S) or other suitable protocol depending on the particular embodiment. Data received and communicated via the interface  may be encoded according to a standard, such as XML, Simple Object Access Protocol, or other standard.","Conventionally, the interfaces , ,  have been utilized to facilitate enterprise layer  communication directly with client applications in a standard, client-server type architecture. Client applications directly access data, make remote function calls, and access web services. However, such client applications do not provide the flexibility, rich user experiences, and mobility expected by modern application users. Thus, to facilitate the app  providing the type of experience users expect in modern computing and with the functionality of an enterprise-class computing system, embodiments may include two types of objects in the web platform layer  that execute within the web framework . The two types of objects are mapper objects  and connector objects .","Mapper objects  include groups , ,  of mapper objects for each app  supported by the system . Each app  supported by the system  is an app that may operate on multiple different device and browser platforms, but in the sense of the system  is a single supported app. For example, the app  may execute on multiple smartphone device types, multiple tablet device types, and within multiple browser types that support apps or are otherwise capable of executing app code elements within the browser, such as an applet. Thus, as illustrated in , the system  supports multiple apps  and each app  is supported by a respective group , ,  of mapper objects .","In some embodiments, each group , ,  of mapper objects  includes a mapper object for each type of connector object  that exists in the system . The connector objects  include a connector object for each of the interfaces , ,  within the enterprise layer . Thus, as illustrated in , the system  supports three different apps due to the three groups , ,  of mapper objects . Each group , ,  of mapper objects  includes an object, such as mapper objects , , , for each respective connector object , , . Each connector object , ,  also has a respective enterprise layer  interface , , .","Mapper objects  execute to process data requests forwarded by the web server  and data received from connector objects . The web server  or a process of the web framework  selects an appropriate mapper object  to receive the request based on at least one of an app from which the data request was received and a data interchange protocol the request is encoded in. For example, in some embodiments and as illustrated in , mapper objects  include groups , ,  of mapper objects where each group is implemented with regard to a particular app. Thus, when a request is received, the request is routed to a mapper object in the mapper object group of the app from which the request was received. Further, depending on the request type, a particular one of the mapper objects in an appropriate object mapper group , ,  will be invoked. The appropriate mapper object in the appropriate object mapper group , ,  may be identified based on a protocol utilized in transmitting or encoding the request. For example, if the request is encoded in a HTML, the request may be for user interface data and the request is routed to a user interface mapper object  of the appropriate mapper object group. Similarly, if the request is a remote function call or a web services call, the request is routed to a remote function call mapper object  and a web services mapper object , respectively.","Each mapper object  executes to perform different functions. These functions of each mapper objet  include transforming data between the data interchange protocol of the app and a format of a connector object  associated with the particular mapper object  and vice versa. These functions further include, when receiving a data request from the web server , forwarding transformed data of a data request to the connector object  associated with the particular mapper object . The functions of each mapper object  further include, when receiving data from a connector object , forwarding transformed data received from the respective associated connector object  to the web server  for communication back to the requesting app .","Connector objects  execute to process data requests forwarded by object mappers and data in response to data requests forwarded to the enterprise layer  via the interfaces , , . Each connector object  is executable to transform data between the format of the respective connector object  into at least one data interchange protocol of an interface of the enterprise layer . Each connector objects  is further executable to forward transformed data of a data request received from a mapper object  to an interface , ,  of the enterprise layer . The connector objects  are also executable to forward transformed data received from an interface , ,  of the enterprise layer  to an appropriate mapper object  from which the data request at the connector object  was received.","Due to the flexible nature of how mapper objects  and connector objects  can be associated, the web framework  of the system  allows for easy addition of new mapper objects  and connector objects  to meet evolving needs of an organization. For example, if a new app  is to be deployed that will access at least some functionality of the enterprise layer , one or more new mapper objects  may be defined and associated with appropriate connector objects  for the new app. Further, in the event of a change to one of the interfaces , ,  of the enterprise layer , it is unlikely the mapper objects  will need to be changed. Instead, the needed modifications would be made to the connector objects . Similarly, if a change is made to the app  that impacts data communicated from or to the app , only the mapper objects  of a mapper object  group , ,  would need to be modified. Thus, changes can be effected rapidly and without significant impact on the enterprise layer  or various apps  supported by the system .","In an example embodiment, the app may submit a request for data via the network  to the web server . In some embodiments, the web server  may identify that the request is received from a particular app and encoded according to an application protocol such as HTTP. In such embodiments, based on the particular app and the particular data format, the web server  may forward the request to a particular group  of mapper objects  within the web framework . In other embodiments, the web server  may determine, based on a URI of the request or data included therein, that the request is with regard to an object in the web framework . The web server  may then simply forward the request from the app to the web framework  to route to the appropriate mapper object .","Assuming the request is an HTTP request, the request may be forwarded to the user interface mapper object  of the mapper object  group . The user interface mapper object  will then transform the request into a format of the associated user interface connector object  and forward the request thereto. Upon receipt of the request, the user interface connector object  may perform another transformation of the request into a format of the user interface interface  of the enterprise layer  and communicate the request thereto.","The request when received by the user interface interface  of the enterprise layer  may then cause the request to be processed by the business logic  of the enterprise layer . In some embodiments, when the request includes a data creation, update, or deletion request, regardless of what type of data edits may have been applied to the data of the request prior to submission by the app , the business logic or other portions of the enterprise layer  will perform edits on the data to ensure compliance with any data constraints, requirements, or other rules. The enterprise layer, upon processing the request, will typically respond with the request data, which may be or include a confirmation of a data processing activities performed, requested data, which may include user interface definitions, and other data or content depending on the particular request. The response may be communicated by the enterprise layer  via the user interface interface  to the user interface connector object .","The user interface connector object , upon receipt of the response to the request from the enterprise layer , may then transform the received response from the format of the user interface interface  to a format of the user interface mapper object  and send the transformed response thereto. The user interface mapper object  may then transform the response into a format of the app  and transmit the transformed response either directly to the app  or via the web server , depending on the particular embodiment.","In some embodiments, by providing the system architecture that includes both mapper objects  and connector objects  between a deployed app  and an enterprise layer , the deployed app  is able to access functionality provided by the enterprise layer . The functionality of the enterprise layer  may include one or more of point of sale, reporting, data entry, data searching, customer relationship management, accounting, finance, and other functionality. The app  may be an omnibus in nature whereby the app provides a vast amount of functionality of the enterprise layer . However, in other embodiments, the app  may provide a relatively narrow amount of functionality, such as a point of sale app that allows a user to scan bar codes of products via an optical sensor (i.e., camera) of a device and enter credit card numbers for sales of goods or a customer relationship management app that only allows a user view contact information of customers and record information regarding a interactions with customers. Regardless of the functional scope of a particular app  in various embodiments, the app  is enabled to access functionality of the enterprise layer due to the mapper objects  and the connector objects .","In some embodiments, the app  may access some functionality of the enterprise layer , but the app  may also provide additional functionality that is not directly associated with or related to the enterprise layer . For example, an example app may be a reader-type app that provides access to content from one or more news sources such as blogs, social media sites, news outlets, and the like. The app may also include customer relationship management functionality of the enterprise layer  and provide a mechanism whereby a user can selected a one or more of a story, posting, video, or other content item to be forwarded to a customer contact identified and retrieved via the enterprise layer . This is one example of how an app  that has generally has a non-business related purpose can be augmented with functionality of or supported by the enterprise layer.  via the system  and the transformation services provided by the mapper objects  and connector objects  included therein.",{"@attributes":{"id":"p-0044","num":"0043"},"figref":"FIG. 3"},"In one embodiment, multiple such computer systems are utilized in a distributed network to implement multiple components in a transaction-based environment. An object-oriented, service-oriented, or other architecture may be used to implement such functions and communicate between the multiple systems and components. The computing device may be in the form of a personal computer, a server-class computer, a smartphone, a controller of a device such as a set top box, a tablet computer, or other computing device. One example computing device in the form of a computer , may include a processing unit , memory , and non-removable storage . The computing device in some embodiments may also include removable storage . Memory  may include volatile memory  and non-volatile memory . Computer  may include\u2014or have access to a computing environment that includes\u2014a variety of computer-readable media, such as volatile memory  and non-volatile memory , removable storage  and non-removable storage . Computer storage includes random access memory (RAM), read only memory (ROM), erasable programmable read-only memory (EPROM) & electrically erasable programmable read-only memory (EEPROM), flash memory or other memory technologies, compact disc read-only memory (CD ROM), Digital Versatile Disks (DVD) or other optical disk storage, magnetic cassettes, magnetic tape, magnetic disk storage or other magnetic storage devices, or any other medium capable of storing computer-readable instructions. Computer  may include or have access to a computing environment that includes input , output , and a communication connection . The computer may operate in a networked environment using a communication connection to connect to one or more remote computers, such as database servers. The remote computer may include a personal computer (PC), server, router, network PC, a peer device or other common network node, or the like. The communication connection may include a Local Area Network (LAN), a Wide Area Network (WAN) or other networks.","Computer-readable instructions stored on a computer-readable medium are executable by the processing unit  of the computer . A hard drive, CD-ROM, other optical mediums, flash memory device, and RAM are some examples of articles including a computer-readable medium. For example, a computer program  including executable instructions for performing one or more of the methods and other embodiments illustrated and described herein may be included on a CD-ROM and loaded from the CD-ROM to a hard drive.",{"@attributes":{"id":"p-0047","num":"0046"},"figref":["FIG. 4","FIG. 2"],"b":["400","400","202","206"]},"The method  includes receiving , by a web server via a network, a data request from an app. The data request is encoded according to an application protocol, such as HTTP. The method  further includes selecting  an object mapper, from a plurality of object mappers, to process the data request based on at least one of the app from which the data request was received and the data interchange protocol. The method  also includes invoking  the selected object mapper to transform the data request into the format of a connector object associated with the object mapper. Next, the method  forwards  the data request by the invoked object mapper to the connector object associated with the object mapper which then invokes  the connector object to transform the data request into a data format of at least one communication module of a backend computing application, such as an enterprise-class computing system. The connector object then forwards  the encoded data request to the backend computing application.","In some embodiments of the method , the data request received by the web server is a request for user interface definition data from which the requesting app can render at least a portion of a user interface. The requesting app in such embodiments may have a RESTful architecture that supports an application layer protocol for consuming Representational State Transfer (REST) data as may be provided by an object mapper to the app. Thus, the object mapper in such embodiments may be enabled to transform data received from a backend computing application, such as an enterprise-class computing system, via a connector object.","In some embodiments of the method , a number of connector objects executable within the web framework is at least equal to a number of a plurality of communication modules of the backend computing application. Further, each connector object may be dedicated to a defined or a combination of defined data interchange protocols of a communication module of the backend computing application.",{"@attributes":{"id":"p-0051","num":"0050"},"figref":["FIG. 5","FIG. 4"],"b":["500","500","400"]},"The method  includes receiving , by the connector object and in response to the data request forwarded to the backend computing application, the requested data. The requested data is typically received encoded according to the data format of at least one communication module of a backend computing application. The method  further includes transforming , by the connector object, the received data into a format of the connector object and forwarding  the transformed data in the format of the connector object to the object mapper from which the request was originally received. The method  also includes transforming , by the object mapper, the data received from the connector object to the data interchange protocol in which the data request was received from the app. The object mapper then forwards , via the web server, the data transformed to the data interchange protocol to the app.","Another embodiment is in the form of a system. The system in such embodiments includes at least one computing device including at least one processor, at least one memory device, and at least one network interface device. The system in such embodiments also includes a web server application stored in the at least one memory device and executable by the at least one processor to receive, process, and respond to data requests received via the at least one network interface device from an app. The system may further include a web application server stored in the at least one memory device and executable by the at least one processor to provide an execution environment for modules that execute to service data requests received via the web server.","In some embodiments, the modules may include a plurality of object mapper modules that execute to process the data request based on at least one of an app from which the data request was received and a data interchange protocol the request is encoded in. The system also typically includes a plurality of connector object modules that execute to process data requests forwarded by an object mapper module and data in response to data requests forwarded to a backend computing application.","The plurality of object mapper modules, in some embodiments, are each executable for various purposes. Some such purpose include transforming data between the data interchange protocol of the app and a format of a connector object module associated with the particular object mapper module. The purpose also include forwarding transformed data of a data request to the connector object module associated with the particular object mapper module and forwarding transformed data received from the respective associated connector object module to the web server.","The plurality of connector object modules, in some embodiments, are each executable for various purposes. Some such purpose include transforming data between the format of the respective connector object module into at least one data interchange protocol of a backend computing application. The purposes may also include forwarding transformed data of a data request to the backend computing application and forwarding transformed data received from the backend computing application to the respective mapper object module from which the data request was received.","It will be readily understood to those skilled in the art that various other changes in the details, material, and arrangements of the parts and method stages which have been described and illustrated in order to explain the nature of the inventive subject matter may be made without departing from the principles and scope of the inventive subject matter as expressed in the subjoined claims."],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"BRIEF DESCRIPTION OF THE DRAWINGS","p":[{"@attributes":{"id":"p-0003","num":"0002"},"figref":"FIG. 1"},{"@attributes":{"id":"p-0004","num":"0003"},"figref":"FIG. 2"},{"@attributes":{"id":"p-0005","num":"0004"},"figref":"FIG. 3"},{"@attributes":{"id":"p-0006","num":"0005"},"figref":"FIG. 4"},{"@attributes":{"id":"p-0007","num":"0006"},"figref":"FIG. 5"}]},"DETDESC":[{},{}]}
