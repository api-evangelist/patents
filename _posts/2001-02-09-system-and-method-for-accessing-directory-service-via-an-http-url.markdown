---
title: System and method for accessing directory service via an HTTP URL
abstract: Information is retrieved from a directory service via a Hyper Text Transport Protocol (HTTP) Universal Resource Locator (URL) query string which is parsed by a diverting module. The diverting module parses the HTTP URL query string into a plurality of portions. The diverting module constructs a directory service compatible query from the plurality of portions and requests information from the directory service with the directory service compatible query.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=06954778&OS=06954778&RS=06954778
owner: Microsoft Corporation
number: 06954778
owner_city: Redmond
owner_country: US
publication_date: 20010209
---

{"@attributes":{"id":"description"},"RELAPP":[{},{}],"heading":["CROSS-REFERENCE TO RELATED APPLICATIONS","FIELD OF THE INVENTION","BACKGROUND OF THE INVENTION","SUMMARY OF THE PRESENT INVENTION","DETAILED DESCRIPTION OF THE INVENTION"],"p":["This application claims the benefit of U.S. Provisional Application Ser. No. 60\/217881, entitled \u201cAccessing Active Directory via URL\u201d, filed on Jul. 12, 2000.","The present invention relates generally to directory service access, and more particularly to accessing a directory service via a Hyper Text Transport Protocol (HTTP) Universal Resource Locator (URL).","A directory service is a central point in a computer or a computer network where network services, security services, applications, and the like can inform other entities in the computer or network about their services, thus forming an integrated distributed computing environment. The current use of directory services may be classified into several categories. A \u201cnaming service\u201d uses a directory as a source to locate an Internet host address or the location of a given server. A \u201cuser registry\u201d stores information of all users in a system composed of a number of interconnected machines. The central repository of user information enables a system administrator to administer the distributed system as a single system image. Still another directory service is the MICROSOFT ACTIVE DIRECTORY directory service, a product of Microsoft Corp. of Redmond, Wash., which allows a system administrator to manage users, computers, printers, and other objects.","Conventional access to a directory service, such as a MICROSOFT ACTIVE DIRECTORY directory service is typically achieved by way of a Lightweight Directory Access Protocol (LDAP) query string. For example, a MICROSOFT ACTIVE DIRECTORY directory service can be accessed using LDAP application programming interfaces (APIs). However, using such APIs requires an intimate knowledge of the APIs and requires programming to call the APIs.","An MICROSOFT ACTIVE DIRECTORY directory service may also be accessed using ACTIVE DIRECTORY Service Interfaces (ADSI). However, using ADSI also requires programming.","Another method of accessing a directory service is the use of an LDAP query string formatted as a Universal Resource Locator (URL) query string (i.e., an LDAP URL) that is mapped to the directory service. The LDAP URL includes portions referencing a host port, a scope, an attribute, a query filter, and optional extension mechanisms. The LDAP URL host port portion references a particular directory server. The scope portion defines a search scope for the query. The search scope limits the objects that are searched during a request for information from a directory service. The attribute portion determines the attribute value to return based on the query. The query filter portion operates in a manner similar to commonly known filters, such as the wildcard \u201c*\u201d. The optional extension mechanisms are implemented with APIs. This method also assumes that LDAP protocol will be used to for communication.","Importantly, the use of an LDAP URL to access information in a directory service behind a firewall is limited for the reason that many directory service owners (corporations, typically) are unwilling to allow external access to LDAP ports on a firewall, mainly for reasons of security, resource utilization, and overhead issues. Nevertheless, such owners are more likely willing to allow external access to Hyper Text Transport Protocol (HTTP) ports on the firewall.","Therefore, there is a need for access to a directory service via an HTTP port. More particularly, a need exists for a system and method for accessing a directory service by way of an HTTP URL.","The aforementioned need is satisfied by a system and method for accessing a directory service via an Hyper Text Transport Protocol (HTTP) Universal Resource Locator (URL).","In the system and method, information is retrieved from a directory service via an HTTP URL query string which is parsed by a diverting module into a plurality of portions. The diverting module constructs a directory service compatible query from the plurality of portions and submits the directory service compatible query to the directory service.","According to an aspect of the invention, data structure is implemented on a computer readable medium. The data structure used by the module may reside on a server. The data structure comprises includes an HTTP URL query string. The HTTP URL query string includes an HTTP portion representing that the query string is an HTTP URL query string, an anchor point portion representing an anchor point within the directory service for a search to be conducted based on the query string, and a path and query portion defining a search scope based on the anchor point for the search in the directory service.","According to another aspect of the present invention, a system retrieves information from a directory service into an access device via an HTTP URL query string. The system includes a server connected to the access device through an HTTP connection, the server for receiving the query string, for parsing the received query string into a friendly name portion, and for determining whether the friendly name portion is a member of a predetermined set of friendly names. The system further includes a diverting module for receiving the query string from the server if the friendly name portion is a member of the predetermined set of friendly names, for parsing the received query string, for constructing a directory service compatible query based on the parsed string, and for forwarding the directory service compatible query to the directory service.","The above-listed features, as well as other features, of the present invention will be more fully set forth hereinafter.","FIG.  and the following discussion are intended to provide a brief general description of a suitable computing environment in which the present invention and\/or portions thereof may be implemented. Although not required, the invention is described in the general context of computer-executable instructions, such as program modules, being executed by a computer, such as a client workstation or a server. Generally, program modules include routines, programs, objects, components, data structures and the like that perform particular tasks or implement particular abstract data types. Moreover, it should be appreciated that the invention and\/or portions thereof may be practiced with other computer system configurations, including handheld devices, multi-processor systems, microprocessor-based or programmable consumer electronics, network PCs, minicomputers, mainframe computers and the like. The invention may also be practiced in distributed computing environments where tasks are performed by remote processing devices that are linked through a communications network. In a distributed computing environment, program modules may be located in both local and remote memory storage devices.","As shown in , an exemplary general purpose computing system includes a conventional personal computer  or the like, including a processing unit , a system memory , and a system bus  that couples various system components including the system memory to the processing unit . The system bus  may be any of several types of bus structures including a memory bus or memory controller, a peripheral bus, and a local bus using any of a variety of bus architectures. The system memory includes read-only memory (ROM)  and random access memory (RAM) . A basic input\/output system  (BIOS), containing the basic routines that help to transfer information between elements within the personal computer , such as during start-up, is stored in ROM .","The personal computer  may further include a hard disk drive  for reading from and writing to a hard disk (not shown), a magnetic disk drive  for reading from or writing to a removable magnetic disk , and an optical disk drive  for reading from or writing to a removable optical disk  such as a CD-ROM or other optical media. The hard disk drive , magnetic disk drive , and optical disk drive  are connected to the system bus  by a hard disk drive interface , a magnetic disk drive interface , and an optical drive interface , respectively. The drives and their associated computer-readable media provide non-volatile storage of computer readable instructions, data structures, program modules and other data for the personal computer .","Although the exemplary environment described herein employs a hard disk, a removable magnetic disk , and a removable optical disk , it should be appreciated that other types of computer readable media which can store data that is accessible by a computer may also be used in the exemplary operating environment. Such other types of media include a magnetic cassette, a flash memory card, a digital video disk, a Bernoulli cartridge, a random access memory (RAM), a read-only memory (ROM), and the like.","A number of program modules may be stored on the hard disk, magnetic disk , optical disk , ROM  or RAM , including an operating system , one or more application programs , other program modules  and program data . A user may enter commands and information into the personal computer  through input devices such as a keyboard  and pointing device . Other input devices (not shown) may include a microphone, joystick, game pad, satellite disk, scanner, or the like. These and other input devices are often connected to the processing unit  through a serial port interface  that is coupled to the system bus, but may be connected by other interfaces, such as a parallel port, game port, or universal serial bus (USB). A monitor  or other type of display device is also connected to the system bus  via an interface, such as a video adapter . In addition to the monitor , a personal computer typically includes other peripheral output devices (not shown), such as speakers and printers. The exemplary system of  also includes a host adapter , a Small Computer System Interface (SCSI) bus , and an external storage device  connected to the SCSI bus .","The personal computer  may operate in a networked environment using logical connections to one or more remote computers, such as a remote computer . The remote computer  may be another personal computer, a server, a router, a network PC, a peer device or other common network node, and typically includes many or all of the elements described above relative to the personal computer , although only a memory storage device  has been illustrated in FIG. . The logical connections depicted in  include a local area network (LAN)  and a wide area network (WAN) . Such networking environments are commonplace in offices, enterprise-wide computer networks, intranets, and the Internet.","When used in a LAN networking environment, the personal computer  is connected to the LAN  through a network interface or adapter . When used in a WAN networking environment, the personal computer  typically includes a modem  or other means for establishing communications over the wide area network , such as the Internet. The modem , which may be internal or external, is connected to the system bus  via the serial port interface . In a networked environment, program modules depicted relative to the personal computer , or portions thereof, may be stored in the remote memory storage device. It will be appreciated that the network connections shown are exemplary and other means of establishing a communications link between the computers may be used.","Turning now to , it is seen that such drawing represents an exemplary directory service hierarchy. The following discussion of the naming hierarchy in  is merely illustrative and is not intended to be limiting. As shown in , the directory service  includes a number of objects, with each object represented by a unique name and all of the objects being organized into a hierarchical structure. Thus, for example, the object at the top of the hierarchical structure is named A, which is typically referred to as the \u201croot\u201d. Object A has two \u201cchildren\u201d, objects B and C, and objects B and C resides one level below the root and dependent from object A. Object B has two \u201cchildren\u201d, objects E and F, and objects E and F reside two levels below the root and dependent from object B. Object F has one \u201cchild\u201d, object H, and object H resides three levels below the root and dependent from object F. A particular object thus may be a \u201cparent\u201d of one or more child objects. An object is considered a \u201cparent\u201d if it is located in a next higher level than a \u201cchild\u201d object in the hierarchy and the child object depends from such parent object. Objects on the same level of the hierarchy, with the same parent are considered siblings. In this manner, a system administrator may organize objects into a hierarchical structure.","Each object is of a particular object class. For example, there may be a computer object class, a printer object class, and a user object class. As specific examples, object B may represent a printer and may be configured as a printer object class, object C may represent a computer and may be configured as a computer object class, and object E may represent a user and may be configured as a user object class. In this manner, a system administrator may organize objects by class in addition to a hierarchical structure.","Each object may contain attributes, and each attribute may contain a value associated with the attribute. For example, an attribute of a user class object may be a phone number. The value of the attribute may be set to a phone number of that particular user. In this manner, a system administrator may include information regarding objects in a directory service.","The directory service  hierarchy may be organized in any predefined manner, for example by the system administrator. Each object in the directory service is typically uniquely identified in the directory and uniquely named for a given parent. Additionally, some directory services, such as the MICROSOFT ACTIVE DIRECTORY include a UserPrincipalName attribute for user class objects. Typically, the UserPrincipalName attribute is set to a value of an e-mail address, for example, JohnSmith@microsoft.com.","Referring now to , there is shown an exemplary system  for accessing the directory service  of  based on an HTTP URL query string in accordance with an embodiment of the present invention. As shown in , the system  includes a server  and a diverting module . As may be appreciated, the system  receives the HTTP URL query string from an access device  by way of an HTTP port  on a firewall  associated with the server , and is coupled to the directory service by way of the diverting module . In one embodiment, the server  comprises the diverting module .","The access device  may be a web browser, a cellular phone, a net appliance, or any  other device suitable for entering an HTTP URL that is to be delivered to the server . Access devices  are generally known or should be apparent to the relevant public and therefore need not be described herein in any detail. Thus, the access device  may be any particular access device without departing from the spirit and scope of the present invention. In one embodiment, the access device  is a personal computer running a MICROSOFT INTERNET EXPLORER web browser, a product of Microsoft Corp. of Redmond, Wash., or the like.","The access device  may access the system  by an appropriate connection, including a direct connection, an Ethernet connection, an Intranet connection, an Internet connection, a dialup connection, or the like. As shown in , the connection with the system  is achieved by way of the firewall , so the access device  is presumably externally located with respect to the system . Nevertheless, the access device  may also be internally located so that the firewall  is not necessary without departing from the spirit and scope of the present invention.","Server  and access device  can communicate with each other through the firewall  (if present) via any mutually agreeable protocol, such as HTTP, for example. Firewalls  and servers  are generally known or should be apparent to the relevant public and therefore need not be described herein in any detail. Thus, the firewall  may be any particular firewall and the server  may be any particular server without departing from the spirit and scope of the present invention. In one embodiment, the server  is an Internet Information Server (IIS).","The HTTP port  may represent any port through which HTTP communication is enabled. The HTTP port  may also represent the default port for communicating web pages with client browsers. In one embodiment, the access device  is connected to the server through an HTTP port  on the firewall .","The firewall  is a security system (hardware and\/or software) that isolates resources of the system  and beyond from objects outside of the system . Isolated resources are characterized as inside the firewall, and external equipment is considered outside the firewall. Typically, the firewall  serves as a security enclosure around a private LAN of computers and associated peripherals. Generally, the firewall  allows for inside objects to request and receive connections to outside objects (e.g., for inside applications to access outside internet nodes, etc.) but prevents outside objects from originating similar connections unless otherwise determined to be allowable.","The directory service  is generally known or should be apparent to the relevant public and therefore need not be described herein in any detail. The directory service  may be any particular directory service without departing from the spirit and scope of the present invention. In one embodiment, the directory service  is the MICROSOFT ACTIVE DIRECTORY directory service. The directory service  is connected to the server  over a conventional data link, such as for example, an Ethernet connection or a direct connection from the server .","Typically, a server such as the server  receives a query for the directory service  where such query is already in a form amenable to the directory service . For example, where the directory service  can receive and process an LDAP query string, the server  would typically receive a query for the directory service  in the form of such LDAP query string.","Importantly, in the present invention, the server  receives a query for the directory service  where the query is in one form (e.g., an HTTP URL query string) and where the directory service  is expecting the query to be in another form (e.g., an LDAP query string). Accordingly, in one embodiment of the present invention, the system  includes the diverting module  for receiving the query string for the directory service  from the server  for reformatting the query string into a form amenable to the directory service , and for sending the reformatted query string to the directory service .","In particular, in an embodiment of the present invention, the diverting module  receives the query string from server , parses the query string, forms the reformatted query string, and then sends the reformatted query string to the directory service . Once the directory service  gathers appropriate information based on the received reformatted query string, such information is sent to the server  perhaps by way of the diverting module . As may be appreciated either the server  or the diverting module  may format the information in a form amenable to the access device . For example, the information may be formatted into a Hyper Text Markup Language (HTML) web page, eXtensible Markup Language (XML), or the like, to be displayed on the browser of the access device .","In one embodiment of the present invention, the query string from the access device  is an HTTP URL query string having a particular data structure that may be appreciated by the diverting module  in the course of reformatting such HTTP URL query string into the form expected by the directory service .",{"@attributes":{"id":"p-0043","num":"0042"},"figref":["FIG. 3","FIG. 3"],"b":["35","35","40","45","50","60","65"]},"http:\/\/servername\/friendlyname\/path-and-query?parameters","As may be appreciated, such HTTP URL query string is to be sent to the server  in the manner of a typical HTTP request sent to a typical HTTP server.","In one embodiment of the present invention, the server  behind the firewall  receives the HTTP URL query string by way of an HTTP port on the firewall  and recognizes that the request is to be diverted to the directory service  by way of the diverting module . Such recognition may for example occur based on the server name portion  and\/or the friendly name portion  of the query string, although other recognition methodologies may be employed without departing from the spirit and scope of the present invention.","Upon receiving the diverted query string, the diverting module  parses and deconstructs such HTTP URL query string into the various portions -, constructs the aforementioned reformatted query string, and then transmits same to the directory service .","Portions - are discussed in turn as follows. The HTTP portion  contains information representing the beginning of an HTTP URL string. For example, the HTTP portion  may contain the string \u201chttp:\/\/\u201d.","The server name portion  contains information representing any server name that can be resolved to an Internet Protocol (IP) address. The server name links the access device  to a server, such as server . For example a server name portion  may be \u201cmicrosoft.com\u201d, which would map the access device  to the server  associated with the name \u201cmicrosoft.com\u201d.","The friendly name portion  contains information representing to the server  that the query string is to be diverted to the diverting module  for parsing. The friendly name may be any name that triggers the diverting module  to parse the query string as a request for information from the directory service . In one embodiment, the server  compares the friendly name against a predetermined set of names. If the friendly name is included in the predetermined set of names, then the server  diverts the query string for parsing by the diverting module . If not, then the query string is processed as a conventional query string by the server . A friendly name is not necessary as a diverting mechanism, for example, a server  may be dedicated to directory service .","In another embodiment, the diverting module  parses the query string and if the friendly name is not included in the predetermined set of names, then the diverting module  diverts the query string to the server .","In one embodiment of the present invention, the friendly name portion  and the friendly name therein also anchors a search scope to a predetermined anchor point in the directory service . The friendly name may also serve other purposes including improving query performance, filtering HTTP verbs, canonicalizing long naming, and limiting users to a subset of objects that are pertinent to their queries.","As may be appreciated, an anchor point is an object within the directory service  from which the search scope is defined. For example, in the directory service  of , a partial query string of:","http:\/\/microsoft.com\/consultants","maps to the server  with the name \u201cmicrosoft.com\u201d, and sets an anchor point, within a directory service  associated with the server , according to a predetermined criteria associated with the friendly name \u201cconsultants\u201d. For example, the anchor point for \u201cconsultants\u201d may be set at object B, as shown in FIG. . In one embodiment of the present invention, no searching takes place on objects higher in the directory service  than the anchor point. Here, then, with \u2018consultants\u2019 as the anchor point, the object A will not be included in the search scope. In this manner, a query can be limited to selected branches of the directory service .","The path and query portion  contains information referencing the path to be searched and query options to further define the search scope. The path sub-portion of the path and query portion  defines the boundary or scope of the search scope with respect to the anchor point. The search scope may be defined to include the anchor point itself, to exclude the anchor point but to include one level below the anchor point, to include the anchor point and the entire sub-tree below the anchor point, or the like. The query sub-portion of the path and query portion  modifies the search with commonly known filters, such as a wildcard \u201c*\u201d and a slash \u201c\/\u201d , as will be described further below.","In one embodiment of the present invention, a path and query of \u201c\/*\u201d searches the children of the anchor point, a path of \u201c\/objectX\/*\u201d searches the children of objectX, wherein objectX is a child of the anchor point, and a path of \u201c\/objectX\/\/\u201d searches the subtree of objectX, wherein objectX is a child of the anchor point.","For example, and with respect to the directory service  of , a partial query string of:","http:\/\/microsoft.com\/consultants\/*","searches the children of B, which are object E and object F. Likewise, a query string of:","http:\/\/microsoft.com\/consultants\/F\/*","searches the children of F, which is object H. Similarly, a query string of:","http :\/\/microsoft.com\/consultants\/\/","searches the sub-tree of B, which includes object B, object E, object F, and object H, given that object B is the anchor point associated with \u2018consultants\u2019.","In one embodiment of the present invention, a search may be based on an attribute name by including a path and query of \u201cattribute=attribute value\u201d.","For example, and with respect to the directory service  of , a partial query string of:","http:\/\/microsoft.com\/consultants\/\/givenName=John","searches the sub-tree of B, which includes object B, object E, object F, and object H. Additionally, the query sub-portion of \u201cgivenName=John\u201d searches all objects within the search scope as described above, and searches for an attribute of \u201cgivenName\u201d with a value of \u201cJohn\u201d.","Similarly, searches may be based on object class by including a query sub-portion of \u201c.object class\u201d. For example, a query sub-portion of \u201c*.user\u201d searches for all objects in the directory service with an object class of \u201cuser\u201d within the defined search scope.","For example, and with respect to the directory service  of , a partial query string of:","http:\/\/microsoft.com\/consultants\/\/*.user","searches the sub-tree of B, which includes object B, object E, object F, and object H. Additionally, the query sub-portion of \u201c*.user\u201d searches for all objects within the search scope as described above, and searches for all objects of object class \u201cuser\u201d.","Additionally, a wildcard may be used in query portion. For example, a query string of:","http:\/\/microsoft.com\/consultants\/\/John*.user","searchers the sub-tree of B, which includes object B, object E, object F and object H. Additionally, the query sub-portion of \u201cJohn*.user\u201d searchers for all objects within the search scope as described above, and searches for all objects of object class \u201cuser\u201d and with its object name starts with \u201cJohn\u201d.","The parameters portion  may contain information referencing optional parameters. Such optional parameters may, for example, modify default parameter values, such as PageSize, which specifies the page size to return, and TimeOut, which determines how long to wait for a response before timing out. Also, the parameters portion  may be used to request an attribute be returned to server  from the directory service , as described in more detail below.","As discussed above, the HTTP URL request may be responded to by the system  with an HTML page. In addition, the response may be in an XML format. In one embodiment of the present invention, a parameter in the parameters portion  of the HTTP query string may be set to specify the type of response. For example, a parameter may be set to request a HTML format, or other form of documents. Optionally, the response may include error messages.","In one embodiment of the present invention, the parameters portion  contains information referencing an attribute value to be returned. For example, the parameters portion  may be specified as \u201c?attr=attributename\u201d in the HTTP query string. If a particular attribute value is to be returned, as triggered by the \u201c?attr=\u201d portion of the query string, the directory service  returns the value of the attribute. If no attribute is to be returned, the directory service  returns a default set of attributes for each object of the defined search, such as the URL, name, and class of the object. For example, a query string of:","http:\/\/microsoft.com\/consultants\/?attr=phonenumber,title","returns the value in the attribute phone number and title of object B, if such attribute exists for the object. Referring now to , a method of operating the system  to access a directory service  is shown. As seen at step , the access device  sends an HTTP URL query string to the server . This step is similar to conventional server access via an HTTP URL query string. For example, the HTTP URL query string may be\n\nhttp:\/\/microsoft.com\/consultants\/\/sn=Smith\n\nThe query string is received at the http port  and firewall  and passes through to the server  as a conventional HTTP URL query string.\n","At step , the server  detects that the query string is to be diverted to diverting module . In this step, the server  may parse the friendly name portion  of the query string and compare the friendly name portion against a predetermined set of names, as described above. If the friendly name is in the predetermined set of names, the system proceeds to step . Otherwise, the server  processes the HTTP URL as a conventional HTTP URL.","At step , the server  diverts the query string by sending the query string to the diverting module . At step , the diverting module  receives the query string and at step , the diverting module  parses the query string. Particularly, the diverting module  parses the query string to resolve a friendly name portion  at step , a path and query portion  at step , and a parameters portion  at step .","At step , the diverting module  parses the query string into a friendly name portion , as the string \u201cconsultants\u201d and an anchor point is set according to a predetermined anchor point list associated with the friendly name. For example, the anchor point associated with the friendly name \u201cconsultants\u201d may be object B in the directory service , as shown in FIG. .","At step , the diverting module  parses the query string into a path sub-portion as the string \u201c\/\/\u201d. This sets the search scope to the entire sub-tree of the anchor point. In the directory service  of , with an anchor point of object B, the search scope includes objects B, E, F, and H. The diverting module  parses the query string into a query sub-portion as the string \u201csn=Smith\u201d. This sets the query sub-portion to search for an attribute of \u201csn\u201d, or surname, with an attribute value of \u201cSmith\u201d.","At step , the diverting module  parses the query string into a parameters portion , as a null string. Thus, no optional parameters are included in the query string and default values are to be used.","At step , the diverting module  builds a reformatted query that is compatible with the directory service . Particularly, the reformatted query searches the search scope determined in steps  and  and with the parameters determined in step . For example, the diverting module  builds a reformatted query that accesses the directory service  and searches user objects of objects B, E, F, and H for each object having an attribute of \u201csn\u201d with an attribute value of \u201cSmith\u201d.","At step , the diverting module  forwards the reformatted query to the directory service  and at step , the directory service  replies to the reformatted query. The reply may be, for example, an XML formatted response or an LDAP response. At step , the diverting module will reformat the response from directory service  to a format that is expected by the access devices , for example HTML or XML. At step , the access device  receives the information from the directory service  by way of server  and perhaps the diverting module .","Thus, in the present invention, a web page may be constructed with HTTP URL links tailored to access information in the directory service , and a user of the web page may access such information without being concerned with the actual construction of the links or understanding of APIs to access the directory service . Therefore, the present invention provides an HTTP URL formatted query string employed to gain access to a directory service .","It is noted that the foregoing examples have been provided merely for the purpose of explanation and are in no way to be construed as limiting of the present invention. While the invention has been described with reference to preferred embodiments, it is understood that the words which have been used herein are words of description and illustration, rather than words of limitations. Further, although the invention has been described herein with reference to particular elements, steps, and\/or embodiments, the invention is not intended to be limited to the particulars disclosed herein; rather, the invention extends to all functionally equivalent structures, methods and uses, such as are within the spirit and scope of the appended claims. Those skilled in the art, having the benefit of the teachings of the present disclosure, may effect numerous modifications thereto and changes may be made without departing from the scope and spirit of the invention in its aspects."],"BRFSUM":[{},{}],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"BRIEF DESCRIPTION OF THE DRAWINGS","p":["The present invention is further described in the detailed description that follows, by reference to the noted drawings by way of non-limiting examples of exemplary embodiments of the present invention, in which like reference numerals represent similar parts throughout the several views of the drawings, and wherein:",{"@attributes":{"id":"p-0016","num":"0015"},"figref":"FIG. 1"},{"@attributes":{"id":"p-0017","num":"0016"},"figref":["FIG. 2","FIG. 1"]},{"@attributes":{"id":"p-0018","num":"0017"},"figref":["FIG. 3","FIG. 2"]},{"@attributes":{"id":"p-0019","num":"0018"},"figref":["FIG. 4","FIG. 3"],"b":"2"},{"@attributes":{"id":"p-0020","num":"0019"},"figref":"FIG. 5"}]},"DETDESC":[{},{}]}
