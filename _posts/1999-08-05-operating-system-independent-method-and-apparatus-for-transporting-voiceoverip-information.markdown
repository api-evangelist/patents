---
title: Operating system independent method and apparatus for transporting voice-over-IP information
abstract: In exemplary embodiments, a dataport in an access server is suitably configured to emulate a modern connection for non-modem calls such as voice calls. Computer applications for administering, for example, voice-over-network services thus communicate with the port via standard modem calls. In accordance with one aspect of the invention, communications between the port hardware and the voice enabled application take place through an encapsulating protocol such as the Point-to-Point-Protocol (PPP)such that the port is addressable and able to receive controls or other instructions from a voice application residing on the access server or from a distributed location.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=06904052&OS=06904052&RS=06904052
owner: Mindspeed Technologies, Inc.
number: 06904052
owner_city: Newport Beach
owner_country: US
publication_date: 19990805
---

{"@attributes":{"id":"description"},"BRFSUM":[{},{}],"heading":["FIELD OF THE INVENTION","BACKGROUND OF THE INVENTION","SUMMARY OF THE INVENTION","DETAILED DESCRIPTION OF PREFERRED EXEMPLARY EMBODIMENTS"],"p":["The invention relates generally to methods and apparatus of transporting audio and video data. More particularly, the invention relates to systems for receiving, routing and administering audio and video data in an access server.","Over the past several years access servers (also referred to as communication servers or terminal servers) have been used to receive data communications and to route data from remote locations onto networks such as the Internet. For example, Internet Service Providers (ISPs) typically use access servers to administer data communications from ISP subscribers. In such implementations, the ISP typically configures one or more access servers in connection with modems, which are connected to phone lines. ISP customers, who maintain their own computers with modems, establish a connection to the ISP by placing an ordinary telephone call from their home modem to the ISP modem. The ISP modem provides data to the access server, which typically authenticates the user and facilitates a connection from the users PC to the Internet across the modem-to-modem telephone connection. Such systems may also be used to access, for example, corporate intranets or the like.","Recent advances in access server hardware has allowed the access server to support not only modem connections, but also fax, video conference, voice, multimedia, Asynchronous Transfer Mode (ATM), frame relay, and other types of connections. Such systems frequently include data communications processors such as the Any Port Products available from Conexant Systems of Newport Beach, Calif.","It is typically relatively easy to build administration systems for modem connections because many popular operating systems include modem control functionality. The Windows NT operating system available from the Microsoft Corporation of Redmond, Washington, for example, includes the Telephony Application Programming Interface (TAPI), which includes specific interface calls for interacting between computer applications running on the operating system and a modem. Similarly, Linux and other versions of UNIX typically include device drivers or Application Programming Interfaces (APIs) for interacting with-modems. Such functionality is not, however, generally provided for non-modem telephone connections and the like. Thus, it is more difficult to create applications that make use of the voice functionality included with access server hardware, since such functionality is not automatically addressable within the operating system.","One solution to this problem is to incorporate support for voice services within the operating system itself. Incorporating direct operating system support is typically quite difficult, however, because operating systems are generally created by entities other than those who create access servers and access server components. Most conventional operating systems therefore do not support the wide range of access servers and access server components that are available. Moreover, operating system solutions tend to be based upon proprietary protocols, APIs or hardware, and they are frequently slow to react to changes in access servers or access server components.","Another option is to develop a device driver that is unique for the particular access server or access server components utilized. Again, however, this approach provides a proprietary solution that is unique to the particular application or hardware device included. Such systems are slow to incorporate new functionality in operating systems or hardware, and moreover, they do not facilitate direct addressability from the external host. Direct accessibility is particularly desirable in environments with distributed gateways for routing voice and data communications. Hence, with the \u201cgateway decomposition\u201d schemes currently pursued, many systems providers typically require proprietary device drivers or APIs for interacting with particular hardware.","Although voice-over-network solutions such as those described above are presently in existence, numerous problems remain with universal compatibility and external administration. It is therefore desired to create a system for providing voice services over data networks (such as the Internet) that is portable across different operating systems and types of access hardware. It is also desired to create a system that is usable with distributed gateways.","In accordance with one embodiment of the present invention, a dataport in an access server is suitably configured to emulate a modem connection for non-modem calls such as voice calls. Computer applications for administering, for example,voice-over-network services thus communicate with the port via standard modem calls. In accordance with one aspect of the invention, communications between the port hardware and the voice enabled application take place through an encapsulating protocol such as the Point-to-Point-Protocol (PPP) such that the port is addressable and able to receive controls or other instructions from a voice application residing on the access server or from a distributed location.","The present invention may be described herein in terms of functional block components and various processing steps. It should be appreciated that such functional blocks may be realized by any number of hardware and\/or software components configured to perform the specified functions. For example, the present invention may employ various integrated circuit components, e.g., memory elements, digital signal processing elements, logic elements, look-up tables, and the like, which may carry out a variety of functions under the control of one or more microprocessors or other control devices. Further, it should be noted that the present invention may employ any number of conventional techniques for data transmission, signaling, data processing, network control, application development, and the like. Such general techniques are not described in detail herein.","To simplify the description of the exemplary embodiments, the invention is frequently described as pertaining to a system of providing voice-over network functionality. It will be appreciated, however, that many applications of the present invention could be formulated. For example, the present invention could be used to transport fax data, motion picture data, closed circuit video information, multimedia content, photographic, stereoscopic, holographic or any other form of moving video, still images, data or other information. Similarly, although the invention is frequently described herein as being implemented with TCP\/IP communications protocols, it will be readily understood that the invention could also be implemented using IPX, Appletalk, IP-3, OSI or any number of existing or future protocols.","It should be appreciated that the particular implementations shown and described herein are illustrative of the invention and its best mode and are not intended to otherwise limit the scope of the present invention in any way. Indeed, for the sake of brevity, conventional data networking, application development and other functional aspects of the systems (and components of the individual operating components of the systems) may not be described in detail herein. Furthermore, the connecting lines shown in the various figures contained herein are intended to represent exemplary functional relationships and\/or physical couplings between the various elements. It should be noted that many alternative or additional functional relationships or physical connections may be present in a practical access server system.","With reference to , an access server system  suitable for ISDN or modem communications suitably includes a communications interface , access hardware , and a computer host . The communications interface  is any interface device that suitably receives call information from a network  such as the public switched telephone network (PSTN) and provides the call information via a bus  to an access device. The access device may be implemented, for example, as access hardware , as a modem (not shown), or as an ISDN modem . In various embodiments of the invention, communications interface  is a T interface, a modem, or another form of communications service unit (CSU).","Bus  is any form of connection device such as an ethernet, token ring, computer bus, or the like that is capable of transferring data from interface  to access hardware . In various embodiments, bus  is a time-division multiplexing (TDM) bus. In such embodiments, various forms of digital data such as high-level data link control (HDLC) protocol information and pulse code modulation (PCM) data are suitably shared by bus . In the exemplary embodiment shown in , bus  provides HDLC data to ISDN modem  and to an ISDN module  via interfaces  and , respectively. Similarly, bus  provides PCM data to a modem module  via an interface .","Access hardware  is any device that includes hardware and\/or software controls for interfacing and processing data from remote locations. In various embodiments, access hardware  includes a semiconductor device such as one or more of the Any Port processors available from Conexant Systems, Inc. of Newport Beach, Calif. Access hardware  suitably includes modules for handling various types of data connections. Each module includes programming (such as hardware, software or firmware programming) that implements a particular type of data connection. Modules  and  in , for example, correspond to modem and ISDN connections, respectively. Of course, it will be recognized that the modules discussed herein are not necessarily physically separate, but rather are logical constructs that aid in understanding. Other modules (not shown) may include voice, asynchronous transfer mode (ATM), frame relay, internet protocol (IP), fax, wireless and the like.","Communications may be suitably controlled by an application program  running on host . Exemplary computer applications include Remote Access Server (RAS) available from the Microsoft Corporation of Redmond, Wash. or the pppd (\u201cPPP daemon\u201d) included with various versions of the LINUX or UNIX operating systems. In such embodiments, application program  suitably receives requests for network services, responds to such requests by establishing connections, and assigns a network address (such as an IP address) to the connection established. Some embodiments of application program  further provide authentication or other security services. Of course, it will be understood that application program  may be any suitable communications server or controller program, and that the particular functionality and implementation of application program  will vary from embodiment to embodiment.","Host  is any form of computer such as a personal computer, a minicomputer, a mainframe or a specialized computer such as are available from vendors such as Cisco Systems of San Jose, Calif. It will be understood that the invention may be implemented in any form of hardware or software environment. In various exemplary embodiments, host  suitably runs an operating system  such as Windows , 2000, or NT available from the Microsoft Corporation of Redmond, Wash. In alternate embodiments, host  runs one of the many versions of the LINUX or UNIX operating systems available from vendors such as Hewlett Packard of Palo Alto, Calif., IBM Corp. of Armonk, N.Y., or Sun Microsystems of Mountain View Calif.","Operating system  suitably administers interactions between application program  and hardware coupled to host . For example, host  may include a network interface  to a data network  such as the Internet, a corporate intranet, or another data network. Similarly, host  may include a device driver  that handles instructions and data transfers between application program  and access hardware . Such a device driver is typically related to the particular form of access hardware  utilized and will vary from implementation to implementation.","Applications such as application program  running on a host frequently interact with device drivers through an intermediate application programming interface (API)  that provides a particular type of functionality depending upon the particular device driver. API , for example, may be a telephony application interface (TAPI) such as TAPI 2.1 included with Microsoft Windows NT version 4.0. Telephony API  suitably implements many common functions required by application program  related to telephony such as modem controls, ISDN controls, and the like. To control a modem via application , for example, a programmer suitably includes computer instructions in application  that interact via interface  with telephony API  to control device driver , which in turn interacts with access hardware  and\/or ISDN device .","Similarly, application program  interacts with a network interface  via network API  such as, for example, the NDIS 4.2 API provided with the Microsoft Windows NT operating system. Various embodiments of the network API  suitably include a protocol stack  that implements a particular suite of communications protocols such as TCP\/IP, IPX, or the like. Applications  do not typically interact directly with network interface , but rather include calls to network API  via interface . Network API  then suitably formats data packets in accord with a protocol suite  and provides the packets to network interface  for transmission on network .","As described above, application program  interacts with access hardware  and network interface  via device drivers  and  and via APIs  and , respectively. An illustrative example will show how the various elements of an exemplary embodiment work together to implement an access server system . When a call is received at telephony interface , for example, PCM data is suitably transmitted via bus  to the access hardware . A processor in access hardware  recognizes the incoming call as a modem call, for example, and modem module  places a request to an administering application (which may be application program ) to create a modem session with the access server system . Modem module  sends a request for a new connection via device driver , which forwards the request to application program  through telephony API . The application program  receives the request and administers the new session with the access hardware , again by sending commands and gathering data via telephony API .","In a common access server for use in providing Internet access, for example, application program  prompts the user to enter an authorization credential such as a userid\/password pair. Authentication information (which is typically in point-to-point protocol (PPP) format) is entered by the user and suitably passed via device driver  to a PPP handier  associated with network API  for authentication. If authentication is successful, application program  proceeds to create a virtual connection  between module  and the network interface  such that the remote user is allowed to access network . Various embodiments of application program  suitably allow multiple connections through access hardware , and each connection may be individually addressable through, for example, conventional socket programming techniques. In such embodiments, each connection is represented to application program  as an individually-addressable port on access hardware , each port having its own network address (such as an IP address). Because application program  assigns each port a unique network address, the port itself is addressable by hosts on network . Thus, a remote user is provided with direct, addressable access to network .","As noted above, exemplary embodiments of telephony API  contain adequate controls for interacting with modems and modem modules such as module  on access hardware . As such, modem connections are relatively easy to implement in access server system . Telephony API  does not, however, typically contain controls for accessing voice modules in access hardware .","Referring now to , an access server system  for use in administering voice-over-network connections suitably includes access hardware  with a voice module . As described above, access hardware  may be any device that includes hardware and\/or software controls for interfacing and processing data from remote locations such as one or more Any Port processors available from Conexant Systems Inc. of Newport Beach, Calif. Access hardware  may receive voice, ISDN, modem, and other data calls from interface  via bus , as described above.","Access hardware  communicates with host computer  through device driver , which is similar to device driver  described above but includes added support for voice module . Device driver  provides an interface between access hardware  and host  through, for example, conventional interface techniques. Although  shows device driver  as part of host , it should be noted that device driver  functionality may be suitably implemented as software on host  or in hardware, software or firmware of access hardware . Alternatively, device driver  can be implemented as any combination of hardware, software and firmware on access hardware  and\/or host . Various embodiments of the invention implement device driver  as a Windows NT miniport or as a LINUX or UNIX device driver, although of course any suitable hardware or software interface could be used.","In various embodiments of the invention, voice module  is represented to host  as a modem connection. Various embodiments implement the modem-like connection differently, but exemplary techniques include formulating a modem connection in device driver  such that operating system  \u201cthinks\u201d that data sessions with voice module  are modem connections instead of voice connections. To this end, device driver  suitably presents voice module  to host  as a modem port. In various embodiments of the invention, the modem connection is established by passing an electronic message to telephony API  with modem parameters instead of conventional voice parameters. These parameters are dictated by the particular telephony API , and vary from implementation to implementation. When a connection is initiated in this manner, telephony API suitably creates a connection with device driver  that emulates a virtual modem connection  between voice module  and telephony API .","Because the voice connection is presented to the host as a modem connection, the modem functionality implemented in telephony API  may be suitably used to send commands and to retrieve data between voice-enabled application  and voice module  though virtual connection . In various embodiments of the invention, telephony API notifies application program  that a modem connection is received, and application program  may then create virtual connection  between voice module  and network interface , for example as described above. Connection  may be created, for example, through conventional programming techniques utilizing the standard telephony API .","With continued reference to , access server system  suitably administers voice calls by providing a convenient interface between application program  and voice module  such that voice data is effectively transported to network . When voice service is initiated (for example at startup, or as directed by application program , or in response to a voice call received from network ), module  establishes a virtual modem connection  through device driver  and operating system  to application program . Because the virtual connection  acts as a modem connection, application program  communicates to device driver  through conventional telephony API calls. These calls are suitably addressed to driver , which converts instructions and data to a format that is understood by module  as necessary. In this manner, application program  suitably interacts via telephony API  and network API  to create virtual connection  between access hardware  and network  using, for example, techniques similar to those employed to create the virtual modem connections described above. In various embodiments, application program  assigns a network address (such as an IP address) to the connection such that virtual connection  (and thus the port on access server  corresponding to voice module ) is addressable by entities on network . With the virtual connection established, voice communications are suitably routed between server  and network . Thus, a standard computer application  such as RAS or pppd can be used in conjunction with a standard telephony API  to implement an access server system  that provides voice functionality.","In various embodiments of the invention, voice module  suitably encapsulates voice data into a protocol frame such as a PPP header that can be transmitted to a local or remote server. Alternatively, commands from a local or remote server may be suitably encapsulated in a network frame such as a PPP frame. Voice module  suitably extracts command information from the network frame and executes the commands as necessary.","With reference to , an exemplary voice module  suitably includes sub-modules for processing voice calls received from connection  to bus  (not shown in FIG. ). Each of the sub-modules is a logical construct that illustrates a particular process executed by access hardware . Layer  receives voice information in, for example, PCM format and decodes the data at a signaling level. As such, layer  typically implements protocols such as G.165 and G.168, or any other signaling protocols required. Layer  administers any necessary compression or decompression of voice data, for example using the G.723, G.729, G.711 or any other compression routine. Layers ,  and  suitably administer the real-time transport protocol (RTP), the user datagram protocol (UDP) and PPP, respectively. RTP layer  packages voice samples into a known format as appropriate, and UDP layer  suitably encapsulates voice data in a UDP packet that can be transmitted via virtual connection , for example, to network . In various embodiments, PPP layer  suitably encapsulates the voice data in a PPP frame, as described above. Again, alternate embodiments of the invention implement voice data processing in different manners using various protocols. In particular, it is not necessary to include RTP or PPP encapsulation in all embodiments of the invention. Alternatively, the point-to-point to-point tunneling protocol (PPTP) or another protocol could be substituted for PPP or RTP.","Voice data produced at voice module  is provided to a destination and suitably processed as required by the particular embodiment. In various embodiments, application program  suitably routes voice data to a proper destination on network  by embedding the formatted voice data in a network frame such as a TCP\/IP frame via network API . Various embodiments of application program  implement signaling and routing through calls to network API . Voice data may be routed directly to a destination on the network, or they may be routed to an administrative server on network  that handles routing, billing, etc.","With reference to , a system implementing a so-called \u201cgateway decomposition\u201d scheme includes host  communicating with access hardware  and with data network . Voice calls are received from PSTN network  and routed to data network  through virtual connection  (not shown in ) as described above. Server  on network  suitably interacts with voice module  on access hardware  via the network address assigned to the virtual connection to transmit voice data to a destination host . Server  may also provide billing, routing and other functionality as required. Various voice servers  such as those available from various manufacturers suitably communicate with voice module  via network packets sent through data network . In exemplary embodiments the control network packets include commands that are encapsulated in PPP or other network frames, and then sent to host  via, for example, conventional TCP\/IP addressing and delivery techniques. With momentary reference again to , host  receives the control packet on interface  and passes the data via network API  as directed by application  and in accordance with addressing information contained in the control packet. In various embodiments, the control packet includes a reference to a particular address or socket corresponding to virtual connection , and the control packet is suitably formatted and provided to voice module  as described above. Voice module then extracts the command information from the PPP frame using layer  (best shown in ) and executes the command. Various commands instruct the voice module to produce a dial tone, hang up the line, provide data to a given destination, and the like. In various embodiments, voice module  further includes routing capability for administering multiple incoming voice calls through virtual connection . In this manner, many simultaneous voice connections can be produced through a single access hardware unit .","The corresponding structures, materials, acts and equivalents of all elements in the claims below are intended to include any structure, material or acts for performing the functions in combination with other claimed elements as specifically claimed. The scope of the invention should be determined by the appended claims and their legal equivalents, rather than by the examples given above."],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"BRIEF DESCRIPTION OF THE DRAWING FIGURE","p":["The above and other features and advantages of the present invention are hereinafter described in the following detailed description of illustrative embodiments to be read in conjunction with the accompanying drawing figures, wherein like reference numerals are used to identify the same or similar parts in the similar views, and:",{"@attributes":{"id":"p-0011","num":"0010"},"figref":"FIG. 1"},{"@attributes":{"id":"p-0012","num":"0011"},"figref":"FIG. 2"},{"@attributes":{"id":"p-0013","num":"0012"},"figref":"FIG. 3"},{"@attributes":{"id":"p-0014","num":"0013"},"figref":"FIG. 4"}]},"DETDESC":[{},{}]}
