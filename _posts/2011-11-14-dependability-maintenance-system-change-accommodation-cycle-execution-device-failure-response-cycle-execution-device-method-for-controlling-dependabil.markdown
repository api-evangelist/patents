---
title: Dependability maintenance system, change accommodation cycle execution device, failure response cycle execution device, method for controlling dependability maintenance system, control program, and computer-readable storage medium storing the control program
abstract: A workspace computer and/or a runtime computer of the present invention determines a D value quantitatively indicative of a value of dependability of a target system, in accordance with dependability description data indicative of a requirement and specification regarding the dependability of the target system.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08806272&OS=08806272&RS=08806272
owner: Japan Science and Technology Agency
number: 08806272
owner_city: Saitama
owner_country: JP
publication_date: 20111114
---

{"@attributes":{"id":"description"},"BRFSUM":[{},{}],"heading":["RELATED APPLICATIONS","TECHNICAL FIELD","BACKGROUND ART","CITATION LIST","Patent Literatures","Non-Patent Literatures","SUMMARY OF INVENTION","Technical Problem","Solution to Problem","Advantageous Effects of Invention","DESCRIPTION OF EMBODIMENTS","INDUSTRIAL APPLICABILITY","REFERENCE SIGNS LIST"],"p":["The present application is a National Phase of International Application Number PCT\/JP2011\/076219, filed Nov. 14, 2011, and claims priority from Japanese Application Number 2010-267461, filed Nov. 30, 2010 and Japanese Application Number 2011-177322, filed Aug. 12, 2011.","The present invention relates to a device etc. capable of measuring and evaluating the value of dependability in a target system including dependability description data indicative of a dependability requirement at a certain time which requirement is variable on a temporal axis, thereby maintaining dependability of the target system.","Recently, there has been a noticeable increase in abort of systems and services which support critical social infrastructures, such as abort of online systems of banks, communication failures of mobile phones and IP phones, and security failures of various commercial services, resulting in great influence on our lives. This is primarily due to a dramatic increase in scales and complexities of such commodities and services using embedded computer systems. Further investigation of the causes shows that many cases were due to human errors.","Conventionally, reliability, availability, maintainability, safety, integrity, and confidentiality of computer systems have been discussed as attributes called dependability to be provided in computer systems (Non-patent Literature 3). In the development of embedded systems, a development project is formed initially, functional requirements and non-functional requirements of target systems and services are exactly listed as specifications, long-term verifications and tests are made, and the embedded systems are deployed. However, as described above, the number of failures is increasing day by day. In standards such as CMMI and ISO 26262, attempts to reduce human errors have been made. However, these conventional techniques and standards do not take consideration of attributes of systems under open environments.","Conventional methods are based on the assumption that the specification at the time of development is surely implemented as a computer program, and the specification does not change after commodities and services are deployed. However, open environments change from the time of development to the time of deployment. Furthermore, the environments continue to change after the deployment. Accordingly, it is necessary to respond to such changes.","In order to deal with this, Japan Science and Technology Agency established the DEOS (Dependable Embedded Operating Systems\/Dependability Engineering for Open Systems) project in CREST program (http:\/\/www.crest-os.jst.go.jp\/), and has researched and developed a dependable operating system for embedded systems. The DEOS project calls dependability in open environments as open systems dependability, which is defined as follows. \u201cFunctions, structures, and system boundaries of modern large-scale software systems change temporally, which may result in incompleteness and uncertainty. Such incompleteness and uncertainty cannot be removed completely, and so the modern large-scale software systems essentially have factors that may result in failures in the future (Factors of Open Systems Failure). Open Systems Dependability is the ability to perform continuously the effort to remove such factors before they cause failure and to provide appropriate and quick action when they occur in order to minimize the damage, so that the system provides safely and continuously the services expected by the users, and to maintain accountability for the system operations and processes.\u201d (see Non-patent Literature 1)","Conventionally, embedded systems are developed (not limited to development of the embedded systems) based on requirements from stakeholders and specifications reflecting the requirements. Specifically, systems are developed according to specifications summarizing functional requirements and non-functional requirements of a target system. In a case of changing a part of the system in operation, the specifications and the system implementation are updated with consistency therebetween.","One of the reasons why the specifications and the system implementation should be updated consistently is that dependability of the system (see Non-patent Literatures 1, 3 etc.) must be maintained regardless of a change in the environment. Accordingly, it must be ensured that update of dependability description data corresponding to the specifications and development and addition of a module for monitoring and controlling a system for realizing the specification are made in consistency with the specifications.","Non-patent Literature 2 describes that a document called a Safety Case, which indicates the safety of a system, should be updated in accordance with a change in the system throughout the lifecycle of the system (e.g. concept, development, operation, maintenance, update, destruction).","The Safety Case is a structured document which presents the grounds (evidence) for the safety of a system. The Safety Case has so prevailed in the United Kingdom and other countries that it is mandatory to submit a Safety Case to the certification organization in the development and operation of a system requiring high safety, such as a nuclear plant. The Safety Case is prevailing worldwide. For example, ISO 26262, which is a functional safety standard for automobiles, makes it mandatory to submit a Safety Case.","[Patent Literature 1]","U.S. Pat. No. 7,756,735, specification (Jul. 13, 2010)","[Non-Patent Literature 1]","Mario Tokoro, \u201cChallenge to Open Systems Problems\u201d Sep. 29, 2010. http:\/\/www.stanford.edu\/class\/ee380\/Abstracts\/100929.html [retrieved on Jul. 7, 2011]","[Non-patent Literature 2]","Peter Bishop and Robin Bloomfield, \u201cA Methodology for Safety Case Management,\u201d Safety Critical System Symposium, 1998. http:\/\/www.adelard.com\/papers\/sss98web.pdf [retrieved on Jul. 7, 2011]","[Non-patent Literature 3]","Algirdas Avizienis, Jean-Claude Laprie, Brian Randell, and Carl Landwehr, \u201cBasic Concepts and Taxonomy of Dependable and Secure Computing,\u201d IEEE Transactions on Dependable and Secure Computing, vol. 1, no. 1, pp. 11-33, January-March 2004, doi:10.1109\/TDSC.2004.2.","[Non-patent Literature 4]","Mario Tokoro, JST-CREST \u201cDependable Operating System for Embedded System intended for Practical Use\u2014DEOS Project\u2014White Paper Version 2.0\u201d, DEOS-FY201-WP-02J, 2010 Dec. 1","[Non-patent Literature 5]","Jin Nakazawa, Yutaka Matsuno, and Hideyuki Tokuda, \u201cEvaluating Degree of Systems' Dependability with Semi-Structured Assurance Case\u201d Proceedings of the 13th European Workshop on Dependable Computing (EWDC 2011), 2011.","[Non-patent Literature 6]","DEOS Core Team, \u201cOpen Systems Dependability Core\u2014Dependability Metrics\u2014\u201d, [online], 2009 Sep. 4, Japan Science and Technology Agency, [retrieved on Feb. 3, 2012], Internet <URL: http:\/\/www.crest-os.jst.go.jp\/topics\/deos2009\/metrics.pdf>","Increase in scalability and complexity of the system also makes requirements and specifications to the systems and services provided by the systems complicated. Consequently, it is impossible to extract all requirements completely before developing a system and to describe all the specifications before developing the systems (incompleteness in specification). The incompleteness in specification makes corresponding implementation incomplete (incompleteness in implementation), making it impossible to completely grasp behaviors of the services provided by the systems. This makes it unclear \u201cwhat should be ensured to what extent?\u201d and \u201cwhether it can be ensured or not\u201d. Furthermore, such incompleteness may result in a difference in understanding (misunderstanding) of a requirement to the system or service among stakeholders or human errors.","Furthermore, a new requirement for responding to the aforementioned environment change arises. A requirement at the time of development must be modified. It is impossible to know \u201chow the environment will change?\u201d beforehand, and therefore it is also impossible to know \u201cwhether the current operation of the system can surely deal with an environment change\u201d. Such uncertainty in a change makes it difficult to predict the operation of the system, resulting in system failure.","Due to such incompleteness and uncertainty, the investigation of the cause when system failure occurs takes more time and a suitable response to the system failure becomes difficult, making it difficult for a stakeholder to fulfill accountability.","Under such circumstances, conventionally, in Non-patent Literature 2, a response to failure supposed at the time of system development is described as a Safety Case and agreed among stakeholders, thereby fulfilling accountability of the stakeholders at the time of occurrence of failure. However, it is impossible to respond to a change in Safety Case due to an environment change.","Non-patent Literature 3 describes an attempt to prevent occurrence of failure by grasping failure in terms of changes \u201cFaults-Errors-Failures\u201d. However, such a technique cannot deal with incompleteness and uncertainty mentioned above.","Non-patent Literatures 5 and 6 describe a method for dealing with the incompleteness or the uncertainty. However, the description is separated from the runtime environment, and modeling the description, and measuring and evaluating the value of the dependability are possible only in design.","On the other hand, Patent Literature 1 describes a method for mathematically controlling the complexity of Enterprise Architecture. Controlling the complexity may be expected to improve dependability, but Patent Literature 1 does not deal with the incompleteness and uncertainty.","Furthermore, in a conventional method for developing a system, requirements from a plurality of stakeholders are not summarized in the agreed-upon specification and difficult to be summarized in the specification. Besides, in a case where a part of the system is changed after the operation of the system starts, it is impossible to maintain consistency between the specification and a change in the system implementation.","For example, in the case of a Safety Case, there is no practical system which maintains consistency between (i) a response to failure which is agreed among stakeholders and (ii) actual response by the target system to failure and development and addition of a system-monitoring control section etc. Such consistency between the Safety Case and the target system must be maintained substantially by humans, which raises many problems such as time-lag between update of the system and update of the Safety Case. As far as the inventors know, in general, there is no practical system which ensures consistency between a document such as a Safety Case described in format understandable by a wide variety of stakeholders including the certification organization etc. and an actual operation of a system.","The present invention was made in view of the foregoing problems. An objective of the present invention is to realize a dependability maintenance device etc. which makes it possible to assist maintenance of (sustaining) dependability of a target system and makes it easy to maintain consistency between specifications of the target system and the system implementation, in an open environment with potential incompleteness and uncertainty. Herein, definition of dependability of a system is extended from that of Non-patent Literature 3 etc. to include agreement among stakeholders.","In order to solve the foregoing problems, a dependability maintenance system of the present invention is a dependability maintenance system for maintaining dependability of a target system, including: a change accommodation cycle execution device for executing a change accommodation cycle for adding and\/or modifying dependability description data indicative of a requirement and specification regarding the dependability of the target system, in accordance with a change in a requirement and specification regarding the target system, during development of the target system or during update of the target system in operation; a failure response cycle execution device for executing a failure response cycle for avoiding abort of the target system based on the dependability description data when occurrence of failure or a sign of failure is detected during operation of the target system, and change request transmission means for, when the failure response cycle execution device detects the occurrence of the failure or the sign of the failure and abort of the target system is unavoidable, transmitting a request for changing the dependability description data to the change accommodation cycle execution device.","A method of the present invention for controlling a dependability maintenance system is a method for controlling a dependability maintenance system for maintaining dependability of a target system, the method including: a change accommodation cycle carried out by a change accommodation cycle execution device in the dependability maintenance system, for adding and\/or modifying dependability description data indicative of a requirement and specification regarding the dependability of the target system, in accordance with a change in a requirement and specification regarding the target system, during development of the target system or during update of the target system in operation; a failure response cycle carried out by a failure response cycle execution device in the dependability maintenance system, for avoiding abort of the target system based on the dependability description data when occurrence of failure or a sign of failure is detected during operation of the target system, and when the failure response cycle execution device detects the occurrence of the failure or the sign of the failure and abort of the target system is unavoidable, transmitting a request for changing the dependability description data to the change accommodation cycle execution device.","With the arrangements, when the failure response cycle execution device detects occurrence of failure of the target system or a sign of failure of the target system and determines that abort of the target system is unavoidable, the failure response cycle execution device can transmit a request for changing dependability description data to the change accommodation cycle execution device.","Consequently, when the change accommodation cycle execution device receives the request for changing dependability description data from the failure response cycle execution device, the change accommodation cycle execution device can change the dependability description data in accordance with the request.","Therefore, the failure response cycle execution device and the change accommodation cycle execution device can collaborate with each other to smoothly carry out a series of processes in which occurrence of failure of the target system or a sign of failure of the target system is detected in the failure response cycle and when abort of the target system is unavoidable, dependability description data is changed in the change accommodation cycle. This allows continuously maintaining dependability of the target system in an open environment.","The dependability maintenance system including the change accommodation cycle execution device and the failure response cycle execution device may be realized by a computer. In this case, the scope of the invention also encompasses a program of the dependability maintenance system for causing a computer to function as the means to realize the dependability maintenance system by the computer, and a computer-readable storage medium storing the program.","As described above, a dependability maintenance system of the present invention includes: a change accommodation cycle execution device for executing a change accommodation cycle for adding and\/or modifying dependability description data indicative of a requirement and specification regarding the dependability of the target system, in accordance with a change in a requirement and specification regarding the target system, during development of the target system or during update of the target system in operation; a failure response cycle execution device for executing a failure response cycle for avoiding abort of the target system based on the dependability description data when occurrence of failure or a sign of failure is detected during operation of the target system, and change request transmission means for, when the failure response cycle execution device detects the occurrence of the failure or the sign of the failure and abort of the target system is unavoidable, transmitting a request for changing the dependability description data to the change accommodation cycle execution device.","A method of the present invention for controlling a dependability maintenance system includes: a change accommodation cycle carried out by a change accommodation cycle execution device in the dependability maintenance system, for adding and\/or modifying dependability description data indicative of a requirement and specification regarding the dependability of the target system, in accordance with a change in a requirement and specification regarding the target system, during development of the target system or during update of the target system in operation; a failure response cycle carried out by a failure response cycle execution device in the dependability maintenance system, for avoiding abort of the target system based on the dependability description data when occurrence of failure or a sign of failure is detected during operation of the target system, and when the failure response cycle execution device detects the occurrence of the failure or the sign of the failure and abort of the target system is unavoidable, transmitting a request for changing the dependability description data to the change accommodation cycle execution device.","Therefore, the failure response cycle execution device and the change accommodation cycle execution device can collaborate with each other to smoothly carry out a series of processes in which occurrence of failure of the target system or a sign of failure of the target system is detected in the failure response cycle and when abort of the target system is unavoidable, dependability description data is changed in the change accommodation cycle. This allows continuously maintaining dependability of the target system in an open environment.","For a further understanding of the nature and advantages of the invention, reference should be made to the ensuing detailed description taken in conjunction with the accompanying drawings.","[First Embodiment]","A workspace computer  and\/or a runtime computer  in accordance with the present embodiment assist maintenance of (sustaining) dependability of a target system in an open environment with potential incompleteness and uncertainty. Accordingly, as described later, the workspace computer  and\/or the runtime computer  in accordance with the present embodiment obtains a D value quantitatively indicative of the value of dependability of the target system based on dependability description data which describes a specification regarding dependability of the target system (the dependability description data may be data described by a differential structure model which allows a model to change on a temporal axis and allows representation of a structure of a target system as a computable model).","The following description will discuss in detail one embodiment of the present invention with reference to .","[1. Hardware Configuration]",{"@attributes":{"id":"p-0097","num":"0096"},"figref":"FIG. 1","b":"100"},"As illustrated in , the dependability maintenance system  includes the workspace computer (dependability maintenance device, workspace device)  and the runtime computer (dependability maintenance device, runtime device) , each of which serves as a dependability maintenance device and which are connected with each other via a network . Software SW processed on the workspace computer  is deployed on the runtime computer  and processed thereon. A target system or application system and a support system necessary for execution thereof, such as a library, middleware, and a system service, are included in the runtime computer . The software SW has a representation form capable of being processed by a binary execution section  (W, R; binary execution section W of workspace computer  and binary execution section R of runtime computer  are distinguished from each other by affixing W or R). The software SW includes an application executed in the target system and a runtime environment necessary for execution thereof, such as a library, middleware, and a system service.","The workspace computer  includes a verification tool section -, an editing tool section -, an analysis tool section -, a development tool section -, a consensus-building assistance tool section -, and the binary execution section W. Although functional blocks of the workspace computer  are not limited to them, these representative functions are described shortly below.","The verification tool section - verifies the software SW. The editing tool section - edits the software SW. The analysis tool section - analyzes the software SW. At that time, information from the runtime computer  may be used. The development tool section - is used to develop the software SW.","The runtime computer  includes an update section -, a recording section -, a monitoring section -, a reconfiguration section (reconfiguration means) -, an isolation section -, a script process section (script process means) -, and the binary execution section R. Although functional blocks of the runtime computer  are not limited to them, these representative functions are described shortly below.","The update section - updates the software SW processed on the runtime computer . The recording section - records a state inside the runtime computer . The recording section - may record the state in accordance with an instruction of the software SW or in accordance with predetermined setting. The monitoring section - acquires the state inside the runtime computer  and calculates a D value which will be mentioned later. The monitoring section - may acquire the state in accordance with an instruction of the software SW or in accordance with predetermined setting. The reconfiguration section - changes a configuration inside the runtime computer . The reconfiguration section - may change the configuration in accordance with an instruction of the software SW or in accordance with predetermined setting or in accordance with a script. The isolation section - separates a component of the configuration inside the runtime computer  and makes the component independent. The script process section - executes a script derived from dependability description data which will be mentioned later.","The dependability maintenance system  may be a system constituted by two separate computers as illustrated in , or may be a system constituted by a single computer, or may be a system consisting of groups of computers, each group consisting of two or more computers. In this case, individual computers are connected with each other via a network .",{"@attributes":{"id":"p-0104","num":"0103"},"figref":"FIG. 2","b":["101","102","101","102","151","152","153","154","154","151","153","154","152","153","101","102"]},{"@attributes":{"id":"p-0105","num":"0104"},"figref":"FIG. 3","b":["104","01","104","02","104","03","110","104","04"]},"[2. Dependability Description Data]",{"@attributes":{"id":"p-0106","num":"0105"},"figref":"FIG. 4"},"(a) of  illustrates that the application has a three-layered structure model. A presentation layer - is in charge of displaying (and inputting) the application. A data access layer - stores and manages data required when the application is executed. An application logic layer - carries out a calculation process required as the application based on an input from a user, and supplies the result to the data access layer -. Alternatively, the application logic layer - acquires data required by the application from the data access layer -, processes the data, and supplies the processed data to the presentation layer - to present the data to the user.","(b) of  illustrates a configuration example of implementing the three-layered structure model. A WEB Server - corresponds to the presentation layer -. A Client - is a user of the application, and uses the WEB Server - via a network -. A combination of the Client -, the network -, and the WEB Server - may be considered as corresponding to the presentation layer -. An App Logic - corresponds to the application logic layer -. The App Logic - exchanges information with the WEB Server - via communications path -, and exchanges information with a DBS - via a communications path -. The DBS - is a database, and manages (e.g. stores, acquires) data processed by the App Logic - or data required for a process by the App Logic -. The WEB Server -, the App Logic -, and the DBS - are executed on the runtime computer . The WEB Server -, the App Logic -, and the DBS - may be executed on a single computer or may be executed on respective computers.",{"@attributes":{"id":"p-0109","num":"0108"},"figref":"FIG. 5"},"The following description will discuss the example illustrated in . \u201cContinuation of a WEB service\u201d (-) is a goal regarding dependability of the application, and indicates that the WEB service can be continued. In order to realize this goal (-), the dependability description data is required to meet four attributes of \u201ccontinuation of operation of Client\u201d (-), \u201ccontinuation of operation of WEB Server\u201d (-), \u201ccontinuation of operation of App Logic\u201d (-), and \u201ccontinuation of operation of DBS\u201d (-). The four attributes correspond to client -, WEB Server -, App Logic -, and DBS -, respectively.","The four attributes can be further broken down as follows. For \u201ccontinuation of operation of Client\u201d (-), it is necessary to meet two attributes of \u201cappropriate operation of a device\u201d (-) and \u201cappropriate response of a WEB Server\u201d (-). For \u201ccontinuation of operation of WEB Server\u201d (-), it is necessary to meet two attributes of \u201cappropriate transmission\/reception of request\u201d (-) and \u201cappropriate response of App Logic\u201d (-). For \u201ccontinuation of operation of App Logic\u201d (-), it is necessary to meet two attributes of \u201cnormal operation process\u201d (-) and \u201cappropriate response of DBS\u201d (-). For \u201ccontinuation of operation of DBS\u201d (-), it is necessary to meet two attributes of \u201cconsistency of DB\u201d (-) and \u201cavailability of data\u201d (-).","Whether these attributes are met or not can be grasped and determined by referring to the results of monitoring in runtime, including various verifications shown in elliptic nodes. For example, whether the attribute of \u201cappropriate operation of a device\u201d (-) is met or not can be determined according to \u201cacceptance or rejection of device verification\u201d (-) by an exhaustive test. Whether the attributes of \u201cappropriate response of a WEB Server\u201d (-) and \u201cappropriate transmission\/reception of request\u201d (-) are met or not can be determined according to \u201cacceptance or rejection of response inspection\u201d (-) and \u201cacceptance or rejection of delay inspection\u201d (-) in log verification in runtime, including a benchmark of accessing the server. Whether the attributes of \u201cappropriate response of App Logic\u201d (-) and \u201cordinary operation process\u201d (-) are met or not can be determined according to \u201cacceptance or rejection of a test case\u201d (- and -) similarly by an exhaustive test. Whether the attributes of \u201cappropriate response of DBS\u201d (-), \u201cconsistency of DB\u201d (-), and \u201cavailability of data\u201d (-) are met or not can be determined according to \u201cacceptance or rejection of a benchmark\u201d (-), \u201cacceptance or rejection of a stress test\u201d (-), and \u201cacceptance or rejection of an anomaly test\u201d (-) respectively by a benchmark, a stress test (overload test), and an anomaly test (anti-abnormality test) or by verification of database access log in runtime. In the present embodiment, verifications shown in these elliptic nodes are treated as grounds (evidences) which show that attributes of corresponding nodes are met. A measurement value measured by a later-mentioned monitor node is used as these evidences, too.","While  shows dependability description data regarding a system in normal state,  shows an example of dependability description data on a scenario base which takes a risk into consideration. That is, dependability description data is described according to a scenario of \u201cif . . . occurs, is it possible to . . . ?\u201d. For instance, in the example of , a top node describes a risk that \u201cHDD capacity of DB is at its limit (if the capacity of a hard disk constituting a database system reaches its margin, what response can be made?)\u201d (-). Four countermeasures against the risk are described at next level nodes. \u201cExpansion of HDD capacity\u201d (-) describes that the capacity can be expanded by addition of a hard disk, replacement of the hard disk with a new one with larger capacity etc. \u201cContinuation by backup DBS\u201d (-) describes that a backup system is provided for a database system and a database function can be continued using the backup system. \u201cContinuation of App Logic by cache\u201d (-) describes that even if a database cannot be used, an application can be continued using data partially cached. \u201cReturn polite explanation on error to a user\u201d (-) describes that even if an application cannot be continued any more, it is possible to provide a user with some explanation.","These nodes (- to -) describe functions supporting these capabilities by their respective sub-nodes. For example, \u201cexpansion of HDD capacity\u201d (-) is made feasible by a function of \u201chot swap of HDD device (exchange of hard disk drives while they continue to operate) (-) or a function of \u201cOS support of logical volume\u201d (system function in which volume capacity is not limited by capacity of hard disk drive) (-). \u201cContinuation by backup DBS\u201d (-) is made feasible by a function of \u201creboot of standby system (a plurality of database systems are provided and when one system is aborted, a standby system is booted up to take over the function)\u201d (-), or a function of \u201ccontinuation by only one of dual systems (function realized by a two-system database system can be continued even when one system thereof is aborted) (-). \u201cContinuation of App Logic by cache\u201d (-) is made feasible by a function of \u201cdelayed writing of update to DB\u201d (delay access to database until it is restored) (-) or a function of \u201ctime stamp of data (application logic can be continued with old data by referring to time stamp)\u201d (-). \u201cReturn polite explanation on error to a user\u201d (-) at the last is made feasible by reachability of network (network communications to users are possible)\u201d (-).","Fulfillments of attributes of these edge nodes (- to -) are described by elliptic nodes (evidences) in . They are omitted in .","Either of the dependability description data in  and the dependability description data in  may be used as dependability description data agreed among stakeholders. Alternatively, the dependability description data in  and the dependability description data in  may be used as a normal system and a risk system, respectively, each of which is agreed among stakeholders and each of which is a part of dependability description data at a higher order.",{"@attributes":{"id":"p-0117","num":"0116"},"figref":["FIG. 7","FIG. 6"]},"In , the possibility of \u201cexpansion of HDD capacity\u201d (-) is important for continuation of the application. In contrast thereto,  describes dependability description data at a time different from that of  in a case where a stakeholder determines to increase and enhance an amount of investment to a database system because of some environment change, such as business upturn. That is, in place of \u201ccontinuation by backup DBS\u201d (-) in , there is described a case where employment of a function of \u201cnon-stop of DBS by multiple systems\u201d (-) is determined. Non-stop of a database unnecessitates \u201ccontinuation of App Logic by cache\u201d (-) in . Consequently, hatched nodes in  are differences from .","The dependability description data illustrated in  may be described using a Safety Case representation (Non-patent Literature 2) or may be described using a D-Case representation as illustrated in .","With reference to , the following description will discuss a basic structure of a D-Case representation. A requirement from stakeholders, concerning dependability of a target system, is described as a top goal -. A top goal indicates a proposition to be agreed among stakeholders in terms of the target system. An example of the proposition is \u201cthe target system meets Safety Integrity Level 3 defined in function safety standard IEC61508\u201d etc. How the top goal is met is detailed by a tree structure, and a sub-goal - obtained as a result of the detailing is detailed similarly by a tree structure. A sub-goal indicates a proposition obtained by dividing a matter to show the top goal. A sub-goal is divided into smaller sub-goals. In the present embodiment, a top goal and sub-goals are generally referred to as goals. The process of the detailing is referred to as \u201cstructure of argument\u201d -.","In dividing the goal into sub-goals, there may be described a strategy indicative of a subsidiary explanation (reason, logic) on the dividing. For example, a part of the dependability description data in  can be expressed by a D-Case description as illustrated in . The goal is \u201ccontinuation of WEB service\u201d (-), and four items linking to the goal, i.e. \u201ccontinuation of operation of Client\u201d (-), \u201ccontinuation of operation of WEB Server\u201d (-), \u201ccontinuation of operation of App Logic\u201d (-), and \u201ccontinuation of operation of DBS\u201d (-) are sub-goals, respectively. The reason why the four items are sub-goals is indicated by a strategy \u201cdivision in terms of continuity of a subsystem\u201d (-).","A context may link to a goal or a strategy. A context is information which complements the content of a goal or a strategy. For example, in , to the goal \u201ccontinuation of WEB service\u201d (-) is given a context which is a complementary explanation on the \u201ccontinuation\u201d, stating that \u201ceven if a service is interrupted, it is restored within one minute\u201d.","The goal is provided with evidences - and - which express validity of the goal. The evidences finally certify the goal having been divided and detailed. Validity of the evidences is based on agreement among stakeholders. A goal without any evidence has some problems.","In , the dependability description data is expressed by a tree structure. Alternatively, the dependability description data may be expressed by a general graph structure indicative of dependency between nodes, or may be expressed by a table format. In the present embodiment, the dependability description data will be hereinafter described using the D-Case representation.","In the present embodiment, the value of dependability is measured and evaluated using a D value calculated from the dependability description data. In the workspace computer , the D value is calculated by a D value calculation section (dependability value determination means) - of the verification tool section -, and in the runtime computer , the D value is calculated by a D value calculation section (dependability value determination means) - of the monitoring section -. In the workspace computer , the D value is used for verification of the dependability description data, and is calculated every time the dependability description data is changed. In the runtime computer , the D value is used for monitoring a target system which operates in accordance with the dependability description data, and is calculated in real time while the target system operates.",{"@attributes":{"id":"p-0126","num":"0125"},"figref":["FIG. 10","FIG. 5"],"b":["100","202","01","202","01"]},"Since the top node is broken down into a plurality of sub-nodes, it is possible to form a multidimensional vector whose elements are individual edges (links) ((a) of ). In this case, individual edges may be weighted. In the example of , in a case where the node - is more important than the node - for example, the edge between the nodes - and - may be more weighted than the edge between the nodes - and -. Alternatively, the number of sub-nodes of a certain node may be used as weight. This is because the number of sub-nodes being large indicates that countermeasures have been discussed sufficiently. A multidimensional vector value constituted by edges thus weighted can be treated as a D value. Since a multidimensional vector with larger number of dimensions is difficult to handle, the number of dimensions may be reduced using principal component analysis, Fisher's linear discriminant etc. Alternatively, evidence at the time of design is learned as teacher data and a change in a monitor node (mentioned later) is detected as an outlier in Mahalanobis distance calculation for example, thereby detecting abnormality.","This allows obtaining an evaluation value which adds the importance of an edge to a graph structure. The D value obtained here is a multidimensional vector value. However, it goes without saying that the D value obtained here can be converted into a scalar value by any conversion method corresponding to the purpose.","(b) of  shows an example in which a ratio of available evidences\/total evidences with respect to the attribute is considered as a D value. The number of total evidences in  is 8. If the number of available evidences among the total evidences is 4, the D value is 4\/8=0.5.","(c) of  shows an example in which nodes whose data acquired by a monitoring point in a monitor node out of a monitor node group is within a tolerable range of variation and nodes whose data is outside the tolerable range of variation are colored differently, so that the graph structure itself is treated as a D value. This example will be detailed later.","Thus, an evaluation value corresponding to the state of the evidence can be obtained. Since the evidence changes according to a change in requirement, the D value obtained here changes too according to the change in requirement. That is, checking the D value allows evaluating what influence the change in requirement has on dependability.","Alternatively, the technique described in Non-patent Literature 5 may be used. Non-patent Literature 5 reconstructs a D-Case description by items shown in . As shown in , by repositioning D-Case nodes on four layers \u201cphase\u201d, \u201cobjective\u201d, \u201ctarget\u201d, and \u201ckind of abnormality\u201d, it is possible to treat weights of edges as values consistent at each layer, and thus to compare D values at each layer.","Dependability requirements for a system are different according to the objective of the system. Furthermore, at individual phases of the lifecycle of a system, it is necessary to facilitate a work for agreement among stakeholders. This requires quantitatively representing dependability requirements and degrees of their fulfillments. For this reason, dependability is quantitatively represented as a D value as described above, thereby realizing an index (dependability metrics) for argument.","As described above, use of a D value enables a system developer to quantify a requirement itself or a degree of fulfillment of the requirement while taking into account the weight for a specific dependability support for the system. Furthermore, if an incident happens in the system in operation, it is possible to quantify in real time dependability which can be met at that time. That is, by combining evidence derived from a benchmark and verification with a D value, it is possible to evaluate dependability description data. Furthermore, by obtaining in real time a D value from the system in operation, it is possible to reason the situation of the system.","With reference to , the following description will discuss an example of the D value calculation section - of the monitoring section - in the runtime computer . In order to calculate a D value in the runtime computer  in operation based on agreement among stakeholders, there is deployed a D-Case monitor node which describes, in the D-Case in , which function inside the target system is monitored in what time and in what manner based on agreement among stakeholders (). A node representing a goal in the D-Case description is associated with a node representing evidence satisfying the goal. The node corresponding to the evidence may collect data from monitoring points in the target system and determine whether the data is in a tolerable range of variation.","The tolerable range of variation indicates a range within which data obtained from monitoring points is a reference value or in accordance with a reference value. For example, in a case of a network bandwidth, the tolerable range of variation can be defined as a range of 1 Mbps to 2 Mbps within which the network bandwidth is in ordinary operation. In a case of memory consumption of an application, the tolerable range of variation can be defined as a range of not more than 100 MB within which the memory consumption of the application is in ordinary operation. The tolerable range of variation is set based on agreement among stakeholders.","In , a monitor node - is linked to a goal -, and a monitor node - is linked to a goal -. The monitor node - acquires data from a monitoring point  (-) in a runtime environment -. When the data is within the tolerable range of variation, the goal - is satisfied. The monitor node - acquires data from a monitoring point  (-) in the runtime environment -. When the data is within the tolerable range of variation, the goal - is satisfied.","Data acquired by the monitoring point  (-) is acquired from a monitoring target sensor - inside an application -. The sensor may be, for example, the capacity of memory consumed by the application or delay and a bandwidth when the application communicates with the outside. In contrast, data acquired by the monitoring point  (-) is acquired from a monitoring target log - inside the application -. In general, in order to determine based on a log whether a monitoring target in a target system is within a tolerable range of variation, it is necessary to scrutinize the log. Accordingly, in the present example, a script is deployed and a log is scrutinized so as to determine whether the monitoring target is within the tolerable range of variation or not. The script is based on agreement among stakeholders.","In one example of the present invention, the agreement among stakeholders is represented by an electronic signature, and is confirmed in runtime.  shows such an example. An outline of the D-Case description in  can be represented as in . In , validated ranges of three electronic signatures are shown. A range - is an electronic signature valid for the whole, a range - is an electronic signature valid for a set of a goal and a monitor node, and a range - is an electronic signature valid for a set of a goal, a monitor node, and a script.","The electronic signature can be designed to set an expiration date\/time. For example, an electronic signature which is valid only in development may be given to a D-Case description, or an electronic signature which is valid during a period depending on a situation may be given to a D-Case description. This improves reliability in acquirement of data by the monitor node, thereby further ensuring use of the data as evidence.","In an environment where both of a D-Case description with an electronic signature and a D-Case description without an electronic signature are present, a default operation may be set in advance for processing the D-Case description without an electronic signature. In general, such a default operation should be a process of rejection similarly with the case where an electronic signature is invalid. However, such a default operation may be designed such that confirmation to an operator or a user is made depending on a situation.","Data acquired at the D-Case monitor node may be used in calculation of a D value. (c) of  shows an example. In the present example, D-Case description can be presented with respect to each module. The D-Case description itself has a tree structure, and D-Case monitor nodes which are parts of the D-Case description have a tree structure, too. A structure of the D-Case monitor nodes as a whole can be a general graph structure as illustrated in (c) of . Here, a distance between nodes may be evaluated. An evaluation value for a direct link between node groups can be larger than that for a structure having plural links between nodes. A node whose data acquired by a monitoring point at a monitor node in the monitor node group is within a tolerable range of variation and a node whose data is outside the tolerable range of variation may be colored differently so that the graph structure itself is treated as a D value. In the coloring, Severity may be given to the tolerable range of variation. For example, in a case of a tolerable range of variation regarding a remaining capacity of a hard disk, it is desirable that a remaining capacity of 50% and a remaining capacity of 10% are given different severities. Since the graph structure reflects dependency between modules, using the graph structure as a D value allows treating a D value reflecting the dependency as a dependability value.","Furthermore, as shown in , the monitor nodes may be linked to intermediate goals (- to -) other than edge goals (- to -). A relation between a monitor node linked to a certain goal and monitor nodes linked to sub-nodes of the goal is equal to a relation between corresponding monitoring points. For example, in a case where a goal  (-) is \u201ccontinuation of service of merchandise purchase website\u201d, the goal  is divided into two sub-goals: a goal  (-) of \u201ccontinuation of electronic payment system\u201d and a goal  (-) of \u201ccontinuation of merchandise DB\u201d. Monitor nodes are linked to the goals, respectively, as follows. A monitor node  (-) is linked to the goal  (-), and for example, executes a scenario of generic service continuation by a script, thereby confirming that the goal  is satisfied. A monitor node  (-) is linked to the goal  (-), and for example, confirms by a script that there is no abnormality in an electronic payment system, thereby confirming that the goal  is satisfied. A monitor node (-) is linked to the goal  (-), and for example, receives data from a vital (life-or-death) sensor provided in the merchandise DB, thereby confirming that the goal  is satisfied.","Alternatively, the present example may be arranged as follows. For example, in a case where the goal  (-) is \u201ccontinuation of merchandise candidate display system\u201d, the goal  may be divided into two sub-goals: the goal  (-) of \u201cordinary operation with not more than predefined online traffic\u201d and a goal  (-) of \u201cordinary operation within predefined delay\u201d. Monitor nodes are linked to the goals, respectively, as follows. A monitor node  (-) is linked to the goal  (-), and for example, confirms by a script that ordinary operation is made with not more than predefined online traffic, thereby confirming that the goal  is satisfied. A monitor node  (-) is linked to the goal  (-), and for example, confirms that ordinary operation is made within predefined delay by obtaining data of a sensor embedded in a WEB server of a target system, thereby confirming that the goal  is satisfied. In this case, the monitor node  (-) linked to the goal  (-) confirms that both of the goals  and  which are sub-goals are satisfied, thereby confirming that the goal  is satisfied. As described above, by designing monitor nodes to have a graph structure, the D value can be acquired by calculating the graph structure, allowing determination of the situation of the system.","The present invention may be arranged as follows.","The dependability maintenance device (dependability maintenance system , workspace computer , runtime computer ) of the present invention may be arranged such that, in a system including dependability description data (whose data structure is a tree structure model for example) at a time changeable on a temporal axis regarding dependability, for the purpose of system development, system operation, and continuous maintenance of dependability in services provided by the system in an open environment with potential incompleteness and uncertainty, and for the purpose of responding to three problems: misunderstanding of a requirement among stakeholders; unableness to respond to an environment change; and unsuccess to respond to failure, the dependability maintenance device is capable of calculating the dependability description data, thereby measuring and evaluating a value of dependability of a system represented by the dependability description data.","As described above, the dependability maintenance device can measure and evaluate a value of dependability in a system including dependability description data at a time changeable on a temporal axis regarding dependability. This yields an effect of maintaining dependability by responding to the three problems: misunderstanding of a requirement among stakeholders; unableness to respond to an environment change; and unsuccess to respond to failure.","Furthermore, the present invention may be arranged as follows.","A dependability maintenance device (dependability maintenance system , workspace computer , runtime computer ) of the present invention is a dependability maintenance device for maintaining dependability of a target system, comprising: description data acquiring means (dependability description data input section -, software input section -) for acquiring dependability description data indicative of a specification regarding the dependability of the target system; and dependability value determining means (D value calculation section -, D value calculation section -) for determining, based on the dependability description data acquired by the description data acquiring means, an evaluation value (D value) quantitatively indicative of a value of the dependability of the target system.","This allows quantitatively representing the value of the dependability of the target system. Therefore, for example, in a case where the dependability description data is changed according to a change in requirement or in a case where the state of the target system is confirmed when the target system is in operation, it is possible to present the value of the dependability of the target system in an intelligible and objective manner. This allows smoothly maintaining the dependability of the target system.","The dependability maintenance device (dependability maintenance system , workspace computer , runtime computer ) of the present invention may be arranged such that the dependability description data is data having a tree structure or graph structure capable of weighting an edge between nodes, and the dependability value determining means (D value calculation section -, D value calculation section -) considers, as the evaluation value (D value), a multidimensional vector value whose element is a weight used for weighting the edge.","Therefore, it is possible to obtain an evaluation value obtained by adding importance of an edge to the tree structure or graph structure. This yields an effect that what influence a change in weighting an edge has on dependability can be evaluated by confirming the evaluation value. Although the evaluation value obtained here is a multidimensional vector value, the evaluation value can be converted into a scalar value by any conversion method according to the purpose.","The dependability maintenance device (dependability maintenance system , workspace computer , runtime computer ) of the present invention may be arranged such that the dependability value determining means (D value calculation section -, D value calculation section -) calculates, as the evaluation value (D value), a ratio of the number of evidence whose monitor value acquired by monitoring the target system is satisfactory with respect to the tolerable range of variation to the total number of evidence included in dependability description data.","Therefore, the evaluation value according to the state of evidence can be obtained. Since evidence changes according to a change in requirement, the evaluation value obtained here also changes according to the change in requirement. This yields an effect that what influence a change in requirement has on dependability can be evaluated by confirming the evaluation value.","The dependability maintenance device (dependability maintenance system , workspace computer , runtime computer ) of the present invention may be arranged such that the dependability description data is evaluated as a graph structure, and the dependability value determining means (D value calculation section -, D value calculation section -) calculates the graph structure while embedding, for example, a distance between nodes and severity in a calculation equation, thereby finding an evaluation value (D value).","Therefore, the evaluation value according to data from the monitor nodes can be obtained. Since the monitor nodes change according to the state of runtime of the target system, the evaluation value obtained here also changes according to the state of runtime of the target system. This yields an effect that what influence the state of runtime of the target system has on dependability can be evaluated by confirming the evaluation value.","The dependability maintenance system  of the present invention is a dependability maintenance system for maintaining dependability of a target system, comprising: a workspace device (workspace computer ) for executing the change accommodation cycle P for changing the dependability description data in accordance with a change in specification during development or update of the target system; and a runtime device (runtime computer ) for executing the failure response cycle P for avoiding abort of the target system based on the dependability description data when occurrence of failure or a sign of failure is detected during operation of the target system, at least one of the workspace device and the runtime device determining, based on the dependability description data, an evaluation value (D value) quantitatively indicative of a value of the dependability of the target system.","The dependability maintenance system  of the present invention may be connected with other dependability maintenance system  via a network. That is, a plurality of dependability maintenance systems  may be connected with each other via a network.","[3. Two Processes]","With reference to , the following description will discuss an iterative process of a dependability maintenance system . With reference to , the following description will discuss architecture for realizing the iterative process.","For realizing open systems dependability, i.e. dependability of a system whose function, structure, and system boundary change with time, an approach as an iterative process is essential. The iterative process is required to include a cycle for continuously changing the system according to changes in objectives and environments (change accommodation cycle P) and a cycle for promptly responding to failure (failure response cycle ). The iterative process is \u201cprocess of processes\u201d which includes, as members, a requirement management process -, a development process -, an ordinary operation process S, a failure response cycle -, an accountability achievement process - etc. These members of processes must be organically connected with each other. In the present embodiment, the iterative process is referred to as a DEOS process.","The interested parties concerning dependability of a target system are referred to as \u201cstakeholders\u201d in the DEOS process. Supposed examples of the stakeholders include 1) users of services and merchandises (customers, or society as a whole in case of social infrastructure), 2) providers of services and merchandises (business proprietors), 3) system providers (designers and developers, maintainers, hardware suppliers), and 4) permitters of services and merchandises (regulatory authority).","Stakeholders may change their respective objectives with time or according to an environment change, and change their requirements for functions or services. These changes are referred to as \u201cobjective\/environment change\u201d. The stakeholders consider these changes and agree with each other on these changes, and require a change in system at appropriate time. The DEOS process includes a \u201cchange accommodation cycle\u201d (P) as a cycle for responding such a requirement.","The target system has extreme difficulty in completely avoiding failure due to incompleteness and uncertainty. When the target system detects a sign of a failure, it is necessary for the target system to avoid the failure before it occurs. When the failure has occurred unfortunately, it is necessary for the target system to promptly respond to the failure so as to minimize damage, investigate the cause, and fulfill accountability. In order to deal with such a situation, the DEOS process includes a \u201cfailure response cycle\u201d (P).","In a case of developing a new system and changing the system according to an objective and environment change, it is essential that the system includes an agreement description database - for recording in detail the reason for the change, the process of discussion made among the stakeholders, the content of agreement among the stakeholders. This will make the iterative process effective, fulfilling accountability. The database includes the D-Case which describes discussion or ground for achieving dependability, and a script which describes execution procedure for promptly responding to detection of a sign of failure or occurrence of failure in accordance with a scenario for continuing a service against the failure (this script is referred to as D-Script in the drawing, which will be detailed later). In accordance with these agreement descriptions, the development process -, the failure response cycle -, and the ordinary operation process S are executed, and the accountability achievement process S- can be supported. The agreement description database - plays an important role of organically connecting these members of processes.","Features of the DEOS process are summarized as follows. 1) The DEOS process includes two cycles of the \u201cchange accommodation cycle (P)\u201d and the \u201cfailure response cycle (P)\u201d each of which starts from \u201cordinary operation\u201d (S). 2) The DEOS process has two phases of \u201cstakeholders' agreement\u201d (-) for requiring a system change and \u201caccountability achievement\u201d (-) concerning a system change or response to failure. 3) The DEOS process includes the agreement description database - including the \u201cD-Case\u201d which describes processes, grounds, results etc. of discussion for regulating stakes among stakeholders and achieving dependability, and the \u201cscript\u201d which describes execution procedure for promptly responding to failure, and organically connects members of processes.","In , the ordinary operation S indicates that the dependability maintenance system  is in an ordinary operation state. The ordinary operation S is a state in which the system does not greatly deviate from a service level tolerable range of variation (In-Operation Range) agreed among stakeholders and continues to provide users with services. It is desirable that the change accommodation cycle P is executed along with ordinary operation and the system is changed while services continue to be provided. Similarly, it is desirable that the failure response cycle P is executed while continuing ordinary operation. In fact, there is a case where even when the system detects a sign of abnormality, an avoiding process is automatically carried out in a tolerable range of variation of service and function level which is described in the script, so that services continue to be provided. Alternatively, there is a case where services continue to be provided by degenerating a part of the functions. However, there is a case where services cease to be provided completely.","Processes to be executed in the ordinary operation state S include continuous activities for improving dependability, such as inspection of records of daily operations, regular reexamination and improvement of processes, and training\/discipline\/education of staffs. There is a possibility that recording a state of operation of the system and daily inspecting the record enables a maintenance staff and an operation staff to find some signs therefrom. Furthermore, always putting a memory resource of the system in a clean state is a very effective daily maintenance\/improvement activity. Alternatively, it is effective to actively have a rehearsal. Failure occurs when a certain time has passed and the system reaches a certain state. Accordingly, by causing a time to pass in advance, it is possible to know occurrence of failure beforehand. This is a so-called rehearsal. It depends on the situation how appropriate the rehearsal is at the time of operation of a service provided by an information system.","The failure response cycle P is outlined below. The failure response cycle P is a cycle for promptly responding to failure and minimizing damage caused by the failure. In the DEOS process, \u201cfailure\u201d is defined as a phenomenon of deviating from tolerable ranges of variations of service\/function levels which have been agreed among stakeholders. Main phases of the failure response cycle are \u201cfailure prevention\u201d (-), \u201cresponsive action\u201d (-), and \u201ccause analysis\u201d (-), and \u201cfulfillment of accountability\u201d is essential when failure occurs. The three phases are not necessarily carried out separately and orderly. In many cases, these phases become a phenomenon\/activity in which they are related to each other and are mingled with each other.","The failure prevention phase - is a phase of responding and operating so as to avoid failure when predicting occurrence of failure before actual occurrence of failure or detecting increase in the possibility of failure in operation of the system. By predicting failure well before an expected time of occurrence of failure, it is possible to take an effective countermeasure against the failure. Examples of the countermeasure include restricting a resource of the system and decreasing throughput so as to avoid system down or secure sufficient time before the system down. When failure is predicted just before the occurrence, the system tries hard to minimize the influence of the failure. Furthermore, it is possible to record information inside the system up to the occurrence of failure, which information is useful for analyzing a cause. A specific example of the method for predicting is determining a similar failure based on the past failure pattern. The failure prevention scenario is described as a script beforehand, so that failure prevention operation is carried out in combination with an operator and a system manager.","The responsive action phase - is a phase for, when failure occurs, minimizing the influence of the failure. It is desirable that a scenario for responsive action to failure is described beforehand as a script, and is executed automatically. However, there is a case which requires a response to unexpected failure. It is required that there is provided beforehand an emergency response plan (which describes a person in charge, a corresponding organization, procedure, escalation path etc.) for continuing services according to the objective of each corresponding field and each region, and the plan is agreed among stakeholders. In accordance with instructions of the plan, the influence of failure is promptly minimized in cooperation with the operator and the system manager. That is, failure is isolated so as to localize the influence, thereby avoiding abort of services as a whole. For this reason, operation of a component of application or system in which failure has occurred is ceased and reset, and then the operator or the system manager restores the application or the system.","The cause analysis phase - is a phase related to the failure response cycle P and the change accommodation cycle P. Determinations with different depths are made depending on the cycle. In the failure response cycle P, the cause of the failure is investigated in order to find what responsive action is possible. Depending on the result of the investigation, the change accommodation cycle P starts.","In the accountability achievement phase -, a service provider, particularly a social infrastructure service provider and a provider of merchandises widely used in society, explains the status of failure, responsive action, prospect etc. to a service user, a merchandise user, and society. Such an explanation plays a very important role of maintaining reliance from users and society and building consensus on providing infrastructure service, resulting in protection of business benefit of the service provider. The agreement description database, particularly the D-Case description and system monitoring record are very useful for fulfilling accountability.","The change accommodation cycle P is outlined below. The change accommodation cycle P is a cycle for responding to a change in the objective of a stakeholder and a change in various external environments. Essential phases of this cycle include \u201crequirements elicitation\/risk analysis\u201d (-) for changing a system, \u201cstakeholders' agreement\u201d (-), and \u201cdesign\/implementation\/verification\/test\u201d (-). When responding to a great change, the phase of \u201caccountability achievement\u201d (-) is essential. In a case where a requirement for fundamentally improving a system occurs as a result of carrying out the cause analysis phase - in the failure response cycle P, the change accommodation cycle P starts.","The requirements elicitation\/risk analysis phase - starts in a case where a requirement from a stakeholder changes (including a new requirement) due to an objective\/environment change, or in a case where a change in system is required as a result of investigation of the cause after promptly responding to the occurrence of failure. In either case, functional requirements of the system are elicited in consideration of user's requirements, system environments, and related laws and international standards based on the objective of a service of a business proprietor. At the same time, a scenario of continuing the service of the system is generated based on the objective of the service, risk analysis is carried out, and non-functional requirements including dependability requirements are elicited.","In the \u201cstakeholders' agreement\u201d phase -, what is to be changed and how it is to be changed are described in such a manner as to be intelligible to all stakeholders without any misunderstanding, and after discussion among the stakeholders, the agreement among the stakeholders is described as D-Case. Furthermore, a scenario of continuing a service is made, and a script which is execution procedure of the scenario is made. \u201cRequirements elicitation\/risk analysis\u201d phase - and the \u201cstakeholders' agreement\u201d phase - constitute the \u201crequirement management process\u201d (-).","The \u201cdesign\/demonstration\/verification\/test\u201d phase - is a so-called design and development process. Many researches have been made with respect to this process, and many methods and tools have been conceived.","In the \u201caccountability achievement\u201d phase -, in a case where the system is changed in order to respond to the change in requirements from the stakeholders due to the objective and environment change, an explanation is made as to the background and when the service or the function is improved (when the service or the function is changed). In a case where an explanation as to a daily service situation or a design development\/maintenance and operation process is necessary, such an explanation is made in the \u201caccountability achievement\u201d phase -. This plays very important roles of maintaining reliance from users and society and building consensus on providing infrastructure services, thereby protecting benefits of service providers in business fulfillment. D-Case description recorded in the agreement description database - is very useful for accountability achievement.","[4. DEOS Architecture]","The DEOS process provides an iterative process for realizing dependability of an extensive open system. In a case where the process is applied to a target system in more specific manner, it is necessary to conceive architecture for carrying out a process with respect to each target category. In the present embodiment, a description is provided as to architecture conceived to be applied to a modern large-scale and complicated software system including an embedded system (referred to as DEOS architecture). Comparison of the DEOS process with the DEOS architecture allows understanding how the DEOS process is carried out in a real system.","With reference to , a description is provided below as to the DEOS architecture. The architecture includes the following members: 1) a tool group - (-) for assisting the requirements elicitation\/risk analysis phase; 2) a consensus-building assistance tool group - (-) for assisting the stakeholders' agreement phase; 3) the agreement description database - including the \u201cD-Case\u201d which is a description of agreement and the \u201cscript\u201d (referred to as D-script in the drawing) which is execution procedure of a service-continuation scenario; 4) a DEOS runtime environment -; 5) a DEOS development assisting tool - including a program verification tool and tools for benchmarking and fault-injection test.","In the requirements-elicitation\/risk-analysis phase -, in consideration of user's requirements, system environments, and related laws and international standards based on an service-objectives - of a business proprietor, functional requirements of the system are elicited, a scenario of continuing the service are generated in response to a supposed failure, risk analysis is carried out, and non-functional requirements including dependability requirements are elicited.","In the stakeholders' agreement phase -, the content of the agreement is described as a D-Case in accordance with a method for forming agreement and syntax for describing agreement. Tools for this purpose are a D-Case Editor (-) and a D-Case Viewer (-). Furthermore, an execution procedure script - based on the service-continuation scenario is generated. The script dynamically links a D-Case description to execution of an application program in the DEOS architecture. In the script, a scenario to be executed by a later-mentioned script engine (D-Script Engine in the drawing) is described. The scenario instructs the DEOS runtime environment - 1) when and what log information to collect and 2) how to respond to failure when the failure occurs. At that time, there is a case where the scenario requires an operator to intervene in accordance with an escalation rule. Thus, the script exchanges information dynamically and bidirectionally so as to flexibly control execution of the application program, thereby contributing to achievement of the open systems dependability.","The DEOS runtime environment - is a runtime environment for providing a service for realizing dependability based on the agreement among stakeholders, and includes the following sub-systems. A D-Visor provides a mechanism (System Container) for ensuring independence of individual components of the system. This mechanism prevents abnormality or failure in one System Container from having an influence on other System Container. A D-Application Manager provides a mechanism (Application Container) for ensuring independence of a plurality of applications, and manages and controls lifecycles (generation, start, update, shutdown, and deletion) of individual applications. A D-Application Monitor provides a function of surveying the operation of an application, collects evidence in accordance with the description of a D-Case monitor node, and causes the evidence to be stored in a D-Box. A D-System Monitor provides a function of monitoring the operation of a system (including an operating system and a runtime support). Similarly with the D-Application Monitor, the D-System Monitor collects evidence in accordance with the description of a D-Case monitor node, and causes the evidence to be stored in the D-Box. The D-Box safely and surely stores information useful for realizing OSD, such as evidence. A D-Script Engine safely and surely executes a D-Script, and controls the D-Application Manager, the D-Application Monitor, and the D-System Monitor.","The DEOS development assisting tool - is a group of development assisting tools for designing, developing, verifying, benchmarking, and testing programs in accordance with a function specification, a test specification, a benchmarking scenario, and a log specification which are determined based on the business objective and a business continuation scenario. Examples of the DEOS development assisting tool - include a software verification tool based on type theory and model verification, and a dependability test assisting tool having benchmarking and fault injection function.","The maximum advantage of applying the DEOS process is that a discussion for making agreement among stakeholders on a change in requirement can be made sufficiently, and the result of the agreement, the reason for reaching the conclusion, and the history of the discussion can be recorded in a D-Case. Use of the D-Case description in developing a system allows designing a system capable of suitably and promptly responding to failure in cooperation with the DEOS architecture. Furthermore, the D-Case description makes it easy to investigate the cause of failure and fulfill accountability.","Another advantage of the DEOS process is that the system is changed after requirements are elicited suitably and risks are discussed sufficiently. Individual stakeholders can know the state of the system at any time from their respective viewpoints. This allows managing and operating the system simply and powerfully. On the other hand, the number of requirements is large. Tools such as the D-Case Editor (-) and the D-Case Viewer (-) reduce work in the requirement management.","The DEOS runtime environment - which is a realization of the DEOS architecture has a monitoring function, and monitors and records, based on the D-Case, the runtime state of a system and an application necessary for analysis. The runtime environment executes a responsive action to failure in accordance with the monitoring record and the script. Furthermore, the runtime environment analyzes the cause and fulfills accountability by using information from the D-Case description and the monitoring record as evidence. The script and the script engine serve to bridge the D-Case and the runtime environment. This structure allows the system to automatically, or if necessary via an operator (based on D-Case description), make a flexible response.","Furthermore, the DEOS architecture provides a function of preventing failure in one module from being propagated to another module. Similarly, the DEOS architecture provides a function of detecting intrusion from the outside in order to secure the system. Furthermore, the DEOS architecture provides a tool for verifying a program before it is executed, a tool for measuring performance, a development tool for injecting fault so as to test the behavior in abnormality etc. for the purpose of achieving dependability.","Use of the above mechanism and the above function enables the DEOS process and the DEOS architecture to have an ability to continuously avoid failure, and to suitably and promptly respond to failure, so that the influence of the failure is minimized. Furthermore, use of the above mechanism and the above function enables the DEOS process and the DEOS architecture to continue a service and fulfill accountability. The DEOS process and the DEOS architecture are the first attempts to achieve the open systems dependability.","[5. Runtime Environment]","With reference to , the following description will discuss a series of procedures of the change accommodation cycle P and the failure response cycle P which constitute the DEOS process in accordance with one embodiment of the present invention. Both of the change accommodation cycle P and the failure response cycle P are normally in the state of ordinary operation S.","When in the change accommodation cycle P a change in requirement of a stakeholder, a change in requirement during development, and\/or a change in requirement in system operation occurs due to an environment change such as a change in business environment, the process in the change accommodation cycle P transits to the state of an environment change S-.","Initially, a change in requirement S- is made by using the analysis tool section - of the workspace computer  (see ). Here, after extracting requirements from stakeholders, an influence of the change in requirement on the runtime computer  is analyzed, specific means to change is analyzed, and a portion to be changed is analyzed.","Next, a change-in-dependability-description-data - is made by using the editing tool section - and\/or the developing tool section - based on the result of analysis in the change in requirement S-. Here, the result is reflected in software SW.","Next, it is confirmed in an evidence measurement - by the verification tool section - whether the change is in accordance with the requirement.","Lastly, software SW is deployed into the runtime computer  in a deployment S-. Thereafter, the change accommodation cycle P transits to the ordinary operation S.","In a case where failure occurs in the runtime computer  (see ) in the failure response cycle P, the process in the failure response cycle P transits to the state of a failure occurrence S-. Initially, in a countermeasure extraction S-, a countermeasure against the failure is extracted without shutting down the runtime computer .","Next, in an emergency response S-, the countermeasure is executed, so that a process based on a model in the runtime computer  is continued.","Next, in a record S-, the emergency response is recorded by the recording section -. Here, information regarding the failure is also recorded by the recording section -. Although it is desirable that operation of the runtime computer  is continued at this point of time, there is case where the countermeasure cannot enable the operation of the runtime computer  to be continued due to the failure. In either case of continuation or discontinuation, a cause analysis S- is executed. Consequently, the cause of the failure is investigated, or if the process based on model in the runtime computer  is not continued, the cause of the discontinuation is investigated. Depending on the result of the investigation, the process in the change accommodation cycle P is caused to transit to the state of an environment change S- with a change in requirement.","On the other hand, in a case where malfunction (or a sign of malfunction) or a sign of failure is found in the failure response cycle P, the process in the failure response cycle P transits to the state of a sign of failure S-. Malfunction (or sign of malfunction) is found by the monitoring section - of the runtime computer . A sign of failure is found also by the monitoring section -. Specifically, such finding is possible by checking the history of consumption of various calculation resources in the binary execution section  of the runtime computer . For example, in a case where the capacity of remaining memory continues to be reduced within a certain period of time, it is found that calculation will stop in a near future due to shortage of the memory.","Initially, in the countermeasure extraction S-, a countermeasure against the malfunction (or a sign of the malfunction) or a sign of the failure is extracted without stopping a process in the runtime computer .","Next, in the emergency response S-, the countermeasure is executed, so that the operation of the runtime computer  is continued.","Next, in the record S-, the emergency response is recorded by the recording section -. Here, information regarding the failure is also recorded by the recording section -. Although it is desirable that the process based on a model in the runtime computer  is continued at this point of time, there is a case where the countermeasure cannot enable the operation of the runtime computer  to be continued due to the failure. In either case of continuation or discontinuation, the cause analysis S- is executed. Consequently, the cause of the failure is investigated, or if the process based on model in the runtime computer  is not continued, the cause of the discontinuation is investigated. Depending on the result of the investigation, the process in the change accommodation cycle P is caused to transit to the state of the environment change S- with a change in requirement.","As described above, the change accommodation cycle P and the failure response cycle P exist at the same time.","The present invention may be arranged as follows.","The dependability maintenance device (dependability maintenance system ) of the present invention may be arranged such that, in a system including the dependability description data, the dependability maintenance device includes both of two means of a process for responding to a change in requirement from a stakeholder due to an environment change, a change in requirement during system development, and\/or a change in requirement during system operation, and a process for continuing, even in occurrence of failure, services provided by the system in operation and\/or detecting a sign of failure and preventing occurrence of the failure before it occurs so as not to stop services provided by the system in operation.","As described above, in an open environment with potential incompleteness and uncertainty, the dependability maintenance device includes both of two means of a process for responding to a change in requirement from a stakeholder due to a change in environment, a change in requirement during system development, and\/or a change in requirement during system operation, and a process for continuing, even in occurrence of failure, services provided by the system in operation and\/or detecting a sign of failure and preventing occurrence of the failure before it occurs, thereby removing a conventional barrier between a development phase and an operation phase, fulfilling accountability of a stakeholder, and maintaining dependability.","The present invention may be arranged as follows.","The dependability maintenance device (dependability maintenance system , workspace computer , runtime computer ) of the present invention may be arranged such that there is executed at least one of the change accommodation cycle P for changing the dependability description data in accordance with a change in specification when the target system is developed or updated, and the failure response cycle P for avoiding abort of the target system based on the dependability description data when the target system is operated and occurrence of failure or a sign of failure is detected.","In the failure response cycle P, a series of steps starting from transition to the state of the occurrence of failure S- corresponds to a feedback process in control engineering, and a series of steps starting from transition to the state of a sign of failure S- corresponds to a feedforward process in control engineering. Accordingly, by learning the result of the feedback process, it is possible to construct a corresponding model which contributes to the feedforward process. The model may be recorded as a change to the dependability description data. In the feedforward process, a corresponding model in other system may be described in the dependability description data, so that a sign of failure corresponding to the model is proactively avoided under agreement among stakeholders.","In order to continuously maintain dependability of the target system in an open environment, there are required both of the change accommodation cycle P which sufficiently discusses a change in requirement or an environment change and responds to the change and the failure response cycle P which promptly responds to occurrence of failure in operation.","With the above arrangement, in at least one of the change accommodation cycle P and the failure response cycle P, it is possible to obtain an evaluation value indicative of a value of dependability of the target system. Accordingly, for example, in the change accommodation cycle P, when the dependability description is changed according to a change in requirement, it is possible to determine whether a plan of changing the dependability description data is appropriate or not according to the evaluation value. Furthermore, for example, in the failure response cycle P, it is possible to determine the state of the target system in operation according to the evaluation value. This allows smoothly maintaining dependability of the target system.","[6. Change Accommodation Cycle]",{"@attributes":{"id":"p-0211","num":"0210"},"figref":["FIG. 18","FIG. 17"],"b":["400","401","402","300","101"]},"The consensus-building-among-stakeholders process S is related to the change in requirement S- and the change-in-dependability-description-data S-. The consensus-building-among-stakeholders process S starts from a step of understanding the content of the change in requirement (understanding of change in requirement -). For that purpose, for example, SRS (Software Requirements Specification) in accordance with \u201cIEEE Std 830-1998 IEEE Recommended Practice for Software Requirements Specification\u201d is analyzed.","Next, points of changes to existing dependability description data are enumerated in an influence analysis S-.","Lastly, the points of changes are reflected in the change-in-dependability-description-data S- as changes in the dependability description data.","These steps are repeated until agreement S- among stakeholders is built up.","The implementation-reflecting-change-in-requirement process S is related to the change-in-dependability-description-data S- and the evidence measurement S-. The implementation-reflecting-change-in-requirement process S starts from a design S-. In the design S-, software for converting a change in requirement into an actual code is designed by the development tool section - in accordance with Capability Maturity Model Integration (CMMI) for example.","Next, in the implementation S-, the design in the design S- is converted into software SW by using the development tool section -.","Next, in the test S-, the software SW in all the steps is tested and verified by using the verification tool section -.","These steps are repeated until all verifications in the test S- are considered as OK. When all the verifications are considered as OK, the software SW is deployed into the runtime computer  in a deployment S-.","The accountability process S is related to the evidence measurement S- and the deployment S-. The accountability  starts from the step of collection of a benchmark etc. S-. A benchmark may be executed and measured in the runtime computer  or in an environment that simulates the runtime computer .","Next, it is verified whether the collected benchmark data meets the requirement (evidence verification S-).","Lastly, the verified data is disclosed as evidence by stakeholders according to necessity (information disclosure S-). As a result of the information disclosure S-, the stakeholders can fulfill accountability (S-).","The present invention may be arranged as follows.","The dependability maintenance device (workspace computer ) of the present invention may be arranged such that in a process which is for responding to a change in requirement from a stakeholder due to a change in the environment, a change in requirement during system development, and\/or a change in requirement in system operation and which is constituted by a loop including a series of steps receiving these requirements and starting from occurrence of the change in requirement, the dependability maintenance device executes three steps of: building consensus among stakeholders on a change in requirement so as to surely implement the change in requirement, operate a system, and provide a service; implementing and verifying the change in requirement and operating the system; and the stakeholder fulfilling accountability by operation of the system and provision of the service in response to the change in requirement.","[7. Failure Response Cycle (Responsive Action)]",{"@attributes":{"id":"p-0225","num":"0224"},"figref":["FIG. 19","FIG. 19","FIG. 17"],"b":["301","301"]},"When the monitoring section (failure occurrence detection means) - detects occurrence of failure, the process transits to the failure occurrence S-. The monitoring section - detects occurrence of failure when a D value gets out of a predetermined tolerable range of variation for example. Two functions are related to the failure response cycle P when the occurrence of failure is detected. The two functions are a system reconfiguration process S and an accountability process S.","The system reconfiguration process S is related to the countermeasure extraction S- and the emergency response S-. The system reconfiguration process S starts from a determination of service continuation S-. Here, dependability description data corresponding to the failure is extracted. In a case where a system reconfiguration scenario can be extracted from the dependability description data (YES in S-), the process goes to the next step. In a case where the system reconfiguration scenario cannot be extracted from the dependability description data (NO in S-), it is determined that continuation is impossible, and a change-in-dependability-description-data extraction process S () is executed.","A typical case of the system reconfiguration scenario may be embedded in a system beforehand when the system is designed. An example is a scenario to restart a later-mentioned application container or system container. In the reconfiguration scenario, similarly with a later-mentioned case, an executable program may be related to a node of dependability description data. In either way, when the reconfiguration scenario cannot be extracted, there is prepared execution of the change accommodation cycle P in order to change the dependability description data. Alternatively, the reconfiguration scenario may be described as a later-mentioned script and be related to dependability description data.","Next, in isolation of a failure component S-, a failure component is isolated according to the extracted scenario, a difference in dependability description data is reflected in the runtime computer , and the process goes to the next step.","Next, in the service continuation S-, an alternative function for the component isolated according to the scenario is started up by the scenario and a service is continued (S-).","On the other hand, the accountability process S is related to the record S- and the cause analysis S-. The accountability process S starts from recordation of a log relating to the failure (S-).","Next, evidence of the runtime computer  reconfigured according to the scenario is collected (S-). The evidence herein is a record that as a result of the system reconfiguration, the runtime computer  operates appropriately according to the dependability description data.","Next, the process goes to cause-of-failure detection S-. This is a collection of the log (S-) regarding the failure, the evidence (S-), and dependability description data regarding the failure. In the present embodiment, the collection is regarded as achievement of accountability by stakeholders. These steps (S- and S-) may be processed in parallel.",{"@attributes":{"id":"p-0234","num":"0233"},"figref":"FIG. 20","b":["102","03"]},"(a) of  shows a part () of dependability description data. In preparing the dependability description data, it is explicitly indicated that data whose status changes in runtime requires to be monitored by a monitor node in the runtime.","The node (-) relates to \u201cDBS access to HDD in normal\u201d. The node is diverged into two nodes. That is, a state where a database normally accesses a HDD device is broken down into two nodes, and the condition is described. Specifically, a node (-) relates to \u201cremaining capacity of HDD\u201d, and a node (-) relates to \u201ctransfer capacity of HDD\u201d.","In the present example, the monitor nodes are deployed as evidences of the two nodes. In (a) of , a node (-) and a node (-) are monitor nodes. The node (-) monitors the remaining capacity of HDD. The node (-) monitors HDD transfer speed.","In a case where the target system can be monitored from the outside, the monitor node in the dependability description data monitors the target system by using monitoring modules (mentioned later) of the monitoring section -. On the other hand, in a case where the target system cannot be monitored from the outside, the target system is monitored by sending a monitoring module into the target system in accordance with a later-mentioned procedure in deploying a program into the target system.","By comparing the result of monitoring in runtime with description of the dependability description data, a difference beyond a tolerable range of variation is specified as abnormality which is a behavior different from a standard at the time of designing. Furthermore, by referring to a superior node in the dependability description data, it is possible to grasp a state where dependability of the superior node is not satisfied due to multiple abnormalities. Furthermore, by comparing failure components in a single system or failure components among a plurality of systems, it is possible to narrow down a component where failure occurs.","(b) of  shows a configuration example of the dependability maintenance system  for detecting failure by using monitor nodes. The monitor nodes can be classified according to pattern. For example, two monitor nodes (-, -) in (a) of  can have the form of \u201cmonitoring that \u2018$2\u2019 of HDD \u2018$1\u2019 is \u2018$3\u2019\u201d. By preparing in advance monitoring modules corresponding to patterns of these monitor nodes and preparing in advance a table showing correspondences between the patterns of the monitor nodes and monitoring modules, it is possible to monitor the state in runtime.","For example, correspondences between the two monitor nodes (-, -) in (a) of  and modules can be shown as in .  shows that in a case of a monitor node having a pattern of \u201cmonitoring that \u2018$2\u2019 of HDD \u2018$1\u2019 is \u2018$3\u2019\u201d, when $2 indicates \u201cdisk capacity\u201d, a HDD monitoring module is used as a monitoring module, and $1 (=HDD identification number) and $3 (=tolerable range of variation) are designated as arguments.","The editing tool section - of the workspace computer  describes dependability description data M, and converts the dependability description data M into internal representation of dependability description data M which is internal representation in the runtime computer . To be more specific, in the editing tool section - of the workspace computer , a dependability description data describing\/displaying tool - describes the dependability description data M, and then a dependability description data conversion section - converts the dependability description data M into the internal representation of dependability description data M.","In the runtime computer , the update section -causes the internal representation of dependability description data M acquired from the workspace computer  to be stored in a dependability description data recording section (dependability description data storage section) -. Furthermore, in accordance with the internal representation of dependability description data M, the update section - causes correspondences between monitor nodes and monitoring modules (monitoring module group -) in the monitoring section - to be stored in a monitor node\/module correspondence table -. In (b) of , monitoring modules included in the monitoring module group -are a CPU monitoring module -, a HDD monitoring module -, and a process monitoring module -. Other monitoring module - may be included in the monitoring module group -","Data (monitor value) obtained by the monitoring module in the monitoring section - is collected by a collection section -, and recorded by a runtime state verification section - as a value of a monitor node in the dependability description data, based on the monitor node\/module correspondence table -. For example, a tolerable range of variation of the monitor value is described in such a manner as to correspond to individual monitor nodes of the dependability description data, and a node whose monitor value is outside the tolerable range of variation is detected as a node where failure occurs. Furthermore, a monitor value from the monitoring module group -is used for calculation of a D value for a node in the D value calculation section -. Accordingly, in the part  of the dependability description data in (a) of , monitor values acquired from two monitor nodes (-, -) are compared with the tolerable range of variation and the D value is calculated based on the monitor values.","A CPU utilization ratio, memory usage, process creation or termination etc. are provided in advance as OS functions, and some of them can be monitored from the outside. However, functions such as \u201ca process X in a system A has terminated normally\u201d are difficult to monitor from the outside. They are mainly information unique to applications, and are embedded as a monitoring module - in the runtime computer . That is, in a case where a monitoring module for monitoring a monitoring target is not provided inside, there may be provided outside a monitoring module such as the monitoring module -. Such embedding may be made in system architecture or in runtime of the runtime computer . This allows specifying abnormality per node of the dependability description data when the result of monitoring in runtime exceeds the tolerable range of variation.","Furthermore, by collecting the results of monitoring from individual monitoring modules in runtime (-, -), it is possible to determine which monitor node on the dependability description data exceeds the tolerable range of variation. That is, it is possible to grasp occurrence of a problem in terms of dependability. In other words, by investigating the dependability description data from the monitor node to a superior node, it is possible to determine at which range dependability cannot be maintained. For example, in a situation where both of the node (-) and the node (-) exceed the tolerable range of variation, it is considered that unableness to maintain dependability is derived from a cause other than HDD, and a more superior node in the dependability description data is investigated. Furthermore, in a situation where a plurality of systems interact with each other, descriptions of not only dependability description data regarding individual systems but also dependability description data regarding interactions among the individual systems allows narrowing down or specifying a portion of behavior that exceeds the tolerable range of variation between systems.","The monitoring module group -is a monitoring group embedded in a system beforehand. In a case where a new monitoring module is embedded during the operation, or in a case where determination of a tolerable range of variation must be made in consideration of data from a plurality of sensors or by analyzing data from a long, a monitoring module may be constituted by a script.","A schematic configuration of a script is explained below with reference to . A script is constituted by at least one basic operation - (D-Task in ) and at least one control operation - (D-Control in ). The control operation - classifies a tolerable range of variation by the degree of severity, and executes a basic operation (D-Task) with a corresponding degree of severity. For example, in a case of remaining capacity of a hard disk, the degree of severity equal to remaining capacity of 50% is regarded as \u201clow\u201d, the degree of severity equal to remaining capacity of 75% is regarded as \u201cmiddle\u201d, and the degree of severity equal to remaining capacity of 90% is regarded as \u201chigh\u201d, constituting the control operation - (D-Control). In this case, when the degree of severity is \u201chigh\u201d, D-Task  (-) is executed, and when the degree of severity is \u201cmiddle\u201d, D-Task  (-) is executed, and when the degree of severity is \u201clow\u201d, D-Task  (-) is executed.","The present invention may be arranged as follows.","The dependability maintenance device (runtime computer ) of the present invention may be arranged such that in a process which is for allowing continuation of a service provided by a system in operation including the dependability description data in response to occurrence of failure and which includes means for detecting occurrence of failure (monitoring function), means for separating a failure component (separating function), means for continuing the service at a component other than the separated failure component, means for detecting cause of the failure (cause questioning function), and means for determining continuity of the service provided by the system in operation (continuity determining function) and which is constituted by a loop including a series of steps starting from occurrence of the failure, the dependability maintenance device executes two steps of: reconfiguring a target system including the dependability description data so as to minimize a term to stop the service in response to occurrence of the failure; and a stakeholder fulfilling accountability by operation of the system and provision of the service as a result of the reconfiguration.","The present invention may be arranged as follows.","The dependability maintenance device (runtime computer ) of the present invention may be arranged such that out of the change accommodation cycle P for changing the dependability description data in accordance with a change in specification when the target system is developed or updated, and the failure response cycle P for avoiding abort of the target system based on the dependability description data when the target system is operated and occurrence of failure or a sign of failure is detected, at least the failure response cycle P is executed, and the dependability maintenance device further comprises reconfiguration means (reconfiguration section -) for, when the occurrence of the failure is detected, reconfiguring the target system based on the dependability description data.","Consequently, when the runtime computer  which executes the failure response cycle P detects occurrence of failure of the target system, the runtime computer  can reconfigure the target system based on dependability description data, so that the operation of the target system can be continued.","The runtime computer  may detect occurrence of failure of the target system based on the D value. For example, occurrence of failure may be detected when the D value is less than a predetermined tolerable range of variation.","[8. Failure Response Cycle (Failure Prevention)]",{"@attributes":{"id":"p-0255","num":"0254"},"figref":["FIG. 23","FIG. 23","FIG. 17"],"b":["301","301"]},"When the monitoring section (sign-of-failure detection means) - detects a sign of failure or malfunction (or a sign of malfunction), the process transits to the state of the sign of failure S-. A sign of failure can be detected by combining various methods. For example, a hard disk drive device can detect a sign of failure by using a mechanism of S.M.A.R.T. The monitoring section - detects a sign of failure when inclination of a temporal change in D value is worsened from a predetermined standard. The monitoring section - detects a sign of failure when inclination of a temporal change in data monitored by the monitor node is out of a tolerable range of variation. Two functions are related to the failure response cycle P in detection of a sign of failure; a system reconfiguration process S and an accountability process S.","The system reconfiguration process S is related to the countermeasure extraction S- and the emergency response S-. The system reconfiguration process S starts from identification-of-failure-component-and-extent-of-influence-thereof S-. Here, for convenience, a sign of failure is also considered as failure. Initially, which component of dependability description data is failure is identified. The range of influence of the component is identified based on the dependability description data. The range of influence of the component is identified by investigating nodes of the dependability description data. For example, in a case where there are a plurality of nodes corresponding to a failure component, a node common to the plurality of nodes can be identified as being within the scope of influence. When dependency between nodes is described in a node, the dependency may be used.","Next, in a continuation-of-service determination -, it is determined whether a corresponding scenario extracted from the dependability description data can continue a service while the scenario sufficiently coverts the tolerable range of variation. In a case where the service can be continued (YES in S-), the process goes to isolation of failure component S-. In a case where a corresponding scenario cannot be extracted from dependability description data (NO in S-), it is determined that the service cannot be continued, and the change-in-dependability-description-data extraction process S () is executed. Even in a case where it is determined in the continuation-of-service determination S- that the service can be continued, there is a situation where the change-in-dependability-description-data extraction process S is preferably executed depending on a sign of failure. Accordingly, for such a situation, there may be employed an example that the change-in-dependability-description-data extraction process is executed.","Next, in the isolation of failure component S-, the failure component is isolated in accordance with the extracted corresponding scenario.","Next, the process goes to a service continuation -, and the system reconfiguration process S is terminated. At this point of time, the service by the runtime computer  is continued (S-).","On the other hand, the accountability process S is related to the record S- and the cause analysis -. The accountability process S starts from a record-of-internal-state . Here, dependability description data related to the failure and the internal state of the runtime computer  which is related to the dependability description data are recorded.","Next, evidence after the system reconfiguration process S is collected (S-). The evidence herein is a record that as a result of the system reconfiguration, the runtime computer  operates appropriately in accordance with the dependability description data. In the present embodiment, collection of the evidence is regarded as fulfillment of accountability by stakeholders (S-).","The emergency response S- may be carried out by using the aforementioned script (D-Script). An example thereof is shown in . The script (D-Script) is an example of a scenario for restarting the WEB service shown in (b) of , and is constituted by six basic operations (D-Task). The scenario is derived from a service continuation scenario in the requirements elicitation\/risk analysis phase - in the DEOS process. The stakeholders agree with the scenario. The service continuation scenario is described in the form shown in  by using the tool group - for assisting a requirements elicitation\/risk analysis phase, and converted into a script, to which an electronic signature is put as a result of agreement among the stakeholders.","When the script is executed in a script engine section  (-) (mentioned later) in the runtime computer , an electronic signature attached to the script is verified. When the electronic signature is invalid, the script is not executed. In execution of the script, an authority to execute the script may be confirmed. That is, the present invention may be arranged so as to confirm who is capable of executing which script. In this case, when there is no authority to execute the script, the script is not executed. The script itself may be encrypted and stored in the runtime computer . These measures for security allow preventing security breach due to the script.","With reference to , the following description will discuss an example of a hierarchical structure of software for the runtime computer .",{"@attributes":{"id":"p-0266","num":"0265"},"figref":["FIG. 25","FIG. 25","FIG. 1","FIG. 25"],"b":["701","701","01","701","03","702","702","102","05","711","716","718","720","701","701","701"]},"The system container  is assigned to the CPU core -, where a system monitoring section , a reconfiguration section -, a system recording section , a dependability description data process section  are provided on the OS kernel .","One system container  exists for the runtime computer . The system monitoring section  is a part of the monitoring section - (), and monitors a system function of the runtime computer . In particular, the system monitoring section  monitors the OS kernels  of other system containers (the system containers  and  in ). The system monitoring section  may be arranged to have a learning function. For example, in a case where the system monitoring section  is arranged to monitor a system function of the target system in such a manner as to monitor whether the system function is in consistency with a data structure of the target system, the system monitoring section  may automatically generate conditions for the consistency from the specification and source code corresponding to the system function. By learning the conditions in runtime, it is possible to continue a monitoring function without monitoring the whole of the data structure or without changing the structure of the monitor if the data structure is changed.","The reconfiguration section - reconfigures other system containers. Specifically, the reconfiguration section - stops and destructs an existing system container, creates a system container with a new structure, and reconfigures functions such as OS kernels according to the new structure and starts the reconfigured functions. When the system container is destructed, the internal state of the system container may be recorded by the system recording section . The system recording section  is a part of the recording section - (), and records the internal state of the runtime computer .","The dependability description data process section  is a part of the update section - (), and incorporates dependability description data inside the software SW generated in the workspace computer  into dependability description data of the runtime computer  as a whole, and extracts a scenario for processing the dependability description data, thereby reconfiguring the runtime computer  by using the reconfiguration section -.","On the other hand, the system container  is assigned to the CPU core -, where an application monitoring section , an application recording section , the script engine section , the application container providing section , application management sections  and , and an application group are provided on the OS kernel .","Here, at least one application container exists with respect to each system container mentioned above. The application container groups at least one application, realizes independency of an address space, independency of a name space, and independency of CPU scheduling. The application container is provided by the application container providing section . In , two application containers, i.e. the application containers  and  are provided for the system container .","The application monitoring section  is a part of the monitoring section - (), and monitors the inside of the application container. The application recording section  is a part of the recording section - (), and records the internal state of the application container.","In the application container , there is provided the application management section , which is used by at least one application. Similarly, in the application container , there is provided the application management section , which is used by at least one application.","The internal structure of the system container  is the same as that of the system container , and accordingly an explanation thereof is omitted and is not shown in .",{"@attributes":{"id":"p-0276","num":"0275"},"figref":["FIG. 26","FIG. 1"],"b":["102","05","102"]},"The present invention may be arranged as follows.","The dependability maintenance device (runtime computer ) of the present invention may be arranged such that in a process which is for detecting a sign of failure and avoiding occurrence of the failure before it occurs so as not to stop a service provided by a system in operation including the dependability description data and which includes means for recording an internal state of the system (logging), means for detecting a sign of failure of the system based on the recorded internal state, means for identifying a part corresponding to the detected failure of the system, and means for determining continuity of a service provided by the system in operation when the failure is detected and which is constituted by a loop including a series of steps starting from detection of occurrence of the failure, the dependability maintenance device executes two steps of: reconfiguring the system so as to avoid abort of the service due to the detected occurrence of the failure or the detected sign of the failure; and a stakeholder fulfilling accountability by operation of the system and provision of the service as a result of the reconfiguration.","Furthermore, the present invention may be arranged as follows.","The dependability maintenance device (runtime computer ) of the present invention may be arranged such that out of the change accommodation cycle P for changing the dependability description data in accordance with a change in specification when the target system is developed or updated, and the failure response cycle P for avoiding abort of the target system based on the dependability description data when the target system is operated and occurrence of failure or a sign of failure is detected, at least the failure response cycle P is executed, and the dependability maintenance device further comprises reconfiguration means (reconfiguration section -) for, when the sign of the failure is detected, reconfiguring the target system based on the dependability description data.","Consequently, when the runtime computer  which executes the failure response cycle P detects occurrence of failure of the target system, the runtime computer  can reconfigure the target system based on dependability description data, so that the operation of the target system can be continued.","The runtime computer  may detect a sign of failure of the target system based on a D value. For example, the runtime computer  may detect a sign of failure when inclination of a temporal change in D value is worsened from a predetermined standard.","The runtime computer  may detect a sign of failure of the target system based on monitoring data of the monitor node. For example, the runtime computer  may detect a sign of failure when inclination of a temporal change in the monitoring data is worsened from a predetermined standard and is out of a tolerable range of variation.","[9. Start of Change Accommodation Cycle from Failure Response Cycle]",{"@attributes":{"id":"p-0284","num":"0283"},"figref":"FIG. 27","b":"100"},"In the determination of service continuation S- () or in the determination of service continuation - (), when the determination of service continuation indicates \u201cNO\u201d, i.e. when the service is considered as unable to be continued, the change-in-dependability-description-data extraction process S is executed.","Initially, dependability description data regarding a failure component is extracted (S-). Next, with respect to all leaf nodes in the dependability description data which nodes are related to tests, processes of S- to S- are executed (S-).","For example, in , the node group (- to -) falls into such nodes. Accordingly, tests corresponding to the node group (- to -) are executed and measured (S-). Since the result as evidence has been already present, comparison of the result as evidence with the result of measurement allows determining whether a difference from the evidence is within a tolerable range of variation or not (S-). In a case where the difference is outside the tolerable range of variation (NO), identification information of the node (e.g. node number) is recorded as abnormal (S-).","Upon completion of the process on all the nodes, an instruction to change a node whose identification information has been recorded is sent to the workspace computer  (S-), and the process is terminated (S-).","The present invention may be arranged as follows.","The dependability maintenance device (runtime computer ) of the present invention may be arranged such that in a case where it is determined in the failure response cycle P that a service provided by a system having the dependability description data in operation of the system cannot be continued, the dependability maintenance device carries out a step of supplying, as a requirement to the failure response cycle P, a change in dependability description data of the system, based on information recorded or detected in the failure response cycle P, in order to continue the service provided by the system in the change accommodation cycle P.","The present invention may be arranged as follows. The dependability maintenance device (dependability maintenance system , runtime computer ) of the present invention may be arranged to further comprise change request transmission means (change transmission section -) for, when the occurrence of the failure or the sign of the failure is detected and abort of the target system is unavoidable, transmitting a request for changing the dependability description data to a device executing the change accommodation cycle P (workspace computer ).","The dependability maintenance device (dependability maintenance system , workspace computer ) of the present invention may be arranged such that out of the change accommodation cycle P for changing the dependability description data in accordance with a change in specification when the target system is developed or updated, and the failure response cycle P for avoiding abort of the target system based on the dependability description data when the target system is operated and occurrence of failure or a sign of failure is detected, at least the change accommodation cycle P is executed, and when the dependability maintenance device receives a request for changing the dependability description data from a device executing the failure response cycle P (runtime computer ), the dependability description data is changed.","With the arrangement, in the runtime computer  executing the failure response cycle P, when it is determined that the occurrence of the failure of the target system or the sign of the failure of the target system is detected and abort of the target system is unavoidable, it is possible to transmit a request for changing the dependability description data to the workspace computer  executing the change accommodation cycle P. The runtime computer  may determine whether abort of the target system by the occurrence of failure or the sign of failure is unavoidable or not according to the D value.","Upon reception of a request to change dependability description data from the runtime computer , the workspace computer  changes the dependability description data in accordance with the request.","This enables the runtime computer  and the workspace computer  to collaborate with each other to smoothly carry out a process of detecting occurrence of failure or a sign of failure of the target system, and changing dependability description data if abort of the target system is unavoidable. This makes it possible to continuously maintain dependability of the target system in open environment.","The aforementioned configuration may be arranged such that even in a case where abort of the target system is avoidable, there is carried out the aforementioned procedure of changing dependability description data depending on a sign of failure.","[10. Collaboration of Failure Response Cycle and Change Accommodation Cycle]",{"@attributes":{"id":"p-0297","num":"0296"},"figref":"FIG. 28","b":["101","102"]},"The editing tool section - in the workspace computer  mainly has three constituents. A dependability description data editing section - describes, edits, and records dependability description data. The dependability description data editing section - may be a D-Case Editor (-) shown in . The dependability description data editing section - may be a tool described in Japanese Patent Application No. 2010-263681. In this application, dependability description data is described in a requirement base in such a manner that a node of interest is positioned at the center of display, thereby simplifying the flow of detailing.","A dependability description data embedding section - converts dependability description data M generated in the dependability description data editing section - into an internal representation so as to generate dependability description data M (to be specific, internal representation of dependability description data M; corresponding to dependability description data - in ). Then, the dependability description data embedding section - embeds, in software SW, the dependability description data M corresponding to (or regarding) the software SW. A deployment section - deploys the software SW into the runtime computer .","In the dependability description data M, tolerable ranges of variations of monitor values to be monitored are recorded by the dependability description data editing section - with respect to each evidence node. Consequently, the monitoring section - of the runtime computer  can confirm the state of a monitor value. On the other hand, in the dependability description data M, all or a part of monitor values to be monitored are recorded by the recording section - with respect to each evidence node. Consequently, an analysis section - of the workspace computer  can analyze the cause of failure in the system.","The analysis tool section - of the workspace computer  mainly includes three constituents. The dependability description data input section (description data acquiring means) - receives dependability description data M as an input from the runtime computer . The database access section - accesses a plurality of dependability description data regarding software as a whole deployed into the runtime computer . The database may be provided in the workspace computer , or in the runtime computer , or in other device communicable with the workspace computer . Here, dependability description data M related to the dependability description data M having been inputted is extracted from the database. The dependability description data M is an original model, and the dependability description data M is a model in which a change is described. The dependability description data M extracted from the database is searched for using the dependability description data M as a key. Alternatively, dependability description data with a wider range may be extracted, which makes the process in the analysis section - easier. The analysis section - analyzes the dependability description data M having been inputted and the dependability description data M acquired via the database access section -, searches for the cause of failure etc., and causes the process to transit to the state of the environment change S- () if necessary, thereby executing the change accommodation cycle","P. On the other hand, in the runtime computer , the update section - includes six constituents. The software input section (description data acquiring means) - receives software SW as an input from the deployment section - of the workspace computer . The software SW is installed by the update section - into the runtime computer  and operated therein. A dependability description data extracting section - extracts dependability description data M (to be specific, internal representation of dependability description data M; corresponding to dependability description data - in ) included in the software SW. A structure verification section - verifies validity of the extracted dependability description data M as computational representation. Furthermore, the structure verification section - confirms whether a necessary function (e.g. library) is provided in the runtime computer . An execution management section - makes a necessary preparation for deploying the software SW into the runtime computer . For example, in a case where the software SW is a new service application, the execution management section - estimates and assigns a necessary computing resource, generates an application container (application container  etc. in ), and configures an application image in the application container.","Furthermore, the change transmission section (change request transmission means) - transmits, to the dependability description data input section - of the runtime computer , a changed part of the dependability description data M installed to the runtime computer  (dependability description data M). At that time, the change transmission section - may transmit, together with the changed part, a request for changing the dependability description data. In the runtime computer , a change management section - manages the change in the dependability description data shown in .","In the above description, the workspace computer  and the runtime computer  exchange information via computer representation of dependability description data. When the former supplies information to the latter, the dependability description data M serves as means therefor. When the latter supplies information to the former, the dependability description data M serves as means therefor. The dependability description data M is a model corresponding to agreement among stakeholders, and the dependability description data M is a difference due to unsatisfaction of the agreement among stakeholders in the runtime computer , and is a notice to the stakeholders.","The present invention may be arranged as follows.","The dependability maintenance device (dependability maintenance system , workspace computer , runtime computer ) of the present invention may have means for exchanging information between the change accommodation cycle P and the failure response cycle P for the purpose of continuing a service provided by a system having the dependability description data.","[11. Collaboration with Dependability Description Data]",{"@attributes":{"id":"p-0307","num":"0306"},"figref":["FIG. 29","FIG. 5","FIG. 28"],"b":["2","3"]},{"@attributes":{"id":"p-0308","num":"0307"},"figref":"FIG. 30","b":"100"},"As shown in , the present invention may be arranged such that the dependability description data M embedded in the software SW is stored in a dependability description data database  different from the workspace computer  and the runtime computer  so that the dependability description data M can be used by the workspace computer  and the runtime computer . The database may be the agreement description database - shown in .","The present invention may be arranged as follows.","The dependability maintenance device (dependability maintenance system , workspace computer , runtime computer ) of the present invention may be arranged so as to include means for causing a system having dependability description data to manage data in a computer-processable format which is converted from the dependability description data, so that a result of the step of agreement on a change in requirement among stakeholders in the change accommodation cycle P is surely reflected on the system.","[12. Command Process in Runtime Computer]",{"@attributes":{"id":"p-0312","num":"0311"},"figref":"FIG. 31","b":["102","102","102","102"]},"Initially, when starting a command execution process S, start of the process is recorded (S-). Next, the process is broken into one or more command sequences, which constitute a chain (S-). Next, all the commands in a command chain are subjected (S-) to processes of S- and S- described below.","That is, a command in the chain is executed (S-), and it is determined whether the command is terminated normally or abnormally (S-). In a case where all the commands are ended normally (YES in S-), the end is recorded (S -), and the process is terminated (S-).","On the othe hand, in a case where a command in the command chain is ended abnormally (NO in S-), a recovery chain is constructed (S-) in order to cancel the effect of the executed command. Thereafter, all the commands in a recovery chain are subjected (S-) to execution of recovery command (S-), and it is determined whether execution of the recovery command is ended normally or abnormally (S-). In a case where all the recovery commands are ended normally (YES in S-), the normal end is recorded (S-), and the process is terminated (S-).","On the other hand, in a case where execution of the recovery command is terminated abnormally (NO in S-), a necessary isolation process (S-) is carried out, a container (application container or system container) including the process is isolated, and the isolation is recorded (S-), and the process is terminated (S-). Thereafter, the reconfiguration process is carried out.","The aforementioned procedure may be arranged such that the basic operation shown in  serves as a command chain. This allows surely executing the script as an atomic operation.","The present invention may be arranged as follows.","The dependability maintenance device (dependability maintenance system , workspace computer , runtime computer ) of the present invention may be arranged so as to include means for assuring that means described in [A], [B], and [C] below are surely executed for the purpose of continuing a service provided by a system having the dependability description data. [A] Means for, in a case where it is determined in the failure response cycle P that a service provided by a system having the dependability description data in operation of the system cannot be continued, supplying, as a requirement to the change accommodation cycle P, a change in dependability description data of the system, based on information recorded or detected in the failure response cycle P, in order to continue the service provided by the system in the change accommodation cycle P. [B] Means for exchanging information between the change accommodation cycle P and the failure response cycle P in order to continue a service provided by a system having the dependability description data. [C] Means for causing a system having dependability description data to manage data in a computer-processable format which is converted from the dependability description data, so that a result of agreement on a change in requirement among stakeholders in the change accommodation cycle P is surely reflected on the system.","[13. Association of Executable Program with Node]",{"@attributes":{"id":"p-0320","num":"0319"},"figref":"FIG. 32"},"The node (-) shown in  is the same as the node shown in . The node relates to \u201ccontinuation of App Logic by cache\u201d. In the present embodiment, the dependability description data is deployed in accordance with an embedding procedure to the runtime computer . At that time, a program executable by a binary execution section R of the runtime computer  may be associated with individual nodes of the dependability description data. Furthermore, the dependability description data is deployed into the runtime computer  while an executable program is associated with a monitor node. Association of a program with a node can be described in the external reference information -. In , the process of the program is represented by a flowchart. The process of the program may be represented by a script language or a program code directly executable by the binary execution section R.","In a program , two process procedures: a deployment process S- and an elimination process S- are defined.","In the deployment process S-, after confirmation of execution authority (S -), an application container is created (S -) using the function of the application container providing section  (). Next, an application corresponding to the App Logic - ((b) of ) is read, and the program code is stored in the application management section  ().","On the other hand, in the elimination process S-, after confirmation of execution authority (S-), the application corresponding to the App Logic - is terminated (S-), the record of the program code is deleted from the application management section , and the application container is deleted using the function of the application container providing section .",{"@attributes":{"id":"p-0325","num":"0324"},"figref":"FIG. 33"},"The node (-) shown in  is the same as the node shown in . The node relates to \u201cnon-stop of DBS by multiple systems\u201d. That is, the node is a part of dependability description data regarding a multiple-system database in which a plurality of database systems with a backup system are operated at the same time.","In a program , three process procedures of an update process S-, a deployment process S-, and an elimination process S- are defined. In a case where a node in the dependability description data is replaced with another one, when a program is associated with the node, an update process defined in the program is executed.","Specifically, in , a node (-) is replaced with a node (-), and so an update process of the node is executed. The update process S- is executed in such a manner that execution authority is confirmed (S-) and then the elimination process S- associated with a node to be replaced (in case of , node (-) shown in ) is executed. In the execution, the result is recorded (S-) in accordance with a flowchart of the command execution process S in .","Next, the deployment process S- is executed in such a manner that execution authority is confirmed (S-) and then a system container is created using the function of the system container providing section  (), and then a non-stop DBS is installed (S-) and the DBS is recorded in the application management section  ().","On the other hand, the elimination process S- is executed in such a manner that execution authority is confirmed (-) and then the non-stop DBS is shutdown (S-), the record of the DBS is deleted from the application management section  (S-), and the system container of the DBS is deleted using the function of the system container providing section  (S-).","The present invention may be arranged as follows.","The dependability maintenance device (runtime computer ) of the present invention may be arranged so as to further comprise representation means for processing the following means groups [A] and [B] by a computer. [A] In a process for allowing continuation of a service provided by a system in operation including the dependability description data in response to occurrence of failure, means for detecting occurrence of failure (monitoring function), means for separating a failure component (separating function), means for continuing the service at a component other than the separated failure component, means for detecting cause of the failure (cause questioning function), and means for determining continuity of the service provided by the system in operation (continuity determining function). [B] In a process for detecting a sign of failure and avoiding occurrence of the failure before it occurs so as not to stop a service provided by a system in operation including the dependability description data, means for recording an internal state of the system (logging), means for detecting a sign of failure of the system based on the recorded internal state, means for identifying a part corresponding to the detected failure of the system, and means for determining continuity of a service provided by the system in operation when the failure is detected.","The present invention may be arranged as follows.","The dependability maintenance device (runtime computer ) of the present invention may be arranged such that the dependability description data describes a procedure of the reconfiguration, and the reconfiguration means (reconfiguration section -) reconfigures the target system in accordance with the procedure of the reconfiguration.","Consequently, the runtime computer  can reconfigure the target system in accordance with the procedure of the reconfiguration described in the dependability description data. Since the procedure of the reconfiguration can be described in the dependability description data in the step of designing the dependability description data, it is unnecessary to prepare the procedure at the time of the reconfiguration.","[14. Association with Consensus-Building Tool]",{"@attributes":{"id":"p-0336","num":"0335"},"figref":"FIG. 34","b":["1","2","2","2","101"]},"An editing function - (function of editing tool section - in ) inputs\/modifies\/records dependability description data M. A verification function - (function of verification tool section - in ) verifies validity of the dependability description data M. A benchmark function - (function of verification tool section - in ) confirms evidence in the dependability description data M. A conversion function - (function of editing tool section - and development tool section - in ) converts a differential verification model M into the dependability description data with XML format M which is in a format for embedding into the software SW. The present example may be arranged such that in the conversion, a monitor node part is extracted from the dependability description data, and the dependability description data is converted while maintaining the structure of the monitor node part. A measurement function - (function of verification tool section - in ) accesses the monitor node of the dependability description data with XML format M so as to measure and extract data.",{"@attributes":{"id":"p-0338","num":"0337"},"figref":["FIG. 35","FIG. 35","FIG. 16"]},"The benchmark may include a benchmark for verifying attributes which are other than an attribute regarding a performance of a system and which may cause failure. Examples of such a benchmark include a benchmark regarding behavior of a system when CPU load is changed, a benchmark regarding behavior of a system when a bandwidth of a network is changed or when delay is changed, a benchmark regarding behavior of a system when excess memory is changed, a benchmark regarding behavior of a system when a load is wholly put on the system by simulating excessive access, and a benchmark regarding behavior of a system when a component of the system is intentionally aborted.","Furthermore, in a case of employing the D-Case description in  for example, the dependability description data may be arranged to employ Agda theorem prover (http:\/\/wiki.portal.chalmers.se\/agda\/pmwiki.php). This allows automatically removing a typographical error in the D-Case description.","The present invention may be arranged as follows.","The dependability maintenance device (dependability maintenance system , workspace computer ) of the present invention may be arranged so as to further comprise means for describing, in a step of building consensus among stakeholders in the change accommodation cycle P for the purpose of continuing a service provided by a system including the dependability description data, a change in requirement from a stakeholder in a computer-processable representation format, and means for logically verifying the representation format.","[15. Collaboration Between Dependability Maintenance Systems]","The dependability maintenance system  in accordance with the present embodiment includes the workspace computer , the dependability description data M, and the runtime computer . Dependability which can be calculated by the dependability maintenance system  is represented by the dependability description data M.",{"@attributes":{"id":"p-0344","num":"0343"},"figref":"FIG. 36","b":"100"},"As shown in , there can be configured a complex system in which a dependability maintenance system S of a provider who provides a dependability maintenance system U of a user with a function based on dependability description data is connected via a network - with the dependability maintenance system U of the user.",{"@attributes":{"id":"p-0346","num":"0345"},"figref":["FIG. 37","FIG. 36"],"b":["100","100","100","100"]},"From the dependability maintenance system  of the provider, SLA dependability description data M-SLA including SLA (Service Level Agreement) is presented to the dependability maintenance system U of the user. The SLA dependability description data M-SLA is the same as the internal representation of dependability description data M except that the SLA dependability description data M-SLA includes information of SLA.","In SLA included in the SLA dependability description data M-SLA, only the dependability of an interface published in the dependability maintenance system S is described. This is information provided by the provider, and can be considered as commitment regarding dependability of the provider to the interface. The dependability description data allows calculation of a D value, and the user can confirm whether the dependability regarding the public interface of the provider is in accordance with the user's standard or not by calculating the D value.","The dependability maintenance device (dependability maintenance system , workspace computer ) of the present invention may be arranged to include, in an environment where two or more of systems including the dependability description data are connected with each other via a network in order to continue a service provided by the system, the aforementioned means that can be provided in an environment where the two or more of systems are not connected with each other.","[16. Supply Chain]",{"@attributes":{"id":"p-0350","num":"0349"},"figref":["FIG. 38","FIG. 1"],"b":["100","100"]},"As shown in , with respect to a dependability maintenance system B at the main body side which executes the main body of the function, a dependability maintenance system P at the component side can provide a part of the function as a component.  shows an example in which one node (-) of dependability description data M-B is provided as a component. Dependability description data M-P in the dependability maintenance system P at the component side is dependability description data of the node (-) serving as a component.",{"@attributes":{"id":"p-0352","num":"0351"},"figref":"FIG. 39","b":["100","100","100","100","100","100"]},"A workspace computer  in the dependability maintenance system B at the main body side verifies dependability description data M-P of the component - (S-). In a case where the dependability description data M-P of the component - is valid, a runtime computer  in the dependability maintenance system B at the main body side measures a benchmark of the component - (S-). In a case where evidence obtained as a result of the measurement is sufficient, the workspace computer  in the dependability maintenance system B at the main body side integrates the component - with the dependability description data M-B at the main body side (S-).",{"@attributes":{"id":"p-0354","num":"0353"},"figref":"FIG. 40","b":["1500","03","1502","01","1502","02","1502","03","1502","04","1502","05","1502","04","1502","06"]},"The dependability maintenance device (dependability maintenance system , workspace computer ) of the present invention may be arranged such that, in a case where the system including the dependability description data is constituted by one or a plurality of hardware or software components of a third party for the purpose of continuing services provided by the system, each of said one or a plurality of hardware or software components includes dependability description data, and there is provided means for verifying compatibility between the dependability description data of each of said one or a plurality of hardware or software components and the dependability description data of the system.","[17. Display of Dependability Description Data]",{"@attributes":{"id":"p-0356","num":"0355"},"figref":["FIG. 41","FIG. 16","FIG. 41","FIG. 41"],"b":["102","260","07","101","1600","01","1600","02"]},"Lastly, each block of the dependability maintenance system , particularly each block of the workspace computer  and the runtime computer , may be realized by hardware logic or by software by using CPUs as described below.","In the latter case, the dependability maintenance system  or the workspace computer  and the runtime computer  include: CPUs (central processing unit) for executing a program for realizing functions of each block; ROMs (read only memory) that store the program; RAMs (random access memory) that deploy the program; storage devices (storage mediums) such as memories that store the program and various data; and the like. The objective of the present invention can be realized in such a manner that the dependability maintenance system  or the workspace computer  and the runtime computer  are provided with a computer-readable storage medium for storing program codes (such as executable program, intermediate code program, and source program) of programs of the dependability maintenance system  or the workspace computer  and the runtime computer  which programs serve as software for realizing the functions, and a computer (alternatively, CPU or MPU) reads out and executes the program codes stored in the storage medium.","The storage medium is, for example, tapes such as a magnetic tape and a cassette tape, or discs such as magnetic discs (e.g. a floppy disc(registered trademark) and a hard disc), and optical discs (e.g. CD-ROM, MO, MD, DVD, and CD-R). Further, the storage medium may be cards such as an IC card (including a memory card) and an optical card, or semiconductor memories such as mask ROM, EPROM, EEPROM, and flash ROM.","Further, the dependability maintenance system  or the workspace computer  and the runtime computer  may be arranged so as to be connectable to a communication network so that the program code is supplied to the dependability maintenance system  or the workspace computer  and the runtime computer  through the communication network. The communication network is not particularly limited. Examples of the communication network include the Internet, intranet, extranet, LAN, ISDN, VAN, CATV communication network, virtual private network, telephone network, mobile communication network, and satellite communication network. Further, a transmission medium that constitutes the communication network is not particularly limited. Examples of the transmission medium include (i) wired lines such as IEEE 1394, USB, power-line carrier, cable TV lines, telephone lines, and ADSL lines and (ii) wireless connections such as IrDA and remote control using infrared ray, Bluetooth(registered trademark), 802.11, HDR, mobile phone network, satellite connections, and terrestrial digital network. Note that the present invention can be also realized by the program codes in the form of a computer data signal embedded in a carrier wave, which is the program that is electrically transmitted.","(1) A dependability maintenance device of the present invention is a dependability maintenance device for maintaining dependability of a target system, comprising: description data acquiring means for acquiring dependability description data indicative of a requirement and specification (agreed among stakeholders) regarding the dependability of the target system; and dependability value determining means for determining, based on the dependability description data acquired by the description data acquiring means, an evaluation value quantitatively indicative of a value of the dependability of the target system.","(12) A method of the present invention for controlling a dependability maintenance device is a method for controlling a dependability maintenance device for maintaining dependability of a target system, comprising the steps of: (i) acquiring dependability description data indicative of a requirement and specification (agreed among stakeholders) (agreed among stakeholders) regarding the dependability of the target system; and (ii) determining, based on the dependability description data acquired in the step (i), an evaluation value quantitatively indicative of a value of the dependability of the target system.","With the arrangements, it is possible to determine, based on the dependability description data indicative of a requirement and specification (agreed among stakeholders) regarding the dependability of the target system, an evaluation value quantitatively indicative of a value of the dependability of the target system.","This allows quantitatively representing the value of the dependability of the target system. Therefore, for example, in a case where the dependability description data is changed according to a change in requirement or in a case where the state of the target system is confirmed when the target system is operated, it is possible to show the value of the dependability of the target system in an intelligible and objective manner.","This yields an effect that the dependability of the target system can be maintained smoothly. That is, this yields an effect that in an open environment with potential incompleteness and uncertainty, it is possible to assist maintenance of the dependability of the target system.","(2) The dependability maintenance device of the present invention in the arrangement (1) is arranged such that there is executed at least one of a change accommodation cycle for changing the dependability description data in accordance with a change in requirement and specification (agreed among stakeholders) when the target system is developed or updated, and a failure response cycle for avoiding abort of the target system based on the dependability description data when the target system is operated and occurrence of failure or a sign of failure is detected.","With the arrangement, it is possible to determine an evaluation value indicative of a value of the dependability of the target system in at least one of the change accommodation cycle and the failure response cycle. Therefore, for example, in the change accommodation cycle, when the dependability description data is changed according to a change in requirement, it is possible to determine whether a plan of changing the dependability description data is appropriate or not according to the evaluation value. Furthermore, for example, in the failure response cycle, when the target system is operated, it is possible to determine the state of the target system according to the evaluation value. This yields an effect that the dependability of the target system can be maintained smoothly.","(3) The dependability maintenance device of the present invention in the arrangement (1) is arranged such that out of a change accommodation cycle for changing the dependability description data in accordance with a change in requirement and specification (agreed among stakeholders) when the target system is developed or updated, and a failure response cycle for avoiding abort of the target system based on the dependability description data when the target system is operated and occurrence of failure or a sign of failure is detected, at least the failure response cycle is executed, and the dependability maintenance device further comprises reconfiguration means for, when the occurrence of the failure or the sign of the failure is detected, reconfiguring the target system based on the dependability description data.","With the arrangement, in the dependability maintenance device executing the failure response cycle, when occurrence of failure of the target system or a sign of failure of the target system is detected, it is possible to reconfigure the target system based on the dependability description data and continue operation of the target system. Occurrence of failure of the target system or a sign of failure of the target system may be detected according to the evaluation value. For example, occurrence of failure of the target system may be detected when the evaluation value is worsened from a predetermined tolerable range of variation or when an inclination of a temporal change in the evaluation value is worsened from a predetermined standard.","(4) The dependability maintenance device of the present invention in the arrangement (3) is arranged such that the dependability description data describes a procedure of the reconfiguration, and the reconfiguration means reconfigures the target system in accordance with the procedure of the reconfiguration.","With the arrangement, the dependability maintenance device can reconfigure the target system in accordance with the procedure of the reconfiguration described in the dependability description data. Therefore, since the procedure of reconfiguration can be described in dependability description data at the stage of designing the dependability description data, it is unnecessary to form the procedure at the time of the reconfiguration.","(5) The dependability maintenance device of the present invention in the arrangement (3) or (4) is arranged to further comprise change request transmission means for, when the occurrence of the failure or the sign of the failure is detected and abort of the target system is unavoidable, transmitting a request for changing the dependability description data to a device executing the change accommodation cycle.","With the arrangement, in the dependability maintenance device executing the failure response cycle, when it is determined that the occurrence of the failure or the sign of the failure is detected and abort of the target system is unavoidable, it is possible to transmit a request for changing the dependability description data to a device executing the change accommodation cycle. Whether abort of the target system by the occurrence of failure or the sign of failure is unavoidable or not may be determined according to the evaluation value.","On the other hand, when the device executing the change accommodation cycle receives the request for changing the dependability description data from the dependability maintenance device, the device executing the change accommodation cycle changes the dependability description data in accordance with the request.","Therefore, the dependability maintenance device executing the failure response cycle and the device executing the change accommodation cycle collaborate with each other to smoothly execute a series of processes of detecting occurrence of failure of the target system or a sign of failure of the target system in the failure response cycle, and when abort of the target system is unavoidable, changing the dependability description data in the change accommodation cycle. This yields an effect that the dependability of the target system can be maintained continuously in an open environment.","(6) The dependability maintenance device of the present invention in the arrangement (1) is arranged such that out of a change accommodation cycle for changing the dependability description data in accordance with a change in requirement and specification (agreed among stakeholders) when the target system is developed or updated, and a failure response cycle for avoiding abort of the target system based on the dependability description data when the target system is operated and occurrence of failure or a sign of failure is detected, at least the change accommodation cycle is executed, and when the dependability maintenance device receives a request for changing the dependability description data from a device executing the failure response cycle, the dependability description data is changed.","With the arrangement, when the dependability maintenance device executing the change accommodation cycle receives a request for changing the dependability description data from the device executing the failure response cycle, the dependability description data can be changed in accordance with the request.","Therefore, the device executing the failure response cycle and the dependability maintenance device executing the change accommodation cycle collaborate with each other to smoothly execute a series of processes of detecting occurrence of failure of the target system or a sign of failure of the target system in the failure response cycle, and when abort of the target system is unavoidable, changing the dependability description data in the change accommodation cycle. This yields an effect that the dependability of the target system can be maintained continuously in an open environment.","(7) The dependability maintenance device of the present invention in any of the arrangements (1) to (6) is arranged such that the dependability description data is data defining a set of a goal node and a monitor node which are related to each other, the goal node is a node in which a requirement and specification (agreed among stakeholders) is described in goal form, the monitor node is evidence which shows that a goal described in the goal node is met and which corresponds to a monitoring point of the target system, and the dependability value determining means calculates the evaluation value based on a monitor node whose data acquired from a corresponding monitoring point is satisfactory with respect to a tolerable range of variation.","With the arrangement, the evaluation value can be determined as a multidimensional vector value from data defining a set of a goal node and a monitor node which are related to each other, e.g. data of a tree structure or data of a graph structure.","The dependability maintenance device of the present invention in any of the arrangements (1) to (6) is arranged such that","the dependability description data is data which is capable of making a set of a goal node and a monitor node and which has a tree structure or a graph structure including at least one set of a goal node and a monitor node,","the goal node is a node in which a requirement and specification (agreed among stakeholders) is described in goal form,","the monitor node is evidence which shows that a goal described in the goal node is met,","the monitor node includes means for allowing acquisition of data from a corresponding monitoring point in the target system and thereafter determining whether the data is satisfactory with respect to a tolerable range of variation, and","the dependability value determining means calculates the monitor node whose evidence is satisfactory in the tree structure or the graph structure so as to obtain the evaluation value.","The dependability maintenance device may be arranged such that the dependability description data is data having a tree structure or graph structure capable of weighting an edge between nodes, and the dependability value determining means considers, as the evaluation value, a multidimensional vector value whose element is a weight used for weighting the edge.","With the arrangement, the multidimensional vector value whose element is a weight used for weighting the edge of the tree structure or graph structure can be obtained as the evaluation value.","Therefore, it is possible to obtain an evaluation value obtained by adding importance of an edge to the tree structure or graph structure. This yields an effect that what influence a change in weighting an edge has on dependability can be evaluated by confirming the evaluation value. Although the evaluation value obtained here is a multidimensional vector value, the evaluation value can be converted into a scalar value by any conversion method according to the purpose.","(8) The dependability maintenance device of the present invention in any of the arrangements (1) to (6) is arranged such that the dependability value determining means calculates the evaluation value based on evidence whose monitor value acquired by monitoring the target system is satisfactory with respect to a tolerable range of variation.","With the arrangement, the evaluation value can be calculated based on evidence whose monitor value acquired by monitoring the target system is satisfactory with respect to a tolerable range of variation (standard value). The evaluation value may be calculated, for example, in such a manner that a ratio of the number of evidence whose monitor value is satisfactory with respect to the tolerable range of variation (standard value) (the number of available evidence) to the total number of evidence included in dependability description data (the total number of evidence) is calculated as the evaluation value.","Therefore, the evaluation value according to the state of evidence can be obtained. Since evidence changes according to a change in requirement, the evaluation value obtained here also changes according to the change in requirement. This yields an effect that what influence a change in requirement has on dependability can be evaluated by confirming the evaluation value.","(9) The dependability maintenance device of the present invention in the arrangement (1) is arranged such that out of a change accommodation cycle for changing the dependability description data in accordance with a change in requirement and specification (agreed among stakeholders) when the target system is developed or updated, and a failure response cycle for avoiding abort of the target system based on the dependability description data when the target system is operated and occurrence of failure or a sign of failure is detected, at least the failure response cycle is executed, the dependability maintenance device further comprises script process means for, when the occurrence of the failure or the sign of the failure is detected, executing a script included in the dependability description data, and the script includes a scenario for restoring the target system to be in a state defined by a tolerable range of variation.","With the arrangement, when the occurrence of the failure or the sign of the failure is detected, execution of the script included in the dependability description data enables the target system to be restored to a state defined by the tolerable range of variation.","It is preferable that the script is agreed among stakeholders. The script is executed by a script engine embedded in the target system. The script may determine whether the target system is in a state defined by the tolerable range of variation by referring to a log acquired in the target system. When executing the scenario for restoring the target system to be in a state defined by the tolerable range of variation, the scenario may be operated by an operator via GUI.","(10) A dependability maintenance system of the present invention is a dependability maintenance system for maintaining dependability of a target system, comprising: a workspace device for executing a change accommodation cycle for changing the dependability description data in accordance with a change in requirement and specification (agreed among stakeholders) when the target system is developed or updated; and a runtime device for executing a failure response cycle for avoiding abort of the target system based on the dependability description data when the target system is operated and occurrence of failure or a sign of failure is detected, at least one of the workspace device and the runtime device determining, based on the dependability description data, an evaluation value quantitatively indicative of a value of the dependability of the target system.","(11) The dependability maintenance system of the present invention in the arrangement (10) is connected with other dependability maintenance system via a network.","The dependability maintenance device may be realized by a computer. In this case, the scope of the invention also encompasses a program of the dependability maintenance device for causing a computer to function as the means of the dependability maintenance device, and a computer-readable storage medium storing the program.","[Second Embodiment]","A dependability maintenance device  in accordance with the present embodiment makes it easy to maintain consistency between requirement and specification and update of a system. For this purpose, as mentioned later, the dependability maintenance device  in accordance with the present embodiment includes a D-Case conversion section  for (i) reading out, from a D-Case storage section , a D-Case in which the specification regarding dependability of a monitoring control target system  is described, (ii) generating, from the D-Case thus read out, monitoring control data which controls the operation of a failure monitoring control section  that monitors the state of the monitoring control target system  and takes a countermeasure if necessary, and (iii) supplying the monitoring control data to a failure monitoring control section .","With reference to  and , the following description will discuss an embodiment of the present invention in detail.",{"@attributes":{"id":"p-0401","num":"0400"},"figref":"FIG. 42","b":"1"},"The failure response system  in accordance with the present embodiment monitors the operation of the monitoring control target system , and when failure occurs, the failure response system  takes a necessary countermeasure. The monitoring control target system  is applicable to any computer system. In particular, the monitoring control target system  is preferably applicable to not a single system but a system for which a plurality of stakeholders exist and which requires advanced and complex dependability. Specifically, the monitoring control target system  is preferably applicable to a computer system serving as a base of a social infrastructure system, such as a monitoring system, an electronic payment system, a traffic\/flight control system, and a cloud system including these systems.","In particular, the failure response system  in accordance with the present embodiment makes it easy to describe agreement among stakeholders involved in the monitoring control target system , and in a case of partial update of the monitoring control target system , the failure response system  updates an agreement description and an implement module for monitoring control while maintaining consistency between the agreement description and the implement module. That is, the failure response system  allows developing and updating the specification on the dependability of the monitoring control target system  represented by the dependability description data and control of the monitoring module and action module for monitoring and controlling the monitoring control target system  while maintaining consistency between the specification and the control.","For this purpose, the failure response system  describes dependability of the monitoring control target system  by using, as dependability description data, a D-Case which allows easy description of agreement among stakeholders. Furthermore, the failure response system  manages correspondence between a pattern of a D-Case (D-Case pattern) and a monitoring module and an action module each for monitoring and controlling the monitoring control target system . Consequently, even when the monitoring module and the action module are added or changed according to a change etc. in the monitoring control target system , it is possible to maintain correspondence between the dependability description and the monitoring module and the action module.","(D-Case)",{"@attributes":{"id":"p-0405","num":"0404"},"figref":["FIG. 8","FIG. 43","FIG. 43"],"b":"2"},"As described above, in the present embodiment, a D-Case is used as dependability description data which describes the specification regarding dependability of the monitoring control target system .","D-Case is based on Safety Case which is a structured document mainly used in the United Kingdom, for ensuring safety of a system. Herein, dependability description data based on Safety Case is referred to as \u201cD-Case\u201d. With the D-Case, general dependability attributes such as availability are detailed in discussions on system level as shown in .","D-Case is a structured document used for agreement among stakeholders involved in the monitoring control target system . To be specific, as shown in , D-Case has a tree structure in which the dependability of a system is regarded as a top goal, satisfaction of the top goal is detailed by a tree structure, and evidence is put for the detailed goal. As mentioned later, D-Case can be described in XML (Extensible Markup Language).","In , a block marked with \u201cG\u201d is a top goal. The top goal indicates a proposition to be agreed among stakeholders regarding a target system. An example of the top goal is \u201cthe target system meets Safety Integrity Level 3 defined by safety standard X\u201d.","A block marked with \u201cSG\u201d is a sub-goal. The sub-goal indicates a proposition obtained by dividing what is to be shown in order to show the top goal. For example, in a case where the top goal is \u201cthe target system is A and B\u201d, the top goal is divided into sub-goals \u201cthe target system is A\u201d and \u201cthe target system is B\u201d. A sub-goal can be divided into smaller sub-goals. A top goal and sub-goals are generally referred to as goals.","A block marked with \u201cSt\u201d is a strategy. The strategy indicates a supplementary explanation on how satisfaction of a goal is discussed by sub-goals thereof. For example, in a case where the goal is \u201cthe system responds to all possible failures\u201d, a strategy is \u201cdiscussion for each possible failure\u201d. In this case, sub-goals are \u201cthe system responds to possible failure \u201d, . . . , \u201cthe system responds to possible failure N\u201d.","A block marked with \u201cE\u201d is evidence. The evidence indicates a leaf node which finally assures the divided and detailed goal. For example, regarding a sub-goal SG \u201ca sub-component Y of a system X can deal with failure Z\u201d, evidence of \u201cresult of FTA analysis\u201d is put right under the sub-goal SG. The sub-goal SG can be further divided into sub-goals, but the goal cannot be divided limitlessly. Evidence is put in order to assure a sub-goal obtained as a result of the division. Whether evidence is valid or not depends on agreement among stakeholders.","As shown in , a block marked with \u201cC\u201d is a context. The context indicates information which complements the content of the goal or the strategy. For example, in a case where the strategy is \u201cdiscussion for each possible failure\u201d, a context \u201clist of possible failures\u201d can be assigned to the strategy. The strategy and the context serve as supplementary information for assisting a stakeholder to follow division of the goal while reading D-Case.","The strategy and the context are described for easiness in reading in a tree structure, but they are treated as comments in runtime.","A block marked with \u201cMonitor: M_\u201d etc. in  is a monitor. The monitor indicates system information in runtime required when a system responds to a failure. For example, \u201cmonitoring of CPU utilization ratio in process X\u201d in runtime is a monitor node. The monitor is a subclass of evidence. In a case where information obtained by the monitor management section  of the failure response system  is used as evidence, the evidence is represented as a monitor node.","Next, with reference to , the following description will discuss in detail a configuration of the failure response system  and a process flow.","As shown in , the failure response system  includes the D-Case storage section (dependability description storage section) , a dependability maintenance device , a failure monitoring control section , a monitor management section , a monitoring module group , an action management section , and an action module group .","The D-Case storage section  stores D-Case which is dependability description data indicative of agreement among stakeholders on dependability of the monitoring control target system . The failure response system  receives, as an input, D-Case agreed among stakeholders.","The dependability maintenance device  generates monitoring control data (failure response script) from D-Case by using a D-Case pattern <=> module correspondence table (mentioned later) indicative of correspondence between control of an runtime module (monitoring module, action module) for monitoring and controlling the monitoring control target system  and a D-Case pattern. For this purpose, the dependability maintenance device  includes a D-Case conversion section (dependability description conversion section)  and a correspondence table storage section .","The D-Case conversion section  generates, from D-Case stored in the D-Case storage section , monitoring control data (failure-monitoring control data) for controlling the operation of the failure-monitoring control section .","D-Case is partially patterned. The correspondence table storage section  stores a table indicative of correspondence between a D-Case pattern and monitoring control data (D-Case pattern <=> module correspondence table).","The D-Case conversion section  generates monitoring control data from D-Case by referring to the D-Case pattern <=> module correspondence table stored in the correspondence table storage section .","Next, the failure-monitoring control section  monitors the state of the monitoring control target system , and executes a response (action) procedure if necessary. Specifically, the failure-monitoring control section  controls the monitor management section  and the action management section  in accordance with the monitoring control data generated by the D-Case conversion section  in the dependability maintenance device . The monitoring control data specifies (i) selection of a monitoring module (monitoring module group ) and control of an operation of the monitoring module by the monitor management section  and (ii) selection and control of an action module (action module group ) by the action management section .","The monitor management section  manages at least one monitoring module (monitoring module group ) in accordance with the monitoring control data. In the present embodiment, examples of the monitoring module include a CPU monitoring module  and a memory monitoring module , but the present invention is not limited to them.","The action management section  manages at least one action module (action module group ) in accordance with the monitoring control data. In the present embodiment, examples of the action module include a CPU limit module , a memory limit module , and a process-creation-or-termination module , but the present invention is not limited to them.",{"@attributes":{"id":"p-0426","num":"0425"},"figref":"FIG. 44","b":"1"},"Initially, a D-Case manager causes a D-Case generated and changed under agreement among stakeholders to be stored in the D-Case storage section  (; D-Case storage step).","Next, the D-Case conversion section  reads out the D-Case from the D-Case storage section  (S; D-Case reading out step), and generates, from the D-Case thus read out, monitoring control data for controlling the operation of the failure-monitoring control section , by referring to the D-Case pattern <=> module correspondence table stored in the correspondence table storage section  (S; D-Case conversion step).","For example, in a case of generating monitoring control data in accordance with a change in D-Case, the D-Case conversion section  may generate monitoring control data corresponding to only a difference in the changed D-Case.","Next, the failure-monitoring control section  monitors the state of the monitoring control target system  in accordance with the generated monitoring control data, and executes a response procedure if necessary (S; execution of failure monitoring step).","The execution of failure monitoring step (S) is described below.","The monitor management section  stores beforehand monitoring modules to be managed, in such a manner that the monitoring modules are controllable. Similarly, the action management section  stores beforehand action modules to be managed, in such a manner that the action modules are controllable.","In the execution of failure monitoring step (S), the failure-monitoring control section  instructs the monitor management section  to start a suitable monitoring module in accordance with the monitoring control data. Then, in a case where the result of runtime of the monitoring module informed by the monitor management section  meets a condition, the failure-monitoring control section  instructs the action management section  to start a suitable action module so as to respond to the failure. In this case, the monitor management section  and the action management section  start modules in accordance with the instructions from the failure-monitoring control section , and pass suitable arguments.","(D-Case Conversion)","With reference to , the following description will discuss in detail a process of converting D-Case into monitoring control data.","In the failure response system , the D-Case pattern <=> module correspondence table is used for converting D-Case into monitoring control data for controlling operations of a monitoring module and an action module each for monitoring and controlling the monitoring control target system .","A D-Case pattern is a part of a D-Case of the monitoring control target system , and indicates how availability etc. is maintained on system level. The availability of a system is an attribute of the system which, when the system is put in an unserviceable state (system-down state) due to failure etc., restores the system as soon as possible so that a user can use the service at any time when the user desires. When failure occurs, manpower such as a maintainer promptly responds to the failure and the system automatically restores itself using failure restore function. In general, a system provides services by using a CPU resource, a memory resource, a network resource etc. on OS level. Accordingly, when a CPU resource etc. is in shortage, there is a possibility that delay of a service etc. occurs and availability decreases. In order to deal with this, when a CPU resource used for a certain service is in shortage, the system automatically makes, on OS level, an action of using a CPU resource used in other less-important service etc. D-Case of the monitoring control target system  discusses the availability on system level from the aforementioned viewpoints.","(D-Case Pattern)",{"@attributes":{"id":"p-0437","num":"0436"},"figref":"FIG. 45"},"A D-Case pattern is a subtree of a D-Case and includes a variable part.  shows an example of a pattern, which is used for expressing that the attribute of a process is maintained appropriately. Quotation-marked parts in a sub-goal SG and evidences E and E are variables, and other parts are fixed parts of D-Case pattern.  shows a state where \u201cimage process\u201d, \u201cCPU utilization ratio\u201d, and \u201c50% or less\u201d are already put in quotation-marked parts. In a case where this D-Case pattern is used as a part of D-Case, values based on agreement among stakeholders are put in quotation-marked parts, and the values thus put allow the D-Case to be appropriately related to the monitoring module and the action module. Other parts are fixed parts of D-Case. In the D-Case pattern, i.e. in the quotation-marked parts of the D-Case, values based on agreement among stakeholders are put. Putting values in the quotation-marked parts of the D-Case allows appropriately relating the D-Case to the monitoring module and the action module.",{"@attributes":{"id":"p-0439","num":"0438"},"figref":["FIG. 46","FIG. 46","FIG. 46"]},"(a) of  is a table to be referred to when the D-Case conversion section  converts a D-Case of \u201cmonitoring that \u2018$2\u2019 of a process \u2018$1\u2019 is \u2018$3\u2019\u201d. In this D-Case, $1, $2, and $3 are variables.","For example, in a case of processing the D-Case in , the D-Case conversion section  reads out, from the correspondence table storage section , a table ((a) of ) applicable to the description of the evidence E of \u201cmonitoring that \u2018CPU utilization ratio\u2019 of a process \u2018image process\u2019 is \u201850% or less\u2019\u201d. Then, using the variables $1, $2, and $3 extracted from the description of the evidence E, the D-Case conversion section  specifies a correspondence between the D-Case pattern and a module, thereby generating monitoring control data. Specifically, since the variable $2 is \u201cCPU utilization ratio\u201d, a module name \u201cCPU monitoring\u201d and arguments \u201c$1, $3\u201d are specified, and there is generated monitoring control data of \u201cbringing up \u2018CPU monitoring\u2019 module and passing arguments \u2018image process\u2019 and \u201850% or less\u2019\u201d.","Similarly, the D-Case conversion section  reads out, from the correspondence table storage section , a table ((b) of ) applicable to the description of the evidence E of \u201climiting \u2018CPU utilization ratio\u2019 of a process \u2018image process\u2019 to \u201850% or less\u2019\u201d. Then, since the variable $2 is \u201cCPU utilization ratio\u201d, a module name \u201cCPU limit\u201d and arguments \u201c$1, $3\u201d are specified, and there is generated monitoring control data of \u201cbringing up \u2018CPU limit\u2019 module and passing arguments \u2018image process\u2019 and \u201850% or less\u2019\u201d.","As described above, a D-Case pattern <=> module correspondence table is selected according to a fixed text sequence (fixed part of description) of a D-Case out of the description of the evidence. Then, a corresponding module is selected according to a part of variables (variable $2 in the above example).","As described above, in the present embodiment, evidence is described in a format partially including variables, and values in accordance with the evidence are assigned to the variables.","With reference to , the following description will discuss a process in a case where the D-Case in  is changed.",{"@attributes":{"id":"p-0446","num":"0445"},"figref":"FIG. 47"},{"@attributes":{"id":"p-0447","num":"0446"},"figref":["FIG. 47","FIG. 45"],"b":["31","26","32","32","31"]},{"@attributes":{"id":"p-0448","num":"0447"},"figref":["FIG. 48","FIG. 48","FIG. 48","FIG. 48","FIG. 46"]},"In a case of processing the D-Case in , the D-Case conversion section  reads out, from the correspondence table storage section , a table ((b) of ) applicable to the description of the evidence E of \u201c\u2018killing\u2019 a process \u2018face recognition\u2019\u201d. Then, using the variables $1 and $2 extracted from the description of the evidence E, the D-Case conversion section  specifies a correspondence between the D-Case pattern and a module, thereby generating monitoring control data. Specifically, since the variable $2 is \u201ckill\u201d, a module name \u201cprocess creation or termination\u201d and argument \u201c$1\u201d are specified, and there is generated monitoring control data of \u201cbringing up \u2018process creation or termination\u2019 module and passing arguments \u2018kill\u2019 and \u2018face recognition\u2019\u201d.","As described above, in the D-Case pattern <=> module correspondence table, not only variables but also constants can be set as arguments. That is, in (b) of , when the variable $2 is \u201ckill\u201d, the first argument passed to the process-creation-or-termination module  is \u201ckill\u201d, and when the variable $2 is \u201crestart\u201d, the argument passed to the process-creation-or-termination module  is \u201crestart\u201d. When the variable $2 is \u201cmigration\u201d, not the process-creation-or-termination module  but a migration module (not shown) is executed as an action.","With reference to , the following description will discuss a process in a case where a new monitoring module or action module is added.","In a case where a new monitoring module or action module is added, a D-Case manager adds data defining a correspondence to the D-Case pattern <=> module correspondence table before the new monitoring module or action module is stored in the monitor management section  or the action management section .",{"@attributes":{"id":"p-0453","num":"0452"},"figref":["FIG. 49","FIG. 46","FIG. 49"]},"(Summary)","As described above, in the failure response system , monitoring control data is generated from a D-Case by using the D-Case pattern <=> module correspondence table indicative of correspondences between (i) selection of a monitoring module and control of an operation of the monitoring module by the monitor management section  and selection and control of an action module by the action management section  and (ii) D-Case patterns. That is, a D-Case stored in the D-Case storage section  is converted into monitoring control data of the failure-monitoring control section  by referring to the D-Case pattern <=> module correspondence table. As described above, the monitoring control data to be used by the failure-monitoring control section  is generated by the D-Case conversion section  from the D-Case stored in the D-Case storage section , so that consistency between the D-Case and the operation of the failure-monitoring control section  is always maintained.","In a case where a D-Case stored in the D-Case storage section  is changed, the D-Case conversion section  informs the failure-monitoring control section  of the change as a change in the monitoring control data. The dependability maintenance device  or the D-Case conversion section  may detect the change in D-Case and automatically inform the failure-monitoring control section  of changed monitoring control data.","In a case of adding a new D-Case pattern to a D-Case, the D-Case manager adds data defining a correspondence (conversion rule) to the D-Case pattern <=> module correspondence table.","In a case where a monitoring module or action module is modified\/added, the failure response system  informs the D-Case manager. The D-Case manager modifies the D-Case pattern <=> module correspondence table corresponding to the modified\/added monitoring module or action module. In a case where the D-Case pattern <=> module correspondence table corresponding to the modified\/added monitoring module or action module is not modified, the monitoring module or action module does not correspond to the D-Case, so that monitoring control data cannot be used. By modifying monitoring control data by using the modified D-Case pattern <=> module correspondence table, it is possible to maintain consistency between the D-Case and failure-monitoring.","The present invention may be arranged such that D-Case pattern <=> module correspondence tables are stored in a database and when a D-Case is changed, a suitable D-Case pattern <=> module correspondence table is extracted from the database and referred to. This makes it unnecessary to generate a D-Case pattern <=> module correspondence table every time when a D-Case is changed, making it possible to respond to the change in D-Case at lower costs.","With reference to , the following description will discuss another specific example.",{"@attributes":{"id":"p-0460","num":"0459"},"figref":["FIGS. 50 and 51","FIGS. 50 and 51","FIGS. 52-55","FIGS. 50 and 51","FIGS. 52-55","FIGS. 50 and 51","FIG. 56","FIGS. 50"],"b":["51","52","55"]},"As shown in , in the present specific example, a failure response script for controlling the failure-monitoring control section  is embedded in XML files of the D-Case.  shows scripts respectively extracted from \u201cMonitor: M_\u201d to \u201cMonitor: M_\u201d of the XML files () of the D-Case.  are graphical representations of , and data of  includes the failure response script.","As described above, the specific example shown in  is different from the specific example of the D-Case pattern <=> module correspondence table explained with reference to  in that the failure response script is embedded in the D-Case. However, both examples share the common feature that they can update the D-Case showing agreement among stakeholders and the failure response script of the monitoring control target system with consistency therebetween.","The present invention may be arranged as follows.","The dependability maintenance device  of the present invention may be a dependability maintenance device , which generates failure-monitoring control data (monitoring control data) for controlling an operation of the failure-monitoring control section  for monitoring a state of the monitoring control target system  and executing a response procedure if necessary, and which supplies the failure-monitoring control data to the failure-monitoring control section , comprising: a dependability description conversion section (D-Case conversion section ) for reading out, from a dependability description storage section (D-Case storage section ), dependability description data (D-Case) indicative of a specification regarding dependability of the monitoring control target system , and generating the failure-monitoring control data from the dependability description data having been read out.","A method of the present invention for controlling the dependability maintenance device  may be a method for controlling the dependability maintenance device  which generates failure-monitoring control data for controlling an operation of the failure-monitoring control section  for monitoring a state of the monitoring control target system  and executing a response procedure if necessary, and which supplies the failure-monitoring control data to the failure-monitoring control section , the method comprising the steps of: reading out, from a dependability description storage section (D-Case storage section ), dependability description data (D-Case) indicative of a specification regarding dependability of the monitoring control target system  (S), and generating the failure-monitoring control data from the dependability description data having been read out (S).","The dependability maintenance device  of the present invention may be arranged such that the failure-monitoring control section  is capable of selecting, out of a plurality of modules (monitoring module group , action module group ), a module used for monitoring the state of the monitoring control target system  and executing a response procedure if necessary, and of controlling the selected module, the dependability description data is written in a format in which one description (evidence) includes at least a variable to which module-specifying information (variable $2; pattern) for specifying the module is settable as a value, and the dependability description conversion section converts a description to be converted, which is included in the dependability description data, into failure-monitoring control data corresponding to module-specifying information included in the description, in accordance with information indicative of a preset correspondence between the module-specifying information and the failure-monitoring control data (D-Case pattern <=> module correspondence table).","The dependability maintenance device  of the present invention may be arranged such that the correspondence is set according to a fixed part other than a variable part in one description in the dependability description data, and the dependability description conversion section converts a description in the dependability description data into corresponding failure-monitoring control data by referring to the correspondence set according to the fixed part in the description in the dependability description data.","The failure response system  of the present invention may be arranged so as to comprise: the dependability maintenance device ; the dependability description storage section (D-Case storage section ); and the failure-monitoring control section , the failure-monitoring control section  operating in accordance with failure-monitoring control data generated by the dependability maintenance device  from dependability description data read out from the dependability description storage section, so as to monitor a state of the monitoring control target system  and execute a response procedure if necessary.","The failure response system  of the present invention may be arranged so as to further comprise: at least one monitoring module (monitoring module group ) for monitoring the state of the monitoring control target system ; at least one action module (action module group ) for executing a response procedure on the monitoring control target system  if necessary; the monitor management section  for selecting the monitoring module and controlling an operation of the monitoring module under control of the failure-monitoring control section ; and the action management section  for selecting the action module and controlling an operation of the action module under control of the failure-monitoring control section .","The present invention may be arranged as follows.","A computer system (failure response system ) of the present invention may be arranged so as to comprise a dependability description storage section (D-Case storage section ) for storing dependability description data (D-Case) indicative of agreement among stakeholders on dependability, a failure-monitoring control section (failure-monitoring control section ) for monitoring a state inside a target system (monitoring control target system ) and executing a response procedure if necessary, and a dependability description conversion section (D-Case conversion section ) for generating, from the dependability description data, failure-monitoring control data (monitoring control data) for controlling an operation of the failure-monitoring control section, the failure-monitoring control data always being generated by the dependability description conversion section from the dependability description data stored in the dependability description storage section, so that consistency between dependability description and the operation of the failure-monitoring control section is maintained.","Furthermore, the computer system may be arranged such that a part of the dependability description is patterned, and the failure-monitoring control data is generated from the dependability description by using a table (D-Case pattern <=> module correspondence table) indicative of a correspondence between a pattern of the dependability description and failure-monitoring control data.","The computer system may be arranged so as to further comprise a monitor management section (monitor management section ) and an action management section (action management section ), the monitor management section managing at least one monitoring module (monitoring module group ) and the action management section managing at least one action module (action module group ), failure-monitoring control data being generated from dependability description by using a table indicative of a correspondence between (i) selection of a monitoring module and control of operation of the monitoring module by the monitor management section and selection and control of an action module by the action management section and (ii) a pattern of dependability description.","A method for controlling the computer system may be arranged so as to comprise: a dependability description storage step (D-Case storage step S) of storing dependability description data indicative of agreement among stakeholders on dependability; a failure-monitoring control step (failure-monitoring execution step S) of a failure-monitoring control section monitoring a state inside a target system and executing a response procedure if necessary, and a dependability description conversion step (D-Case reading-out step S, D-Case conversion step S) of generating, from dependability description, failure-monitoring control data for controlling an operation in the failure-monitoring control step, the failure-monitoring control data always being generated in the dependability description conversion step from the dependability description data stored in the dependability description storage step, so that consistency between dependability description and the operation of the failure-monitoring control section is maintained.","Each block of the failure response system , particularly the D-Case conversion section  of the dependability maintenance device , may be realized by hardware logic or by software by using CPUs as described below.","In the latter case, the failure response system  includes: CPUs (central processing unit) for executing a program for realizing functions of each block; ROMs (read only memory) that store the program; RAMs (random access memory) that deploy the program; storage devices (storage mediums) such as memories that store the program and various data; and the like. The objective of the present invention can be realized in such a manner that the failure response system  or the dependability maintenance device  is provided with a computer-readable storage medium for storing program codes (such as executable program, intermediate code program, and source program) of programs of the failure response system  or the dependability maintenance device  which programs serve as software for realizing the functions, and a computer (alternatively, CPU or MPU) reads out and executes the program codes stored in the storage medium.","The storage medium is, for example, tapes such as a magnetic tape and a cassette tape, or discs such as magnetic discs (e.g. a floppy disc(registered trademark) and a hard disc), and optical discs (e.g. CD-ROM, MO, MD, DVD, and CD-R). Further, the storage medium may be cards such as an IC card (including a memory card) and an optical card, or semiconductor memories such as mask ROM, EPROM, EEPROM, and flash ROM.","Further, the failure response system  or the dependability maintenance device  may be arranged so as to be connectable to a communication network so that the program code is supplied to the failure response system  or the dependability maintenance device  through the communication network. The communication network is not particularly limited. Examples of the communication network include the Internet, intranet, extranet, LAN, ISDN, VAN, CATV communication network, virtual private network, telephone network, mobile communication network, and satellite communication network. Further, a transmission medium that constitutes the communication network is not particularly limited. Examples of the transmission medium include (i) wired lines such as IEEE 1394, USB, power-line carrier, cable TV lines, telephone lines, and ADSL lines and (ii) wireless connections such as IrDA and remote control using infrared ray, Bluetooth(registered trademark), 802.11, HDR, mobile phone network, satellite connections, and terrestrial digital network. Note that the present invention can be also realized by the program codes in the form of a computer data signal embedded in a carrier wave, which is the program that is electrically transmitted.","In the above explanation, functional blocks and procedures were illustrated and referred to. Separation\/integration of functions or movement of procedures is possible as long as the aforementioned functions are satisfied, and the above explanation does not intend to limit the scope of the present invention.","(1) A dependability maintenance device of the present invention is a dependability maintenance device, which generates failure-monitoring control data for controlling an operation of a failure-monitoring control section for monitoring a state of a monitoring control target system and executing a response procedure if necessary, and which supplies the failure-monitoring control data to the failure-monitoring control section, comprising: a dependability description conversion section for reading out, from a dependability description storage section, dependability description data indicative of a requirement and specification regarding dependability of the monitoring control target system, and generating the failure-monitoring control data from the dependability description data having been read out.","(6) A method of the present invention for controlling a dependability maintenance device is a method for controlling a dependability maintenance device which generates failure-monitoring control data for controlling an operation of a failure-monitoring control section for monitoring a state of a monitoring control target system and executing a response procedure if necessary, and which supplies the failure-monitoring control data to the failure-monitoring control section, the method comprising the steps of: reading out, from a dependability description storage section, dependability description data indicative of a requirement and specification regarding dependability of the monitoring control target system, and generating the failure-monitoring control data from the dependability description data having been read out.","With the arrangements, failure-monitoring control data is generated by the dependability maintenance device from dependability description data read out from the dependability description storage section. The failure-monitoring control section operates in accordance with the failure-monitoring control data, thereby monitoring the state of the monitoring control target system and executing a response procedure if necessary.","The dependability description data is a description of a specification regarding the dependability of the monitoring control target system. It is desirable that when stakeholders of the monitoring control target system agree on the dependability of the monitoring control target system, the result of the agreement is described as dependability description data, which is stored in the dependability description storage section.","As described above, the failure-monitoring control data used by the failure-monitoring control section is generated by the dependability maintenance device from the dependability description data stored in the dependability description storage section, so that it is possible to always maintain consistency between the dependability description data and the operation of the failure-monitoring control section.","(2) The dependability maintenance device of the present invention in the arrangement (1) is arranged such that the failure-monitoring control section is capable of selecting, out of a plurality of modules, a module used for monitoring the state of the monitoring control target system and executing a response procedure if necessary, and of controlling the selected module, the dependability description data is written in a format in which one description includes at least a variable to which module-specifying information for specifying the module is settable as a value, and the dependability description conversion section converts a description to be converted, which is included in the dependability description data, into failure-monitoring control data corresponding to module-specifying information included in the description, in accordance with information indicative of a preset correspondence between the module-specifying information and the failure-monitoring control data.","With the arrangement, the description to be converted, which is included in the dependability description data, is converted into failure-monitoring control data for causing the failure-monitoring control section to select and control a module specified by module-specifying information included in the description.","Consequently, even in a case where there are a plurality of modules controllable by the failure-monitoring control section, it is possible to generate failure-monitoring control data targeting an appropriate module, based on the description of the dependability description data.","(3) The dependability maintenance device of the present invention in the arrangement (2) is arranged such that the correspondence is set according to a fixed part other than a variable part in one description in the dependability description data, and the dependability description conversion section converts a description in the dependability description data into corresponding failure-monitoring control data by referring to the correspondence set according to the fixed part in the description in the dependability description data.","With the arrangement, the description to be converted, which is included in the dependability description data, is converted, by referring to a correspondence set according to a fixed part other than a variable part in the description, into corresponding failure-monitoring control data.","This allows different correspondences to be related to each fixed part in the description of the dependability description data. Accordingly, even when variables in module-specifying information etc. are the same, different fixed parts enable the description in the dependability description data to be converted into failure-monitoring control data by using different correspondences. This realizes various conversions by a simple rule.","(4) A failure response system of the present invention may be arranged so as to comprise: a dependability maintenance device as set forth in any one of the arrangements (1) to (3); the dependability description storage section; and the failure-monitoring control section, the failure-monitoring control section operating in accordance with failure-monitoring control data generated by the dependability maintenance device from dependability description data read out from the dependability description storage section, so as to monitor a state of the monitoring control target system and execute a response procedure if necessary.","(5) The failure response system of the present invention in the arrangement (4) may be arranged so as to further comprise: at least one monitoring module for monitoring the state of the monitoring control target system; at least one action module for executing a response procedure on the monitoring control target system if necessary; a monitor management section for selecting the monitoring module and controlling an operation of the monitoring module under control of the failure-monitoring control section; and an action management section for selecting the action module and controlling an operation of the action module under control of the failure-monitoring control section.","The dependability maintenance device and the failure response system may be realized by a computer. In this case, the scope of the present invention also encompasses a program of the dependability maintenance device for causing a computer to function as the dependability description conversion section to realize the dependability maintenance device by a computer, and a computer-readable storage medium storing the program.","In the above explanation, functional blocks and procedures were illustrated and referred to. Separation\/integration of functions or movement of procedures is possible as long as the aforementioned functions are satisfied, and the above explanation does not intend to limit the scope of the present invention.","The embodiments and concrete examples of implementation discussed in the foregoing detailed explanation serve solely to illustrate the technical details of the present invention, which should not be narrowly interpreted within the limits of such embodiments and concrete examples, but rather may be applied in many variations within the spirit of the present invention, provided such variations do not exceed the scope of the patent claims set forth below.","The dependability maintenance device of the present invention provides solutions for three problems in an open environment with potential incompleteness and uncertainty: misunderstanding of a requirement among stakeholders; unableness to respond to an environment change; and unsuccess to respond to failure. Therefore, the dependability maintenance device of the present invention can be widely used for system development and system operation in an open environment.","Furthermore, the failure response system of the present invention and the dependability maintenance device of the present invention allow easy description of agreement among stakeholders, and allow maintenance of the description of the agreement and implementation of a module in such a manner that the description of the agreement and the implementation of a module are developed and updated with consistency therebetween when a part of the monitoring control target system is updated. Therefore, the present invention is preferably used as a device\/method for maintaining dependability of various systems such as an embedded system and multiple systems connected with each other via the Internet etc.",{"@attributes":{"id":"p-0498","num":"0000"},"ul":{"@attributes":{"id":"ul0001","list-style":"none"},"li":[{"@attributes":{"id":"ul0001-0001","num":"0497"},"b":["100","100","100","100","100"]},{"@attributes":{"id":"ul0001-0002","num":"0498"},"b":"101"},{"@attributes":{"id":"ul0001-0003","num":"0499"},"b":["101","05"]},{"@attributes":{"id":"ul0001-0004","num":"0500"},"b":"102"},{"@attributes":{"id":"ul0001-0005","num":"0501"},"b":["102","04"]},{"@attributes":{"id":"ul0001-0006","num":"0502"},"b":["102","06"]},{"@attributes":{"id":"ul0001-0007","num":"0503"},"b":["102","07"]},{"@attributes":{"id":"ul0001-0008","num":"0504"},"b":["901","01"]},{"@attributes":{"id":"ul0001-0009","num":"0505"},"b":["902","01"]},{"@attributes":{"id":"ul0001-0010","num":"0506"},"b":["902","02"]},"P Change accommodation cycle","P Failure response cycle",{"@attributes":{"id":"ul0001-0013","num":"0509"},"b":"1"},{"@attributes":{"id":"ul0001-0014","num":"0510"},"b":"2"},{"@attributes":{"id":"ul0001-0015","num":"0511"},"b":"10"},{"@attributes":{"id":"ul0001-0016","num":"0512"},"b":"20"},{"@attributes":{"id":"ul0001-0017","num":"0513"},"b":"21"},{"@attributes":{"id":"ul0001-0018","num":"0514"},"b":"22"},{"@attributes":{"id":"ul0001-0019","num":"0515"},"b":"30"},{"@attributes":{"id":"ul0001-0020","num":"0516"},"b":"40"},{"@attributes":{"id":"ul0001-0021","num":"0517"},"b":"50"},{"@attributes":{"id":"ul0001-0022","num":"0518"},"b":"60"},{"@attributes":{"id":"ul0001-0023","num":"0519"},"b":"70"},"S Reading out step","S Conversion step"]}}],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"BRIEF DESCRIPTION OF DRAWINGS","p":[{"@attributes":{"id":"p-0039","num":"0038"},"figref":"FIG. 1"},{"@attributes":{"id":"p-0040","num":"0039"},"figref":["FIG. 2","FIG. 1"]},{"@attributes":{"id":"p-0041","num":"0040"},"figref":["FIG. 3","FIG. 1"]},{"@attributes":{"id":"p-0042","num":"0041"},"figref":["FIG. 4","FIG. 1","FIG. 4","FIG. 4"]},{"@attributes":{"id":"p-0043","num":"0042"},"figref":["FIG. 5","FIG. 1"]},{"@attributes":{"id":"p-0044","num":"0043"},"figref":["FIG. 6","FIG. 1"]},{"@attributes":{"id":"p-0045","num":"0044"},"figref":["FIG. 7","FIG. 6"]},{"@attributes":{"id":"p-0046","num":"0045"},"figref":["FIG. 8","FIG. 1","FIG. 42"]},{"@attributes":{"id":"p-0047","num":"0046"},"figref":["FIG. 9","FIG. 5"]},{"@attributes":{"id":"p-0048","num":"0047"},"figref":["FIG. 10","FIG. 1","FIG. 10","FIG. 10","FIG. 10"]},{"@attributes":{"id":"p-0049","num":"0048"},"figref":"FIG. 11"},{"@attributes":{"id":"p-0050","num":"0049"},"figref":["FIG. 12","FIG. 1"]},{"@attributes":{"id":"p-0051","num":"0050"},"figref":["FIG. 13","FIG. 1"]},{"@attributes":{"id":"p-0052","num":"0051"},"figref":["FIG. 14","FIG. 1"]},{"@attributes":{"id":"p-0053","num":"0052"},"figref":["FIG. 15","FIG. 1"]},{"@attributes":{"id":"p-0054","num":"0053"},"figref":["FIG. 16","FIG. 15"]},{"@attributes":{"id":"p-0055","num":"0054"},"figref":["FIG. 17","FIG. 1"]},{"@attributes":{"id":"p-0056","num":"0055"},"figref":["FIG. 18","FIG. 17"]},{"@attributes":{"id":"p-0057","num":"0056"},"figref":["FIG. 19","FIG. 17"]},{"@attributes":{"id":"p-0058","num":"0057"},"figref":["FIG. 20","FIG. 19","FIG. 20","FIG. 20"]},{"@attributes":{"id":"p-0059","num":"0058"},"figref":["FIG. 21","FIG. 20"]},{"@attributes":{"id":"p-0060","num":"0059"},"figref":["FIG. 22","FIG. 19"]},{"@attributes":{"id":"p-0061","num":"0060"},"figref":["FIG. 23","FIG. 17"]},{"@attributes":{"id":"p-0062","num":"0061"},"figref":["FIG. 24","FIG. 19"]},{"@attributes":{"id":"p-0063","num":"0062"},"figref":["FIG. 25","FIG. 1"]},{"@attributes":{"id":"p-0064","num":"0063"},"figref":["FIG. 26","FIG. 1"]},{"@attributes":{"id":"p-0065","num":"0064"},"figref":["FIG. 27","FIG. 1"]},{"@attributes":{"id":"p-0066","num":"0065"},"figref":["FIG. 28","FIG. 1"]},{"@attributes":{"id":"p-0067","num":"0066"},"figref":["FIG. 29","FIG. 5"]},{"@attributes":{"id":"p-0068","num":"0067"},"figref":["FIG. 30","FIG. 1"]},{"@attributes":{"id":"p-0069","num":"0068"},"figref":["FIG. 31","FIG. 1"]},{"@attributes":{"id":"p-0070","num":"0069"},"figref":["FIG. 32","FIG. 1"]},{"@attributes":{"id":"p-0071","num":"0070"},"figref":["FIG. 33","FIG. 1"]},{"@attributes":{"id":"p-0072","num":"0071"},"figref":["FIG. 34","FIG. 1"]},{"@attributes":{"id":"p-0073","num":"0072"},"figref":["FIG. 35","FIG. 1"]},{"@attributes":{"id":"p-0074","num":"0073"},"figref":["FIG. 36","FIG. 1"]},{"@attributes":{"id":"p-0075","num":"0074"},"figref":["FIG. 37","FIG. 36"]},{"@attributes":{"id":"p-0076","num":"0075"},"figref":["FIG. 38","FIG. 1"]},{"@attributes":{"id":"p-0077","num":"0076"},"figref":["FIG. 39","FIG. 38"]},{"@attributes":{"id":"p-0078","num":"0077"},"figref":["FIG. 40","FIG. 38"]},{"@attributes":{"id":"p-0079","num":"0078"},"figref":["FIG. 41","FIG. 1"]},{"@attributes":{"id":"p-0080","num":"0079"},"figref":"FIG. 42"},{"@attributes":{"id":"p-0081","num":"0080"},"figref":["FIG. 43","FIG. 42"]},{"@attributes":{"id":"p-0082","num":"0081"},"figref":["FIG. 44","FIG. 42"]},{"@attributes":{"id":"p-0083","num":"0082"},"figref":["FIG. 45","FIG. 42"]},{"@attributes":{"id":"p-0084","num":"0083"},"figref":["FIG. 46","FIG. 42","FIG. 46","FIG. 46"]},{"@attributes":{"id":"p-0085","num":"0084"},"figref":["FIG. 47","FIG. 42"]},{"@attributes":{"id":"p-0086","num":"0085"},"figref":["FIG. 48","FIG. 42","FIG. 48","FIG. 48"]},{"@attributes":{"id":"p-0087","num":"0086"},"figref":["FIG. 49","FIG. 42"]},{"@attributes":{"id":"p-0088","num":"0087"},"figref":["FIG. 50","FIG. 42"]},{"@attributes":{"id":"p-0089","num":"0088"},"figref":["FIG. 51","FIG. 42"]},{"@attributes":{"id":"p-0090","num":"0089"},"figref":["FIG. 52","FIGS. 50 and 51","FIGS. 52 to 55"]},{"@attributes":{"id":"p-0091","num":"0090"},"figref":["FIG. 53","FIGS. 50 and 51","FIGS. 52 to 55"]},{"@attributes":{"id":"p-0092","num":"0091"},"figref":["FIG. 54","FIGS. 50 and 51","FIGS. 52 to 55"]},{"@attributes":{"id":"p-0093","num":"0092"},"figref":["FIG. 55","FIGS. 50 and 51","FIGS. 52 to 55"]},{"@attributes":{"id":"p-0094","num":"0093"},"figref":["FIG. 56","FIGS. 50"],"b":["51","52","55"]}]},"DETDESC":[{},{}]}
