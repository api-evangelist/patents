---
title: System and method for protecting windows system state
abstract: A method and system for protecting computer system state in one aspect generates signatures associated with system dump data, compares the signatures with those of the previous system dump data. Only those system dump data whose signatures are different from the previous dump are transferred for storing.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08667328&OS=08667328&RS=08667328
owner: CA, Inc.
number: 08667328
owner_city: Islandia
owner_country: US
publication_date: 20090428
---

{"@attributes":{"id":"description"},"BRFSUM":[{},{}],"heading":["FIELD OF THE INVENTION","BACKGROUND OF THE INVENTION","BRIEF SUMMARY OF THE INVENTION","DETAILED DESCRIPTION"],"p":["The present disclosure relates generally to computer systems, and more particularly to protecting computer system states.","Computer system state refers to the state of computer's operating system and its configuration at a given time. For instance, system state data may include system components such as the registry, COM+ Class Registration database, the files under Windows\u2122 file protection, and boot files. Microsoft\u2122 Windows\u2122 counts system registry together with system databases and operating system (\u201cOS\u201d) files as \u201cSystem State.\u201d A system state may be backed up and recovered by storing and recovering the data that make up the system state, for instance, for system protection. Microsoft\u2122 Windows\u2122 provides Volume Shadow Copy Service (VSS) application programming interfaces (APIs) as a standard way to backup and recover the system state information.","Windows\u2122 system state data can grow very large in size. For example, a typical Windows\u2122 Server 2008 system has data size that is larger than six gigabytes (GB). A system dump using VSS API produces a long list of all the files in that large data. A normal backup solution requires protection of system state in daily or even hourly basis. The large size of the system state dump can impose a burden on the backup software that needs to transfer data through network and store the data in a backup server, and for example, on storage media such as disk or tape.","A system and method for protecting computer system state are provided. The method, in one aspect, may comprise retrieving a plurality of files associated with current system state of a computer system and generating a signature for each of the plurality of files. The method may also include comparing the signature of a file of the current system state to a signature of a corresponding file of a previous system state. The method may further include transferring the file of the current system state if the signatures are different, and transferring only the signature of a file of the current system state if the signatures match.","A system for protecting system state of a computer system, in one aspect, may comprise a processor operable to perform a system dump periodically and create data representing system state at the time of the system dump. The system may also include a processing module operable to create a plurality of signatures associated with a plurality of files of said data representing system state. The processing module may be further operable to compare the signatures with signatures of corresponding files of data from a previously performed system dump. The processing module may be further operable to transfer a file if signature corresponding to the file is different from signature corresponding to a previous dump of the file.","A program storage device readable by a machine, tangibly embodying a program of instructions executable by the machine to perform methods described herein may be also provided.","Further features as well as the structure and operation of various embodiments are described in detail below with reference to the accompanying drawings. In the drawings, like reference numbers indicate identical or functionally similar elements.","A system and method for protecting system or computer data are provided. Compared to the conventional or known methods, the system and method of the present disclosure, in one aspect, require less data to be transferred over the network from the machine being protected to the machine that is storing the system state data. The system and method of the present disclosure also may use less storage space in the backup server or servers compared to the conventional or known methods.","The Windows\u2122 system state may include a registry, COM+ database, and system binary files under \u201cWindows\\system32\u201d and other directories. System state data contains many elements of system's configuration that can be used to recover the system from a failure and restore the system to the state before the failure occurred. In Windows\u2122 Server 2008 system, for example, the system binary files can occupy over six gigabytes of disk space. However, many of the system configuration files may not change frequently. Thus, there may not be many system binary files that have changed between one backup to the next backup. Further, while registry files and COM+ databases change over time, the changes in the actual content are not large. Windows\u2122 domain controllers and other server roles have databases, like Active Directory directory service, treated as system states. Those databases behave similarly as the registry and COM+ database, i.e., they change over time, but the actual amount of data that is changed may not be large.","In one aspect of the present disclosure, the method and system generates the signatures of all files involved every time the system performs a dump of a system state. The signatures are then recorded or stored. VSS API, for instance, may be used to dump a system state. Signature of a file may include the file name, size, last modification time and other information which can help identify whether a file has been changed since the backup of the last system dump. The next time the system state dump occurs, the signatures of the new files in the current system dump are compared with the signatures of the files of the previous dump to determine what has changed. Those files or data that is determined to have been changed compared to the last dump are then transferred to a backup system or server or the like, for backup. If the files or data are determined to have not changed since the last dump, only their signatures are transferred to the backup server so that the server can use those files from its local copy.","Thus, initially, signatures of all files of an initial dump may be maintained at a local system, for instance, at its local storage. The initial full system dump, i.e., all the files and\/or data of the initial system dump are also stored at one or more backup systems. In this disclosure, backups are also referred to as synchronization. An initial backup would be a full backup of the system dump files and\/or data. At each subsequent backup (also referred to as subsequent synchronization) of system dump files and\/or data, signatures of those files and\/or data are generated and compared with the signatures corresponding to the previous backup data. The local system stores the signatures corresponding to the files of the most current dump. The backup server or system stores a one or more dumps of files and signatures. For instance, the backup server may include a full dump of files, and multiple dumps of files and signatures of subsequent backups (or synchronizations). The count of dump is based on how many backups (or synchronizations) are performed.","For registry, COM+ and other database files and other files, the system and method of the present disclosure in one embodiment may perform a block level comparison to determine exactly which parts of the file has changed, and transfer only the changed part or parts. In one aspect, comparing at the block level may include dividing the file into data blocks, for instance, based on the knowledge of file's structure.","Different methods may be implemented for dividing a file into data blocks. One method is to read in the file data and split it into multiple logical blocks, for example, of predetermined size, for example, four kilobytes (KB), and calculate signatures for each block. Signatures may be computed using algorithms such as MD5 digest. Other algorithms may be used, for example, that generate a hash value, a checksum or the like to represent the signature of a file. The signatures are then saved in the local storage. When comparing with the last dump, a file may be compared block by block using the signature of each block. That is, the signatures of corresponding blocks are compared. The blocks whose signatures are different from the last dump are determined as having changed since the last backup, and those blocks are transferred to a server or backup system for storage. The blocks of a file may be associated with logical block numbers for indicating which blocks have changed and the actual data change. Other tracking mechanisms may be utilized to track the file block structure and changed blocks.","In addition, a file's block map representing a data block may be obtained, established or constructed for comparison. For instance, the system and method of the present disclosure in one embodiment may calculate a checksum using an algorithm such as MD5 for each data block. Any other algorithm may be utilized. A block map may be a structure representing a data block and may include information such as the block start position, size, and checksum. By comparing new block map of the file with the file's original block map or previously backed up block map, it can be determined which block has changed. Only those files whose block map has changed are transferred in one embodiment. This way, the system and method in one embodiment may reduce the amount of data transfer for large database or number of files that only has relatively small number of changes.",{"@attributes":{"id":"p-0021","num":"0020"},"figref":["FIG. 1","FIG. 2","FIG. 1"],"b":["102","104","106","108","110","112","114"]},"The backup server or the storage system may organize the backed up data and signatures as follows.  illustrates an example of file organization at one or more backup servers. A full backup data is stored in a folder or location  (e.g., \u201cfull\u201d). In one embodiment, the fall backup data in the folder  does not include signatures. The next time the data is backed up, the backup data is saved in another folder or location  (e.g., \u201cinc1\u201d). This backup data may contain data (and\/or files) and signatures. The data saved in this folder  is based on comparison with the data in the \u201cfull\u201d folder , therefore, the name of the compared-to folder  (e.g., \u201cfull\u201d) or link to the folder or the like is also saved in the \u201cinc1\u201d folder . The name of the folder  is used to search for data corresponding to the signature stored in the folder . At another next backup, the data received for backing up is stored in yet another folder or location  (e.g., \u201cinc2\u201d). Since this backup is based on comparison with the data in the \u201cinc1\u201d folder , the name of that folder , for example, \u201cinc1\u201d or a link to the folder or the like is also saved. The folders , ,  may be organized in a hierarchical relationship, for example, as the folder  being the parent of the folder , the folder  being the parent of the folder , etc. Flat file relationship or other file structure and\/or organization may be used. It should be understood that the example of the file structure shown in  is only for illustrative purposes and does not in any way limit the file organization in the present disclosure to only such structures.","In one embodiment, the system that is being backed up (herein also referred to as an agent station, local station, local machine) stores only the signatures corresponding to all files of the latest backup, for instance, in a folder or location at the local station. Storing only the signatures at the local station reduces the network overhead and speeds up the comparison. For instance, the signatures of the system dump files are generated and compared with the locally stored signatures to determine which file has been changed. If any change is detected, the system and method of the present disclosure transfers the changed file to the backup server or system, and updates the local storage with the new signature.","For recovering the data or files, the system and method of the present disclosure may present a user with the \u201ctime stamp\u201d of each file. The time stamp represents the time of the last backup and is mapped to or corresponds to one of the backup folders on a backup server, for example, a \u201cfull\u201d or \u201cincx\u201d folder. All files may be listed, and the user may select any one or more of the listed files for recovery. When a file of a \u201ctime stamp\u201d is selected for restoring, the system and method of the present disclosure in one embodiment searches the folder mapped to the selected \u201ctime stamp\u201d of the file and determines whether the actual file exists in the folder. If not, the system and method of the present disclosure in one embodiment searches the folder of a previous backup to look for the actual file. If this folder also does not contain the actual file, the search procedure is repeated in yet another previous backup folder until the actual file is found. If the folders are hierarchically structured or arranged, the search or lookup procedure described above involves searching the parent folders or directories, for instance, one level up each time the actual file is not found (i.e., only signatures of the files are found) in the current folder.","In one aspect of the present disclosure, by allowing a user to select a \u201ctime stamp\u201d for storing, user need not know exactly what files are needed for recovery. Rather, the user only needs to know the \u201clast good time\u201d of the system configuration and restore the data associated with that time.","Yet in another aspect, the local machine that is being backed up and the backup machine, for example, a computer server that stores the backup data, may interact periodically to check that the data on the server and the local machine are in sync. That is, a check may be performed to determine that the signatures of the data dump in the local machine match with the signatures of the data dump stored in the backup machine. If not, an initial synchronization may be performed by performing a system dump and generating signatures of the system dump. The signatures would be stored in the local machine while the actual files and data associated with the system dump would be transferred to the backup machine for storage.",{"@attributes":{"id":"p-0027","num":"0026"},"figref":"FIG. 2","b":["202","204","206"]},{"@attributes":{"id":"p-0028","num":"0027"},"figref":"FIG. 4","b":["402","404","402","404","4","7"]},{"@attributes":{"id":"p-0029","num":"0028"},"figref":"FIG. 3","b":["302","302"]},"The computer processing system that carries out the system and method of the present disclosure may also include a display device such as a monitor or display screen  for presenting output displays and providing a display through which the user may input data and interact with the processing system, for instance, in cooperation with input devices such as the keyboard  and mouse device  or other pointing device or the like. The computer processing system may be also connected or coupled to one or more peripheral devices such as the printer , scanner (not shown), speaker, and any other devices, directly or via remote connections.","The computer processing system may be connected or coupled to one or more other processing systems such as a server , other remote computer processing system, network storage devices, via any one or more of a local Ethernet, WAN connection, Internet, etc. or via any other networking methodologies that connect different computing systems and allow them to communicate with one another. The system dump data and\/or signatures as computed above may be backed up or stored on a backup server such as the one shown at , storage network, or on a detachable media devices such as DVD, CD's, and other storage devices.","The various functionalities and modules of the systems and methods of the present disclosure may be implemented or carried out distributedly on different processing systems or on any single platform, for instance, accessing data stored locally or distributedly on the network.","Various aspects of the present disclosure may be embodied as a program, software, or computer instructions embodied in a computer or machine usable or readable medium, which causes the computer or machine to perform the steps of the method when executed on the computer, processor, and\/or machine. A program storage device readable by a machine, tangibly embodying a program of instructions executable by the machine to perform various functionalities and methods described in the present disclosure is also provided.","The system and method of the present disclosure may be implemented and run on a general-purpose computer or special-purpose computer system. The computer system may be any type of known or will be known systems and may typically include a processor, memory device, a storage device, input\/output devices, internal buses, and\/or a communications interface for communicating with other computer systems in conjunction with communication hardware and software, etc.","The terms \u201ccomputer system\u201d and \u201ccomputer network\u201d as may be used in the present application may include a variety of combinations of fixed and\/or portable computer hardware, software, peripherals, and storage devices. The computer system may include a plurality of individual components that are networked or otherwise linked to perform collaboratively, or may include one or more stand-alone components. The hardware and software components of the computer system of the present application may include and may be included within fixed and portable devices such as desktop, laptop, server. A module may be a component of a device, software, program, or system that implements some \u201cfunctionality\u201d, which can be embodied as software, hardware, firmware, electronic circuitry, or etc.","The embodiments described above are illustrative examples and it should not be construed that the present invention is limited to these particular embodiments. Thus, various changes and modifications may be effected by one skilled in the art without departing from the spirit or scope of the invention as defined in the appended claims."],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"BRIEF DESCRIPTION OF THE DRAWINGS","p":[{"@attributes":{"id":"p-0009","num":"0008"},"figref":"FIG. 1"},{"@attributes":{"id":"p-0010","num":"0009"},"figref":"FIG. 2"},{"@attributes":{"id":"p-0011","num":"0010"},"figref":"FIG. 3"},{"@attributes":{"id":"p-0012","num":"0011"},"figref":"FIG. 4"},{"@attributes":{"id":"p-0013","num":"0012"},"figref":"FIG. 5"}]},"DETDESC":[{},{}]}
