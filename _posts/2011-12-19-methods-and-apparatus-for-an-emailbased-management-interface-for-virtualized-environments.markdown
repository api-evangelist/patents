---
title: Methods and apparatus for an E-mail-based management interface for virtualized environments
abstract: A server system is configured to provide an e-mail based interface for executing management operations on a virtualized infrastructure which includes a plurality of virtual machines (VMs), underlying host computers, clusters, and/or data centers. Such an interface may be provided in a virtualized infrastructure to enable a system administrator to execute administrative operations remotely from a mobile device without requiring custom installation of an application on the mobile device or a secure connection to the server system. The server system receives e-mails at a pre-determined e-mail address, authenticates the sender of the e-mail, and extracts and executes commands from the e-mail. A number of techniques for validating the e-mail containing server commands may also be provided.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09049257&OS=09049257&RS=09049257
owner: VMware, Inc.
number: 09049257
owner_city: Palo Alto
owner_country: US
publication_date: 20111219
---

{"@attributes":{"id":"description"},"BRFSUM":[{},{}],"heading":["BACKGROUND","SUMMARY","DETAILED DESCRIPTION"],"p":["Software for managing a virtualized data center is responsible for monitoring physical hosts and virtual machines (VMs) running in the physical hosts and, further, for performing management operations such as provisioning and configuration tasks. One example of such management software is vSphere\u2122 available from VMware, Inc. of Palo Alto, Calif. The set of hosts, VMs, data storage units, networks, and the organization of these elements into data centers, clusters, and resource pools, managed by such software, is commonly referred to as a virtualized computer inventory (hereinafter referred to as the \u201cinventory\u201d).","In a conventional virtualized data center, one or more administrators are responsible for monitoring and managing the operation of the virtualized data center. The administrators carry out such tasks typically using a management terminal having a graphical user interface or a command-line interface to interact with the management software. In response, the management terminal issues appropriate management instructions to the management software over a network, such as a local area network (LAN), a wide area network (WAN), a Virtual Private Network (VPN), or other suitable communication networks.","The ability to manage the virtualized data center from a mobile device has become increasingly important, especially in scenarios where an administrator may be out of the office. Administrators may utilize a mobile device (e.g., a smartphone, personal digital assistant, tablet computer) running a management terminal software application to interact with the management software. However, as mobile devices proliferate and utilize a wide variety of hardware and software platforms, it becomes challenging to provide and support a management terminal software application that is compatible with all the different hardware and software platforms. As such, there is a need for a cross-platform method for remotely managing a virtualized infrastructure.","One or more embodiments of the present invention provide a cross-platform mechanism for processing commands received from a remote device to enable an administrator to remotely manage a virtualized computing environment, for example, from a mobile device. The administrator composes an e-mail message with one or more commands and sends the e-mail message to a system configured to process the e-mail and execute the commands contained therein. The e-mail message may be composed using any e-mail client that is suitable for generating an e-mail message and is available for a wide range of hardware and software platforms. Various authentication and authorization techniques may be applied to the processing of the e-mail message to ensure security and integrity of the virtualized computing environment.","One or more embodiments of the present invention provide methods of processing commands for a virtual machine (VM) management module that manages a virtualized computing environment comprising a plurality of physical host computers executing one or more VMs. The method includes receiving an e-mail message comprising one or more commands for managing the virtualized computing environment in a first format and validating the e-mail message to determine whether to process the e-mail message. Responsive to determining that the e-mail message should be processed, the method proceeds to parse the e-mail message to extract the one or more commands and translating the one or more commands in the first format to a second format that is executable by the VM management center.","Additionally, embodiments of the invention provide a method of processing commands for a virtual machine (VM) management module that manages a virtualized computing environment comprising a plurality of physical host computers executing one or more VMs. The method includes receiving an e-mail message from a user that comprises one or more commands for managing the virtualized computing environment. The method further includes determining whether the e-mail message is a redundant response to an alert condition of the virtualized computing environment. Responsive to determining that the e-mail message is not a redundant response, the method proceeds to parsing the e-mail message to extract the one or more commands. The method then includes generating one or more instructions executable by the VM management center based on the one or more commands.","Embodiments of the present invention further include a non-transitory computer-readable storage medium storing instructions that when executed by a computer system cause the computer system to perform one of the methods set forth above.",{"@attributes":{"id":"p-0015","num":"0014"},"figref":"FIG. 1","b":["100","100","108","104","108","106","108"]},"Each host computer  may include conventional components of a computing device, such as memory , a processor , a disk interface , and a network interface . Examples of the disk interface  are a host bus adapter and a network file system interface. An example of the network interface  is a network adapter, also referred to as a Network Interface Card (NIC). In some embodiments, a plurality of NICs is included in the network interface . Each host computer  provides a virtualization layer that abstracts processor, memory, storage, and\/or networking resources into multiple virtual machines (VMs) that run concurrently on the same host computer . As shown, one or more virtual machines are configured within the host computer , represented in  as VM , VM , and VM , which share the hardware resources of host computer .","The virtual machines run on top of a software interface layer  (referred to herein as a \u201chypervisor\u201d) that enables sharing of the hardware resources of the host computer  by the virtual machines. The hypervisor  may run on top of the operating system of the host computer  or directly on hardware components of the host computer . Each virtual machine includes a guest operating system and one or more guest applications running on top of the guest operating system. As also shown, an agent  is provided in the hypervisor , by which specific information pertaining to the virtualization settings and configurations of the host computer , and any VMs included therein, is transmitted to a VM management center , discussed below, according to a schedule or in response to queries by the VM management center .","The VM management center  is a computer program that resides and executes in a central server, which may reside in one of data centers , or alternatively, running as a VM in one of the host computers . The VM management center  is in communication with each of the data centers , clusters , and host computers , and carries out administrative tasks for the virtualized computer system  including, but not limited to, managing the data centers , managing the virtual machines running within each host computer , provisioning the virtual machines, migration of virtual machines from one host computer to another, allocating physical resources, such as processor and memory, load balancing between host computers  and clusters , and so on. In one embodiment, the VM management center  interacts with an agent included in the host computers , such as the agent , to exchange information using application programming interface (API) calls.","The VM management center  may perform administrative tasks for the virtualized computer system  autonomously, or may perform administrative tasks in response to one or more commands issued by a system administrator. A system administrator may access the VM management center  via an administrator terminal  that is connected to the management center via a local area network (LAN) connection or a wide area network (WAN) connection. The connection may be secured using a Virtual Private Network (VPN) or other suitable means. The administrator terminal  may be any computing device that includes conventional components, such as a processor, memory, storage, and network interface. To support a direct interface with the VM management center , the administrator terminal  may include a software application (depicted as an administrative client  in ), that produces a graphical user interface or a command-line interface. As discussed above, as new computing devices, particularly mobile devices, proliferate and utilize a variety of hardware and software platforms, it may be challenging to implement and maintain an administrative client that is compatible with the variety of hardware and software platforms in the marketplace.","Accordingly, in one or more embodiments of the invention, a system administrator \u201caccesses\u201d the VM management center  by sending e-mail messages to an administrator command server  configured to provide an e-mail-based interface to the VM management center , thereby enabling the system administrator to remotely manage the virtualized computing system  using a mobile device. In one embodiment, the administrator command server  is configured to communicate with the VM management center  to transmit messages (e.g., management instructions) to and receive messages (e.g., status messages) from the VM management center . The administrator command server  may be communicatively coupled to the VM management center  via an inter-process communication (IPC) system, including, but not limited to, network sockets, shared memory, remote procedure calls (RPC), and\/or a web services API (Application Program Interface). Details of the administrator command server  are discussed and shown in greater detail in . While the administrator command server  is depicted in  as a separate component that resides and executes on a separate central server, it should be recognized that the administrator command server  may alternatively reside in any one of the computing devices of the virtualized computing system , such as the same central server where the VM management center  resides.",{"@attributes":{"id":"p-0021","num":"0020"},"figref":["FIG. 2","FIG. 1","FIG. 1"],"b":["200","100","120","200","120","102","210","220","230","232","250","220","102","220","250","220","230","232","230","232","220","220","220"]},"According to one embodiment, the mobile device  includes an administrator e-mail client  configured to communicate with the e-mail server  to transmit and receive e-mail messages. The administrator e-mail client  is configured to transmit e-mail messages (herein referred to as \u201ccommand e-mails\u201d) addressed to an e-mail account corresponding to the administrator command server  (herein referred to as a \u201ccommand server e-mail address\u201d). The command e-mails may include one or more commands for the VM management center  to perform system administrative procedures and management tasks on the virtualized computing system .","In some embodiments, the administrator e-mail client  may be a software application configured to generate, transmit, receive, and display e-mail messages via any of the e-mail techniques and protocols known in the art, including Simple Mail Transfer Protocol (SMTP), Post Office Protocol (POP), and Internet Message Access Protocol (IMAP). Alternatively, the administrator e-mail client  may be a software application configured to provide access to such means (e.g., a web browser providing access to a web-based e-mail service.) In one embodiment, the administrator e-mail client  is configured to support \u201cpush e-mail\u201d to reduce latency of communication between the administrator command server  and the mobile device .","In one embodiment, the administrator e-mail client  is configured to generate a command e-mail having a plurality of header fields, collectively referred as the e-mail header, and an e-mail body. The administrator e-mail client  may generate a command e-mail having an e-mail body containing one or more commands formatted according to a command-line syntax specified for the administrator command server . Further, the administrator e-mail client  may be configured to generate the command e-mail to include additional metadata, such as tags or identifiers, contained in the e-mail header and\/or in the e-mail body for facilitating processing techniques described herein.","The administrator command server  is generally configured to receive command e-mails via the e-mail server  and process the command e-mails to generate instructions executable by the VM management center . The administrator command server  includes an e-mail module  for performing e-mail related operations, a command controller  for processing the command e-mails to extract one or more commands, and a command interpreter  for generating instructions executable by the VM management center  based on the extracted commands.","In one embodiment, the e-mail module  of the administrator command server  is configured to communicate with the e-mail server  via the network  to retrieve e-mails addressed to a command server e-mail address associated with the administrator command server  (e.g., \u201ccommandgateway@zsphere.com\u201d). The e-mail module  connects to the e-mail server  and fetches command e-mails addressed to the command server e-mail address using a username, password, domain information, and other account settings. The e-mail module  is configured to access the e-mail server  at a user-configurable periodicity to send and\/or receive e-mail messages. For example, the e-mail module  may be configured to poll the e-mail server  for new command e-mails every 5 minutes. In one embodiment, similar to the administrator e-mail client , the e-mail module  is configured to support a \u201cpush e-mail\u201d protocol such that command e-mails are actively transferred (i.e., pushed) from the e-mail server  to the e-mail module  as the e-mail messages arrive at the e-mail server .","In one embodiment, the e-mail module  is configured to generate e-mail messages containing output from the VM management center  and addressed to one or more recipients responsible for the VM management center , such as a system administrator. In one embodiment, the e-mail module  generates and transmits an e-mail message containing an alert message (sometimes referred to as an \u201calert\u201d) that notifies system administrators of a condition in the VM management center  (e.g., system outage). In another embodiment, the e-mail module  generates an e-mail message containing output from the VM management center  (herein referred to as \u201cstatus message\u201d) in response to a specific command received from the system administrators. For example, a status message indicating an uptime condition of the VM management center  may be sent by the e-mail module  in response to receiving a command requesting \u201cstatus.\u201d In another example, a status message may be generated that contains a verbose output indicating a successful or unsuccessful execution of a command e-mail.","In one embodiment, the e-mail module  is further configured to provide \u201cread receipt\u201d functionality for the command server . According to such a configuration, the e-mail module  transmits an acknowledgment message for each command e-mail received by the administrator command server  to signal successful receipt to the sender of the command e-mail. Embodiments of the invention that utilize the read receipt functionality reduce issues of uncertain delivery that may arise in an e-mail based management interface. Alternatively, the e-mail module  may be configured to transmit a \u201cread receipt\u201d when the administrator command server  opens and reads, rather than merely receive, the command e-mail.","In one particular implementation, the e-mail module  utilizes one or more software libraries to programmatically connect to the e-mail server  and perform one or more e-mail related functions. For example, the e-mail module  may utilize Java APIs for fetching e-mail from the e-mail server , extracting e-mail metadata and data, generating new e-mail messages, and sending e-mail messages to recipients, such as the mobile device , via the e-mail server . Embodiments of the invention may be extended to utilize other suitable software libraries, frameworks, and APIs for implementing the techniques described herein.","In at least some embodiments, the network  interconnecting the administrator e-mail client , the e-mail server , and the e-mail module  includes one or more networking technologies, such as a local area network (LAN), wide area network (WAN), wireless network, telephony, the Internet, and\/or a combination thereof. It should therefore be recognized that the network  may be insecure such that communications via the network  may be spoofed or altered by third parties. It should further be recognized that communications via the network  may be asynchronous such that command e-mails by multiple parties, such as mobile devices , , , transmitted at the same time may arrive at the administrator command server  at varying times. Accordingly, techniques are herein provided for processing the command e-mails to address the aforementioned issues.","In one embodiment, the command controller  of the administrator command server  is configured to validate one or more command e-mails retrieved by the e-mail module . It is noted that the operations for \u201cvalidating\u201d a command e-mail generally refers to performing one or more procedures for determining whether to proceed with processing of the command e-mail and execution of the commands contained therein. The command controller  may be configured to validate a command e-mail based on command e-mail authenticity, for example, by verifying the identity of the e-mail sender or by verifying the command e-mail has not been tampered with, as further discussed with . The command controller  may further be configured to validate a command e-mail based on sender authorization, for example, by determining an access control policy or permissions of an e-mail sender to execute commands on the VM management center , as further discussed with . Finally, the command controller  may be configured to validate a command e-mail to address issues of response redundancy that arise from asynchronous delivery of command e-mails, as further discussed with .","The command controller  is configured to invoke the command interpreter  to communicate with the VM management center  and execute commands extracted from the command e-mail. The command interpreter  is configured to transmit commands to the VM management center  and\/or receive output resultant from the transmitted commands or otherwise unsolicited status output from the VM management center .","In one embodiment, the command interpreter  is a command-line interpreter (CLI) that enables allows a system administrator to express commands a simple language (i.e., syntax) and execute those commands on the VM management center , rather than requiring use of a graphical user interface. The CLI may be a software layer that translates one or more commands into instructions in a format that is understood and executable by the VM management center . Examples of command interpreters that are suitable for implementing embodiments of the invention include PowerCLI or vSphere SDK for Perl for VMware vSphere available from VMware, Inc. of Palo Alto, Calif., or one of a variety of other suitable command-line interpreter systems.","The operations of system  are shown in .  is a sequence diagram that illustrates example operations for e-mail-based management of a virtual environment, according to one embodiment of the present invention. While the example operations are depicted as being performed by the system  of , it is contemplated that embodiments of the invention may be performed by other suitable systems.","At step , the command server  may receive a notification from the VM management center  that a potential issue, condition, and\/or problem (referred herein as an \u201calert condition\u201d) has been detected for the VM data center . For example, the command server  may receive a notification that one or more VMs in the VM data center  is over-provisioned, experiencing overload, and\/or unresponsive. The command server  notifies one or more system administrators of the alert condition through suitable expedient communication means, such as paging, text messaging, instant messaging, or, according to one embodiment of the present invention, e-mail.","In one embodiment, responsive to detecting an alert condition, the e-mail module  of the command server  generates an e-mail alert message for the one or more system administrators designated as contacts for such alert messages. The e-mail module  of the command server  connects to the e-mail server  and transmits the alert message. The alert e-mail includes an e-mail body containing a description of the alert condition. In one embodiment, the e-mail body includes a text description of the alert condition, a graphical depiction of the alert condition, and\/or some combination thereof.","In one embodiment, the e-mail module  generates an alert e-mail having additional metadata information for facilitating processing techniques described herein. The e-mail module  may generate an alert e-mail having a unique reference identifier for the alert condition, referred herein as an \u201calert identifier.\u201d The alert identifier may be located in the e-mail body and\/or in the subject line (e.g., \u201cSubject: Alert #20110819.1547920A\u201d). Alternatively, the alert identifier may be located within one or more custom metadata fields in the e-mail header (e.g., \u201cX-AlertMessageID: 20110819.1547920A\u201d). Additionally, the e-mail module  may be configured to specify a customized e-mail address in a \u201cReply-To:\u201d field of the e-mail header, for example, such as \u201cREPLY-ALERT1547920A@zsphere.com.\u201d The customized reply-to e-mail address may be generated, upon request, by the command server  and corresponds to the alert. The command server  may utilize the customized reply-to e-mail address to identify any e-mails received at that address as being responsive to the corresponding alert.","One example of an alert e-mail to a plurality of system administrators, having e-mail addresses such as \u201cadmin1@zsphere.com,\u201d \u201cadmin2@zsphere.com,\u201d \u201cadmin3@zsphere.com,\u201d may appear as follows:",{"@attributes":{"id":"p-0039","num":"0038"},"tables":{"@attributes":{"id":"TABLE-US-00001","num":"00001"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"thead":{"row":{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"From: commandgateway@zsphere.com"},{"entry":"To: admin1@zsphere.com, admin2@zsphere.com, admin3@zsphere.com"},{"entry":"Subject: Issue #20110819.1547920A"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}},{"entry":"Host Computer ALPHA at 192.168.0.181 has CPU Load of 99% for a time "},{"entry":"period exceeding 12 hour(s)."},{"entry":"----------------------------"},{"entry":"NOTE: This alert [#20110819.1547920A] has been sent to you because "},{"entry":"you have been designated a system administrator for VM Center ALPHA."},{"entry":"----------------------------"}]}}}}},"At some time later, at step , the administrator e-mail client  of the mobile device  connects to the e-mail server  and retrieves any e-mail messages, including the alert message, addressed to the system administrator operating the mobile device . The administrator e-mail client  makes available the alert message for review by the system administrator. At some time later, the system administrator may read the alert message and decide to respond to the alert message with instructions for the VM management center  to perform one or more actions ameliorative to the alert condition.","At step , the system administrator composes a command e-mail from the mobile device  that is addressed to the command server e-mail address. The body of the command e-mail includes one or more commands formatted according to a command-line syntax accepted by the command server . In one embodiment, each command may be separated by a predetermined delimiter, for example, such as a carriage return or newline (i.e., each command on a separate line) or a blank line. The commands are arranged in a sequence corresponding to an order of execution. The command e-mail may retain the alert identifier provided by the alert message, for example, and store the alert identifier in the subject line or in the body of the e-mail (e.g., \u201cRe: Alert #20110819.1547920A\u201d), within one or more custom fields in the e-mail headers (e.g., \u201cX-In-Reply-to-Alert: 20110819.1547920A\u201d), and\/or a combination thereof.","For example, the system administrator may seek to instruct the VM management center  to power off two virtual machines (VMs), named VM and VM, in the VM data center . As such, the system administrator composes an e-mail message addressed to the command server e-mail address (e.g., \u201ccommandgateway@zsphere.com\u201d) and having the commands \u201cStop-VM\u2014name \u2018VM\u2019\u201d, \u201cStop-VM\u2014name \u2018VM\u2019\u201d in the e-mail body. In the example shown below, the syntax used by the command syntax provided by PowerCLI, although other suitable command-line syntaxes are contemplated. An example of a command e-mail may appear as follows:",{"@attributes":{"id":"p-0043","num":"0042"},"tables":{"@attributes":{"id":"TABLE-US-00002","num":"00002"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"21pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"168pt","align":"left"}}],"thead":{"row":{"entry":[{},{"@attributes":{"namest":"offset","nameend":"2","align":"center","rowsep":"1"}}]}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"\u2003","From: admin1@zsphere.com"]},{"entry":[{},{},"To: commandgateway@zsphere.com"]},{"entry":[{},{},"CC: monitor@zsphere.com, supervisor1@zsphere.com"]},{"entry":[{},{},"Subject: Re: Issue #20110819.1547920A"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"2","align":"center","rowsep":"1"}}]},{"entry":[{},{},"Stop-VM-name \u201cVM1\u201d"]},{"entry":[{},{},"Stop-VM-name \u201cVM2\u201d"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"2","align":"center","rowsep":"1"}}]}]}}}}},"Additionally, the system administrator optionally includes conventional recipients of the e-mail message, using the To, CC, and BCC fields as it is known in the art. In one example, the command e-mail may be copied to a monitoring inbox (e.g., \u201cmonitor@zsphere.com\u201d) that corresponds to a repository for all command e-mails. In another example, the system administrator may include an e-mail address of a third party, such as a supervisor (e.g., \u201csupervisor1@zsphere.com\u201d) in the CC: field of the e-mail.","At step  at some time later, for example, such as after a reconfigurable periodicity, the administrator command server  contacts the e-mail server  and fetches any e-mail messages addressed to the command server e-mail address, including the command e-mail sent at step .","At step , the command server  validates the command e-mail to determine whether to proceed with processing the received command e-mail. As mentioned above, the step of validating the command e-mail may include resolving a number of technical issues involved with an asynchronous method (i.e., e-mail-based method) for managing the virtualized computing environment, such as issues of authorization, response redundancy, and uncertain delivery.","At step , the command server  sends an acknowledgement message to notify the mobile device  that command e-mail has been successfully delivered and read (i.e., processed). In the embodiment shown, the acknowledgment message is an e-mail message sent to the mobile device  via the e-mail server . Alternatively, the command server  may transmit a \u201cread receipt\u201d signal to the e-mail server , whereby the e-mail server , upon receiving the \u201cread receipt\u201d signal from the command server , sends the acknowledgement message to the mobile device .","At step , the command server  extracts one or more commands from the body of the command e-mail. The command interpreter  of the command server  interprets the commands to generate one or more instructions in a formation executable by the VM management center . The command interpreter  connects to the VM management center  to relay the instructions to the VM management center  for execution. At step , the VM management center  executes the instructions to perform one or more data center operations on the VM data center .","At step , after the instructions have been executed, a status output message is returned from the VM management center  to the command server . The command server  generates one or more status e-mails that includes the contents of the status output messages and transmits the status e-mails to the system administrator via e-mail.","The operations of the administrator command server  are depicted in further detail in , B, and C.  illustrate exemplary operations A and B for a method for e-mail based management of a virtualized computing environment according to an embodiment of the invention.  illustrate exemplary operations A and C for a method for e-mail based management of a virtualized computing environment according to another embodiment of the invention.","The operations A begin at step , where the administrator command server  continually checks for any alert condition received from the VM management center . If the administrator command server  receives a notification from the VM Management Center  that an alert condition has been detected for the virtualized computing environment, at step , the command controller  directs the e-mail module  to generate an alert e-mail to one or more system administrators. The operations A then proceed to step . The command server  may wait for a response back from at least one system administrator to which the alert has been communicated. In one embodiment, the command server  utilizes a time-out timer wherein if no response to the alert e-mail is received by expiry of the time-out timer, then error handling procedures are invoked, such as resending the alert e-mail. The time-out timer may be cancelled upon receipt of one or more \u201cread receipts\u201d from the system administrator indicating successful delivery of the alert e-mail messages.","At step , the e-mail module  of the administrator command server  connects to the e-mail server  to determine whether there are any new e-mail messages addressed to the administrator command e-mail address. If the e-mail module  determines that there are no new e-mails to be retrieved, the operations A loop back to step ; otherwise, the operations A proceed to step .","At step , the e-mail module  of the command server  receives a command e-mail containing one or more administrative commands for managing the virtualized computing environment  via the e-mail server  and provides the command e-mails to the command controller . The command e-mail may be responsive to an alert e-mail, such as the alert e-mail sent during step , or may be a new command e-mail unsolicited by the command server . The command controller  of the command server  then proceeds to perform one or more procedures for validating the received command e-mail, according to embodiments of the invention.","At step , the command controller  performs one or more authentication procedures to verify the identity of the user (i.e., sender) and\/or verify the command e-mail has not been tampered with or altered. Responsive to determining the command e-mail is authentic and authorized, the command controller  proceeds to step , below; otherwise, at step , the command server  may initiate error handling which includes sending an error message to the user via the e-mail server . In one embodiment, the error message is a response e-mail notifying the user of an \u201cunauthorized command,\u201d \u201cunauthenticated command,\u201d and\/or other error reporting details.","Embodiments of the invention provide various techniques that, when used individually or in combination, validate a command e-mail to determine the authenticity of the received command e-mail.","In one embodiment, an authentication approach based on private-key and public-key cryptography, such as digital signatures, may be utilized. Under this approach, the command e-mail is \u201csigned\u201d by a mobile device with a key that only the authorized system administrator may have, such as a private key granted to the system administrator. The command server  retrieves a public key corresponding to the system administrator through key distribution techniques known in the art, such as digital certificates. The command server  may decrypt the command e-mail using the public key associated with the system administrator to verify that the command e-mail message is authentic (i.e., the e-mail was sent by the claimed sender and unadulterated). In response to determining the command e-mail is authentic, the command server  proceeds to step  as described above. In one embodiment, the command server  may maintain a catalogue of public keys assigned to users authorized to execute commands on the command server.","In an alternative embodiment, an authentication approach based on security tokens may be utilized. System administrators are issued a hardware or software mechanism for generating an authentication code, the mechanism referred to as a \u201ctoken.\u201d For example, the system administrator may have a smart card or a key fob configured to dynamically generate a secret value that is automatically and periodically changed. In another example, the system administrator may visit a separate data source, such as a website, answering one or more security questions known only to the authorized user, and retrieving a token value provided by the website. The system administrator includes the token value in the body of the command e-mail. To authenticate the sender, the command server  first retrieves a token value from a security database storing a plurality of synchronous values based on the sender's purported identity (e.g., based on the e-mail address found in the From field). The command server  then extracts the token value from the command e-mail and compares the two values. After the command server verifies the presence of a token value in the e-mail body and that the corresponding values match, then the command server  may deem the identity of the sender of the command e-mail as being authenticated.","In another embodiment, an authentication approach based on \u201cpass codes\u201d may be utilized. A pass code generally refers to a predetermined value known only to the system administrator. Similar to the token approach discussed above, the command e-mail includes the pass code. In one embodiment, after the command server  verifies the presence of the pass code and determines that the pass code corresponds to a value stored in a security database, then the command server  may deem the identity of the sender of the command e-mail as being authenticated.","In still another embodiment, an authentication approach based on a trusted communications environment may be utilized. Embodiments of the invention may require a secure connection between the mobile device  and the e-mail server , such as in VPN connections. In one embodiment, the command server  may store a trusted network list comprising a pre-determined list of network addresses, subnet addresses, and other network domains that represent a trusted network environment. The command server  may deem a command e-mail authentic if the e-mail appears to have originated from within the trusted network environment, for example, inside a company's intranet. In one embodiment, the command server  determines a network address (e.g., IP address) of the sender of the command e-mail by processing one or more e-mail header fields of the command e-mail to determine the IP address (e.g., from the \u201cReceived:\u201d field). In another embodiment, the command server  may communicate with the e-mail server  to obtain sender information.","After authenticating the sender of the command e-mail, the command server  determines whether the sender of the command e-mail is authorized to submit and execute the one or more administrative commands contained in the received e-mail for the VM management center .","According to one embodiment, a plurality of users may be granted specific roles and permissions for operating the VM management center  via the administrator command server . By limiting the users, actions, and objects that can be touched by e-mail-based management, as well as limiting the frequency and\/or time periods with which commands may be issued, the command server  may limit risk of access from an unauthorized channel or user. Such roles and permissions for managing components of the virtualized computing environment may be granted or denied to one or more users and\/or groups. For example, one user may be designated as a system administrator for a particular a data cluster, a particular host computer, and\/or for a virtual machine executing on one or more host computers. It is appreciated that responsibilities for specific virtualized computer inventory components, such as resource pools, can be delegated based on business organization or ownership. In one embodiment, the roles and permissions may be stored within and managed by the administrator command server  or the VM management center , or alternatively, may be stored separately, for example, in a lightweight directory access protocol (LDAP) database.","In one embodiment, the command server  retrieves the roles and permissions associated with the sender of a command e-mail based on the sender's identity, as specified in the From: field of the e-mail header and\/or as authenticated in the preceding step. Based on the retrieved permissions, the command server  determines whether the sender has authorization to provide commands to the VM management center . For example, the command server  may determine whether the sender is a party authorized to execute any administrative commands at all, whether the sender is authorized to execute the particular administrative commands specified in the received e-mail, whether the sender is authorized to execute commands on the one or more particular virtualized components identified in the commands, or some combination thereof. If the commands in the command e-mail are permissible, then command e-mail is deemed authorized, and the operations proceed to step .","At some embodiments, rather than entirely allow or disallow a command e-mail based on roles and permission, the command server  may determine that the command e-mail from a user requires further approval from a supervisor user. Users may be assigned supervisory-subordinate relationships such that a supervising user may have to review and authorize a command and\/or operation submitted by a subordinate user before the administrator command server  will process submitted commands. The command server  may generate and send an approval request e-mail to a designated supervisor to request approval of the subordinate user's command e-mail. The approval request may contain a description of the commands requested by the subordinate user, a description of the subordinate user's identity, and instructions on how to approve the pending commands. In one embodiment, the instructions may include a hyperlink containing a custom identifier (e.g., hash code) to a web-accessible approval script. In another embodiment, the instructions include text indicating the supervisor user may reply directly to the approval request e-mail with an e-mail that contains a command word indicating approval or denial (e.g., \u201cAPPROVE\u201d, \u201cDENY\u201d) in the body of the e-mail. After the command server  receives approval, through one of the embodiments described above, the command server  deems the user authorized and proceeds to step .","At step , the command server  determines whether the received command e-mail is a response to an alert. In some cases, multiple system administrators may remotely respond to the same alert e-mail with multiple command e-mails, and due to the asynchronous nature of e-mail communications, the command e-mails may arrive at the command server  at varying times. According to one embodiment, the command server  validates the received command e-mails to process one of the multiple received command e-mails and to ignore the other command e-mails (i.e., the redundant responses) for the same alert. To determine whether an e-mail is sent as a reply, the command server  extracts an alert identifier from the received command e-mail. In one embodiment, the alert identifier may be present in the subject or body of the e-mail, or in a custom metadata field in the e-mail header. If no identifier is found, the received command e-mail is determined to not be a response to an alert and treated as a new command (i.e., unsolicited command), in which case the command server  proceeds to step  in  or step  in .","If the command e-mail is determined to be a response to an alert (e.g., an alert identifier is found), at step , the command server  then determines whether the command-e-mail is a redundant response. Generally, the command server  applies one or more techniques for resolving response redundancy to select one of multiple command e-mails responsive to the same alert for processing and designate the remainder of the multiple command e-mails as \u201credundant responses.\u201d For example, the command server  may apply a \u201cfirst-in-time\u201d technique whereby a command e-mail first received responsive to an alert is processed while all subsequent command e-mails responsive to the same alert are disregarded. If the command server  determines the received command e-mail is a redundant response, then one or more reconciliatory actions are performed. In one embodiment, the command server  may ignore the redundant response and, at step , send a response e-mail to the user via the e-mail server . In one embodiment, the response e-mail may include an error message notifying the user of a \u201credundant command\u201d and include other error reporting details.",{"@attributes":{"id":"p-0066","num":"0065"},"figref":["FIG. 4B","FIG. 4A"],"b":["400","400"]},"At step , the command server  generates and sends a receipt confirmation message to the user via the e-mail module  to notify the user that the command e-mail has been successfully received. In an alternative embodiment, the command server  sends an acknowledgment message at various steps of method A. For example, the command server  may send an acknowledgment message after step  to indicate successful receipt. Alternatively, the command server  may send an acknowledgment message, such as a \u201cread receipt,\u201d to indicate not only that the command e-mail has been successful delivered, but also opened and processed by the command server , such as after step .","Subsequent to validating the system administrator's command e-mail, the command server , at step , parses the command e-mail to extract one or more commands for the VM management center . The command server may be configured to disregard quoted text from a previously sent alert message contained in the e-mail body. In one embodiment, the command server detects and strips out the quoted text by searching for quoted line prefixes (e.g., \u201c>\u201d) or other conventions of quoted text as is known in the art. In one embodiment, the command server  may perform a preliminary syntax check of the contents of the e-mail body. Material in the e-mail body that is not a valid command may be disregarded, flagged, and\/or processed separately.","In one embodiment, the command server  parses the command e-mail based on a constant numerical or text value, referred to as a \u201cmagic number,\u201d found in the e-mail. The magic number identifies a file format or protocol by which the e-mail body should be parsed. For example, the magic number may indicate the e-mail body contains scripting logic that should be run by a particular scripting engine prior to execution by the command interpreter.","In one embodiment, the command server  places the extracted commands into temporary storage, for example, such as in a queue. Alternatively, the command server  immediately executes the extracted commands.","At step , the command server  invokes the command interpreter  to translate the extract commands from a first format to one or more management instructions in a second format executable by the VM management center .","At step , the command interpreter  of the command server  connects to the VM management center  and transmits the management instructions.","After the instructions have been executed, the VM management center  may provide a summary of the actions taken and the post-execution status of the inventory affected by the commands. At step , the command interpreter  of the command server  receives the status results and\/or other output resultant from execution of the commands from the VM management center .","At step , the command server  generates a response e-mail, referred herein as a \u201cstatus e-mail,\u201d based on the received status results and\/or output. The status e-mail may include a summary of actions taken and corresponding outcomes of the actions. For example, the status e-mails may provide a summary of the commands executed and the post-execution status of the virtualized infrastructure affected by the commands. The command server  sends the status e-mail to the sender of the command e-mail corresponding to the executed management instructions via the e-mail module .",{"@attributes":{"id":"p-0075","num":"0074"},"figref":["FIG. 4C","FIG. 4A"],"b":["400","400"]},"At step , the command server  generates and sends a receipt confirmation message to the user via the e-mail module  to notify the user that the command e-mail has been successfully received. Then, the command server , at step , parses the command e-mail to extract one or more commands for the VM management center . At step , the command server  checks for syntax error in the parsed commands. If the parsed commands contain a syntax error, the command server  sends an error message to the user at step  via the e-mail module . If, the parsed commands do not contain any syntax error, the command server  sends a prompt to the user at step  via the e-mail module  to confirm the parsed commands. If the commands server  determines at step  that the parsed commands are confirmed by the user, step  is executed. If, on the other hand, the commands server  determines at step  that the parsed commands are not confirmed by the user, the method ends.","At step , the command server  invokes the command interpreter  to translate the parsed commands from a first format to one or more management instructions in a second format executable by the VM management center . Then, at step , the command interpreter  of the command server  connects to the VM management center  and transmits the management instructions.","As the instructions are being executed, the VM management center  may provide a summary of the actions taken and the post-execution status of the inventory affected by the commands. At step , the command interpreter  of the command server  receives the status results and\/or other output resultant from execution of the instructions from the VM management center . A completion notification or an error notification may be returned by the VM management center . The command interpreter  determines at step  whether or not such notification is received. If such notification is received, a completion message or an error message is sent to the user at step  via the e-mail module  and the method ends. If such notification is not received, the command interpreter periodically checks for execution completion or error. During this time, command interpreter  may be prompted by the user for a status update. When the command interpreter  is prompted by the user for a status update, as determined by decision block , the command interpreter sends a status update to the user at step  via the e-mail module .","The following is one example of an authorized user performing the interactive task according to the method described above in conjunction with . The user sends an e-mail with the message \u201cErase Backup\u201d to the administrator command e-mail address. In response, the user receives an acknowledgement that the e-mail was received and is prompted to confirm \u201cTask 1234,\u201d which for the purposes of this illustration corresponds to \u201cErase Backup.\u201d If the message \u201cErase Backup\u201d contained a syntax error, an error message would be returned instead of the prompt to confirm \u201cTask 1234.\u201d If the user does not confirm within a predetermined period of time, the task times out at the command server . This may occur, for example, if the user was interrupted or lost network connectivity. However, upon user confirmation of \u201cTask 1234\u201d within the predetermined period of time, this task is initiated. When this task completes, a completion message will be returned to the user. If, however, an error is encountered during execution of this task, an error message will be returned instead. In addition, during execution of this task, the user may request a status update. In response to this request, a message such as \u201cBackup deletion: 84%\u201d may be returned to the user.",{"@attributes":{"id":"p-0080","num":"0079"},"figref":"FIG. 5A"},"As shown in , the command server  sends alert messages to several recipients (e.g., system administrators). In the example depicted, an alert message (identified as Alert , ) is received by both mobile devices ,  (identified as \u201cMobile Device \u201d and \u201cMobile Device \u201d).","As shown, Mobile Device  sends a command e-mail  to the command server , responsive to the alert message. The command e-mail  may be configured a variety of ways to indicate that the command e-mail is responsive to the alert message. As described above, the command e-mail  may retain an alert identifier provided by the alert message, for example, in the subject line or in the body of the e-mail, within one or more custom fields in the e-mail headers, or a combination thereof.","At step , the command server  receives the command e-mail  and processes the command e-mail  to resolve response redundancy as described herein, as well as to authenticate, extract and interpret the command e-mail, as described above.","In one embodiment, referred herein as a \u201cpassive method,\u201d command server  characterizes received command e-mails as responsive to an alert or as a new unsolicited command. To determine whether a command e-mail is a response to an existing alert, the command server  attempts to extract an alert identifier from the e-mail. In one embodiment, this identifier may be present in the subject or in the body of the e-mail, as mentioned above. If no alert identifier is found, the received command e-mail is treated as a new unsolicited command, in which the command server  processes and interprets the command e-mail as described above.","If an alert identifier is found, the command server  executes the command e-mail if it is the first response received from the system administrators that is responsive to the given alert. In one embodiment, the command server  may maintain a record of alerts and corresponding received responses. The command server  may update the record each time a first response is received, for example, by setting a flag value corresponding to the alert to a value indicating the alert has been responded to (e.g., TRUE). Accordingly, the command server  may check additional responses later received against the record to determine whether to execute the receive commands or discard the message.","For example, as shown, Mobile Device  may transmit a command e-mail  responsive to the received alert, after some unspecified delay . Similar to the command e-mail , the command e-mail  includes the alert identifier indicating the e-mail is responsive to the particular alert. The command server  receives the command e-mail  and detects the alert identifier from the e-mail. The command server  checks the record and determines that the alert has already been responded to and disregards command e-mail . As shown, the command server  may send a response message to Mobile Device  informing the sender that the alert has already been responded to (i.e., his or her message has been determined to be redundant) and their messages has been subsequently ignored.",{"@attributes":{"id":"p-0087","num":"0086"},"figref":["FIG. 5B","FIG. 5B","FIG. 5A","FIG. 5A"],"b":["120","1","2","1","2","120","120","102","104"]},"This approach generally utilizes two phases to process command e-mails responsive to an alert. In a first phase, at step , the Mobile Device  sends a polling message to request verification of the continued existence of the alert condition. In one embodiment, the polling message may be an e-mail message having a command that references the alert identifier associated with the alert condition, for example, such as \u201cCHECK 20110819.1547920A.\u201d Other command keywords are contemplated, including but not limited to \u201cPOLL,\u201d \u201cLOCK,\u201d \u201cVERIFY,\u201d and are predetermined by the command server .","At step , upon receipt of the polling message, the command server  processes the polling message by associating the administrator's identity (e.g., e-mail address) with the alert condition and indicating the alert condition as being \u201clocked.\u201d In effect, the command server  grants the system administrator sole access to respond to the alert condition, and other command e-mails received for the alert may be disregarded accordingly.","For example, at step , Mobile Device  sends a polling message to the command server  subsequent to the polling message by Mobile Device . At step , the command server  receives the polling message and determines the alert condition has already been locked by Mobile Device . As such, the command server  disregards the polling message from Mobile Device . The command server  may transmit an error message to notify Mobile Device  that the polling message sent at step  was deemed a redundant response and disregarded. It is understood that the command server  would likewise disregard command e-mails, such as the command e-mail  in , from users not having a lock.","In one embodiment, the command server  initiates a \u201clock\u201d timer whereupon expiry of the lock timer, the command server  terminates the \u201clock,\u201d disassociates the system administrator's e-mail address from the alert, thereby enabling other system administrators an opportunity to send a polling message to obtain a new response lock. In one embodiment, the command server  may take note of previously discarded command e-mails and polling messages and re-transmit an alert message notifying ignored system administrators that the lock has been freed.","In a second phase, as shown at step , the command server  sends to the system administrator having the \u201cresponse lock\u201d an alert verification e-mail indicating whether the alert condition still exists, and if so, that the system administrator whether the system administrator is permitted to respond with a command e-mail. At step , the system administrator sends a command e-mail instructing the command server  to perform one or more remedial action to correct the alert condition. As such, when the command server  receives any command e-mails responsive to the alert, at step , the command server  determines whether the sender of the command e-mail is permitted to execute commands responsive to the alert based on whether a polling message has been received in the first phase from that sender. If so, the command server  deems the command e-mail valid and processes as described above. In one embodiment, the command server  may update records associated with the alert condition as having been complete or having been addressed by the system administrator.","In an alternative embodiment, not depicted, an approach referred to as a \u201cpermissive method\u201d for response redundancy control may be utilized. According to the permissive method, the command server  may accept multiple command e-mails responsive to the same alert. The command server  then performs a reconciliatory process wherein the commands extracted from the multiple received command e-mails are executed so long as the commands do not conflict. In one embodiment, two or more commands may be characterized as \u201cin conflict\u201d if the commands specify a same component of the virtualized computing environment (e.g., VM, host computer, cluster. etc.) on which to perform one or more management operations on. In another embodiment, two or more commands may be characterized as \u201cin conflict\u201d if the two or more commands specified are incompatible.","For example, the command server  may receive a command e-mail including a command to increase a memory provision for VM by a factor of two and a command e-mail including a command to migrate VM to a different host computer. The command server  may permissively execute both commands, resulting in VM having a doubled memory provision and then being migrated to a different host computer (while maintaining the increased memory provisioned.) However, in another example, the command server  may receive a command e-mail including a command to migrate VM from host computer A to host computer B and a command e-mail including a command to migrate VM from host computer A to host computer C. As such, the command server  determines that the commands are in conflict, and may only execute the command e-mail , being received first in time.","Embodiments of the invention advantageously provide a platform-independent command interface for managing a virtualized infrastructure that may be utilized by mobile phones, which are increasingly ubiquitous. Because the administrator is communicating with the command server via e-mail, the need is reduced for an administrator to have a command interpreter running on his\/her mobile device or to connect to a server using a VPN in order to perform system management tasks. Finally, as there are no platform requirements for the e-mail client of the mobile device, an administrator may perform management commands using any device that has an e-mail client and is not limited to a particular platform, such as Android-based phones, iOS-based phones, or Windows-based phones.","Embodiments of the invention may be extended to utilize other suitable text-based messaging services besides e-mail. For example, it is contemplated that embodiments of the invention may be utilized with text messaging, such as Short Message Services (SMS) messaging, instant messaging, such as AOL Instant Messenger or Jabber, and mobile-to-mobile messaging, such as BlackBerry Messenger available from Research in Motion (RIM) of Ontario, Canada. Additionally, embodiments of the invention may be extended to include desktop computers, notebook computers, servers, and other suitable computing devices configured for network connectivity, and having a suitable e-mail client for enabling the transmittal and receipt of e-mail messages.","The various embodiments described herein may employ various computer-implemented operations involving data stored in computer systems. For example, these operations may require physical manipulation of physical quantities\u2014usually, though not necessarily, these quantities may take the form of electrical or magnetic signals, where they or representations of them are capable of being stored, transferred, combined, compared, or otherwise manipulated. Further, such manipulations are often referred to in terms, such as producing, identifying, determining, or comparing. Any operations described herein that form part of one or more embodiments of the invention may be useful machine operations. In addition, one or more embodiments of the invention also relate to a device or an apparatus for performing these operations. The apparatus may be specially constructed for specific required purposes, or it may be a general purpose computer selectively activated or configured by a computer program stored in the computer. In particular, various general purpose machines may be used with computer programs written in accordance with the teachings herein, or it may be more convenient to construct a more specialized apparatus to perform the required operations.","The various embodiments described herein may be practiced with other computer system configurations including hand-held devices, microprocessor systems, microprocessor-based or programmable consumer electronics, minicomputers, mainframe computers, and the like.","One or more embodiments of the present invention may be implemented as one or more computer programs or as one or more computer program modules embodied in one or more computer readable media. The term computer readable medium refers to any data storage device that can store data which can thereafter be input to a computer system\u2014computer readable media may be based on any existing or subsequently developed technology for embodying computer programs in a manner that enables them to be read by a computer. Examples of a computer readable medium include a hard drive, network attached storage (NAS), read-only memory, random-access memory (e.g., a flash memory device), a CD (Compact Discs)\u2014CD-ROM, a CD-R, or a CD-RW, a DVD (Digital Versatile Disc), a magnetic tape, and other optical and non-optical data storage devices. The computer readable medium can also be distributed over a network coupled computer system so that the computer readable code is stored and executed in a distributed fashion.","Although one or more embodiments of the present invention have been described in some detail for clarity of understanding, it will be apparent that certain changes and modifications may be made within the scope of the claims. Accordingly, the described embodiments are to be considered as illustrative and not restrictive, and the scope of the claims is not to be limited to details given herein, but may be modified within the scope and equivalents of the claims. In the claims, elements and\/or steps do not imply any particular order of operation, unless explicitly stated in the claims.","Virtualization systems in accordance with the various embodiments may be implemented as hosted embodiments, non-hosted embodiments or as embodiments that tend to blur distinctions between the two, are all envisioned. Furthermore, various virtualization operations may be wholly or partially implemented in hardware. For example, a hardware implementation may employ a look-up table for modification of storage access requests to secure non-disk data.","Many variations, modifications, additions, and improvements are possible, regardless the degree of virtualization. The virtualization software can therefore include components of a host, console, or guest operating system that performs virtualization functions. Plural instances may be provided for components, operations or structures described herein as a single instance. Finally, boundaries between various components, operations and data stores are somewhat arbitrary, and particular operations are illustrated in the context of specific illustrative configurations. Other allocations of functionality are envisioned and may fall within the scope of the invention(s). In general, structures and functionality presented as separate components in exemplary configurations may be implemented as a combined structure or component. Similarly, structures and functionality presented as a single component may be implemented as separate components. These and other variations, modifications, additions, and improvements may fall within the scope of the appended claims(s)."],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"BRIEF DESCRIPTION OF THE DRAWINGS","p":[{"@attributes":{"id":"p-0009","num":"0008"},"figref":"FIG. 1"},{"@attributes":{"id":"p-0010","num":"0009"},"figref":["FIG. 2","FIG. 1"]},{"@attributes":{"id":"p-0011","num":"0010"},"figref":"FIG. 3"},{"@attributes":{"id":"p-0012","num":"0011"},"figref":"FIGS. 4A and 4B"},{"@attributes":{"id":"p-0013","num":"0012"},"figref":"FIGS. 4A and 4C"},{"@attributes":{"id":"p-0014","num":"0013"},"figref":"FIGS. 5A and 5B"}]},"DETDESC":[{},{}]}
