---
title: Cross-cloud management and troubleshooting
abstract: A cloud management system is described herein that provides the ability for an application to span two or more clouds while allowing operation, management, and troubleshooting of the distributed application as a single application. The system provides infrastructure that communicates across datacenters for execution and for centralizing knowledge of instances of an application that are running at different locations. The infrastructure provided by the system monitors both the application and connections between the clouds, with intelligence to know if issues are within the application or because of the connection between the clouds. The system coordinates management functions across multiple cloud platforms/locations. Thus, the cloud management system creates a single monitoring and troubleshooting interface and knowledge and execution fabric across multiple clouds so that applications spread across multiple clouds can be monitored, managed, and debugged more easily.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09223632&OS=09223632&RS=09223632
owner: Microsoft Technology Licensing, LLC
number: 09223632
owner_city: Redmond
owner_country: US
publication_date: 20110520
---

{"@attributes":{"id":"description"},"BRFSUM":[{},{}],"heading":["BACKGROUND","SUMMARY","DETAILED DESCRIPTION"],"p":["Datacenters provide servers for running large applications. Enterprises often use datacenters to run core business functions such as sales, marketing, human resources, billing, product catalogs, and so forth. Datacenters may also run customer-facing applications, such as web sites, web services, email hosts, databases, and many other applications. Datacenters are typically built by determining an expected peak load and providing servers, network infrastructure, cooling, and other resources to handle the peak load level. Datacenters are known for being very expensive and for being underutilized at non-peak times. They also involve a relatively high management expense in terms of both equipment and personnel for monitoring and performing maintenance on the datacenter. Because almost every enterprise uses a datacenter of some sort, there are many redundant functions performed by organizations across the world.","Cloud computing has emerged as one optimization of the traditional datacenter. A cloud is defined as a set of resources (e.g., processing, storage, or other resources) available through a network that can serve at least some traditional datacenter functions for an enterprise. A cloud often involves a layer of abstraction such that the applications and users of the cloud may not know the specific hardware that the applications are running on, where the hardware is located, and so forth. This allows the cloud operator some additional freedom in terms of rotating resources into and out of service, maintenance, and so on. Clouds may include public clouds, such as MICROSOFT\u2122 Azure, Amazon Web Services, and others, as well as private clouds, such as those provided by Eucalyptus Systems, MICROSOFT\u2122, and others. Companies have begun offering appliances (e.g., the MICROSOFT\u2122 Azure Appliance) that enterprises can place in their own datacenters to connect the datacenter with varying levels of cloud functionality.","Enterprises with datacenters incur substantial costs building out large datacenters, even when cloud-based resources are leveraged. Enterprises often still planned for \u201cworst-case\u201d peak scenarios and thus include an amount of hardware at least some of which is rarely used or underutilized in terms of extra processing capacity, extra storage space, and so forth. This extra amount of resources incurs a high cost for little return. Customers using cloud based computing on premise expect to be able to use capacity in another compatible cloud (e.g., a second instance of their own in another location, Microsoft's public cloud, and so forth) for peak capacity times, for disaster recover scenarios, or just for capacity management. Doing so is much less expensive than building out for the worst-case scenario and then doubling for redundancy. In addition, they expect to be able to manage (e.g., troubleshoot, operate) applications split across multiple clouds. Today, applications, cloud management, and troubleshooting do not operate across clouds or other datacenters.","A cloud management system is described herein that provides the ability for an application to span two or more clouds (which may be across great distances), while allowing operation, management, and troubleshooting of the distributed application as a single application. The system provides infrastructure that communicates across datacenters for execution and for centralizing knowledge of instances of an application that are running at different locations. In some cases, the system provides a computing appliance that an enterprise can place in its own private datacenter that allows an administrator to distribute at least some application loads to a public cloud or other separate locations, while providing unified management via the computing appliance. The infrastructure provided by the system monitors both the application and connections between the clouds, with intelligence to know if issues are within the application or because of the connection between the clouds. The system coordinates management functions across multiple cloud platforms\/locations. If an administrator wants to debug the application, the system allows live debugging at the correct location through a seamless, unified interface. Thus, the cloud management system creates a single monitoring and troubleshooting interface and knowledge and execution \u201cfabric\u201d across multiple clouds so that applications spread across multiple clouds can be monitored, managed, and debugged more easily.","This Summary is provided to introduce a selection of concepts in a simplified form that are further described below in the Detailed Description. This Summary is not intended to identify key features or essential features of the claimed subject matter, nor is it intended to be used to limit the scope of the claimed subject matter.","A cloud management system is described herein that provides the ability for an application to span two or more clouds (which may be across great distances), while allowing operation, management, and troubleshooting of the distributed application as a single application. The system provides infrastructure that communicates across datacenters for execution and for centralizing knowledge of instances of an application that are running at different locations. For example, the system may centralize logging, performance tracking, and other management functions, regardless of where the application is running. In some cases, the system provides a computing appliance that an enterprise can place in its own private datacenter that allows an administrator to distribute at least some application loads to a public cloud or other separate locations, while providing unified management via the computing appliance.","The infrastructure provided by the cloud management system monitors both the application and connections between the clouds, with intelligence to know if issues are within the application or because of the connection between the clouds. The system coordinates management functions across multiple cloud platforms\/locations (from one cloud's infrastructure, tasks are coordinated to execute across two or more clouds). If an administrator wants to debug the application, the system allows live debugging at the correct location through a seamless, unified interface. Thus, the cloud management system creates a single monitoring and troubleshooting interface and knowledge and execution \u201cfabric\u201d across multiple clouds so that applications spread across multiple clouds can be monitored, managed, and debugged more easily.",{"@attributes":{"id":"p-0013","num":"0012"},"figref":["FIG. 1","FIG. 1"],"b":["110","150","110","120","130","120","125","140","145","150","155","160","170","150","180","120","120","160","170","150","190"]},"Similarly, when automated or manual troubleshooting or remediation steps are needed, the infrastructure  in cloud  can coordinate with the infrastructure  in cloud  to provide troubleshooting and debugging support. For example, the system fabric can reach across locations to execute an application wide update, shutdown, and so forth. Those of ordinary skill in the art will recognize numerous ways to perform cross-location control. For example, infrastructure  may directly control infrastructure , infrastructure  may request infrastructure  to execute on infrastructure 's behalf, and so forth. Likewise, with operator\/administrator troubleshooting tools (e.g., monitoring visualization, alerting, log and configuration data viewing, and so on), the location of the applications and infrastructure is available and logically displayed, but does not involve separate tools and mental gymnastics from the administrator to put together. For instance, when troubleshooting and viewing data on all roles, if the administrator 's next step is using one or more tools  to view the application's logs or start a remote session to the role instance, the system connects the administrator  directly, regardless of at which location the role is residing.","The design of the cloud management system provides simplified and consistent running of a service across multiple clouds\/location. The system moves the definition of \u201ca computing resource\u201d from a server, beyond a datacenter to a portion of the internet (the datacenters and the connection between them). This allows service level agreements (SLAB) to be defined, monitored, and managed at the service level\u2014which is what service owners often care most about.","In some embodiments, the cloud management system works in cooperation with a cloud migration system that seamlessly migrates applications from one location to another as needed, called bursting. The cloud migration system provides capacity management and disaster recovery by detecting peak load conditions and automatically moving computing to another source (and back) and by providing computing across two or more clouds and moving completely to one in the case of a disaster at one site. This allows enterprises to plan for local resources for a sustained level of load and to leverage cloud-based resources for peak or other unusual loads. In many cases, an enterprise's business is such that a particular time of year is busier, and extra resources may only be needed during those times. For example, tax-planning enterprises are particular busy in mid-April, e-commerce sites experience holiday rushes around Thanksgiving and Christmas, and so on. The cloud migration system monitors loads within a datacenter and detects a threshold that indicates that the current load is nearing the datacenter's capacity. For example, the system may monitor central processing unit (CPU) usage, memory usage, storage usage, network bandwidth, and other metrics to determine how well the datacenter is handling the current load. The system may also observe trends (e.g., a rate of acceleration of resource usage) to determine whether the threshold has been or will soon be reached.","Upon detecting that the threshold will be reached, the cloud migration system facilitates an orderly move of at least some datacenter load to another datacenter or cloud-based resources. For example, the system may migrate some peak load to a public cloud. Because cloud pricing models may vary, the system may factor cost into the decision. For example, the system may prefer to host as much load as possible at the enterprise datacenter to reduce cost, while leveraging cloud resources only to the extent needed to satisfy client requests. The system may also provide management and monitoring tools that provide a consistent experience for information technology (IT) personnel regardless of where particular loads are run (e.g., locally within the enterprise or publicly using a cloud). The system may also provide planning tools to help decide appropriate workloads or applications for moving to other resources during high loads. For example, applications may have various compliance\/regulatory or networking\/design limitations that make them more or less suitable for migration. The system can also be used as a disaster recovery architecture at a datacenter\/network level to manage fast workload transition in case of disaster. If a datacenter resource permanently fails, the system can quickly and efficiently migrate additional load to the cloud or other resources so that clients of the datacenter are unaffected or are less affected by the failure. Thus, the cloud migration system allows enterprises to build smaller and more efficient datacenters that leverage other resources for rare extra loads.","The cloud management system works with the cloud migration system to provide seamless management and troubleshooting as applications are migrated from one location to another. As described above, the cloud migration system may move resources between a datacenter and the cloud on a temporary (i.e., bursting) or permanent (i.e., disaster recovery) basis. Temporary movements include bursting an application or other load for a short time period to handle a peak or other high load that exceeds the datacenter's capacity. A temporary movement may include bursting an entire application or splitting the application's load across two or more locations. Permanent movements include longer-term migration of loads due to a failure of hardware in the datacenter, a more sustained increase in capacity needs, a desire to globally distribute an application with dynamic load balancing, and so forth. Following are several example scenarios in which the system may be used by an enterprise.","In the first example, an enterprise bursts application load to a public cloud to manage capacity. The business decision maker (i.e., CEO, CFO, or VP Marketing\/sales) and datacenter systems administrator decide it would be more cost effective and provide a better customer experience to burst some work to the public cloud at their top three peak day level of use\/traffic per year, and maintain their own datacenter (potentially with a cloud appliance) at their peak monthly usage level. They sign business agreements with the cloud provider to burst work into the cloud and project estimates of when and how much work that would be. Their account is set up and the information entered into the cloud appliance. During a planning phase, the administrator runs a test with a test application from the cloud provider that ensures the connection is working properly. The administrator then sets the capacity values (e.g., threshold) for initiating bursting of applications that keep capacity at the specified level in a capacity management tool. The administrator goes into the tool to further specify the applications that are eligible to move in this situation (e.g., no regulatory issues with temporary movement, good technical fit).","The day comes when use exceeds the limits and the system automatically moves applications to the public cloud. Alerts are thrown in the monitoring\/usage systems when capacity is within 5% of the bursting being initiated, when the system does burst, what the system bursts, and when the system brings the applications back. An explicit log is kept of all compute resources and\/or storage moved and the administrator is alerted to go to their public cloud account for billing. A review of the bursting parameters and applications tagged as movable is reviewed in the regular capacity planning meetings with in the enterprise datacenter group and management.","In a second example, an enterprise splits applications across clouds to manage capacity. This scenario is similar to the scenario above except for the type of application moved is more complex, so is split out to prioritize differently. The company decides to have a relationship with the cloud provider for splitting applications into the cloud (a form of bursting). In this case, a large application was pre-identified as a bursting candidate. When the capacity reaches the threshold, 50 of the 100 worker instances are automatically moved to the public cloud. The application is now split across two appliance instances or cloud instances, with all monitoring and billing data being sent to the starting instance so it can be centrally managed. A cloud appliance in the enterprise's own datacenter has troubleshooting tools to help debug possible issues of split applications (e.g., networking issues, network bandwidth\/latency issues, fabric communication, and so on). When the capacity situation has subsided on the appliance, the 50 worker instances are moved back to the appliance and it is a normally functioning application again.","In another example, a cloud provider decides to burst from one cluster to another. The public cloud capacity planning team decides that a cluster in the Chicago datacenter is critically full but wants to maintain high utilization. They set up bursting to an underutilized cluster in a West coast datacenter when utilization gets to 90%. The administrator goes into the capacity management tool and chooses appropriate customers\/applications (e.g., with low data usage) to be move candidates. The day comes when the usage of the Chicago cluster reaches the threshold and the system automatically moves the selected applications (e.g., 10% of the cluster's apps) to the West coast datacenter for one day. As usage returns below the threshold, the system moves the applications back to Chicago. The system notifies a designated monitoring team proactively of the burst to be able to answer customer questions.","In another example, the system is used for cross-cloud portfolio management. An enterprise decides that to manage capacity efficiently on their cloud appliance, they want to put all variable demand apps in a public cloud and their constant demand applications in the appliance or local datacenter resources (and thus be able to run the appliance at higher utilization). While they want their computing resources split, they still want a global view across all of their application's health, to have their application developers manage applications the same way, and to maintain a single view of departmental billing across both (e.g., what costs to allocate to the consumer sales groups, internal IT, B2B sales, and so forth). The enterprise is able to set up the aggregation accounts with the public cloud with the same groups as the appliance and get billing data to integrate on their side. Similarly, they are able to get application-programming interface (API) access to the public cloud monitoring data for the platform their apps are running on as well as application level monitoring, so their network operation center (NOC) has a complete and consistent view of the state of the computing activity of the enterprise.","In another example, an enterprise sets up a globally distributed application with dynamic load balancing. An enterprise customer wants to manage capacity across two or more cloud instances and has a significant amount of their load in independent but geographically distributed instances (e.g., Bing search with a US and UK datacenter that both serve German queries). Under normal circumstances, a global traffic manager sends 50% traffic to each location. When load gets high at the primary location, the system instructs the load balancer to send 75% of the traffic to the UK system, thus freeing up capacity from the US cloud instance, bringing it to acceptable levels. When capacity returns to normal, the system tells the load balancer to return to the 50\/50 split. A variation of this is for the public cloud to be used as a secondary datacenter (with say 1% of load, the customer's site with the appliance to be the other 99%). In the case of a disaster or other reason to move load from the customer's site, 100% of traffic is shifted to the public cloud.","In another example, an enterprise has reached its datacenter's capacity and needs extra computing resources, but does not yet have the available capital to expend to expand the datacenter. In this case, the company can use a public cloud for spillover until they can get the hardware purchase completed.",{"@attributes":{"id":"p-0026","num":"0025"},"figref":"FIG. 2","b":["200","210","220","230","240","250","260","270"]},"The location management component  manages information about multiple datacenter locations at which instances of an application are running. The component  includes information describing how to reach each location, connections available for retrieving management information, user accounts to use for each location with associated security credentials, application and datacenter components from which to gather troubleshooting information and send troubleshooting commands, and so forth. The location management component  receives information describing any migration of application loads or bursting from one datacenter\/cloud to another and updates the managed information so that the component  has a complete picture of all of the locations where the application is running. This allows the system  to present the complete picture and to make management of applications uniform, no matter where or at how many locations the applications are running. As conditions change and applications are distributed, the location management component  can present management tools with a comprehensive set of management data.","The location data store  stores information that describes locations at which instances of the application are running. The data store  may include one or more files, file system, hard drives, databases, cloud-based storage services, or other facilities for persisting information between sessions with the system . The stored information may include connection information, user roles, sources of management data, available log files, and any other information related to management or troubleshooting of applications distributed to multiple locations.","The tool interface component  provides an interface to the system  through which one or more tools can access management and troubleshooting information for the application. The interface may include one or more web pages, web services, application-programming interfaces (APIs), or other interfaces through which an administrator or tools can directly or programmatically access management and troubleshooting information of the system . In some embodiments, the tool interface component  provides an initial connection point for tools to access information related to the application at a cloud-computing appliance located within an enterprise's private datacenter. The appliance may manage migration and distribution of application loads to a public cloud or other datacenter, and provides a central point of contact for tools that gather management information or provide application troubleshooting.","One or more management tools  connect to the tool interface component  to access management information or perform application troubleshooting. The tools may include log viewers, reporting tools, debugging tools, or other tools that display information about or assist in resolving problems with a running application. The management tools  may include tools designed to work with a local application, and the system  provides the tools with information describing a distributed application running at multiple locations without the tool's knowledge. This allows existing tools that administrators rely upon to be used even as automatic application load migration is introduced into a datacenter or cloud. In other cases, tools may be specifically written to understand distributed applications and to provide specific management information or troubleshooting related to multiple locations. The tool interface component  may provide multiple interfaces through which management tools  connect to the system  using paradigms that are understood by each tool.","The data migration component  migrates management information at one or more remote locations where the application is running back to a home location of the application. The home location may include a private datacenter, location or a cloud-computing appliance, or other location where the application normally runs under steady conditions. Upon hitting a certain level of load (e.g., peak or periodic bursts), the application may migrate some load to one or more other datacenters or public clouds to help satisfy client requests. These other locations generate management data, such as log files, transaction data, and so on, just like the home location, and the data migration component  migrates this data back to the home location or provides access to the data from the home location, so that the management tools  can provide a comprehensive picture of the application's activity to administrators.","The troubleshooting component  performs troubleshooting tasks on the application at one or more locations. Troubleshooting may include debugging, processing test data, or other forms of determining whether an application is operating correctly. Troubleshooting is generally well understood at the home location, but becomes more complex as an application begins to span multiple datacenters or clouds. The cloud management system  isolates management tools  and administrators from this complexity by providing a uniform interface through which tools and administrators access management information and perform troubleshooting at multiple locations. Thus, if a management tool allows an administrator to place a breakpoint at or receive trace information from a particular piece of application code at the home location, then the troubleshooting component  makes it just as easy to do so at a remote cloud-based instance of the application. The tools and administrator may even be unaware of all of the locations where the application is running, but can still perform management tasks as if the application were only executing at the home location.","The billing component  reports billing information related to one or more locations where an application is running. One common management task is to manage computing costs, and public clouds often charge based on metrics related to workload (e.g., computing time, storage space used, and so forth). It may be useful for an administrator to gather a picture of the costs that application instances are incurring at various locations, and the cloud management system  can optionally provide the billing component  to gather this type of information so that the information can be reported through management tools and reports.","The computing device on which the cloud management system is implemented may include a central processing unit, memory, input devices (e.g., keyboard and pointing devices), output devices (e.g., display devices), and storage devices (e.g., disk drives or other non-volatile storage media). The memory and storage devices are computer-readable storage media that may be encoded with computer-executable instructions (e.g., software) that implement or enable the system. In addition, the data structures and message structures may be stored or transmitted via a data transmission medium, such as a signal on a communication link. Various communication links may be used, such as the Internet, a local area network, a wide area network, a point-to-point dial-up connection, a cell phone network, and so on.","Embodiments of the system may be implemented in various operating environments that include personal computers, server computers, handheld or laptop devices, multiprocessor systems, microprocessor-based systems, programmable consumer electronics, digital cameras, network PCs, minicomputers, mainframe computers, distributed computing environments that include any of the above systems or devices, set top boxes, systems on a chip (SOCs), and so on. The computer systems may be cell phones, personal digital assistants, smart phones, personal computers, programmable consumer electronics, digital cameras, and so on.","The system may be described in the general context of computer-executable instructions, such as program modules, executed by one or more computers or other devices. Generally, program modules include routines, programs, objects, components, data structures, and so on that perform particular tasks or implement particular abstract data types. Typically, the functionality of the program modules may be combined or distributed as desired in various embodiments.",{"@attributes":{"id":"p-0037","num":"0036"},"figref":"FIG. 3","b":"310"},"Continuing in block , the system identifies one or more types of management data that satisfy the received request. For example, the system may determine that the request asks for log information that is produced by each instance of the application. Identifying the requested data allows the system to determine which information to gather from each application instance or whether the data is already gathered locally from data pushed to a central location by each application instance.","Continuing in block , the system determines a distribution of the application that includes two or more instances of the application. The distribution determines where the application is running and where the system will find management data to satisfy the request. The system may include a data store that tracks information describing each burst or other migration of application load to and from other datacenters, so that the system is aware of each location where application instances are running. Upon receiving the management tool request, this information allows the system to determine from where to gather management data.","Continuing in block , the system gathers management data to satisfy the request from each distributed application instance. The instances may include an instance in a local private datacenter, a remote private datacenter, a private cloud computing facility, a public cloud computing facility, spare resources offered by other private datacenters, and so on. The system contacts each instance of the application or accesses previously sent information from each instance that contains information (such as performance data, failures, and so forth) to satisfy the received management tool request.","Continuing in block , the system optionally sends one or more troubleshooting commands to one or more remote application instances. For example, if one location is experiencing failures, the administrator may use a management tool to request additional trace information, to send one or more test requests, or to perform other types of debugging. The remote application instances carry out the troubleshooting commands and report requested data back to a central location where the management tool can access the information.","Continuing in block , the system unifies gathered data to provide a uniform response to the received management tool request. In this way, management tools need not be written to include an understanding of the various potential distributions of applications managed by the tools. The system can thus freely migrate the application from location to location or to multiple locations as needed to handle application loads, while still providing administrators with a straightforward management and troubleshooting experience.","Continuing in block , the system reports the gathered and unified management data in response to the received management tool request. The system may send the data through the interface on which the request was received or through a notification interface or other facility for providing data to the tool. After block , these steps conclude.",{"@attributes":{"id":"p-0044","num":"0043"},"figref":"FIG. 4","b":"410"},"Continuing in block , the system determines a home location of the application where an administrator can access management data reported by multiple instances of the application running at distributed remote locations. The application instance may receive configuration information from the home location upon creation of the instance that specifies where the home location can be contacted and that the application instance is a remote instance of the application. The system may migrate applications to multiple locations to handle peak loads, perform low priority tasks at locations where processing is off-peak and thus cheaper, or for other reasons determined by an administrator. The application may have a home location that is where the application normally runs and may handle peak or other loads at one or more distributed remote locations.","Continuing in block , the system sends the received management data from the remote application instance to the determined home location of the application. The system may periodically migrate data generated at distributed instances back to the home location so that management data is available in one place at the home location for the convenience of administrators and management tools. The system may also migrate data on demand or as requested by various tools (see, e.g., ). In some cases, the system may burst application loads to remote locations for short durations and then collect information related to the application's execution when the loads are migrated back to the home location and the remote instances are finished.","Continuing in block , the system optionally receives a troubleshooting request from a management tool run at the home location to troubleshoot the remote application instance. The troubleshooting requests may include debug breakpoints, a request for detailed trace information, or other commands or requests to perform troubleshooting actions.","Continuing in block , the system performs one or more troubleshooting actions in response to the received troubleshooting request. The action may include setting a debug breakpoint, turning up a logging level, sending test data to the application, or performing any other action specified by the request for determining whether the application is operating properly.","Continuing in block , the system sends a troubleshooting result to the home location in response to the received troubleshooting request. By providing a facility for executing troubleshooting commands remotely, the system allows a troubleshooting tool operating at the home location to troubleshoot application instances no matter where the instances are running, and allows the system to seamlessly migrate instances of the application to various locations without interrupting the ability of an administrator to manage and troubleshoot the application. After block , these steps conclude.","In some embodiments, the cloud management system migrates application load by modifying domain name service (DNS) records. The system may modify a DNS server to point incoming client requests to one or more new destination Internet Protocol (IP) addresses to direct loads away from a source datacenter over to a target datacenter\/cloud. A global traffic manager (GTM) often points clients to the nearest server for handling their requests, and these solutions can be modified to redirect traffic based on load or other conditions. Thus, when one datacenter becomes overloaded or near capacity, the system may inform the GTM to direct at least some client requests to a new location that can handle the excess load. Similarly, the system may provide a DNS or other address to which management tools can address management requests and be connected to application instances no matter where they reside.","In some embodiments, the cloud management system migrates log and other data back from the target computing resources after migration conditions have eased. For example, following a period of peak load, the system may migrate all application loads back to the original datacenter, and may pull information generated at the target datacenter, such as application logs, back to the original datacenter for later analysis. For some applications, tracking client requests may be a matter of regulatory compliance or simply useful for debugging and reporting. In either case, consolidating the logs at the source location may be part of a successful migration back to the source location.","In some embodiments, the cloud management system allocates a dynamically variable amount of application load between a source computing resource and one or more target computing resources. For example, the system may dynamically route requests to keep the source computing resource at or near full capacity and only send requests out to external computing resources that the source computing resource could not successfully handle. Such decisions may be a matter of cost, data safety, or other considerations to migrate out as little application load as needed or to place application loads where they can be performed cheapest or most efficiently. In some cases, the decisions may be based on regulatory requirements of applications. For example, applications subject to healthcare or other recordkeeping laws may have restrictions about the datacenters\/clouds in which they can operate.","In some embodiments, the cloud management system provides various options for disaster recovery. In some cases, the system may enlist resources at an external datacenter to monitor a main datacenter for outages. If the external datacenter becomes unable to reach the main datacenter, then the external datacenter may determine that a disaster has occurred and move application loads to the external datacenter. In past systems, it was typical for an organization to maintain 200% of needed capacity (at substantial expense) in order to successfully handle disasters. With the cloud management system, the organization can maintain a lower amount of available capacity at a second location (e.g., 10%) and can rapidly request more as needed in the event of a failure. Much like insurance, the likelihood of all clients of a cloud provider failing at the same time and requesting a high capacity spare is low, such that multiple clients can share a set of redundant secondary resources to be used in the event of failure of primary resources. The system may also re-home management tools and troubleshooting resources to point to the new location following disaster recovery so that management continues uninterrupted.","From the foregoing, it will be appreciated that specific embodiments of the cloud management system have been described herein for purposes of illustration, but that various modifications may be made without deviating from the spirit and scope of the invention. Accordingly, the invention is not limited except as by the appended claims."],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"BRIEF DESCRIPTION OF THE DRAWINGS","p":[{"@attributes":{"id":"p-0007","num":"0006"},"figref":"FIG. 1"},{"@attributes":{"id":"p-0008","num":"0007"},"figref":"FIG. 2"},{"@attributes":{"id":"p-0009","num":"0008"},"figref":"FIG. 3"},{"@attributes":{"id":"p-0010","num":"0009"},"figref":"FIG. 4"}]},"DETDESC":[{},{}]}
