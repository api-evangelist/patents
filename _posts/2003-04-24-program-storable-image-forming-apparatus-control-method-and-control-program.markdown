---
title: Program storable image forming apparatus, control method, and control program
abstract: An image forming apparatus has a first execution environment that can interpret and execute a first-format instruction for controlling the image forming apparatus, and a second execution environment that can interpret and execute a second-format instruction defined by a format that does not depend on a type of the image forming apparatus, realized in the first execution environment. The image forming apparatus includes control means for controlling processing of starting execution of the first-format instruction from the second execution environment, using a second-format predetermined instruction, recognition means for recognizing, when interpreting the second-format instruction by executing application software in the second execution environment, whether or not an instruction string to be executed is the second-format predetermined instruction, and control means for controlling the image forming apparatus by starting and executing the first-format instruction via the second-format predetermined instruction when the recognition means has recognized that the instruction to be executed is the second-format predetermined instruction, and for controlling the image forming apparatus so as to execute the second-format predetermined instruction in the second execution environment when the recognition means has recognized that the instruction to be executed is not the second-format predetermined instruction.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=07460253&OS=07460253&RS=07460253
owner: Canon Kabushiki Kaisha
number: 07460253
owner_city: Tokyo
owner_country: JP
publication_date: 20030424
---

{"@attributes":{"id":"description"},"BRFSUM":[{},{}],"heading":["BACKGROUND OF THE INVENTION","SUMMARY OF THE INVENTION","DETAILED DESCRIPTION OF THE PREFERRED EMBODIMENT","OTHER EMBODIMENTS"],"p":["1. Field of the Invention","The present invention relates to an image forming apparatus having a function of a printer, a scanner, a facsimile apparatus, a copier or the like, or a composite apparatus of these apparatuses, and a control method and a control program for the image forming apparatus.","2. Description of the Related Art","Conventionally, in an image forming apparatus and control for the image forming apparatus, it is mainly constructed a system in an execution environment realized by a real-time OS (operating system), having high dependency on an architecture for a built-in system, that is different from a general-purpose OS mounted in a PC (personal computer).","On the other hand, as disclosed in Japanese Patent Application Laid-Open (Kokai) No. 2001-249814 (2001), it is being tried to construct another execution environment for a built-in system, such as Java (registered trade name) or the like, in the above-described real-time OS, and downloading and mounting an application module having high portability for performing, though limited, simple control of a copier.","However, conventional approaches have the following problems. That is, for example, in an image forming apparatus and a control method for the image forming apparatus constructed by a single real-time OS, portability of software of a built-in system is inferior. Accordingly, if modification or the like of only an application module for controlling the image forming apparatus within the image forming apparatus is generated, the entire system must be updated together with an engine control module and the like for which modification is unnecessary. As a result, the operation is inefficient, because, for example, a serviceman or the like must update the system using a special stool or the like.","As described above, aiming at a development environment having high portability, a system is being developed in which another execution environment is constructed in a real-time OS. However, such an approach has insufficient functions such that, for example, an application module in another execution environment cannot access the module in the real-time OS via an internal interface, complicated processing equivalent to the application module in the real-time OS cannot be flexibly performed, and an interface different from an interface for controlling an apparatus of the system must be used in the same apparatus, and has problems in that, for example, formation of application software is complicated.","In conventional management of an application module itself, only functions of downloading and erasing the application module are mounted, and it is impossible to perform settings of, for example, extracting and analyzing an application module causing a problem using an uploading function, and prohibiting execution of a downloaded application module. Other problems are such that, for example, meaningless downloading is performed for application software requiring a function that is not supported by the image forming apparatus, and each OS scrambles for a memory resource or the like within the image forming apparatus, resulting in incapability of performing an efficient operation because a necessary resource is not obtained when performing minimum necessary processing.","The present invention has been made in consideration of the above-described problems.","It is an aspect of the present invention to provide, in an image forming apparatus capable of executing various types of application software and control programs, a scheme to improve the development efficiency of the application software and the control programs.","It is another aspect of the present invention to provide, when constructing a second execution environment in a first execution environment within an image forming apparatus, an environment having high portability of a program in the second environment and having flexibility capable of easily controlling various functions of the image forming apparatus, by providing a scheme to utilize functions provided in the first execution environment from the second execution environment.","It is still another aspect of the present invention to provide a scheme capable of utilizing development resources executable in another execution environment that have been developed in order to control an image forming apparatus, from an execution environment having high portability.","According to one aspect of the present invention, an image forming apparatus having a first execution environment that can interpret and execute a first-format instruction for controlling the image forming apparatus, and a second execution environment that can interpret and execute a second-format instruction defined by a format that does not depend on a type of the image forming apparatus, realized in the first execution environment includes a control unit for controlling processing of starting the first-format instruction from the second execution environment, using a second-format predetermined instruction, a recognition unit for recognizing, when interpreting the second-format instruction by executing application software in the second execution environment, whether or not an instruction string to be executed is the second-format predetermined instruction, and a control unit for controlling the image forming apparatus by starting and executing the first-format instruction via the second-format predetermined instruction when the recognition unit has recognized that the instruction to be executed is the second-format predetermined instruction, and for controlling the image forming apparatus so as to execute the second-format predetermined instruction in the second execution environment when the recognition means has recognized that the instruction to be executed is not the second-format predetermined instruction.","According to another aspect of the present invention, a method in an image forming apparatus having a first execution environment that can interpret and execute a first-format instruction for controlling the image forming apparatus, and a second execution environment that can interpret and execute a second-format instruction defined by a format that does not depend on a type of the image forming apparatus, realized in the first execution environment includes a control step of controlling processing of starting the first-format instruction from the second execution environment, using a second-format predetermined instruction, and a recognition step of recognizing, when interpreting the second-format instruction by executing application software in the second execution environment, whether or not an instruction string to be executed is the second-format predetermined instruction. The image forming apparatus is controlled by starting and executing the first-format instruction via the second-format predetermined instruction when it has been recognized in the recognition step that the instruction to be executed is the second-format predetermined instruction, and the image forming apparatus is controlled so as to execute the second-format predetermined instruction in the second execution environment when it has been recognized in the recognition step that the instruction to be executed is not the second-format predetermined instruction.","According to still another aspect of the present invention, in a computer readable storage medium storing a control program to be executed in an image forming apparatus having a first execution environment that can interpret and execute a first-format instruction for controlling the image forming apparatus, and a second execution environment that can interpret and execute a second-format instruction defined by a format that does not depend on a type of the image forming apparatus, realized in the first execution environment, the control program causes a CPU (central processing unit) to execute the following steps including a control step of controlling processing of starting the first-format instruction from the second execution environment, using a second-format predetermined instruction, a recognition step of recognizing, when interpreting the second-format instruction by executing application software in the second execution environment, whether or not an instruction string to be executed is the second-format predetermined instruction, and a control step of controlling the image forming apparatus by starting and executing the first-format instruction via the second-format predetermined instruction when, in the recognition step, it has been recognized that the instruction to be executed is the second-format predetermined instruction, and for controlling the image forming apparatus so as to execute the second-format predetermined instruction in the second execution environment when, in the recognition step, it has been recognized that the instruction to be executed is not the second-format predetermined instruction.","According to yet another aspect of the present invention, an image forming apparatus controlled by executing a program includes storage means for storing the program. The program includes a first execution environment, a control module for controlling an engine executed in the first execution environment, a first interface for accessing the control module, a second execution environment, and a second interface for accessing the control module in the first execution environment from the second execution environment.","According to yet a further aspect of the present invention, an image forming apparatus controlled by executing a program includes storage means for storing the program. The program includes a first execution environment, a control module for controlling an engine executed in the first execution environment, a first application module executed in the first execution environment for causing the engine to perform processing by controlling the engine, a plurality of second application modules, having a first interface for causing the first application module to access the control module, and a second execution environment, executed in the second execution environment, and a second interface for causing the second application modules to access the control module in the first execution environment.","Other features and advantages of the present invention will be apparent from the following description taken in conjunction with the accompanying drawings, in which like reference characters designate the same or similar throughout parts thereof.","A first preferred embodiment of the present invention will now be described with reference to the drawings.",{"@attributes":{"id":"p-0039","num":"0038"},"figref":"FIG. 1","b":["100","200","1","2","3","4","7","8","10"]},"The reader unit  reads an image of an original set on the image forming apparatus, and outputs image data corresponding to the original-image to the printer unit  via the core unit . The printer unit  records an image corresponding to the image data from the reader unit  on a recording sheet.","Each of computers  and  is an example of an information processing apparatus, and comprises a personal computer or a work station (PC\/WS). PDL print data is transmitted from each of the computers  and  to the core unit  via a network  and the network processing unit . The PDL developing unit  develops the PDL data into image data that can be recorded by the printer unit . The image data is printed by the printer unit  after passing through the core unit .","A facsimile apparatus  performs, for example, facsimile transmission of the original-image read by the reader unit  via the core unit , the modem communication unit  and a public network . Image data from another facsimile apparatus is received via the public network , the modem communication unit  and the core unit , and an image corresponding to the received image data is printed by the printer unit (printer-engine unit) .","Each of hard disks  and  within the computers  and , respectively, is an example of storage means of the information processing apparatus of the invention. Each of display devices  and  within the computers  and , respectively, is, for example, an LCD (liquid-crystal display). Each of input devices  and  of the computers  and , respectively, is a keyboard. The configuration shown in  is only an example. The present invention is not limited to the configuration shown in .",{"@attributes":{"id":"p-0044","num":"0043"},"figref":"FIG. 2","b":["100","100","150","180"]},"The image forming apparatus main body  includes platen glass , a scanner , scanning mirrors  and , a lens , a CCD (charge-coupled device) sensor (image sensing unit) , a photosensitive drum , a primary charger , a pre-exposure lamp , a cleaning device , a transfer charger , an exposure control unit , a developing unit , a transfer belt , an upper cassette , a lower cassette , pickup rollers  and , sheet feeding rollers  and , registration rollers , an attraction charger , a transfer-belt roller , pre-fixing chargers  and , a fixing unit , a sheet discharge roller , a sheet discharge flapper , an inversion path , a sheet refeeding tray , a multiplex flapper , a conveying path , a sheet feeding roller , a path , a discharge roller , a first feeding roller , a second feeding roller , and an inversion roller . In this configuration, the reader unit  shown in  corresponds to a portion from the platen glass  to the CCD sensor , and the printer unit  shown in  corresponds to a portion from the photosensitive drum  to the inversion roller .","First, the reader unit  will be described in detail. The platen glass  is an original-mount. The scanner  includes an original-illuminating lamp , a scanning mirror  and the like. By being subjected to reciprocating scanning in a predetermined direction by a motor (not shown), the scanner  causes reflected light  from an original to pass through the lens  via scanning mirrors - and to be focused onto the CCD sensor . The reflected light is converted into an electrical signal by the CCD sensor . The electrical signal is subjected to A\/D (analog-to-digital) conversion and shading correction by a scanner-image processing unit (not shown) provided near the CCD sensor , and is stored in a memory  as digital image data via a gate array  of the core unit  (to be described later).","Next, the printer unit  will be described in detail. The exposure control unit  includes a laser, a polygonal scanner and the like. The exposure control unit  reads the digital image data stored in the memory  of the core unit . The gate array  of the core unit  converts the digital image data into a video signal, and transmits the video signal to the printer unit  via an I\/F (interface) . A laser beam  modulated based on the video signal is projected onto the photosensitive drum . The primary charger , the developing unit , the transfer charger , the cleaning unit , the pre-exposure lamp  are disposed around the photosensitive drum . In an image forming unit  including the photosensitive drum  as a main component, the photosensitive drum  is rotated in the direction of an arrow shown in  by a motor (not shown), and the surface of the photosensitive drum  is charged to a desired potential by the primary charger . Then, the laser beam  from the exposure control unit  is projected onto the photosensitive drum , to form an electrostatic latent image.","A transfer sheet fed from the upper cassette  or the lower cassette  by the pickup roller  or  is fed to the main body by the sheet feeding rollers  or , respectively, is further fed to the transfer belt  by the registration rollers , and a visualized toner image is transferred onto the transfer sheet by the transfer charger . Toner particles remaining on the photosensitive drum  after the image transfer are cleaned by the cleaning unit , and remaining charges are removed by the pre-exposure lamp . The transfer sheet after the image transfer is separated from the transfer belt , and toner particles are recharged by the pre-fixing chargers  and . Then, the transfer sheet is fed to the fixing unit  where the toner image is fixed by pressure and heat, and is discharged outside of the main body  by the sheet discharge roller .","The attraction charger  attracts the transfer sheet fed from the registration rollers  onto the transfer belt . The transfer-belt roller  is used for rotating the transfer belt , and for attracting the transfer sheet onto the transfer belt  in cooperation with the attraction charger .","The image forming apparatus main body  also includes the deck  that can accommodate, for example, 4,000 transfer sheets. A lifter  of the deck  raises in accordance with the amount of transfer sheets so that transfer sheets always contact the sheet feeding roller . The image forming apparatus main body  also includes a multiple-sheet manual insertion unit  that can accommodate, for example,  transfer sheets.","The sheet discharge flapper  switches the sheet path between a duplex recording side or a multiplex recording side, and a sheet discharge side. The transfer sheet fed from the sheet discharge roller  is switched to the duplex recording side or the multiplex recording side by the sheet discharge flapper . The multiplex flapper  performs switching between a duplex-recording path and a multiplex-recording path. By turning the multiplex flapper  to the left, the transfer sheet is directly guided to the conveying path  without passing through the inversion path . The sheet feeding roller  feeds the transfer sheet to the photosensitive drum  via the path .","The discharge roller  is disposed near the sheet discharge flapper . The sheet discharge flapper  discharges the transfer sheet switched to a sheet discharge side, outside of the apparatus. During duplex recording (or duplex copying), the multiplex flapper  is turned to the right by raising the sheet discharge flapper  to feed the transfer sheet, on which recording (copying) has been performed, through the inversion path . Then, the multiplex flapper  is turned to the left, and the transfer sheet is stored on the sheet refeeding tray  in a state in which the transfer sheet is inverted, via the conveying path . Transfer sheets stored in the sheet refeeding tray  are individually guided, from the lowest sheet, to the registration rollers  of the main body via the path  by the sheet feeding roller .","When discharging the transfer sheet from the main body in an inverted state, the sheet discharge flapper  is raised, the multiplex flapper  is turned to the right, and the transfer sheet on which recording (copying) has been performed is conveyed to the conveying path . After passage of the trailing edge of the transfer sheet through the first feeding roller , the transfer sheet is conveyed to the second feeding roller by the inversion roller , and is discharged outside of the apparatus in a state in which the transfer sheet is inverted by the discharge roller . The transfer sheet discharged outside of the apparatus is conveyed to a finisher .","The finisher  stacks transfer sheets on which printing has been performed by the image forming apparatus . A path  receives transfer sheets on which printing has been performed by the image forming apparatus . A roller  feeds the transfer sheet conveyed from the path  to a path  or a path . In order to feed the transfer sheet to the path , the sheet discharge flapper  is moved downward. In order to feed the transfer sheet to the path , the sheet discharge flapper  is moved upward. When the transfer sheet passes through the path , the transfer sheet is discharged onto a bin  by a roller . When the transfer sheet passes through the path , the transfer sheet is discharged onto a bin . For example, by discharging the transfer sheet onto the bin  when a copying operation has been performed, and discharging the transfer sheet onto the bin  when a PDL printing operation has been performed, usability of the apparatus by the user is improved.",{"@attributes":{"id":"p-0055","num":"0054"},"figref":"FIG. 17","b":["10","10","1701","1706","1707","1708","1702","1705","1703","1704"]},"In the above-described configuration, image data from the reader unit  is transferred to the data processing unit  via the I\/F . The data processing unit  performs image processing, such as image rotation processing, magnification varying processing or the like. The image data transferred to the data processing unit  is stored in the memory  via the CPU  as digital image data. The image data is also transferred to the printer unit  via the CPU , the data processing unit  and the I\/F , in accordance with a control command from an operation unit , serving as a preferable example of a display unit of the invention. The image data is also transferred to the modem processing unit  and the network processing unit  via the I\/F . The operation unit  comprises, for example, a liquid-crystal panel. The liquid-crystal panel has a touch-panel function in which key selection corresponding to a predetermined instruction or setting is realized by touching the panel with a finger.","Code data representing an image input via the network processing unit  is transferred to the CPU  via the I\/F . When the CPU  determines that the code data represents a PDL code, the PDL code is transferred to the PDL developing unit  via the I\/F . The PDL developing unit  develops the PDL code into image bit-map data. The image bit-map data is stored in the memory  via the I\/F  and the CPU . Then, the image bit-map data is transferred to the printer unit  via the CPU , the data processing unit  and the I\/F , to be subjected to printing.","Facsimile image data from the modem processing unit  is transferred to the data processing unit  via the I\/F  and the CPU , and is then transferred to the printer unit  via the I\/F .","The CPU  performs the above-described control in accordance with control programs stored in the memory , and control commands received from the operation unit  via the I\/F . The memory  is also used as an operation region for the CPU . As described above, this image forming apparatus can perform processing combining the functions of reading of an original-image, printing of an image, transmission\/reception of an image, storage of an image, input\/output of data from a computer, and the like, mainly at the core unit  of the control unit . The interface unit (I\/F) , serving as a preferable example of input means of the present invention, can download various types of application software and control programs from a server on an external network or another image forming apparatus, and store the downloaded data in the memory . A detachable memory slot (not shown) may be considered as another preferable example of input means. It is possible to download a program not only from a network, but also from a flexible disk or an IC (integrated circuit) card connected to the memory slot, or a portable storage medium, such as a DVD (digital versatile disc), a CD(compact disc)-ROM (read-only memory) or the like, and store the program in the memory .",{"@attributes":{"id":"p-0060","num":"0059"},"figref":"FIG. 3","b":["300","10","100"]},"In , reference numeral  represents a first execution environment of the present invention for controlling the entire image forming apparatus. The first execution environment  is generally respective modules of a real-time OS that can control respective functions of the copier in a real time, or a group of libraries capable of critically controlling respective functions, including optional devices and expansion cards, of the copier by instructing the CPU, and is realized by a group of modules for supplying application software operating at a higher hierarchy with interface commands. A control unit  operates in the first execution environment , and includes modules for controlling the reader unit , the printer unit , the modem communication unit , the PDL developing unit  and the like.","An application programming interface (hereinafter abbreviated as an \u201cAPI\u201d)  has the functions of performing processing for accessing the control unit , and transmitting control commands to the composite apparatus  or the like via the network processing unit  and the network , in response to a command string input from application software. Application software  operates in the first execution environment , and asks various types of processing to the control unit  using the API . The application software  can also communicate with computers (information processing apparatuses) ,  and  on the network  via the network processing unit .","Reference numeral  represents a second execution environment that is most suitable for executing specific application software. The second execution environment  is realized by a Java virtual machine, or the like. An API  is for access of application software in the second execution environment  to the control unit  operating in the real-time OS , serving as the first execution environment. In the first embodiment, the API  has the function of a conversion module for calling the API , and the function of transmitting control commands to the image forming apparatus  or the like via the network processing unit  and the network .","A framework module  has the function of overall control of application software in the second execution environment . Reference numeral  represents application software for managing other application software in the second execution environment . The application software  performs downloading, uploading, erasure and invalidation of each of sets of application software  and  (to be described below) in cooperation with the framework module .","Each of the sets of application software  and  operates in the second execution environment , and asks the control unit  for various types of processing using the API . Each of the sets of application software  and  can also communicate with the information processing apparatuses ,  and  on the network  via the network processing unit .","A resource managing unit  manages resources used by the second execution environment , and operates in the real-time OS for realizing the first execution environment. The resource managing unit  provides limitation so that resources more than predetermined ones cannot be used, when the virtual machine  itself for realizing the second execution environment, the API , the framework module , or each application software in the OS  uses resources, such as a memory and the like.","First, the API  will be described. The API  is a set of interfaces in the real-time OS  corresponding to a plurality of control commands for accessing the control unit  that is controlled by the real-time OS , serving as the first execution environment. Each of the interfaces corresponding to each of the control commands has a parameter for assigning an apparatus for which the control command is to be executed, and can assign the control unit  within the same apparatus and the control unit  of the image forming apparatus  connected via the network .",{"@attributes":{"id":"p-0068","num":"0067"},"figref":"FIG. 4","b":["303","303","303"]},"In the first embodiment, it is assumed that an interface A corresponding to a control command A is called. In this case, it is assumed that a command and an interface are in one-to-one correspondence. However, a combination of a plurality of commands may be considered as a new command that coffesponds to the interface A. The application software  calls the interface A of the API  (step ). An identifier representing an image processing apparatus to be processed can be added to the interface A. The API  interprets the identifier added to the interface A. When it is determined that the apparatus indicated by the identifier is the image forming apparatus itself including the API , then, in step , corresponding processing is performed by executing the command A for the control unit . When it is determined that the object to be controlled by the command is an external apparatus (the image forming apparatus ) using the identifier, then, in step , the API  transmits data of a packet format corresponding to the command of the network  via the network processing unit . The network processing unit (acquisition means)  of the image forming apparatus  acquires a command from the above-described data of the packet format, and transmits data of the command A to the communication application software . The communication application software  recognizes the interface A coffesponding to the command A, and in step , calls the interface A of the API  for the control unit  within the apparatus.","At that time, the interface A called in step  may be the same as the interface A called in step . Since an object to be processed by the command is within the apparatus, the API  performs processing corresponding to the command A for the control unit . At that time, the processing corresponding to the command in step  is the same as the processing corresponding to the command in step .",{"@attributes":{"id":"p-0071","num":"0070"},"figref":["FIG. 5","FIG. 4"],"b":["306","501","2","309","306"]},"Each interface included in the API  is a preferable example of a second-format command of the invention. Each interface included in the API  is a preferable example of a first-format command of the invention.","First, the API  will be described in detail. The API  is a set of interfaces in the second execution environment , and includes an interface that can call an interface provided by the API . Each interface corresponding to each command of the API  has a parameter for assigning an object for which a control command is to be executed, as in the case of the API . The control unit  within the same apparatus or the control unit  of the image forming apparatus  connected to the network  can be assigned.","A case, in which the interface A for which the control command must be executed by being converted into the first execution environment is called, will now be considered. If an object for processing to be started by the called interface A is within the apparatus, an interface of the API  is called. When an interface of the API  has been called, an interface of the API  that can be interpreted by the real-time OS  is started and called. Then, the interface of the API  starts processing corresponding to the command A (step ). The API  performs processing corresponding to the command A for the control unit  (step ). If the object for which the command is to be executed is outside of the apparatus (for example, the image forming apparatus ), a packet corresponding to the command of the network  is transmitted via the network processing unit  (step ). The network processing unit  of the image forming apparatus  receives the transmitted packet, and transmits packet data coffesponding to the command A to the communication application software  (step ). The communication application software  calls the interface A of the API  for the control unit  within the apparatus (step ). At that time, the interface called in step  is the same as the interface A called in step .","As described above, it is possible to provide the API  which is a group of interfaces that does not depend on whether or not a function to be operated is within the image forming apparatus or within another image forming apparatus, a difference between the architectures of apparatuses, and a difference between OS's. By utilizing the API , it is possible to develop various types of application software only by studying the system of the API  of the execution environment , and call and utilize the API  without requiring overheads. Accordingly, it is possible to utilize various functions of the image forming apparatus if there exists the API , serving as development resources, when performing control.","Since an object to be processed by the command is within the apparatus, the API  performs processing corresponding to the command A for the control unit , in step . At that time, the processing corresponding to the command in step  is, of course, the same as the processing corresponding to the command in step . Of course, the processing from step  to step  is the same as the processing from step  to step , and the operation when using the API  is the same as the operation when using the API . shown in  is started. In step S, the interface called by the virtual",{"@attributes":{"id":"p-0077","num":"0076"},"figref":["FIG. 18","FIG. 18","FIG. 5","FIG. 5","FIG. 18"],"b":["305","305","1801","305","1802","305","301","1802","1804","1805","1802","1806","305","1806","303","503","1808","1809"]},"In the control of the engine unit, the control program to be executed in the first execution environment includes various controllers for controlling the engine unit, and, when a video controller unit, a DC controller unit and a network board are provided, also includes control commands for controlling the network board, and the contents of storage of the memory in the HDD (hard-disk drive) within the image forming apparatus.","For example, a program not requiring a critical response, such as an application module for realizing a graphical user interface of an operation panel of a copier or a printer by software, can be used as application software for calling processing of the ordinary method. A case of calling a printer-engine control program via, for example, a Java native-method interface for processing requiring a critical response for controlling an engine control unit (engine unit) for a copier, a printer or the like, from application software may be considered as a case of calling the native method.",{"@attributes":{"id":"p-0080","num":"0079"},"figref":["FIG. 6","FIG. 1"],"b":["500","301"]},"A copy-mode key  is depressed when performing a copying operation. When the copy-mode key  has been displayed, a picture frame  indicating a copy mode shown in  is displayed. By depressing an expanded-function key , a mode of setting duplex copying, multiplex copying, movement, a binding margin, frame erasure and the like is provided.","An image-mode key  is for providing a setting mode for performing half-tone dot meshing, shadowing, trimming or masking for a copied image.","A user-mode key  is for registering a mode memory or setting a standard-mode picture frame.","An application-zoom key  is a mode of independently setting magnifications in the x-direction and the y-direction of an original, and a zoom-program mode of calculating a magnification ratio from the sizes of an original and a copy. An M1 key , an M2 key  and an M3 key  are depressed when calling respective registered mode memories. An option key  is for setting an optional function, such as a film projector or the like, in order to perform direct copying from a film.",{"@attributes":{"id":"p-0085","num":"0084"},"figref":["FIG. 18","FIG. 18","FIG. 5","FIG. 5","FIG. 18"],"b":["305","305","1801","305","1802","305","301","1802","1804","1805","1802","1806","305","1806","303","503","1808","1809"]},"A HiFi key  is depressed when copying an original having a high halftone density, such as a photograph original or the like. A character-emphasis key  is depressed when intending to emphasize characters in copying of a character original. A transmission-mode key  is depressed when performing facsimile transmission or the like. A box-mode key  is depressed when operating data stored in a box. The copying-mode key , the transmission-mode key  or the box-mode key  corresponds to an operation of selecting the application software  executed in the OS .","An expanded-mode key  is a mode key of the present invention, and is for shifting to a picture frame (see ) for selecting and executing application software executed in the second execution environment  of the invention. Although in the first embodiment, the expanded-mode key  is displayed in the same manner as in selection of other mode keys, the expanded-mode key  may be displayed so as to be visually recognized more easily, for example, by changing the size or the design of the key.","A status line  displays a message indicating the state of the apparatus or printing information. In the case of , the status line  displays that a copying operation is being performed. By depressing a history key , history information of a job that has completed a printing operation is displayed. For example, information relating to the time of completion of printing, the user name, the file name, the number of copies, and the like are displayed.","When execution of a copying operation is instructed using a Start key (not shown) or the like while the copy-mode picture frame  is displayed, an interface for starting processing, an interface for setting various parameters, and the like are sequentially called for the API  (step ). Usually, since a copying operation is instructed to the inside of the apparatus, a command is transmitted to the control unit  in the API  (step ), and as a result, a copying operation is executed.",{"@attributes":{"id":"p-0090","num":"0089"},"figref":["FIG. 7","FIG. 1","FIG. 7"],"b":["500","305","730","730","740"]},"A display picture frame  corresponds to the current setting items. A summary of setting  displays the current setting items and the contents of the respective setting items. The current setting items are displayed so as to be visually recognized according to emphasis display or the like. In this embodiment, emphasis display is realized by thickening characters. However, any other appropriate display may be adopted provided that selected items can be easily identified. Reference numeral  represents the current setting of the number of copies. Reference numeral  represents the current setting of sheets.","Reference numeral  represents the current setting of Nup. Reference numeral  represents the current setting of duplex printing. Reference numeral  represents the current setting of sorting. Reference numeral  represents the current setting of stapling. A button  is used when returning to the contents of immediately preceding setting. When the button  is depressed, the display picture frame  is redisplayed in the contents corresponding to the set item. In the first embodiment, if the corresponding item is absent, the button  may be set in a non-displayed state. A button  is used when preceding to the contents of the next setting. When the button  is depressed, the display picture frame  is redisplayed in the contents corresponding to the set item. A status line  displays a message indicating the state of the apparatus or printing information. In the case of , the status line  displays that a copying operation is being performed.","Each of an App2-mode key  and an App3-mode key selects corresponding application software. An Original-mode key  is a mode key of the invention, and for shifting to a picture frame (see ) for selecting and executing application software executed in the real-time OS , serving as an example of the first execution environment of the invention. Although in the first embodiment, the Original-mode key  is displayed in the same manner as other mode selection keys, this key may be displayed so as to be visually recognized more easily, for example, by changing the size or the design of the key. When execution of a copying operation is instructed using a Start key (not shown) or the like to the API  while the simplified copying mode picture frame  is displayed, an interface for starting processing, an interface for setting various parameters, and the like are sequentially called for the API  (step ). Usually, since a copying operation is instructed to the inside of the apparatus, a corresponding interface of the API  is called (step ). The API  transmits a command to the control unit  in the apparatus (step ), and as a result, a copying operation is executed.",{"@attributes":{"id":"p-0094","num":"0093"},"figref":"FIG. 11","b":"1101"},"Reference numeral  represents the current status of application software. \u201cStart\u201d indicates that the corresponding application software is currently being executed, and \u201cStop\u201d indicates the corresponding application software is not executed. Reference numeral  represents a version of application software. Reference numeral  represents the date of download. Reference numeral  represents the storing location of the downloaded application software. Reference numeral  represents the type of application software. \u201cGeneral\u201d indicates ordinarily used application software, and \u201cSystem\u201d indicates application software used for a special use.","Reference numeral  represents whether or not a certain display is to be performed on a UI, i.e., the operation unit. \u201cYes\u201d indicates that display is to be performed. Reference numeral  represents a version of the framework module  necessary for executing application software. Reference numeral  represents a version of the API  necessary for executing application software. Information held as application-software information is not limited to the above-described one. For example, information relating to the information processing apparatus serving as the source of downloading may be stored.",{"@attributes":{"id":"p-0097","num":"0096"},"figref":"FIG. 8","b":["308","100","30","36","11","12","500","100","11","12","2","1"]},"Reference numeral  represents a summary of sets of application software that are already downloaded. In the first embodiment, only sets of application software whose type  shown in  is \u201cgeneral\u201d are displayed. Reference numeral  represents the name of application software, in which the contents of the application-software name  shown in  are displayed. Reference numeral  represents the current status of application software, in which the contents of the status  shown in  are displayed.","Reference numeral  represents a version of application software, in which the contents of the version  shown in  are displayed. Reference numeral  represents the date of download, in which the contents of the date  shown in  are displayed. A \u201cdownload\u201d button  is selected when newly downloading application software. After the selection, the picture frame shifts to a downloading picture frame shown in  (to be described later). An \u201cupload\u201d button  is for selecting desired application software from the summary of sets of application software. By selecting this button, downloaded application software is uploaded in a predetermined information processing apparatus. After the selection, the picture frame shifts to an uploading picture frame shown in  (to be described later)","An \u201cerase\u201d button  is selected when erasing application software. Desired application software is selected from the summary of sets of application software. By selecting this button, application software is deleted from the image forming apparatus . By instructing start of predetermined application software to the framework module  using an application-software start button  of the invention, the application software being stopped is started.","By instructing stop of predetermined application software to the framework module  using an application-software stop button  of the invention, application software being started is stopped.","A mode key  is for selecting the application-software managing software of the invention.","A simplified-copying-mode key  is the same as the simplified-copying-mode key  shown in . Reference numeral  represents a App3-mode key. A status line  displays a message indicating the state of the apparatus or printing information. In the case of , the status line  displays that a copying operation is being performed. The contents displayed on the application-software summary  are not limited to the above-described ones. Furthermore, the order of display and the method of display are not particularly provided.",{"@attributes":{"id":"p-0104","num":"0103"},"figref":"FIG. 9","b":["100","30","36","11","12","500","100","11","12"]},"An input field  is for assigning application software to be downloaded. In the first embodiment, it is assumed that predetermined application software is downloaded from the information processing apparatus  connected via the network . A button  is for interrupting the processing of this picture frame and shifting to the picture frame shown in . A button  is for instructing start of a downloading operation. By depressing this button, the processing of a flowchart shown in  (to be described later) is executed.","The method for assigning application software to be downloaded is not limited to the method of the first embodiment. For example, a configuration may be adopted in which the information processing apparatuses ,  and , and the like on the network  are visually arranged, the contents of the storage devices  and  within each information processing apparatus are visually displayed, and an object to be downloaded is selected.",{"@attributes":{"id":"p-0107","num":"0106"},"figref":"FIG. 12","b":["1201","11","901","1201","1202","1201"]},"In step S, a location for storing the downloaded data is formed The data is stored in a predetermined position of the memory . In step S, the data is downloaded. Predetermined data in the information processing apparatus  is downloaded in the field formed in step S. The data to be downloaded may be compressed by certain means, or comprises a plurality of files.","In step S, part of the downloaded data is analyzed, and a version of the framework module  from among information necessary for execution of the downloaded application software is checked. If the result of the check in step S is OK, the process proceeds to step S. If the result of the check in step S is NG, the process proceeds to step S. In step S, part of the downloaded data is analyzed, and a version of the API  from among information necessary for execution of the downloaded application software is checked. If the result of the check in step S is OK, the process proceeds to step S. If the result of the check in step S is NG, the process proceeds to step S.","In step S, the downloaded data is registered in the application information shown in  as operable application software.","In step S, since the downloaded data is determined as inoperable application software, it is deleted from the memory .",{"@attributes":{"id":"p-0112","num":"0111"},"figref":["FIG. 10","FIG. 8"],"b":["1001","1002","12","5"]},"A button  is for interrupting the processing of this picture frame, and shifting to the picture frame shown in . A button  is for instructing start of an uploading operation. After confirming the location of uploading assigned in step S, all of the contents downloaded in the downloading step S shown in  are uploaded. The method for assigning an information processing apparatus where data is to be uploaded is not limited to the method of the first embodiment. For example, a configuration may be adopted in which the information processing apparatuses ,  and , and the like on the network  are visually arranged, the contents of the storage devices  and  within each information processing apparatus are visually displayed, and a location where data is to be uploaded is selected.",{"@attributes":{"id":"p-0114","num":"0113"},"figref":"FIG. 13","b":"311"},"In step S, it is determined whether or not a request for acquiring a memory performed via the OS  is to be accepted. If the result of the determination in step S is affirmative, the process proceeds to step S. If the result of the determination in step S is negative, the process proceeds to step S. In step S, it is checked if the size obtained by adding the memory size for the current request to the sum of the memory size for past requests for memory acquisition reaches an upper limit. If the result of the check in step S is OK, the process proceeds to step S. If the result of the check in step S is NG, the process is terminated assuming an error status.","In step S, the memory size for the current request is added to the sum of the memory size for past requests for memory acquisition, and a requested memory region is allocated. In step S, it is determined whether or not a request for memory release is present. If the result of the determination in step S is affirmative, the process proceeds to step S. If the result of the determination in step S is negative, the process proceeds to step S. In step S, the memory size for the current request is subtracted from the sum of the memory size for past requests for memory acquisition performed via the OS , and the allocated memory region is released.","In step S, it is determined whether or not a request for generating a thread is present. If the result of the determination in step S is affirmative, the process proceeds to step S. If the result of the determination in step S is negative, the process proceeds to step S. In step S, it is checked if a number obtained by adding the current request to the number of threads generated in past via the OS  reaches a predetermined usable upper limit. If the result of the check in step S is OK, the process proceeds to step S. If the result of the check in step S is NG, the process is terminated assuming an error status.","In step S, the current request is added to the number of threads generated in past via the OS , and a thread is generated.","In step S, it is determined whether or not a request for releasing a thread is present. If the result of the determination in step S is affirmative, the process proceeds to step S. If the result of the determination in step S is negative, the process proceeds to step S. In step S, the thread of the current request is subtracted from the number of threads generated in past via the OS , and the allocated thread is released. In step S, other processing is performed. Although in the first embodiment, only the amount of use of the memory and the number of generated threads are described, the present invention may, of course, also be applied to any other appropriate resources, such the number of sockets used for communication in the network processing unit .","Next, a second embodiment of the present invention will be described with reference to , , , ,  and .","As shown in the summary of application software  in , the number of sets of application software that can be downloaded or started in the first embodiment can be increased from the number of the mode keys ,  and  shown in  (three in the first embodiment).","The second embodiment deals with such a situation.",{"@attributes":{"id":"p-0123","num":"0122"},"figref":["FIG. 14","FIG. 8","FIG. 5"],"b":["1401","305"]},{"@attributes":{"id":"p-0124","num":"0123"},"figref":["FIG. 15","FIG. 6"],"b":["1401","1501","301","733"]},"When the Scan application software is stopped or erased in the operation picture surface shown in , the picture frame returns to the picture frame shown in . That is, since it is arranged so that only selection keys up to four keys at maximum, inclusive of a key for shift, are displayed on one picture frame, if the Scan application software is added and started in the state shown in , the state shown in  appears, and the expanded-mode-2 key  appears. Upon depression of the expanded-mode-2 key , the picture frame shifts to the picture frame shown in . When other programs are further added in the state shown in , selection keys successively appear at upper portions of  (to the right of the Scan key and to the left of the Original key), resulting in a picture frame similar to  (drawing omitted).",{"@attributes":{"id":"p-0126","num":"0125"},"figref":"FIG. 16","b":["1601","1602"]},"Although in the second embodiment, only the case in which the number of sets of application software at the OS  increases is described, the present invention may, of course, also be applied to a case in which the number of sets of application software at the OS  increases, by using an Original-mode key, an Original-2-mode and the like.",{"@attributes":{"id":"p-0128","num":"0127"},"figref":["FIG. 19","FIG. 10","FIG. 8","FIG. 15","FIG. 8","FIG. 9","FIGS. 14 and 15"],"b":["1003","1901","1910","1902","1902","9","820","823","1902","1903","9","1902","1904"]},"If the result of the determination in step S is negative due to exhaustion of an ID that can correspond to the display picture frame, or full occupation of the storage region, the process proceeds to step S, where error processing is performed. If the result of the determination in step S is affirmative, the process proceeds to step S, where the control application software  generates display control information for a new display picture frame and registers the information in the memory. Then, in step S, the control application software  alternately calls the current picture frame in step S and the new display picture frame, to correlate them so as to be shifted. Then, in step S, display control information (for example, display control information shown in ) is registered in the memory so that a function selection key (for example, the expanded-mode-2 key ) for calling the new picture frame is newly displayed. Then, in step S, display control information is registered in the memory so that the function selection key for instructing selection of new application software is displayed in the new display picture frame added in step S. Then, in step S, updated registration of making the current picture frame in step S an added picture frame in which a function selection key cannot be further added, and making the new picture frame added in step S the current picture frame is performed, and then the process is terminated.","Using a plurality of managing application software mounted within the image forming apparatus, processing of downloading a program (first application software) in the real-time OS and a program (second application software) in the virtual machine from an outside of the image forming apparatus into the image forming apparatus, uploading the programs from the image forming apparatus into an outside of the image forming apparatus, or erasing or invalidating the programs may be performed.","A case in which managing application software deletes application software executable in the virtual machine can also be considered. For example, a display control program (determination means\/display control means) displays selection keys including a plurality of selection keys for selecting and assigning a desired program from among a plurality of programs stored in a copier on a display picture frame of an operation unit of the copier. In response to deletion of a program within the copier, it is determined whether or not a selection key corresponding to application software to be deleted, and a key corresponding to application software to be remained within the image forming apparatus can be displayed on one picture frame of the display picture frame of the display unit. For example, in the state shown in , when the erasure button  is depressed, Scan application software is deleted. At the same time, it is arranged so that the expanded-mode-2 button is not displayed from the display picture frame (the first display picture frame) shown in . That is, the display control program registers display information prohibiting calling of the picture frame (the second display picture frame) shown in  from the display picture frame (the first display picture frame) shown in  in the memory.","In the API  and the control unit  shown in , if exclusive execution of a control command of the image forming apparatus is allowed, it is arranged to call an interface controlling the image forming apparatus via the API  both from the first execution environment and the second execution environment. Accordingly, an application module in each of the execution environments can sequentially use the functions of the image forming apparatus. As a result, it is possible to stably operate the image forming apparatus.","It is possible to develop and use application software having equivalent capabilities in any of the execution environments. It is possible to develop and execute a control program aiming at part of performances in the first execution environment. As described above, the user can select the first execution environment or the second execution environment in accordance with requests for specifications, such as portability, a response property or the like. It is only necessary to add an identifier to an interface, and a composite apparatus automatically causes an appropriate apparatus to execute a command by determining the identifier. Accordingly, it is possible to realize compatibility with a communication environment, such as a network environment or the like.","By allowing to download, upload, erase or invalidate an application module from an external interface of an image forming apparatus, the operability of the image forming apparatus can be improved.","When adding application software, by comparing versions or the like, and prohibiting downloading of the application software when conditions do not coincide, the reliability of an image forming apparatus can be improved.","The processes show in , , ,  and the like in the first embodiment are executed by each of the image forming apparatuses  and  based on a program installed from the outside. In such cases, the present invention may also be applied to a case in which an information group including the program is supplied from a storage medium, such as a CD-ROM, a flash memory, an FD (floppy disk) or the like of an external computer, or from an external storage medium via a network.","The objects of the present invention may, of course, also be achieved by supplying a system or an apparatus with a storage medium storing program codes of software for realizing the functions of the above-described embodiments, or downloading the program codes from an external server (now shown), and reading and executing the program codes stored in the storage medium by means of a control unit (a CPU or an MPU (microprocessor unit)) of the system or the apparatus.","In such a case, the program codes themselves read from the storage medium realize the new functions of the present invention, so that the storage medium storing the program codes constitutes the present invention. For example, a floppy disk, a hard disk, an optical disk, a magnetooptical disk, a DVD (digital versatile disc), a CD-ROM, a magnetic tape, a nonvolatile memory card, a ROM, an EEPROM (electrically erasable and programmable read-only memory), or the like may be used as the storage medium for supplying the program codes.","The present invention may, of course, be applied not only to a case in which the functions of the above-described embodiments are realized by executing program codes read by a CPU, but also to a case in which an OS or the like operating in a computer executes a part or the entirety of actual processing, and the functions of the above-described embodiments are realized by the processing. The present invention may, of course, also be applied to a case in which, after writing program codes read from a storage medium into a memory provided in a function expanding board inserted into an image forming apparatus or in a function expanding unit connected to a computer, a CPU or the like provided in the function expanding board or the function expanding unit performs a part or the entirety of actual processing, and the functions of the above-described embodiments are realized by the processing.","As described above, according to the present invention, in an image forming apparatus capable of executing various types of application software and control programs, it is possible to improve the development efficiency of the application software and the control programs.","According to another aspect of the present invention, when constructing a second execution environment in a first execution environment within an image forming apparatus, it is possible to realize an environment having high portability of a program in the second environment and having flexibility capable of easily controlling various functions of the image forming apparatuses, by providing a scheme to utilize functions provided in the first execution environment.","According to still another aspect of the present invention, it is possible to utilize development resources executable in another execution environment that have been developed in order to control an image forming apparatus, from an execution environment having high portability.","The individual components shown in outline or designated by blocks in the drawings are all well known in the image forming apparatus, control method and control program arts and their specific construction and operation are not critical to the operation or the best mode for carrying out the invention.","While the present invention has been described with respect to what are presently considered to be the preferred embodiments, it is to be understood that the invention is not limited to the disclosed embodiments. To the contrary, the present invention is intended to cover various modifications and equivalent arrangements included within the spirit and scope of the appended claims. The scope of the following claims is to be accorded the broadest interpretation so as to encompass all such modifications and equivalent structures and functions."],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"BRIEF DESCRIPTION OF THE DRAWINGS","p":[{"@attributes":{"id":"p-0020","num":"0019"},"figref":"FIG. 1"},{"@attributes":{"id":"p-0021","num":"0020"},"figref":["FIG. 2","FIG. 1"],"b":"100"},{"@attributes":{"id":"p-0022","num":"0021"},"figref":["FIG. 3","FIG. 1"],"b":"10"},{"@attributes":{"id":"p-0023","num":"0022"},"figref":["FIG. 4","FIG. 3"],"b":"303"},{"@attributes":{"id":"p-0024","num":"0023"},"figref":["FIG. 5","FIG. 3"],"b":"306"},{"@attributes":{"id":"p-0025","num":"0024"},"figref":["FIGS. 6 and 7","FIG. 1"],"b":"500"},{"@attributes":{"id":"p-0026","num":"0025"},"figref":["FIG. 8","FIG. 3"],"b":"308"},{"@attributes":{"id":"p-0027","num":"0026"},"figref":"FIG. 9","b":"308"},{"@attributes":{"id":"p-0028","num":"0027"},"figref":"FIG. 10","b":"308"},{"@attributes":{"id":"p-0029","num":"0028"},"figref":"FIG. 11","b":"308"},{"@attributes":{"id":"p-0030","num":"0029"},"figref":"FIG. 12","b":"308"},{"@attributes":{"id":"p-0031","num":"0030"},"figref":["FIG. 13","FIG. 3"],"b":"311"},{"@attributes":{"id":"p-0032","num":"0031"},"figref":["FIG. 14","FIG. 8"]},{"@attributes":{"id":"p-0033","num":"0032"},"figref":["FIG. 15","FIG. 14"],"b":"1401"},{"@attributes":{"id":"p-0034","num":"0033"},"figref":"FIG. 16","b":"500"},{"@attributes":{"id":"p-0035","num":"0034"},"figref":"FIG. 17","b":"10"},{"@attributes":{"id":"p-0036","num":"0035"},"figref":["FIG. 18","FIG. 3"],"b":"305"},{"@attributes":{"id":"p-0037","num":"0036"},"figref":"FIG. 19"}]},"DETDESC":[{},{}]}
