---
title: Deletion in data file forwarding framework
abstract: Methods and apparatus, including computer program products, for deletion in data file forwarding framework. A framework includes a network of interconnected computer system nodes in which data files are continuously forwarded from computer memory to computer memory without storing on any physical storage device in the network, a central server coupled to the network, and a deletion server coupled to the network.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08452844&OS=08452844&RS=08452844
owner: Tajitshu Transfer Limited Liability Company
number: 08452844
owner_city: Wilmington
owner_country: US
publication_date: 20090506
---

{"@attributes":{"id":"description"},"BRFSUM":[{},{}],"heading":["CROSS REFERENCE TO RELATED APPLICATIONS","BACKGROUND","SUMMARY OF THE DESCRIPTION","DETAILED DESCRIPTION"],"p":["This application is a U.S. National Phase of International Application No. PCT\/US2009\/042971, filed May 6, 2009 which is a continuation of U.S. patent application Ser. No. 12\/116,610, filed May 7, 2008 entitled \u201cDELETION IN DATA FILE FORWARDING FRAMEWORK,\u201d each of which is hereby expressly incorporated by reference in its entirety.","At least some embodiments disclosed herein relate to data storage, and more particularly, to deletion in data file forwarding framework.","The volume of data that must be stored by individuals, organizations, businesses and government is growing every year. In addition to just keeping up with demand, organizations face other storage challenges. With the move to on-line, real-time business and government, critical data must be protected from loss or inaccessibility due to software or hardware failure. Today, many storage products do not provide complete failure protection and expose users to the risk of data loss or unavailability. For example, many storage solutions on the market today offer protection against some failure modes, such as processor failure, but not against others, such as disk drive failure. Many organizations are exposed to the risk of data loss or data unavailability due to component failure in their data storage system.","The data storage market is typically divided into two major segments, i.e., Direct Attached Storage (DAS) and Network Storage. DAS includes disks connected directly to a server.","Network Storage includes disks that are attached to a network rather than a specific server and can then be accessed and shared by other devices and applications on that network. Network Storage is typically divided into two segments, i.e., Storage Area Networks (SANs) and Network Attached Storage (NAS).","A SAN is a high-speed special-purpose network (or subnetwork) that interconnects different kinds of data storage devices with associated data servers on behalf of a larger network of users. Typically, a SAN is part of the overall network of computing resources for an enterprise. A storage area network is usually clustered in close proximity to other computing resources but may also extend to remote locations for backup and archival storage, using wide area (WAN) network carrier technologies.","NAS is hard disk storage that is set up with its own network address rather than being attached to the local computer that is serving applications to a network's workstation users. By removing storage access and its management from the local server, both application programming and files can be served faster because they are not competing for the same processor resources. The NAS is attached to a local area network (typically, an Ethernet network) and assigned an IP address. File requests are mapped by the main server to the NAS file server.","All of the above share one common feature that can be an Achilles tendon in more ways than one, i.e., data is stored on a physical medium, such as a disk drive, CD drive, and so forth.","The present invention provides methods and apparatus, including computer program products, for deletion in data file forwarding framework.","In one aspect, the invention features a method including, in a network of interconnected computer systems in which data files are continuously forwarded from computer memory to computer memory without storing on any physical storage device in the network, receiving a request from a source system coupled to the network to delete a data file being continuously forwarded, the request including a file name, searching an index file associated with a central server in the network for the file name, removing the file name from the index file, locating the data file represented by the file name in the network, and directing the located data file to a memory of a computer system in the network that does not forward or store data files.","In another aspect, the invention features a framework including a network of interconnected computer system nodes in which data files are continuously forwarded from computer memory to computer memory without storing on any physical storage device in the network, a central server coupled to the network, and a deletion server coupled to the network.","The details of one or more implementations of the invention are set forth in the accompanying drawings and the description below. Further features, aspects, and advantages of the invention will become apparent from the description, the drawings, and the claims.","Unlike peer to peer networks, which use data file forwarding in a transient fashion so that the data file is eventually stored on a physical medium such as a disk drive, the present invention is a continuous data file forwarding system, i.e., data files are stored by continually forwarding them from one node memory to another node memory.","As shown in , an exemplary framework  includes a user system  and a number of network systems , , , , . Each of the network systems , , , ,  can be considered to be a node in the framework  and one such network system may be designated as a central server, such as network system , which may assume a control position in framework . Each of the nodes , , , ,  may be established as a privately controlled network of peers under direct control of the central server . Peered nodes may also be a mix of private and public nodes, and thus not under the direct physical control of the central server . The framework  may also be wholly public where the central server  (or servers) has no direct ownership or direct physical control of any of the peered nodes.","In one example, nodes , , ,  and  are considered to be a private network. In a private network, an administrator controls the nodes and may designate which node is the central server. The framework  can also include one or more additional nodes. For example, nodes ,  and . These nodes ,  and  are considered to be part of one or more public networks in which the administrator has little or no control.","As shown in , the user system  can include a processor , memory  and input\/output (I\/O) device . Memory  can include an operating system (OS) , such as Linux, Apple\u00ae OS or Windows\u00ae, one or more application processes , and a storage process , explained in detail below. Application processes  can include user productivity software, such as OpenOffice or Microsoft\u00ae Office. The I\/O device  can include a graphical user interface (GUI)  for display to a user .","As shown in , each of the network systems, such as network system , can include a processor  and memory . Memory  can include an OS , such as Linux, Apple\u00ae OS or Windows\u00ae, a data file forwarding process , a search process  and a retrieval process , fully described below.","One network system, such as network system , is designated as a deletion node, more fully described below. Memory of the deletion node  does not include a data file forwarding process , search process  and retrieval process . Any data file received by the deletion node is not forwarded or saved. New data received in the memory of the deletion node overwrites old data received by the memory of the deletion node. In effect, the deletion node  acts as a black hole for data files forwarded to it.","In traditional systems, application processes  need to store, delete, search and retrieve data files. In these traditional systems, a data file is stored on local or remote physical devices. And in some systems, this data file can be segmented into different pieces or packets and stored locally or remotely on physical mediums of storage. Use of fixed physical data storage devices add cost, maintenance, management and generate a fixed physical record of the data, whether or not that is the desire of the user .","The present invention does not use fixed physical data storage to store data files. Herein, the terms \u201cdata file\u201d are used to represent all file and media types handled by the system, such as, for example, files for data, program files, audio files, video files, picture files, and so forth. When a request to store a data file is received by the central server  from storage process , the data file is directed to a node memory in the framework  where it is then continuously forwarded from node memory to node memory in the framework  by the data file forwarding process  in each of the network nodes without storing on any physical storage medium, such as a disk drive. The forwarded data file resides only for a very brief period of time in the memory of any one node in the framework . Data files are not stored on any physical storage medium in any network node.","When a request to retrieve a data file is received by the central server  from storage process , the requested data file, which is being forwarded from node memory to node memory in the framework , is retrieved.","Data files forwarded in this manner can be segmented and segments forwarded as described above. Still, the segmented data is not stored on any physical storage medium in any network node, but forwarded from the memory of one node to the memory of another node.","Data files being forwarded in this manner can be deleted and thus no longer forwarded from node memory to node memory.","As shown in , storage process  includes sending () a request to a central server  to store, retrieve or delete a data file. If the request is a retrieve data file request, storage process  receives () the requested data file from the central server  or node in the network.","If the request to the central server  is a store data file request, storage process  receives () an address of a node from the central server  and forwards () the data file to the node memory represented by the received address.","As shown in , data file forwarding process  includes receiving () a request from a source system in a network to store a data file.","Process  directs () the data file to a computer memory in a network. Process  saves () a file name of the data file, and in some implementations, a file type, a username and a date stamp, in an index file associated with the central server ; the actual data contained in the data file is not stored on any physical medium. The index file is used to search for data files during the search process , described fully below. Process  scrambles () a copy of the contents of the data file and saves () the copied scrambled data in memory or on a physical storage device associated with the central server .","For example, assume a data file named \u201cmyfile.txt\u201d includes the following text:\n\n","Scrambling () a copy of the above data file may, in one example, results in the following scrambled data:\n\n","Only this scrambled data, indexed by file name, is saved to physical storage\u2014no unscrambled data file is stored in any physical medium, such as a disk drive. Saving the copied scrambled data aids in maintaining security and in searching for data files being continuously forwarded.","Process  continuously forwards () the data file from the first computer memory to other computer memories in the network without storing on any physical storage device in the network. Continuously forwarding () includes detecting a presence of the data file in memory of the specific node of the network and forwarding the data file to another computer memory of a node in the network of interconnected computer system nodes without storing any physical storage device.","In one specific example, at the point of entry to a node, forwarded data in the data file undergoes an encrypted \u201chandshake\u201d with the node or central server  or user. This can be a public or private encryption system, such as the Cashmere system, which can use public-private keys. Cashmere decouples the encrypted forwarding path and message payload, which improves the performance as the source only needs to perform a single public key encryption on each message that uses the destination's unique public key. This has the benefit that only the true destination node will be able to decrypt the message payload and not every node in the corresponding relay group. Cashmere provides the capability that the destination can send anonymous reply messages without knowing the source's identity. This is done in a similar way, where the source creates a reply path and encrypts it in a similar manner as the forwarding path.","In another example, other routing schemes are utilized.","New nodes and node states may be added and\/or deleted from the framework  based upon performance. Users may have access to all nodes or may be segmented to certain nodes or \u201cnode states\u201d by the central server(s) or via the specific architecture of the private, public or private-public network.","Individual nodes, nodes states and supernodes may also be extranet peers, wireless network peers, satellite peered nodes, Wi-Fi peered nodes, broadband networks, and so forth, in public or private networks. Peered nodes or users may be used as routing participants in the framework  from any valid peer point with the same security systems employed, as well as custom solutions suitable for the rigors of specific deployments, such as wireless encryption schemes for wireless peers, and so forth.","In process , rather than have data files cached or held in remote servers, hard drives or other fixed storage medium, the data files are passed, routed, forwarded from node memory to node memory. A user on the system may authorize more than one user to have access to the data file.","A primary goal in process  is to generate a data storage and management system where the data file is never fixed in physical storage, but in fact, is continually being routed\/forwarded from node memory to node memory. The path of the nodes to which a data file is forwarded may also be altered by the central server  to adjust for system capacities and to eliminate redundant paths of data files that may weaken the security of the network due to the increased probability of data file path without this feature.","As shown in , the search process  includes receiving () a query. Example queries include filenames, file types, usernames, dates and so forth. In one example, the query is a keyword or keywords. Search process  searches () the database of scrambled files represented by the index of file names for a match of the keyword or keywords. If a match of the keyword or keywords is found among the scrambled files, process  generates () a list of filenames containing the keyword or keywords. In one example, the list of file names is displayed to a user on an input\/output device, enabling the user to select one of the file names. In another example, the list of filenames displayed includes supplemental information with respect to the file, such as, file type, file size, date saved and\/or last modified, and so forth. Process  receives () a user selection of one of the filenames contained in the generated list of file names. The user selection can include a mouse click, a key board input, an audio input, and so forth, indicating a selected filename.","Process  launches () a file retrieval process .","As shown in , the file retrieval process  matches () the requested filename at the central server using a hash mark or other unique code that can be \u201csniffed\u201d by the node upon the data entering the node via the encryption handshake. This can occur by pinging the nodes in the network. Process  sends () the message to return the data to the user directly to the node or node state where the central server believes the data will likely appear. The more the central server can narrow the node state that it pings to, then the more efficient the retrieval will become and the less burdened by unnecessary messaging traffic to nodes that are not necessary for a transaction between the central server and the node capable of forwarding the data.","Once the correct node receives the message to forward the data in node memory to the requester, process  forwards () in node memory the data to the requester and forwards () a confirmation message that the data has been sent to the user. This routing message may be sent directly to the central server or may be passed to the central server or servers via other node(s) or supernode(s) in the framework . Upon the user receiving the requested data the user's application functions to automatically ping the central server that the data requested has been received. Thus the framework  creates data storage without caching, downloading and\/or storing the data on any physical storage medium. Data storage and management is accomplished via a continuous routing of the data from node memory to node memory.","In another embodiment, storage process  only stores the scrambled data along with filename, and in some instances, file type, username, and\/or date stamp, while automatically deleting the non-scrambled data file.","If the request to the central server  is a delete data file request, the central server  launches a file deletion process . As shown in , process  matches () the filename to delete at the central server  using a hash mark or other unique code that can be \u201csniffed\u201d by the node upon the data entering the node via the encryption handshake. This can occur by pinging the nodes in the network. Process  sends () the message to forward the data to the deletion node  directly to the node or node state where the central server believes the data will likely appear. The more the central server can narrow the node state that it pings to, then the more efficient the retrieval will become and the less burdened by unnecessary messaging traffic to nodes that are not necessary for a transaction between the central server and the node capable of forwarding the data.","Process  forwards () in node memory the data to the deletion node. Process  removes () the data file name from the index and forwards () a confirmation message that the data has been deleted to the user. This routing message may be sent directly to the central server or may be passed to the central server or servers via other node(s) or supernode(s) in the framework .","The framework  creates data storage without caching, downloading and\/or storing the data on any physical storage medium. Data storage and management is accomplished via a continuous routing of the data from node memory to node memory, the forwarded data only downloaded when the user requests the data to be returned to the user from the framework .","Embodiments of the invention can be implemented in digital electronic circuitry, or in computer hardware, firmware, software, or in combinations of them. Embodiments of the invention can be implemented as a computer program product, i.e., a computer program tangibly embodied in an information carrier, e.g., in a machine readable storage device or in a propagated signal, for execution by, or to control the operation of, data processing apparatus, e.g., a programmable processor, a computer, or multiple computers. A computer program can be written in any form of programming language, including compiled or interpreted languages, and it can be deployed in any form, including as a stand alone program or as a module, component, subroutine, or other unit suitable for use in a computing environment. A computer program can be deployed to be executed on one computer or on multiple computers at one site or distributed across multiple sites and interconnected by a communication network.","Method steps of embodiments of the invention can be performed by one or more programmable processors executing a computer program to perform functions of the invention by operating on input data and generating output. Method steps can also be performed by, and apparatus of the invention can be implemented as, special purpose logic circuitry, e.g., an FPGA (field programmable gate array) or an ASIC (application specific integrated circuit).","Processors suitable for the execution of a computer program include, by way of example, both general and special purpose microprocessors, and any one or more processors of any kind of digital computer. Generally, a processor will receive instructions and data from a read only memory or a random access memory or both. The essential elements of a computer are a processor for executing instructions and one or more memory devices for storing instructions and data. Generally, a computer will also include, or be operatively coupled to receive data from or transfer data to, or both, one or more mass storage devices for storing data, e.g., magnetic, magneto optical disks, or optical disks. Information carriers suitable for embodying computer program instructions and data include all forms of non volatile memory, including by way of example semiconductor memory devices, e.g., EPROM, EEPROM, and flash memory devices; magnetic disks, e.g., internal hard disks or removable disks; magneto optical disks; and CD ROM and DVD-ROM disks. The processor and the memory can be supplemented by, or incorporated in special purpose logic circuitry.","It is to be understood that the foregoing description is intended to illustrate and not to limit the scope of the invention, which is defined by the scope of the appended claims. Other embodiments are within the scope of the following claims."],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"BRIEF DESCRIPTION OF THE DRAWINGS","p":["The embodiments are illustrated by way of example and not limitation in the figures of the accompanying drawings in which like references indicate similar elements.",{"@attributes":{"id":"p-0015","num":"0014"},"figref":"FIG. 1"},{"@attributes":{"id":"p-0016","num":"0015"},"figref":"FIG. 2"},{"@attributes":{"id":"p-0017","num":"0016"},"figref":"FIG. 3"},{"@attributes":{"id":"p-0018","num":"0017"},"figref":"FIG. 4"},{"@attributes":{"id":"p-0019","num":"0018"},"figref":"FIG. 5"},{"@attributes":{"id":"p-0020","num":"0019"},"figref":"FIG. 6"},{"@attributes":{"id":"p-0021","num":"0020"},"figref":"FIG. 7"},{"@attributes":{"id":"p-0022","num":"0021"},"figref":"FIG. 8"}]},"DETDESC":[{},{}]}
