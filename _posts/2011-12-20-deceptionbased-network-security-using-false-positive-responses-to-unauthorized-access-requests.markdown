---
title: Deception-based network security using false positive responses to unauthorized access requests
abstract: A request handler may receive an access request for access to application server resources of an application server and determine that the access request is unauthorized. A response manager may provide a false positive response including apparent access to the application server resources.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08925080&OS=08925080&RS=08925080
owner: SAP SE
number: 08925080
owner_city: Walldorf
owner_country: DE
publication_date: 20111220
---

{"@attributes":{"id":"description"},"BRFSUM":[{},{}],"heading":["TECHNICAL FIELD","BACKGROUND","SUMMARY","DETAILED DESCRIPTION"],"p":["This description relates to computer security.","Malicious and other illegitimate potential users of network computing resources may attempt to gain unauthorized access to such computing resources, using a variety of techniques. For example, such unauthorized users, sometimes referred to as hackers, may attempt to gain access to data or other resources which have been made available on the network in a manner intended to provide secure, confidential access to a limited set of authorized users. In particular examples, companies may provide public websites designed to interact with customers and potential customers, and hackers may attempt to modify such websites in undesired manners, and\/or to modify or otherwise access confidential data used to support functionality of related websites. Meanwhile, current trends in network usage include greater usage of web-based\/cloud-based applications, including the use of network-based data storage. Consequently, such trends provide increased high-value targets for hackers and other unauthorized users.","According to one general aspect, a computer system may include instructions recorded on a computer-readable storage medium and readable by at least one processor. The system may include a request handler configured to cause the at least one processor to receive an access request for access to application server resources of an application server and to determine that the access request is unauthorized, and a response manager configured to cause the at least one processor to provide a false positive response including apparent access to the application server resources.","According to another general aspect, a computer-implemented method for causing at least one processor to execute instructions recorded on a computer-readable storage medium may include receiving an access request for access to application server resources of an application server. The computer-implemented method may further include determining that the access request is unauthorized; and providing a false positive response including apparent access to the application server resources.","According to another general aspect, a computer program product may be tangibly embodied on a computer-readable medium and may include instructions that, when executed, are configured to cause at least one processor to receive an access request for access to application server resources of an application server, determine that the access request is unauthorized, and provide a false positive response including apparent access to the application server resources.","The details of one or more implementations are set forth in the accompanying drawings and the description below. Other features will be apparent from the description and drawings, and from the claims.",{"@attributes":{"id":"p-0012","num":"0011"},"figref":"FIG. 1","b":["100","100","100"]},"In the example of , a deception manager  may be configured to interact with a client computer , where the client computer  may be understood to represent a source of access requests which may be malicious, unauthorized, or otherwise undesirable. As described in detail herein, the deception manager  may be configured to access a knowledge base  in order to determine whether, in fact, access requests received from the client computer  are malicious, unauthorized, or otherwise undesirable.","Further, the deception manager  may utilize the knowledge base  in conjunction with a decoy server , in order to thereby provide a deceptive false positive result to any such undesirable (or potentially undesirable) access request. As a result, as referenced above and as described in detail herein, illegitimate users of the client computer  may be deceived into believing that unauthorized access requests have been successful and\/or have not been detected as such, while all along failing to achieve the desired unauthorized results. Consequently, such illegitimate users may be hindered or prevented from achieving such desired, unauthorized results, while legitimate users and\/or providers may continue to receive desired access in a convenient manner, while experiencing limited or no inconveniences associated with the illegitimate access request received from the unauthorized users of the client computer .","In practice, it may be appreciated that the deception manager  and the client computer  may be in communications with one another using any suitable or relevant communication techniques. For example, the deception manager  and the client computer  may communicate over any suitable computer network, including a public network (e.g., the public internet, or secured portions thereof), or a private network (e.g., a corporate intranet).","For example, as described in more detailed examples below, the deception manager  may be associated with a plurality of network resources, and the deception manager  may represent, or be included in, a common point of entry for all access requests and other communications from external network devices, including the client computer . For example, in specific implementations, the deception manager  may be executed in the context of, in conjunction with, or as part of an otherwise conventional firewall device. Such firewall devices, by themselves, or generally well known to provide security-related functionality, including, e.g., encryption\/decryption of data, username\/password maintenance and management, and various other known functions related to maintaining a confidentiality, validity, and authorization of, or related to, communications between external network devices and underlying, backend network resources.","Thus, in the examples described herein, it is assumed that the client computer  has been configured to guess, deduce, or otherwise determine a proper form and\/or content of an access request that might be authorized by the deception manager . For example, the client computer  may be configured to make repeated, random attempts to establish the form and content of such access requests, until, by process of elimination, a proper access request is determined. As described herein, the deception manager  may be configured to detect such unauthorized access requests, by providing a false positive result thereto, thereby deceiving the operator of the client computer  into believing that the unauthorized access request was successful.","In order to perpetuate this deception, the deception manager  may route the unauthorized access requests and subsequent communications from the client computer  to the decoy server , which may be configured to respond to the unauthorized access requests and subsequent communications in a manner which mimic actual communications that would have been provided by the illegitimately-requested network resource. As a result, the operator of the client computer  may continue to interact with the decoy server  for some period of time, until determining or guessing that the decoy server  represents a false positive, or until otherwise deciding to cease interactions with the decoy server . During such interactions, a logging engine  may be configured to record actions and other communications associated with the operator of the client computer . Accordingly, the system  may facilitate legal actions against the operator of the client computer . In other examples, as described in more detail below, the logging engine  may enable improved performance of the system  in future attempts to detect and respond to unauthorized access requests.","In the example of , an application server  is illustrated as an example of network resources which might be a target for unauthorized access by the operator of the client computer . As shown, and as is well known, the application server  may be associated with a plurality of ports, illustrated in the example of  as ports A, B.","Such ports may include or represent, for example, logical\/virtual points of connection for direct communications between two applications, without requiring an intermediate file or other storage associated with an IP address of the host, as well as the type of protocol used for communication. The protocols that primarily use the ports are the Transport Layer protocols, such as the Transmission Control Protocol (TCP) and the User Datagram Protocol (UDP) of the Internet Protocol Suite. A port is identified for each address and protocol by a 16-bit number, commonly known as the port number.","Thus, the ports A, B may be configured to provide specific types of data connections such that each specific type of communication may be associated with one or more of the ports. In practice, individual ports may be associated with specific numbers designated as corresponding to specific types of network communications. For example, ports may be associated with FTP (file transfer protocol), telnet, or BGP (border gateway protocol), to name a few.","In practice, an operator of the application server  and\/or the deception manager  may wish to utilize a subset of available ports for legitimate communications with a desired or intended audience. For example, out of hundreds or thousands of available ports, a dozen or more may be designated as being open so as to conduct legitimate communications. Consequently, in conventional scenarios, the remaining ports may be closed.","In the example of , the client computer  may be configured to execute port scanning software which scans all ports of the application server , in order to identify one or more of the subset of available ports which have been configured to be open for data communications. If successful in identifying such open ports, which would otherwise normally be available only to legitimate users notified of the availability thereof, the operator of the client computer  may proceed to execute unauthorized or undesired communications using the discovered-open ports.","In the example of , however, a second subset of ports, which are not needed for legitimate communications with an intended audience, may nonetheless be designated as being open for communications, in conjunction with operations of the deception manager . In this way, an operator of the client computer  utilizing port scanning software may believe that an open port has been discovered, when in fact the discovered and apparently open port represents a false positive provided by the deception manager  for purposes of deceiving the operator of the client computer  as described herein.","Thus, in the simplified example of , it may occur that the port A is designated as being open for legitimate communications in association with operations of the applications server , while the port B may not be required for such legitimate communications, but may nonetheless be falsely designated as open for purposes of deceiving the operator of the client computer . In such scenarios, then, the operator of the client computer  may scan all available ports, in an attempt to conduct unauthorized communications therewith.","Thus, in the example, if the port B is discovered, then the deception manager  may deduce or determine that any associated access request are unauthorized, and may therefore route such access requests and associated communications to the decoy server , which may be configured to mimic operations of the application server  and thereby deceive the operator of the client computer .","If the operator of the client computer  discovers that both ports A, B are apparently open, then the operator of the client computer  may nonetheless be unable to determine which of the ports represent an actual open port. Similarly, even if the operator of the client computer  initially discovers the open port A, then knowledge of the potential use of the deception manager  may cause the operator of the client computer  to doubt an authenticity of any subsequent communications with the application server .","Thus, by providing false positives in the form of apparently open (but actually closed) ports, the deception manager  may confuse or otherwise hinder the operator of the client computer , and may therefore cause such port-based attacks to be less fruitful for the operator of the client computer , and therefore less likely to occur and\/or do harm. To the extent that the operator of the client computer  is deceived by the deception manager  and the decoy server  into continuing communications with the decoy server , the logging engine  may be utilized to track and record such interactions, so as to facilitate legal action and\/or future deterrence efforts with respect to the operator of the client computer .","In additional examples, as shown, the application server  may be configured to execute an application . As is well known, the application  and the application server  may represent virtually any such application which may be made available over a network. For example, the application  may be associated with a commercial website designed for executing retail transactions over the public internet. In other examples, the application  may represent business software designed to support and otherwise facilitate operations of an enterprise. Of course, as referenced, many other examples of the application  exist, and would be well known to one of skill in the art.","As is also known, in addition to the network-level attacks referenced above with respect to the ports A, B, the client computer  may be configured to execute application-specific attacks against the application . For example, the application  may be protected through the use of authorized username\/password combinations which are required to be entered by authorized users prior to providing certain types of access (e.g., administrative access) to the application . Consequently, somewhat similarly to the port-based scanning techniques described above, the client computer  may be configured to guess, deduce, or determine such username\/password combinations (e.g., using random character combinations as part of a process of elimination), so as to thereby gain unauthorized access to operations of the application .","Various other types of application-level attacks may be launched by the client computer . For example, directory traversal attacks may be implemented in which resource locators (e.g., uniform resource locators or URLs, utilized in the context of an address bar of a conventional web browser) are manipulated by the client computer  in an attempt to guess an otherwise unavailable file or folder stored using the application  and\/or the application server . In other words, the operator of the client computer  may traverse a directory structure of the application , and thereby identify resources which have not been made publicly available, and may therefore be thought to be safe from, or inaccessible by, unauthorized users.","For example, the application server  may provide a domain of websites and associated applications , many of which may be configured to publicly accessible, e.g., through the use of hyperlinks. At the same time, an operator or administrator of the application server  may include private webpages which may be used, e.g., for administration and management of the various related websites and applications, and\/or for management of private data, e.g., customer data. Such non-public sites may be associated with specific, non-public uniform resource locators (URLs). For example, an example public webpage www.homepage.com may be associated with non-public webpages, e.g., www.homepage.com\/customer_data or www.homepage.com\/admin_page. BY virtue of trial and error processes, or other processes, an operator of the client computer  may enter, guess, or otherwise determine, using the base website name www.homepage.com, such pages which are designed and intended to be non-public. Subsequently, the operator of the client computer , in conventional systems, may thereafter be enabled to access or modify data in an illegitimate or unauthorized manner.","Various other types of illegitimate access requests and associated attack techniques may be implemented by the operator of the client computer . For example, as illustrated, the application  may include a conventional controller A and associated page model B. As is well known, the controller A may be understood to receive inputs from users, consult the page model B, and return desired information or functionality to the requesting user. In the context of the system , the operator of the client computer  may seek to hijack or otherwise utilize operations of the controller A and page model B in order to obtain desired, illegitimate results.","For example, in a technique referred to as client-side scripting (CSS), the operator of the client computer  may modify client-side scripts designed to be executed at the client computer , to thereby cause the client-side scripting to instead modify general operations of the controller A. In other words, the operator of the client computer  may use script design to be viewed and used only at the specific client computer  to affect operations of the application  as viewed and utilized by many or all other users thereof.","In other examples, it may occur that the page model B includes, or is associated with a database, such as a database managed using the popular structured query language (SQL). As is known, SQL is a popular database management language which enables users to modify (update, delete), maintain, or otherwise manage large relational databases. In these contexts, the operator of the client computer  may utilize a technique known as SQL injection to include SQL commands in otherwise normal interactions with the controller A. In other words, the operator of the client computer  may modify normal or expected user inputs to include illicit or unauthorized SQL commands, so that the controller A may thereafter execute the unauthorized SQL commands. For example, the operator of the client computer  may include an SQL command to delete an entire table of customer data from data associated with the model B. In this way, the operator of the client computer  may disrupt operators of the application , or otherwise gain unauthorized responses from the application .","In many cases, the various attack techniques referred above, and related attack techniques, may be associated with known software for performing the functions described above. For example, software known as John the Ripper is utilized to generate potential passwords in order to gain access to a password protected system. In the example of , such known attack software may be included in, or utilized in conjunction with, support tools\/plug-ins . Specifically, as shown, the support tools\/plug-ins  may be utilized by the knowledge base  in order to update and configure the knowledge base  for subsequent consultation thereof by the deception manager  when evaluating access requests from the client computer .","Further, as referenced above, the knowledge base  also may be updated based on information stored in a log-in database , which may be updated based on operations of the logging engine  during execution of monitoring and tracking interactions of the client computer  with the decoy server , as described herein. Thus, the login database  may be utilized by, or in conjunction with, the knowledge base , so as to maintain an updated version of the knowledge base  which is thereby configured to instruct the deception manager  in a timely and accurate fashion with respect to evaluations of access requests from the client computer .","Thus, in practice, a request handler A, B may be configured to receive access requests from the various computers, including the client computer . Specifically, with respect to the request handler A, as described herein, the deception manager  may be implemented in conjunction with, or as part of, a firewall device which is positioned on a network to receive all access requests destined for the applications server or other network resources. Consequently, the request handler A may be well-positioned to intercept or otherwise receive access requests from the client computer .","As described herein, the request handler A may consult with the knowledge base , in order to, e.g., determine that a given access request is unauthorized. Consequently, a response manager A may be configured to execute an appropriate response, including routing current feature communications from the client computer  originating an authorized request to the decoy server . For example, as described herein, the response manager A may be configured to execute in conjunction with, or as part of, a reverse proxy, which is conventionally used to perform load balancing and\/or fail over functionality using a plurality of backend servers.","That is, for example, conventional websites may utilize a number of application servers to provide a single website, so that normal access requests may be routed among the various available servers in a balanced fashion, and\/or may be handled appropriately even if one or more available servers fails. However, in the example of , the response manager B, as described herein, may be configured to utilize similar functionality for the purpose of routing the unauthorized access requests and subsequent communications from the client computer  to the decoy server , which is configured to mimic operations of the requested network resource, e.g., the application server .","In the example of , and consistent with the examples provided above, the request handler A may include a probe detector  which is configured to detect port scanning operations of the client computer  with respect to the ports A, B. For example, as described above, it may occur that the port A is configured to be open for purposes of legitimate data traffic, while the port B may not be required for legitimate data traffic, yet may be configured to be open nonetheless.","Subsequently, upon receipt of an access request with respect to the port B from the client computer , the probe detector  may determine, in conjunction with the knowledge base , that the port B has been configured to be open only for the purposes of deceiving the operator of the client computer  submitting the unauthorized access request. Similarly, the password system  of the request handler A may be configured to receive a false password from the client computer , and to thereby determine that the client computer  is attempting to gain unauthorized access, e.g., to the application . That is, for example, it may occur that the password system  may be configured to generate a number of false usernames and\/or passwords in conjunction with, e.g., and addition to any actual, authorized username\/password combinations which may exist with respect to the application .","Then, in such examples, it may be appreciated that actual users of the application  may submit their normal, authorized username\/password combination in order to gain desired access to the application . At the same time, such authorized users may be unaware of the existence of a plurality of false username\/password combinations, which exist only to deceive the operator of the client computer  into believing that a desired, unauthorized access to the application  has been achieved.","Thus, in conjunction with both the probe detector  and the password system , it may be appreciated that the request handler A may be configured to determine an unauthorized nature of an authorized access request received from the client computer . Thereupon, the response manager  may be configured to route the unauthorized access request and subsequent communications to the decoy server , as described herein.","In many cases, however, the request handler A may mistakenly identify an unauthorized access request as being authorized and permissible. Similarly, the request handler A may come to an indeterminate result in its attempt to classify a specific access request as authorized or unauthorized.","In particular, with respect to the case of application-level attacks referenced above, including, e.g., directory traversal attacks, client-side scripting attacks, and\/or SQL injection attacks, it may be difficult or impossible for the request handler A located at the deception manager  to identify an unauthorized nature of such access requests, and related access requests.","In particular, such types of access requests may be particular to a context of the application  itself, and therefore may be difficult or impossible to detect at a network level by the deception manager . Then, in the example of , a deceiver library agent  may be configured to identify the access request as being unauthorized, in conjunction with the request handler B. For example, a number of known techniques exist for detecting SQL injection attempts, and the various other application-level attacks described above, and related attack types. For example, input validation and sanitization techniques exist which enable detection of embedded SQL commands, so that associated user inputs may be sanitized (i.e., may have the offending SQL injection attempts removed, or have the entirety of the associated user input dropped).","In the example of , however, rather than dropping sanitized user inputs, the response manager B, in conjunction with the deceiver library , may be configured to recognize unauthorized access requests associated with the types of attacks described above, and thereafter inform the response manager A of the deception manager  to route the unauthorized access requests and subsequent communications from the client computer  to the decoy server .","Thus, the system  may be configured to send false success responses for code areas which are normally out of bounds of firewalls or intrusion detection systems. This allows, for example, for sending a response code in response to directory traversals, which may thereby confuse attackers, and render their attack methods useless. Similarly, the decoy server  may be utilized to pretend that a received SQL injection was successful, while not breaking the normal behavior of the application  in conjunction with separate, legitimate access requests.",{"@attributes":{"id":"p-0050","num":"0049"},"figref":["FIG. 1","FIG. 1"],"b":["100","100"]},"For example, components illustrated at one location in the example of  may be implemented, in whole or in part, at a different location thereof. In general, any single component of the example of  may be executed using two or more components which each perform a corresponding subset of functionalities of the singular, illustrated components. Similarly, but conversely, any two or more of the components of  may be executed using a single component.",{"@attributes":{"id":"p-0052","num":"0051"},"figref":["FIG. 2","FIG. 1","FIG. 2"],"b":["200","100","202","206","202","206"]},"In the example of , an access request for access to application server resources of an application server may be received (). For example, the request handler A, B may receive such an access request with respect to the application  of the application server , and\/or with respect to the various ports A, B associated therewith. For example, the probe scanner  may receive a port request from the client computer  for access to the closed B. Similarly, the password system  may receive a false username\/password from the client computer . Still further, the request handler B may receive an access request with respect to the application  which is part of a directory traversal attack, client-side scripting attack, or SQL injection attack.","The access request may be determined to be unauthorized (). For example, the request handlers A, B, or components thereof, may consult with the knowledge base  to determine that a given access request is unauthorized. For example, the probe scanner  may consult the knowledge base  to determine that the requested port (e.g., port B), is open only for purposes of deceiving unauthorized users. Similarly, the password system  may operate in conjunction with the knowledge base  and the associated support tools\/plug-ins  which may provide information useful in identifying receipt of false passwords. Still further, the request handler B at the application  may determine that the access request is associated with a directory traversal attack, client-side scripting attack, or SQL injection attack, in conjunction with the deceiver library agent .","A false positive response including apparent access to the application server resources may be provided (). For example, as described, the response manager A, B may be configured to route the unauthorized access request and subsequent communications from the client computer  to the decoy server . As described, in conjunction with any of the port scanning attacks, password cracking attacks, and various application-level attacks, the decoy server  may be configured to deceive the operator of the client computer  into believing that he or she has access to the desired application resources. Consequently, as described, the logging engine  may be configured to track and monitor interactions of the operator of the client computer  with the decoy server , so as to assist in future deterrence of the same or future attackers, or for instituting legal or other action against the operator of the client computer .",{"@attributes":{"id":"p-0056","num":"0055"},"figref":["FIG. 3","FIG. 1","FIG. 3"],"b":["300","100","102","100","104"]},"In the example of , false open ports may be configured (). For example, as described, the port B, which is not desired or needed for actual, authorized network communications, may nonetheless be designated as open for purposes of deceiving the operator of the client computer . As referenced above, a number of available ports associated with the application server  may range, for example, in the hundreds or thousands. Consequently, it may be desirable to determine a number or percentage of closed ports to be designated as open. For example, during legitimate operations with the application server , it may occur that only a small number of available ports are desired for the authorized operations of the application server . Then, an operator or administrator of the system  may decide a number or percentage of the remaining ports to be designated as being open.","In this regard, inasmuch as it may be appreciated that the goal of the deception manager  is to deceive the operator of the client computer  with respect to mimicking of the application server  by the decoy server . Therefore, it may not be desirable to designate all closed ports as being open, since, or to the extent that it is unusual to open all ports in conjunction with operations of the application server . Rather, the number of ports to be left open might be selected based on a desire to flood the operator of the client computer  with erroneous results, while at the same time not alerting the operator of the client computer  to the presence of such deception by simply opening all available ports.","False passwords may be configured (). For example, as described above, the knowledge base  may interact with the support tools\/plug-ins  to determine the types of passwords which might be selected by the operator of the client computer  in attempting to gain access to the application . In additional or alternative examples, the password system  may be configured to generate false passwords which are related to, or similar to, actual passwords of authorized users.","Additionally, it may occur that network administrators and other users of the application  may be prone to use certain standard passwords, for the sake of convenience, but at the cost of potentially providing access to attackers such as the operator of the client computer . For example, many administrators might utilize a word such as \u201cadministrator\u201d or \u201cpassword\u201d for use as a password. Consequently, the password manager  may be configured to receive access requests from the operator of the client computer  in conjunction with such standard passwords, used in the example by the password manager  as false passwords designed to deceive the operator of the client computer  into interacting harmlessly with the decoy server . In order to avoid denying access to legitimate users, however, the password manager  may consult the knowledge base  or other appropriate resource in order to consider the possibility that such standard passwords have been utilized by an authorized user (i.e., even in cases where these passwords have been stored as potential false passwords). In such cases, the password manager  may consider the received password to be legitimate for purposes of granting the immediate access request, but may instruct the request handler of the application  to more carefully inspect subsequent application-related requests for potential unauthorized activity.","The deceiver library agent  may be configured for each application (). That is, as referenced above, the request handler B, the response manager B, and the deceiver library agent  may be desired or required to be implemented in the context of the corresponding specific application. For example, such implementations may be desired or necessary when using otherwise conventional tools to detect the types of attacks referenced above.","The knowledge base  may be configured to provide a desired response (). For example, as referenced above, the response manager  may be configured to consult the knowledge base  in order to determine a desired response in addition or alternative to the rerouting of communications of the operator of the client computer  to the decoy server . For example, the knowledge base  may be configured to designate a false positive response on the part of the deception manager  including a return message to the operator of a client computer  that access has been granted but delayed due to certain specified or un-specified reasons. In other words, the knowledge base  may be configured to cause the response manager A to provide a false positive response in addition or alternative to rerouting of the unauthorized access requests and associated communications to the decoy server . As referenced above with respect to , the plug-in\/support tools  may be used by the knowledge base  to maintain current, up-to-date techniques for monitoring access requests and responding thereto.","The deception manager may be configured to access the knowledge base (). For example, the request handler A and the response manager A may be configured to utilize one or more appropriate application programming interfaces (APIs) to access the knowledge base . The decoy server  may be configured to implement a desired response (). For example, as described, the decoy server  may be configured to mimic the application  or other desired application resource. Consequently, the experience of the operator of a client computer  may be entirely consistent with an experience of interacting directly with the application .","As a result, any illicit, illegal, or other undesired behavior may be observed in the context of the decoy server . Of course, in example implementations, the decoy server  may be configured to provide various inconveniences to the operator of a client computer  in illegal or otherwise improper communications with the decoy server . Thus, the decoy server  need not mimic the application  exactly, but, rather, may be configured to act in ways which inconvenience the operator of the client computer , and\/or which encourage the operator of the client computer  to continue interacting with the decoy server , so that the logging engine  may execute its desired purpose.",{"@attributes":{"id":"p-0065","num":"0064"},"figref":["FIG. 4","FIG. 1","FIG. 4"],"b":["400","100","402","126","104","114","114","114","126","104","108","422","114","104","116","408"]},"Similarly, the request handler A, e.g., the password system , may receive a request for access to the application  or other network resources (). The password system  may access the knowledge base  (), in order to judge a legitimacy of the access request. If permitted (), application access may be granted. Otherwise (), if the application is protected by the password system  (), then upon receipt of a username\/password combination (), the password system  may determine whether the received password represents a false password ().","If so, the password system  may route the access request and subsequent communications from the client computer  to the decoy server  (). Otherwise, as referenced above, it may be difficult for the request handler A, even in conjunction with the knowledge base , to determine whether application-specific requests are legitimate or not. Consequently, as described above, the request handler A may provide initial access to the application  (), while at the same time ensuring operations of the request handler B and the deceiver library agent  with respect to the access request.","Specifically, the request handler B may receive the access request and access the deceiver library agent  (), so as to thereby determine whether the access request is unauthorized (). If no such determination is made, then application access may continue to be provided ().","Otherwise, as described, it may occur that the request handler B, in conjunction with the deceiver library agent , may determine that the access request is associated with one or more types of attacks referenced above, e.g., directory traversal attacks, client-side scripting attacks, or SQL injection attacks. In such cases, the response manager B may route current and future access requests with respect to the application  back to the response manager A at the deception manager , for routing thereof to the decoy server  ().","Subsequently, the preconfigured response plan for any of the above-referenced types of attacks may be implemented (). For example, the logging engine  may be configured to monitor and track interactions between the client computer  and the decoy server , and to thereby update log-in data  accordingly. As also described, various other actions, including legal actions and\/or warnings or other messages to the client computer , also may be implemented. In some implementations, the logging data  may be utilized to update the knowledge base  (), so as to thereby maintain the knowledge base  using current, up-to-date information regarding existing attack techniques.","Implementations of the various techniques described herein may be implemented in digital electronic circuitry, or in computer hardware, firmware, software, or in combinations of them. Implementations may implemented as a computer program product, i.e., a computer program tangibly embodied in an information carrier, e.g., in a machine-readable storage device or in a propagated signal, for execution by, or to control the operation of, data processing apparatus, e.g., a programmable processor, a computer, or multiple computers. A computer program, such as the computer program(s) described above, can be written in any form of programming language, including compiled or interpreted languages, and can be deployed in any form, including as a stand-alone program or as a module, component, subroutine, or other unit suitable for use in a computing environment. A computer program can be deployed to be executed on one computer or on multiple computers at one site or distributed across multiple sites and interconnected by a communication network.","Method steps may be performed by one or more programmable processors executing a computer program to perform functions by operating on input data and generating output. Method steps also may be performed by, and an apparatus may be implemented as, special purpose logic circuitry, e.g., an FPGA (field programmable gate array) or an ASIC (application-specific integrated circuit).","Processors suitable for the execution of a computer program include, by way of example, both general and special purpose microprocessors, and any one or more processors of any kind of digital computer. Generally, a processor will receive instructions and data from a read-only memory or a random access memory or both. Elements of a computer may include at least one processor for executing instructions and one or more memory devices for storing instructions and data. Generally, a computer also may include, or be operatively coupled to receive data from or transfer data to, or both, one or more mass storage devices for storing data, e.g., magnetic, magneto-optical disks, or optical disks. Information carriers suitable for embodying computer program instructions and data include all forms of non-volatile memory, including by way of example semiconductor memory devices, e.g., EPROM, EEPROM, and flash memory devices; magnetic disks, e.g., internal hard disks or removable disks; magneto-optical disks; and CD-ROM and DVD-ROM disks. The processor and the memory may be supplemented by, or incorporated in special purpose logic circuitry.","To provide for interaction with a user, implementations may be implemented on a computer having a display device, e.g., a cathode ray tube (CRT) or liquid crystal display (LCD) monitor, for displaying information to the user and a keyboard and a pointing device, e.g., a mouse or a trackball, by which the user can provide input to the computer. Other kinds of devices can be used to provide for interaction with a user as well; for example, feedback provided to the user can be any form of sensory feedback, e.g., visual feedback, auditory feedback, or tactile feedback; and input from the user can be received in any form, including acoustic, speech, or tactile input.","Implementations may be implemented in a computing system that includes a back-end component, e.g., as a data server, or that includes a middleware component, e.g., an application server, or that includes a front-end component, e.g., a client computer having a graphical user interface or a Web browser through which a user can interact with an implementation, or any combination of such back-end, middleware, or front-end components. Components may be interconnected by any form or medium of digital data communication, e.g., a communication network. Examples of communication networks include a local area network (LAN) and a wide area network (WAN), e.g., the Internet.","While certain features of the described implementations have been illustrated as described herein, many modifications, substitutions, changes and equivalents will now occur to those skilled in the art. It is, therefore, to be understood that the appended claims are intended to cover all such modifications and changes as fall within the scope of the embodiments."],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"BRIEF DESCRIPTION OF THE DRAWINGS","p":[{"@attributes":{"id":"p-0008","num":"0007"},"figref":"FIG. 1"},{"@attributes":{"id":"p-0009","num":"0008"},"figref":["FIG. 2","FIG. 1"]},{"@attributes":{"id":"p-0010","num":"0009"},"figref":["FIG. 3","FIG. 1"]},{"@attributes":{"id":"p-0011","num":"0010"},"figref":["FIG. 4","FIG. 1"]}]},"DETDESC":[{},{}]}
