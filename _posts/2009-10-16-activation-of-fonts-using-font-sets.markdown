---
title: Activation of fonts using font sets
abstract: Fonts may be activated based on the applications that are launched or operating on a computing device. Accordingly, if an application needs a particular set of fonts, the fonts may be activated upon launching of that application. Fonts may further be deactivated when they are no longer necessary or needed by the application (e.g., when the application is terminated). If supported by an operating system, instead of activating and deactivating the fonts, fonts may be pre-activated and then hidden from the operating system. The pre-activated fonts may be revealed when needed for the applications and then hidden again when the applications terminate.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08555162&OS=08555162&RS=08555162
owner: Celartem, Inc.
number: 08555162
owner_city: Portland
owner_country: US
publication_date: 20091016
---

{"@attributes":{"id":"description"},"BRFSUM":[{},{}],"heading":["FIELD OF ART","BACKGROUND","BRIEF SUMMARY","DETAILED DESCRIPTION"],"p":["The invention relates generally to the activation of fonts in computing systems. More specifically, the invention provides for the automatic activation of fonts for applications using font sets.","The current paradigm in third party font management is to automatically activate fonts on open documents using plug-ins that operate within the process space of desktop publishing applications. Most modern operating systems contain application program interfaces (APIs) for activating fonts globally. All processes running on the operating system can see and use the globally active fonts. However, the APIs provided by the desktop publishing applications for plug-in development by third party vendors\/developers are remarkably diverse. The lack of uniformity presents great difficulty for third party vendors to develop efficient plug-ins that would offer universal compatibility. There is little commonality of messaging or functionality provided, even across different versions of the same application or different applications that are sold in the same suite, Adobe\u00ae, for example.","In some systems, applications do not react to fonts activated after the application has been launched, and these applications simply fail to populate the font menu selection drop down box to include these activated fonts. Further, for those applications that do not react to system messages indicating that a new font is active on the operating system, activating fonts after the application is launched will not allow the user to see the document rendered in the way it was designed to be seen. That is, even though the fonts chosen for the document are active and available on the operating system, certain applications only populate font lists at start-up and will not render the text in the correct type face. These applications assume that a font activated after launch is missing and will substitute an alternative type face.","Furthermore, pre-loading all fonts that applications installed on a system might use would be inefficient and may require significant resource expenditure by the system. For example, some fonts might be specific to a single application. Thus, occupying system resources for those fonts that are only used by a single or a few applications that are not always active would be wasteful.","The following presents a simplified summary in order to provide a basic understanding of some aspects of the invention. The summary is not an extensive overview of the invention. It is neither intended to identify critical elements of the invention nor to delineate the scope of the invention. To overcome limitations in the prior art described above, and to overcome other limitations that will be apparent upon reading and understanding the present specification, the present invention is directed to apparatuses and methods for auto activating fonts for applications using font sets.","Aspects of the present disclosure provide for the creation of a font set in a font manager. The font set may be associated with specific applications. For example, the font set may include a collection of fonts the user would like to activate when the application associated with that font set is launched. When the font manager is notified by the operating system that an application process corresponding to a font set managed by the font manager is launched, the font manager may interrupt the application process from completing its launch. During the interrupt, the font manger may activate the font sets associated with that process\/application. Once all of the fonts of the font set corresponding to the application have been activated, the font manager may allow the process\/application to continue to launch. Such processes would also provide support for applications that might otherwise fail to recognize font activations post launch.","According to another aspect, automatic activation of fonts in a manner that is quick and transparent to the end user is provided. For example, in one or more operating systems such as the Mac OS X, it is possible for the font manager to pre-activate fonts and hide them from the operating system. When the font manager receives a signal to activate the font sets, it can unhide\/reveal them from the operating system. This approach may be faster than activating each font individually in the font sets.","According to yet another aspect, hiding or deactivating font sets upon application shut down may be provided. For example, the font manager may monitor and receive a signal from the operating system indicating that a process\/application has terminated and can either hide the fonts in the font set or deactivate the fonts.","In the following description of the various embodiments, reference is made to the accompanying drawings, which form a part hereof, and in which is shown by way of illustration various embodiments in which the invention may be practiced. It is to be understood that other embodiments may be utilized and structural and functional modifications may be made without departing from the scope of the present invention.",{"@attributes":{"id":"p-0020","num":"0019"},"figref":["FIG. 1","FIG. 1"],"b":["105","105","105","105","100","100","110","110","105","105","110","110","115"],"i":["a ","b","a","b ","a","b","a","b","a","b "]},{"@attributes":{"id":"p-0021","num":"0020"},"figref":"FIG. 2","b":["200","205","210","225","235","230","220","225","200","210","205","225","220","225","235","200"]},"Additionally, computing device  may include an input adapter , output adapter  and network adapter . Input adapter , for example, may be used to interpret signals from one or more input devices such as a keyboard, a mouse, a stylus, a camera and the like. Output adapter , on the other hand, maybe configured to interpret or decode signals and provide output signals to a variety of devices including a display device, a haptic feedback device, speakers or other audio output devices and the like. Network adapter  may be used to facilitate communications with wired or wireless wide area networks (WAN) and local area networks (LAN).","Communications between the operating system  to the font manager  may be enabled by the use of a hook that operates in user-mode (not shown). Alternatively or additionally, a kernel hook  may be used to enable communications between operating system  and font manager . The communications include notification from the operating system  to the font manager . This approach is not system invasive and might not depend on APIs, whether provided for by the applications. Therefore, this eliminates the need for plug-ins to activate fonts.",{"@attributes":{"id":"p-0024","num":"0023"},"figref":["FIG. 3","FIG. 1","FIG. 1"],"b":["300","305","305","100","110","110"],"i":["a","b "]},"The name of font set  may be specified in address section  while the list of fonts  included in the font set may be displayed in portion . Fonts  may be displayed textually in a list, graphically using representative icons or a combination thereof. A list of available font sets  may be displayed in portion  so that a user may switch between, manage and\/or edit various font sets. Fonts may be added to font set  by using add option . For example, upon selecting add option , a file or font retrieval prompt (not shown) may be displayed to the user to select a further font. Additionally or alternatively, fonts may be dragged and dropped from an available font list (not shown) into portion  as a method of adding a font to a font set (e.g., font set ). Fonts of font set  may be deleted or removed from the set by selecting delete option  or by placing focus (e.g., highlighting or selecting) one of fonts  and selecting a delete button on an input device. Once a user is finished with editing a font set such as font set , the user may confirm the edits by selecting apply option .",{"@attributes":{"id":"p-0026","num":"0025"},"figref":"FIG. 4","b":["400","405","405","403","400","405","407","400","409","405"]},{"@attributes":{"id":"p-0027","num":"0026"},"figref":"FIG. 5","b":["501","503","501","503","501","503","501","503","501","503","501","503","501","501"],"i":["a ","a","b ","b ","c","c ","c ","b","c ","b ","c. "]},"As further illustrated in , multiple font sets may share one or more fonts and font files corresponding thereto. For example, font sets and may share font . Although font is represented separately in font sets and , it is to be understood that font may correspond to the same font and font file. Thus, once font has been activated or loaded as part of font set , for example, font might not need to be reloaded or reactivated as part of font set when an application associated with and using font set is launched.",{"@attributes":{"id":"p-0029","num":"0028"},"figref":"FIG. 6","b":["605","610"]},"In step , the font manager hides the pre-activated fonts from the operating system. Hiding the fonts allows them to be revealed later in a quick manner that is not noticeable by the user. When the fonts are pre-activated and hidden from the operating system, certain application processes, those that are not concerned with the presence of active fonts in the system, will not be continually pre-occupied with font status messages, thereby consuming less system resources. That is, font status messages for the pre-activated\/hidden fonts might not be sent to all or some applications operating in the system. In contrast, a fully activated font that is not hidden may have status messages provided to the underlying operating system as well as one or more applications running on the system. For example, when an application activates or deactivates a font, a system message may be sent out to all active processes indicating that a new font is active or has been deactivated. It may be up to the application to decide how to respond to such a message. In some arrangements, applications might not listen to those messages, and resort to polling the font seed instead. The font seed may be an operating system counter that increments and decrements whenever a font is activated and deactivated, respectively. In such arrangements, the application may record the font seed at launch, and periodically (or in response to an end user action) poll the font seed and compare that value to its internal value and if different update its internal list of fonts.","If, on the other hand, the underlying operating system does not support pre-activation, the font manager might not pre-activate the fonts. In either case, the method of  may proceed to step  of  where fonts may be fully activated and\/or unhidden upon application launch.","As noted,  illustrates a method for automatically activating fonts for applications using font sets. In step , the font manager (e.g., manager  of ) may receive a notification from an operating system indicating that an application is launching. The font manager may request temporarily halting of the application launch in step . Halting of the application may be performed so that fonts may be loaded into the system prior to the application being activated. Accordingly, the application is prevented from fully launching. In step , the font manager may determine the font set(s) associated with the application being launched. For example, the font manager may use a look-up table that stores associations between the application and one or more font sets. In step , the font manager may determine whether the fonts included in the identified font set(s) have been activated already. Such a determination may be performed by requesting a list of activated fonts from the underlying operating system or by examining a list of activated fonts stored in system memory. Fonts may already be activated if they are used by other applications currently running on the system, for instance.","If one or more fonts in the font set(s) have not been activated, the font manager may determine whether those fonts are pre-activated in step . In one or more arrangements, the font manager may maintain font status information for fonts that it is managing to determine whether a font is activated, pre-activated and hidden, deactivated and the like. Alternatively or additionally, the font manager may consult a system process to determine the status of fonts. If the one or more fonts are pre-activated, the font manager may unhide or reveal the pre-activated fonts in step . Unhiding a font may include requesting that the operating system start providing font status messages to all active processes.","If the one or more fonts have not been fully activated, the font manager may activate the fonts in step . As noted herein, activation of the fonts may include loading the fonts into system memory (e.g., RAM) and font information such as font status messages may be made available to one or more active applications including the application being launched.","After all the font sets associated with the launching application have been activated, the font manager then allows the application to resume launching in step .",{"@attributes":{"id":"p-0036","num":"0035"},"figref":["FIG. 8","FIG. 2"],"b":["805","810","815","820","830","825"]},"The methods and apparatuses described herein provide certain benefits to the user. The font sets support automatic activation of fonts for applications that do not have application programming interfaces, providing a global solution for supporting any application. Font sets also support automatic activation of fonts for applications that do not recognize font activations or deactivations that occur after an application is launched or terminated. Furthermore, in the case of pre-activating the font sets in the font manager at start-up, it is much faster to hide and reveal font sets than activate or deactivate them.","The methods and features recited herein may further be implemented through any number of computer readable media that are able to store computer readable instructions. Examples of computer readable media that may be used include random access memory (RAM), read-only memory (ROM), electrically erasable programmable read-only memory (ROM), flash memory, compact disk read-only memory (CD-ROM), digital versatile disc (DVD), magnetic cassettes, magnetic tape, magnetic storage, or other memory technology.","Additionally or alternatively, in at least some embodiments, the methods and features recited herein may be implemented through one or more integrated circuits (ICs). An integrated circuit may be a microprocessor that accesses programming instructions or other data stored in a in a read only memory (ROM). In some embodiments, the ROM stores programming instructions that cause the IC to perform operations according to one or more of the methods described herein. In at least some other embodiments, one or more of the methods described herein are hardwired into an IC. In other words, the IC is, in such cases, an application specific integrated circuit (ASIC) having gates and other logic dedicated to the calculations and other operations described herein. In still other embodiments, the IC may perform some operations based on execution of programming instructions from ROM or RAM, with other operations hardwired into gates and other logic of IC. Further, the IC may output image data to a display buffer.","Although specific examples of carrying out various features have been described, those skilled in the art will appreciate that there are numerous variations and permutations of the above-described system and methods that are contained within the spirit and scope of the disclosure as set forth in the appended claims. Additionally, numerous other embodiments, modifications and variations within the scope and spirit of the appended claims will occur to persons of ordinary skill in the art from a review of this disclosure."],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"BRIEF DESCRIPTION OF THE DRAWINGS","p":["Various objects, features, and advantages of the present disclosure will be more readily apparent and more fully understood from the following detailed description, taken in connection with the appended drawings, in which:",{"@attributes":{"id":"p-0011","num":"0010"},"figref":"FIG. 1"},{"@attributes":{"id":"p-0012","num":"0011"},"figref":"FIG. 2"},{"@attributes":{"id":"p-0013","num":"0012"},"figref":"FIG. 3"},{"@attributes":{"id":"p-0014","num":"0013"},"figref":"FIG. 4"},{"@attributes":{"id":"p-0015","num":"0014"},"figref":"FIG. 5"},{"@attributes":{"id":"p-0016","num":"0015"},"figref":"FIG. 6"},{"@attributes":{"id":"p-0017","num":"0016"},"figref":"FIG. 7"},{"@attributes":{"id":"p-0018","num":"0017"},"figref":"FIG. 8"}]},"DETDESC":[{},{}]}
