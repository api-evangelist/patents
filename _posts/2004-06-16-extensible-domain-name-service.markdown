---
title: Extensible domain name service
abstract: In various embodiments the extensible attribute within the extended DNS is accessed through an application programming interface (API). This API is configured to facilitate input and output of the extended DNS data and to allow an external application to identify and interchange those attribute data that the external application is configured to process.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=07761570&OS=07761570&RS=07761570
owner: Nominum, Inc.
number: 07761570
owner_city: Redwood City
owner_country: US
publication_date: 20040616
---

{"@attributes":{"id":"description"},"RELAPP":[{},{}],"heading":["CROSS-REFERENCE TO RELATED APPLICATIONS","BACKGROUND","SUMMARY OF THE INVENTION","DETAILED DESCRIPTION OF THE INVENTION"],"p":["This application claims benefit of commonly owned U.S. Provisional Patent Application No. 60\/483,393, entitled \u201cExtensible Domain Name Service\u201d and filed Jun. 26, 2003. The disclosure of which is herein incorporated by reference.","1. Field of the Invention","The invention is in the field of computer science and more specifically in the field of network protocols.","2. Prior Art","The Internet is a network of computing systems configured to communicate with each other. Communication is accomplished using a system of unique numerical addresses such as Internet Protocol (IP) addresses. However, computing systems connected to the internet are also addressable using \u201cdomain names\u201d such as www.nominum.com. When a domain name is used to specify a location on the internet, the domain name is translated (i.e., \u201cresolved\u201d) into the IP address of that location by the Domain Name System (DNS). The DNS also stores other types of information that may be looked up by domain name, such as information for routing electronic mail.","Internet domain names are arranged hierarchically. For example, the domain name www.nominum.com is part of the \u201cnominum.com\u201d domain, which in turn is a subdomain of the \u201ccom\u201d domain, which is a subdomain of the \u201croot domain.\u201d The root domain can be viewed as a parent domain of \u201ccorn,\u201d which in turn is a parent domain of \u201cnominum.com,\u201d etcetera. Other valid addresses defined under the nominum.com domain may include, for example, \u201cproducts.nominum.com\u201d or \u201csales.nominum.com.\u201d Often a domain name is used in conjunction with directory or file information to form a Universal Resource Locator (URL) associated with a specific file (e.g., www.nominum.com\/main\/products.html).","Information to be looked up in the DNS is stored in servers referred to as \u201cauthoritative servers.\u201d An authoritative server stores the information pertaining to a particular domain, exclusive of any subdomains that have been delegated to their own authoritative servers. Additionally, servers that are authoritative for a parent domain store information identifying servers authoritative for its delegated subdomains, for use in referring information requests.","When a domain name is entered at a client computer, the client computer typically queries a local \u201ccaching server\u201d which resolves the name into an IP address or other desired DNS information on the client's behalf and then returns the information to the client. This caching server may, for example, be managed by a local interne service provider.","The caching server resolves names by querying one or more authoritative servers. For example, to resolve the name \u201cwww.nominum.com,\u201d a typical caching server may first query one of the servers authoritative for the root domain, which responds with a \u201creferral response\u201d including referral information identifying the server4s authoritative for the \u201ccorn\u201d domain. The caching server then queries one of the servers authoritative for the \u201ccorn\u201d domain, which responds with another referral response identifying the servers authoritative for the \u201cnominum.com\u201d domain. Finally, the caching server queries one of the servers authoritative for the \u201cnominum.com\u201d domain, which responds with an \u201canswer response\u201d containing the desired answer information regarding www.nominum.com.","The caching server also includes a cache of information previously received from authoritative servers as a result of past queries, so as to improve efficiency by avoiding repeated queries. Typically, cache data are stored in a tree structure such that navigating the cache starting from a root node yields either the desired answer or, when the answer is not present, identifies the closest parent domain for which cached information identifying its authoritative servers is present, allowing that information to serve as a starting point for the process of querying authoritative servers as described above. In a typical cache, information from both answer responses and referral responses is stored in the same tree structure. When the cache data are stored in a tree structure, a search of the cache can be accomplished in a time roughly proportional to log(n), where \u201cn\u201d is the size of the cache.","The Domain Name Service generates a result of fixed format and type when a domain name is resolved. This rigid structure limits the Domain Name Service to a restricted set of operations. There is a need for performing additional operations that improve the efficiency and utility of the Domain Name Service.","The invention includes extended DNS data having one or more extensible attributes as well as systems and methods that utilize these extensible attributes. The extensible attributes include both attribute data and metadata configured to indicate a type of the attribute data. The attribute data is configured, for example, to characterize other fields in the extended DNS data and\/or to enable new applications relating to DNS data.","In various embodiments, the extensible attributes are accessed through an application programming interface (API). This API is configured to facilitate input and output of the extended DNS data. In some embodiments, the extended DNS data is presented to applications in a neutral interchange format. This format allows an external application to identify and interchange those attribute data that the external application is configured to use further while disregarding those attribute data not defined within the application.","The invention further includes several systems and methods of managing extended DNS data using an extensible attribute. This management includes load balancing of DNS services, variation in DNS data presentation, sorting of DNS data, DNS data expiration management, and the like.","Various embodiments of the invention include a network application system configured to store extended DNS data, the extended DNS data comprising a data field configured to store a domain name, a data field configured to store DNS information, and an extensible DNS field configured to store attribute data and metadata, the metadata configured to characterize a type of the attribute data.","Various embodiments of the invention include a network application system comprising data storage configured to store extended DNS data, the extended DNS data including an extensible DNS field configured to store attribute data and metadata, the metadata configured to characterize a type of the attribute data, a data driver configured to read from or write to the data storage, and to convert the extended DNS data between a neutral interchange format and a format used to store the extended DNS data in the data storage, the neutral interchange format including an attribute field and a metadata field, the metadata field being configured for storing data characterizing data stored in the attribute field, and a DNS server configured to exchange the extended DNS data with the data driver in the neutral interchange format, to parse the data in the neutral interchange format, and to translate a domain name to DNS information.","Various embodiments of the invention include a computer readable medium having stored thereupon computer code configured to provide domain name services, the computer code comprising a code segment configured to read extended DNS data, the extended DNS data including an extensible DNS field configured to store attribute data and metadata, the metadata configured to characterize a type of the attribute data, a code segment configured to convert the read extended DNS data to a neutral interchange format, the neutral interchange format including an attribute field and a metadata field, the metadata field being configured for storing data characterizing data stored in the attribute field, and a code segment configured to output the read extended DNS data.","Various embodiments of the invention include a method of accessing DNS data, the method comprising receiving a data request for DNS data, accessing data storage to read extended DNS data, the extended DNS data including an extensible DNS field configured to store attribute data and metadata, the metadata configured to characterize a type of the attribute data, and outputting at least part of the read extended DNS data.","Various embodiments of the invention include a method of storing DNS data, the method comprising receiving DNS data, and storing the received DNS data in a data storage configured to store extended DNS data, the extended DNS data including an extensible DNS field configured to store attribute data and metadata, the metadata configured to characterize a type of the attribute data.","Various embodiments of the invention include a method of ranking DNS data, the method comprising reading a plurality of DNS data sets, each of the plurality of DNS data sets including an extensible DNS field and a name field, identifying metadata within each extensible DNS field, using the read metadata to identify attribute data in each extensible DNS field, and ranking the DNS data sets based on the attribute data.","Various embodiments of the invention include a domain name service comprising means for receiving a request for DNS data, means for reading extended DNS data in response to the request, the extended DNS data including an extensible DNS field configured to store attribute data and means for characterizing a type of the attribute data, and means for outputting at least part of the read extended DNS data.","Various embodiments of the invention include a domain name service comprising means for receiving DNS data, means for storing the received DNS data in a data storage configured to store extended DNS data, the extended DNS data including an extensible DNS field configured to store attribute data and metadata, the metadata configured to characterize a type of the attribute data.","The utility of DNS data is improved with the addition of one or more extensible data fields. These data fields are optionally bound to DNS data, such as a domain name, a set of DNS records, and individual DNS record, or the like. In various embodiments, systems configured to use this extended DNS data (i.e., DNS data having an extensible data field) are able to perform new DNS operations such as ranking of DNS responses, referral load balancing, hierarchical access control, customization of DNS data presentation, DNS data filtering, or the like.",{"@attributes":{"id":"p-0030","num":"0028"},"figref":"FIG. 1","b":["110","110","120","110","130","140","150","160","130","130","130","130","140","140"]},"Data Driver  includes computer instructions configured to retrieve or store data in Data Storage  and optionally to provide an application programming interface (API) for use in retrieving data from, and storing data to, Data Storage . For example, in some embodiments, Data Driver  is configured to communicate with Application Server  or Network  through the neutral interchange format. As discussed further herein, the neutral interchange format allows systems communicating, through Data Driver , with Data Storage , to selectively make use of the extended DNS data.","Memory  is configured to store a cache of data, such as DNS data previously retrieved from Data Storage  or received from Network . In some embodiments, the cache of data includes extended DNS data stored in the neutral interchange format. In various embodiments, Memory  includes random access memory, an optical storage device, an electromagnetic storage device, or some other computer readable media.","Data Storage  is configured to store extended DNS data including an extensible attribute. In various embodiments, Data Storage  includes a binary table, a file of data sets, a relational database system, or the like. For example, in some embodiments, Data Storage  is configured to include a structured database and supporting database software such as IBM DB2\u00ae, Oracle\u00ae, Berkeley DB, Informix XPS\u00ae, or the like. Within a relational database system, extended DNS data can be stored in a variety of formats including the neutral interchange format, DB2, Oracle, Berkeley DB, or the like. In some embodiments, Data Storage  is configured to store a binary file including the extensible DNS data, a file including a hierarchical data structure, or the like. Data Storage  is optionally distributed among several devices having computer readable media.",{"@attributes":{"id":"p-0034","num":"0032"},"figref":["FIG. 2","FIG. 2"],"b":["200","210","210","220","230","240","220","230","240","250","260","220","230","240","250","260","240","140","140","240","250","250","260","260","260","210","210","240","230","220","200"]},"In various embodiments, Attribute Data  applies to extended DNS data of varying degrees of scope. For example, in various cases an instance of Attribute Data  applies to an individual member of Extended DNS Data Sets A-F, Extended DNS Data  at the same data set level, Extended DNS Data Sets A-F at the same node level, members of Extended DNS Data Sets A-F at the same zone level, or the like. Extended DNS Data  at the same data set level include, for example, data sets of the same DNS type. Extended DNS Data  at the same node level include data having the same primary or secondary domain name. Extended DNS Data  at the same zone level includes data having a common authority (e.g., mail.nominum.com is a different zone than sales.nominum.com if they are managed by different authorities).",{"@attributes":{"id":"p-0036","num":"0034"},"figref":"FIG. 3","b":["160","130","120","140","140","160"]},"More specifically, in a Receive Data Request Step , Data Driver  receives a request for Extended DNS Data  from Application Server  or, in some embodiments, from Network . For example, in embodiments wherein Application Server  is a DNS server, Application Server  may request that Data Driver  return an IP address and Attribute Data  from Data Storage .","In an Access Data Step , Data Driver  accesses Data Storage  to retrieve the requested information. In some embodiments, this access is facilitated by a query to a relational database system. In some embodiments, reading of a member of Extended DNS Data Sets A-F is tracked using an associated Attribute Data . In these embodiments, updating of this associated Attribute Data  is optionally included in Access Data Step .","In an Optional Convert Data Step , data read from Data Storage  is converted to a neutral interchange format using Data Driver . The neutral interchange format includes one or more attribute fields and metadata. The one or more attribute fields are configured to hold, for example, the data received from Data Storage  and the metadata is configured to characterized the attribute fields and\/or the data they hold. This metadata is further configured such that computer instructions receiving data in the neutral interchange format can parse the received data and identify elements of the received data that the computer instructions are configured to use in further operations. Using the metadata included in the neutral interchange format, Application Server  can differentiate between elements of the received data that it is configured to use further and elements of the received data that it is not configured to use further. The neutral interchange format is configured such that Application Server  can ignore data, received from Data Driver , that Application Server  is not configured to use.","In some embodiments, the request received in Receive Data Request Step  includes an instruction indicating that Data Driver  should omit Convert Data Step . In these embodiments, Convert Data Step  is skipped. In some embodiments data is already in the neutral interchange format when retrieved from Data Storage  in Access Data Step . In these embodiments Convert Data Step  is not necessary.","In an Output Data Step , data read from Data Storage , and optionally converted to neutral interchange format in Convert Data Step , is provided as output from Data Driver . In typical embodiments this output is provided to Application Server . However, in some embodiments this output is provided directly to a system included in Network .","In an optional Receive Data Step , Application Server  or a system included in Network  receives the output from Data Driver  provided in Output Data Step . In Receive Data Step , the receiving entity optionally parses the extended DNS data to identify Attribute Data  of interest. Attribute Data  that is not of interest, or that is of a type unknown to the receiving entity, is optionally ignored.",{"@attributes":{"id":"p-0043","num":"0041"},"figref":"FIG. 4","b":["160","130","120","140","140","160"]},"More specifically, in a Send Data Step , Application Server or some element included in Network  sends data to Data Driver . In various embodiments, the sent data includes a request for information from Data Storage , additions to Extended DNS Data , and\/or updates to one or more of Extended DNS Data Sets A-F. For example, in some embodiments the sent data includes an updated time-to-live values, and instructions specifying that these updated time-to-live values should apply to a specific zone level under the domain name. This, and similar data, is sent in the neutral interchange format and, thus, includes metadata identifying and characterizing the included values. Because the data sent in Send Data Step  is typically sent in the neutral interchange format, it can be configured to query or update specific fields within a member of Extended DNS Data Sets A-F, an entire data set within Extended DNS Data Sets A-F, or members of Extended DNS Data Sets A-F grouped by data set level, node level, or zone level.","In a Receive Data Step , Data Driver  receives the data sent in Send Data Step . In various embodiments, this step includes parsing of the received data to verify correct syntax and format, identification of instructions relating to use of the received data or of data stored in Data Storage , and\/or identification of other parts of the received data. For example, in one embodiment, Receive Data Step  includes identification of data to be written to a specific member of Extended DNS Data Sets A-F, instructions to write this data based on a conditional statement relating to the authority of a user to modify Extended DNS Data , and a value representing the user's authority. In another embodiment, Receive Data Step  includes identification of a request for resolution of a domain name and identification of a specification that no more than n referral responses be returned.","In an optional Convert Data Step , Data Driver  converts any of the data received in Receive Data Step , that is to be written to Data Storage , from the neutral interchange format to the format used to store Extended DNS Data  in Data Storage . In embodiments wherein the neutral interchange format is used to store data in Data Storage , Convert Data Step  is not required. In a Store Data Step , all or part of the data received in Receive Data Step, and optionally converted in Convert Data Step , is written to Extended DNS Data  in Data Storage . In some embodiments, data received in Receive Data Step  and optionally converted in Convert Data Step  is cached in Memory .","In an optional Respond Step , Data Driver  responds to the data received in Receive Data Step . In various embodiments, this response includes an acknowledgement that the data was received and\/or processed, a result of processing the received data, data read from Data Storage , or the like.","The systems and methods illustrated herein are applied to a number of specific applications involving the use of DNS data. Illustrative examples of these applications include control of data access, variable presentation of output from Data Driver , management of DNS data expiration, load balancing of DNS services, and sorting of DNS data. Each of these applications is discussed in further detail herein.","Various embodiments of the methods illustrated by  include control of read access to parts of Extended DNS Data . In these embodiments, Receive Data Request Step  includes receiving user identifying information, and in Access Data Step , Attribute Data  relating to access authority is read from Extended DNS Data . In Output Data Step  the user identifying information and Attribute Data  are used in a comparison to determine if the user has authority to access the requested information. If so, then the requested information is provided as output from Data Driver  in Output Data Step . If not, then the requested information is not provided as output.","In various embodiments, Attribute Data  is used to establish Multiple Levels of authority (i.e., access control). For example, in one embodiment the Extensible DNS Field  included in Extended DNS Data Set A includes Attribute Data  establishing a hierarchical authority structure. In some cases this authority structure is used to establish different authority requirements for accessing data at a zone level than for accessing data at a node level. In some cases, this authority structure is used to establish different authority requirements for accessing different Attribute Data  in a single member of Extended DNS Data Sets A-F.","Some embodiments of the methods illustrated by  include control of write access to Extended DNS Data . As with read access control, in these embodiments user identifying information is used together with Attribute Data  in a comparison to establish a proper level of authority before access is allowed. In the case of write access control, the user identifying information is received in Receive Data Step  and the comparison is made prior to writing data to Data Storage  in Store Data Step . Typically, Attribute Data  used in the comparison is obtained by adding a step including reading Data Storage  to the methods illustrated by . This step is similar to Access Data Step .","Some embodiments of the methods illustrated by  include formatting of the output provided by Data Driver  responsive to Attribute Data  read from Data Storage  in Access Data Step . For example, in some embodiments, data included in the output of Data Driver  is sorted responsive to Attribute Data . In some embodiments, inclusion of data in the output of Data Driver  is response to either the presence of a particular Attribute Data  and\/or the value of Attribute Data  that is present.","New load balancing techniques are enabled when Attribute Data  is used to sort or rank Extended DNS Data Sets A-F. For example, in various embodiments, it is desirable to distribute DNS referrals among a variety of servers, such as web servers, mail servers, cache servers, authoritative servers, or other network servers. In one embodiment, Attribute Data  is used to measure server load by tracking a quantity of referrals made to each server and to rank Extended DNS Data Sets A-F according to this Attribute Data . In alternative embodiments external processes are used to monitor the load on a server. For example, in one embodiment a time required for the server to process a request is measured. In another embodiment, the server reports a measure of its load. These measures are stored in Attribute Data . Those servers having the greatest load are given a lower priority to receive subsequent referrals. In some embodiments, a subset of the possible referrals read by Data Driver  from Data Storage  is provided in the output of Data Driver . For example, it is not unusual for a request for domain name resolution to result in reading tens of referrals (i.e., members of Extended DNS Data Sets A-F including referral information) to servers. The read referrals are sorted by Data Driver  using Attribute Data , and a subset of the least used referrals are included in the output of Data Driver . This approach balances the load (number of referrals) among the network servers.","For example, in one embodiment wherein load balancing techniques are used, Application Server  is a DNS server configured to respond to a request for domain name resolution with no more than ten referral responses. In order to do so the DNS server sorts referral responses retrieved from Data Storage , the sorting being dependent on ranking of attributes retrieved from Data Storage  and relating to the number of times each read member of Extended DNS Data Sets A-F has been used for referral. Data Driver  then provides, as output, data from those Extended DNS Data Sets A-F that have been used the least recently.","The embodiments discussed herein are illustrative of the present invention. As these embodiments of the present invention are described with reference to illustrations, various modifications or adaptations of the methods and or specific structures described may become apparent to those skilled in the art. All such modifications, adaptations, or variations that rely upon the teachings of the present invention, and through which these teachings have advanced the art, are considered to be within the spirit and scope of the present invention. Hence, these descriptions and drawings should not be considered in a limiting sense, as it is understood that the present invention is in no way limited to only the embodiments illustrated. For example, in addition to IP addresses, which are used herein for illustrative purposes, embodiments of the invention may be applied generally to DNS information such as mail exchange information (MX records), SRV (service location) records, AAAA (IPv6) address, or like data defined within DNS standards. (For DNS standards see, for example, Mockapetris, P., \u201cDomain Names\u2014Concepts and Facilities,\u201d STD 13, RFC 1034, November 1987. http:\/\/www.ietf.org\/rfc\/rfc1034.txt, and Mockapetris, P., \u201cDomain Names\u2014Implementation and Specification,\u201d STD 13, RFC 1035, November 1987. http:\/\/www.ietf.org\/rfc\/rfc1035.txt, incorporated herein by reference.) These DNS information may be substituted for IP addresses in the embodiments discussed herein and these DNS information may be adapted to include data types defined by future DNS standards."],"BRFSUM":[{},{}],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"BRIEF DESCRIPTION OF THE VARIOUS VIEWS OF THE DRAWING","p":[{"@attributes":{"id":"p-0025","num":"0023"},"figref":"FIG. 1"},{"@attributes":{"id":"p-0026","num":"0024"},"figref":"FIG. 2"},{"@attributes":{"id":"p-0027","num":"0025"},"figref":"FIG. 3"},{"@attributes":{"id":"p-0028","num":"0026"},"figref":"FIG. 4"}]},"DETDESC":[{},{}]}
