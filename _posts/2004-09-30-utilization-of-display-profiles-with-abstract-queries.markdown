---
title: Utilization of display profiles with abstract queries
abstract: Methods, systems, and articles of manufacture for applying query-level and parameter-level display profiles to abstract queries are provided. Display profiles allow users to utilize existing abstract queries for purposes of data analysis. In one embodiment, display profiles are used to change the scope of an existing abstract query or incorporate existing data processing functions into the abstract query.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08041728&OS=08041728&RS=08041728
owner: International Business Machines Corporation
number: 08041728
owner_city: Armonk
owner_country: US
publication_date: 20040930
---

{"@attributes":{"id":"description"},"BRFSUM":[{},{}],"heading":["CROSS-REFERENCE TO RELATED APPLICATIONS","BACKGROUND OF THE INVENTION","SUMMARY OF THE INVENTION","DETAILED DESCRIPTION OF THE PREFERRED EMBODIMENTS","An Exemplary System","An Exemplary Graphical User Interface","CONCLUSION"],"p":["The present application is related to commonly owned, co-pending U.S. patent application Ser. No. 10\/083,075, filed Feb. 26, 2002, entitled \u201cApplication Portability And Extensibility Through Database Schema And Query Abstraction\u201d, which is incorporated herein by reference.","1. Field of the Invention","The present invention generally relates to data processing and more particularly to applying display profiles to queries.","2. Description of the Related Art","Databases are computerized information storage and retrieval systems. A relational database management system is a computer database management system (DBMS) that uses relational techniques for storing and retrieving data. The most prevalent type of database is the relational database, a tabular database in which data is defined so that it can be reorganized and accessed in a number of different ways. A distributed database is one that can be dispersed or replicated among different points in a network. An object-oriented programming database is one that is congruent with the data defined in object classes and subclasses.","Regardless of the particular architecture, in a DBMS, a requesting entity (e.g., an application or the operating system) demands access to a specified database by issuing a database access request. Such requests may include, for instance, simple catalog lookup requests or transactions and combinations of transactions that operate to read, change and add specified records in the database. These requests are made using high-level query languages such as the Structured Query Language (SQL) and application programming interfaces (API's) such as Java\u00ae Database Connectivity (JDBC). The term \u201cquery\u201d denominates a set of commands for retrieving data from a stored database. Queries take the form of a command language, such as SQL, that lets programmers and programs select, insert, update, find out the location of data, and so forth.","Unfortunately, generating queries using SQL may require a detailed understanding of the possibly complex physical layout of the underlying database and interpretation of cryptic field names. For some applications, to facilitate the query building process, an abstraction model may be utilized that, in effect, hides some of the complexities of the underlying database physical layout from users. The abstraction model may include logical fields with recognizable names that map to corresponding physical fields of the underlying database. \u201cAbstract\u201d queries may be generated containing conditions based on the logical fields. Upon issuance, the logical fields of an abstract query may be mapped to corresponding physical fields to create a physical or \u201cconcrete\u201d query (e.g., an SQL query). For some applications, abstract queries may be saved, allowing subsequent users to reuse the saved abstract queries without having to generate their own. The concepts of data abstraction and abstract queries are described in detail in the commonly owned, co-pending application Ser. No. 10\/083,075, entitled \u201cImproved Application Portability And Extensibility Through Database Schema And Query Abstraction,\u201d filed Feb. 26, 2002, herein incorporated by reference in its entirety.","While abstraction models and abstract queries make it easier and more efficient for users to access data within a database, there are situations when users want to alter the scope of the abstract queries and further process the queries' result sets without having to modify the syntax of the queries or create new abstract queries. Altering the scope of abstract queries may include, for example, considering additional query conditions directed to expanding a result set, restrict the result set or even calling existing data processing functions to manipulate data within the result set. Unfortunately, the infrastructure facilitating the abstraction model may not be flexible enough to allow for the further use of existing abstract queries and their result sets for such purposes without modifying the syntax of the original abstract queries. One alternative is to create a completely new abstract query, which may be based on combining the syntax of the existing abstract query with the syntax of additional query conditions directed to altering the result set as required by the user. There may be instances where a particular group of query conditions may need to be applied to numerous abstract queries, necessitating the creation of many new abstract queries comprising identical syntax representing query conditions.","Those skilled in the art will acknowledge that the process described above is inefficient, time consuming and wasteful of resources due to redundancies. Therefore, what is needed is a solution that allows for the ability to use previously defined abstract queries (and their corresponding result sets) by allowing for the application of additional query conditions to these base queries. Further, the group of additional query conditions should be packaged in a module and presented in abstract form so that it is convenient for the collection of additional query conditions to be selected for application to other base queries, as required by the user. In other words, the modules comprising additional query components should be capable of being applied to multiple abstract queries.","The present invention is generally directed to methods, systems and articles of manufacture for applying query-level and parameter-level display profiles to abstract queries.","One embodiment of the present invention provides a data processing system for composing queries. The data processing system generally includes a data repository containing physical data structures containing data, an abstract model comprising logical field definitions mapped to the physical data structures in the data repository, a plurality of pre-defined abstract queries defined according to the abstract model and configured to retrieve the data from the data repository by referencing the abstract model, and a plurality of display profiles comprising a plurality of abstract query conditions defined according to the abstract model. The data processing system further includes a query processor configured to (i) convert one or more selected pre-defined abstract queries into one or more executable queries of a given query language by referencing the abstract model, (ii) convert one or more selected display profiles into transformed instances of the one or more selected display profiles by referencing the abstract model, wherein the transformed instances of the one or more selected display profiles are in the given query language, and then (iii) combine the one or executable queries and the transformed instances of the one or more selected display profiles to produce a merged executable query, while preserving the syntax of the one or more selected pre-defined abstract queries in the merged executable query.","Another embodiment of the present invention provides a computer implemented method for composing queries. The computer implemented method generally includes providing a data repository containing physical data structures containing data, providing an abstract model comprising logical field definitions mapped to the physical data structures in the data repository, and providing a plurality of pre-defined abstract queries configured to retrieve the data from the data repository by referencing the abstract model. The computer implemented method also includes receiving a selected abstract query, selected by a user from the plurality of pre-defined abstract queries, on the basis of the selected abstract query, determining one or more display profiles that can be applied to the selected abstract query, wherein the display profiles comprise a plurality of abstract query conditions, displaying to the user the one or more display profiles, and receiving a selected display profile selected by the user from the one or more display profiles displayed to the user. The computer implemented method further includes transforming the selected abstract query to an executable query of a given query language by referencing the abstract model, transforming the selected display profile into a transformed instance of the selected display profile by referencing the abstract model, wherein the transformed instance of the selected display profile is in the given query language, and generating a merged executable query corresponding to a combination of the executable query and the transformed instance of the selected display profile in which the syntax of the executable query is preserved, and wherein the executable query and the transformed instance of the selected display profile are linked at a join point defined by a field specified in the selected abstracted query and the selected display profile.","Another embodiment of the present invention provides a computer implemented method for composing queries. The computer implemented method generally includes providing a data repository containing physical data structures containing data, providing an abstract model comprising logical field definitions mapped to the physical data structures in the data repository, and providing a plurality of pre-defined abstract queries configured to retrieve the data from the data repository by referencing the abstract model. The computer implemented method also includes receiving a selected abstract query selected by a user from the plurality of pre-defined abstract queries, on the basis of the selected abstract query, determining one or more query-level display profiles that can be applied to the selected abstract query, wherein query-level display profiles comprise a plurality of abstract query conditions, and are configured to alter the scope of the selected abstract query while preserving the syntax of the selected abstract query, displaying to the user the one or more query-level display profiles, and receiving a selected display profile selected by the user from the one or more query-level display profiles displayed to the user. The computer implemented method also includes transforming the selected abstract query to an executable query of a given query language by referencing the abstract model, transforming the selected display profile into a transformed instance of the selected display profile by referencing the abstract model, wherein the transformed instance of the selected display profile is in the given query language, and generating a merged executable query corresponding to a combination of the executable query and the transformed instance of the selected display profile in which the syntax of the executable query is preserved, and wherein the executable query and the transformed instance of the selected display profile are linked at a join point defined by a field specified in the selected abstracted query and the selected display profile.","Another embodiment of the present invention provides a computer implemented method for composing queries. The computer implemented method generally includes providing a data repository containing physical data structures containing data, wherein the data repository is managed by a database management system, providing an abstract model comprising logical fields mapped to the physical data structures in the data repository, and providing a plurality of pre-defined abstract queries configured to retrieve the data from the data repository by referencing the abstract model. The computer implemented method also includes receiving a selected abstract query selected by a user from the plurality of pre-defined abstract queries, on the basis of the selected abstract query, determining one or more parameter-level display profiles that can be applied to the selected abstract query, wherein parameter-level display profiles comprise a plurality of abstract query conditions and call existing functions to further process result sets of the selected abstract query while preserving the syntax of the selected abstract query, displaying to the user the one or more parameter-level display profiles, and receiving a selected display profile selected by the user from the one or more parameter-level display profiles that can be applied to the selected abstract query. The computer implemented method also includes transforming the selected abstract query to an executable query of a given query language by referencing the abstract model, transforming the selected display profile into a transformed instance of the selected display profile by referencing the abstract model, wherein the transformed instance of the selected display profile is in the given query language, and generating a merged executable query corresponding to a combination of the executable query and the transformed instance of the selected display profile in which the syntax of the executable query is preserved, and wherein the executable query and the transformed instance of the selected display profile are linked based on associations defined between one or more fields from the selected abstract query and one or more parameters from the selected display profile.","Another embodiment of the present invention provides a computer implemented method for composing queries. The computer implemented method generally includes providing a data repository containing physical data structures containing data, wherein the data repository is managed by a database management system, providing an abstract model comprising logical fields mapped to physical data structures in the data repository, providing a plurality of pre-defined abstract queries configured to retrieve data from the data repository by referencing the abstract model, receiving a selected abstract query selected by a user from the plurality of pre-defined abstract queries, on the basis of the selected abstract query, determining one or more query-level display profiles that can be applied to the selected abstract query, wherein query-level display profiles comprise a plurality of abstract query conditions, and are configured to alter the scope of the selected abstract query while preserving the syntax of the selected abstract query, and displaying to the user the one or more query-level display profiles. The computer implemented method also includes receiving a first selected display profile selected by the user from the one or more query-level display profiles displayed to the user, on the basis of the selected abstract query, determining one or more parameter-level display profiles that can be applied to the selected abstract query, wherein parameter-level display profiles comprise a plurality of abstract query conditions and call existing functions to further process result sets of the selected abstract query while preserving the syntax of the selected abstract query, displaying to the user the one or more parameter-level display profiles, and receiving a second selected display profile selected by the user from the one or more parameter-level display profiles that can be applied to the selected abstract query. The computer implemented method also includes transforming the selected abstract query to an executable query of a given query language by referencing the abstract model, transforming the first selected display profile to a transformed instance of the first selected display profile by referencing the abstract model, wherein the first transformed instance of the first selected display profile is in the given query language, transforming the second selected display profile to a transformed instance of the second selected display profile by referencing the abstract model, wherein the transformed instance of the selected display profile is in the given query language, and generating a merged executable query corresponding to a combination of the executable query, the transformed instance of the fist selected display profile and the transformed instance of the second selected display profile, in which the syntax of the executable query is preserved.","The present invention is generally directed to methods, systems and articles of manufacture for enhancing abstract queries by utilizing query-level and parameter-level display profiles.","Further, in the following, reference is made to embodiments of the invention. The invention is not, however, limited to specific described embodiments. Instead, any combination of the following features and elements, whether related to different embodiments or not, is contemplated to implement and practice the invention. Furthermore, in various embodiments the invention provides numerous advantages over the prior art. Although embodiments of the invention may achieve advantages over other possible solutions or over the prior art, whether or not a particular advantage is achieved by a given embodiment is not limiting of the invention. Thus, the following aspects, features, embodiments and advantages are merely illustrative and are not considered elements or limitations of the appended claims except where explicitly recited in the claims. Similarly, reference to \u201cthe invention\u201d shall not be construed as a generalization of any inventive subject matter disclosed herein and shall not be considered to be an element or limitation of the appended claims, except where explicitly recited in a specific claim.","As used herein, the term user may generally apply to any entity utilizing the data processing system described herein, such as a person (e.g., an individual) interacting with an application program or an application program itself, for example, performing automated tasks. While the following description may often refer to a graphical user interface (GUI) intended to present information to and receive information from a person, it should be understood that in many cases, the same functionality may be provided through a non-graphical user interface, such as a command line and, further, similar information may be exchanged with a non-person user via a programming interface.","As used herein, the term database generally refers to a collection of data arranged for ease and speed of search and retrieval. While the following description focuses on transaction statements (such as queries) for relational databases, those skilled in the art will recognize the methods described herein may be used with any type of database including an object-relational database and an XML-based database.","Data Processing Environment","One embodiment of the invention is implemented as a program product for use with a computer system. The program(s) of the program product defines functions of the embodiments (including the methods described herein) and can be contained on a variety of signal-bearing media. Illustrative signal-bearing media include, but are not limited to: (i) information permanently stored on non-writable storage media (e.g., read-only memory devices within a computer such as CD-ROM disks readable by a CD-ROM drive); (ii) alterable information stored on writable storage media (e.g., floppy disks within a diskette drive or hard-disk drive); or (iii) information conveyed to a computer by a communications medium, such as through a computer or telephone network, including wireless communications. The latter embodiment specifically includes information downloaded from the Internet and other networks. Such signal-bearing media, when carrying computer-readable instructions that direct the functions of the present invention, represent embodiments of the present invention.","In general, the routines executed to implement the embodiments of the invention, may be part of an operating system or a specific application, component, program, module, object, or sequence of instructions. The software of the present invention typically is comprised of a multitude of instructions that will be translated by the native computer into a machine-readable format and hence executable instructions. Also, programs are comprised of variables and data structures that either reside locally to the program or are found in memory or on storage devices. In addition, various programs described hereinafter may be identified based upon the application for which they are implemented in a specific embodiment of the invention. However, it should be appreciated that any particular nomenclature that follows is used merely for convenience, and thus the invention should not be limited to use solely in any specific application identified and\/or implied by such nomenclature.","Embodiments of the invention can be implemented in a hardware\/software configuration including at least one networked client computer and at least one server computer. Furthermore, embodiments of the present invention can apply to any comparable hardware configuration, regardless of whether the computer systems are complicated, multi-user computing apparatus, single-user workstations, or network appliances that do not have non-volatile storage of their own. Further, it is understood that while reference may be made to particular query languages, including SQL, the invention is not limited to a particular language, standard or version. Accordingly, persons skilled in the art will recognize that the invention is adaptable to other query languages and that the invention is also adaptable to future changes in a particular query language as well as to other query languages presently unknown.",{"@attributes":{"id":"p-0045","num":"0044"},"figref":"FIG. 1","b":["100","100","105","120","111","110","111","214","214","214","214"],"sub":["1","2","3"]},"The system  may include a data abstraction model (DAM)  that, in effect, shields a user from the details of the particular physical representation of the database . The DAM , also referred to as a data repository abstraction (DRA) in related applications, may define a set of logical fields that map to underlying physical fields of the underlying database . Users may be able to create abstract queries based on the logical fields, via the query building interface . Upon issuance of abstract queries, a query execution component  may convert an abstract query into a physical or \u201cconcrete\u201d query suitable for issuance against the database  by mapping logical fields of the abstract query to physical fields of the particular physical representation , based on the field definitions in the DAM . The mapping of abstract queries to physical queries, by the query execution component , is described in detail in the previously referenced U.S. patent application 10\/083,075.","Embodiments of the present invention facilitate the use of previously defined abstract queries and their corresponding result sets. A previously defined abstract query to which the user wishes to add query conditions is referred to as a base query . Additional query conditions can be applied to the base query  as specified by the user. These additional query conditions are packaged in a display profile . Display profiles  are similar in form to abstract queries, but are designed to be applied to (or combined with) a base query. The modular aspect of display profiles  allows them to be applied to any base query  with which linkage can be defined. The linkage between base queries  and display profiles  will be described in more detail later.","Users are allowed to select a base query  to which they would like to add query conditions. Based on their selection of a base query , they are provided a set of display profiles  which can be applied to the base query . It should be noted that base queries  and display profiles  are in abstract form when presented to the user. Once the user has selected a base query  and a display profile , they are both submitted to the query execution component . Within the query execution component , a query translator  converts both components into physical queries, combines them and produces a merged physical query . As used herein, the term physical queries may also be referred to as executable queries.","Two types of display profiles are described herein: query-level display profiles and parameter-level display profiles. Query-level display profiles alter the scope of an existing abstract query (or base query). For example, at the physical layer, the query-level display profile (described in terms of SQL) would automatically incorporate the use of outer joins, inline views and correlated subqueries to expand or restrict the scope of a particular base query . Query-level display profiles are described with reference to ,  and .","Parameter-level display profiles, on the other hand, programmatically encase the base query  and incorporate the use of existing functions to further process the result sets of base queries. For example, in the context of SQL, group functions such as AVERAGE, MAXIMUM and MINIMUM can be utilized. Further, parameter-level display profiles utilize parameters to allow users to choose the field of the base query's  result set that is to be processed by the functions. Parameter-level display profiles are described with reference to , , and .","Operations for generating a merged physical query  based on applying a query-level display profile  to a base query  are described with reference to , and operations related to applying a parameter-level display profile  to a base query  are described with reference to . Several examples of base queries , display profiles  and merged physical queries  are provided in the discussion below. The data and query examples included herein pertain to medical testing of patients. However, it should be understood that the functionality provided by embodiments of the present invention can be utilized in any data processing environment in which databases are maintained and data analysis facilities are provided.",{"@attributes":{"id":"p-0052","num":"0051"},"figref":"FIG. 2","b":["140","130"]},"Operations  begin at step  when a base query  is selected. For some embodiments of the current invention, a base query  may be selected from a collection of previously defined abstract queries. For other embodiments, an abstract query may be defined by a user immediately prior to being selected as a base query . Similarly, for some embodiments, display profiles may be selected from a collection of previously defined display profiles, or they may be defined immediately prior to being selected.","Next, a loop of operations (-) directed to the application of one or more display profiles  is entered. At step , a display profile  is selected. As stated above, query-level display profiles  may be used to alter the scope of the base query . However, there needs to be a linkage between the base query  and the display profile . Accordingly, at step  join points are selected to define the linkage between the base query and the current display profile. As will be described with reference to example queries below, join points may comprise one ore more fields that the base query  and display profile  have in common.","At step , it is determined if the user desires to apply any additional display profiles . As will be described in more detail with reference to Table V and , display profiles can be serially applied on top of one another. If additional display profiles  are to be applied, processing reverts to step  for applying the next display profile  on top of the current display profile  and base query  combination. Otherwise, processing proceeds to step . At step , the base query  and the display profile  are converted by the query translator  into respective physical queries that correspond to the base query and each of the applied display profiles. The physical queries are consolidated into a merged physical query  at step . Finally, at step , the merged physical query  is submitted to the RDBMS  for execution.","At the physical layer, applying a query-level display profile alters the scope of an existing abstract query by automatically generating a merged physical query  that utilizes SQL functionality such as outer joins, inline views or correlated subqueries to expand or restrict the scope of a particular base query . It should be noted that examples of the application of query-level display profiles described herein utilize correlated subqueries. However, it should be understood that the steps described with reference to operations  also apply to the use of outer joins and inline views.","In order to describe an implementation of the flow described with reference to  in more detail, a discussion utilizing exemplary base queries and display profiles is provided below. Further, in order to better understand base queries and display profiles and their corresponding merged physical queries, it would be beneficial to review the underlying database tables on which the queries are based. To that end, exemplary database tables according to one embodiment of the invention are shown in .",{"@attributes":{"id":"p-0058","num":"0057"},"figref":"FIG. 3","b":["300","301","305","301","302","303","304","305"]},{"@attributes":{"id":"p-0059","num":"0058"},"figref":"FIG. 4","b":["400","400","401","406","300","400","401","402","400","403","404","405","406"]},"It should be noted that if patients have taken tests A, B, and C on multiple occasions, a separate row is provided in the Test table  for each round of testing. For instance, the patient with the assigned ID of \u201c1\u201d has undergone four rounds of testing and, accordingly, has four corresponding records  that contain the results of those rounds of tests. Similarly, patients with ID's of \u201c3\u201d and \u201c5\u201d have each undergone two rounds of testing,  and , respectively.","It should be also noted that ID and SS_NUMBER columns appear in both the Patient table  and Test table . Those skilled in the art will recognize that the presence of both these columns in each of the tables facilitates \u201cjoining\u201d these tables via queries. Most of the abstract queries and physical queries described herein utilize joins between the Patent table  and Test table .",{"@attributes":{"id":"p-0062","num":"0061"},"tables":{"@attributes":{"id":"TABLE-US-00001","num":"00001"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"center"}},"thead":{"row":[{"entry":"TABLE I"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}},{"entry":"BASIC QUERY EXAMPLE IN ABSTRACT FORM"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}]},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":{}}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"21pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"182pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"01","Find: ID, SS Number, Age, Test A Result"]},{"entry":[{},"02","Under Conditions: Test A Result > 50 and Gender = Male"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"2","align":"center","rowsep":"1"}}]}]}}]}}},"Table I, shown above, lists a selected base query in abstract form. The base query specifies that a patient's ID, Social Security number, age and Test A Result be returned under the conditions that the Test A Result is greater than 50 and the gender of the patient is male.","Exemplary query syntax  shown in  illustrates the physical form of the base query listed in Table I. For one embodiment, the physical environment comprises relational databases managed by an RDBMS. Accordingly, the physical query is represented with SQL syntax. The results corresponding to exemplary query  are shown in . It should be noted that columns - correspond directly to the elements specified in the SELECT portion of the exemplary query .","Suppose that upon reviewing the result set  corresponding to the base query  described with reference to Table 1 and , the user wants to expand on the result set. For instance, the user may want to expand the result set to include all records for patients that had at least one instance in which the Test A Result is greater than 50, rather than only instances in which the Test A Result is greater than 50. According to one embodiment of the present invention, the user can select a display profile  to be applied to the base query  to facilitate the expansion of the base query's result set. Table II below lists the base query of Table I and an appropriate display profile (both in abstract form) that will provide the desired result set, which is the ID, SS Number, Age and Test A Result for all records pertaining to patients that had a Test A Result greater than 50 at least once.","Conceptually, application of the display profile (line 003) to the base query (lines 001-002) of Table II represents the retrieving results comprising the ID, SS Number, Age and Test A Result for all male patients (corresponds to the display profile) that have recorded at least one Test A Result >50 (corresponds to the base query). This description is based on the ID field being specified as the linkage, or join point, between the particular base query and display profile of Table II. Join points are described in more detail below.",{"@attributes":{"id":"p-0067","num":"0066"},"tables":{"@attributes":{"id":"TABLE-US-00002","num":"00002"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"center"}},"thead":{"row":[{"entry":"TABLE II"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}},{"entry":"SELECTED BASE QUERY AND QUERY-LEVEL"},{"entry":"DISPLAY PROFILE"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}]},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":{}}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"63pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"140pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"Base Query:",{}]},{"entry":[{},"01","Find: ID, SS Number, Age, Test A Result"]},{"entry":[{},"02","Under Conditions: Test A Result > 50 and"]},{"entry":[{},{},"Gender = Male"]},{"entry":[{},"Display Profile:"]},{"entry":[{},"03","Find: ID, SS Number, Age, Test A Result"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"2","align":"center","rowsep":"1"}}]}]}}]}}},"Exemplary syntax  corresponding to a merged physical query  based on the base query  and display profile  of Table II is provided in . It should be noted that there are three main components to this physical query: the display profile component , the join point component  and the base query component . The base query component  of the syntax  is almost identical to the query syntax , which corresponds to the base query .","As its name implies, the join point  is the link between the display profile  and the base query . For one embodiment, the join point  is a field that is utilized in the WHERE clause for purposes of connecting an outer query with a subquery in a correlated subquery implementation. Typically, fields that are present in both the base query and the display profile can be utilized as join points. The user may select a particular field to be a join point if they desire to alter the scope of the base query based on that field.","Other embodiments of the present invention may generate statements that utilize outer joins or inline views. While the syntax of the SQL statements for outer joins and inline views will be different, those skilled in the art will recognize that fields specified as join points will also serve as links between base queries and query-level display profiles in these different implementations.","As shown in the syntax  in , for one embodiment of the present invention, correlated subqueries are used and the join point  provides the column in the WHERE clause that links a correlated sub-query to the main query. For the example base query  and display profile  of , the ID column serves as the join point . However, it should be noted that like the ID column, the SS Number column is also included in both the base query  and display profile  listed in Table II. If desired, the user could have specified that the SS Number be the join point between the base query and display profile rather than ID column. Alternatively, the user could also have specified that both ID and SS Number could be selected as join points. The selection of join points is described further with reference to .",{"@attributes":{"id":"p-0072","num":"0071"},"figref":["FIG. 6B","FIG. 5B","FIG. 5"],"b":["600","600","604","605","606","610"]},{"@attributes":{"id":"p-0073","num":"0072"},"figref":"FIG. 7","b":["700","130","130"]},"Operations  begin at step  when a base query  is selected. Next, a loop of operations including steps  through  is entered. At step , a parameter-level display profile  that is to be applied to the base query  is identified. At step , associations are defined between the base query  and the display profile  parameters. Forming associations may include defining linkage(s) between elements of the display profile, such as columns and parameters, and the elements of the base query.","Next, at step , the base query is \u201cwrapped\u201d by the display profile . In other words, the base query  is embedded within the display profile . The display profile  defines the format of final query results that will be presented to the user. At step , it is determined if the user desires to apply any other display profiles. Parameter-level display profiles can also be serially applied on top of the other. If additional display profiles are to be applied, processing reverts to step  for the next display profile. Otherwise, processing continues to step . Once all the desired display profiles have been applied, a physical merged query is generated at step  and, at step , the query is submitted to the RDBMS.",{"@attributes":{"id":"p-0076","num":"0075"},"tables":{"@attributes":{"id":"TABLE-US-00003","num":"00003"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"center"}},"thead":{"row":[{"entry":"TABLE III"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}},{"entry":"BASIC QUERY EXAMPLE IN ABSTRACT FORM"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}]},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":{}}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"49pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"140pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"01","Find: ID, Test B Result, Age"]},{"entry":[{},"02","Under Conditions: Test B Result > 60"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"2","align":"center","rowsep":"1"}}]}]}}]}}},"Table III, shown above, lists another selected base query  in abstract form. As with the other example queries described above, this query also joins the Patient and Test tables illustrated in . The base query  specifies that a patient's ID, Test B Result and Age be returned under the conditions that the Test B Result is greater than 60. The corresponding physical base query syntax  is presented in , while the result set is presented in a tabular format in FIG. B\u2014the result set table comprises an ID column , TEST_B_RESULT column  and AGE column . It should be noted that only the records with TEST_B_RESULT values greater than 60 are presented, as specified in the base query.","Suppose the user wanted to get an average Test B Result for each patient from the result set corresponding to the base query  listed in Table III. Table IV, shown below, lists the base query  and a display profile  that can be applied to the base query to provide the average Test B Value.",{"@attributes":{"id":"p-0079","num":"0078"},"tables":{"@attributes":{"id":"TABLE-US-00004","num":"00004"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"center"}},"thead":{"row":[{"entry":"TABLE IV"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}},{"entry":"SELECTED BASE QUERY AND PARAMETER-LEVEL"},{"entry":"DISPLAY PROFILE"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}]},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":{}}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"70pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"133pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"Base Query:",{}]},{"entry":[{},"01","Find: ID, Age, Test B Result"]},{"entry":[{},"02","Under Conditions: Test B Result > 60"]},{"entry":[{},"Display Profile:"]},{"entry":[{},"03","Find: AVERAGE (PARAMETER 1)"]},{"entry":[{},"04","GROUP BY (PARAMETER 2)"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"2","align":"center","rowsep":"1"}}]}]}}]}}},"As mentioned earlier, parameter-level display profiles wrap the base query  and incorporate the use of existing functions to further process the result sets of base queries. In the case of the example base query and display profile of Table IV, the base query specifies that a patient's ID, Age and Test B Result be returned under the conditions that the Test B Result is greater than 60. The display profile includes a call to an AVERAGE function that averages all the values pertaining to a particular field for a group of records. The records are grouped by the values pertaining to another field.","In order to provide the required results (i.e., get an average Test B Result for each patient from the result set corresponding to the base query) the display profile of Table IV wraps the base query by applying the AVERAGE function to the Test B Result field and then grouping by the ID field. The corresponding physical query syntax and result set are presented in , respectively.","The commonalities between the result set associated with the physical base query of  and the result set corresponding to the merged physical query  of  should be noted. As expected, in the result set of , all instances of patients with the ID of \u201c1\u201d and \u201c5\u201d are represented by a single row each and the average Test B Result is presented.","It should be understood that users provide input values (typically field names) for parameters in parameter-level display profiles. For instance, the particular display profile applied in the above example has two parameters: PARAMETER 1 for the AVG function and PARAMETER 2 for the Group By clause. The values supplied for PARAMETER 1 and PARAMETER 2 were \u201cTest B Result\u201d and \u201cID\u201d, respectively. The process of allowing users to select the parameter values will be described further with reference to .","As described earlier with reference to operations  and  in , respectively, embodiments of the present invention provide for the applying of display profiles on top of other display profiles which are applied to base queries. Applying display profiles in this manner is referred to herein as the serial application of display profiles.",{"@attributes":{"id":"p-0085","num":"0084"},"tables":{"@attributes":{"id":"TABLE-US-00005","num":"00005"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"center"}},"thead":{"row":[{"entry":"TABLE V"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}},{"entry":"SERIAL APPLICATION OF A DISPLAY PROFILES"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}]},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":{}}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"105pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"112pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["Base Query:",{}]},{"entry":["01","Find: ID, SS Number, Test B Result"]},{"entry":["02","Under Conditions: Test B Result > 60"]},{"entry":"Query-Level Display Profile:"},{"entry":["03","Find: ID, SS Number, Test B Result"]},{"entry":"Parameter-Level Display Profile:"},{"entry":["04","Find: AVERAGE (PARAMETER 1)"]},{"entry":["05","GROUP BY (PARAMETER 2)"]},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}}]}}]}}},"Table V, shown above, lists a base query and two display profiles. The base query specifies that a patient's ID, Social Security number, and Test B Result be returned for each instance that the Test B Result is greater than 60. Applying the query-level display profile (line 003) to the base query specifies that a patient's ID, Social Security number, and Test B Result be returned for all instances if the patient has on at least one occasion recorded a Test B Result greater than 60. Finally, applying the parameter-level display profile (lines 004-005) on top of the query-level display profile, which itself is applied on top of the base query, specifies the following: a patient's ID, Social Security number, and the patient's average Test B Result for all instances should be returned if the patient has on at least one occasion recorded a Test B Result greater than 60. It should be noted that this version of the serially applied display profiles of Table V assumes that the user has selected Test B Result as the input for PARAMETER 1 and the combination of ID and Social Security number as the input for PARAMETER 2 with respect to the parameter-level display profile (lines 004-005).",{"@attributes":{"id":"p-0087","num":"0086"},"figref":["FIG. 10A","FIGS. 9A and 10A"],"b":["1000","170","130","1000"]},"Reference is now made to  which shows the result set corresponding to the physical merged query  shown above. It should be noted that only the ID's that had at least one instance with the Test B Result value greater than 60 are included. Further, it can be seen that the result set is very similar to that described with reference to . The difference in the result sets is the average Test B Result values are lower in  than in  because in the query results shown in  the average Test B Results include all instances, while the average shown in  only includes those instances where the Test B Result is greater than 60.",{"@attributes":{"id":"p-0089","num":"0088"},"figref":["FIGS. 11-14","FIG. 11","FIG. 12","FIG. 11","FIGS. 11 and 12","FIG. 13","FIG. 14"]},{"@attributes":{"id":"p-0090","num":"0089"},"figref":"FIG. 11","b":["1100","1102","1103"]},"A base query can be selected by picking the corresponding check box  provided in column . For instance, box  has been checked, indicating that the corresponding query (Query ID =\u201c3\u201d) has been selected. The selected abstract query specifies that ID's and their corresponding TEST_B_RESULTs be presented, under the condition that the TEST_B _RESULTs are greater than . Once the user is satisfied with the selection, the Continue button  can be pushed, whereby the next screen, illustrated in , is presented.",{"@attributes":{"id":"p-0092","num":"0091"},"figref":["FIG. 12","FIG. 11"]},"For one embodiment, display profiles are determined to be applicable for a selected base query if they share all the columns in common with the selected base query. In other embodiments, user managed metadata describing attributes of base queries, including a list of applicable display profiles, may be referenced to determine which display profiles should be presented for a selected base query.","The layout and functionality of the display profile selection screen is very similar to the base query selection screen illustrated in . Display profile ID's and their corresponding text are provided in columns  and , respectively. For some embodiments, an additional column may be included to specify whether the display profile is query-level or parameter-level. A display profile can be picked for application to a base query by selecting the corresponding check box . As can be seen by selected check box , the display profile represented by Display Profile ID of \u201c1\u201d is selected. This particular display profile specifies that the ID, SS_NUMBER, NAME and TEST_B_RESULT data values be presented based on the merged query result set.","As stated earlier, in the case of applying a query-level display profile, join points between the base query and display profile must be determined.  presents a GUI screen that allows for the selection of a join point; this screen is presented when a query level display profile is applied to an abstract query. While the current example (illustrated in ) presents two possible join points, other examples may have more than two possible join points. Further, certain combinations of base queries and display profiles may allow for the selection of more than one join point. For example, suppose the combination of a particular query-level display profile and a particular abstract query accommodates four separate join points, it is possible for the user to select multiple join points for linking that base query and display profile. Those skilled in the art will recognize that this is consistent with functionality offered by query languages such as SQL.","Referring back to , suppose the user picked a parameter-level display profile, such as the display profile assigned the Display Profile ID of \u201c2\u201d (second row), to be applied to the selected base query. That particular parameter-level display profile had two parameters that needed to be assigned values.  illustrates a screen for assigning values to parameters belonging to a parameter-level display profile. The chosen display profile comprises two parameters. Accordingly, the parameter assignment screen illustrated in  utilizes two drop down boxes  and  to allow the user to select the values (typically field names) that should be assigned to the corresponding parameters. For example, three drop down boxes would be presented if there were three parameters needed to be assigned values. Those skilled in the art will understand that while drop down boxes are shown, parameter values may be assigned via other objects such as text boxes or list boxes or any other appropriate graphical objects. Once the user is satisfied with the selections for parameter values, the Continue button  is pushed, the base query and the parameter-level display profile will be converted into physical queries and then consolidated into a merged physical query and submitted to the RDBMS.","In an alternative embodiment, the selection of an abstract query, the selection of a query-level display profile and the selection of join points between the selected abstract query, and the selected display profile can be performed via a GUI screen as illustrated in . As shown in , a user  can select a particular abstract query from a collection of available abstract queries . Based on the selected abstract query , a collection of applicable display profiles  (query-level and parameter-level) is provided. Suppose that the selected display profile  is a query-level display profile. Based on the selected display profile , all fields  that can serve as join points between the selected abstract query  and the selected display profile  are presented with corresponding check boxes  in a field association area . Next, the user can select the desired join points and push the Continue button  to proceed with processing as described with reference to other examples above.","In yet another embodiment, the selection of an abstract query, the selection of a parameter-level display profile, and the association of parameters from a parameter-level display profile to fields from an abstract query can be performed via a GUI screen as illustrated in . As shown in , a user  can select a particular abstract query from a collection of available abstract queries . Based on the selected abstract query , a collection of applicable display profiles  (query-level and parameter-level) is provided. Suppose that the selected display profile  is a parameter-level display profile. Based on the selected display profile , all parameters  that need to be associated with fields from the selected abstract query  are presented in the field association area . Drop down boxes  are provided and populated with the names of fields from the selected abstract query . Next, the user can utilize the drop down boxes  to select the desired fields to be passed as values for parameters of the display profile. Once satisfied with the field selections, the user can push the Continue button  to proceed with processing as described with reference to other examples above.",{"@attributes":{"id":"p-0099","num":"0098"},"figref":"FIG. 17","b":["1701","1702","1703","1704"]},"Upon selection of a logical field, such as Test B Result , a free-form text box  is presented to allow users to create and modify a conditional containing Test B Result  that is to be added to the selected query . As shown, the syntax for the complete abstract query is: \u201cFind ID, NAME under conditions Test B Result >40.\u201d Additionally, if the user selects check box , another free-form text box  is provided to create a conditional for a display profile based on the Test B Result  logical field. As shown, the syntax for the complete display query is: \u201cFind ID, NAME under conditions Test B Result >5.\u201d","Once the user is satisfied with the conditionals, the Continue button  can be selected to proceed with processing related to the newly formed abstract query and display profile. Alternatively, the user can select the Cancel button  to leave the current screen without saving any changes.","The above examples demonstrate that embodiments of the present invention provide users the ability to apply one or more display profiles to base queries in order to alter the scope of abstract queries and to further process result sets as required. The functionality provided by embodiments of the present invention allows users to avoid the cumbersome task of manually modifying physical queries to achieve desired results.","While the foregoing is directed to embodiments of the present invention, other and further embodiments of the present invention may be devised without departing from the basic scope thereof, and the scope thereof is determined by the claims that follow."],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"BRIEF DESCRIPTION OF THE DRAWINGS","p":["So that the manner in which the above recited features of the present invention are attained and can be understood in detail, a more particular description of the invention, briefly summarized above, may be had by reference to the embodiments thereof which are illustrated in the appended drawings.","It is to be noted, however, that the appended drawings illustrate only typical embodiments of this invention and are therefore not to be considered limiting of its scope, for the invention may admit to other equally effective embodiments.",{"@attributes":{"id":"p-0019","num":"0018"},"figref":"FIG. 1"},{"@attributes":{"id":"p-0020","num":"0019"},"figref":"FIG. 2"},{"@attributes":{"id":"p-0021","num":"0020"},"figref":"FIG. 3"},{"@attributes":{"id":"p-0022","num":"0021"},"figref":"FIG. 4"},{"@attributes":{"id":"p-0023","num":"0022"},"figref":"FIG. 5A"},{"@attributes":{"id":"p-0024","num":"0023"},"figref":["FIG. 5B","FIG. 5A"]},{"@attributes":{"id":"p-0025","num":"0024"},"figref":"FIG. 6A"},{"@attributes":{"id":"p-0026","num":"0025"},"figref":["FIG. 6B","FIG. 6A"]},{"@attributes":{"id":"p-0027","num":"0026"},"figref":"FIG. 7","b":"700"},{"@attributes":{"id":"p-0028","num":"0027"},"figref":"FIG. 8A"},{"@attributes":{"id":"p-0029","num":"0028"},"figref":["FIG. 8B","FIG. 8A"]},{"@attributes":{"id":"p-0030","num":"0029"},"figref":"FIG. 9A"},{"@attributes":{"id":"p-0031","num":"0030"},"figref":["FIG. 9B","FIG. 9A"]},{"@attributes":{"id":"p-0032","num":"0031"},"figref":"FIG. 10A"},{"@attributes":{"id":"p-0033","num":"0032"},"figref":["FIG. 10B","FIG. 10A"]},{"@attributes":{"id":"p-0034","num":"0033"},"figref":"FIGS. 11-14"},{"@attributes":{"id":"p-0035","num":"0034"},"figref":"FIG. 15"},{"@attributes":{"id":"p-0036","num":"0035"},"figref":"FIG. 16"},{"@attributes":{"id":"p-0037","num":"0036"},"figref":"FIG. 17"}]},"DETDESC":[{},{}]}
