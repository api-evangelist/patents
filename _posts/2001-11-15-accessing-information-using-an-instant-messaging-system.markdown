---
title: Accessing information using an instant messaging system
abstract: A system and method for transmitting messages from a client messaging application to a third party application is shown. The method includes registering with a set of client messaging applications for sending and receiving messages. A message includes an information request. A message is received from the one of the client messaging applications and the destination of the message is determined. The third party application determined to be the destination of the message is then selected and the message is transmitted to the third party application. In the event that the message included an information request, a return message is received from the third party application. The return message includes the requested information. The destination of the return message is determined. The client messaging application determined to be the destination of the return message is selected and the return message is transmitted to the client messaging application.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=07287057&OS=07287057&RS=07287057
owner: International Business Machines Corporation
number: 07287057
owner_city: Armonk
owner_country: US
publication_date: 20011115
---

{"@attributes":{"id":"description"},"BRFSUM":[{},{}],"heading":["CROSS-REFERENCE TO RELATED APPLICATIONS","BACKGROUND OF THE INVENTION","SUMMARY OF THE INVENTION","DETAILED DESCRIPTION OF THE PREFERRED EMBODIMENT","CONCLUSION"],"p":["Not applicable.","1. Field of the Invention","The present invention relates to the field of messaging systems and, more specifically, accessing information using messaging systems such as instant messaging systems.","2. Description of Related Art","The growth of the web has revolutionized the way people and computers exchange information. Today, individuals use the web to quickly research and purchase products, engage in personal conversations, find places to eat, plan travel and conduct business. Businesses use the web to advertise and sell their products or services, communicate with their customers, facilitate inter-office communications and even provide services. The primary way in which the web is used to conduct these activities is through the use of a web browser employing the Hyper Text Transfer Protocol (HTTP). Web browsers provide a relatively quick and easy-to-use tool to exchange information. Typically, a person utilizes a web browser adhering to the HTTP to view information transmitted from a web server. In today's fast-paced world, however, sometimes even the speed of a web browser is not fast enough.","Web browsers are many times slow and time-consuming to use. When the connection bandwidth of a web browser is low or there are great amounts of web traffic, there is often a long wait for information to be displayed in the web browser. This is a common problem for low bandwidth users such as PC users with a dial-up connection or handheld\/cell phone users with a wireless connection. In addition, web browsers sometimes do not correctly process certain types of web content, such as Java script. This can lead to the web browser shutting down or the computer system crashing. Further, web browsers often require a certain amount of user interaction in order to access information. Users must often navigate through a series of web pages in order to get the information they are seeking. This can be time-consuming and annoying.","For this reason, instant messaging (IM) has gained popularity. IM allows users to instantaneously exchange messages including text, audio, video and various types of files. IM is immediate as it does not require users to navigate through irrelevant information. IM, however, is generally only available for communication between users and does not currently support accessing information in a database or on the web.","Accordingly, what is needed is a system for quickly and efficiently exchanging information on the web.","Briefly, in accordance with the present invention, disclosed is a system, method and computer program product for transmitting messages from a client messaging application to a third party application. In an embodiment of the present invention, the method includes registering with a set of client messaging applications for sending and receiving messages. In an embodiment of the present invention, a message includes an information request. Subsequently, a message is received from the one of the client messaging applications and the destination of the message is determined. The third party application determined to be the destination of the message is then selected and the message is transmitted to the third party application. In the event that the message included an information request, a return message is received from the third party application. The return message includes the requested information. The destination of the return message is determined. The client messaging application determined to be the destination of the return message is then selected and the return message is transmitted to the client messaging application.","In an embodiment of the present invention, the client messaging application is a commercially available instant messaging application. In another embodiment of the present invention, the third party application is a commercially available messaging server.","The present invention provides the ability to access a database via an instant messaging application. This feature of the present invention allows a user to access desired information quickly, efficiently, and using a minimal amount of user interaction.","In addition, the present invention provides compatibility and portability. The present invention provides an interface with client messaging applications and third party applications. The interface supports various types and formats of client messaging applications and third party applications. This feature increases the ease-of-use and adaptability of the present invention.","The foregoing and other features and advantages of the present invention will be apparent from the following more particular description of the preferred embodiments of the invention, as illustrated in the accompanying drawings.","Terminology","To more clearly point out and describe the present invention, an effort is made throughout the specification to adhere to the following term definitions as consistently as possible.","The term \u201cweb page\u201d refers to a file, typically written in Hypertext Markup Language (HTML), Java, Extended Markup Language (XML), Active Server or Cold Fusion format. Such a file is typically viewed using a web browser.","The term \u201cweb site\u201d refers to a group of web pages that are associated in some manner, such as geographically, contextually or categorically. A web site usually refers to a group of web pages located within one domain name.","The term \u201cuser\u201d refers to a person using an application executing on a computer system. In the present invention, the user is a person using a client messaging application.","The term \u201cAPI\u201d refers to an Application Programming Interface. An API is an interface by which an application program can access operating system commands. An API offers a level of abstraction between a high level application program and a lower level application program that was written without consideration for the calling conventions supported by the high level application program.","The term \u201ctelnet\u201d refers to the internet standard protocol for remote login. Telnet is a message-based protocol whereby a terminal emulator is provided to a remote user for a remote login session on a computer system. The remote user conducts the session on the computer system as if the remote user were present at the computer system.","The term \u201cLightweight Directory Access Protocol (LDAP)\u201d refers to a standard protocol for accessing directory services. LDAP is a message based protocol whereby a user can utilize directory services and access directory information using a set of commands.","The term \u201cbot\u201d refers to an autonomous computer program that acts as an agent for a user or another computer program. In the present invention, a bot is used to access a database for a user.","The term \u201cinstant message (IM)\u201d refers to a message that is typically sent and received using an instant messaging application such as American Online Instant Messenger. Instant messages are typically received and displayed in an interface immediately after transmission. Instant messaging applications are used for immediate communication between users.","Overview of the System","The present invention is described in terms of the examples below. This is for convenience only and is not intended to limit the application of the present invention. In fact, after reading the following description, it will be apparent to one skilled in the relevant art(s) how to implement the following invention in alternative embodiments.",{"@attributes":{"id":"p-0037","num":"0036"},"figref":["FIG. 1","FIG. 1","FIG. 1","FIG. 1"],"b":"100"},"System  supports multiple clients, with each client running a client messaging application.  shows multiple clients numbered one  through N . Corresponding to each client is a messaging application numbered one  through N . In one embodiment of the present invention, messaging applications  through  are any commercially available instant messaging application programs executing on client  through . Examples of such instant messaging applications are: Lotus Sametime Messaging, America Online Instant Messenger, MSN Messenger Service, Yahoo Messenger, ICQ and Jabber Instant Messenger. In another embodiment of the present invention, messaging applications  through  are a telnet utility. Messaging applications  through  are implemented in hardware, software, or a combination of the two.","System  also supports multiple messaging servers, with each messaging server running a messaging application.  shows multiple messaging servers numbered one  through N . In one embodiment of the present invention, messaging servers  through  are any commercially available messaging servers for handling messaging operations. Examples of such messaging servers are the Lotus Domino Server and the Microsoft Exchange Server. Corresponding to each messaging server  through  are multiple messaging applications numbered one  through N . Messaging applications  through  are components of messaging applications  through . That is, multiple messaging applications numbered one  through N  provide functionality or support for messaging applications  through . In an embodiment of the present invention, messaging applications  through  are fully self-sustainable and messaging applications numbered one  through N  are not required in system .","System  shows network  for connecting clients  through , messaging servers  through  and Botservers  through . In one embodiment of the present invention, network  is a circuit switched network, such as the Public Service Telephone Network (PSTN). In another embodiment of the present invention, the network  is a packet switched network. The packet switched network is a wide area network (WAN), such as the global Internet, a private WAN, a local area network (LAN), a telecommunications network or any combination of the above-mentioned networks. In another embodiment of the present invention, network  is a wired, wireless, broadcast or point-to-point.","System  supports multiple Botservers numbered one  through N . Botservers  through  are computer application programs which embody the substantive concepts of the present invention. Botservers  through  comprise the functionality of messaging server operations, message routing, message queuing and bot operations. Botserver  is implemented in hardware, software, or a combination of the two. Each component of Botservers  through  is described in greater detail below.","In an embodiment of the present invention, Botservers  through  execute on the same computer systems as the computer system of clients  through . Alternatively, Botservers  through  execute on computer systems separate from the computer systems of clients  through . In another embodiment of the present invention, Botservers  through  exist on the same network as users  through  and messaging applications  through . In this case, Botserver  communicates with users  through  and messaging applications  through  over the network. Various networks are described in greater detail below.","In an embodiment of the present invention, the computer systems of clients  through  and Botservers  through  are one or more PCs (e.g., IBM or compatible PC workstations running the Microsoft Windows 95\/98\/ME or Windows NT\/2000 operating system, Macintosh computers running the Mac OS operating system, or equivalent), Personal Digital Assistants (PDAs), game consoles or any other processing devices that are used with a messaging system. In another embodiment of the present invention, the computer systems of clients  through  and Botservers  through  are a server such as one or more SUN Ultra workstations running the SunOS operating system. In yet another embodiment of the present invention, the computer systems of clients  through  and Botservers  through  are one or more IBM or compatible PC workstations with Intel Pentium III processors running either the Windows NT operating system or the BSD Unix operating system.","Each of the Botservers  through  are connected to a separate network. Multiple networks numbered one  through N  are shown. Each of network  through  is a separate network or the same network. A more detailed description of various networks is given above.","System  supports multiple third party applications.  shows multiple third party applications for each of a multitude of networks: third party applications numbered one  through N  are shown and third party applications numbered one  through N  are shown. Third party applications  through  and  through  are any database system supporting the storage and retrieval of records. In an embodiment of the present invention, third party applications  through  and  through  are commercially available database systems such as personal finance databases, stock market databases or personal contact databases. In another embodiment of the present invention, third party applications  through  and  through  are locations for storing and retrieving files such as a web site, a File Transfer Protocol (FTP) site or a gopher site.","The Botserver",{"@attributes":{"id":"p-0046","num":"0045"},"figref":["FIG. 2A","FIG. 1","FIG. 2A"],"b":["200","106","116","200","202","204","206","208","210"]},"Messaging application  serves to handle the messages received from clients. Messaging application  is a component of messaging applications  through  shown in . That is, messaging application  provides functionality or support for messaging applications  through . In an embodiment of the present invention, messaging applications  through  are fully self-sustainable and messaging application  is not required in diagram .","Botserver base code  comprises the substantive functions performed by each Botserver  through . Botserver base code  performs, among other things, message routing and message queuing. Botserver base code  also responds to certain messages from user . The functions performed by Botserver base code  are described in greater detail below.","Bot  is an autonomous computer program that acts as an agent for user . Bot  is an application program capable of communicating with third party applications  through  and  through . Bot  communicates with third party applications  through  and  through  in response to a message from a client. Specifically, bot  executes an information request embedded within a message received from a client. Information requests within a message are in text format, audio format or any other query format known to one of ordinary skill in the art.","In one example of the operation of a bot, a bot  is programmed to retrieve telephone numbers from a telephone number database . Bot  receives from a client  an instant text message including the text request: \u201cPhone number: John Doe.\u201d Bot  recognizes the text of the instant message as a request for a telephone number. The text of the instant message is then translated into a query that is handled by a third party application , which is a telephone number database. Using this query, bot  then retrieves the telephone number from third party application . Subsequently, bot  formats and sends to client  a reply instant text message including the telephone number requested. In an embodiment of the present invention, bot  is programmed to handle a text query in Structured Query Language (SQL) format. In another embodiment of the present invention, bot  is programmed to handle any query known to one of ordinary skill in the art for accessing a database. A more detailed example of a bot is given below.","Messaging API  is an API that provides a level of abstraction between Botserver base code  and messaging application . That is, messaging API  acts as a translator between Botserver base code  and messaging application . The calling conventions utilized by Botserver base code  to communicate with messaging application  must adhere to the calling conventions of messaging API . Likewise, the calling conventions of messaging API  must adhere to the calling conventions of messaging application . As a result, there is no need for Botserver base code  to adhere to the calling conventions used by messaging application . Conversely, there is no need for messaging application  to adhere to the calling conventions of Botserver base code . This is advantageous as it allows Botserver base code  and messaging application  to be independent of each other. Thus, the use of messaging API  increases the compatibility and portability of both Botserver base code  and messaging application .","Bot API  is an API that provides a level of abstraction between Botserver base code  and bot . That is, bot API  acts as a translator between Botserver base code  and bot . The calling conventions utilized by Botserver base code  to communicate with bot  must adhere to the calling conventions of bot API . Likewise, the calling conventions of bot API  must adhere to the calling conventions of bot . As a result, there is no need for Botserver base code  to adhere to the calling conventions used by bot . Conversely, there is no need for bot  to adhere to the calling conventions of Botserver base code . This is advantageous as it allows Botserver base code  and bot  to be independent of each other. Thus, the use of bot API  increases the compatibility and portability of both Botserver base code  and bot .","In one embodiment of the present invention, a Java code implementation of messaging API  and bot API  is described in Appendix A of the present application. Appendix A is hereby incorporated by reference in its entirety. Appendix A provides a summary and a hierarchy for each class and each interface of the messaging API  and the bot API  Java code implementation. Appendix A also provides a description of each class and a master index including every class, interface, method and variable in the Java code implementation.",{"@attributes":{"id":"p-0054","num":"0053"},"figref":["FIG. 2B","FIG. 2B","FIG. 2B","FIG. 2B"],"b":["250","106","116","106","252","256","254","258","206","260","264","262","266","106"]},"One example of the operation of a Botserver as shown in  is a Botserver  implemented in an office setting. The clients in this example, office workers, utilize various instant messaging applications and desire to access more than one database using these instant messaging applications. In this example, the clients desire to use both the Yahoo Messenger instant messaging application and the ICQ instant messaging application. Thus, messaging application  is programmed to handle Yahoo Messenger instant messages and messaging application  is programmed to handle ICQ instant messages. As a result, messaging API  acts to interface messaging application  with Botserver base code  and messaging API  acts to interface messaging application  with Botserver base code . Because of the use of the messaging APIs  and , Botserver base code  need not be concerned with the individual implementations of the messaging applications  and .","In this example, the clients desire to access two third party applications: a telephone number database and a stock-quote database. Both databases in this example exist on the same network as the clients. A bot  has been created to handle information requests for telephone numbers and a bot  has been created to handle information requests for stock-quotes. Bot API  acts to interface bot  with Botserver base code  and bot API  acts to interface bot  with Botserver base code . Because of the use of the bot APIs  and , Botserver base code  need not be concerned with the individual implementations of the bots  and .","In this example, a client uses Yahoo Messenger to send an instant message requesting a particular telephone number. Messaging application  receives the message and sends it to Botserver base code  via messaging API . Botserver base code  recognizes the message as a Yahoo Messenger instant message and places the message in the incoming message queue corresponding to Yahoo Messenger. Subsequently, the message is identified as a request for a telephone number and the message is sent to the appropriate bot (bot ) via bot API .","Bot  receives the instant message, reads the information request and accesses the requested information from the telephone number database. Bot  then formats and sends to the client a reply instant message including the requested information. Botserver base code  receives the reply message via bot API . Botserver base code  recognizes the reply message as a Yahoo Messenger instant message and places the reply message in the outgoing message queue corresponding to Yahoo Messenger. Subsequently, the reply message is sent to the appropriate messaging application (messaging application ) via messaging API . The reply message is then sent to the intended client.","Operation of the System",{"@attributes":{"id":"p-0059","num":"0058"},"figref":["FIG. 3","FIG. 3"],"b":["300","106","116","206","300","302","304"]},"In step , the Botserver waits for a request to handle a message. This request originates from a client, a messaging application or a bot.","In step , a request to handle a message is received.","In step , the Botserver determines the type of the message. If the message was sent by a client and intended for a bot, the message is deemed an incoming message and control flows directly to step . If the message was sent by a bot and intended for a client, the message is deemed an outgoing message and control flows directly to step . If the message is a communication message from a messaging application, the message is deemed a communication message and control flows directly to step .","In step , the communication message is handled. A communication message is a message from a messaging application that can be handled by the Botserver. An example of a communication message is a status request message from a messaging application. A status request message seeks a status, such as connection status, of the Botserver. In this example, the Botserver, in response to the status request message, checks its status and returns the information to the requesting messaging application without interacting with any other entity. Another example of a communication message is a fatal error message from a messaging application. A fatal error message seeks to inform the Botserver that an error has occurred at a messaging application during processing. In this example, the Botserver, in response to the fatal error message, creates an error log without interacting with any other entity.","In step , the Botserver handles the outgoing message. An outgoing message is typically a message originating from a bot and intended for a client. In this case, the Botserver routes the message to the intended client. In an embodiment of the present invention, the Botserver also queues the message in a queue that flows towards the intended client. In an embodiment of the present invention, each queue uses any conventional queuing technique known to one of ordinary skill in the art. Queuing techniques are described in greater detail below.","In step , Botserver  handles the incoming message. In doing so, Botserver  determines the messaging application source of the message and places the incoming message on the appropriate queue. As shown in , Botserver  supports multiple messaging applications  and , multiple messaging APIs  and , multiple bot APIs  and  and multiple bots  and . In an embodiment of the present invention, a separate queue corresponding to each messaging application  and  is created. As such, each queue holds the messages corresponding to the messaging application from which the incoming message originated.","In an embodiment of the present invention, the Botserver reviews each incoming message. The Botserver then accesses a messaging application registry to determine the source of the incoming message. The messaging application registry consists of a list of messaging applications currently being supported by the Botserver. The Botserver reviews each incoming message and attempts to match the message to a messaging application on the list in the messaging application registry. Once the source of the message is known, the Botserver recognizes the queue in which the message belongs. The Botserver places each incoming message in the queue which corresponds to the messaging application from which it was received. In an embodiment of the present invention, each queue uses any conventional queuing technique known to one of ordinary skill in the art. Queuing techniques are described in greater detail below.","Control flow  executes continuously between steps  to  as messages are received and processed.",{"@attributes":{"id":"p-0068","num":"0067"},"figref":["FIG. 4","FIG. 3","FIG. 4"],"b":["400","206","400","300","400","402","404"]},"In step , the Botserver accesses the next message available on the incoming message queue for processing. As explained above, various queuing techniques are used to queue messages. The first-in-first-out queuing technique, for example, queues messages in the order in which they are received. As such, the first message to be received is the first message to be processed and transmitted. In another example, the priority queuing technique queues messages in the order of their priority. As such, the messages with the highest priorities are processed and transmitted before other messages. Any conventional queuing technique known to one of ordinary skill in the art is used by Botserver  to queue messages.","In step , the Botserver determines whether it handles the message itself. If the result of this determination is affirmative, control flows directly to step . If the result of this determination is negative, control flows directly to step .","In step , the Botserver handles the message. Various messages are handled solely by the Botserver. One example of such a message is a help message from a client. In this example, the Botserver, in response to the help message, provides the client with a list of bots or bot commands available to the client without interacting with any other entity, such as third party applications  through  (see ).","In step , the Botserver formats a reply to the message. In the help message example, the Botserver formats a reply message to the client including a list of bots or bot commands available to the client. In the event that control flowed to step  from step , the Botserver  formats a reply message indicating that an appropriate bot was not found. In this case, the message also provides a list of bots currently supported by the Botserver. In the event that control flowed to step  from step , the Botserver formats a reply message indicating that although an appropriate bot was found, the bot did not handle the message correctly. In this case, the message also provides a list of commands or messages currently supported by the appropriate bot.","In step , the Botserver sends the reply message formatted in step  to the intended recipient.","In step , the Botserver searches for the appropriate bot to handle the incoming message. In an embodiment of the present invention, the Botserver accesses a bot registry to determine the bot to which the incoming message corresponds. The bot registry consists of a list of bots currently being supported by the Botserver. The Botserver reviews each incoming message and attempts to match the message to a bot on the list in the bot registry.","In step , the Botserver determines whether an appropriate bot was found in step . If the result of this determination is positive, control flows directly to step . If the result of this determination is negative, control flows directly to step .","In step , the incoming message is sent to the appropriate bot found in step .","In step , the Botserver determines whether the bot to which the incoming message was sent handled the message appropriately. If the result of this determination is positive, control flows directly to step . If the result of this determination is negative, control flows directly to step .","In step , the formatted message is sent. In the event that control flowed to step  from step , the Botserver sends the message formatted by the Botserver in step . In the event that control flowed to step  from step , the Botserver sends the message formatted by the bot found in step .","Control flow  executes continuously between steps  to  as messages are received and processed.","Example Bot","In an embodiment of the present invention, a Help Bot is programmed for accessing information currently in a web site format. In this embodiment, the Help Bot is programmed to interact with the client using natural language. The Help Bot reads the information requests of the client and searches the web site for the requested information.","In an example, the client desires to access information regarding his computer system. The organization for which the client works has set up an Information Technology (IT) web site for accessing information regarding the IT system of the organization. The client has access to an instant messaging application that interfaces with the Help Bot which is specifically programmed to access the IT web site. The Help Bot has been programmed to parse natural language text questions from a client. The parsed text is then used to do a keyword search on the IT web site. The resulting matches are then presented to the client.","Following is an example of an exchange that occurs between a client and the example Help Bot described above. The client has lost the password to his email application. The client opens his instant messaging application and chooses the Help Bot with which to communicate. The client reads in the instant messaging application window:\n\n","The Help Bot parses the text question of the client and extracts the key words in the client's question: reset, password, and email application. The Help Bot then does a keyword search of the key words in the IT web site. The Help Bot presents the resulting matches to the client:\n\n","In an embodiment of the present invention, the functions of the Help Bot are supplemented in several ways. If the information requested by the client is not found, The Help Bot automatically contacts an administrator. In addition, the Help Bot automatically sends the client's question to a bulletin board system or other message system for online communities. In order to enhance the didactic capabilities of the Help Bot, text is supplemented by audio, video or other forms of communication.","Example Interface","In an embodiment of the present invention, a Lotus SameTime Connect Instant Messaging application is used as a client messaging application together with a bot for accessing a third party application\u2014an LDAP directory. In this embodiment, the LDAP directory is the internal IBM employee directory service known as the Bluepages directory. The bot in this embodiment is known as the Bluepages bot and is capable of reading an information request for a client, finding the Bluepages directory for the requested information and providing the requested information to the client.",{"@attributes":{"id":"p-0086","num":"0099"},"figref":["FIGS. 5-9","FIG. 5"],"b":["502","502"]},{"@attributes":{"id":"p-0087","num":"0100"},"figref":"FIG. 6","b":["602","604","606","608"]},{"@attributes":{"id":"p-0088","num":"0101"},"figref":["FIG. 7","FIG. 6"],"b":["704","706","708","710","712","714","716","606"]},{"@attributes":{"id":"p-0089","num":"0102"},"figref":["FIG. 8","FIG. 7","FIG. 9"],"b":["802","902"]},"Example Implementations","The present invention (i.e., systems , , , flows ,  or any part thereof) is implemented using hardware, software or a combination thereof and is implemented in one or more computer systems or other processing systems. An example of a computer system  is shown in . The computer system  represents any single or multi-processor computer. In conjunction, single-threaded and multi-threaded applications are used. Unified or distributed memory systems are used.","In one example, the present invention is implemented in a multi-platform (platform independent) programming language such as Java, programming language\/structured query language (PL\/SQL), hyper-text mark-up language (HTML), practical extraction report language (PERL), Flash programming language, common gateway interface\/structured query language (CGI\/SQL) or the like. Java-enabled and JavaScript-enabled browsers are used, such as, Netscape, HotJava, and Microsoft Explorer browsers. Active content web pages can be used. Such active content web pages include Java applets or ActiveX controls, or any other active content technology developed now or in the future. The present invention, however, is not intended to be limited to Java, JavaScript, or their enabled browsers, and are implemented in any programming language and browser, developed now or in the future, as would be apparent to a person skilled in the relevant art(s) given this description.","In another example, the present invention is implemented using a high-level programming language (e.g., C++) and applications written for the Microsoft Windows NT or SUN OS environments. It will be apparent to persons skilled in the relevant art(s) how to implement the invention in alternative embodiments from the teachings herein.","Computer system  includes one or more processors, such as processor . One or more processors  execute software implementing the routines of the invention, described above. Each processor  is connected to a communication infrastructure  (e.g., a communications bus, cross-bar, or network). Various software embodiments are described in terms of this exemplary computer system. After reading this description, it will become apparent to a person skilled in the relevant art how to implement the invention using other computer systems and\/or computer architectures.","Computer system  includes a display interface  that forwards graphics, text, and other data from the communication infrastructure  (or from a frame buffer not shown) for display on the display unit .","Computer system  also includes a main memory , preferably random access memory (RAM), and also includes a secondary memory . The secondary memory  includes, for example, a hard disk drive  and\/or a removable storage drive , representing a floppy disk drive, a magnetic tape drive, an optical disk drive, etc. The removable storage drive  reads from and\/or writes to a removable storage unit  in a well known manner. Removable storage unit  represents a floppy disk, magnetic tape, optical disk, etc., which is read by and written to by removable storage drive . As will be appreciated, the removable storage unit  includes a computer usable storage medium having stored therein computer software and\/or data.","In alternative embodiments, secondary memory  includes other similar means for allowing computer programs or other instructions to be loaded into computer system . Such means include, for example, a removable storage unit  and an interface . Examples include a program cartridge and cartridge interface (such as that found in video game console devices), a removable memory chip (such as an EPROM, or PROM) and associated socket, and other removable storage units  and interfaces  which allow software and data to be transferred from the removable storage unit  to computer system .","Computer system  also includes a communications interface . Communications interface  allows software and data to be transferred between computer system  and external devices via communications path . Examples of communications interface  include a modem, a network interface (such as Ethernet card), a communications port, interfaces described above, etc. Software and data transferred via communications interface  are in the form of signals which are electronic, electromagnetic, optical or other signals capable of being received by communications interface , via communications path . Note that communications interface  provides a means by which computer system  interfaces to a network such as the Internet.","The present invention is implemented using software running (that is, executing) in an environment similar to that described above. In this document, the term \u201ccomputer program product\u201d is used to generally refer to removable storage unit , a hard disk installed in hard disk drive , or a carrier wave carrying software over a communication path  (wireless link or cable) to communication interface . A computer useable medium includes magnetic media, optical media, or other recordable media, or media that transmits a carrier wave or other signal. These computer program products are means for providing software to computer system .","Computer programs (also called computer control logic) are stored in main memory  and\/or secondary memory . Computer programs are also received via communications interface . Such computer programs, when executed, enable the computer system  to perform the features of the present invention as discussed herein. In particular, the computer programs, when executed, enable the processor  to perform features of the present invention. Accordingly, such computer programs represent controllers of the computer system .","The present invention is implemented as control logic in software, firmware, hardware or any combination thereof. In an embodiment where the invention is implemented using software, the software is stored in a computer program product and loaded into computer system  using removable storage drive , hard disk drive , or interface . Alternatively, the computer program product is downloaded to computer system  over communications path . The control logic (software), when executed by the one or more processors , causes the processor(s)  to perform functions of the invention as described herein.","In another embodiment, the invention is implemented primarily in firmware and\/or hardware using, for example, hardware components such as application specific integrated circuits (ASICs). Implementation of a hardware state machine so as to perform the functions described herein will be apparent to persons skilled in the relevant art(s) from the teachings herein.","While various embodiments of the present invention have been described above, it should be understood that they have been presented by way of example, and not limitation. It will be apparent to persons skilled in the relevant art(s) that various changes in form and detail are made therein without departing from the spirit and scope of the invention. Thus the present invention should not be limited by any of the above-described exemplary embodiments, but should be defined only in accordance with the following claims and their equivalents."],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"BRIEF DESCRIPTION OF THE DRAWINGS","p":["The features and advantages of the present invention will become more apparent from the detailed description set forth below when taken in conjunction with the drawings in which like reference numbers indicate identical or functionally similar elements. Additionally, the left-most digit of a reference number identifies the drawing in which the reference number first appears.",{"@attributes":{"id":"p-0016","num":"0015"},"figref":"FIG. 1"},{"@attributes":{"id":"p-0017","num":"0016"},"figref":"FIG. 2A"},{"@attributes":{"id":"p-0018","num":"0017"},"figref":"FIG. 2B"},{"@attributes":{"id":"p-0019","num":"0018"},"figref":"FIG. 3"},{"@attributes":{"id":"p-0020","num":"0019"},"figref":["FIG. 4","FIG. 3"]},{"@attributes":{"id":"p-0021","num":"0020"},"figref":"FIG. 5"},{"@attributes":{"id":"p-0022","num":"0021"},"figref":"FIG. 6"},{"@attributes":{"id":"p-0023","num":"0022"},"figref":"FIG. 7"},{"@attributes":{"id":"p-0024","num":"0023"},"figref":"FIG. 8"},{"@attributes":{"id":"p-0025","num":"0024"},"figref":"FIG. 9"},{"@attributes":{"id":"p-0026","num":"0025"},"figref":"FIG. 10"}]},"DETDESC":[{},{}]}
