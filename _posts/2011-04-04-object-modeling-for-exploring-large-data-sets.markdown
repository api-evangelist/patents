---
title: Object modeling for exploring large data sets
abstract: Techniques are described for facilitating performing computer-implemented financial analysis. A metric that transforms one or more time series into an output object is identified. The one or more time series are determined based on one or more input objects. The metric is applied using the one or more time series, thereby generating a particular value for the output object. One of the metric and the particular value for the output object is stored in a physical storage device.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09229966&OS=09229966&RS=09229966
owner: Palantir Technologies, Inc.
number: 09229966
owner_city: Palo Alto
owner_country: US
publication_date: 20110404
---

{"@attributes":{"id":"description"},"RELAPP":[{},{}],"heading":["CROSS-REFERENCE TO RELATED APPLICATION","FIELD OF THE DISCLOSURE","BACKGROUND","SUMMARY","DESCRIPTION OF EXAMPLE EMBODIMENTS","1 Glossary of Terms","2 Example Data Analysis System","3 Examples of Zero-Order Objects","4 Example Higher-Order Objects","5 Additional Example Higher-Order Objects","6 Dynamic Specification of Objects","7 Example Process Flow","8 Extensions and Alternatives","9 Example Implementation Hardware"],"p":["This application claims the benefit of priority to and is a divisional of application Ser. No. 12\/210,947, filed Sep. 15, 2008 now abandoned; the entire contents of which are hereby incorporated by reference for all purposes as if fully set forth herein.","The present disclosure generally relates to techniques for exploring large data sets, for example, as related to market instruments.","The approaches described in this section are approaches that could be pursued, but not necessarily approaches that have been previously conceived or pursued. Therefore, unless otherwise indicated, it should not be assumed that any of the approaches described in this section qualify as prior art merely by virtue of their inclusion in this section.","Data processing systems can be programmed to facilitate analysis of a universe of data items. A universe of data items refers to a large collection of data items. An example of such a universe may be a large collection of market instruments. In many instances, the amount of raw data about data items can be massive and dynamically increasing all the time. Under some approaches, an analyst relies on empirical knowledge and cumbersome spreadsheets to analyze markets and instruments. Under some other approaches, markets and instruments are modeled as multi-variable stochastic, predictive systems. In all these approaches, however, what has been captured is often over-simplified and relatively static. These approaches cannot keep up with new variable and new trends appearing in the markets, and therefore can hardly yield reliable insights for future performance of the markets and instruments. These shortcomings are made worse, as these approaches typically provide little support for a user to flexibly model the markets, to promptly react to new trends, and to timely test new hypotheses.","The present disclosure is directed to a programmatic object model that facilitates analysis of universes of data items.","A first claim of the disclosure is an object model that facilitates performing financial analysis and that includes certain zero-order objects or building blocks that lend themselves particularly well to doing financial analysis. The object model comprises a universe of data items, relationships between the data items, higher-order objects generated based on one or more data items in the universe, higher-order objects generated based on other objects, and auxiliary entities related to the universe of data items.","A second claim is that some of the building blocks are \u201czero-order\u201d, in that they cannot be decomposed into other building blocks. Examples of zero-order building blocks are time series, metrics, and financial instruments. A time series is an object that represents time-dependent information. A metric building block represents a type of data transformation; for example, a metric defines a function that receives an instrument as input and produces a time series as output. A financial instrument building block represents any market entity that is traded or otherwise of interest, such as an equity, a currency, or a bond.","A third claim is that some of the building blocks can be decomposed into other building blocks. Examples include a date set, index, portfolio, strategy, instrument group, and regression. For example, a date set comprises time values that satisfy one or more selection criteria; an instrument group comprises one or more instruments selected from a universe of instruments using a filter chain; an index indicates a collective value of one or more instruments; a regression transforms one or more first time series into a predicted time series and compares the predicted time series with a second time series; a portfolio comprises zero or more time series each of which represents an instrument, a particular date set, and one or more trades that refer to times represented in the particular date set; a strategy comprises a date set that represents a time period and a statement block that can be executed to determines one or more trades of the instrument.","Additional claims of the disclosure relate to how the foregoing higher-order building blocks can be decomposed into the zero-order building blocks. For example, an index comprises an instrument group and a metric and a date set; an instrument group comprises filters; and a filter can be a set of instruments and a metric.","In embodiments where data items are instruments (in equity, currency and bonds), zero-order objects may refer to instruments, economic indexes, time series and meta data associated with instruments, and other information that are cataloged and stored in a database for the purpose of being analyzed by the data analysis system.","Other embodiments may comprise a system and one or more machine-readable storage media operable to provide the foregoing graphical user interface and\/or to perform or cause the performance of the foregoing computer-implemented methods.","In the following description, for the purposes of explanation, numerous specific details are set forth in order to provide a thorough understanding of the present invention. It will be apparent, however, that the present invention may be practiced without these specific details. In other instances, well-known structures and devices are shown in block diagram form in order to avoid unnecessarily obscuring the present invention.","In this disclosure the following terms have the following meanings:","Data item: a zero-order object that can be described by a number of properties and\/or metrics.","Higher-order objects: the term \u201chigher-order objects\u201d refers to objects that can be built directly or indirectly on top of zero-order objects such as instruments.","Metric: a type of transformation. The metric performs the type of transformation specified, e.g., using the instrument as input, and produces the time series. In some embodiments, the identifier for the object and the token for the type of transformation are separated by a suitable delimiter such as a period.","Object model: a model that comprises a universe of data items, relationships between the data items, higher-order objects generated based on one or more data items in the universe, higher-order objects generated based on other objects, and auxiliary entities related to the universe of data items.","Ontological relationships: structural relationships existing among zero-order objects (such as economic indexes, instruments, etc.). The instruments can be classified based on ontological relationships, thereby forming a hierarchy on which the object model can be further built. In some embodiments, this hierarchy may comprise one or more economic indexes, which is not specifically tied to an instrument.","Time series: a type of objects which are used in the object model to represent time-dependent information.","Universe of data items: a large collection of data items, typically everything known to a particular system.","Zero-order objects: leaf nodes in the object model. In embodiments where data items are instruments (in equity, currency and bonds), zero-order objects may refer to instruments, economic indexes, time series and meta data associated with instruments, and other information that are cataloged and stored in a database for the purpose of being analyzed by the data analysis system.",{"@attributes":{"id":"p-0034","num":"0033"},"figref":"FIG. 1","b":["100","102","120"]},"In the embodiment illustrated in , client , which may be implemented by one or more first physical computing devices, is communicatively connected to application server , which may be implemented by one or more second physical computing devices, over a network. In some embodiments, each such physical computing device may be implemented as a separate computer system as shown in . For example, client  may be implemented in a computer system as a set of program instructions recorded on a machine-readable storage medium, while application server  may be implemented in a different computer system. Client  comprises graphical user interface (GUI) logic . GUI logic  may be a set of program instructions which, when executed by one or more processors of the computer system, are operable to receive user input and to display a graphical representation of one or more graphic constructs related to exploring a universe of data items using the approaches herein. GUI logic  may be operable to receive user input from, and display the graphic constructs to, a graphical user interface that is provided on display  by the computer system on which client  executes.","In some embodiments, GUI logic  is omitted. For example, in one embodiment, client  may comprise an application program or process that issues one or more function calls or application programming interface (API) calls to application server  to obtain information resulting from, to provide input to, and to execute along with application server , the processes or one or more steps thereof as described herein. For example, client  may request and obtain a representation of zero-order objects such as instruments, higher-order objects such as date sets, indexes, instrument groups, etc., higher-order objects, and other constructs as described herein using a programmatic interface, and then the client may use, process, log, store, or otherwise interact with the received data according to local logic. Client  may also interact with application server  to provide input, definition, editing instructions, expressions related to one or more objects or constructs as described herein using a programmatic interface, and then the application server  may use, process, log, store, or otherwise interact with the received input according to application server logic.","Application server  may be implemented as a special-purpose computer system having the logical elements shown in . In an embodiment, the logical elements may comprise program instructions recorded on one or more machine-readable storage media. Alternatively, the logical elements may be implemented in hardware, firmware, or a combination.","When executed by one or more processors of the computer system, logic in application server  is operable to explore the universe of data items according to the techniques described herein. In one embodiment, application server  may be implemented in a Java Virtual Machine (JVM) that is executing in a distributed or non-distributed computer system. In other embodiments, application server  may be implemented as a combination of programming instructions written in any programming language (e.g. C++ or Visual Basic) and hardware components (e.g. memory, CPU time) that have been allocated for executing the program instructions.","In an embodiment, application server  comprises repository access logic  and data exploring logic . Repository access logic  may comprise a set of program instructions which, when executed by one or more processors, are operable to access and retrieve data from data repository . For example, repository access logic  may be a database client or an Open Database Connectivity (ODBC) client that supports calls to a database server that manages data repository . Data repository  may be any type of structured storage for storing data including, but not limited to, relational or object-oriented databases, data warehouses, directories, data files, and any other structured data storage.","In the embodiment illustrated in , data exploring logic  comprises input receiver  and evaluation module . Data exploring logic  may be object-oriented logic. As used herein, the universe of data items can be accessed and\/or operated on by the data exploring logic  to create, modify, delete, and store the data generated or used by data analysis system .","In an embodiment, input receiver  is a set of program instructions which, when executed by one or more processors, are operable to receive input from a client.","Evaluation module  is a set of program instructions that implement logic to create, modify, delete and store objects that are associated with the universe of data items, evaluate these objects when instructed to do so by data analysis system , provide the evaluation results to a client. Evaluation results of one or more objects may also be rendered by GUI logic  on display .","3.1 Instruments","An instrument is an object that represents any market traded financial entity or product of interest, such as a stock (equity), bond, currency, or fund.","3.2 Metrics","A metric is a transformation (or function) that receives one type of data (e.g., an object such as an instrument) and returns another type (e.g., another object such as a time series). A metric may perform any form of specified processing, specified computation, related operations such as database queries, network communications and data storing. For example, a metric may receive a particular instrument as input and return a time series of the particular instrument's volume. A metric may also receive one time series for an instrument and return the value of the instrument on a given day. A metric may optionally receive parameters at runtime that influence the execution of logic implemented in the metric. An example of a parameter that can be inputted into a metric to influence the execution of a metric may be a number of days to show a moving average price for MSFT where the metric calculates the moving average price.","Objects that are of a higher order than a zero order can be built using metrics. The input objects and the output objects can be zero-order or higher-order in any combination.","The data changes over time. Therefore, if a metric is evaluated at two different times, it may produce different outputs. Alternatively, output objects from one or more of these metrics may be pre-computed\/evaluated and stored\/cached beforehand. In some embodiments, parameters may be provided to a metric to specify whether a cached object of a metric should be used as input, or whether the output of a metric should be cached or stored.","3.3 Time Series","A time series is a programmatic object that represents time-dependent information in any of several forms, including a series of discrete dates or a sequence of time-related values. Where an object model contains a large amount of time-dependent information, many time series may be created in the process of evaluating objects in the object model. For example, an instrument may have a trading history that indicates its values over a period of time. From this trading history (e.g., raw trading data), one or more time series may be created to represent time-dependent information, in any desired resolution (for example, in a time scale of years, months, weeks, days, hours, minutes, seconds).","In some embodiments, a time series may comprise a set of numeric values and a separate set of time values, wherein each numeric value has a corresponding time value in the set of time values. Each such numeric value represents a value of a certain entity at each corresponding time value in the set of time values. For example, a time series may be used to represent market values of an instrument. The above-mentioned \u201cvalue of a certain entity\u201d may be a particular market value at the closing of a trading day. In this example, the time series may comprise a set of long or double values, each of which represents a market value at the closing of a corresponding day as indicated by a time value in a separate set of time values. The time series further comprises the separate set of time values representing the closings of all corresponding days, for which market values of the instruments are included in the set of long or double values.","A time series may also be used to represent values of an entity for time values that meet certain criteria. For example, a time series may be used to represent market values for an instrument when the instrument is traded to higher prices, when the instrument is traded to lower prices, when the volatility of the instrument exceeds a certain limit, when the volatility of the instrument stays below a certain limit, or a derivative of other time series. Furthermore, the values of an entity are not limited to market values of an instrument. For example, the values of an entity, as represented by a time series, may comprise analytical values of historical volatility of two instruments.","In some embodiments, a time series associated with an instrument may be accessed by an expression containing an identifier (e.g., the identifier \u201cGOOG\u201d to indicate the equity instrument for Google, Inc.) for another object such as an instrument and a token (e.g., a textual name such as \u201cHVOL\u201d representing historical volatility of an instrument) for a type of transformation. In the present example where the time series is accessed by the expression \u201cGOOG.HVOL\u201d, the metric identified by the token (e.g., \u201cHVOL\u201d) receives the identifier for the instrument (e.g., \u201cGOOG\u201d) as input and transforms raw trading data of the instrument (i.e., \u201cGOOG\u201d) into a time series as an output object. This time series, for example, may represent time-dependent information of volatility of the instrument \u201cGOOG\u201d in all recorded trading days.","A time series such as described above may be further transformed along with other parameters into another output object.","A time series can not only represent time-dependent information for zero-order objects such as instruments, but may also represent time-dependent information for any higher-order objects in the object model.","In some embodiments, a time series may be used to represent time-dependent information that is not related to another object. For example, a set of time values from a calendar, e.g., all week days, all work days, all Mondays, or the second days of months, may be transformed by a metric into a time series. Such a time series may be viewed as an object per se as it is independent of another object such as an instrument. In some embodiments, the time series may be accessed within a global scope, by any other objects, without naming any other object such as an instrument. In some embodiments, a time series may comprise a set of time values (e.g., all Mondays) without including a separate set of numeric values representing values of an entity that may be associated with another object such as an instrument.","In some embodiments, time series may be pre-computed (evaluated) and stored\/cached.","4.1 Date Set","A date set comprises a set of time values that satisfy one or more selection criteria. As used herein, the term \u201ctime value\u201d may include date and\/or time of day information at various resolutions, for example, from multiple years to sub-seconds. For example, a date set may be all trading days when the \u201cGOOG\u201d stock trades up. A date set may also have an explicit start time value for the set, for example, Jan. 1, 2006; thus, the date set excludes all time values that are before the explicit start time value. Similarly, a date set may also have an explicit end time value; thus, the date set excludes all time values that are after the explicit end time value.","A date set may also take an implicit start time value, where an explicit start time value is not specified. For example, a date set that comprises all days when the \u201cGOOG\u201d stock trades up may have an implicit start time value when the \u201cGOOD\u201d stock was first publicly traded. Similarly, a date set may also take an implicit end time value, where an explicit end time value is not specified. For example, a date set that comprises all days when the \u201cENE\u201d stock was available for trades may have an implicit end time value when the \u201cENE\u201d stock was terminated from public trading from the New York Stock Exchange.","One of several object creation mechanisms may be used to create higher-order objects such as date sets. One object creation mechanism is a metric. This metric may take a first input that specifies a time series. This time series is generally a set of date\/value pairs. The date set metric also may take a second input that specifies one or more criteria. For example, the one or more criteria as specified in the second input may specify a range. The resulting date set will then contain all the dates as indicated by the time series that are within the specified range.","Another object creation mechanism to create a higher-order object such as a date set is to directly use a programming language such as JAVA. The user may supply programming language code to the system , which may be compiled, interpreted or otherwise executed by the system  to create a date set. Extension mechanisms such as Java reflection may be used to add code segments or objects to the system so that the object creation mechanisms can be dynamically extended.","Yet another object creation mechanism to create a higher-order object such as a date set is to interact with a user interface. For example, tools or widgets may be provided in or through a graphical user interface and may interact with the user for the purpose of creating a date set.","In various embodiments, these and other object creation mechanisms, or a combination thereof, may be used to create various higher-order objects.","A date set may or may not be related to any other object. For example, as shown in , a date set may be hard-coded by a user at client . For example, a calendar  may be shown at client . Graphic components may be rendered on a graphical user interface  so that the user may select certain time values (i.e., the user selection provides the second input that specifies one or more criteria) using calendar  (which is the first input that specifies a time series). With calendar  and the user selection as inputs, an object creation mechanism creates and outputs the corresponding date set.","For a generated date set, the user may provide a token in the form of a string to this date set in a text input box . Subsequently, this date set may be used in combination with other objects. In an embodiment, any of all the entities that are involved in specifying, creating and outputting a new date set may be stored in a machine-readable storage medium. In addition, the new date set may also be stored or cached in such a medium.","4.2 Index","An index indicates a collective value of one or more instruments as a function of time over a set of time values. A collective value is any type of aggregate value of the one or more instruments. The collective value may be of a market value type such as a total monetary value of the one or more instruments traded at public exchanges, or of an analytical value type such as a numeric value indicating volatility of the trading price for the one or more instruments, as a function of time over the set of time values.","For the purpose of illustration only, the one or more instruments included in the index may comprise the \u201cGOOG\u201d, \u201cYHOO\u201d, and \u201cMSFT\u201d stocks. Hence, the index may be an aggregate market value of these stocks, as a function of time over all trading days since Jan. 1, 2007. A market value is an aggregation of values of all assets included in the portfolio at a corresponding time value in the set of time values. The market value may be measured (e.g., denominated) in a reference currency such as the U.S. dollar. For example, a value of an asset such as an instrument may be a trading price of that instrument at the closing of a particular trading day. A value of the reference currency may be its trading value as denominated in the reference currency. A value of a currency that is not the reference currency may also be measured in the reference currency through an exchange rate.","An index may have a start time value, for example, Jan. 1, 2007; thus, the index does not track the collective value before the start time value. Similarly, an index may also have an end time value; thus, the index does not track the collective value after the end time value. The start time value and\/or the end time value may be explicit or implicit.","To create an index, any of the object creation mechanisms may be used. An object creation mechanism may take a first input that specifies one or more time series for the one or more instruments. For example, these time series as specified in the first input may represent trading prices for the \u201cGOOG\u201d, \u201cYHOO\u201d, and \u201cMSFT\u201d stocks on all trading days when the stocks are publicly traded. The object creation mechanism also may take a second input that specifies a date set. In some embodiments, the date set as specified in the second input may specify a set of days for which a collective value of the one or more instruments should be tracked. For example, the date set may comprise a set of last five trading days of each quarter since Jan. 1, 2007. The object creation mechanism may comprise logic to compute the collective value of the one or more instruments as specified in the first input over the set of time values as specified in the second input. The object creation mechanism may create and output an index in the form of a new time series. Each numeric value in the set of longs or doubles indicates the collective value of the \u201cGOOG\u201d, \u201cYHOO\u201d, and \u201cMSFT\u201d stocks at a time value (e.g., a day) in the set of last five trading days of each quarter since Jan. 1, 2007.","The user may provide a token in the form of a string to name the index so that the definition or computed value of the index can be subsequently referenced as a named object in combination with other objects. In an embodiment, any of all the entities that are involved in specifying, creating and outputting a new index may be stored or cached in a machine-readable storage medium. In addition, the definition of new index may also be stored or cached in such a medium.","4.3 Instrument Group","An instrument group comprises one or more instruments selected from a universe of instruments using a filter chain that is created from zero or more set operations and one or more filter links. For example, an instrument group may comprise all the stocks in the S&P Index (\u201cSPX\u201d) that are in the technology sector. Another example of instrument group may be all the stocks in the financial sector of the S&P Index that have low PE ratios.","To create an instrument group, an object creation mechanism may be used. This mechanism may take a first input that specifies the zero or more set operations. For example, a set operation of \u201cintersection\u201d may be specified as the first input. The object creation mechanism also may take a second input that specifies the one or more filter links. For the purpose of illustration only, such a filter link may be a criterion that any selected stock must belong to the bucket of lowest 10% among an input set of instruments. In some embodiments, graphical user interface  of client  may be used to create an instrument group, as shown in . A filter view  may be used to represents an input set of instruments to which a filter link may be applied. In this example, all stocks in the financial sector of the S&P Index are used as an input set of instruments. These stocks are represented in an n-tile diagram. This n-tile diagram comprises n (a positively integer such as ten) buckets, each bucket comprising substantially a same number of instruments. Each bucket represents a particular range of 10% PE ratios. Thus, if a stock is in the top 10% among all the stocks in terms of PE ratios, the stock will be included in the bucket between 90% and 100%. Similarly, if a stock is in the bottom 10% among all the stocks in terms of PE ratios, the stock will be included in the bucket between 0% and 10%. A user at client  may perform a range selection  to select a desire range of PE ratios. In the present example, the user selects the bottom 10% of PE ratios.","The object creation mechanism may comprise logic to create a filter chain by evaluating each filter link in the filter chain, combining the filter link into the filter chain based on the set operation specified, and generate the instrument group that comprises the one or more instruments. In the present example, where the filter link is created using an u-tile diagram. the object creation mechanism may create and output an instrument group that comprises a set of instruments that are in the bottom 10% of PE ratios as indicated in .","The user may provide a token in the form of a string to name the instrument group. For example, this instrument group as illustrated in  may be called \u201clow PE SPX Financials.\u201d In some embodiments, a text input box  may be provided in graphical user interface  to accept input of the string. Subsequently, this named instrument group may be used in combination with other objects by a reference to the token.","In an embodiment, any of all the entities that are involved in specifying, creating and outputting a new instrument group may be stored or cached in a machine-readable storage medium. In addition, the new instrument group may also be stored or cached in such a medium.","4.4 Portfolio","A portfolio indicates a market value of included assets as a function of time over a set of time values. A portfolio may comprise a start time value from which the market value of the portfolio is to be tracked. A portfolio may optionally comprise an end time value after which the market value of the portfolio is no longer tracked. The set of assets included in the portfolio at any given time value may comprise a variable number of instruments. The set of assets may optionally include a certain amount in various currencies (including currency equivalents).","To create a portfolio, an object creation mechanism may be used. This mechanism may take a first input that specifies zero or more time series for the zero or more instruments. For example, these time series as specified in the first input may represent trading prices for the \u201cGOOG\u201d, \u201cYHOO\u201d, and \u201cMSFT\u201d stocks on all trading days when the stocks are publicly traded. In some embodiments, the object creation mechanism may use weight factors to determine how much of each of these instruments is to be hold in the portfolio at each time value of a time period starting from the start time value. The object creation mechanism also takes a second input that specifies a date set. In some embodiments, the date set as specified in the second input specifies a set of time values (e.g., the preceding time period) for which a market value of the portfolio should be computed. For example, the date set may comprise a set of all trading days since Jan. 1, 2007. The object creation mechanism may further take a third input that specifies the one or more trades over the set of time values as specified in the second input. Each trade may specify an instrument, a buy-or-sell indication, a time of trading, and a quantity. The object creation mechanism may comprise logic to execute, or to simulate execution of, trades as specified in the third input and to compute the market value of the portfolio over the set of time values as specified in the second input, thereby giving rise to a new portfolio object. Any other metric may be applied to the new portfolio object to extract information. In addition, the portfolio object may be used to create another higher-order object. In the present example, the associated set of time values to which the long or double values are mapped is the set of time values specified in the second input. For example, each numeric value in the set of longs or doubles indicates a collective market value of all assets in the portfolio at a time value in the set of all trading days since Jan. 1, 2007.","The user may provide a token in the form of a string to name the portfolio so that a subsequent reference can be made to the token in an expression that involves other objects.","In an embodiment, any of all the entities that are involved in specifying, creating and outputting a new portfolio may be stored or cached in a machine-readable storage medium. In addition, the new portfolio may also be stored or cached in such a medium.","4.5 Strategy","A strategy, as illustrated in , may be used to generate a net profit in a time period. A net profit in a time period is a net gain or loss at the end of the time period. Here, the net profit may be determined by a number of trades executed within the time period and market conditions. A block of strategy code may be used to generate the trades that are to be executed in connection with the strategy. In some embodiments, the net profit and the trades may be hypothetical and generated for the purpose of studying, validating or invalidating a particular trading strategy.","The time period may be represented by a date set that comprises a starting time value corresponding to the beginning of the time period and optionally an end time value corresponding to the end of the time period.","In some embodiments, a strategy comprises an initial collection of assets at the beginning of the time period. In a particular embodiment, this initial collection of assets may comprise only a starting net asset value ( of ) in a reference currency such as the U.S. dollar.","To create a strategy, an object creation mechanism may be used. This object creation mechanism may take a first input that specifies a particular date set. Comprising a start time value and optionally an end time value as previously described, the particular date set represents a time period where trades may be generated and executed. For example, the date set may be all trading days from Jan. 1, 2006 to now. Alternatively, the date set may be all trading days when the \u201cGOOG\u201d stock trades up.","The object creation mechanism may take a second input that specifies a statement block, which when executed generates one or more trades. Each trade may specify an instrument, a-buy-or-sell indication, a time of trading, and a quantity. For the purpose of illustration, the statement block may be displayed in a content pane  on graphical user interface  in . The object creation mechanism may comprise logic to execute, or to simulate execution of, the statement block and the trades as generated by the statement block and to compute the market value of the strategy over the set of time values as specified in the first input, thereby creating a new strategy object. Any other metric may be applied to the new strategy object to extract information. In addition, the strategy object may be used to create another higher-order object. Furthermore, the object creation mechanism may create and output a net profit at the end of the time period. In the present example, the object creation mechanism may create and output a net profit of 72,277.21 in the reference currency of US dollar, as illustrated in  of .","The user may provide a token in the form of a string to name the strategy. For example, the strategy in  may be named as \u201cVLD during rising rates\u201d, as indicated in the title bar of graphical user interface  of . Subsequently, this strategy may be used to create other higher-order objects.","In an embodiment, any of all the entities that are involved in specifying, creating and outputting a new strategy may be stored or cached in a machine-readable storage medium. In addition, the new strategy may also be stored or cached in such a medium.","A user may interact with graphical user interface  to test a trading strategy. For example, a statement block may be supplied (e.g., pasted) into content pane  of  and executed to create and output a net profit at the end of the time period. Other statement blocks corresponding to various strategies of investment may also be tested by supplying each of the other statement blocks into content pane  of  for execution of trades. For example for the purpose of comparing between different trading strategies within the same time period and with the same starting net asset value may be tested in this manner.","For the purpose of illustration only, the statement block that is to be executed by a strategy (object) may comprise one or more rules that can be used to determine the one or more trades, as illustrated below:",{"@attributes":{"id":"p-0094","num":"0093"},"tables":{"@attributes":{"id":"TABLE-US-00001","num":"00001"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"21pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"196pt","align":"left"}}],"thead":{"row":{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"Setup code:"]},{"entry":[{},"-----------------------------------------"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"21pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"182pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"\/\/","A Strategy based on the idea that an instrument that"]},{"entry":[{},{},"experiences large moves in"]},{"entry":[{},"\/\/","either direction tends to revert to a more normal"]},{"entry":[{},{},"value. Buy the instrument"]},{"entry":[{},"\/\/","when it crosses its lower Bollinger band; sell when it"]},{"entry":[{},{},"crosses its upper"]},{"entry":[{},"\/\/","Bollinger band; and always exit the position once it"]},{"entry":[{},{},"returns to its moving"]},{"entry":[{},"\/\/","average."]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"21pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"196pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"TimeSeries series = SPX;"]},{"entry":[{},"Number days = 80;"]},{"entry":[{},"Number stddev = 2.0;"]},{"entry":[{},"TimeSeries lowerBollingerBand ="]},{"entry":[{},"series.bollingerSingle(days, \u22121*stddev);"]},{"entry":[{},"TimeSeries upperBollingerBand ="]},{"entry":[{},"series.bollingerSingle(days, stddev);"]},{"entry":[{},"TimeSeries mean = series.ma(days);"]},{"entry":[{},"-----------------------------------------"]},{"entry":[{},"Loop code:"]},{"entry":[{},"-----------------------------------------"]},{"entry":[{},"if (series.movesBelow(lowerBollingerBand)) {"]},{"entry":[{},"\u2003if (numContracts(series) <= 0) {"]},{"entry":[{},"\u2003\u2002hold(series, 100, Enum.PERCENT_OF_NAV);"]},{"entry":[{},"\u2003}"]},{"entry":[{},"}"]},{"entry":[{},"else if (series.movesAbove(upperBollingerBand)) {"]},{"entry":[{},"\u2003if (numContracts(series) >= 0) {"]},{"entry":[{},"\u2003\u2002hold(series, \u2212100, Enum.PERCENT_OF_NAV);"]},{"entry":[{},"\u2003}"]},{"entry":[{},"}"]},{"entry":[{},"else if (series.movesAbove(mean) ||"]},{"entry":[{},"\u2003series.movesBelow(mean)) {"]},{"entry":[{},"\u2003exit(series);"]},{"entry":[{},"}"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}]}}]}}},"This statement block as indicated in its comment section implements a trading strategy with rules of buying 100 units in SPX if SPX moves below its lower Bollinger band, selling 100 units if SPX moves above its upper Bollinger band, and exiting the position in SPX if SPX returns to its moving average.","4.6 Regression","A regression, as illustrated in , may be used to perform predictions, inferences and hypothesis analyses between independent time series and a dependent time series in the object model.","To create a regression, an object creation mechanism may be used. This object creation mechanism may take a first input that specifies one or more first time series representing independent variables in a regression analysis. For example, the one or more first time series may be ones that are associated with objects like \u201cExxon Mobil Corp\u201d, \u201cWTI CRUDE FUTURE (1st month generic)\u201d, and \u201cS&P 500 INDEX\u201d in the object model, as indicated in  of . The object creation mechanism also may take a second input that specifies a second time series representing a dependent variable in the regression analysis. The object creation mechanism may comprise logic to perform the regression analysis that transforms the one or more first time series into a predicted time series and compares the predicted time series with the second time series, thereby creating a new regression object. This new regression object may be used in part by another object creation mechanism to create other higher-order objects. The result of the regression analysis may be presented in a content pane  of .","The user may provide a token in the form of a string to name the regression. Subsequently, this regression may be used in combination with other objects through a reference to its token.","In an embodiment, any of all the entities that are involved in specifying, creating and outputting a new regression may be stored or cached in a machine-readable storage medium. In addition, the new regression may also be stored or cached in such a medium.","A user may define an arbitrarily complex object that is built on top of other objects. For example, liquidity and risk models may be built as a multi-level object on top of an instrument group, a portfolio, several indexes, a date set, etc. Similarly, an index may be built on top of other higher-order objects.",{"@attributes":{"id":"p-0102","num":"0101"},"figref":["FIG. 2E","FIG. 2B","FIG. 2E","FIG. 2E"],"b":["224","200"]},"In some embodiments, a higher-order object may be represented as a tree. The leaf nodes of the tree are zero-order objects such as instruments. The tree may additionally and\/or optionally contain non-leaf nodes. The non-leaf nodes are higher-order objects. In other words, a higher-order object may be built from building blocks. These building blocks may be zero-order or higher-order objects. For example, when an index is built from an instrument group, the instrument group also may be built from a combination of other higher-order and zero-order objects.","Any of several object creation mechanisms may be selected by a user for the purpose of creating a higher-order object. Definitions for the higher-order objects may be generated by the object creation mechanism and saved in the system. A definition may be defined and evaluated at two different times. The results of evaluation of a definition may change as underlying data changes. These results may be saved in cache or in permanent storage.","In some embodiments, types of objects in the object model may be implemented as classes in an object-oriented language such as JAVA\u00ae, thus allowing easy incorporation of various properties of one object into another.","In accordance with an embodiment of the present invention, an input mechanism is provided for a user to enter expressions to the data analysis system for the purpose of instructing the data analysis system to create, modify, delete, evaluate, or save various objects and components in the object model. Here, the term \u201cinput mechanism\u201d includes either a command line interaction mechanism or a graphic-user-interface based interaction mechanism, or a combination of the preceding two. In other embodiments, an input mechanism is not used and objects may be specified programmatically or at runtime using other mechanisms.","An expression may comprise one or more tokens separated by delimiter characters such as a period, parentheses, a comma, quotation marks, etc. Each token may refer to an economic index, an instrument, a metric, an input object, an output object, a parameter, a time series, a higher-order-object, or any higher-order object in the object model.","An expression may be evaluated with a certain order. For example, in a particular embodiment, the expression may be evaluated according to a precedence ordering among operators. Additionally and\/or optionally, certain optimization logic may be used to determine whether any tokens in an expression can be evaluated in parallel.","Custom metrics and user-defined classes and objects can be provided to (or plugged into) the system and be immediately made available for use. In certain embodiments, a modeling language may be used to define custom metric objects. For example, a user may specify at a command line interface for creating a new type of object and provides to the data analysis system a token for this new type of object. The new type of object, for example, may be a new metric. However, a modeling language is not required, and the embodiments that show use of a modeling language herein are provided merely to illustrate clear examples. Thus, in one alternative, Javan objects and instance variables may be used to define custom metric objects programmatically without using a modeling language to define the objects and instance variables.","As illustrated in , in an embodiment that uses a modeling language, a user may type an expression \u201c(HVOL( )+IVOL( ))\/2\u201d as  of  to define a new custom metric. For the purpose of illustration only, \u201cHVOL( )\u201d and \u201cIVOL( )\u201d may be two tokens for two functions. Tokens for other constructs may also be used. The user may give a new token \u201cavgvol( )\u201d for this new metric. Subsequently, as shown in , the token \u201cavgvol( )\u201d for the new metric may be displayed as a selectable item in a dialog pane  of . This new metric may be used together with an instrument such as \u201cGOOG\u201d to cause a new time series to be created and displayed. This new time series is produced by averaging values from two time series as specified by \u201cHVOL( )\u201d and \u201cIVOL( )\u201d, as defined by the user in .","The data analysis system may immediately make available this new type of object (e.g., a new function \u201cavgvol( )\u201d) to all users of the system. The users simply specify the token associated with the new type of object in subsequent expressions. As shown in , time series representing \u201cHVOL( )\u201d and \u201cIVOL( )\u201d can be displayed in a content pane  of , along with a new time series as specified by the new token (i.e., \u201cavgvol( )\u201d).","In this manner, new types of objects and new types of expressions can be continuously added to the data analysis system, which causes the object model to evolve over the time. For example, a user may continuously define new hypotheses as new object types or as new instances of existing object types and timely test the new hypotheses in a rapidly changing market. Evaluations of some of these hypotheses may be saved or cached along with the definitions for the hypotheses. These hypotheses can also be recalled, re-studied, and reused by way of suitable tokens at a later time.",{"@attributes":{"id":"p-0113","num":"0112"},"figref":"FIG. 3"},{"@attributes":{"id":"p-0114","num":"0113"},"figref":["FIG. 3","FIG. 2A"],"b":["302","100","120","200","100","100","100"]},"In block , the data analysis system  determines, based on one or more input objects, the one or more time series. For example, input object may be the calendar and the set of criteria, a part of which is displayed in  of . The calendar may be used to generate the one or more time series.","In block , the data analysis system  applies the metric using the one or more time series, thereby generating a particular value for the output object. For example, the metric may be used by the data analysis system  to transform the time series that represents the calendar into a date set in the form of a time series comprising time values satisfying the set of criteria.","In block , the data analysis system  store, in memory, one of the metric and the particular value for the output object. In some embodiments, any of other objects, time series, and parameters may also be stored. For example, the user may specify a name for the date set in  of  and request the metric that generates the date set be stored in a physical storage device.","For the purpose of this invention, other objects including the higher-order objects and the higher-order objects described above may also be created in a similar manner. For example, this example process can be repeated to produce higher-order objects based on time series determined from higher-order objects or zero-order objects. In this manner, higher-order objects may be built on top of higher-order objects in the object model.","Data analysis according to the techniques described herein is not limited to any particular tool or any particular type of analysis. Thus, the examples of data analysis provided herein are to be regarded in an illustrative rather than a restrictive sense.",{"@attributes":{"id":"p-0120","num":"0119"},"figref":"FIG. 4","b":["400","400","402","404","402","400","406","402","404","406","404","400","408","402","404","410","402"]},"Computer system  may be coupled via bus  to a display , such as a cathode ray tube (CRT), for displaying information to a computer user. An input device , including alphanumeric and other keys, is coupled to bus  for communicating information and command selections to processor . Another type of user input device is cursor control , such as a mouse, a trackball, or cursor direction keys for communicating direction information and command selections to processor  and for controlling cursor movement on display . This input device typically has two degrees of freedom in two axes, a first axis (e.g., x) and a second axis (e.g., y), that allows the device to specify positions in a plane.","The invention is related to the use of computer system  for implementing the techniques described herein. According to one embodiment of the invention, those techniques are performed by computer system  in response to processor  executing one or more sequences of one or more instructions contained in main memory . Such instructions may be read into main memory  from another machine-readable medium, such as storage device . Execution of the sequences of instructions contained in main memory  causes processor  to perform the process steps described herein. In alternative embodiments, hard-wired circuitry may be used in place of or in combination with software instructions to implement the invention. Thus, embodiments of the invention are not limited to any specific combination of hardware circuitry and software.","The term \u201cmachine-readable medium\u201d as used herein refers to any medium that participates in providing data that causes a machine to operate in a specific fashion. In an embodiment implemented using computer system , various machine-readable media are involved, for example, in providing instructions to processor  for execution. Such a medium may take many forms, including but not limited to, non-volatile media, volatile media, and transmission media. Non-volatile media includes, for example, optical or magnetic disks, such as storage device . Volatile media includes dynamic memory, such as main memory . Transmission media includes coaxial cables, copper wire and fiber optics, including the wires that comprise bus . Transmission media can also take the form of acoustic or light waves, such as those generated during radio wave and infrared data communications. All such media must be tangible to enable the instructions carried by the media to be detected by a physical mechanism that reads the instructions into a machine.","Common forms of machine-readable media include, for example, a floppy disk, a flexible disk, hard disk, magnetic tape, or any other magnetic medium, a CD-ROM, any other optical medium, punch cards, paper tape, any other physical medium with patterns of holes, a RAM, a PROM, and EPROM, a FLASH-EPROM, any other memory chip or cartridge, a carrier wave as described hereinafter, or any other medium from which a computer can read.","Various forms of machine-readable media may be involved in carrying one or more sequences of one or more instructions to processor  for execution. For example, the instructions may initially be carried on a magnetic disk of a remote computer. The remote computer can load the instructions into its dynamic memory and send the instructions over a telephone line using a modem. A modem local to computer system  can receive the data on the telephone line and use an infrared transmitter to convert the data to an infrared signal. An infrared detector can receive the data carried in the infrared signal and appropriate circuitry can place the data on bus . Bus  carries the data to main memory , from which processor  retrieves and executes the instructions. The instructions received by main memory  may optionally be stored on storage device  either before or after execution by processor .","Computer system  also includes a communication interface  coupled to bus . Communication interface  provides a two-way data communication coupling to a network link  that is connected to a local network . For example, communication interface  may be an integrated services digital network (ISDN) card or a modem to provide a data communication connection to a corresponding type of telephone line. As another example, communication interface  may be a local area network (LAN) card to provide a data communication connection to a compatible LAN. Wireless links may also be implemented. In any such implementation, communication interface  sends and receives electrical, electromagnetic or optical signals that carry digital data streams representing various types of information.","Network link  typically provides data communication through one or more networks to other data devices. For example, network link  may provide a connection through local network  to a host computer  or to data equipment operated by an Internet Service Provider (ISP) . ISP  in turn provides data communication services through the worldwide packet data communication network now commonly referred to as the \u201cInternet\u201d . Local network  and Internet  both use electrical, electromagnetic or optical signals that carry digital data streams. The signals through the various networks and the signals on network link  and through communication interface , which carry the digital data to and from computer system , are exemplary forms of carrier waves transporting the information.","Computer system  can send messages and receive data, including program code, through the network(s), network link  and communication interface . In the Internet example, a server  might transmit a requested code for an application program through Internet , ISP , local network  and communication interface .","The received code may be executed by processor  as it is received, and\/or stored in storage device , or other non-volatile storage for later execution. In this manner, computer system  may obtain application code in the form of a carrier wave.","In the foregoing specification, embodiments of the invention have been described with reference to numerous specific details that may vary from implementation to implementation. Thus, the sole and exclusive indicator of what is the invention, and is intended by the applicants to be the invention, is the set of claims that issue from this application, in the specific form in which such claims issue, including any subsequent correction. Any definitions expressly set forth herein for terms contained in such claims shall govern the meaning of such terms as used in the claims. Hence, no limitation, element, property, feature, advantage or attribute that is not expressly recited in a claim should limit the scope of such claim in any way. The specification and drawings are, accordingly, to be regarded in an illustrative rather than a restrictive sense."],"BRFSUM":[{},{}],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"BRIEF DESCRIPTION OF THE DRAWINGS","p":[{"@attributes":{"id":"p-0013","num":"0012"},"figref":"FIG. 1"},{"@attributes":{"id":"p-0014","num":"0013"},"figref":"FIG. 2A"},{"@attributes":{"id":"p-0015","num":"0014"},"figref":"FIG. 2B"},{"@attributes":{"id":"p-0016","num":"0015"},"figref":"FIG. 2C"},{"@attributes":{"id":"p-0017","num":"0016"},"figref":"FIG. 2D"},{"@attributes":{"id":"p-0018","num":"0017"},"figref":"FIG. 2E"},{"@attributes":{"id":"p-0019","num":"0018"},"figref":"FIG. 2F"},{"@attributes":{"id":"p-0020","num":"0019"},"figref":"FIG. 2G"},{"@attributes":{"id":"p-0021","num":"0020"},"figref":"FIG. 2H"},{"@attributes":{"id":"p-0022","num":"0021"},"figref":"FIG. 3"},{"@attributes":{"id":"p-0023","num":"0022"},"figref":"FIG. 4"}]},"DETDESC":[{},{}]}
