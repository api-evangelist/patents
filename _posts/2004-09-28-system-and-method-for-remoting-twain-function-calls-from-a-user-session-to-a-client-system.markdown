---
title: System and method for remoting twain function calls from a user session to a client system
abstract: A mechanism for remoting Twain function calls within a user session to a client system is disclosed. By hooking Twain function calls made by a Twain application on the server, the Twain function calls may be remoted over a virtual connection to a client system. A proxy application corresponding to the server-based Twain application is created on the client system. The proxy application communicates with the server and makes the appropriate function calls to the remainder of the Twain framework. The use of the proxy application allows multiple applications and devices to be supported simultaneously. Messages sent over the virtual connection are filtered prior to transmission thereby limiting the amount of required communication traffic. A multiplexor and demultiplexor are utilized in order to efficiently use bandwidth on the virtual channel. The present invention additionally compresses image data prior to transmission over the virtual channel.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=07712110&OS=07712110&RS=07712110
owner: Citrix Systems, Inc.
number: 07712110
owner_city: Fort Lauderdale
owner_country: US
publication_date: 20040928
---

{"@attributes":{"id":"description"},"BRFSUM":[{},{}],"heading":["FIELD OF THE INVENTION","BACKGROUND OF THE INVENTION","BRIEF SUMMARY OF THE INVENTION","DETAILED DESCRIPTION OF THE INVENTION"],"p":["The illustrative embodiment of the present invention relates generally to image data processing, and more particularly to the remoting of applications from a user session being hosted on a server to a client system in communication with a Twain-compliant image acquisition device.","Twain is a standard framework for imaging applications. The applications call a well-known API to control document scanners, digital cameras, and image databases that are Twain-compliant. Vendor-supplied hardware drivers used with Twain devices conform to a well-known set of interfaces and capabilities. The standard framework for the Twain architecture includes a Twain application such as WORD from Microsoft Corporation of Redmond, Wash. or a photo editing application. The architecture also includes a data source manager (DSM) which is a component which supplies the API called by the application which controls the vendor-supplied hardware drivers. For the WINDOWS operating system from Microsoft Corporation of Redmond, Wash., the data source manager is found in the DLL twain32.dll which is shipped with WINDOWS. The component is generic and has no knowledge of the underlying image hardware. Also included in the standard Twain architecture is a data source (DS) which is a vendor-supplied driver for a specific device. The data source is responsible for talking to the image acquisition device using one of several protocols such as USB, FIREWIRE, Parallel, SCSI, IR, BLUETOOTH, the IEEE 1394 protocol, the Wi-Fi protocol, or other wireless protocol. The imaging devices may be scanners, digital cameras, or software applications.",{"@attributes":{"id":"p-0004","num":"0003"},"figref":"FIG. 1","b":["2","6","4","2","8","8","10","10","12","2","14","16","14"]},"Unfortunately, the conventional techniques for controlling Twain-compliant devices utilized by the Twain applications do not work particularly well in a distributed multi-user, multi-session environment. For example, a server hosting multiple user sessions for remote client systems must be loaded with unique vendor-specific hardware drivers for each Twain-compliant device. While not a problem for controlling a single device for a single user, multiple devices require the server to include multiple drivers. Additionally, for a server supporting user sessions, the virtual channel supports one application per session. This prevents multiple Twain-compliant devices from being supported within the same session and prevents the use of more than one Twain application in the session at the same time.","The illustrative embodiment of the present invention provides a mechanism for remoting Twain function calls within a user session to a client system. By hooking Twain function calls made by a Twain application on the server, the Twain function calls may be remoted over a virtual connection to a client system. A proxy application corresponding to the server-based Twain application is created on the client system. The proxy application communicates with the server and makes the appropriate function calls to the remainder of the Twain framework. The use of the proxy application allows multiple applications and devices to be supported simultaneously. Messages sent over the virtual connection are filtered prior to transmission thereby limiting the amount of required communication traffic. A multiplexor and demultiplexor are utilized in order to efficiently use bandwidth on the virtual channel. The present invention additionally compresses image data prior to transmission over the virtual channel.","In one embodiment, a method for controlling acquisition devices associated with a client includes the step of providing a client that is communicating with a server using a presentation level protocol. The client is executing a proxy application associated with an application executing on a server. The method further includes the step of receiving at the proxy application a command directed to an image acquisition device that is associated with a client from a server via a network using a presentation level protocol. The method further includes the step of issuing the received command to the image acquisition device. The method additionally includes the steps of receiving a response to the issued command from the image acquisition device, and then transmitting the received response to the server via a network using a presentation level protocol.","In another embodiment, a method for remotely controlling an image acquisition apparatus associated with a client in a Twain client environment includes the step of receiving an image acquisition event from a client via a network. The method further includes the step of providing the received event to an application program which is associated with the event. The method further includes the steps of receiving the response to the transmitted event from the application program and then transmitting the received response to the client via the network.","In an embodiment, a method for controlling image acquisition devices communicating with a client includes the step of receiving a command from a server directed to an image acquisition device communicating with a client. The method also includes the steps of issuing a TWAIN API call based on the received command to the image-acquisition device communicating with the client and receiving, from the image-acquisition device, a response to the issued command. The method also transmits to the server the received response.","The illustrative embodiment of the present invention allows a user session to support multiple Twain-compliant devices communicating with a client system and\/or multiple Twain applications executing in the user session. By hooking Twain function calls from the Twain applications executing in the user session, the function calls may be redirected using a presentation level protocol to a proxy application on the client system for handling. The proxy application is created on the client system and corresponds to each application executing in the user session on the server. Messages on the client system  are filtered so as to transmit only essential communications to the server.",{"@attributes":{"id":"p-0020","num":"0019"},"figref":["FIG. 2A","FIG. 2B"],"b":["20","30","40","20","22","24","26","28","26","28","32","42","44","40","50","60","40","26","28","24","20","20","40"]},{"@attributes":{"id":"p-0021","num":"0020"},"figref":["FIG. 2B","FIG. 2A"],"b":["20","24","24","26","28","70","72","70","72","70","72","26","28","40","70","72","70","72","76","74","74"],"sub":"\u2014"},"The Twain multiplexor  is a server-side virtual channel module that runs in the session manager  and is used to manage Twain communications between the client and the server. The Twain multiplexor  receives payloads from the redirector module  and  associated with the Twain application executing in the session . The Twain multiplexor  splits the payloads into a sequence of smaller packets in compliance with size limitations for the virtual channel . The packets are then written to the virtual channel for transition to the client system. The Twain multiplexor  passes requests down to the client system  and returns responses received from the client. The Twain multiplexor  is not aware of whether the requests and responses match up and does not wait for responses. Accordingly, it may receive and forward several requests from different Twain applications  and  before it receives any responses. The Twain multiplexor  also assembles incoming packets into payloads which are then routed to the appropriate redirector module  and .","The virtual channel  transports the packets over the network  to the client system . The packets are sent to the virtual channel  in a strictly ordered sequence. A Twain demultiplexor (demux)  receives the packets on the client system over the virtual channel . The Twain demultiplexor  is a client-side virtual channel driver that plugs into the presentation level protocol supporting architecture  on the client system (e.g.: the demux plugs into the ICA client). The Twain demultiplexor  receives Twain requests as a strictly ordered sequence of packets. It assembles the incoming packets into payloads. Error checking may be performed during receipt of the incoming packets. When a payload is completely received the Twain demultiplexor  forwards the payload to a proxy application  and . The correct proxy application  and  is identified by examining a field in the payload. The Twain demux  on the client system maintains a listing of registered proxy applications  and . If the proxy application  and  is a new proxy application and therefore not registered, the Twain demux  creates the proxy application.","The proxy applications  and  are hosted by a container process  and  on the client system  and correspond to Twain applications  and  on the server. The proxy applications  and  process the commands received from the Twain demultiplexor  and originated by the Twain applications  and  after registering with the Twain demultiplexor. The proxy applications  and  make an API call to the DSM  and  in order to control the vendor-specific drivers  and  for the scanners  and  that are communicating with the client system . Because the proxy application  and  executes as a container process, it provides the context in which to run dynamic linked libraries without corresponding security issues. The proxy applications also receive messages generated by the data source  and .","When the data source UI  and  is enabled (e.g.: the scanning dialog box), the proxy application  and  simulates the original Twain application by processing every message that is received. For example, in a WINDOWS environment, the proxy application would invoke the MSG_PROCESSEVENT command for every WINDOWS message that is received, such as a message indicating that a button had been pressed on an image acquisition device. If the message is not owned by TWAIN, the application for which the message is intended processes the message normally. However, if the message is a TWAIN notification, a notification payload is sent to the Twain demux  from where it is forwarded to a redirector module  and  on the server  and then onto the Twain application  and . The Twain application  and  may then issue a new command in response to the notification, in which case the Twain command is transmitted to the client system.","The initial screening of messages on the client side lessens network traffic as only messages that may be Twain notifications are forwarded over the virtual channel. Network traffic may also be lessened by the compression of bitmaps into JPGs prior to transmission. Image data acquired by the image acquisition device communicating with the client system  may be compressed based on pre-determined rules prior to transmission to the server . For example, image data that has a ratio of 1 bit per pixel location may be sent without compression while image data that has two or more bits per pixel location may be compressed prior to transmission. Similarly, the image data may be compressed with more than one compression algorithm with the output of the algorithm that is smallest in size being transmitted to the server. Compression is done in the proxy application  and  and decompression is done in the Twain Redirector module  and .","Those skilled in the art will recognize that the components in the server  and client system  that are used to create a session on the server which the user can access via the client system will vary depending upon the architecture deployed. Exemplary presentation level supporting architectures include the Independent Computing Architecture (ICA) from Citrix Systems Inc. of Fort Lauderdale, Fla., the Remote Desktop Protocol (RDP) from Microsoft Corporation of Redmond, Wash. and the X-Window Protocol from the X-Open Consortium. In the ICA architecture for example, the client-side Presentation Level Protocol Supporting Architecture  is an ICA client, and the server  deploys a METAFRAME PRESENTATION SERVER to create and maintain the server-hosted user sessions. Similar components from the RDP architecture, X-Open architecture or other presentation level protocol supporting architecture may also be deployed within the scope of the present invention.","In many embodiments, the client system  and server  are provided as personal computer or computer servers, of the sort manufactured by the Hewlett-Packard Corporation of Palo Alto, Calif. or the Dell Corporation of Round Rock, Tex.  depict block diagrams of a typical computer  useful as the client system  and server . As shown in , each computer  includes a central processing unit , and a main memory unit . Each computer  may also include other optional elements, such as one or more input\/output devices -(generally referred to using reference numeral ), and a cache memory  in communication with the central processing unit .","The central processing unit  is any logic circuitry that responds to and processes instructions fetched from the main memory unit . In many embodiments, the central processing unit is provided by a microprocessor unit, such as: the 8088, the 80286, the 80386, the 80486, the Pentium, Pentium Pro, the Pentium II, the Celeron, or the Xeon processor, all of which are manufactured by Intel Corporation of Mountain View, Calif.; the 68000, the 68010, the 68020, the 68030, the 68040, the PowerPC 601, the PowerPC604, the PowerPC604e, the MPC603e, the MPC603ei, the MPC603ev, the MPC603r, the MPC603p, the MPC740, the MPC745, the MPC750, the MPC755, the MPC7400, the MPC7410, the MPC7441, the MPC7445, the MPC7447, the MPC7450, the MPC7451, the MPC7455, the MPC7457 processor, all of which are manufactured by Motorola Corporation of Schaumburg, Ill.; the Crusoe TM5800, the Crusoe TM5600, the Crusoe TM5500, the Crusoe TM5400, the Efficeon TM8600, the Efficeon TM8300, or the Efficeon TM8620 processor, manufactured by Transmeta Corporation of Santa Clara, Calif.; the RS\/6000 processor, the RS64, the RS 64 II, the P2SC, the POWER3, the RS64 III, the POWER3-II, the RS 64 IV, the POWER4, the POWER4+, the POWER5, or the POWER6 processor, all of which are manufactured by International Business Machines of White Plains, N.Y.; or the AMD Opteron, the AMD Athalon 64 FX, the AMD Athalon, or the AMD Duron processor, manufactured by Advanced Micro Devices of Sunnyvale, Calif.","Main memory unit  may be one or more memory chips capable of storing data and allowing any storage location to be directly accessed by the microprocessor , such as Static random access memory (SRAM), Burst SRAM or SynchBurst SRAM (BSRAM), Dynamic random access memory (DRAM), Fast Page Mode DRAM (FPM DRAM), Enhanced DRAM (EDRAM), Extended Data Output RAM (EDO RAM), Extended Data Output DRAM (EDO DRAM), Burst Extended Data Output DRAM (BEDO DRAM), Enhanced DRAM (EDRAM), synchronous DRAM (SDRAM), JEDEC SRAM, PC  SDRAM, Double Data Rate SDRAM (DDR SDRAM), Enhanced SDRAM (ESDRAM), SyncLink DRAM (SLDRAM), Direct Rambus DRAM (DRDRAM), or Ferroelectric RAM (FRAM).","In the embodiment shown in , the processor  communicates with main memory  via a system bus  (described in more detail below).  depicts an embodiment of a computer system  in which the processor communicates directly with main memory  via a memory port. For example, in  the main memory  may be DRDRAM.",{"@attributes":{"id":"p-0032","num":"0031"},"figref":"FIGS. 3A and 3B","b":["202","240","202","240","220","240","204"]},"In the embodiment shown in , the processor  communicates with various I\/O devices  via a local system bus . Various buses may be used to connect the central processing unit  to the I\/O devices , including a VESA VL bus, an ISA bus, an EISA bus, a MicroChannel Architecture (MCA) bus, a PCI bus, a PCI-X bus, a PCI-Express bus, or a NuBus. For embodiments in which the I\/O device is a video display, the processor  may use an Advanced Graphics Port (AGP) to communicate with the display.  depicts an embodiment of a computer system  in which the main processor  communicates directly with I\/O device via HyperTransport, Rapid I\/O, or InfiniBand.  also depicts an embodiment in which local busses and direct communication are mixed: the processor  communicates with I\/O device using a local interconnect bus while communicating with I\/O device directly.","A wide variety of I\/O devices  may be present in the computer system . Input devices include keyboards, mice, trackpads, trackballs, microphones, and drawing tablets. Output devices include video displays, speakers, inkjet printers, laser printers, and dye-sublimation printers. An I\/O device may also provide mass storage for the computer system  such as a hard disk drive, a floppy disk drive for receiving floppy disks such as 3.5-inch, 5.25-inch disks or ZIP disks, a CD-ROM drive, a CD-R\/RW drive, a DVD-ROM drive, tape drives of various formats, and USB storage devices such as the USB Flash Drive line of devices manufactured by Twintech Industry, Inc. of Los Alamitos, Calif.","In further embodiments, an I\/O device  may be a bridge between the system bus  and an external communication bus, such as a USB bus, an Apple Desktop Bus, an RS-232 serial connection, a SCSI bus, a FireWire bus, a FireWire 800 bus, an Ethernet bus, an AppleTalk bus, a Gigabit Ethernet bus, an Asynchronous Transfer Mode bus, a HIPPI bus, a Super HIPPI bus, a SerialPlus bus, a SCI\/LAMP bus, a FibreChannel bus, or a Serial Attached small computer system interface bus.","General-purpose desktop computers of the sort depicted in  typically operate under the control of operating systems, which control scheduling of tasks and access to system resources. Typical operating systems include: MICROSOFT WINDOWS, manufactured by Microsoft Corp. of Redmond, Wash.; MacOS, manufactured by Apple Computer of Cupertino, Calif.; OS\/2, manufactured by International Business Machines of Armonk, N.Y.; and Linux, a freely-available operating system distributed by Caldera Corp. of Salt Lake City, Utah, among others.","For embodiments in which the device in communication with the client system  is a mobile device, the client device may be a JAVA-enabled cellular telephone, such as the i50sx, i55sr, i58sr, i85s, i88s, i90c, i95cl, or the im11000, all of which are manufactured by Motorola Corp. of Schaumburg, Ill., the 6035 or the 7135, manufactured by Kyocera of Kyoto, Japan, or the i300 or i330, manufactured by Samsung Electronics Co., Ltd., of Seoul, Korea. In other embodiments in which the device  in communication with the client system is mobile, it may be a personal digital assistant (PDA) operating under control of the PalmOS operating system, such as the Tungsten W, the VII, the VIIx, the i705, all of which are manufactured by palmOne, Inc. of Milpitas, California. In further embodiments, the device  in communication with the client system  may be a personal digital assistant (PDA) operating under control of the PocketPC operating system, such as the iPAQ 4155, iPAQ 5555, iPAQ 1945, iPAQ 2215, and iPAQ 4255, all of which manufactured by Hewlett-Packard Corporation of Palo Alto, Calif., the ViewSonic V36, manufactured by ViewSonic of Walnut, California, or the Toshiba PocketPC e405, manufactured by Toshiba America, Inc. of New York, N.Y. In still other embodiments the device in communication with the client system  is a combination PDA\/telephone device such as the Treo 180, Treo 270 or Treo 600, all of which are manufactured by palmOne, Inc. of Milpitas, Calif. In still a further embodiment, the device in communication with the client system  is a cellular telephone that operates under control of the PocketPC operating system, such as the MPx200, manufactured by Motorola Corp.",{"@attributes":{"id":"p-0038","num":"0037"},"figref":"FIG. 4A","b":["40","400","402","404","406"]},"The illustrative embodiment of the present invention also provides security for a client system. Commands sent from the Twain application in the user session to the image acquisition device may be required to receive an affirmative user response prior to execution. For example, the situation where commands are being sent to an image acquisition device tethered to a client system which is not displaying a UI can be dealt with by requiring a pop-up dialog to indicate at the client system that a command is being sent to the image acquisition device. The configuration of the redirector module so that the actual command is sent only following an affirmative response from a user at the client system prevents \u201cstealth\u201d operation of the image acquisition device by the application executing in the session.","Although the above sequence of steps focuses on the receipt of a single command from a single server, those skilled in the art will recognize that alternative sequences of steps may occur within the scope of the present invention. For example, a second command may also be received from a second server using a presentation level protocol that is directed to the image acquisition device associated with the client. Alternatively, the server may issue a second command directed to a second image acquisition device associated with the client. Similarly, a second image acquisition device associated with the client system may receive a command from a second server using the presentation level protocol.",{"@attributes":{"id":"p-0041","num":"0040"},"figref":"FIG. 4B","b":["420","26","28","20","422","424"]},"It should also be noted that although many of the embodiments of the present invention discussed herein have been discussed with reference to a Twain application executing within a user session with the rest of the Twain framework residing on the client system, other implementations are also possible. For example, the Twain application may be executing on a server but not in a user session with the remainder of the Twain framework (the DSM and DS) operating on a client system. Communications between the two may be carried out without the use of a presentation level protocol. Similarly, although the description contained herein has discussed remoting the DSM and DS portions of the Twain framework to the client system while hosting the Twain application in a user-session on the server, other implementations are possible within the scope of the present invention. For example, the DSM could also be located at the server while the DS was remoted to the client system. In such a case, the calls to the DS from the DSM would be intercepted at the server and sent to the client system.","In addition to the previously depicted client-server architecture, the illustrative embodiments of the present invention allow for a \u201cpass-through\u201d architecture where the image acquisition device in communication with the client system is a client or thin client accessing a proxy client on a server over a network. For example  depicts a WinCE enabled PDA  hosting a Twain imaging device accessing a proxy client  executing on a server . The proxy client  may be an ICA client which establishes a control virtual channel  and communication virtual  with server . Server  includes a session  with an instance of application  executing within the session. The WinCE PDA  may be mapped into the second server  consistent with the mechanisms outlined above.","Similarly,  shows an alternative architecture where both the proxy client and user session are supported by the same server. In , an image acquisition device  is in communication with a client device . The client device  is in communication with server . Server  includes both a proxy client  and user session . User session  includes an instance of executing application . The image acquisition device  may be mapped into the user session  on server  via the proxy client . Those skilled in the art will recognize that additional implementations and alternative architectures are also possible within the scope of the present invention.","The present invention may be provided as one or more computer-readable programs embodied on or in one or more articles of manufacture. The article of manufacture may be a floppy disk, a hard disk, a compact disc, a digital versatile disc, a flash memory card, a PROM, a RAM, a ROM, or a magnetic tape. In general, the computer-readable programs may be implemented in any programming language. Some examples of languages that can be used include C, C++, C#, or JAVA. The software programs may be stored on or in one or more articles of manufacture as object code.","While the invention has been shown and described with reference to specific preferred embodiments, it should be understood by those skilled in the art that various changes in form and detail may be made therein without departing from the spirit and scope of the invention as defined by the following claims."],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"BRIEF DESCRIPTION OF THE DRAWINGS","p":["These and other aspects of this invention will be readily apparent from the detailed description below and the appended drawings, which are meant to illustrate and not to limit the invention, and in which:",{"@attributes":{"id":"p-0011","num":"0010"},"figref":"FIG. 1"},{"@attributes":{"id":"p-0012","num":"0011"},"figref":"FIG. 2A"},{"@attributes":{"id":"p-0013","num":"0012"},"figref":["FIG. 2B","FIG. 2A"]},{"@attributes":{"id":"p-0014","num":"0013"},"figref":["FIG. 3A","FIG. 3B"]},{"@attributes":{"id":"p-0015","num":"0014"},"figref":"FIG. 4A"},{"@attributes":{"id":"p-0016","num":"0015"},"figref":"FIG. 4B"},{"@attributes":{"id":"p-0017","num":"0016"},"figref":"FIG. 5A"},{"@attributes":{"id":"p-0018","num":"0017"},"figref":"FIG. 5B"}]},"DETDESC":[{},{}]}
