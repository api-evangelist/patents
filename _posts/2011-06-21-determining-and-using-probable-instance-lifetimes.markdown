---
title: Determining and using probable instance lifetimes
abstract: In certain embodiments, a computer-implemented method includes accessing a request to instantiate a virtual machine from a user, accessing virtual machine lifetime data, and determining, based at least in part on the virtual machine lifetime data, a probable lifetime for the virtual machine. The virtual machine lifetime data includes actual lifetime data for a prior virtual machine that was previously instantiated. The actual lifetime data indicates an amount of time that the prior virtual machine was operational.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08881142&OS=08881142&RS=08881142
owner: Amazon Technologies, Inc.
number: 08881142
owner_city: Reno
owner_country: US
publication_date: 20110621
---

{"@attributes":{"id":"description"},"BRFSUM":[{},{}],"heading":["BACKGROUND","DESCRIPTION OF EXAMPLE EMBODIMENTS"],"p":["Entities that provide computing resources over a communication network may allow a client to use, possibly for a fee, a certain amount of computing capacity on a computer system remote from a computing environment of the client. For example, a client may submit a request to create and operate a virtual machine running on a host server of the provisioned computing environment provider. Host computing systems on which to instantiate instances of computing capacity are typically chosen at random.","Provisioned computing environment providers often provide their users with the ability to instantiate and operate a virtual machine on a host computer system. For example, a user may request to instantiate and operate a virtual machine that consumes all physical computing resources of a host computer system. In another example, a user may request to instantiate and operate a virtual machine that consumes less than all of the physical computing resources of a host computer system. In situations where less than all of the physical computing resources of a host computer system are consumed by a single virtual machine, the host computer system may host multiple virtual machines that run simultaneously on the host computer system.","In some scenarios, a host computer system may need to be taken offline. For example, a host computer may need to be repaired, may need software or firmware updates, or may need a hardware upgrade (e.g., increased memory capacity, etc.). In order to take a host computer system offline, however, the provisioned computing environment provider typically must wait for all virtual machines that are currently running on the host computer system to be terminated or migrated to another host. This typically involves waiting for the users who requested the running virtual machines to terminate the virtual machines. This is undesirable because the lifetime of virtual machines are typically unknown and thus the provisioned computing environment provider does not know when all virtual machines will be terminated. In addition, the provisioned computing environment provider also typically ceases to instantiate any new virtual machines on a host computer system that is to be taken offline. This is undesirable because any unused computing capacity on a host system that is to be taken offline may remain unused while the provisioned computing environment provider waits for all running virtual machines to be terminated.","Certain embodiments of the present disclosure provide techniques for determining probable lifetimes of virtual machines that are to be instantiated on host computer systems. In certain embodiments, a probable lifetime of a requested virtual machine may be determined using various techniques, examples of which are described herein, and then utilized to determine a particular host computing system on which to instantiate the requested virtual machine.  below illustrate systems and methods for determining probable virtual machine lifetimes and for determining a particular host computing system on which to instantiate virtual machines according to certain embodiments of the present disclosure.",{"@attributes":{"id":"p-0011","num":"0010"},"figref":"FIG. 1","b":["100","100","102","104","104","106","108","110","106","108","110","104","112","102","104","112","114","100","100"],"i":["a ","b","b ","a "]},"In general, provisioned computing resources environment  (including, for example, one or more of server system , storage unit , and hosts ) provides a collection of remote computing services offered over a network (which may or may not be network ). Those computing services may include any suitable combination of, for example, storage, compute processing, networking, applications, power, or any other suitable computing resources that may be made available over a network. In certain embodiments, entities accessing those computing services may gain access to a suite of elastic information technology (IT) infrastructure services (e.g., computing resources on hosts ) as the entity requests those services. Provisioned computing resources environment  may provide a scalable, reliable, and secure distributed computing infrastructure.","To gain access to computing resources on hosts , a user such as an individual, a business, or an organization may utilize user system  to transmit a request  to provisioned computing resources environment . In general, request  indicates a desired configuration for a particular virtual machine to be instantiated on hosts . As an example, request  may indicate, among other things, an instance of a particular virtual machine  to be instantiated on hosts . After request  is transmitted by user system , provisioned computing resources environment  (e.g., server system  or a host ) may access request , virtual machine lifetime data  (described below), and\/or host status data  (described below) stored in storage unit  and determine a probable virtual machine lifetime for a virtual machine  that satisfies request . In some embodiments, provisioned computing resources environment  may additionally determine an appropriate host  on which to instantiate a virtual machine  associated with request . Virtual machine lifetime data  is described in more detail below. In particular, example embodiments of virtual machine lifetime data  are described below with reference to , and embodiments of determining probable virtual machine lifetimes and choosing a particular host on which to instantiate requested virtual machines are described below with reference to .","User system  may include one or more computer systems at one or more locations. Each computer system may include any appropriate input devices, output devices, mass storage media, processors, memory, or other suitable components for receiving, processing, storing, and communicating data. For example, each computer system may include a personal computer, workstation, network computer, kiosk, wireless data port, personal data assistant (PDA), one or more Internet Protocol (IP) telephones, smart phones, table computers, one or more servers, a server pool, one or more processors within these or other devices, or any other suitable processing device. User system  may be a stand-alone computer or may be a part of a larger network of computers associated with an entity. Any entity may interact with user system  in order to gain access to computing resources on hosts . The term \u201centity\u201d used herein includes, but is not limited to, any user, organization, business, corporation, firm, government entity, educational entity, computer system, and the like. Users of user system  may include any type of user, including users who pay a fee and users who use the computing resources of provisioned computing environment providers for free.","Networks and facilitate wireless or wireline communication. Networks and may communicate, for example, IP packets, Frame Relay frames, Asynchronous Transfer Mode (ATM) cells, voice, video, data, and other suitable information between network addresses. Networks and may include one or more personal area networks (PANs), local area networks (LANs), a wireless LAN (WLAN), a virtual private network (VPN), radio access networks (RANs), metropolitan area networks (MANs), wide area networks (WANs), mobile networks (e.g., using WiMax (802.16), WiFi (802.11), 3G, or any other suitable wireless technologies in any suitable combination), all or a portion of the global computer network known as the Internet, an extranet, a satellite network, and\/or any other communication system or systems at one or more locations, any of which may be any suitable combination of wireless and wireline. Networks and may be combined, in whole or in part, or may be distinct, according to particular needs.","Server system  may include one or more computer systems  at one or more locations. Each computer system may include any appropriate input devices, output devices, mass storage media, processors, memory, or other suitable components for receiving, processing, storing, and communicating data. For example, each computer system may include a personal computer, workstation, network computer, kiosk, wireless data port, PDA, one or more IP telephones, one or more servers, a server pool, one or more processors within these or other devices, or any other suitable processing device. Server system  may be a stand-alone computer or may be a part of a larger network of computers associated with an entity.","Each computer system  of server system  may include processing unit  and memory unit . Processing unit  may include one or more microprocessors, controllers, or any other suitable computing devices or resources. Processing unit  may work, either alone or with other components of system , to provide a portion or all of the functionality of system  described herein. Memory unit  may take the form of volatile or non-volatile memory including, without limitation, magnetic media, optical media, RAM, ROM, removable media, or any other suitable memory component.","Server system  may facilitate making computing resources on hosts  available over a network (which may or may not be network ) and may manage the provision of computing resources on hosts  to other computing systems over the network. For example, server system  may control access to and rationing of computing resources on hosts  to other computing systems over a network.","Server system  may be operable to access or otherwise communicate with a storage unit . In some embodiments, for example, server system  communicates with storage unit  over network . Storage unit  may take the form of volatile or non-volatile memory including, without limitation, magnetic media, optical media, RAM, ROM, removable media, or any other suitable memory component. In certain embodiments, a database, such as one or more SQL servers, relational databases, or any other appropriate data structure, may be stored on storage unit . Storage unit  may be a part of or distinct from memory unit  of server system .","Storage unit  may store a variety of information and applications that may be used by server system , hosts , or other suitable components of system . In the illustrated example, storage unit  may store logic , virtual machine lifetime data , host status data , and requests , each of which are described in greater detail below. Although storage unit  is described as including this particular information and applications, storage unit  may store any other suitable information and applications. Furthermore, although these particular information and applications are described as being stored in storage unit , the present description contemplates storing this particular information and applications in any suitable location, according to particular needs.","Hosts  may include any suitable computing resources that may be made available over a network (which may or may not be network ). Hosts  may be communicatively coupled to network and may include any suitable combination of hardware, firmware, and software. As just a few examples, hosts  may include any suitable combination of applications, power, processors, storage, and any other suitable computing resources that may be made available over a network. Hosts  may each be substantially similar to one another or may be heterogeneous. As described above, entities accessing computing services provided by provisioned computing resources environment  may gain access to a suite of elastic IT infrastructure services (e.g., computing resources on hosts ) as the entity requests those services. Provisioned computing resources environment  may provide a scalable, reliable, and secure distributed computing infrastructure. Herein \u201cavailable\u201d computer resources include computer resources that are currently available to be provisioned, computer resources that are currently in use but may become available for provisioning in the future, or computer resources that may be added to a pool of available computer resources and become available for provisioning in the future.","In some embodiments, each host  may include a hypervisor program (not illustrated) that effectuates one or more virtual machines  on host . In some embodiments, each virtual machine  includes an operating system called a guest operating system. The hypervisor of host  may control how the guest operating system running on a virtual machine  interacts with the hardware of host  by virtualizing hardware interfaces. For example, when a program (e.g., the guest operating system) attempts to access a memory location mapped to a register of a device (e.g., network interface card, graphics card, etc.) or a memory mapped device, the hypervisor may intercept the access and pass the values that the program attempted to write to an associated emulator. The emulator may determine how the hardware device would respond to the access and the hypervisor takes an equivalent action on behalf of virtual machine . The hypervisor also may expose physical processors as virtual processors to virtual machine . The virtual processors may be mapped to physical processors of host  such that when a guest operating system schedules a thread on a virtual processor, the hypervisor schedules it on a physical processor of host . These example implementations of VMs  are provided for example purposes only.","In the illustrated example, each host  comprises a processing unit  and a memory unit . Processing unit  may include one or more microprocessors, controllers, or any other suitable computing devices or resources. Processing unit  may work, either alone or with other components of system , to provide a portion or all of the functionality of system  described herein. Memory unit  may take the form of volatile or non-volatile memory including, without limitation, magnetic media, optical media, RAM, ROM, removable media, or any other suitable memory component. In certain embodiments, a portion or all of memory unit  may include a database, such as one or more structured query language (SQL) servers or relational databases.","In certain embodiments, memory unit  may be internal or external to processing unit  and may include one or more instruction caches or one or more data caches. Instructions in the instruction caches may be copies of instructions in memory unit  or storage unit , and the instruction caches may speed up retrieval of those instructions by processing unit . Data in the data caches may include any suitable combination of copies of data in memory unit  or storage unit  for instructions executing at processing unit  to operate on; the results of previous instructions executed at processing unit  for access by subsequent instructions executing at processing unit , or for writing to memory unit  or storage unit ; and other suitable data. The data caches may speed up read or write operations by processing unit .","Logic  may comprise any suitable combination of hardware, firmware, and software. Logic  may handle any function or method described herein including analyzing requests , determining a probable virtual machine lifetime for a requested virtual machine, and determining a particular host  on which to instantiate the requested virtual machine. In certain embodiments, logic  may be a part of a larger application for monitoring or otherwise managing the provision of hosts  over a network.","Request  may include any indication from user system  for a virtual machine. In some embodiments, request  may indicate a configuration or type of a physical machine. In other embodiments, request  may indicate a configuration or type of a particular virtual machine  to be instantiated on a host . For example, request  may indicate that a virtual machine  is to be instantiated that runs a particular operating system and one or more particular applications, such as a web server. As another example, request  may indicate that a virtual machine  is to be instantiated that has a particular computing and\/or memory capacity. In some embodiments, request  may additionally include an indication from user system  of an expected lifetime for the requested virtual machine. For example, a user may indicate in request  that the requested virtual machine will be used for one week. While some embodiments of request  may include an expected lifetime of the requested virtual machine, other embodiments may allow a user to omit providing such information in request .","Virtual machine lifetime data  may include historical data regarding prior instantiations of virtual machines. In some embodiments, virtual machine lifetime data  may be grouped into records according to entities such as users. For example,  illustrates an embodiment of virtual machine lifetime data  for a particular entity who has requested instantiations of virtual machines in the past. In the particular illustrated embodiment of , virtual machine lifetime data  includes entries -, a type , an expected lifetime , an actual lifetime , and a date instantiated . Type  is an indication or a label of a particular configuration of the prior virtual machine (e.g., a particular purpose for the prior virtual machine, a particular application the prior virtual machine was used for, an indication of the processing power of the prior virtual machine, a memory configuration of the prior virtual machine, and the like). Expected lifetime  is a recording of an indication that was included in request  of how long the user expected the requested virtual machine to be operational. In some embodiments, expected lifetimes  may be recorded in virtual machine lifetime data  at any point after a request  is received and the requested virtual machine is instantiated on a host . Actual lifetime  is an indication of how long a virtual machine was actually operational on host  before it was terminated. In some embodiments, actual lifetime  may be recorded in virtual machine lifetime data  at any point after a virtual machine is terminated from running on a host . Date instantiated  is a date and\/or time that the virtual machine of entry  was instantiated on host .","Each entry  includes information about a prior virtual machine that was instantiated on a host . As an example, entry indicates that a prior virtual machine having a type of \u201cweb server\u201d was instantiated on Feb. 12, 2008 (as indicated by date instantiated ). Entry also indicates that the prior virtual machine of entry had an expected lifetime of seven days, but had an actual lifetime of sixty-four days, twelve hours, and fifty-two minutes. As another example, entry indicates that a prior virtual machine having a type of \u201cmax memory\u201d was instantiated on Apr. 10, 2010 (as indicated by date instantiated ). Entry also indicates that the prior virtual machine of entry did not have an expected lifetime in request  (e.g., the user chose not to indicate an expected lifetime in request ) and had an actual lifetime of 366 days, four hours, and two minutes. While virtual machine lifetime data  in  illustrates expected lifetimes  and actual lifetimes  in a particular format, the disclosure anticipates expected lifetimes  and actual lifetimes  in any suitable data format.","Turning back to , host status data  may include any data regarding hosts , including, but not limited to, virtual machines  that are currently running (i.e., operational) on hosts . For example, host status data  may indicate for each host  every virtual machine  that is currently running on the host . In certain embodiments, host status data  may include an amount of time each virtual machine  has been running and\/or a date in which each current virtual machine  was instantiated on a host . In certain embodiments, host status data  may include an expected lifetime for each virtual machine  currently running on a host . In some embodiments, host status data  may indicate a current state of each host . For example, host status data  may indicate whether each host  is currently in a state in which no new virtual machines  may be instantiated on the host . For example, a particular host  may need to be taken offline, as described above, and thus an appropriate state to indicate this condition may be recorded in host status data  for the particular host . In some embodiments, a particular host  or server system  may determine that the particular host  is in a state in which no new virtual machines  should be instantiated on the particular host  based on a determination of how much RAM the particular host  has allocated to virtual machines , how much of the available processor cycles are used to run virtual machines  over a given time period (e.g., five minutes), and\/or how much network traffic the particular host  must handle on behalf of virtual machines .","In operation of an example embodiment of system , server system  may receive via network a request  from user system  for a virtual machine. In some embodiments, for example, request  may be for a particular type of virtual machine  to be instantiated on hosts . Provisioned computing resources environment  may access request  and determine that a particular user is requesting the instantiation of a particular type of virtual machine on hosts . In some embodiments, computing resources environment  may determine from request  whether the user has indicated an expected lifetime for the requested virtual machine.","In some embodiments, computing resources environment  may access virtual machine lifetime data  in order to determine a probable lifetime for the requested virtual machine of request . In certain embodiments, computing resources environment  may access virtual machine lifetime data  associated with the user who submitted request . As an illustration, assume virtual machine lifetime data  of  is associated with a particular user who submitted request . As indicated by entries -, six virtual machines were instantiated for the particular user in the past. As described in more detail below, the information in virtual machine lifetime data  may be used in various ways by computing resources environment  to determine a probable lifetime for the requested virtual machine of request .","In certain embodiments, an average of actual lifetimes  of virtual machine lifetime data  may be used by computing resources environment  to determine a probable lifetime for a requested virtual machine. As one example, certain embodiments may average all of actual lifetimes  for a particular user in order to determine a probable lifetime for a requested virtual machine. In the illustrated embodiment of , an average of actual lifetimes -may be calculated by simply adding lifetimes -together and dividing by six. This would result in an average actual lifetime which may then be used as the determined probable lifetime for the requested virtual machine.","In some embodiments, a weighted average of actual lifetimes  may be determined and used by computing resources environment  for the probable lifetime of a requested virtual machine. As one example, computing resources environment  may place more weight on more recent entries  of virtual machine lifetime data . In the illustrated embodiment, for instance, computing resources environment  may place the most weight on entry since date instantiated indicates it is the most recent virtual machine, and the least weight on entry since date instantiated indicates it is the oldest virtual machine. That is, certain embodiments may rank entries  by their respective date instantiated  (e.g., from most recent to oldest) and then weight actual lifetimes  accordingly. Once entries  have been ranked and actual lifetimes  have been weighted, a weighted average of actual lifetimes  may be calculated and used as the determined probable lifetime for the requested virtual machine.","In certain embodiments, computing resources environment  may determine a probable virtual machine lifetime based on the type of instance. For example, as discussed above, request  may indicate a particular type of virtual machine that is to be instantiated on hosts . Example types include a particular application for the requested instance (e.g., a web server), a particular operating system (e.g., LINUX, WINDOWS, etc.), a particular processing or memory capacity, and the like. Computing resources environment  may determine from request  the type of virtual machine being requested and compare the determined type to types  of virtual machine lifetime data . As an illustration, if it is determined from request  that a virtual machine of type \u201cweb server\u201d is being requested by a particular user, computing resources environment  may analyze virtual machine lifetime data  to determine if any entries  include a type  of \u201cweb server.\u201d In the illustrated embodiment, for example, computing resources environment  may determine that entries , , and have types  of \u201cweb server\u201d and therefore are more reliable to use to determine a probable lifetime for the requested virtual machine. Once particular entries  are selected based on comparing their respective type  to the type of virtual machine in request , actual lifetimes  of the selected entries  may be used to calculate a probable lifetime for the requested virtual machine. As discussed above, for example, a simple average or a weighted average of actual lifetimes  of the selected entries  may be used to calculate a probable lifetime for the requested virtual machine.","In some embodiments, as discussed above, request  may include an indication of an expected lifetime for the requested virtual machine. In some embodiments, the indication of an expected lifetime for the requested virtual machine in request  may be additionally\/alternatively used by computing resources environment  for the probable lifetime of a requested virtual machine. For example, certain embodiments may merely use the indicated expected lifetime in request  for the probable virtual machine lifetime of the requested virtual machine without further analyzing virtual machine lifetime data . Other embodiments, however, may utilize both virtual machine lifetime data  and the indicated expected lifetime in request  to determine the probable virtual machine lifetime of the requested virtual machine. For example, certain embodiments may utilize virtual machine lifetime data  to determine the accuracy of the indicated expected lifetime in request  before using the indicated expected lifetime in request  for the probable virtual machine lifetime.","To illustrate this, consider a request  having an indication of an expected lifetime of \u201c31 days\u201d for a requested virtual machine of type \u201cmax processing.\u201d Computing resources environment  may analyze virtual machine lifetime data  and determine that there were two prior instantiations of \u201cmax processing\u201d virtual machines (i.e., entries and ) and that an expected lifetime of 31 days (i.e., expected lifetimes and ) was previously indicated for each prior instantiation. Computing resources environment  may also compare expected lifetimes  with actual lifetimes  for the two prior instantiations of \u201cmax processing\u201d virtual machines to determine the accuracy of expected lifetimes . In this example, computing resources environment  may determine that the difference between expected lifetime (31 days) and actual lifetime (approximately one day), and the difference between expected lifetime (31 days) and actual lifetime (approximately fourteen days), is greater than a predetermined limit and therefore determine that the indicated expected lifetime in request  is not accurate. Computing resources environment  may therefore determine that the indicated expected lifetime in request  is unreliable and thus decide to not utilize the indicated expected lifetime in request  to determine the probable lifetime of the requested virtual machine. If, however, the difference between an expected lifetime  and an actual lifetime  for an appropriate entry  is less than a predetermined limit, computing resources environment  may determine that an indicated expected lifetime in request  is accurate and therefore may be used for the probable lifetime of the requested virtual machine.","In certain embodiments, a determined probable virtual machine lifetime for a requested virtual machine of request  may be utilized in order to determine an appropriate host  on which to instantiate the requested virtual machine. This offers numerous advantages over prior systems that may randomly instantiate virtual machines on host systems. As one example, a host  having virtual machines with similar current lifetimes to the determined probable virtual machine lifetime may be selected for the instantiation of the requested virtual machine. In another example, a host  that is to be taken offline may be selected to instantiate requested virtual machines having only short-term probable virtual machine lifetimes. These and other example embodiments of selecting a host  on which to instantiate the requested virtual machine based on the determined probable virtual machine lifetime are discussed in more detail below.","In certain embodiments, selecting a particular host  on which to instantiate a requested virtual machine may include choosing a host  that has current virtual machines  with similar current lifetimes to the determined probable virtual machine lifetime. For example, computing resources environment  may access host status data  and determine lifetimes for each running virtual machine  on hosts . Computing resources environment  may then select a host  that has current virtual machines  with similar lifetimes to the determined probable virtual machine lifetime. As one example, if the determined probable virtual machine lifetime is determined to be seven days, a particular host  may be selected that has current virtual machines  having current virtual machine lifetimes of all less than seven days. In some embodiments, computing resources environment  may utilize expected virtual machine lifetimes in host status data  and determine a time when all current virtual machines  on a particular host  are expected to end. Computing resources environment  may then instantiate a requested virtual machine on the particular host that has a probable virtual machine lifetime that will end before or substantially close to the determined time when all current virtual machines  on the particular host  are expected to end. As a result, a provisioned computing environment provider may have more visibility into when the particular host  will be available to be taken offline.","In some embodiments, selecting a particular host  on which to instantiate a requested virtual machine may include analyzing a current state of hosts . For example, computing resources environment  may determine one or more hosts  that have sufficient available processing resources and\/or memory resources to instantiate a virtual machine . As another example, computing resources environment  may access host status data  and determine states of available hosts . As described above, this may include a state where a particular host  is to be taken offline and\/or is in a maintenance state. If host status data  indicates that a particular host  is to be taken offline and\/or is in a maintenance state, computing resources environment  may determine that only virtual machines with relatively short probable lifetimes may be instantiated on the particular host. For example, a predetermined lifetime limit may be configured in computing resources environment  to indicate what is considered a short-term lifetime. If the determined probable virtual machine lifetime is within the predetermined limit, it may be considered a short-term lifetime and therefore the requested virtual machine may be instantiated on the particular host . If, however, the determined probable virtual machine lifetime is not within the predetermined limit, it may be considered a long-term lifetime and therefore the requested virtual machine may be prevented from being instantiated on the particular host . As a result, unused resources of a host  that is to be taken offline may be utilized without further delaying when the host  may be taken offline.","In some embodiments, selecting a particular host  on which to instantiate a requested virtual machine may include identifying that the type of virtual machine being requested in request  is a \u201cspot instance\u201d and selecting an appropriate host  for the requested spot instance. A spot instance may refer to a type of a virtual machine for which price fluctuates based on supply and demand and may be desirable to some users who have more flexibility (e.g., who do not have requirements for when a particular virtual machine is instantiated). For example, a user whose bids exceed a certain price may gain access to the available spot instance until the user is outbid (i.e., the price for the spot instance becomes greater than the user's bid). In some embodiments, computing resources environment  may, in response to identifying that the type of virtual machine being requested in request  is a spot instance, access host status data  and determine a particular host  that is to be taken offline and\/or is in a maintenance state. Computing resources environment  may then instantiate the requested spot instance on the particular host , thereby utilizing resources of a host  that would otherwise go unused. In some embodiments, computing resources environment  may, in response to identifying that the type of virtual machine being requested in request  is a spot instance, access host status data  and determine a particular host  that includes older or otherwise undesirable hardware. Computing resources environment  may then instantiate the requested spot instance on the particular host  having undesirable hardware, thereby utilizing resources of a host  that would otherwise be unwanted.","In some embodiments, selecting a particular host  on which to instantiate a requested virtual machine may include preventing the instantiation of more than one long-term virtual machines on a single host . For example, computing resources environment  may access host status data  and determine lifetimes for each running virtual machine  on hosts . Computing resources environment  may then select a host  that does not have any long-term virtual machines  if the determined probable virtual machine lifetime is determined to be long-term. As described above, the determined probable virtual machine lifetime may be considered a long-term lifetime if it is not within a predetermined limit. As a result, computing resources environment  may ensure that only a single long-term virtual machine  may be instantiated on a single host  at any given time, thereby increasing the odds that the host  is not tied up indefinitely.",{"@attributes":{"id":"p-0042","num":"0041"},"figref":["FIG. 3","FIG. 1"],"b":"300"},"At step , a request from a particular entity for an instantiation of a virtual machine on one of a plurality of host computing systems is accessed. In some embodiments, the accessed request is request  described above and may include a desired configuration or type of a particular virtual machine to be instantiated on hosts . In some embodiments, the accessed request may include an indication of an expected lifetime of the requested virtual machine. In some embodiments, the user selection data is accessed by any appropriate system of a provisioned computing resources environment such as one or more computer systems  of server system  or hosts  described above. In some embodiments, the computing system resources that are available over a communication network refer to computing system resources of hosts  described above.","At step , a probable virtual machine lifetime for the requested virtual machine of step  is determined. The probable virtual machine lifetime for the requested virtual machine may be determined in step  using any technique described above. For example, the probable virtual machine lifetime for the requested virtual machine of step  may be determined using an indication from the accessed request of step  of an expected lifetime of the requested virtual machine, as described above. In some embodiments, the probable virtual machine lifetime for the requested virtual machine of step  is determined based on virtual machine lifetime data such as virtual machine lifetime data . In such embodiments, step  includes accessing virtual machine lifetime data that includes one or more prior virtual machines. In some embodiments, the accessed virtual machine lifetime data of step  is associated with a particular entity. In some embodiments, the accessed virtual machine lifetime data of step  includes an actual lifetime for each of the one or more prior virtual machines, where each actual lifetime indicates an amount of time that an associated prior virtual machine was operational.","In some embodiments, the probable virtual machine lifetime is determined in step  by determining an average or a weighted average of actual lifetimes of one or more prior virtual machines as indicated in the accessed virtual machine lifetime data. Some embodiments may in step  compare actual lifetimes with prior expected lifetimes as indicated in the accessed virtual machine lifetime data and determine, based on the comparison, whether an indication of an expected lifetime is accurate. If it is determined in step  that the indication of an expected lifetime is accurate, it may be used for the probable virtual machine lifetime. If, however, it is determined in step  that the indication of an expected lifetime is not accurate, it may not be used for the probable virtual machine lifetime.","In step , host status data may be accessed. In some embodiments, the accessed host status data of step  may refer to host status data  described above and may indicate one or more virtual machines that are currently operational on each of the plurality of host computing systems. In some embodiments, the accessed host status data of step  may indicate a current lifetime of each of the virtual machines that are currently operational on each of the plurality of host computing systems. In some embodiments, the accessed host status data of step  may indicate a state of each of the plurality of host computing systems. For example, the accessed host status data of step  may indicate whether the plurality of host computing systems are in a maintenance state and\/or are about to be taken offline.","In step , it is determined, based on the determined probable virtual machine lifetime of step  and the accessed host status data of step , a particular one of the host computing systems on which to instantiate the requested virtual machine of step . For example, step  may include choosing a host computing system having current virtual machines with similar current lifetimes to the determined probable virtual machine lifetime of step . In some embodiments, this may be determined from the accessed host status data of step . As another example, step  may include choosing a host computing system currently in a maintenance state if the determined probable virtual machine lifetime of step  is determined to be a short-term lifetime as described above. As yet another example, step  may include choosing a host computing system not having any long-term current lifetimes if it is determined that the determined probable virtual machine lifetime of step  is a long-term lifetime as described above.","In step , the requested virtual machine of step  is instantiated on the determined host computing system of step . After step , method  ends.","In certain embodiments, the above-described method may be performed in response to a user request (e.g., from user system ). In some embodiments, for example, method  may be performed in response to request  from user system  for computing system resources on hosts . In some embodiments, method  may be performed in response to any other appropriate event. For example, some embodiments may perform method  in response to computer system resources on a particular host  becoming available. The disclosure contemplates method  being performed at any appropriate time after receiving request .",{"@attributes":{"id":"p-0050","num":"0049"},"figref":["FIG. 4","FIG. 1"],"b":["400","100","102","106","108","110","400","400","400","400","400"]},"This disclosure contemplates any suitable number of computer systems . This disclosure contemplates computer system  taking any suitable physical form. As example and not by way of limitation, computer system  may be an embedded computer system, a system-on-chip (SOC), a single-board computer system (SBC) (such as, for example, a computer-on-module (COM) or system-on-module (SOM)), a desktop computer system, a laptop or notebook computer system, an interactive kiosk, a mainframe, a mesh of computer systems, a mobile telephone, a personal digital assistant (PDA), a server, or a combination of two or more of these. Where appropriate, computer system  may include one or more computer systems ; be unitary or distributed; span multiple locations; span multiple machines; or reside in a cloud, which may include one or more cloud components in one or more networks. Where appropriate, one or more computer systems  may perform without substantial spatial or temporal limitation one or more steps of one or more methods described or illustrated herein. As an example and not by way of limitation, one or more computer systems  may perform in real time or in batch mode one or more steps of one or more methods described or illustrated herein. One or more computer systems  may perform at different times or at different locations one or more steps of one or more methods described or illustrated herein, where appropriate.","In particular embodiments, computer system  includes a processor , memory , storage , an input\/output (I\/O) interface , a communication interface , and a bus . Although this disclosure describes and illustrates a particular computer system having a particular number of particular components in a particular arrangement, this disclosure contemplates any suitable computer system having any suitable number of any suitable components in any suitable arrangement.","In particular embodiments, processor  includes hardware for executing instructions, such as those making up a computer program. As an example and not by way of limitation, to execute instructions, processor  may retrieve (or fetch) the instructions from an internal register, an internal cache, memory , or storage ; decode and execute them; and then write one or more results to an internal register, an internal cache, memory , or storage . In particular embodiments, processor  may include one or more internal caches for data, instructions, or addresses. The present disclosure contemplates processor  including any suitable number of any suitable internal caches, where appropriate. As an example and not by way of limitation, processor  may include one or more instruction caches, one or more data caches, and one or more translation lookaside buffers (TLBs). Instructions in the instruction caches may be copies of instructions in memory  or storage , and the instruction caches may speed up retrieval of those instructions by processor . Data in the data caches may be copies of data in memory  or storage  for instructions executing at processor  to operate on; the results of previous instructions executed at processor  for access by subsequent instructions executing at processor  or for writing to memory  or storage ; or other suitable data. The data caches may speed up read or write operations by processor . The TLBs may speed up virtual-address translation for processor . In particular embodiments, processor  may include one or more internal registers for data, instructions, or addresses. The present disclosure contemplates processor  including any suitable number of any suitable internal registers, where appropriate. Where appropriate, processor  may include one or more arithmetic logic units (ALUs); be a multi-core processor; or include one or more processors . Although this disclosure describes and illustrates a particular processor, this disclosure contemplates any suitable processor.","In particular embodiments, memory  includes main memory for storing instructions for processor  to execute or data for processor  to operate on. As an example and not by way of limitation, computer system  may load instructions from storage  or another source (such as, for example, another computer system ) to memory . Processor  may then load the instructions from memory  to an internal register or internal cache. To execute the instructions, processor  may retrieve the instructions from the internal register or internal cache and decode them. During or after execution of the instructions, processor  may write one or more results (which may be intermediate or final results) to the internal register or internal cache. Processor  may then write one or more of those results to memory . In particular embodiments, processor  executes only instructions in one or more internal registers or internal caches or in memory  (as opposed to storage  or elsewhere) and operates only on data in one or more internal registers or internal caches or in memory  (as opposed to storage  or elsewhere). One or more memory buses (which may each include an address bus and a data bus) may couple processor  to memory . Bus  may include one or more memory buses, as described below. In particular embodiments, one or more memory management units (MMUs) reside between processor  and memory  and facilitate accesses to memory  requested by processor . In particular embodiments, memory  includes RAM. This RAM may be volatile memory, where appropriate Where appropriate, this RAM may be dynamic RAM (DRAM) or static RAM (SRAM). Moreover, where appropriate, this RAM may be single-ported or multi-ported RAM. The present disclosure contemplates any suitable RAM. Memory  may include one or more memories , where appropriate. Although this disclosure describes and illustrates particular memory, this disclosure contemplates any suitable memory.","In particular embodiments, storage  includes mass storage for data or instructions. As an example and not by way of limitation, storage  may include an HDD, a floppy disk drive, flash memory, an optical disc, a magneto-optical disc, magnetic tape, or a Universal Serial Bus (USB) drive or a combination of two or more of these. Storage  may include removable or non-removable (or fixed) media, where appropriate. Storage  may be internal or external to computer system , where appropriate. In particular embodiments, storage  is non-volatile, solid-state memory. In particular embodiments, storage  includes ROM. Where appropriate, this ROM may be mask-programmed ROM, programmable ROM (PROM), erasable PROM (EPROM), electrically erasable PROM (EEPROM), electrically alterable ROM (EAROM), or flash memory or a combination of two or more of these. This disclosure contemplates mass storage  taking any suitable physical form. Storage  may include one or more storage control units facilitating communication between processor  and storage , where appropriate. Where appropriate, storage  may include one or more storages . Although this disclosure describes and illustrates particular storage, this disclosure contemplates any suitable storage.","In particular embodiments, I\/O interface  includes hardware, software, or both providing one or more interfaces for communication between computer system  and one or more I\/O devices. Computer system  may include one or more of these I\/O devices, where appropriate. One or more of these I\/O devices may enable communication between a person and computer system . As an example and not by way of limitation, an I\/O device may include a keyboard, keypad, microphone, monitor, mouse, printer, scanner, speaker, still camera, stylus, tablet, touch screen, trackball, video camera, another suitable I\/O device or a combination of two or more of these. An I\/O device may include one or more sensors. This disclosure contemplates any suitable I\/O devices and any suitable I\/O interfaces  for them. Where appropriate, I\/O interface  may include one or more device or software drivers enabling processor  to drive one or more of these I\/O devices. I\/O interface  may include one or more I\/O interfaces , where appropriate. Although this disclosure describes and illustrates a particular I\/O interface, this disclosure contemplates any suitable I\/O interface.","In particular embodiments, communication interface  includes hardware, software, or both providing one or more interfaces for communication (such as, for example, packet-based communication) between computer system  and one or more other computer systems  or one or more networks. As an example and not by way of limitation, communication interface  may include a network interface controller (NIC) or network adapter for communicating with an Ethernet or other wire-based network or a wireless NIC (WNIC) or wireless adapter for communicating with a wireless network, such as a WI-FI network. This disclosure contemplates any suitable network and any suitable communication interface  for it. As an example and not by way of limitation, computer system  may communicate with an ad hoc network, a PAN, a LAN, a WAN, a MAN, or one or more portions of the Internet or a combination of two or more of these. One or more portions of one or more of these networks may be wired or wireless. As an example, computer system  may communicate with a wireless PAN (WPAN) (such as, for example, a BLUETOOTH WPAN), a WI-FI network, a WI-MAX network, a cellular telephone network (such as, for example, a Global System for Mobile Communications (GSM) network), or other suitable wireless network or a combination of two or more of these. Computer system  may include any suitable communication interface  for any of these networks, where appropriate. Communication interface  may include one or more communication interfaces , where appropriate. Although this disclosure describes and illustrates a particular communication interface, this disclosure contemplates any suitable communication interface.","In particular embodiments, bus  includes hardware, software, or both coupling components of computer system  to each other. As an example and not by way of limitation, bus  may include an Accelerated Graphics Port (AGP) or other graphics bus, an Enhanced Industry Standard Architecture (EISA) bus, a front-side bus (FSB), a HYPERTRANSPORT (HT) interconnect, an Industry Standard Architecture (ISA) bus, an INFINIBAND interconnect, a low-pin-count (LPC) bus, a memory bus, a Micro Channel Architecture (MCA) bus, a Peripheral Component Interconnect (PCI) bus, a PCI-Express (PCI-X) bus, a serial advanced technology attachment (SATA) bus, a Video Electronics Standards Association local (VLB) bus, or another suitable bus or a combination of two or more of these. Bus  may include one or more buses , where appropriate. Although this disclosure describes and illustrates a particular bus, this disclosure contemplates any suitable bus or interconnect.","Herein, reference to a computer-readable storage medium encompasses one or more non-transitory, tangible computer-readable storage media possessing structure. As an example and not by way of limitation, a computer-readable storage medium may include a semiconductor-based or other integrated circuit (IC) (such, as for example, a field-programmable gate array (FPGA) or an application-specific IC (ASIC)), a hard disk, an HDD, a hybrid hard drive (HHD), an optical disc, an optical disc drive (ODD), a magneto-optical disc, a magneto-optical drive, a floppy disk, a floppy disk drive (FDD), magnetic tape, a holographic storage medium, a solid-state drive (SSD), a RAM-drive, a SECURE DIGITAL card, a SECURE DIGITAL drive, or another suitable computer-readable storage medium or a combination of two or more of these, where appropriate. Herein, reference to a computer-readable storage medium excludes any medium that is not eligible for patent protection under 35 U.S.C. \u00a7101. Herein, reference to a computer-readable storage medium excludes transitory forms of signal transmission (such as a propagating electrical or electromagnetic signal per se) to the extent that they are not eligible for patent protection under 35 U.S.C. \u00a7101. A computer-readable non-transitory storage medium may be volatile, non-volatile, or a combination of volatile and non-volatile, where appropriate.","This disclosure contemplates one or more computer-readable storage media implementing any suitable storage. In particular embodiments, a computer-readable storage medium implements one or more portions of processor  (such as, for example, one or more internal registers or caches), one or more portions of memory , one or more portions of storage , or a combination of these, where appropriate. In particular embodiments, a computer-readable storage medium implements RAM or ROM. In particular embodiments, a computer-readable storage medium implements volatile or persistent memory. In particular embodiments, one or more computer-readable storage media embody software. Herein, reference to software may encompass one or more applications, bytecode, one or more computer programs, one or more executables, one or more instructions, logic, machine code, one or more scripts, or source code, and vice versa, where appropriate. In particular embodiments, software includes one or more application programming interfaces (APIs). This disclosure contemplates any suitable software written or otherwise expressed in any suitable programming language or combination of programming languages. In particular embodiments, software is expressed as source code or object code. In particular embodiments, software is expressed in a higher-level programming language, such as, for example, C, Perl, or a suitable extension thereof. In particular embodiments, software is expressed in a lower-level programming language, such as assembly language (or machine code). In particular embodiments, software is expressed in JAVA. In particular embodiments, software is expressed in Hyper Text Markup Language (HTML), Extensible Markup Language (XML), or other suitable markup language.","Herein, \u201cor\u201d is inclusive and not exclusive, unless expressly indicated otherwise or indicated otherwise by context. Therefore, herein, \u201cA or B\u201d means \u201cA, B, or both,\u201d unless expressly indicated otherwise or indicated otherwise by context. Moreover, \u201cand\u201d is both joint and several, unless expressly indicated otherwise or indicated otherwise by context. Therefore, herein, \u201cA and B\u201d means \u201cA and B, jointly or severally,\u201d unless expressly indicated otherwise or indicated otherwise by context.","This disclosure encompasses all changes, substitutions, variations, alterations, and modifications to the example embodiments herein that a person having ordinary skill in the art would comprehend. Similarly, where appropriate, the appended claims encompass all changes, substitutions, variations, alterations, and modifications to the example embodiments herein that a person having ordinary skill in the art would comprehend. Moreover, reference in the appended claims to an apparatus or system or a component of an apparatus or system being adapted to, arranged to, capable of, configured to, enabled to, operable to, or operative to perform a particular function encompasses that apparatus, system, component, whether or not it or that particular function is activated, turned on, or unlocked, as long as that apparatus, system, or component is so adapted, arranged, capable, configured, enabled, operable, or operative."],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"BRIEF DESCRIPTION OF THE DRAWINGS","p":["For a more complete understanding of the present disclosure and its advantages, reference is made to the following descriptions, taken in conjunction with the accompanying drawings, in which:",{"@attributes":{"id":"p-0004","num":"0003"},"figref":"FIG. 1"},{"@attributes":{"id":"p-0005","num":"0004"},"figref":["FIG. 2","FIG. 1"]},{"@attributes":{"id":"p-0006","num":"0005"},"figref":["FIG. 3","FIG. 1"]},{"@attributes":{"id":"p-0007","num":"0006"},"figref":["FIG. 4","FIG. 1"]}]},"DETDESC":[{},{}]}
