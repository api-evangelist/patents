---
title: Method and apparatus for emulating ethernet functionality over a serial bus
abstract: The invention allows applications to transparently use a bus, such as the IEEE-1394 serial bus, as if it were an Ethernet (IEEE 802.3). In a conventional Ethernet, each node is assigned a unique 6-byte MAC address in order to receive frames addressed to it over the LAN. According to the invention, IEEE-1394 bus node identifiers are mapped to Ethernet MAC addresses using for example a digital signature algorithm. Ethernet frames are then “wrapped” into 1394 bus packets and addressed to the destination node using the hashed address. The receiver unwraps the 1394 packet and restores the Ethernet frame to its original form. An optimum packet size for transmission of Ethernet packets over the 1394 bus is selected with reference to speed topology maps in the 1394 bus nodes, and this optimum size is transmitted to bus nodes. This packet size is reported to TCP to specify the packet size, and all packets larger than that size are fragmented and reassembled at the receiving node. The protocol works transparently across networks that are linked via bridges.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=06977939&OS=06977939&RS=06977939
owner: Microsoft Corporation
number: 06977939
owner_city: Redmond
owner_country: US
publication_date: 20010126
---

{"@attributes":{"id":"description"},"BRFSUM":[{},{}],"heading":["TECHNICAL FIELD","BACKGROUND OF THE INVENTION","SUMMARY OF THE INVENTION","DETAILED DESCRIPTION OF THE INVENTION"],"p":["The present invention relates generally to encapsulating and transmitting data packets over a communication network such as a serial bus. More particularly, the invention provides a method and apparatus for emulating Ethernet functionality over a serial bus such as an IEEE 1394-compliant bus.","The well-known Ethernet protocol (IEEE 802.3) provides a method of transmitting data packets over a local area network. Ethernet packets are transmitted on a cable without pre-arranged scheduling, such that collisions may occur on the cable. The protocol includes mechanisms for detecting collisions and retransmitting packets that fail to reach their destination due to a collision. Bridges between networks allow packets to be further transmitted between nodes residing on different networks (see FIG. ). Each data packet, referred to as a \u201cframe\u201d in Ethernet parlance, conforms to a well-known standard including 6-byte (48-bit) source and destination addresses embedded in a 14-octet frame header.","Each Ethernet address, referred to more generally as a Media Access Control (MAC) address, must be unique on a network in order to ensure that a given packet will arrive at the correct destination. In practice, companies that make Ethernet network cards register MAC addresses with a central authority (e.g., the IEEE) to ensure that the address of each card will be unique across all networks and will not conflict with the addresses used by any other card, even if made by a different manufacturer. Consequently, it can be assured that Ethernet nodes on different networks connected by a bridge will not have the same MAC address.","It is conventional to transmit Internet Protocol (IP) packets, which rely on a different format and addressing scheme, over an Ethernet. As is conventional, IP data packets are \u201cencapsulated\u201d in an Ethernet frame, transmitted over an Ethernet LAN, and \u201cunwrapped\u201d at the receiving node to restore the original IP packet.",{"@attributes":{"id":"p-0006","num":"0005"},"figref":"FIG. 2","b":["200","250","201","251","202","252","203","253"]},"For example, when a transmitting Ethernet node transmits an IP packet to a destination IP address, the ARP protocol in the transmitting node determines the corresponding MAC address for the destination node based on the IP address, typically using a look-up table. This MAC address, along with the MAC address of the transmitting node, is stored into an Ethernet frame header, and the IP packet (including its own IP packet header) is \u201cwrapped\u201d into the Ethernet frame and transmitted over the network.",{"@attributes":{"id":"p-0008","num":"0007"},"figref":"FIG. 3"},"ARP works by broadcasting a packet containing the IP address with which the transmitting node is interested in communicating to all nodes attached to an Ethernet. Most nodes ignore the broadcast, but the ARP in the destination node responds upon recognizing that the IP address in the packet matches its own. The destination node responds with a message indicating its MAC address, which the transmitting node then uses to transmit the packet. Each node typically maintains a cache of ARP responses on the assumption that address mappings rarely change. As shown in , ARP also works across bridged networks, since ARP broadcasts are received by bridges that then pass them on to nodes on the bridged networks. Consequently, ARP responses may arrive from networks other than the LAN on which the transmitting node resides.","Recently, a serial bus standard known as the IEEE 1394 bus has been developed. Implementations of this bus are based on the internationally adopted ISO\/IEC 13213 (ANSI\/IEE 1212) CSR Architecture Specification and the IEEE 1394-1995 Serial Bus Specification, which are publicly available documents. A typical system conforming to the IEEE 1394 standard includes a plurality of nodes that are interconnected via point-to-point links, such as cables, that each connect a single node of the serial bus to another node of the serial bus. The nodes are addressable entities that can be independently reset and identified. The 1394 bus provides both asynchronous and isochronous (time-guaranteed delivery) capabilities. The IEEE 1394 bus standard requires that each node have a 64-bit unique node identifier, which permanently identifies the node throughout its life, independent from other nodes or events on the serial bus.","Given the numerous capabilities and low cost of the IEEE 1394 bus, it is anticipated that computer systems that previously relied on Ethernet to implement network communication will be modified to use the newer IEEE 1394 bus, and\/or to co-exist with the 1394 bus. A large amount of software written specifically for Ethernet and IP over Ethernet will need to be rewritten to operate using the 1394 bus, thus imposing costs and schedule delays. Consequently, one challenge arising out of moving to the newer 1394 bus implementation is figuring out how to minimize the costs associated with migrating Ethernet-based systems to a 1394-based implementation.","Various implementations of the IEEE 1394 bus in computer systems typically include layered hardware and software support based on transaction, link, and physical layer protocols. The publicly available IETF Request for Comments (RFC) 2734 describes a scheme for using the 1394 bus to transmit IP datagrams. The document generally refers to transmitting specific IP flows over isochronous channels of the IEEE 1394 bus. However, it does not suggest emulating Ethernet functionality using the IEEE 1394 bus.","A company known as Unibrain has advertised a proprietary Ethernet software emulation product, referred to as FireNet\u2122, which purportedly emulates unique Ethernet addresses by setting Ethernet addresses to be based on the IEEE-1394 address that was assigned to the IEEE-1394 board.","One problem that arises when considering the use of an IEEE 1394 serial bus to emulate Ethernet functionality relates to packet sizes. Maximum Ethernet packet sizes are fixed at about 1500 bytes, while packet sizes on the 1394 bus can vary depending on node capabilities. Certain 1394 bus nodes may have the capability of transmitting and receiving at one data rate (e.g., bytes per second), while others may only be able to communicate using lower rates. Various tradeoffs relating to packet sizes and bus speeds give rise to a more general problem: how to translate Ethernet frame sizes into the various packet sizes that can be accommodated by 1394 bus nodes.","In summary, it would be desirable to emulate Ethernet functionality over an IEEE 1394 serial bus, so that existing software already written for Ethernet interfaces can readily used without major revisions. Moreover, it would be desirable to emulate Ethernet functionality in a manner that takes advantage of various 1394 capabilities in an efficient manner.","The invention allows applications to transparently use a serial bus as if it were an Ethernet. According to one aspect of the invention, IEEE-1394 bus node identifiers are mapped to MAC addresses using a digital signature function and stored in each bus node. Each node maintains a list of mappings of MAC addresses to IEEE 1394 identifiers for all the nodes on the IEEE-1394 bus. Link-layer ARP is used to discover this mapping. When an application or protocol requests transmission of an Ethernet frame including an IP packet, the transmitting node \u201cwraps\u201d the Ethernet frame in a 1394 bus packet and transmits it to the target node using the node addressing information. The target node receives the packet and unwraps it to reproduce the original \u201cEthernet\u201d frame.","According to another aspect of the invention, an optimum packet size for transmission of Ethernet packets over the 1394 bus is selected and broadcast to all bus nodes. The protocol works transparently across networks linked via bridges, by utilizing abridge channel for traffic destined for nodes external to the local 1394 bus.",{"@attributes":{"id":"p-0029","num":"0028"},"figref":"FIG. 1","b":["100","110","120","130","110","130","120","140","150"]},"A basic input\/output system (BIOS)  containing the basic routines that help to transfer information between elements within the computer , such as during start-up, is stored in ROM . Computer  also includes a hard disk drive  for reading from and writing to a hard disk (not shown), a magnetic disk drive  for reading from or writing to a removable magnetic disk , and an optical disk drive  for reading from or writing to a removable optical disk , such as a CD ROM or other optical media. Hard disk drive , magnetic disk drive , and optical disk drive  are respectively connected to the system bus  by a hard disk drive interface , a magnetic disk drive interface , and an optical disk drive interface . The drives and their associated computer-readable media provide nonvolatile storage of computer readable instructions, data structures, program modules and other data for the computer . It will be appreciated by those skilled in the art that other types of computer readable media which can store data that is accessible by a computer, such as magnetic cassettes, flash memory cards, digital video disks, Bernoulli cartridges, random access memories (RAMs), read only memories (ROMs), and the like, may also be used in the exemplary operating environment.","A number of program modules can be stored on the hard disk, magnetic disk , optical disk , ROM  or RAM , including an operating system , one or more application programs , other program modules , and program data . In particular, the RAM  will, from time to time, store various device drivers, as known in the art. A user can enter commands and information into computer  through input or selection devices, such as a keyboard  and a pointing device . The pointing device  may comprise a mouse, touch pad, touch screen, voice control and activation or other similar devices. Other input devices (not shown) may include a microphone, joystick, game pad, satellite dish, scanner, or the like. These and other input devices are often connected to the processing unit  through a serial port interface  that is coupled to the system bus, but may be connected by other interfaces, such as a parallel port, a game port or a universal serial bus (USB). A monitor  or other type of display device is also connected to system bus  via an interface, such as a video adapter . In addition to the monitor, personal computers typically include other peripheral output devices (not shown), such as speakers and printers.","An IEEE 1394 interface  may also be provided. The IEEE 1394 interface  couples an IEEE 1394-compliant serial bus  to the system bus  or similar communication bus. The IEEE 1394-compliant serial bus , as known in the art, allows multiple devices  to communicate with the computer  and each other using high-speed serial channels. The IEEE 1394 serial bus standard is based largely upon the internationally adopted ISO\/JEC 13213 (ANSI\/IEEE 1212) CSR Architecture Specification and the IEEE 1394-1995 Serial Bus Specification. Additional buses such as the PCI bus can be provided in computer  and interfaced to the IEEE 1394 and other buses.","A typical serial bus having an IEEE 1394 standard architecture is comprised of a multiplicity of nodes that are interconnected via point-to-point links, such as cables, that each connect a single node of the serial bus to another node of the serial bus. The nodes themselves are addressable entities that can be independently reset and identified. Nodes are logical entities, each with a unique address. Each node provides a so-called configuration ROM (read-only memory)\u2014hereinafter referred to as configuration memory\u2014and a standardized set of control registers that can be accessed by software residing within the computer system.","The computer  can operate in a networked environment using logical connections to one or more remote computers, such as a remote computer . The remote computer  typically includes at least some of the elements described above relative to the computer , although only a memory storage device  has been illustrated in FIG. . The logical connections depicted in  include a local area network (LAN)  and a wide area network (WAN) . Such networking environments are commonplace in offices, enterprise-wide computer networks, intranets and the Internet.","When used in a LAN networking environment, the computer  is connected to local network  through a network interface or adapter . When used in a WAN networking environment, the computer  and remote computer  may both include a modem  or other means for establishing a communications over wide area network , such as the Internet. The modem , which may be internal or external, is connected to system bus  via the serial port interface . In a networked environment, program modules depicted relative to the computer , or portions thereof, may be stored in the remote memory storage device.","It will be appreciated that the network connections shown are exemplary and other means of establishing a communications link between the computers can be used. The existence of any of various well-known protocols, such as TCP\/IP, \u201cETHERNET\u201d, FTP, HTTP and the like, is presumed, and the system can be operated in a client-server configuration to permit a user to retrieve web pages from a web-based server. Procedures of the present invention to be described below can operate within the environment of the computer  shown in FIG. . Although the invention is generally applicable to a computer operating in accordance with the IEEE 1394 standard, it is not intended to be so limited.",{"@attributes":{"id":"p-0037","num":"0036"},"figref":["FIG. 5","FIG. 5"],"b":["501","550","1394","507","556","506","555"]},"In one embodiment, each 1394-compliant bus driver comprises an Open Host Controller Interface (OHCI) driver implementation of the IEEE 1394 link layer protocol. The OHCI is described in the 1394 Open Host Controller Interface Specification, which is publicly available. This interface can transmit and receive all defined 1394 packet formats using Direct Memory Access (DMA) to write the packets into the host computer's memory. In some embodiments, virtual device drivers can be used to connect to and communicate over the bus.","As is conventional, each node can include one or more application programs ( and  respectively) that operate using TCP\/IP protocols  and . Also as is conventional, the TCP\/IP protocols make use of an Address Resolution Protocol (ARP)  and . However, in contrast to conventional systems in which the TCP\/IP and ARP software is bound to Ethernet drivers (see FIG. ), according to the invention an Ethernet\/1394 driver interface ( and  respectively) is provided. These interfaces provide the same API and apparent functionality as prior art Ethernet drivers, but they emulate the functionality by translating the functions into 1394 bus operations as described in more detail herein. Consequently, the TCP\/IP and ARP protocols need not be modified to operate with the 1394 bus, but can instead continue to treat packets as if they will be transmitted over an existing Ethernet LAN. In accordance with these principles, existing software can be easily used on the 1394 bus without modification. Moreover, as shown in , other 1394 bus users  can co-exist on the same node and make use of the extensive 1394 bus facilities. Consequently, some applications can transmit packets using 1394 bus protocols and facilities, while others can indirectly use the 1394 facilities by treating the 1394 bus as an Ethernet.",{"@attributes":{"id":"p-0040","num":"0039"},"figref":"FIG. 6"},"According to one aspect of the invention, each E\/1394 node is assigned a MAC address, much like an Ethernet node. Each E\/1394 node should have a globally unique Ethernet MAC address, in order to permit seamless integration of an E\/1394 node with other Ethernet LAN segments. There are various approaches for doing this. In one approach, devices that are shipped with an integrated E\/1394 stack and 1394 controller can use a centrally-assigned (e.g., IEEE) MAC address for each device. Alternatively, a unique MAC address can be generated based on the 64-bit node ID. In yet a third approach, a user may directly configure a MAC address for each 1394 node.","Step  of  assumes that a node ID to MAC address mapping scheme is used. As shown in step , a unique 48-bit MAC address is generated based on the 64-bit node identifier assigned to the node.",{"@attributes":{"id":"p-0043","num":"0042"},"figref":"FIG. 10","b":["1001","1007"]},"According to one variation of the invention, 64-bit node IDs are used to create 48-bit MAC addresses using a technique that minimizes the possibility of an address conflict (i.e., the possibility that two MAC addresses generated would conflict with a previously used MAC address). According to this variation, the 64-bit node ID is input to a digital signature algorithm , such as the well-known MD5 algorithm (documented in the IETF's RFC 1321), thus producing a 128-bit digital signature of the node ID . Next, the first 48 bits of this signature  are extracted, and are then fed into an exclusive OR operation .","The other input to the XOR operation is a randomly-generated 48-bit constant , which could form part of an Ethernet-over-1394 protocol specification. The purpose of the XOR operation is to reduce the likelihood that the generated MAC address would conflict with some other scheme for generating MAC addresses from the 64-bit node identifier. A proposed constant is: 0xDE 0xE4 0xED 0xB8, which was generated by coin-tossing. Finally, the 48-bit pattern is converted into a valid Ethernet MAC address by setting the \u201clocally administered\u201d bit and clearing the \u201cmulticast bit.\u201d The resultant MAC address  represents a 46 bit hash of the original 64-bit node identifier.","According to another embodiment, each vendor can create its own unique MAC address (e.g., for an Ethernet-enabled printer). A central allocation authority such as the IEEE can act as a registration facility to ensure that unique MAC addresses are created, even though they will technically not be used for Ethernet purposes (i.e., they will be used for Ethernet emulation purposes). This approach might run into difficulties where personal computers are concerned, since the vendor for the PC may be different from the vendor for a 1394 adapter card, leading to difficulties in ensuring unique addresses. After a MAC address is generated, it is reported to the TCP\/IP protocol layers as is conventional.","Returning to , in step  the MAC-to-1394 node-specific mapping information for all nodes is learned. One method of doing this is to broadcast a request for this information, to which the other nodes respond. Another method is to read the configuration ROM (CROM) of nodes on the bus. According to one embodiment, the MAC-to-1394 node mapping information maps a MAC address to a UID and address offset, and this information is stored in the node in a table or other data structure.","Various MAC address generation schemes outlined above leave a small but finite possibility that two identical MAC addresses could be created. Accordingly, in certain embodiments a conflict resolution step is also performed, as illustrated by step  in FIG. . The conflict resolution procedures, however, are optional given the small chance of a conflict (e.g., much smaller than the probability of a hardware failure). One protocol, described below, detects collisions among all E\/1394 nodes in all E\/1394 segments in abridged LAN (for example,between LANs  and  in FIG. ). E\/1394 nodes that use IEEE-assigned MAC addresses should not participate in collision detection and resolution, with the exception that bridge nodes must forward the collision-detection traffic as described further below. This protocol also has the property that nodes newly entering a network do not knock out nodes already in the network.","In one embodiment, each E\/1394 node broadcasts an initialization packet indicating its node UID and MAC address. For example, E\/1394 nodes can broadcast the following packet announcing their MAC-address to node ID mapping:\n\n",{"@attributes":{"id":"p-0050","num":"0050"},"tables":{"@attributes":{"id":"TABLE-US-00001","num":"00001"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"thead":{"row":{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":"{"}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"112pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"91pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"\u2009\u2009\u2009\u2009ETHERNET_HEADER","EthHdr; \/\/ Dest: Broadcast."]},{"entry":[{},"\u2009\u2009\u2009\u2009UCHAR","fInit:1;"]},{"entry":[{},"\u2009\u2009\u2009\u2009ETHERNET_MAC_ADDRESS","MacAddress;"]},{"entry":[{},"\u2009\u2009\u2009\u2009UCHAR","Eu64Id[8];"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"} MAC_TO_HW_MAPPING_PKT;"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}]}}]}}},"The flnit field usage is defined further below. E\/1394 bridge nodes, in addition to broadcasting the above packet on their E\/1394 segment, should also:\n\n","E\/1394 nodes should transmit the packet under the following situations, with the specified values for the flnit field:\n\n","The node loses collision resolution otherwise. Nodes losing collision resolution should disable their network interface and not attempt to rejoin with the same MAC address. Optionally, they may save the fact that they have lost the collision resolution in persistent memory, and attempt to re-join with a different MAC address.","In step , the optimum packet size for transmitting Ethernet packets on the 1394 bus is determined, and in step  this packet size is transmitted to other nodes. In general, the 1394 bus supports nodes with heterogeneous node capabilities. Different nodes can have different maximum buffer sizes and transmission speeds. For example, the network may include one node capable of 400 mbps and 2048-byte transfer capabilities and a second node capable of only 100 mbps and 512-byte transfers. This would require capability negotiation as well as link-layer fragmentation so that a single maximum transmission unit (MTU) size can be presented to upper protocol stack layers.","The following describes one possible method for determining an optimum negotiated packet size. First, the node IDs of all Ethernet-capable nodes are identified (e.g., through the CROM or ARP). Second, the speed topology map stored in each such node is retrieved. This maps the speed that should be used for communicating with each node (e.g., 100 mbps using packet size of 512 bytes; 200 mbps using packet size of 1024 bytes; or 400 mbps using packet size of 4096 bytes). Third, the maximum speed with which any two given Ethernet-emulation compatible nodes can communicate is identified by comparing the speed topology maps. Fourth, this maximum speed is used to select the packet size (determined from the speed topology map), and all 1394 packets that emulate Ethernet packets are sent using that packet size. For example, if the maximum speed is 100 mbps, the packet size is set to 512 bytes; if the speed is 200 mbps, the packet size is 1024 bytes; if the speed is 400 mbps, the packet size is 4,096 bytes. This packet size is reported to TCP to specify the packet size; all packets larger than that size will be fragmented and reassembled at the receiver.","In general, in order to maximize efficiency, each Ethernet packet should be carried in a single 1394 bus packet. If the 1394 bus packet size for Ethernet packets is too small, then resources will be wasted on fragmentation and reassembly of bus packets. If the 1394 bus packet size for Ethernet packets is too large, then a large amount of bus packet space will be wasted. Accordingly, it is most efficient to have a match between the size of the Ethernet packet and the 1394 bus packet.","When broadcasting, however, it may be advisable to use the smallest packet size. In point-to-point communication, it may be better to use the largest packet size for communicating between the nodes.",{"@attributes":{"id":"p-0058","num":"0065"},"figref":"FIG. 7"},"Beginning in step , when a packet is to be transmitted, the E\/1394 driver looks up the 1394 node information corresponding to the MAC address. In step , if the MAC address is unknown, a request is transmitted on the bridge channel, and if a multicast address, the request is transmitted on the broadcast channel. In step , the frame is wrapped into a 1394 packet and transmitted on the bus to the correct 1394 bus address (packet fragmentation steps are omitted).","Traffic addressed to a non-multicast Ethernet MAC address (unicast) is, in one embodiment, transmitted on the 1394 bus using asynchronous writes to the node addressing information advertised by the link layer ARP. Traffic is sent on a designated \u201cbridge\u201d channel (if there is one) if no local node \u201cowns\u201d the MAC address. In other words, if there is no mapping from the unicast MAC address to a specific 1394 node, the traffic addressed to that MAC address is retransmitted on a dedicated \u201cbridge\u201d channel on the 1394 bus that is monitored by bridges for purposes of forwarding to other networks connected to the bridge (see below, with reference to FIG. ).","Ethernet broadcast traffic is, in one embodiment, sent on the 1394 broadcast channel. Fields in the GASP header identify the packet as being Ethernet packet (see RFC 2734, above).","Ethernet multicast traffic is, in one embodiment, sent on IEEE 1394 channels using either asynchronous streaming or isochronous streaming. Unlike IP\/1394, it is preferred not to send multicast data on the broadcast channel, which can instead be reserved for control-related traffic. However, the invention is not limited in this respect.",{"@attributes":{"id":"p-0063","num":"0070"},"figref":"FIG. 8","b":"802"},{"@attributes":{"id":"p-0064","num":"0071"},"figref":["FIG. 9","FIG. 9","FIG. 10"],"b":["902","903","905","904"]},"Packet size calculator  is also optionally invoked as part of the initialization procedure, and calculates an optimal packet size for use in transmitting Ethernet frames on the 1394 bus (see discussion above). This packet size is broadcast over the bus using broadcast function . The packet size calculator is also invoked when a new node is added to the bus, because it may need to change the packet size when a new node is added.","The 1394 link layer ARP module  builds the look-up table  that maps Ethernet MAC addresses to 1394-specific information such as 64-bit unique ID and FIFO-address offset. This table is kept up-to-date each time a node is added or removed.","Ethernet transmit requests are handled by 1394 bus transmit function , which performs for example the steps described in  (e.g., wrapping Ethernet frames into 1394 bus packets, looking up the 1394-specific information such as FIFO address offset from the address table , and transmitting them). Similarly, 1394 bus receive function  performs for example the steps described with reference to  (e.g., unwrapping Ethernet frames and returning them to the intended recipient).","Packet fragmenter  breaks up Ethernet packets into smaller 1394 bus packets if necessary using the optimum bus packet size. Similarly, packet reassembler  reassembles broken up packets into one Ethernet frame as necessary. Packet fragmentation and reassembly operations per se are conventional.",{"@attributes":{"id":"p-0069","num":"0076"},"figref":["FIG. 11","FIG. 1"],"b":["1101","1108","1101","1102","1105","1102","1109"]},"Network  is further coupled to networks  and  via bridges  and . Network  may comprise, for example, an E\/1394 emulated Ethernet LAN (e.g., including one or more Ethernet-emulated nodes such as node , having an emulated MAC address of 789 and IP address of 10.0.0.3). Network  may, for example, comprise a wireless Ethernet LAN having multiple nodes including node  having a real MAC address of 667 and IP address of 10.0.0.4.","In accordance with one aspect of the invention, a source node (e.g., node ) broadcasts an ARP request for a destination node that is located on a different network (e.g., node  on LAN ). The bridge , which monitors the broadcast channel in addition to the bridge channel, re-retransmits the request to the other networks to which the bridge is connected. The ARP on one of the other networks (e.g., network ) recognizes the IP address and returns its node information to the source node. If a node on the 1394 segment is requested to transmit to a unicast MAC address which is not on the 1394 segment, the packet is transmitted on a dedicated bridge channel. All bridges on the 1394 segment listen to the bridge channel, and will optionally forward the packet to other physical segments. In this fashion, Ethernet emulated networks can operate seamlessly with other networks, including real Ethernet networks. Bridges connected to the E\/1394 should operate in accordance with the principles described herein, just like any other E\/1394 host. By convention, bridges learn and cache source addresses that they \u201csee\u201d on each segment to which they are attached.","The following steps refer to , and illustrate an IP \u201cping\u201d operation between E\/1394 node  and E\/1394 node . These nodes are on separate IEEE 1394 buses, separated by two bridges and a CAT 5 Ethernet LAN. Other cases, such as transmission between node  and node  are simpler cases.","Begin by assuming that E\/1394 node  with IP address 10.0.0.1 has never previously communicated with Node  with IP address 10.0.0.3. Therefore, their IP ARP caches do not contain references to each other's IP addresses.","1. The user initiates an IP \u201cping 10.0.0.3\u201d command on .","2. The TCP\/IP stack on  tries to resolve 10.0.0.3 by broadcasting an IP ARP request. Since this node is on an E\/1394 LAN, this request is encapsulated and sent over the E\/1394 broadcast channel.","3. The bridge  receives this request and forwards it on to the CAT  Ethernet LAN  from where this broadcast ARP packet makes its way to all connected LANS, including the E\/1394 LAN .","4. The ARP packet is indicated up to all nodes on all the connected LANs, including node .","5. Since Node  owns address 10.0.0.3, it responds by sending an ARP reply addressed to MAC address  (the MAC address that originated the ARP request). The E\/1394 driver on node  recognizes that MAC  is not on the local LAN  (because it uses link-layer ARP to build a table of MAC-addresses and 1394 information for all E\/1394 nodes on the local 1394 Bus), so it sends the unicast IP ARP reply on the bridge channel.","6. Bridge , which is listening on this channel, picks up this packet and sends it as a regular Ethernet packet on the CAT  Ethernet LAN .","7. Bridge  receives this packet, and since it recognizes MAC , sends the packet directly to node , using the IEEE 1394 information corresponding to this MAC address\u2014it looks up this information it its MAC to 1394 table.","8. The IP ARP reply is indicated up to the TCP\/IP stack on node , which parses the IP arp reply and learns that fact that IP address 10.0.0.3 maps to MAC address  (the MAC address of node ).","9. The TCP\/IP stack on node  then composes and sends an ICMP ping packet to Ethernet MAC address . The E\/1394 driver on node  sends this on the bridge channel (see step ).","10. Bridge  forwards this packet to LAN .","11. Bridge  forwards this ICMP ping packet to Node , in a manner analogous to step .","12. Node 's TCP\/IP stack has now received the ICMP ping packet addressed to 10.0.0.3. It responds by composing an ICMP ping response, addressed to 10.0.0.1, the IP address of node , the originator of the ping request.","13. The ping response makes its way back to node  using steps analogous to steps  to , except that the direction is now reversed\u2014node  is sending a unicast IP packet addressed to 10.0.0.1, which is owned by node .","14. The TCP\/IP stack receives the ping response packet and the ping utility notifies the user of the successful reception of a ping response.","What has been described above is merely illustrative of the application of the principles of the present invention. Other arrangements and methods can be implemented by those skilled in the art without departing from the spirit and scope of the present invention. Any of the methods of the invention can be implemented in software that can be stored on computer disks or other computer-readable media for execution in a host or target computer. While an electrical medium has been described as the communications channel, the principles can also be applied using RF, fiber optic, or other media. No claim should be interpreted to be in means plus function format. Numbered steps in method claims should not be interpreted to require a particular ordering of the steps."],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"BRIEF DESCRIPTION OF THE DRAWINGS","p":[{"@attributes":{"id":"p-0018","num":"0017"},"figref":"FIG. 1"},{"@attributes":{"id":"p-0019","num":"0018"},"figref":"FIG. 2"},{"@attributes":{"id":"p-0020","num":"0019"},"figref":"FIG. 3"},{"@attributes":{"id":"p-0021","num":"0020"},"figref":"FIG. 4"},{"@attributes":{"id":"p-0022","num":"0021"},"figref":"FIG. 5"},{"@attributes":{"id":"p-0023","num":"0022"},"figref":"FIG. 6"},{"@attributes":{"id":"p-0024","num":"0023"},"figref":"FIG. 7"},{"@attributes":{"id":"p-0025","num":"0024"},"figref":"FIG. 8"},{"@attributes":{"id":"p-0026","num":"0025"},"figref":"FIG. 9"},{"@attributes":{"id":"p-0027","num":"0026"},"figref":"FIG. 10"},{"@attributes":{"id":"p-0028","num":"0027"},"figref":"FIG. 11"}]},"DETDESC":[{},{}]}
