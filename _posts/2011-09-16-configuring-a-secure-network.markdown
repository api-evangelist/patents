---
title: Configuring a secure network
abstract: Techniques are presented for configuring a networking device to provide secure wireless connectivity to one or more client devices. In one embodiment, a networking device is discovered that is within a wireless connectivity range from a first client device. The networking device is configured to provide wireless connectivity to the first client device. The first client device is configured to initiate a first wireless connection, without requiring a user to specify any network settings. The networking device is configured to authenticate a user to access a user interface for configuring the networking device, where the user is not authenticated based on any password.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08724515&OS=08724515&RS=08724515
owner: Cisco Technology, Inc.
number: 08724515
owner_city: San Jose
owner_country: US
publication_date: 20110916
---

{"@attributes":{"id":"description"},"RELAPP":[{},{}],"heading":["CROSS-REFERENCE TO RELATED APPLICATION","TECHNICAL FIELD","BACKGROUND","DESCRIPTION","Overview","DESCRIPTION OF EXAMPLE EMBODIMENTS"],"p":["This is a continuation-in-part of co-pending U.S. patent application Ser. No. 12\/732,446 filed Mar. 26, 2010, which is incorporated herein by reference in its entirety.","Embodiments presented in this disclosure generally relate to the field of computer networks and, more particularly, to techniques for configuring secure networks.","Computing devices and computer networking have become an integral part of daily life in modern day society. Personal and business use of computing devices, such as laptops, personal computers, smartphones (i.e., cell phones offering advanced computing capabilities), tablets, personal digital assistants (PDAs), and the like, have exploded in recent years. In addition, other electronic devices such as printers, gaming devices, smart appliances, etc. have also surged in popularity. For example, a home may include one or more personal computers, a printing device, a gaming device shared by family members and smartphones owned by individual family members. Small businesses may provide personal computers and smartphones or PDAs for employees, in addition to printers shared by the employees.","Private local area networks (LANs) may be used to enhance the usefulness of computing devices and other electronic devices in homes and small business. In a LAN, devices may be linked together through a networking device, such as a router. The router may be connected to other private and public networks, such as the Internet. In such a configuration, the router facilitates communication by routing packets of data between the devices within the LAN and also to and from other devices in private and public networks outside the LAN. Thus, home users and small businesses may use the LANs to enable computing devices and other electronic devices to communicate both within and outside the private network.","Embodiments of the invention provide a method, logic encoded in one or more tangible media, and system for performing an operation that includes discovering a networking device within a wireless connectivity range from a first client device. The operation also includes configuring the networking device to provide wireless connectivity according to network settings generated for the networking device. The operation also includes initiating, by the first client device and based on the network settings, a first wireless connection to the networking device. The first wireless connection is initiated to request, on behalf of a user, access to a user interface for configuring the networking device. The operation also includes, by the networking device and prior to granting access, authenticating the user requesting access.","Embodiments presented in this disclosure provide techniques for configuring a networking device, such as a wireless router, to provide secure wireless connectivity to one or more client devices. One embodiment provides a small flash memory device (referred to as a setup key) storing a network application. When a user connects the setup key to a client device, the client device executes the network application. In one embodiment, the setup key may be connected to the client device via a Universal Serial Bus (USB) port on the client device. The network application discovers and configures the networking device, using network settings generated for the networking device. The network settings may include a network identifier, a network password, and a wireless security protocol, and the like. Using the networking settings, the network application configures the client device to initiate a wireless connection to the configured networking device. The wireless connection is created without requiring the user to specify the network settings. The network application may store the network settings onto the setup key. The user may then connect the setup key to other devices, to configure other devices to connect to the wireless network provided by the configured networking device. Again, the client devices are configured to access the networking device without requiring the user to directly specify the network settings.","In one embodiment, the network application may also establish communication between the networking device and another network, such as the Internet. The networking device is further configured to authenticate a user to access a user interface for configuring the networking device. Rather than requiring the user to provide (and remember) a password, a user may be authenticated using information stored on the setup key. In some embodiments, the user is authenticated based on a digital certificate received from the networking application. Advantageously, by using the setup key, the user may configure a secure network more conveniently and\/or efficiently at least in some cases. Should the user subsequently desire to further configure the networking device, the user may also access the user interface for configuring the networking device.",{"@attributes":{"id":"p-0025","num":"0024"},"figref":"FIG. 1A","b":["100","100","102","110","116","110","102","120","110","102","170","130","120","178","102","130","0","178","130","0","120","178"]},"A portal application , residing within the computer , is configured to access the network state model  to determine which client devices  are available within the smart network , which services the client devices  provide, and to access and use the services. The portal application  may include one or more applets , configured to extend functionality of the portal application . A given applet  may be associated with a specific client device  and may facilitate specific usage models for the client device  via the extended functionality. When a new client device  registers with the smart network , a most recent version of a corresponding applet  may not be available within the portal application . However, the portal application  may retrieve the corresponding applet  or version of the corresponding applet  from the applet store .","The applet store  is configured to facilitate access to applets  by the portal application . The applet store  provides storage for applets  corresponding to client devices  and makes the applets  available for download to the portal application  via the external network . In one embodiment, the applet store  occupies a well-known location, such as a universal resource locator (URL) associated with the external network . Any technically feasible technique may be used to identify a particular applet  as corresponding to a particular client device . Furthermore, any technically feasible technique may be used to download the particular applet  an incorporate the functionality of the applet  to the portal .",{"@attributes":{"id":"p-0028","num":"0027"},"figref":["FIG. 1B","FIG. 1A","FIG. 1A"],"b":["102","102","120","130","112","110","112","110","112","120","118","118"]},"The smart network host device  implements a wireless network interface coupled to antenna , which is configured to convert electrical signals to electromagnetic signals for transmitting data packets, and electromagnetic signals to electrical signals for receiving data packets. The antenna  may comprise plural independent radiator structures, each having a separate radiation pattern for implementing spatial multiplexing. In one embodiment, the wireless network interface implements one or more well-known standards, such as the Institute of Electrical and Electronics Engineers (IEEE) standard 802.11, which defines a system for wireless local area networking. The antenna  is configured establish wireless client links  to antennas  coupled to corresponding client devices . The smart network host device  implements layer  forwarding (bridging) for wireless data packets forwarded among client devices  as well as internet protocol (IP) layer  routing between an IP domain associated with the smart network  and the external network . In this configuration, the smart network host device  provides related services and protocols, such as dynamic host configuration protocol (DHCP), network address translation (NAT), and the like.","The smart network host device  acts as a central authentication authority for the smart network  and implements authentication services for devices registering with the smart network . In one embodiment, authentication is implemented via Identification (ID) devices  that are uniquely paired with corresponding client devices . For example, client device () may be uniquely paired with ID device () by a manufacturer of the client device (). An ID device () is physically presented to the smart network host device  as an authentication credential to allow a client device () paired to the ID device () to join the smart network . Furthermore, the client device () is able to authenticate the smart network  as a trusted network by accessing credentials for the corresponding ID device () specifically via the smart network . In one embodiment, the ID devices  are implemented as near field radio frequency identification (RFID) tags. Each one of the RFID tags is configured to retain authentication credentials necessary to uniquely associate the one RFID tag with one instance of the client device . In this way, an RFID tag may be paired with a given client device . Persons skilled in the art will recognize that any technique may be implemented to generate and represent authentication credentials without departing the scope and spirit of the present invention. For example, in another embodiment, the ID devices  could be implemented as a physical token that includes a printed bar code on a face of the token. The bar code may encode authentication credentials for a corresponding client device . In such an embodiment, the smart network host device  may include an optical scanner capable of reading the printed bar code from the physical token. In alternative embodiments, other forms of ID devices  may implement storage of the authentication credentials. For example, a universal serial bus (USB) storage device may be used to present authentication credentials to the smart network host device  for authenticating a related device, such as the computer . In other alternative embodiments, a user may manually authenticate a client device  with the smart network host device . For example, the user may log onto a management web page generated by the smart network host device  and manually enter authentication credentials, such as a printed code associated with the client device .","In one usage scenario involving ID device , the user wishes to add a new device, such as a smart network-enabled printer to the smart network . The printer includes an ID device  implemented as an RFID tag that is paired to the printer. The user places the ID device  in close physical proximity to the smart network host device , which is the able to read the ID device  and authenticate the printer. The printer registers with the smart network host device  and is then available for use by devices connected within the smart network . Upon successfully reading the ID device , the smart network host device  may indicate success to the user by flashing a light-emitting diode (LED), or by generating any technically feasible indication.",{"@attributes":{"id":"p-0032","num":"0031"},"figref":["FIG. 1C","FIG. 1A","FIG. 1A","FIG. 1B"],"b":["102","102","120","140","130","112","110","112","120","130"]},"In addition to previously described functionality, the smart network host device  is also configured to detect one or more smart network extender devices  and to establish a bridge link  to each of the one or more smart network extender devices . Each smart network extender device  is configured to act as a network bridge between a client device  and the smart network host device . For example, client devices () through (N) may be physically located such that they are able to connect to the smart network extender device , but not to the smart network host device . Furthermore, the smart network extender device  is able to connect to the smart network host device  via bridge link . Data packets transmitted by client devices () through (N) and destined to the external network  are received by the smart network extender device  and retransmitted by the smart network extender device  via bridge link  to the smart network host device , which then forwards the data packets to the external network . Similarly, data packets from the external network  that are destined to any of the client devices () through (N) are transmitted via bridge link  to the smart network extender device , which retransmits the data packets via wireless client links ()-(N). Persons skilled in the art will understand that wireless client links ()-(N) may each be configured to operate on a separate channel or band, or a common channel or band. Furthermore, bridge link  may operate on a separate channel or band with respect to the wireless client links .","In one embodiment, each smart network extender device  is paired to an ID device , which is presented as an authentication credential to the smart network host device  to enable the smart network extender device  to participate within the smart network .",{"@attributes":{"id":"p-0035","num":"0034"},"figref":["FIG. 1D","FIG. 1A","FIG. 1A","FIGS. 1B and 1C"],"b":["102","102","120","140","130","150","112","110","112","140","130"]},"In this embodiment, the smart network host device  is configured to operate similarly with respect to . However, upon detecting the smart network connector device , the smart network host device  is configured to operate as a bridge rather than a router, and the smart network connector device  is configured to operate as a router. A backhaul link  is established between the smart network host device  and the smart network connector device .","Network data traffic between client device (N) and the external network  traverses wireless client link (N), bridge link  and backhaul link . This network data traffic is also forwarded by smart network extender device , smart network host device  and smart network connector device . A client device  may connect directly to any one of the network extender device , smart network host device  or smart network connector device . As shown, client device () is connected to smart network connector device  via wireless client link (), client device () is connected to smart network host device  via wireless client link () and client device (N) is connected to smart network extender device  via wireless client link (N).","In one embodiment, the smart network connector device  is paired to an ID device , which is presented as an authentication credential to the smart network host device  to enable the smart network connector device  to participate within the smart network . In an alternative embodiment, the smart network connector device  and the smart network host device  are paired during a manufacturing step, eliminating the need for a separate ID device .",{"@attributes":{"id":"p-0039","num":"0038"},"figref":["FIG. 1E","FIG. 1A"],"b":["120","120","160","162","164","166","165","160","162","164","166","166","118","165","166","118","160","165","162","165","162","160","162","122"]},"The processor complex  comprises a central processing unit (CPU), non-volatile memory for storing persistent programs, program state, and configuration information, random access memory (RAM) for storing temporary or volatile data, and an interface to the interconnect . In one embodiment, the processor complex  is configured to execute an operating system and applications that provide routing services. The routing services may include, for example, data packet forwarding between the network interface  and the wireless network interface . The packet forwarding services may include, without limitation, bridging among the one or more network devices via the wireless network interface .","The ID device reader  is configured to read data from an associated ID device . In one embodiment, the ID device reader  is configured to read data from RFID tags comprising the ID device . The ID device reader  may also include a USB reader. In another embodiment, the ID device reader  may be implemented as an optical scanner for reading ID devices  that encode data via a printed bar code. In yet other embodiments, the ID device reader  may be configured to read data from other types of interfaces, such as other types of flash memories like an SD flash card.","In certain embodiments, the smart network host device  comprises one or more integrated circuits that implement respective functions of the smart network host device . For example, the processor complex , wired network interface  and wireless network interface  may be integrated into a single integrated circuit.","Persons skilled in the art will recognize that the smart network extender device  may be implemented using the basic architecture of the smart network host device , with the exception that the ID device reader  and wired network interface  are not required for the smart network extender device . Similarly, the smart network connector device  may be implemented using the basic architecture of the smart network host device , with the exception that the ID device reader  is not required for the smart network connector device .",{"@attributes":{"id":"p-0044","num":"0043"},"figref":["FIG. 1F","FIG. 1E"],"b":["104","120","160","104","180","190","196","190","192","194","192","102","102","192","194","196","102","110"]},"The runtime server  comprises a network provisioning module , a service and discovery provisioning (SDP) module , an event module  and a network configuration module . The event module  tracks different network events, such as a network device advertising presence or updating status within the smart network . The SDP module  maintains a persistent view of different network devices and related services, based on data from the event module  and on data from the network devices. The network provisioning module  provides authentication and authorization for network devices within the smart network . Authentication credentials may be presented via a given ID device . The network provisioning module  may also facilitate certain network services, such as DHCP leases. The network configuration module  includes hardware platform-specific implementation methods for network configuration and management. The persistent view comprises the network state model  of .","Persons skilled in the art will recognize that the smart network connector device  and smart network extender device  may be implemented using an appropriate subset of the system software architecture  described above in conjunction with .",{"@attributes":{"id":"p-0047","num":"0046"},"figref":["FIG. 1G","FIG. 1A","FIG. 1A","FIG. 1A-1E"],"b":["102","120","142","130","112","110","112","120","130","0","130","2"]},"In one embodiment, the networking device  allows authenticated clients (e.g., client devices () and ()) to access the smart network  over a respective wireless client link (), (). The networking device  may be any device providing wireless connectivity to the external network . For example, the networking device  may be a wireless router or wireless access point. As shown, the networking device  includes an antenna  used to transmit and receive radio transmissions of network frames from client devices  and smart network host device . In this example, the networking device  has established a bridge link  with the smart network host device . Network data transmitted by one of the client devices  destined for the external network  is received by the networking device  and retransmitted via bridge links  to the smart network host device . The smart network host device  then forwards the network data to the external network . Similarly, data packets from the external network  with a destination address of one of the client devices  are transmitted via bridge link  to the networking device , which retransmits the data packets via one of the wireless client links to the appropriate client device .","Depending on the embodiment, the smart network host device  may act as a registrar or wireless local area network (WLAN) manager for the client devices . The networking device  may communicate with the smart network host device  to determine whether the client devices  are authorized to access the smart network . If the device is authorized, then the access point allows that client device  to join the smart network  and may begin forwarding network frames to from the client device .","Although embodiments are described herein with reference to the networking device  operating within the smart network , other environments are broadly contemplated. For example, in an alternative embodiment, the networking device  operates outside of and\/or in the absence of the smart network . As an example, the networking device  may connect to an external network via a network link, providing access to the external network to one or more connected client devices .",{"@attributes":{"id":"p-0051","num":"0050"},"figref":["FIG. 1H","FIG. 1G"],"b":["198","142","142","130","197","197","197","197","197","130","142","130","197","197","142","198","110","199","142","110","110","199"],"i":["a","b","c","d ","f ","g"]},"In one embodiment, a vendor of the networking device  provides the setup key  in conjunction with the networking device . The setup key  facilitates configuring the networking device  for use in the network . More specifically, the setup key  facilitates interconnecting wireless and\/or hardwired computers and other electronic devices through the networking device , such that packets of data can be securely exchanged by the networked devices. To this end, the setup key  may provide a client device, such as the wireless computer , a network application containing executable instructions. When executed, the instructions cause the wireless computer to perform an operation for automatically configuring the networking device  to securely communicate wirelessly with the wireless computer . Automatically configuring the networking device  refers to configuring the networking device  without requiring a user to provide any configuration or network settings for the networking device .","In one embodiment, the network application may store configuration settings of the configured networking device  on the setup key . Doing so allows additional client devices to be securely connected to the networking device  by providing the setup key  to the additional client devices. The networking device  may also provide a user interface for modifying the configuration settings for the networking device . Depending on the embodiment, the user interface may be accessed via a web browser application or via an administrative tool component installed on the computer from the setup key . In one embodiment, the networking device is configured to authenticate a user to access the user interface, without requiring the user to specify a password.","In some embodiments, the user is authenticated based on a digital certificate stored on the setup key. That is, the user is authenticated on the basis of something they have (the setup key ) instead of something they know (a password). The administrative tool may provide the digital certificate to the networking device  during a Secure Sockets Layer (SSL)\/Transport Layer Security (TLS) handshake between the administrative tool component and the networking device . In other embodiments, the network application or the administrative tool component imports the digital certificate into a browser application of the client device, and the browser application provides the digital certificate to the networking device  during an SSL\/TLS handshake between the browser application and the networking device . Generation of the digital certificate and\/or authentication of the user may occur based on a predetermined security policy. Depending on the embodiment, the digital certificate may be pre-generated and stored on the setup key . In other words, the digital certificate may exist on the setup key  prior to connecting the setup key  to any client device. In other embodiments, the digital certificate is generated by the network application and\/or administrative tool component subsequent to connecting the setup key to a client device.","Advantageously, at least in some cases, the setup key simplifies the process for a user to configure a secure wireless network and configure client devices to connect to the secure wireless network. Additionally, the user may the user may access a user interface using the setup key . Wireless networks are often desirable because computers and other electronic devices can be easily moved and positioned throughout a home or small business while retaining network connectivity. Incorporating wireless communication also helps to reduce the need for running cables. Secure wireless networks are often desirable due to a reduced susceptibility to security breaches, as compared to unsecured wireless networks. By using the techniques disclosed herein, the user may more conveniently and\/or efficiently configure a wireless network with appropriate security settings, relative to alternative approaches.","One alternative approach may require the user to input one or more configuration parameters, such as: an Internet Protocol (IP) address of the networking device  (e.g., 192.168.0.1, etc.), a predetermined administrative username and password, a service set identifier (SSID), a network password, and a media access control (MAC) address. The SSID, also referred to as a network name or network identifier, refers to a character sequence that identifies a wireless LAN and that may be up to thirty-two characters in length. The network password may also be referred to as a security key or passphrase. The MAC address refers to a unique identifier assigned to a network adapter or network interface card, often referred to as a physical address.","Further, networking devices are often preconfigured as an open access point with no encryption and with a published SSID, allowing any device to access the wireless network provided by the access point, as well as attempt to access devices (whether authorized or not) connected to the access point. To properly secure the networking devices, the user may be required to select a wireless security protocol such as, for example, Wired Equivalent Privacy (WEP) encryption or Wi-Fi Protected Access (WPA and WPA2) encryption. The user may also be required to specify one or more options for a selected wireless security protocol, such as a desired WEP key length. Further, the user may also be required to specify some of the configuration parameters when adding additional devices to the network. By using the techniques disclosed herein, rather than the alternative approaches, the user is no longer required to specify any of the configuration parameters.",{"@attributes":{"id":"p-0058","num":"0057"},"figref":["FIG. 2","FIG. 1G","FIG. 1H"],"b":["130","130","210","220","230","240","250","260","130","240","130","250","240","250","198","130","240","250","130","130","130"]},"Other electronic devices added to the network  may have some of the components as described with reference to the client device  of . The components of such devices may be configured to achieve the intended purposes of the particular electronic device, which may or may not differ from the client device  of . In addition, other electronic devices may have a different combination of components such as, for example, a printing device without an optical disc drive.",{"@attributes":{"id":"p-0060","num":"0059"},"figref":["FIG. 3","FIG. 1G"],"b":["142","142","310","330","320","310","350","340","342","130","142","344","300","142"]},{"@attributes":{"id":"p-0061","num":"0060"},"figref":["FIG. 4","FIG. 1G"],"b":["144","144","400","400"]},"As shown, the storage medium  includes configuration settings , a digital certificate  and a network application . The network application  may include a setup component , an administrative tool component , and a connect computer component . The network application  may be written in any number of programming languages capable of performing operations necessary to implement an embodiment of the present disclosure. The configuration settings  may be encoded using, for example, an Extensible Markup Language (XML) grammar.","In one embodiment, the configuration settings  include a mode element indicating a state of the storage medium  and an appropriate execution mode for the network application . The execution mode may be a connect mode or a tool mode. The connect mode indicates that a user desires to add a client device to a network, and the tool mode indicates that a user desires to modify configuration settings of a configured network. For the connect mode, the configuration settings  may further include a count of client devices previously configured to connect to the network. The count may be incremented each time a client device is successfully configured.","As an example, if the count of configured client devices is zero, then the network application  may execute the setup component  to configure the networking device . If the count of client devices is greater than zero, then the network application  bypasses execution of the setup component  and proceeds directly to executing the connect computer component . In some embodiments, two separate counts are stored\u2014one for wired client devices and one for wireless client devices.","In an alternative embodiment, the configuration settings  and\/or network application , or selected components thereof, may be provisioned in another component such as a wireless network adapter, which could be provided to a client device  to be configured to access the network . In yet another embodiment, the configuration settings  and\/or the network application , or selected components thereof, could be received or downloaded from a web server and stored onto the setup key  or onto the client device .","In one embodiment, the network application  and the configuration settings file  may guide a user to securely configure a local area network (LAN) having the networking device  and a first client device  with either a wireless or hardwired connection. In one embodiment, this configuration may be accomplished without requiring the user specify any configuration settings for the networking device  and\/or the first client device , such as an SSID, a network password, a wireless security protocol, an administrative username, an administrative password, etc. In one embodiment, the setup component  discovers a networking device  configured with factory default settings. The factory default settings may include an SSID conforming to a predetermined format, such as containing a predefined character sequence. For instance, the predetermined format may include a predefined character sequence of \u201cCISCO\u201d followed by a 5-digit number.","In one embodiment, once the networking device  is discovered, the setup component  then proceeds to configure the networking device  and the first client device . Depending on the embodiment, the setup component  may also configure the networking device  with a wide area network (WAN) connection. Once the networking device  and the first client device  have been configured, the setup component  updates the configuration settings file  to reflect the configuration settings used in configuring the networking device . The setup component  may also update the configuration settings file  to indicate that the networking device  and the first client device  have been configured. The connect computer component  may then be executed on additional client devices to configure the additional client devices to communicate with the router via either a wireless or hardwire connection and using the updated configuration settings file .","In one embodiment, a user may subsequently desire to configure the networking device  via a user interface for modifying configuration settings of the networking device . In some embodiments, the user may access the user interface via a web browser application (e.g., by visiting an IP address of the networking device, such as 192.168.0.1). In other embodiments, the user interface may be provided by the administrative tool component , which is installed on a client device .","In one embodiment, the networking device  may be configured to authenticate the user to access the user interface, based on the digital certificate , without requiring the user to supply a password. To this end, the digital certificate  may be provided to the networking device  by the networking application  or administrative tool component  executing on the client device . The digital certificate  may be provided to the networking device  during an SSL\/TLS handshake with the networking device . If the user interface is accessible by the web browser application, the network application  may copy the digital certificate  to the client device  and import the digital certificate  into the web browser application. Accordingly, the user may access the user interface via the web browser application without having to specify any username or password. In some embodiments, the digital certificate may be generated by the network application  based on a predetermined security policy. In other embodiments, a separate application generates the digital certificate and stores the digital certificate on the storage medium , prior to the network application first being executed.","Alternatively, the storage medium  may be a read-only medium such as a CD or DVD. In such a case, the storage medium  may be manufactured such that the configuration settings  includes the digital certificate and configuration settings such as a network password, a network identifier, and an administrative password. The configuration settings stored on the medium are distinct from factory default configuration settings of a networking device . Further configuration settings and\/or digital certificate may be different for each copy of the storage medium . Thus, the storage medium  need not be updated with the digital certificate or any of the configuration settings.",{"@attributes":{"id":"p-0071","num":"0070"},"figref":"FIG. 5","b":["500","500","510","420","510","144","420","144","420","420"]},"At step , the network application  uses network settings generated for the networking device  to configure that networking device  according to the network settings. For example, the network application  may use the configuration settings to specify a default SSID, wireless security protocols and\/or a default network password used by a client to access the wireless network being configured. The wireless adapter of the client may be identified using a search for available network adapters on the client device. The search may be accomplished via one or more application programming interfaces (APIs) provided by the operating system executing on the client device.","In some embodiments, if a wireless adapter is detected that is not enabled, the network application  may automatically enable the wireless adapter. Enabling the wireless adapter may also be accomplished via one or more operating system APIs. If no wireless adapter is found, the network application  may attempt connect to the networking device  via a wired port. To this end, the network application  may first instruct the user to connect the networking device  and the client device  using an Ethernet cable. The network application  may then search for an available Ethernet adapter. If an Ethernet adapter is identified, the network application  determines whether the Ethernet adapter is enabled. If not, the network application  may automatically enable the Ethernet adapter. The network application  may also command the Ethernet adapter to perform a Dynamic Host Configuration Protocol (DHCP) release\/renew. The network application  may then connect to the networking device  via the identified Ethernet adapter.","In one embodiment, after the network application  connects to the networking device , the network application  gains administrative access to the networking device  via a default administrative username and a default administrative password. In an alternative embodiment, the network application  gains administrative access to the networking device  via the digital certificate  stored in the setup key .","In one embodiment, after gaining administrative access, the network application  configures the network device  using the network settings, which may include an SSID, a network password, a wireless security protocol and the like. The configuration of the networking device  may be accomplished using one or more APIs provided by the networking device . Some or all of the network settings may be automatically generated using a random generation algorithm. For example, the SSID could be a human readable string including an adjective and a noun such as, for example \u201cShortWillow\u201d along with an appended numeric value (e.g., a portion of a serial number of the set up key). Further, the network settings may specify to enable a wireless security protocol, such as WPA. By configuring the networking device  with the generated network settings, the wireless security associated with the network  may be improved, without requiring the user to provide any of the network settings or understand the details of configuring a wireless network with wireless security protocols.","At step , the network application  uses the network settings to configure the first client device to initiate a first wireless connection to the configured networking device. The first wireless connection is created without requiring the user to specify any of the network settings. For example, the first client device may be configured to initiate the first wireless connection using the SSID, generated password, and specified wireless security protocol generated as part of step .","At step , the network application  provides a digital certificate  to send to the networking device for authenticating the user to access a user interface for configuring the networking device. The networking device is configured to authenticate the user based on the digital certificate. Once authenticated, the user may modify any configuration settings of the networking device , such as SSID, network password, wireless security protocol, parental controls, guest access, etc. After the step , the method  terminates.","As described above, in one embodiment, a predetermined security policy may specify how users are authenticated to access the user interface for configuring the networking device. The predetermined security policy may also specify how digital certificates are generated. In one embodiment, the security policy specifies that each certificate conforms to the X.509 specification, which defines a standard format for public key infrastructure (PKI) certificates. The digital certificate for authenticating the user may also referred to as a client certificate. In some embodiments, the security policy also specifies to perform server validation. In other words, the networking device  sends a server certificate to the network application , which authenticates the networking device  based on the server certificate. The security policy also specifies that a socket connection is immediately terminated on failure to validate a certificate. The security policy also specifies that the Hypertext Transfer Protocol Secure (HTTPS) protocol is used for control connections. The security policy also specifies that the HTTPS protocol may be used for data connections. For example, suppose that the security policy is applied in a context of a digital photo service. The request for the service to provide a digital photo may occur over an HTTPS connection, and the service may return a Uniform Resource Locator (URL) of the digital photo. The digital photo may then be retrieved via an HTTP connection and using the URL.","In some embodiments, the security policy further imposes one or more additional certificate generation and\/or authentication constraints. The additional constraints may include a security protocol, cryptographic hash function type, a cryptographic mode of operation, an encryption standard, a certificate compatibility constraint, a certificate container type, a certificate format, a key container type, a key format, a cryptographic algorithm for digital signatures, a key size, a time duration during which certificates are valid, and a time duration during which certificate revocation lists (CRLs) are valid. Values assigned to each constraint may be tailored to suit the needs of a particular case. In one exemplary embodiment, the values for each constraint are assigned as follows:",{"@attributes":{"id":"p-0080","num":"0079"},"tables":{"@attributes":{"id":"TABLE-US-00001","num":"00001"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"center"}},"thead":{"row":[{"entry":"TABLE I"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}},{"entry":"Example constraints specified by the security policy"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}]},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":{}}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"Security protocol - Transport Layer Security (TLS) version 1.2"},{"entry":"Cryptographic hash function type - Secure Hash Algorithm 1 (SHA-1)"},{"entry":"Cryptographic mode of operation - Cipher-block chaining (CBC) mode "},{"entry":"for ciphers"},{"entry":"Encryption standard - Advanced Encryption Standard 128 (AES-128) as "},{"entry":"cipher"},{"entry":"Certificate compatibility constraint - Certificates are RSA-compatible"},{"entry":"Certificate container type - Privacy Enhanced Mail (PEM) containers"},{"entry":"Certificate format - Use public-key cryptography standards (PKCS) "},{"entry":"formats"},{"entry":"Key container type - Privacy Enhanced Mail (PEM) containers"},{"entry":"Key format - Use public-key cryptography standards (PKCS) formats"},{"entry":"Cryptographic algorithm for digital signatures - RSA algorithm"},{"entry":"Key size - 1024 bits"},{"entry":"Time duration during which certificates are valid - 10 years"},{"entry":"Time duration during which certificate revocation lists are valid - 10 "},{"entry":"years"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}]}}]}}},"The constraints in the above table may be used to configure a cryptography tool. The cryptography tool refers to an application for generating digital certificates and\/or key pairs. Exemplary security tools include Open Secure Sockets Layer (OpenSSL) and GNU Transport Layer Security Library (GnuTLS), which implement the SSL\/TLS protocols. The constraints may be stored in a preferences file associated with the cryptography tool.","In one embodiment, the vendor of a device generates a digital certificate for each device, where the device is the networking device  or the setup key . In other words, the vendor may serve as a Certificate Authority (CA) for the digital certificates. A CA refers to an entity that issues digital certificates. At least in some embodiments, the vendor serves as a root CA for the digital certificates. A root CA refers to an entity at which a chain of trust of each digital certificate begins. The root CA is associated with a self-signed digital certificate; in other words, the root CA uses its own private key to sign its own digital certificate, also referred to as a root certificate. The signature of the root CA is verified using the public key associated with the root CA. To establish the chain of trust, the networking device  and the setup key  each store, in its firmware, a copy of the root certificate. In one embodiment, the root certificate may be generated using the following commands:",{"@attributes":{"id":"p-0083","num":"0082"},"tables":{"@attributes":{"id":"TABLE-US-00002","num":"00002"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"center"}},"thead":{"row":[{"entry":"TABLE II"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}},{"entry":"Generating a root certificate"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}]},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":{}}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"01 \u2002mkdir -p demoCA"},{"entry":"02 \u2002od -N 8 -t x8 -A n \/dev\/random | sed -e \u2018s\/{circumflex over (\u2009)} \/\/\u2019 > demoCA\/serial"},{"entry":"03 \u2002touch demoCA\/index.txt"},{"entry":"04 \u2002echo \u201801 \u2019 > demoCA\/crlnumber"},{"entry":"05 \u2002openssl genrsa -aes128 -out he_root_keys.pem 1024"},{"entry":"06 \u2002openssl rsa -in he_root_keys.pem -pubout >> he_root_keys.pem"},{"entry":"07 \u2002openssl req -new -key he_root_keys.pem -config openssl.cnf | "},{"entry":"openssl ca - extensions vs_ca -config openssl.cnf -keyfile "},{"entry":"he_root_keys.pem -selfsign -outdir . - startdate 700101000000Z -out "},{"entry":"he_root_cert.pem"},{"entry":"08 \u2002openssl x509 -in he_root_cert.pem -text -noout"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}]}}]}},"br":{}},"In one embodiment, each device may have an associated digital certificate that is signed by the root CA using the root certificate. The security policy may also specify constraints on one or more fields of each certificate. For example, the security policy may specify a constraint on a NotBefore field in a Validity section of each certificate. The constraint may specify that the NotBefore field is set to match the date of \u201cJan. 1 00:00:00 1970 GMT.\u201d The security policy may also specify constraints on the Distinguished Name (DN) fields, which include fields such as Common Name, Organization, Organizational Unit, Locality, State or Province, and Country\/Region. The security policy specifies that the Common Name field of test certificates is appended to include a predefined character sequence, \u201c(test).\u201d The security policy also specifies that the root certificate has a Common Name field storing \u201cHE Root CA.\u201d In the Common Name field of the root certificate, HE stands for Home Ecosystem, and Root CA specifies that the certificate is a root certificate.","In some embodiments, the digital certificate may have an associated type that is selected from a device certificate, a service certificate, and a firmware certificate. Although embodiments are herein described with reference to the digital certificates of each networking device  and\/or setup key  being device certificates, it is contemplated that any digital certificate type may be used in other embodiments. In one embodiment, the security policy specifies that a device certificate has a Common Name field storing \u201cHE Device <model name> <model ID> <model version>.\u201d In the Common Name field of the device certificate, HE stands for Home Ecosystem, <model name>\u201d is a device name assigned by the vendor of the device, <model ID> is a device identifier assigned by the vendor and <model version> is a device version number assigned by the vendor.","In one embodiment, the security policy also specifies that a service certificate has a Common Name field storing \u201cHE Service <service name> <service ID> <service version>.\u201d In the Common Name field of the service certificate, <service name> is a service name assigned by the vendor, <service ID> is a service identifier assigned by the vendor and <service version> is a service version number assigned by the vendor.","In one embodiment, the security policy also specifies that a firmware certificate has a Common Name field storing \u201cHE Firmware <firmware name> <firmware ID> <firmware version>.\u201d In the Common Name field of the firmware certificate, <firmware name> is a firmware name assigned by the vendor, <firmware ID> is a firmware identifier assigned by the vendor and <firmware version> is a firmware version number assigned by the vendor.","In one embodiment, each device may store the private key associated with the public key identified in the device certificate, which are generated using the cryptography tool based on the constraints defined by the security policy. The device may be any given networking device  or setup key . Although such a device certificate includes a public key associated with the respective device, in some embodiments, a copy of the public key may also be separately stored outside of the device certificate. At least in some embodiments, the device certificates and\/or private keys are generated by the vendor during or subsequent to manufacturing the respective device. In one embodiment, the device certificate may be generated using the following commands:",{"@attributes":{"id":"p-0089","num":"0088"},"tables":{"@attributes":{"id":"TABLE-US-00003","num":"00003"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"center"}},"thead":{"row":[{"entry":"TABLE II"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}},{"entry":"Generating a device certificate"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}]},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":{}}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"01 \u2002openssl genrsa -aes128 -out he_device_keys.pem 1024"},{"entry":"02 \u2002openssl rsa -in he_device_keys.pem -pubout >> "},{"entry":"he_device_keys.pem"},{"entry":"03 \u2002openssl req -new -key he_device_keys.pem -config openssl.cnf -out"},{"entry":"request.pem"},{"entry":"04 \u2002openssl ca -in request.pem -extensions v3_req -config openssl.cnf -"},{"entry":"keyfile he_root_keys.pem -cert he_root_cert.pem -outdir . -startdate "},{"entry":"700101000000Z -out he_device_cert.pem"},{"entry":"06 \u2002openssl x509 -in he_device_cert.pem -text -noout"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}]}}]}},"br":{}},{"@attributes":{"id":"p-0090","num":"0089"},"figref":"FIG. 6","b":["600","600","600","602","604","602","605","600","606","600","608","610","600","612","600","614","616","618"]},"In one embodiment, the signature portion  of the device certificate  includes a cryptographic hash function  used for signatures of the CA and a signature  of the CA. The signature  of the CA is generated by encrypting, using a private key of the CA, a hash computed from the data portion  using the cryptographic hash function . The DN fields  and the validity period  satisfy the constraints specified by the security policy. In order to authenticate a user for accessing a user interface for configuring the networking device , device certificates are verified during an SSL\/TLS handshake.",{"@attributes":{"id":"p-0092","num":"0091"},"figref":"FIG. 7","b":["700","420","144","142","420","142","710","443","420","142","720","420"]},"At step , the network application  authenticates the networking device  based on the received server certificate. Authentication is further described below in conjunction with . At step , the actors perform a negotiation operation. During the negotiation operation, the network application  sends a random byte string that allows both the network application  and the networking device  to compute a session key to be used for encrypting subsequent message data, where the random byte string is encrypted using the public key of the networking device . The random byte string may also be referred to as a pre-master secret. The session key is computed by the actors at steps , , based on the pre-master secret.","At step , the networking device  sends a request for a client certificate. In response, at step , the network application  sends the client certificate to the networking device . At step , the networking device  authenticates the client  using the received client certificate. Authenticating the client  is further described below in conjunction with . Once the client and the server are both authenticated, the user of the network application  may gain access to the user interface for configuring the networking device . During user configuration of the networking device  via the user interface, the network application  and\/or the networking device  may send and\/or receive application data associated with configuring the networking device . Depending on the embodiment, the application data may be encrypted or unencrypted. At step , the actors communicate to request encryption using the generated session key. At step , the actors send and\/or receive encrypted application data. Additionally or alternatively, the actors may send and\/or receive unencrypted application data.",{"@attributes":{"id":"p-0095","num":"0094"},"figref":["FIG. 8","FIG. 7"],"b":["800","142","142","800","800","755"]},"At step , the networking device  receives a client certificate  from the network application  that is provided by the setup key . The network application  may be executed by a client device  to which the setup key  is connected. The client certificate serves to associate the setup key  with a public key. The client certificate includes information such as a serial number  for the client certificate, a validity period  for the client certificate, DN fields  associated with the setup key , a public key associated with the setup key , DN fields  associated with the CA issuing the client certificate, and a signature of the CA. The signature of the CA may be generated by encrypting, using a private key of the CA, a hash computed over the information included in the client certificate.","At step , the networking device  receives, from the network application , random data and a signature associated with the setup key . The signature is generated by encrypting the random data using a private key of the setup key . The networking device  then performs steps - to validate the received client certificate. In one embodiment, validation of the client certificate succeeds only when all steps - validate successfully.","At step , the networking device  validates the signature associated with the setup key . The signature may be validated by decrypting the signature using the public key associated with the setup key  and comparing the decrypted signature with the random data. If the decrypted signature matches the random data, then the signature is considered validated. At step , the networking device  validates the validity period in the client certificate. The validity period may be considered validated if the current time of the networking device  is within the validity period in the client certificate.","At step , the networking device  validates that the CA is trusted by comparing the DN fields of the CA with DN fields included in a copy of the root certificate stored on the networking device . If the DN fields match, then the CA is considered trusted. At step , the networking device  validates the signature of the CA by decrypting the signature of the CA using a public key of the CA, where the public key of the CA is obtained from the copy of the root certificate. If the decrypted signature matches the information included in the data portion of the client certificate, then the signature of the CA is considered validated.","At step , the networking device  validates the serial number for the client certificate based on a certificate revocation list (CRL) stored on the networking device . The CRL is maintained by the vendor of the networking device  and\/or the setup key  and includes a list of revoked certificate serial numbers. A certificate may be revoked when a private key associated with the certificate is compromised. The CRL may be stored in a portion of the filesystem in the firmware of the networking device , where the portion is designated as a read-only portion that may only be updated during a firmware upgrade of the networking device . In one embodiment, the read-only portion is given by a predefined location, \u201c\/etc\/certs\/.\u201d If the serial number is not included in the CRL, then the serial number is considered validated. In some embodiments, the security policy may also specify predefined filenames for the CRL and\/or certificates. For example, the security policy may specify that the CRL is named \u201che_crl.pem,\u201d the root certificate is named \u201che_root_cert.pem,\u201d the device certificate is named \u201che_device_cert.pem,\u201d and any combination of the root certificate and the CRL is named \u201che_ca.pm.\u201d","As described above, in one embodiment, if all steps - validate successfully, then the client is considered validated. Similarly, the client may also validate the server by performing variations of the steps -, using the server certificate instead of the client certificate. Once the client and the server are both validated, then the networking device  grants access to the user interface for configuring the networking device . If the client or the server fails to be validated, the networking device  denies access to the user interface.","Advantageously, embodiments described above provide techniques for configuring a networking device to provide secure wireless connectivity to one or more client devices. One embodiment provides a setup key storing a network application. When a user connects the setup key to a client device, the client device executes the network application. The network application discovers and configures the networking device, using network settings generated for the networking device. Using the networking settings, the network application then configures the client device to initiate a first wireless connection to the configured networking device. The first wireless connection is created without requiring any user to specify any of the network settings. The network application may store the network settings onto the setup key. The user may then connect the setup key to other devices, to configure the other devices to initiate wireless connections to the configured networking device.","In one embodiment, the networking device is further configured to authenticate a user to access a user interface for configuring the networking device, where the user is not authenticated based on any password. In some embodiments, the user is authenticated based on a digital certificate received from the networking application, where the digital certificate is associated with the setup key. Advantageously, the user may configure a secure network more conveniently and\/or efficiently at least in some cases. Should the user subsequently desire to further configure the networking device, the user may also more conveniently access the user interface for configuring the networking device.","While the forgoing is directed to embodiments of the present disclosure, other and further embodiments of the disclosure may be devised without departing from the basic scope thereof. For example, aspects of the present disclosure may be implemented in hardware or software or in a combination of hardware and software. One embodiment of the disclosure may be implemented as a program product for use with a computer system. The program(s) of the program product define functions of the embodiments (including the methods described herein) and can be contained on a variety of computer-readable storage media. Illustrative computer-readable storage media include, but are not limited to: (i) non-writable storage media (e.g., read-only memory devices within a computer such as CD-ROM disks readable by a CD-ROM drive, flash memory, ROM chips or any type of solid-state non-volatile semiconductor memory) on which information is permanently stored; and (ii) writable storage media (e.g., floppy disks within a diskette drive or hard-disk drive or any type of solid-state random-access semiconductor memory) on which alterable information is stored. Such computer-readable storage media, when carrying computer-readable instructions that direct the functions of the present disclosure, are embodiments of the present disclosure.","In view of the foregoing, the scope of the present disclosure is determined by the claims that follow."],"BRFSUM":[{},{}],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"BRIEF DESCRIPTION OF THE DRAWINGS","p":["So that the manner in which the features of the present invention can be understood in detail, a more particular description of the invention may be had by reference to example embodiments, some of which are illustrated in the appended drawings. It is to be noted, however, that the appended drawings illustrate only example embodiments of this invention and are therefore not to be considered limiting of its scope, for the invention may admit to other equally effective embodiments.",{"@attributes":{"id":"p-0007","num":"0006"},"figref":"FIG. 1A"},{"@attributes":{"id":"p-0008","num":"0007"},"figref":["FIG. 1B","FIG. 1A"]},{"@attributes":{"id":"p-0009","num":"0008"},"figref":["FIG. 1C","FIG. 1A"]},{"@attributes":{"id":"p-0010","num":"0009"},"figref":["FIG. 1D","FIG. 1A"]},{"@attributes":{"id":"p-0011","num":"0010"},"figref":["FIG. 1E","FIG. 1A"]},{"@attributes":{"id":"p-0012","num":"0011"},"figref":["FIG. 1F","FIG. 1E"]},{"@attributes":{"id":"p-0013","num":"0012"},"figref":["FIG. 1G","FIG. 1A"]},{"@attributes":{"id":"p-0014","num":"0013"},"figref":["FIG. 1H","FIG. 1G"]},{"@attributes":{"id":"p-0015","num":"0014"},"figref":["FIG. 2","FIG. 1G"]},{"@attributes":{"id":"p-0016","num":"0015"},"figref":["FIG. 3","FIG. 1G"]},{"@attributes":{"id":"p-0017","num":"0016"},"figref":["FIG. 4","FIG. 1G"]},{"@attributes":{"id":"p-0018","num":"0017"},"figref":"FIG. 5"},{"@attributes":{"id":"p-0019","num":"0018"},"figref":"FIG. 6"},{"@attributes":{"id":"p-0020","num":"0019"},"figref":"FIG. 7"},{"@attributes":{"id":"p-0021","num":"0020"},"figref":"FIG. 8"}]},"DETDESC":[{},{}]}
