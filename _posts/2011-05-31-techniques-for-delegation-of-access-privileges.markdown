---
title: Techniques for delegation of access privileges
abstract: Systems and methods for controlling access to one or more computing resources relate to generating session credentials that can be used to access the one or more computing resources. Access to the computing resources may be governed by a set of policies and requests for access made using the session credentials may be fulfilled depending on whether they are allowed by the set of policies. The session credentials themselves may include metadata that may be used in determining whether to fulfill requests to access the one or more computing resources. The metadata may include permissions for a user of the session credential, claims related to one or more users, and other information.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08769642&OS=08769642&RS=08769642
owner: Amazon Technologies, Inc.
number: 08769642
owner_city: Reno
owner_country: US
publication_date: 20110531
---

{"@attributes":{"id":"description"},"BRFSUM":[{},{}],"heading":["CROSS REFERENCE TO RELATED APPLICATIONS","BACKGROUND","DETAILED DESCRIPTION"],"p":["This application incorporates by reference for all purposes the full disclosures of application Ser. No. 12\/961,182, entitled \u201cDistributed Policy Enforcement with Verification Mode\u201d filed on Dec. 6, 2010 and application Ser. No. 12\/961,104 entitled \u201cDistributed Policy Enforcement With Optimizing Policy Transformations\u201d filed on Dec. 6, 2010. This application also incorporates by reference for all purposes the full disclosure of co-pending U.S. patent application Ser. No. 13\/149,619, filed concurrently herewith, entitled \u201cUse of Metadata for Computing Resource Access.\u201d","Modern computing networks provide access to a wide variety of computing resources such as data archives, search engines, data processing, data management, communications, and electronic marketplaces, as well as media and entertainment services. As the number and size of such computing resources, and their user communities, have grown and become more sophisticated, a need has arisen to establish increasingly sophisticated usage policies. For example, such policies may include policies that address security, privacy, access, regulatory and cost concerns. Policies may be applied to various users to control access to various computing resources accordingly. As just one example, some users may be allowed to read, write, and delete a certain set of data while other users may be allowed only to read the data and while other users may have no access to the set of data.","Policy enforcement often includes user authentication wherein a user, through various processes, confirms his or her identity in order to gain access to one or more computing resources. For various reasons, a user may wish to grant access to another user who does not typically have access. In many instances, it may be desirable to grant access for a limited period of time and possibly to limit the amount of access granted for that time. In some of these instances and in other instances, it is often desirable to require a user (who may be a user to whom permissions have been delegated, but not necessarily so) to require more reliable authentication (such as multifactor authentication) for different types of access. Conventional techniques for accomplishing permission delegation and\/or reliable authentication can be cumbersome and, in many instances, may involve unnecessary risk.","Same numbers are used throughout the disclosure and figures to reference like components and features, but such repetition of number is for purposes of simplicity of explanation and understanding, and should not be viewed as a limitation on the various embodiments.","In the following description, various embodiments will be described. For purposes of explanation, specific configurations and details are set forth in order to provide a thorough understanding of the embodiments. However, it will also be apparent to one skilled in the art that the embodiments may be practiced without the specific details. Furthermore, well-known features may be omitted or simplified in order not to obscure the embodiment being described.","Techniques, including systems and methods, described and suggested herein allow users to delegate privileges related to access of one or more computing resources to other users. The computing resources may be physical and\/or virtual computing resources, such as computer systems, storage systems, and\/or other systems, including examples provided below. In an embodiment, a user, referred to herein as a delegator, authenticates himself or herself with an authentication system. The delegator may have one or more privileges relating to the access of one or more computing resources. The privileges may correspond to less than full access to the one or more computing resources accessible to the delegator. For example, one of the one or more computing resources may be a storage resource. The delegator may have the ability to perform read operations (such as by providing appropriate input for causing the read operations to be performed) in order to obtain stored data, but may lack the ability to perform operations that change the data, such as by write or delete operations. The privileges of a delegator may, at least in part, be defined by a set of policies that are applicable to the user. Once authenticated, the delegator may access the one or more computing resources according to his or her privileges. If the delegator attempts to perform operations that are allowed, the attempted operations may be performed. If the delegator attempts to perform operations that are not allowed, the attempted operations may be denied. However, as described below, in addition to or as an alternative to accessing the one or more computing resources, embodiments of the present disclosure allow the delegator to delegate access privileges to one or more other users.","In an embodiment, a delegator is allowed to generate a session. A session may be a period of time for accessing one or more computing resources, which may be a definite or indefinite period of time, that is limited by parameters of a session credential that has been generated for the session. The session credential may be a collection of information that is usable for accessing the one or more computing resources according to the privileges of the delegator or a proper subset thereof. The session credential may include information related to the delegator such as authentication information, location information, information about applications used by the delegator, a time stamp for the session credential, one or more policies limiting access in connection with the session credential, an expiration time after which the session credential is invalid, a starting time before which the session credential is invalid, renewal parameters and\/or requirements for renewing a session, credentials or a reference to credentials (such as a signing key) to be used to authenticate requests under the corresponding session, any restrictions on the number of uses allowed during the session, any use quotas for the session, any information about a party bearing financial responsibility for use of the session, any ownership information related to resources created under the session, any information about permissions to be applied by default to resources created under the session, and\/or any other information that may be relevant in accordance with the various embodiments.","As noted, a session credential generated for a session may be used to delegate access privileges to one or more other users. Accordingly, in an embodiment, a session credential that has been generated for a session may be provided to one or more users other than the delegator. Such users may be referred to as a delegatee. Providing a session credential to a delegatee may be performed in any suitable manner. For instance, the delegator may provide the session credential to one or more delegatees by sending the session credential as part of an electronic message to the one or more delegatees. As another example, the delegator may identify one or more delegatees in connection with requesting a session credential to be generated. A system that generates the session credential (or another system that works in conjunction with a system that generates the session credential) may automatically send the generated session credential to the delegatees specified by the delegator. A session credential may be generated for each delegatee and\/or a single session credential may be generated for multiple delegatees who each may use the generated session credential for access to one or more computing resources.","In an embodiment, the privileges that the delegator are allowed to delegate are no more than the privileges that the delegator has. Thus, for example, if policy restricts a delegator from deleting certain files, the delegator may be prevented from delegating the ability to delete the files to a delegatee. Control of the privileges delegated may be performed in any suitable manner. For example, in an embodiment, policy evaluation may be late binding such that policies are checked at the time requests to access one or more computing resources are made by a delegatee. For instance, if a delegatee provides a session credential in connection with a request to access a computing resource, any policies applicable to the delegatee may be checked. Policies applicable to the delegatee may include policies encoded in the session credential (i.e. one or more restrictions on the delegatee specified by the delegator), policies applicable to the delegatee that are maintained independently from the session credential (such as policies that would apply to the delegatee regardless of whether the delegatee is able to provide a session credential), and\/or policies applicable to the delegator. Continuing the example of a request to delete a file, when a delegatee makes such a request to an appropriate computing resource, the computing resource (or another system working in connection with the computing resource) may check both whether the delegatee is able to make the request and whether the delegator is able to make the request. In this manner, if the delegator did not have the ability to delete the file, the delegatee would likewise lack the ability, even if the session credential specified that the delegatee had such access. Thus, the delegator may attempt to delegate access privileges without having to keep track of what privileges he or she has. Other ways of controlling access may also be used in addition or as an alternative. For example, when a delegator makes a request to generate a session credential, policy applicable to the delegator may be checked to ensure that the delegator is able to generate the requested session credential. The delegator may be prevented from having a session credential generated that indicates that a delegatee may have more access privileges than the delegator. In addition, the ability to delegate may be a privilege that is initially checked and\/or that is checked at the time a delegatee makes a request.","In an embodiment, delegatees may become delegators to other delegatees, who themselves may become delegators to other delegatees, and so on. For example, a delegatee that has received a session credential may submit a request that a session credential be generated, such as in a manner described above. As delegatees become delegators, a delegation tree may be created where the delegation tree may be a directed graph having nodes representing delegators and\/or delegatees and directed edges whose directions indicate delegation. As discussed, in various embodiments, delegators are prevented from delegating more access than the delegators themselves have. To control access, a set of policies applicable to a delegatee may be checked, such as described above. However, in addition to checking policies applicable to the delegatee and the user that delegated the privileges to the delegatee, policies applicable to all appropriate delegators may be checked. In the delegation tree, for instance, for a delegatee represented by a node in the tree, policies applicable to all users represented by nodes in the tree above the node representing the delegatee may be checked. In this manner, with multiple delegators, in an embodiment, no single user is allowed to delegate more than the original delegator. As above, policy checking may be performed at the time a request for access to one or more computing resources is made and\/or at other times, such as when a request to generate a session credential is made.","As discussed above, a session credential may include various metadata that may be useful for various purposes. The metadata may include claims attesting to some fact of the user that requested the session credential. For instance, in addition to data listed above, data that may be included in a session credential may include information that states one or more claims with respect to authentication of a user that requested the session credential. The authentication claims may include information stating that a password has been verified, a timestamp corresponding to a time of authentication, a symmetric signature, an asymmetric signature, a certificate, and the like. Authentication information may also include claims regarding multifactor authentication techniques that were utilized by the user. Multifactor authentication information may indicate, for instance, that the user authenticated himself or herself using a one-time password (OTP), a smartcard, biometric techniques (such as techniques involving fingerprints, retinas, palms, and\/or voice). Claims may also include claims regarding the user's location, and claims regarding one or more principals (such as delegators) that started the corresponding session or otherwise performed some role in initiating the session. Other information that may be included in the metadata includes, but is not limited to, information attesting to aspects of a computing environment, claims about applications and\/or operating systems, and, generally, any useful information.","In an embodiment, metadata in a session credential may be used to authorize one or more requests to access one or more computing resources. For instance, a policy may require that completion of a certain type of authentication procedure (such as a multifactor authentication procedure) is a prerequisite for performing one or more operations. Performance of the procedure may incur a cost, such as a financial cost, or a resource cost (such as occupation of available processing, bandwidth, and other resources). As noted, a session credential may encode whether the authentication procedure was completed and may encode related information (such as an authentication token received as a result of completing the authentication procedure). When such a session credential is provided in connection with a request to perform an operation, completion of the requisite authentication procedure may be verified using the information in the session credential. Using a session credential in this manner may provide many advantages. For example, if an authentication procedure is required that is cumbersome for the user and\/or that is computationally resource intensive, use of the session credential may allow for a single completion of the authentication procedure to be used for multiple requests, thereby lessening the burden on both the user and computing resources involving authentication. In this manner, techniques of the present disclosure allow for amortization of one or more costs over multiple transactions.","More generally, the session credential may encode information that is requisite to fulfill a set of one or more conditions for performing one or more operations in connection with one or more computing resources. A user may request a session and a session credential may be generated accordingly. The user himself or herself may utilize the generated session credential (i.e. delegate access to himself or herself) or may provide (or cause to have provided) the session credential to one or more other users, as above. The session credential may be provided in connection with requests to access one or more computing resources and some or all of the information in the session credential may be used in decisions whether to authorize the requests.","As noted above, various embodiments of the present disclosure make use of policies. Policies may be specified with a convenient policy specification language and\/or user interface. However, such user-specified policies may be inefficient for the purposes of policy enforcement, particularly as the set of user-specified policies grows large. In at least one embodiment, user-specified policies may be transformed and\/or processed into a normal policy form (\u201cnormal form\u201d). The normal form may include a defined set of policy elements, each with a defined set of possible values. For example, the set of policy elements may include an \u201cactions\u201d element corresponding to a set of actions governed by the policy, a \u201cprincipals\u201d element corresponding to a set of principals or actors with respect to the set of actions, a \u201cresources\u201d element corresponding to a set of resources or subjects of the action, and\/or a \u201cconditions\u201d element corresponding to a set of conditions to be satisfied before the policy is enforced.","The set of normal form policies may be efficiently optimized, for example, optimized for efficient indexing and\/or optimized with respect to set size. Normal form policies may be split and\/or joined with respect to policy elements, and duplicates efficiently removed. Normal form policies may be efficiently indexed with respect to policy element values and\/or particular subsets of policy element values. For example, when the set of normal form policies are to be enforced with respect to a variety of computing resources, the set may be indexed by computing resource, computing resource type, computing resource server, and suitable combinations thereof. Subsets of the set of normal form policies may be distributed to multiple policy enforcement components based on the indexing and\/or based on a relevance of particular policy subsets to particular policy enforcement components.","A virtual resource provider capable of provisioning a variety of virtual computing resources may include a centralized policy management service that maintains the set of normalized policies and distributes appropriate subsets to multiple policy enforcement components distributed throughout the virtual resource provider. Alternatively, or in addition, normal form policies may be maintained local to particular policy enforcement components and\/or associated virtual computing resource implementation services. As a further alternative, policies may be provided along with action requests. In each case, a policy may be compatible with the normal form, and be associated with and\/or accompanied by cryptographic credentials that authenticate and\/or authorize the policy and\/or an associated user. For example, the user may be authorized to set policies with respect to a particular set of computing resources. Such policies themselves are an example of a computing resource that may be subject to policy control.","Requests with respect to resources may be submitted to one or more policy enforcement components. For example, a request may be submitted to one or more policy enforcement components locally maintaining one or more policies that are relevant to the request. A distributed policy enforcement system with multiple policy enforcement components may have a \u201csandbox\u201d mode and\/or verification mode for processing requests. An authorized user may activate the verification mode with an indicator incorporated into an service interface, with an explicit verification mode service interface, and\/or with a cryptographic verification mode token, the acquisition of which is subject to policy control. During the verification mode, requests may be evaluated with respect to policies as usual while requested actions are inhibited.","Such evaluations may depend on a set of decision data including user identity, a user's group memberships, protocol level details such as network source address of the request and protocol utilized to transmit the request, geographic regions associated with the request such as source geographic location of the request, regulatory classifications associated with the request, date and time. Authorized users may substitute pieces of decision data with specified values, for example, to enable an administrator to verify that a particular set of policies will govern the actions of a particular user or group of users as intended, and\/or to diagnose problems. In verification mode, evaluation results, relevant policies, and decision data utilized during request evaluation may be collected, filtered and reported at a variety of levels of detail. The reported set of relevant policies may include normal form policies utilized to evaluate a request and\/or a corresponding set of user-specified policies. Originating user-specified policies may be tracked during the policy normalization process to enable reporting of user-specified policies in verification mode. The reported set of decision data may include decision data not otherwise accessible to the report recipient.","Various approaches may be implemented in various environments for various applications. For example,  illustrates aspects of an example environment  for implementing aspects in accordance with various embodiments. As will be appreciated, although a Web-based environment may be utilized for purposes of explanation, different environments may be utilized, as appropriate, to implement various embodiments. The environment  shown includes both a testing or a development portion (or side) and a production portion. The production portion includes an electronic client device , which may include any appropriate device operable to send and receive requests, messages, or information over an appropriate network  and convey information back to a user of the device . Examples of such client devices include personal computers, cell phones, smartphones, handheld messaging devices, laptop computers, tablet computers, set-top boxes, personal data assistants, electronic book readers, and the like.","The network  may include any appropriate network, including an intranet, the Internet, a cellular network, a local area network, a wide area network, a wireless data network, or any other such network or combination thereof. Components utilized for such a system may depend at least in part upon the type of network and\/or environment selected. Protocols and components for communicating via such a network are well known and will not be discussed herein in detail. Communication over the network may be enabled by wired or wireless connections, and combinations thereof. In this example, the network  includes the Internet, as the environment includes a Web server  for receiving requests and serving content in response thereto, although for other networks an alternative device serving a similar purpose could be utilized as would be apparent to one of ordinary skill in the art.","The illustrative environment  includes at least one application server  and a data store . It should be understood that there may be several application servers, layers, or other elements, processes, or components, which may be chained or otherwise configured, which may interact to perform tasks such as obtaining data from an appropriate data store. As used herein the term \u201cdata store\u201d refers to any device or combination of devices capable of storing, accessing, and\/or retrieving data, which may include any combination and number of data servers, databases, data storage devices, and data storage media, in any standard, distributed, or clustered environment.","The application server  may include any appropriate hardware and software for integrating with the data store as needed to execute aspects of one or more applications for the client device , and may even handle a majority of the data access and business logic for an application. The application server  provides access control services in cooperation with the data store , and is able to generate content such as text, graphics, audio, and\/or video to be transferred to the user, which may be served to the user by the Web server  in the form of HTML, XML, or another appropriate structured language in this example.","The handling of all requests and responses, as well as the delivery of content between the client device  and the application server , may be handled by the Web server . It should be understood that the Web and application servers ,  are not required and are merely example components, as structured code discussed herein may be executed on any appropriate device or host machine as discussed elsewhere herein. Further, the environment  may be architected in such a way that a test automation framework may be provided as a service to which a user or application may subscribe. A test automation framework may be provided as an implementation of any of the various testing patterns discussed herein, although various other implementations may be utilized as well, as discussed or suggested herein.","The environment  may also include a development and\/or testing side, which includes a user device  allowing a user such as a developer, data administrator, or tester to access the system. The user device  may be any appropriate device or machine, such as is described above with respect to the client device . The environment  may also include a development server , which functions similar to the application server  but typically runs code during development and testing before the code is deployed and executed on the production side and becomes accessible to outside users, for example. In some embodiments, an application server may function as a development server, and separate production and testing storage may not be utilized.","The data store  may include several separate data tables, databases, or other data storage mechanisms and media for storing data relating to a particular aspect. For example, the data store  illustrated includes mechanisms for storing production data  and user information , which may be utilized to serve content for the production side. The data store  also is shown to include a mechanism for storing testing data , which may be utilized with the user information for the testing side. It should be understood that there may be many other aspects that are stored in the data store , such as for page image information and access right information, which may be stored in any of the above listed mechanisms as appropriate or in additional mechanisms in the data store .","The data store  is operable, through logic associated therewith, to receive instructions from the application server  or development server , and obtain, update, or otherwise process data in response thereto. In one example, a user might submit a search request for a certain type of item. In this case, the data store  might access the user information  to verify the identity of the user, and may access the catalog detail information to obtain information about items of that type. The information then may be returned to the user, such as in a results listing on a Web page that the user is able to view via a browser on the user device . Information for a particular item of interest may be viewed in a dedicated page or window of the browser.","Each server typically will include an operating system that provides executable program instructions for the general administration and operation of that server, and typically will include a computer-readable medium storing instructions that, when executed by a processor of the server, allow the server to perform its intended functions. Suitable implementations for the operating system and general functionality of the servers are known or commercially available, and are readily implemented by persons having ordinary skill in the art, particularly in light of the disclosure herein.","The environment  in one embodiment is a distributed computing environment utilizing several computer systems and components that are interconnected via communication links, using one or more computer networks or direct connections. However, it will be appreciated by those of ordinary skill in the art that such a system could operate equally well in a system having fewer or a greater number of components than are illustrated in . Thus, the depiction of the system  in  should be taken as being illustrative in nature, and not limiting to the scope of the disclosure.","In at least one embodiment, one or more aspects of the environment  may incorporate and\/or be incorporated into a virtual computing resources architecture.  depicts aspects of an example virtual computing resources architecture  in accordance with at least one embodiment. The example virtual computing resources architecture  includes a virtual resource provider  enabling various clients - to interact with provisioned computing resources  over a network . The provisioned computing resources  may include multiple types of virtual resource - such as virtual computing systems and clusters, virtual file system volumes, virtual private networks, data object stores, notification services, and suitable combinations thereof. The ellipsis between the types of virtual resource  and  indicates that the virtual resource provider  may maintain any suitable number of such computing resource types and\/or instances. Ellipses are used similarly throughout the drawings.","The virtual resource provider  may be implemented, at least in part, with server computers such as the Web server  and the application server  described above with reference to , and one or more data stores such as the data store  of , interconnected by a relatively high speed data network (not shown in ). The server computers and\/or data store(s) implementing the virtual resource provider  may include different types and\/or configurations of server computers and\/or data stores allocated to different virtual resource types - and to a control plane  of the virtual resource provider . The control plane  may include multiple user interfaces - that enable the clients - to interact with the virtual resource provider , including provisioning and interacting with the virtual resources -, as well as setting policies with respect to the virtual resources -.  depicts further aspects of a control plane  in accordance with at least one embodiment.","The user interfaces  of the control plane  may include any suitable type of user interface. For example, the user interface  may include graphical user interfaces (GUIs), Web-based interfaces, programmatic interfaces such as application programming interfaces (APIs) and\/or sets of remote procedure calls (RPCs) corresponding to interface elements, messaging interfaces in which the interface elements correspond to messages of a communication protocol, and\/or suitable combinations thereof. The user interfaces  may include multiple resource interfaces - enabling user interaction with the virtual resources - (). For example, there may be one of the resource interfaces - for each of the types of virtual resource -. As another example, one or more of the resource interfaces - may enable interaction with multiple virtual resource types -. Alternatively, or in addition, one or more of the types of virtual resource - may incorporate interfaces enabling direct interaction (e.g., by the clients -) without mediation by one of the user interfaces .","The user interfaces  may further include a provisioning interface  enabling authorized users to provision, configure, re-configure and\/or de-provision (collectively, \u201cprovision\u201d) the virtual resources - (). Although the example control plane  includes one such provisioning interface , embodiments may include any suitable number of such provisioning interfaces, including a provisioning interface for each type of virtual resource -. Alternatively, or in addition, the resource interface  corresponding to a particular type of virtual resource  may incorporate the provisioning interface for that virtual resource type . The user interfaces  of the control plane  may still further include a policy management interface  enabling establishment, viewing, editing and\/or deletion (collectively, \u201cmaintenance\u201d) of virtual resource provider  policies including policies with respect to the virtual resources - and with respect to policy management. Again, although the example control plane  includes one such policy management interface , embodiments may include any suitable number of policy management interfaces including a policy management interface for each type of virtual resource -. The resource interface  corresponding to a particular type of virtual resource  may incorporate the policy management interface for that virtual resource type .","The control plane  may include a policy management component  configured at least to provide centralized policy management for the virtual resource provider  (). The policy management component  may receive user-specified policies, for example, specified with the policy management interface , and transform user-specified policies into a normal form. The policy management component  may then optimize the set of normal form policies, for example, for indexing and\/or with respect to set size, and index the set of normal form policies based at least in part on one or more policy elements of the normal form. The policy management component  may then distribute the optimized normal form policies to a set of policy enforcement components - in a manner based at least in part on the index.","The control plane  may further include a verification mode component  configured at least to facilitate verification mode reporting. The verification mode component  may collect request evaluation results, normal form policies and\/or decision data, map normal form policies to user-specified policies, and generate reports at specified levels of detail. For example, verification mode report detail levels may include a low detail level corresponding to an evaluation result and basic contextual information, a medium detail level that adds a set of policies considered to determine the evaluation result, a high detail level that further adds a set of decision data considered to determine the evaluation result, and a very high detail level that further adds virtual resource provider  () operational information that may assist anomalous behavior diagnosis (e.g., debugging). For example, such operational information may include an identification of the set of policy enforcement components - involved in evaluating a request associated with the report. In at least one embodiment, verification mode may be a mechanism by which authorized users are permitted access to such virtual resource provider  operation information. Verification mode may correspond to a sandbox mode in the software development and\/or testing sense, enabling configuration verification and\/or testing without possible high cost consequences (e.g., in terms of financial and\/or resource costs).","The verification mode component  may be further configured to process requests for verification mode tokens (e.g., cryptographic tokens), and to authenticate such tokens. For example, a verification mode token may be submitted with a request in order to indicate that the request is to be processed in verification mode. Alternatively, or in addition, verification mode tokens may authorize substitution of decision data (or at least a portion of the decision data) utilized when evaluating a request with respect to a set of policies. For example, the verification mode token may authorize substitution of decision data related to user identity, thus enabling an administrator to verify that a particular policy set has an intended effect with respect to a particular user.","The control plane  may include a workflow management component  configured at least to establish and maintain workflows such as resource workflows, provisioning workflows and\/or policy management workflows established responsive to user interaction with the resource interfaces -, the provisioning interface , and\/or the policy management interface , respectively. Workflows may include one or more sequences of tasks to be executed to perform a job, such as virtual resource configuration, provisioning or policy management. A workflow, as the term is used herein, is not the tasks themselves, but a task control structure that may control flow of information to and from tasks, as well as the order of execution of the tasks it controls. For example, a workflow may be considered a state machine that can manage and return the state of a process at any time during execution. Workflows may be created from workflow templates. For example, a policy management workflow may be created from a policy management workflow template configured with parameters by the policy management component .","The workflow management component  may modify, further specify and\/or further configure established workflows. For example, the workflow management component  may select particular implementation resources of the virtual resource provider  to execute and\/or be assigned to particular tasks. Such selection may be based at least in part on the computing resource needs of the particular task as assessed by the workflow management component . As another example, the workflow management component  may add additional and\/or duplicate tasks to an established workflow and\/or reconfigure information flow between tasks in the established workflow. Such modification of established workflows may be based at least in part on an execution efficiency analysis by the workflow management component . For example, some tasks may be efficiently performed in parallel, while other tasks depend on the successful completion of previous tasks.","The normal form of a policy may include a defined set of policy elements.  depicts aspects of an example normal form policy  in accordance with at least one embodiment. The policy  includes a policy identifier  uniquely identifying the policy , one or more effects  of the policy , reference to one or more principals  or actors governed by the policy, a specification of one or more actions  governed by the policy , reference to one or more resources  governed by the policy , a specification of one or more conditions  to be satisfied before the policy  is enforced, and a set of element modifiers , , ,  corresponding to the policy elements , , , , respectively. The policy  may have an alphanumeric and\/or Unicode representation and\/or encoding sometimes called the policy document.","The policy identifier  may be any suitable identifier uniquely identifying the policy . For example, the policy identifier  may correspond to an alphanumeric and\/or Unicode (collectively, \u201calphanumeric\u201d) string or integer number. The policy identifier  may be utilized to reference the policy . Examples of policy effects include permit and deny. The effect(s)  element of the policy  may specify such policy effects. For example, a particular policy may permit one or more principals  to take one or more actions  with respect to one or more resources , while another policy may deny a set of actions  to a set of principals .","The principal(s)  element of the policy  may specify one or more entities known to the virtual resource provider  () that are capable of making requests of the virtual resource provider . Such entities may include users having a user account with the virtual resource provider , customers having a commercial account (e.g., a cost-tracking account) with the virtual resource provider , and groups of users and\/or customers including role-based groups such as administrators. Such entities may be specified with any suitable identifier including user identifiers, customer account numbers, group identifiers, and alphanumeric strings.","The action(s)  element of the policy  may specify one or more actions capable of being performed by the virtual resource provider  (). Such actions may include actions capable of being performed by the virtual resources - of the virtual resource provider  and\/or actions that may be requested with the user interfaces - of the virtual resource provider , including policy management actions. In at least one embodiment, actions specified by the action(s)  element correspond to elements of the user interfaces -. Such actions may be specified with any suitable action identifier including interface element identifiers and alphanumeric strings.","The resource(s)  element of the policy  may specify one or more resources of the virtual resource provider  () for which one or more of the action(s)  is valid. Such resources may include virtual resources -, implementation resources, policies, and verification mode tokens. Such resources may be specified with any suitable resource identifier including resource identifiers in accordance with a uniform resource identifier (URI) standard such as Berners-Lee et al., \u201cUniform Resource Identifier (URI): Generic Syntax,\u201d Request for Comments (RFC) 3986, Network Working Group, January 2005.","The condition(s)  element of the policy  may specify a set of conditions to be satisfied before the policy  is enforced. For example, the condition(s)  may specify the conditions under which the principal(s)  are permitted to perform the action(s)  with respect to the resource(s) . Such conditions may be specified with any suitable condition specification language including suitable programming languages, and may include compound conditions, for example, specified with Boolean operators. Condition parameters may include any suitable data available to the virtual resource provider  (). Condition parameter examples include environmental data such as calendar date and time of day, and request-associated data such as originating network address, originating geographical location, originating political and\/or administrative division and communication protocol employed.","By default, the policy  effect(s)  may be enforced when the specified principal(s)  request the specified action(s)  with respect to the specified resource(s)  and the specified set of condition(s)  are satisfied. However, the element modifiers - may indicate that the corresponding policy elements - specify exceptions\u2014that is, that the policy  effect(s)  be enforced unless the specified principal(s)  are the actors, unless the specified action(s)  are requested, unless the specified resource(s)  are the subject of action and\/or unless the specified set of conditions is satisfied. In addition, policy element - specifications may include \u201cwildcard\u201d values. For example, a \u2018*\u2019 wildcard value may match all and\/or any valid values of the policy elements -. Alternatively, or in addition, wildcard values may be matched contextually. For example, a \u2018*\u2019 wildcard value may match all and\/or any values of the policy element - that are valid with respect to a particular user, customer, group, and\/or other context of a particular request.","As described above with reference to , the policy management component  may transform user-specified policies into normal form policies, and optimize sets of normal form policies. The optimized set of normal form policies may differ significantly from the supplied set of user-specified policies. A single user-specified policy can result in the addition of multiple normal form policies. A single normal form policy can participate in enforcing multiple user-specified policies. In at least one embodiment, each normal form policy  maintains a set of references to \u201cparent\u201d policies  which the normal form policy  participates in enforcing. For example, the set of parent policies  may be updated during user-specified policy transformation and normal form policy set optimization operations.","The virtual resource provider  may be implemented as a collection of networked services.  depicts aspects of an example virtual resource provider  implemented in accordance with at least one embodiment. The virtual resource provider  includes multiple virtual resource services -, a policy management service , an authentication service , a set of decision data providers , and a verification mode service , each interconnected by a network . The arrow  indicates that the network  is connected to the network  of .","Each virtual resource service ,  may maintain a set of provisioned resources -, - and incorporate a resource interface , . For example, each virtual resource service - may maintain one type of virtual resource - as described above with reference to , and incorporate a corresponding one of the resource interfaces - described above with reference to . The policy management service  may incorporate a policy management interface  corresponding to the policy management interface  of .","The policy management service  may act as a centralized policy management service for the virtual resource provider , managing, transforming, optimizing and distributing one or more sets of policies  to other services -, - of the virtual resource provider . In addition, in at least one embodiment, services -, - of the virtual resource provider  other than the policy management service  may maintain policies. For example, the virtual resource services - may each maintain a set of policies -, - that are relevant to the respective set of provisioned resources -, -. Such policies -, - may be established, viewed, edited and deleted with policy management interface  () functionality integrated into the associated resource interface -. Such policies -, - may be compatible with the policies  maintained by the policy management service . For example, the policies -, - may each have a form corresponding to the normal form policy  (). Further in addition, in at least one embodiment, policies may be maintained at a location external to the virtual resource provider , and supplied for enforcement as part of interactions with the services - of the virtual resource provider . For example, request  incorporates such a policy .","The authentication service  may provide authentication services for the virtual resource provider . For example, the authentication service  may authenticate an integrity and\/or an authenticity of policies -, . In addition, the authentication service  may authenticate an identity of clients - (), customers and\/or users of the virtual resource provider . For example, the policy management interface  and\/or the resource interfaces - may utilize the authentication service  to establish and\/or verify an identify and\/or authority of a user with respect to policies -,  and\/or provisioned resources -. The authentication service  may utilize any suitable authentication mechanism, including any suitable cryptographic authentication mechanism, to provide the authentication services. Such authentication mechanisms are well-known in the art and need not be detailed here.","The decision data providers  may provide data required by policy enforcement components - () to evaluate requests that are subject to policies. For example, the provisioned resources - may be associated with various labeling and\/or naming schemes (\u201cresource names\u201d), and the decision data providers  may include a name resolution provider that maps or resolves such resource names to locations (e.g., network locations) within the virtual resource provider . The decision data providers  may further include providers of data required to determine whether the condition(s)  () of the policy  are satisfied. For example, a particular policy may deny interaction with a particular resource from a specified set of geographic locations and\/or regions (collectively, \u201cgeographic locations\u201d). In such a case, the decision data providers  may include a geographic resolution provider capable of identifying a set of geographic locations associated with the request .","The verification mode service  may provide verification mode functionality (e.g., as described above with reference to the verification mode component  of ) as a service to the other services - of the virtual resource provider . For example, the resource interfaces - and\/or the policy management interface  may query the verification mode service  to authenticate a verification mode token and\/or may provide evaluation results for reporting in response to a request. An example verification mode service is described below in more detail with reference to . However, the description first turns to further aspects of the policy management service  in accordance with at least one embodiment.","The policy management service  of  is an example of the policy management service  of , and includes a policy management interface  corresponding to the policy management interface  of . Users of the virtual resource provider  may interact with the policy management interface  to specify, view, edit and\/or delete policies in a user-specified policy set  maintained by the policy management service . The policy management service  may further maintain a normalized policy set  corresponding to the user-specified set . The normalized policy set  may be maintained by a policy normalization component . The policy management service  may participate in policy enforcement; for example, the policy management service  may include a policy enforcement component  corresponding to one of the policy enforcement components - of . In particular, the policy enforcement component  may enforce policies referencing actions that may be requested with the policy management interface . Furthermore, in at least one embodiment, at least a portion of the normalized policy set , or a copy thereof, is distributed to policy enforcement components located throughout the virtual resource provider . The policy management service  may include a policy distribution component  configured at least to distribute the normalized policy set  throughout the virtual resource provider , for example, based at least in part on a policy index .","Policies in the user-specified policy set  may be specified with alphanumeric strings. A first example of such a policy is:\n\n","The policy normalization component  may generate sets of normalized policies corresponding to user-specified policies, and store the normalized policies in the normalized policy set . For example, each policy in the normalized policy set  may have a form corresponding to the normal form policy  of . The policy normalization component  may generate multiple normal form policies corresponding to a user-specified policy, for example, due to decompounding with respect to policy elements -. The fourth user-specified policy example described above may be decompounded to generate two normal form policies, both with the effect  element specifying a permit effect, the principal  element specifying the user with identifier \u201cmsmith\u201d, and the action  element specifying the configure action. For example, the resource  element of one of the normal form policies may specify all virtual computer systems associated with the customer identifier \u201cexample_corp\u201d, the resource  element of the other of the normal form policies may specify all block data volumes associated with the customer identifier \u201cexample_corp\u201d. In this example, the user-specified policy has been decompounded with respect to the resource  element. As another example, the policy normalization component  may be configured to decompound the first user-specified policy example described above with respect to the action  element and\/or the resource  element.","Wildcards may be first \u201cexpanded\u201d into a set of values, for example, based on a context of the user-specified policy, before being decompounded. The decompounding need not be complete with respect to policy element - () values. For example, the policy normalization component  may be configured to protect particular subsets of policy element - values (policy element \u201catoms\u201d or \u201cindivisibles\u201d) from decompounding. As one example, the set of actions corresponding to \u201c{create, read, write, delete}\u201d may be protected from decompounding.","The policy normalization component  may reduce a size of the normalized policy set , for example, by reducing redundancy in the normalized policy set . The policy normalization component  may detect that a newly added normal form policy is contained within the scope of one or more of the normalized policy sets , and delete the newly added normal form policy from the normalized policy set . Normal form policies, such as the normal form policy  of , may correspond to sets of points in one or more policy spaces, for example, spaces having dimensions corresponding to the policy elements - of the normal form, and\/or Boolean-valued functions over the policy spaces. Each effect  element value may correspond to such a policy space. For example, there may be a permit space and a deny space. The policy enforcement components - () may be configured to require an explicit permit in the absence of a deny in order to permit a particular action, that is, to require a point in a permit space without a corresponding point in the deny space. Wildcards may correspond to regions of such policy spaces. Element modifiers - may be used to define complimentary sets of the policy spaces. The policy normalization component  may detect whether the normal form policy  is within the scope of a set of normal form policies (e.g., the normalized policy set ) by determining whether the set of points corresponding to the normal form policy  is contained within the set of points corresponding to the set of normal form policies.","The policy normalization component  may further reduce the size of the normalized policy set  by compounding and\/or recompounding normal form policies in the normalized policy set  with respect to policy elements - (). Some policy element - values may correspond to multiple other policy element - values, so that a single normal form policy  may correspond to a same policy space region as multiple other normal form policies. For example, a principal  element value corresponding to a group may be equivalent to multiple principal  element values corresponding to individual users. The policy normalization component  may be configured to detect compoundable subsets of the normalized policy set  and to compound the detected subsets along policy element - dimensions to configured granularities (which need not be the coarsest available granularity). Throughout generation and\/or transformation of the normalized policy set , the policy normalization component  may be configured to maintain the set of parent policies  of each normal form policy . For example, the set of parent policies  may include the identifier of each user-specified policy that the normal form policy  participates in enforcing.","Different regions of the policy space(s) may be enforced by different policy enforcement components - (). Different policy enforcement components - may enforce overlapping, and even same, regions of the policy space(s). However, in at least one embodiment, different policy enforcement components - enforce disjoint regions of the policy space(s). The policy distribution component  may determine regions of the policy space(s), and corresponding subsets of the normalized policy set , to assign and\/or distribute to the policy enforcement components -. To facilitate such distribution, the policy distribution component  may establish and maintain the policy index . The policy index  may index the normalized policy set  with respect to policy element - () values and\/or subsets thereof. For example, the policy index  may index the normalized policy set  with respect to resource  and\/or resource  type. Policies in the normalized policy set  may be multiply indexed, for example, with respect to multiple different policy element - values and\/or value subsets. The policy distribution component  may distribute the normalized policy set  to the policy enforcement components - based at least in part on the policy index . For example, sets of indices of the policy index  may define policy enforcement domains corresponding to subsets of the normalized policy set , and the policy distribution component  may distribute such subsets to the policy enforcement components - as units. In at least one embodiment, each normal form policy  incorporates its indexing information and\/or the policy index  is incorporated into the normalized policy set .","The distributed nature of policy enforcement in the virtual resource provider  () can complicate efforts to verify that a particular set of user-specified polices has its intended consequences.  depicts aspects of an example verification mode service  in accordance with at least one embodiment that can facilitate such verification. The verification mode service  may include a token management component  accessible through a token interface . The token management component  may issue verification mode tokens in response to authorized requests, record the issued tokens in an issued token database , and authenticate the issued tokens upon request. Following processing of the request  in verification mode, a reporting component  of the verification mode service  may prepare a verification mode report at a specified level of detail. Requests for such reports, as well as for level of detail specification, may be made with a reporting interface  of the verification mode service . Such report requests may not include all the data required by the reporting component . The verification mode service  may further include a data collection component  configured to interact with other services - of the virtual resource provider  to obtain the required data.","Policies with respect to actions that may be requested with the token interface  and\/or the reporting interface may be enforced by a policy enforcement component  corresponding to one of the policy enforcement components - of . For example, such policies may define a set of users of the virtual resource provider  () authorized to be issued verification mode tokens, and may require an authentic verification mode token before providing the verification mode report. The token management component  may issue multiple types of tokens; for example, tokens authorizing verification mode reporting may be a separate type from tokens authorizing substitution of decision data during verification mode processing of the request . Tokens authorizing substitution of different subsets and\/or types of decision data may also be separate types. Verification mode policies may distinguish between different types of tokens. Generation, issuance, authentication and revocation of cryptographic tokens are well known in the art, and need not be described here in detail.","Requests at the reporting interface  may specify a type of report and\/or level of reporting detail. For example, the workflow management component  () may generate the request in response to detecting a verification mode request at one of the resource interfaces -. The reporting component  may generate the requested report based on a corresponding report template, utilizing the data collection component  to collect data as necessary. Fields that may be included in the verification mode report include one or more results of evaluation of the verification mode request by one or more of the policy enforcement components -, a subset of the normalized policy set  () and\/or the user-specified policy set  relevant to the verification mode request and\/or utilized during the evaluation by the one or more policy enforcement components -, decision data utilized during the evaluation, virtual resource provider  contextual operating data capable of influencing the evaluation, and\/or versions thereof filtered and\/or summarized to the specified level of detail. The reporting component  may be configured to map a set of normal form policies to a corresponding set of user-specified policies based at least in part on the set of parent policies  () referenced by each normal form policy .","Each virtual resource service - () may be implemented with a collection of physical server computers and\/or network elements.  depicts aspects of an example virtual resource service  in accordance with at least one embodiment. The virtual resource service  depicted in  is an example of the virtual resource service  of . The example virtual resource service  includes multiple virtual resource servers - and one or more interface servers  interconnected by a network . The provisioned resources - and policies - of  may be distributed across the virtual resource servers - of  utilizing any suitable data distribution technique. For example, each virtual resource server ,  may maintain a subset -, - of the provisioned resources -, and a corresponding subset -, - of the policies -. Such subsets may deliberately overlap for various purposes including data durability and service capability.","The interface server(s)  may (collectively) maintain a resource interface  and a policy enforcement component . The resource interface  may correspond to one of the resource interfaces - of . Similarly, the policy enforcement component  may correspond to one of the policy enforcement components - of . The policy enforcement component  of  may enforce policies referencing actions that may be requested with the resource interface  of . Such policies may include policies distributed by the policy management service  (), policies - stored on the virtual resource servers -, and policies accompanying requests to the resource interface  such as the policy  of . For example, the resource interface  may require a \u201cpermit\u201d evaluation by the policy enforcement component  before further processing a request.",{"@attributes":{"id":"p-0094","num":"0098"},"figref":["FIG. 9","FIG. 8"],"b":["902","902","902","904","906","908","910","912","902","914","922","904","912","904","922","812","818","812","818","902","904","922"]},"Clients - () may utilize the configure resource interface element  to request a configuration and\/or reconfiguration of one or more of the provisioned resources - (). For example, if the provisioned resources - include data object stores, the configure resource interface element  may enable clients - to set a maximum size of a data object store over which they have authority. Clients - may utilize the read resource attribute(s) interface element  to request a read or view of one or more attributes of one or more of the provisioned resources -. For example, the read resource attribute(s) interface element  may enable clients - to obtain copies of specified data objects from specified data object stores. Clients - may utilize the update resource attribute(s) interface element  to request an update of one or more attributes of one or more of the provisioned resources -. For example, the update resource attribute(s) interface element  may enable clients - to update specified data objects and\/or create specified data objects in specified data object stores.","Some provisioned resources - () may have functionality that can be activated, and the activate resource functionality interface element  may be utilized to request an activation of that functionality. For example, some types of data object store may have a capability to analyze stored data objects, and the activate resource functionality interface element  may enable authorized clients to start, stop, suspend and\/or perform the analysis. The delete resource attribute(s) interface element  may enable clients - () to request a deletion and\/or re-initialization of one or more attributes of one or more of the provisioned resources -. For example, clients - with sufficient authorization may delete specified data objects from specified data object stores.","In the example resource interface , utilization of the verification mode versions - of the interface elements - indicates that the corresponding request is to be processed in the verification mode (is a \u201cverification mode request\u201d). For example, the resource interface  () may submit the request to the policy enforcement component  as usual, but inhibit any actions that would usually result from a \u201cpermit\u201d evaluation result. Regardless of the evaluation result, the resource interface  may respond to the request with a verification mode report. For example, the resource interface  and\/or a controlling workflow may invoke an interface element of the verification mode reporting interface  () to generate the verification mode report. The use of dedicated interface elements - is only one technique for indicating that a request is to be processed in verification mode. Alternate embodiments may utilize any suitable technique. For example, interface elements - may incorporate an explicit indicator (e.g., a \u201cflag\u201d) for indicating the request is a verification mode request. The resource interface  may include an explicit set of interface elements (not shown in ) for activating and deactivating verification mode processing. As a further alternative, or in addition, receipt of a verification mode token (e.g., issued by the verification mode service ) may act as an indication that an associated request is to be processed in verification mode.","Each interface element - may correspond to a request (e.g., the request  of ) subject to a subset of the policies -, . In order to evaluate the request with respect to the subset of the policies -, , the resource interface  () receiving the request may submit the request to the policy enforcement component .  depicts aspects of an example policy enforcement component  in accordance with at least one embodiment. The policy enforcement component  of  is an example of the policy enforcement component  of .","The policy enforcement component  may include a policy collector  configured at least to collect relevant policies -,  () from locations throughout the virtual resource provider , and store them local to a decision engine  in a policy cache . Collected policies may not be in normal form  (). The policy enforcement component  may further include a policy normalization component  having functionality corresponding to that of the policy normalization component  () of the policy management service . The policy normalization component  may normalize the set of policies in the policy cache . The decision engine  may evaluate requests submitted to the policy enforcement component  with respect to relevant policies in the policy cache . At times, additional data may be required to support particular decisions with respect to particular policies. The policy enforcement component  may still further include one or more decision data collectors  configured at least to collect the required decision support data (\u201cdecision data\u201d) from locations throughout the virtual resource provider . Collected decision data may be stored local to the decision engine  in a decision data cache .","The policy collector  may update the policy cache  responsive to policy update notifications, for example, received from the policy management service  () and\/or the virtual resource servers - (). The policy collector  may subscribe to notifications of updates to relevant policies and\/or policy sets maintained at the policy management service  and\/or the virtual resource servers -. Alternatively, or in addition, the policy collector  may periodically search for changes to policies in the policy cache  and\/or for newly relevant policies.","The decision data collector(s)  may include one or more data collectors configured to interact with the decision data providers  (). The decision data collector(s)  may collect decision data responsive to requests by the decision engine , for example, requests by the decision engine  for decision data that is not present in the decision data cache  and\/or that is out-of-date. The decision data collector(s)  may furthermore maintain one or more subsets and\/or types of decision data in the decision data cache , for example, responsive to update notifications from the decision data providers  and\/or with updates discovered by periodic searching.","As described above with reference to , the control plane  may be facilitated by one or more workflows maintained by the workflow management component .  depicts example steps for workflow management in accordance with at least one embodiment. At step , a request may be received by an interface of the control plane  (). For example, one of the user interfaces  of the control plane  may receive the request from a user, customer and\/or administrator of the virtual resource provider . The request may be a call to a programmatic interface such as an application programming interface (API) or a Web services interface, e.g., utilizing a Simple Object Access Protocol (SOAP) call. Alternatively, or in addition, the request may be received through a graphical user interface (GUI) such as a Web-based GUI. At step , the request may be analyzed to determine one or more actions required to successfully complete the request. For example, the provisioning interface  may analyze the request, and determine a set of actions required to provision a set of virtual resources - (). When an interface element receiving the request corresponds to a specific action to be performed, the interface may extract information from the request to be utilized in determining aspects and\/or parameters of the action to be performed.","At step , a request may be sent to create a workflow based at least in part on the one or more actions determined at step . For example, provisioning interface  () may send the request to the workflow management component . The request to create the workflow may include the action(s), action metadata such as type of action, and\/or action parameters. In at least one embodiment, the control plane  and\/or the workflow management component  maintains a job queue for such requests, and workflows are created responsive to new additions to the job queue. At step , a workflow and one or more component tasks may be created. For example, the workflow management component  may analyze the request of step  to determine the appropriate workflow and component tasks to create.","At step , execution of the component task(s) may be guided in accordance with the workflow. For example, the workflow management component  () may activate elements of interfaces of various implementation resources to provision the set of virtual resources. Alternatively, or in addition, the workflow management component  may manage bids for execution of the component task(s) by components of the virtual resource provider . At step , it may be determined whether the workflow has finished. For example, the workflow management component  may determine whether a final task in a sequence of tasks managed by the workflow has completed. If so, a procedure incorporating step  may progress to step . Otherwise the procedure may return to step  for a next task and\/or task sequence. Workflows may guide multiple task sequences executing in parallel. In this case, it may be that the workflow is not finished until each of the multiple task sequences completes and\/or an explicit workflow finished flag is set by one of the component tasks. At step , the sender of the request of step  may be informed of result(s) of the action(s).",{"@attributes":{"id":"p-0105","num":"0109"},"figref":["FIG. 12","FIG. 12","FIG. 12"],"b":["1200","1202","1204","1206"]},"In the embodiment, the session-based authentication service  is a system that generates and provides session credentials. A session credential may be a collection of information that may be used for gaining access to one or more computing resources. In an embodiment a session credential includes a token which encodes the collection of information. The token, in an embodiment, may encode various information such as a user name of the delegator, one or more user names of one or more delegatees, one or more policies specified by the delegator to restrict and\/or grant access to one or more delegatees, a time for which the session credential is valid and generally any information that may be useful in various embodiments. The token may also include other information, such as information described above as part of a session credential. The session-based authentication service  or another service acting in concert with the session-based authentication service may encrypt the session credentials so that the session credential is opaque to those who receive it\u2014that is, to any person or machine not having the ability to decrypt the session credential. A session credential may be decrypted as necessary to access information encoded therein. The session-based authentication service  or another service acting in concert with the session-based authentication service may also provide a signing key (as part of the token or separately therefrom) to enable users to sign requests made in connection with a corresponding session credential.","As noted, in response to receipt of the delegation request from the delegator , the session-based authentication service  generates a session credential and provides a session credential to the delegator . The delegator  may then pass the session credential to the delegatee . The session credential may be passed to the delegator or delegatee in any suitable manner. Examples include electronic messages, electronic mail messages and, in some embodiments generally, any method of providing information. The act of providing the session credential to the delegatee from the delegator may be performed outside of a system that incorporates the various components illustrated in . For instance, the delegator  may send the session credential to the delegatee  utilizing an email address of an email account maintained by an entity other than an entity that operates the session-based authentication service . It should be noted that while  depicts the delegator  providing the session credential to the delegatee , the delegatee may receive the session credential in other ways. For example, the session-based authentication service  may provide the session credential to the delegatee  directly. In such an embodiment, the delegator may have specified in connection with the request, information identifying the delegatee that would enable the session-based authentication service  to provide the session credential to the delegatee  accordingly. Also, providing the session credential to a user (delegator or delegatee) may be performed by providing access to the session credential. For instance, a reference to a stored session credential may be provided. Generally the delegatee may receive the session credential in any suitable manner.","As shown in , once the delegatee  has the session credential the delegatee may use the session credential to access a computing resource . A computer resource  may be a computer resource such as those described above, as may include, for example, a virtual machine instance, a virtual storage resource, a physical computing resource, and generally any computing resource, whether physical or virtual. The delegatee  may provide the session credential to the computing resource  in connection with a request to access the computing resource . The session credential may be provided once for each request, once for a plurality of requests, or otherwise. When a delegatee or other user (in  or otherwise herein) provides a session credential, he or she may provide less than all information of the session credential. For example, in an embodiment where a session credential comprises a token and signing key, providing the session credential may include transmitting the token and signing requests with the signing key. In some embodiments, the complete session token may be transmitted when provided.","In response to receipt of the request, the computing resource  may provide a response to the delegatee . The response may be any suitable response. The type of response may generally depend on the situation in which the request was made, and generally the type of request that was made. For instance, if the request was a request to read information from storage, the response may provide such information. The response may also be a response that the request was denied, such as described below. For example, despite having the session credential, a delegatee that provided the session credential may nevertheless not have had the privilege to make the request. The delegatee may have been, by policy for example, prohibited from making the request.","As illustrated in , the computing resource  is in communication with the policy management service  which may operate as the policy management service described above. Generally, the policy management service  may provide the computing resource  a set of policies from which the computing resource  may make decisions on whether to provide requested access. As noted, the session credential may encode one or more policies applicable to a holder of the session credential. Computing resource  may also apply such policies that are encoded in the session of credential and determine whether such encoded policies permit or prohibit the request. The computing resource  may, for example, decrypt the session credential (if encrypted), access any included policies in the session credential and apply the accessed policies when making decisions whether to fulfill requests.","Variations of that which is shown in  are considered as being within the scope of the present disclosure. For example, as illustrated,  shows the delegatee  using a single session credential to gain access to the computing resource . In some embodiments, access may require multiple session credentials, some of which may have been provided pursuant to actions of different delegators. For example, a policy may require multiple delegators to delegate access and a delegatee may be required to provide a session credential from each of the delegators. More complicated schemes with complex conditions may dictate one or more sets of session credentials that may be required for a particular type of access and gaining the access may accordingly require acquisition of multiple session credentials from one or more delegators. Similarly, particular access requested by a delegatee may require privileges that the delegatee has partially received via one session credential and partially received from another session credential. As a simple illustrative example, a delegatee may wish to both read data and delete data in a request. The ability to read data may be delegated to the delegatee via a session credential from a first delegator and the ability to delete may be delegated to the delegatee via another session credential from a second delegator. A successful request to both read and delete may, therefore, involve providing both session credentials.",{"@attributes":{"id":"p-0112","num":"0116"},"figref":"FIG. 13","b":["1300","1300","1302","1300","1304","1304","1306","1308"]},"Additional actions may be performed in connection with the process  or variations thereof. For example, the delegator may authenticate a delegatee using any authentication method, such as an authentication method of the delegator's choice. Authentication by the delegatee to the delegator may be a requirement for delegation to the delegatee. As another example, a delegatee may submit a request for access that triggers an ability for the delegator to grant the requested access. An electronic message, such as illustrated in  discussed below, may be presented to the delegator in response to a delegatee's request for access. The delegator may be required to interact with the electronic access to confirm that the requested access (or access that is different from that which was requested) should be granted.",{"@attributes":{"id":"p-0114","num":"0118"},"figref":"FIG. 14","b":["1400","1400"]},"In addition, a session time interface element  of the interface  allows the user to select a time for the session, which may be a duration for which delegated privileges are valid. The time may be used to determine, for example, an expiration time of a session credential generated in response to a request. Once the user has selected appropriate options, a submit button  may be selected by the user to submit the delegation request. Selection of the submit button  may result in an electronic message being sent that includes the parameters set by the user using interface .","It should be noted that the interface  is provided for the purpose of illustration, and generally interfaces that allow users to submit delegation requests can vary greatly from that which is illustrated. For example, interfaces used to submit delegation requests are not necessarily graphical user interfaces. In addition, any options for a delegation request may vary depending on the type of access for which privileges are to be delegated. In an embodiment, users are prevented from granting more access than they themselves actually have. Thus, if a delegator is prevented from performing a particular action in an embodiment, a delegatee of the delegator is also prevented from performing that same action. As will be described in more detail below, various systems may be configured so that the delegatee is not provided more access than is available to the delegator regardless of whether such restrictions are encoded in the session credential.",{"@attributes":{"id":"p-0117","num":"0121"},"figref":["FIG. 15","FIG. 15","FIG. 15","FIG. 15"]},{"@attributes":{"id":"p-0118","num":"0122"},"figref":["FIG. 16","FIG. 15","FIG. 16","FIG. 16","FIG. 16"],"b":["1602","1604","1604","1602","1606","1602","1604","1604"]},"As noted, in this manner delegators are not able to grant more privileges than they actually have. It should be noted, however, that a delegatee may actually have more privileges than the delegator. The delegatee may actually have one or more privileges that the delegator does not have. Another policy outside of the session credential, for example, may grant such privileges to the delegatee. As one specific example, an employee may submit a delegation request to obtain a session credential that has a restricted set of privileges. If the delegatee granted those privileges to his or her supervisor, the supervisor may nevertheless have a larger set of privileges than the employee that provided the delegation request. In other words, the delegatee may have privileges that were granted independently of a second credential. As noted, in various embodiments, delegator is not able to grant more access than the delegator actually has.",{"@attributes":{"id":"p-0120","num":"0124"},"figref":"FIG. 17","b":["1700","1700"]},"In an embodiment, the process  includes receiving  a session credential in connection with a request for access from a delegatee. The session credential may be received, for example, by a computing resource for which the request was made. In an embodiment, when the session credential is received  a policy set applicable to the delegatee is accessed  from the received session credential. The session credential, for example, if encrypted, may be decrypted and policy information in the session credential may be identified. A determination may then be made  whether the accessed policy allows the delegatee the requested access. If not, the requested access may be denied . However, if it is determined  that the policy allows the delegatee the requested access, a policy set for the delegator may be accessed . The delegator may have been identified, for example, from the session credential or from information that is used to look up to identify the delegator from a database or other collection of information. Information identifying one or more policies applicable to the delegator may also be encoded in the session credential in some embodiments.","With the policy set for the delegator accessed, a determination may be made  whether the accessed policy allows the delegator the requested access. That is, whether the policy allows the delegator the access that was requested by the delegatee. In this manner, a determination is made whether the delegator was able to grant the access that is being requested by the delegatee. If it is determined  that the policy does not allow the delegator the requested access, then the requested access may then be denied . However, if it is determined  that the policy allows the delegator the requested access, the requested access may be then provided  to the delegatee. If the request for access is a request for information, for example, the requested information may be provided. Similarly, if the request for access was to perform one or more operations, the one or more operations may be performed. Generally, the requested access may be provided to the delegatee in any suitable manner.","In an embodiment, delegatees are also allowed to delegate privileges to other delegatees. , for example, shows a diagram  illustrating how privileges may be delegated multiple times. The diagram  is in many ways similar to the diagram  described above in connection with . For example, a delegator  may wish to grant one or more privileges to a delegatee . The delegatee , however, in this example, may wish to provide one or more privileges to another delegatee . Thus, in this example, the delegatee  may become a delegator. Similarly, the delegatee  may wish to provide access to another delegatee and that delegatee may wish to grant access to another delegatee and so on until finally one or more privileges are granted to yet another delegatee .","Thus, in this example, the original delegator  submits a delegation request to a session-based authentication service  which may be a session-based authentication service as described above. In response, in an embodiment, the session-based authentication service generates and provides a session credential to the delegator . The delegator  then, in an embodiment, provides the session credential that it received from the session-based authentication service  to the delegatee . The delegatee  may provide the session credential to another delegatee . In this manner the delegatee  would receive the scope of privileges received by the delegatee  that would be the same as the scope of the privileges provided to the delegatee .","However, also illustrated in , the delegatee  may submit a delegation request to the session-based authentication service  and receive a different session credential that had been generated by the session-based authentication service  in response to the delegation request. The delegatee  may provide this new session credential to the next delegatee . The next delegatee  may provide the session credential to yet another delegatee, or as described above may also submit a delegation request to the session-based authentication service  which would then generate a session credential and provide the session credential to the delegatee  that submitted the delegation request. As indicated in , this may continue and one or more of the delegatees may attempt to use a session credential that he or she has received.","In this particular example, a delegatee  provides the session credential to a computing resource  in connection with a request. As above with , the request may include the session credential although the session credential may be provided separately from the request. The computing resource  may be any of the computing resources described above or, generally, any computing resource. Similarly, a policy management service may update policies utilized by the computing resource  such as in a manner described above.","As noted above in an embodiment, delegators are prevented from providing more access than they themselves have. Thus, when there is a chain of delegators and delegatees (which may be a path in a tree of delegation) utilizing session credential(s) to delegate access, the access granted to any given delegatee in the chain in an embodiment does not exceed that of the original delegator. In many instances, the amount of access delegated may reduce as delegation provides from delegator to delegatee. However, as noted above, a particular delegatee may have privileges that are independent of that which is granted by one or more session credentials.",{"@attributes":{"id":"p-0128","num":"0132"},"figref":["FIG. 19","FIG. 18"],"b":["1900","1900","1902","1900","1904","1906","1908","1906","1910","1802","1804","1804","1806"]},"Returning to , a determination may be then made  whether policy allows the parent delegator the requested access and, if not, the requested access may be denied. The determination whether the policy allows a parent delegator requested access may be made in any suitable way. For example, policy information stored by a computing resource may be checked for the delegator. Similarly, when a session credential is used in connection with a delegation request to generate another session credential, any policy applicable to the delegator that is in the session credential used for the request may be encoded in the new session credential that is generated. In other words, a session credential may encode policy information for multiple delegators in a chain. Similarly, information identifying the delegator may be encoded in the session credential and subsequently encoded in another session credential.","If it is determined the policy allows the parent delegator the requested access, a determination may be made  whether there are additional parent delegators. For example, in an embodiment, information identifying delegators in a chain may be encoded by a session credential and such information may be used in making the determination whether there are additional parent delegators. Information identifying delegators in a chain may also be stored outside of a session credential and checked. If it is determined that there are additional parent delegators, the policy set for the next parent delegator may be accessed  and a determination be made  whether that parent delegator is allowed the requested access by policy. If the requested access would not have been allowed to the parent delegator, then the requested access may be denied  and if the requested access would be allowed, then the determination may be made  whether there are additional parent delegators. This process may continue until it is determined that there are no additional parent delegators. When determined that there are no additional parent delegators (which, in this illustrative example, corresponds to no parent delegators being determined to be prohibited from the requested access), the requested access may be provided  to the delegatee that submitted the request for which the process  is being performed.","As noted, the various techniques described and suggested herein allow access to one or more computing resources to be delegated in a manner that prevents any particular delegator from actually providing more access than he or she actually has. In addition, the techniques described and suggested herein allow a convenient mechanism for revocation of access from one or more delegatees. As noted above in connection with , policies in connection with session credentials in an embodiment are late finding. That is, policy is checked at the time a request for access to a computing resource is made. In this manner, access to a delegatee that has been granted may be revoked by revoking such access from a delegator.","As with any process described herein, variations are considered as being within the scope of the present disclosure. For example,  shows a process in which policy sets applicable to delegators in a chain of delegation are sequentially checked. However, in other embodiments, ensuring that no delegator delegated more access than he or she has may be performed in various ways. For example, all delegators in a chain may be initially identified and applicable policy sets may be accessed accordingly. Determining whether to provide a delegatee requested access may be performed by checking the combination of accessed policy sets. As another example, as discussed, a delegatee\/delegator in a chain of delegation may himself or herself have more privileges than a delegator higher in the chain. A process, such as the process , may be modified accordingly to take into account that a delegatee\/delegator may have privileges in addition to any privileges provided via one or more session credentials. For example, a process may provide access to a delegatee upon determination that a delegator (regardless of position in a chain) independently was able to delegate the access and, in fact, such access was delegated to the delegatee (e.g., another delegator below the delegator in a chain did not limit such access when delegating).","Embodiments of the present disclosure provide for a convenient mechanism for revoking access that has been delegated using one or more session credentials.  accordingly shows an illustrative example of a process  that may be used to revoke access to a delegatee. Generally, in embodiments employing late binding semantics, access to a delegatee may be revoked by revoking appropriate privileges of a delegator. In this manner, when a check is made whether the delegator was able to delegate access (e.g. whether the delegator himself or herself had privileges to the access that has been requested by the delegatee), it may be determined that the delegator was not able to delegate the requested access and, therefore, access to the delegatee may be denied.","In an embodiment, the process  includes receiving  a request to revoke access to a delegator. While described herein as a request to revoke access to a delegator, the request may be a request to revoke access to a delegatee. In an embodiment, a policy set applicable to the delegator is updated  to revoke access to the delegator. The policy set may be updated in a policy management service or at a computing resource, or in any other suitable manner. In an embodiment when a request for access from a delegatee is received , a process for checking whether the delegatee has rights to the requested access may be checked. A process, for example, such as the process  described above in connection with  may be performed. Accordingly, the requested access may be then denied  to the delegatee when, even though a session credential may indicate that the delegatee has such access and at some point such access was actually delegated, the delegator does not have access at the time of the request. In an embodiment, the rights to delegate access is itself a right that may be controlled by policy. Thus, in connection with processes such as the process  described above in connection with , if a delegator did not actually have a right to delegate access checking, the policy applicable to the delegator would indicate such and access to a delegatee may be denied accordingly. However, policy may be checked during processes for generating session credentials.","As noted, in some embodiments, a delegator is able to cause a session credential to be generated that indicates access that the delegator cannot actually delegate, for example, because he or she does not have the access himself or herself. In other words, a session credential may be generated that incorrectly indicates that certain access has been delegated. In this manner, the delegator does not need to keep track of his or her privileges. However, in some instances, it may be desirable to prevent users from generating such credentials. In an embodiment, generation of such session credentials may be at least sometimes avoided by checking policy at the time of session credential creation. , accordingly, shows an illustrative example  of how policy may be checked in order to determine whether to generate and provide a session credential.","In an embodiment, the process  includes receiving  a delegation request with parameters for access delegation from a delegator. A policy set applicable to the delegator may then be accessed . The delegation request, receipt thereof, and access of the policy set may be performed in a manner such as described above. In an embodiment, a determination is made  whether the delegator is allowed to delegate access. If a delegator is not allowed to delegate access, then the delegation request may be denied  and a session credential may not be generated. Determining whether the delegator is allowed to delegate access may be performed by checking the access policy applicable to the delegator. If it is determined  that the delegator is, in fact, allowed to delegate access, then in an embodiment a determination is made  whether the parameters of the delegation request comply with the accessed policy set. As one example, if the parameters indicate that a delegatee would be able to delete files, yet the delegator does not have the right to delete files, then a determination may be made that the parameters do not comply with the policy set. If the determination  is that the parameters do not comply with the policy set, then the delegation request may then be denied  (or a session credential may be created according to the access that the delegator actually has, which may be less than specified in the delegation request). If, however, the parameters do, in fact, comply with the policy set, then a session credential may then be generated  and the session credential may be provided  such as in a manner described above.","It should be noted that techniques of the present disclosure are also applicable in situations where access is not necessarily delegated. Such situations may be thought of, for example, as the delegator delegating to himself or herself. A delegator may, for instance, have certain privileges upon authentication but may be required to obtain additional privileges to gain additional privileges. As a security measure, for example, certain operations may require additional authentication which may be valid for a short period of time.  provides an illustrative example of a diagram  illustrating how a user may delegate access to himself. In  a delegator  submits a delegation request to a session-based authentication service  which may be a session-based authentication service such as described above. Submission of the delegation request may involve the delegator completing an authentication process, which may be additional to an authentication process that the delegator has already completed. Submission of the delegation request may also involve submission of a session credential that the delegator has obtained, although the delegator may submit the delegation request without such a session credential in some embodiments. In other words, the delegator may be a delegatee that is using an obtained session credential to obtain another session credential.","The session-based authentication service  may, in response to the delegation request, generate a temporary session credential and provide the temporary session credential to the user . The user  may utilize the received session credential to access a computing resource  which has policy updated by a policy management service  in accordance with the above description. The user  may, for example, utilize the session credential in the same way that the delegatees described above may utilize session credentials. The processes described above may also be applicable. As depicted in , for example, the user  submits a session credential to the computing resource  in connection with a request made to the computing resource . The computing resource  may utilize the session credential in determining whether or not to provide access to the user . A response may be transmitted from the computing resource  to the user  as described above. The computing resource  may verify that the user  has a right to the requested access by analyzing policy encoded in the session credential and in policy otherwise accessible to the computing resource . In this manner, processes described above are performed as if the delegatee and delegator are the same person which, in this case, they are.","Use of a session credential such as illustrated in  may be advantageous in various situations, such as when a user authenticates himself or herself to a system but needs further authentication in order to gain additional access. The user (delegator), for example, may authenticate himself or herself to a storage service computing resource. Authentication by itself may allow the user to read information that is performed read operations in connection with information stored using the storage service. A policy, however, may state that deleting any files that are stored using the storage service must require additional authentication such as multifactor authentication which may utilize various additional authentication techniques such as biometric techniques, SecureID authentication methods utilizing services provided by RSA Security, a division of EMC Corporation, and\/or other techniques. In this manner a session token of a session credential may encode a type of authentication utilized by a user to authenticate himself or herself in order to avoid the user having to authenticate himself using that type of authentication additional times.",{"@attributes":{"id":"p-0140","num":"0144"},"figref":"FIG. 23","b":["2300","2300","2302","2304","2306","2308"]},"As noted above, the type of authentication that was required of a user may be important for accessing a computing resource.  accordingly shows an illustrative example of a process  for providing access to a user that takes into account information regarding the user's authentication state (e.g. if and how the user authenticated himself). In an embodiment, a session credential is received  in connection with a request for access. The session credential may be received in any suitable manner such as in the manner described above. The received session credential may be decrypted  to access the session information of the session credential. An applicable policy set may be accessed  from the accessed session information and\/or from other locations, such as described above.","In an embodiment, a determination is made  whether a session of the session credential has expired and, if the session has expired, then requested access may be denied . If, however, the session is not expired a determination may be made  based at least in part on the accessed session information and policy information whether the authentication type indicated in the session information is sufficient for the requested access. If the authentication type is insufficient for the requested access, the requested access may be denied . If, however, the authentication type is in fact sufficient for the requested access, then a determination may be made  based at least in part on the policy information whether the requested access is allowed by policy. If the requested access is not allowed by policy the requested access may be denied and if the requested access is allowed by policy, the requested access may be provided  as described above.","As noted, various information about what a user has done to authenticate himself or himself may be encoded in a session credential. Accordingly,  shows an illustrative example of a process  that may be used in such instances. In an embodiment the process  includes receiving  a request for access from a user. Such information and the applicable policy set may be obtained , such as in the manner described above. For example, the user may have provided a session credential in connection with the request that was received. In an embodiment, a determination is made based at least in part on the session information and the applicable policy set whether the user's current authentication state is sufficient and if the current authentication state is insufficient the request for access may be denied .","As a specific example, the request may have been a request to perform an operation in a set of data. A policy applicable to such an operation may indicate that such an operation can only be made when a user having authority to perform the operation has authenticated himself or herself using a particular form of authentication in a certain amount of time, such as ten minutes. The operation may be, for example, deleting information that is stored using a storage service computing resource. Such a policy may be in place to prevent inadvertent and\/or malicious deletion of information. If it is determined  that the user's current authentication state is sufficient the requested access may be provided  such as in a manner described above. As noted, when policy indicates that the request for access cannot be performed, requested access may be denied.",{"@attributes":{"id":"p-0145","num":"0149"},"figref":"FIG. 26","b":"2600"},"Various techniques described herein are also applicable in other instances. A virtual resource provider (or generally any computing resource provider), for example, may charge customers based on various actions performed by a customer. For example, the transformation of information to and from a virtual resource provider, or generally any resource provider, may be charged according to the amount of information being sent. Any aspect of a computing environment may be measured and utilized as the basis for charging customers of the resource provider. In this manner it may be important for customers to be careful about how they utilize resources of a resource provider in order to avoid excess charges. A policy in place may, for example, indicate that certain employees are only able to incur charges of a certain amount. A policy may be applicable to all employees or to possible lower level employees.",{"@attributes":{"id":"p-0147","num":"0151"},"figref":"FIG. 27","b":["2700","2702","2704","2706","2710"]},{"@attributes":{"id":"p-0148","num":"0152"},"figref":"FIG. 28","b":["2800","2800"]},"Generally, the various embodiments described herein may be implemented in a wide variety of operating environments, which in some cases may include one or more user computers, computing devices, or processing devices which may be utilized to operate any of a number of applications. User or client devices may include any of a number of general purpose personal computers, such as desktop or laptop computers running a standard operating system, as well as cellular, wireless, and handheld devices running mobile software and capable of supporting a number of networking and messaging protocols. Such a system also may include a number of workstations running any of a variety of commercially-available operating systems and other known applications for purposes such as development and database management. These devices also may include other electronic devices, such as dummy terminals, thin-clients, gaming systems, and other devices capable of communicating via a network.","Most embodiments utilize at least one network that would be familiar to those skilled in the art for supporting communications using any of a variety of commercially-available protocols, such as TCP\/IP, OSI, FTP, UPnP, NFS, CIFS, and AppleTalk. Such a network may include, for example, a local area network, a wide-area network, a virtual private network, the Internet, an intranet, an extranet, a public switched telephone network, an infrared network, a wireless network, and any combination thereof. The network may, furthermore, incorporate any suitable network topology. Examples of suitable network topologies include, but are not limited to, simple point-to-point, star topology, self organizing peer-to-peer topologies, and combinations thereof.","In embodiments utilizing a Web server, the Web server may run any of a variety of server or mid-tier applications, including HTTP servers, FTP servers, CGI servers, data servers, Java servers, and business application servers. The server(s) also may be capable of executing programs or scripts in response requests from user devices, such as by executing one or more Web applications that may be implemented as one or more scripts or programs written in any programming language, such as Java\u00ae, C, C# or C++, or any scripting language, such as Perl, Python, or TCL, as well as combinations thereof. The server(s) may also include database servers, including without limitation those commercially available from Oracle\u00ae, Microsoft\u00ae, Sybase\u00ae, and IBM\u00ae.","The environment may include a variety of data stores and other memory and storage media as discussed above. These may reside in a variety of locations, such as on a storage medium local to (and\/or resident in) one or more of the computers or remote from any or all of the computers across the network. In a particular set of embodiments, the information may reside in a storage-area network (\u201cSAN\u201d) familiar to those skilled in the art. Similarly, any necessary files for performing the functions attributed to the computers, servers, or other network devices may be stored locally and\/or remotely, as appropriate. Where a system includes computerized devices, each such device may include hardware elements that may be electrically coupled via a bus, the elements including, for example, at least one central processing unit (CPU), at least one input device (e.g., a mouse, keyboard, controller, touch screen, or keypad), and at least one output device (e.g., a display device, printer, or speaker). Such a system may also include one or more storage devices, such as disk drives, optical storage devices, and solid-state storage devices such as random access memory (\u201cRAM\u201d) or read-only memory (\u201cROM\u201d), as well as removable media devices, memory cards, flash cards, etc.","Such devices also may include a computer-readable storage media reader, a communications device (e.g., a modem, a network card (wireless or wired), an infrared communication device, etc.), and working memory as described above. The computer-readable storage media reader may be connected with, or configured to receive, a computer-readable storage medium, representing remote, local, fixed, and\/or removable storage devices as well as storage media for temporarily and\/or more permanently containing, storing, transmitting, and retrieving computer-readable information. The system and various devices also typically will include a number of software applications, modules including program modules, services, or other elements located within at least one working memory device, including an operating system and application programs, such as a client application or Web browser. It should be appreciated that alternate embodiments may have numerous variations from that described above. For example, customized hardware might also be utilized and\/or particular elements might be implemented in hardware, software (including portable software, such as applets), or both. Further, connection to other computing devices such as network input\/output devices may be employed.","Storage media and computer readable media for containing code, or portions of code, may include any appropriate media known or used in the art, including storage media and communication media, such as but not limited to volatile and non-volatile, removable and non-removable media implemented in any method or technology for storage and\/or transmission of information such as computer readable instructions, data structures, program modules, or other data, including RAM, ROM, EEPROM, flash memory or other memory technology, CD-ROM, digital versatile disk (DVD) or other optical storage, magnetic cassettes, magnetic tape, magnetic disk storage or other magnetic storage devices, or any other medium which may be utilized to store the desired information and which may be accessed by the a system device. Program modules, program components and\/or programmatic objects may include computer-readable and\/or computer-executable instructions of and\/or corresponding to any suitable computer programming language. In at least one embodiment, each computer-readable medium may be tangible. In at least one embodiment, each computer-readable medium may be non-transitory in time. Based on the disclosure and teachings provided herein, a person of ordinary skill in the art will appreciate other ways and\/or methods to implement the various embodiments.","The specification and drawings are, accordingly, to be regarded in an illustrative rather than a restrictive sense. It will, however, be evident that various modifications and changes may be made thereunto without departing from the broader spirit and scope of the invention as set forth in the claims.","The use of the terms \u201ca\u201d and \u201can\u201d and \u201cthe\u201d and similar referents in the context of describing embodiments (especially in the context of the following claims) are to be construed to cover both the singular and the plural, unless otherwise indicated herein or clearly contradicted by context. The terms \u201ccomprising,\u201d \u201chaving,\u201d \u201cincluding,\u201d and \u201ccontaining\u201d are to be construed as open-ended terms (i.e., meaning \u201cincluding, but not limited to,\u201d) unless otherwise noted. The term \u201cconnected\u201d is to be construed as partly or wholly contained within, attached to, or joined together, even if there is something intervening. Recitation of ranges of values herein are merely intended to serve as a shorthand method of referring individually to each separate value falling within the range, unless otherwise indicated herein, and each separate value is incorporated into the specification as if it were individually recited herein. All methods described herein can be performed in any suitable order unless otherwise indicated herein or otherwise clearly contradicted by context. The use of any and all examples, or exemplary language (e.g., \u201csuch as\u201d) provided herein, is intended merely to better illuminate embodiments and does not pose a limitation on the scope unless otherwise claimed. No language in the specification should be construed as indicating any non-claimed element as essential to the practice of at least one embodiment.","Preferred embodiments are described herein, including the best mode known to the inventors. Variations of those preferred embodiments may become apparent to those of ordinary skill in the art upon reading the foregoing description. The inventors expect skilled artisans to employ such variations as appropriate, and the inventors intend for embodiments to be constructed otherwise than as specifically described herein. Accordingly, suitable embodiments include all modifications and equivalents of the subject matter recited in the claims appended hereto as permitted by applicable law. Moreover, any combination of the above-described elements in all possible variations thereof is contemplated as being incorporated into some suitable embodiment unless otherwise indicated herein or otherwise clearly contradicted by context.","All references, including publications, patent applications, and patents, cited herein are hereby incorporated by reference to the same extent as if each reference were individually and specifically indicated to be incorporated by reference and were set forth in its entirety herein."],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"BRIEF DESCRIPTION OF THE DRAWINGS","p":["Various embodiments in accordance with the present disclosure will be described with reference to the drawings, in which:",{"@attributes":{"id":"p-0006","num":"0005"},"figref":"FIG. 1"},{"@attributes":{"id":"p-0007","num":"0006"},"figref":"FIG. 2"},{"@attributes":{"id":"p-0008","num":"0007"},"figref":"FIG. 3"},{"@attributes":{"id":"p-0009","num":"0008"},"figref":"FIG. 4"},{"@attributes":{"id":"p-0010","num":"0009"},"figref":"FIG. 5"},{"@attributes":{"id":"p-0011","num":"0010"},"figref":"FIG. 6"},{"@attributes":{"id":"p-0012","num":"0011"},"figref":"FIG. 7"},{"@attributes":{"id":"p-0013","num":"0012"},"figref":"FIG. 8"},{"@attributes":{"id":"p-0014","num":"0013"},"figref":"FIG. 9"},{"@attributes":{"id":"p-0015","num":"0014"},"figref":"FIG. 10"},{"@attributes":{"id":"p-0016","num":"0015"},"figref":"FIG. 11"},{"@attributes":{"id":"p-0017","num":"0016"},"figref":"FIG. 12"},{"@attributes":{"id":"p-0018","num":"0017"},"figref":"FIG. 13"},{"@attributes":{"id":"p-0019","num":"0018"},"figref":"FIG. 14"},{"@attributes":{"id":"p-0020","num":"0019"},"figref":"FIG. 15"},{"@attributes":{"id":"p-0021","num":"0020"},"figref":"FIG. 16"},{"@attributes":{"id":"p-0022","num":"0021"},"figref":"FIG. 17"},{"@attributes":{"id":"p-0023","num":"0022"},"figref":"FIG. 18"},{"@attributes":{"id":"p-0024","num":"0023"},"figref":"FIG. 19"},{"@attributes":{"id":"p-0025","num":"0024"},"figref":"FIG. 20"},{"@attributes":{"id":"p-0026","num":"0025"},"figref":"FIG. 21"},{"@attributes":{"id":"p-0027","num":"0026"},"figref":"FIG. 22"},{"@attributes":{"id":"p-0028","num":"0027"},"figref":"FIG. 23"},{"@attributes":{"id":"p-0029","num":"0028"},"figref":"FIG. 24"},{"@attributes":{"id":"p-0030","num":"0029"},"figref":"FIG. 25"},{"@attributes":{"id":"p-0031","num":"0030"},"figref":"FIG. 26"},{"@attributes":{"id":"p-0032","num":"0031"},"figref":"FIG. 27"},{"@attributes":{"id":"p-0033","num":"0032"},"figref":"FIG. 28"}]},"DETDESC":[{},{}]}
