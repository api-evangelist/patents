---
title: Object manipulators and functionality
abstract: A method, apparatus, and article of manufacture provide the ability to display and use object manipulators in a computer graphics program. In some embodiments, an object manipulator (i.e., a button object manipulator or traditional object manipulator) is displayed on a graphics object and activated. In response to the activation, a property of the graphics object is directly modified. Various forms and properties of the object manipulator provide additional capabilities that may assist the user in the graphics program.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=07110005&OS=07110005&RS=07110005
owner: Autodesk, Inc.
number: 07110005
owner_city: San Rafael
owner_country: US
publication_date: 20030908
---

{"@attributes":{"id":"description"},"RELAPP":[{},{}],"heading":["CROSS-REFERENCE TO RELATED APPLICATIONS","BACKGROUND OF THE INVENTION","SUMMARY OF THE INVENTION","DETAILED DESCRIPTION OF THE PREFERRED EMBODIMENTS"],"p":["This application claims the benefit under 35 U.S.C. Section 119(e) of the following and commonly-assigned U.S. provisional patent application(s), which is\/are incorporated by reference herein:","U.S. Provisional Patent Application Ser. No. 60\/408,710, entitled \u201cDISPLAY AND USE OF OBJECT MANIPULATORS\u201d, by Scott Anthony Arvin, Marc W. Schindewolf, Rostislaw Starodub, Dianne Smith Phillips, Mandar Shashikant Garge, Paul Joseph McArdle, and John G. Ford III, filed on Sep. 6, 2002.","This application is related to the following co-pending and commonly-assigned patent application, which application is incorporated by reference herein:","U.S. patent application Ser. No. 10\/657,427, entitled \u201cTEMPORARY TEXT AND GRAPHIC FEEDBACK FOR OBJECT MANIPULATORS\u201d, by Scott Anthony Arvin, filed on the same date herewith,","1. Field of the Invention","The present invention relates generally to computer graphics programs, and in particular, to a method, apparatus, and article of manufacture for using object manipulators in a computer graphics program.","2. Description of the Related Art","The use of graphics programs such as Computer Aided Design (CAD) application programs is well known in the art. CAD drawings often have many components (referred to as objects or graphics objects) that together define the drawing. In most computer applications that create and modify graphic objects, an object manipulator is a standard mechanism used to modify the geometric properties of the graphic object. However, the nature and use of object manipulators in the prior art is limited to that of modifying an object's geometric properties. Such limitations are undesirable and reduce the flexibility and usability of computer graphics applications. These problems may be better understood by describing prior art drawing programs, object properties, object manipulators, and property modification techniques.","Drawing Programs","CAD applications are often used to create drawings used in the architectural, engineering, and construction (AEC) industry. The drawings are often defined by a collection of one or more graphical elements (referred to as objects), such as lines, circles, polylines, text, or dimensions. For example, a collection of various lines may make up a door or window object. CAD programs may treat each object as a single element for creation, manipulation, and modification. Some CAD programs may also provide objects that are special entities with predefined behaviors and display characteristics. Thus, the objects in a CAD program may be object-oriented objects having various methods\/behaviors and properties (including display characteristics).","Information relating to an object may be entered and defined in one or more properties of the object. For example, users may have the capability to enter information about the style, dimensions, location, schedule data, display information and\/or other important characteristics of an object.","Object Properties","To edit and maintain an object and\/or properties of the object, various methodologies may be available. For example, a properties window may provide a common \u201cone stop\u201d location where a user can manage object properties without having to use individual typed commands. Such a properties window may list the current settings for all object properties, and allow the properties to be viewed alphabetically or by category. To change a property, the property may be selected from the list and a new value may be selected or entered.","Object Manipulators","As described above, an object manipulator is a prior art mechanism used to modify the geometric properties of a graphic object. Other names for object manipulators are handles, or grips. An object manipulator is typically implemented as a glyph or symbol, such as a small square, displayed at some geometrically meaningful point on the object to be manipulated.",{"@attributes":{"id":"p-0014","num":"0013"},"figref":"FIG. 1","b":["100","102","102"]},"The typical way to interact with an object manipulator  is to place an identifier (e.g., a cursor) controlled by a pointing device (e.g., a computer mouse) over the manipulator , activating the manipulator  by clicking a physical button on the pointing device, dragging the pointing device to change the position of the manipulator , and finally clicking the pointing device again to set the desired value of the object feature being manipulated. However, in the prior art, object manipulators  may only be used to alter the geometric properties (e.g., vertex position, shape, etc.) of an object by dragging the manipulator.","Buttons","To adjust object properties other than geometric properties, the prior art may rely on the use of buttons. As illustrated in , in standard computer user interfaces, a button  is a common control used to initiate an action to modify some aspect of the state of the interface. The button  displays text (e.g., \u201cSAVE\u201d) or icon graphics to provide information to the user as to the results of activating the button . The typical way to interact with a button  is to place an identifier (e.g., a cursor) controlled by a pointing device (e.g., a computer mouse) over the button , and activating the button  by clicking a physical button on the pointing device. Once activated, an action is performed or the state of the interface is modified.","Accordingly, what is needed is the capability to edit an object's properties (geometric and otherwise) in an intuitive, easy, and understandable manner.","One or more embodiments of the invention provide a method, apparatus, and article of manufacture for modifying a property of an object using object manipulators. The object manipulators may take various forms, glyphs\/shapes, and colors to facilitate ease of use and understanding by the user. Additionally, various additional graphic images may be displayed to assist the user in accomplishing a desired task. Further, a property of an object may be constrained in a variety of manners. Such constraints may be reflected in\/by object manipulators and\/or the use of object manipulators.","In the following description, reference is made to the accompanying drawings which form a part hereof, and which is shown, by way of illustration, several embodiments of the present invention. It is understood that other embodiments may be utilized and structural changes may be made without departing from the scope of the present invention.","Hardware Environment",{"@attributes":{"id":"p-0043","num":"0042"},"figref":"FIG. 3","b":["300","302","304","306","300"]},"One or more embodiments of the invention are implemented by a computer-implemented graphics program  (e.g., a computer-aided design [CAD] program), wherein the graphics program  is represented by a window displayed on the display device . Generally, the graphics program  comprises logic and\/or data embodied in or readable from a device, media, carrier, or signal, e.g., one or more fixed and\/or removable data storage devices  connected directly or indirectly to the computer , one or more remote devices coupled to the computer  via a data communications device, etc.","Those skilled in the art will recognize that the exemplary environment illustrated in  is not intended to limit the present invention. Indeed, those skilled in the art will recognize that other alternative environments may be used without departing from the scope of the present invention.","Software Embodiments",{"@attributes":{"id":"p-0046","num":"0045"},"figref":"FIG. 4","b":["308","308","400","402","404","406"]},"The Graphical User Interface  displays information to the operator and provides the functionality for the operator's interaction with the graphics program .","The Image Engine  processes the DWG files  and delivers the resulting graphics to the monitor  for display. In one or more embodiments, the Image Engine  provides a complete application programming interface (API) that allows other computer programs to interface to the graphics program  as needed.","The Database  is comprised of two separate types of databases: (1) a 3D database  known as the \u201c3D world space\u201d that stores 3D information; and (2) one or more 2D databases  known as the \u201c2D view ports\u201d that stores 2D information derived from the 3D information.","Object List",{"@attributes":{"id":"p-0050","num":"0049"},"figref":"FIG. 5","b":["500","408","500","502","504","506","500","408","504","500","408"]},"Terminology","As used herein, certain terms may be used frequently. The following provides definitions and descriptions for such terminology. However, the terminology definitions and descriptions provided herein are not intended to limit the scope of the invention and alternative meanings of such terms remain within the scope of the invention.","A \u201cglyph\u201d is a symbol that conveys information nonverbally. A glyph may have the following properties:\n\n","A \u201cgrip\u201d is a glyph that has been positioned on an object and has an active area within which a pointing device will \u201csnap\u201d to the grip's position. The grip indicates that an action can be performed on the object, and defines the behavior of that action. A custom grip may have the following characteristics:\n\n","The standard unconstrained grip that may appear on graphics objects may have a glyph shape that is identical to the grip area in plan view and the glyph scale may be equal to one (1).","Button Object Manipulators\/Trigger Grips","As described above, the prior art relies on object manipulators (e.g., a grip) and or buttons to alter an object or the object's properties. Prior art object manipulators\/grips are also referred to as drag grips. To use the drag grip, the user selects the grip, drags the pointing device, selects a new point, and some parameter on the object is updated based on the vector between the original grip position and the selected point.","One or more embodiments of the invention combines the behavior of multiple prior art controls (i.e., the object manipulator control\/grip and button control) to create an object manipulator (also referred to as a trigger grip) that is used as a button. Accordingly, the trigger grip is a new type of grip that changes an object (i.e., modifies a property [or state of an associated parameter] of a graphic object) by activating the grip\/manipulator without the need for conducting a drag operation (or conducting any additional interaction from\/with the user).","The trigger grip immediately performs an action on an object when a user selects it, as opposed to the normal drag grip, which changes a dimension property only when a user drags it. Trigger grips may be used to set discrete properties of an object, such as the swing direction of a door or the justification of a wall. Trigger grips may also be used to change the grip edit mode of an object (i.e., the manner\/mode in which a grip may be used to edit an object). For example, selecting an Edit Grid grip in a curtain wall may initiate an in-place editing mode for the curtain wall grid.","The trigger grip may behave in various manners when selected by a user. In one or more embodiments, trigger grips perform some action or change some property immediately upon selection. Accordingly, the user selects the grip, and the object is changed in some way. Further, the grip does not remain selected. For example,  shows a rectangle  with an object manipulator\/trigger grip  located at the rectangle's center. By activating the manipulator , the fill property of the rectangle  may be modified, resulting in the image shown in .","Trigger grips make take the form of various shapes.  illustrates an example of some of the shapes, names, and descriptions that may be possible for a trigger grip in accordance with one or more embodiments of the invention.","Using Button Object Manipulators to Change Edit State","In the prior art, multiple grips may be simultaneously displayed. The display of multiple grips simultaneously may be confusing and may crowd the display. Further, if multiple grips are located near each other, the user may have difficulty selecting a particular grip. In one or more embodiment of the invention, a button object manipulator may be used to change the manipulators\/grips on the object being manipulated from one set of manipulators to another.","For example, in , a rectangle has a button manipulator  at the rectangle's center and has drag manipulators  at each vertex. Activating the button manipulator  removes the vertex manipulators  and displays a new set of manipulators  in the middle of each edge, as shown in .","Using Button Object Manipulators to Set Potential Discrete Values","As described above, prior art grips were limited to altering geometric properties of an object. However, using the grips to alter the geometric properties could potentially be confusing (e.g., when multiple possible geometric properties are available). Further, prior art grips were not and could not be used to modify discrete values for properties of an object.","In one or more embodiments of the invention, one or more button object manipulators are used to set one or more discrete object property values. This method can be used to display to the user a discrete number of acceptable property values, or to display manipulators in geometrically meaningful locations on the object when the language-based descriptions of the associated properties are potentially geometrically confusing.","For example, a graphics application might have a rectangle with possible horizontal alignment values of Left, Center, and Right, and possible vertical alignment values of Top, Middle, and Bottom. Further, the rectangle might be drawn using those alignment properties relative to its specified location. Thus, the rectangle could be drawn in different positions by changing its alignment but not its location.",{"@attributes":{"id":"p-0065","num":"0081"},"figref":["FIG. 9A","FIG. 9B"],"b":["902","904","900","906","906"]},"Using Object Manipulator Color to Indicate Potential Changes to Other Objects","In prior art computer graphics applications object manipulators may be colored for a variety of reasons. For example, the color of a manipulator may be set to indicate something about the feature being manipulated (e.g. on a solid modeling object, vertex manipulators might be one color, while edge manipulators might be another color). Alternatively, the color of the manipulator may indicate the selection state of the object selected. For example, one object in a selection set containing multiple objects might be one color, while all of the other objects might be another color. Such a coloring of a single object in a set may indicate that the single object is considered the primary selection.","In one or more embodiments of the invention, the color of object manipulators indicates whether or not the object itself, or other, non-selected, objects will be affected by interacting with the object manipulator. For example, light colored manipulators might indicate that only the object being manipulated will be affected by the interaction, while dark colored manipulators might indicate that not only the selected object, but all other objects with similar properties will be affected by the interaction. The different colors may be useful to warn the user that the consequences of using the object manipulator extend beyond the selected object.",{"@attributes":{"id":"p-0068","num":"0084"},"figref":"FIG. 10","b":["1000","1000","1000","1000","1000","1000","1000","1000","1000","1000","1000","1000","1000"]},"In addition, using a color to indicate that only a property of the object itself will be changed is useful when using a button object manipulator to change the editing state of the object.",{"@attributes":{"id":"p-0070","num":"0086"},"figref":"FIG. 11"},"The Secondary Object color may be used to identify a set of grips on one object that is related to another object being edited. For example, if the anchor of a door in a wall is being edited, the door's grips use the Object grip color, and the grips aligned with the wall use the Secondary Object grip color.","The Style color may be used to indicate that the value being edited by the grip is a style value, and will affect all objects with the same style as the selected object.","The Auxiliary color may be used for miscellaneous grips that do not immediately change an object's properties. For example, the auxiliary color may be used for changing the edit state of a grip or changing the current shape being edited. The Auxiliary Dark color may be used for Free Form Mass Element Edit Face grips, for faces pointing away from the viewport.","The Hover color may indicate when the user has snapped to the grip, but hasn't selected the grip. Thus, the hover color may be used to provide feedback to the user when there are many grips in a small area.","Lastly, the Selected color may indicate that the grip has been selected.","View Dependent Visibility of Oriented Object Manipulators","In some prior art graphic applications that create and modify three-dimensional objects, the object manipulators may be oriented so as to align with the object, making it easier to understand what property the manipulator will modify and how the property\/object will behave.","In one or more embodiments of the invention, object manipulators oriented to the object being manipulated may be reoriented or not visible in certain viewing directions where the orientation of the manipulator might be visually confusing or indistinct. For example,  shows a three-dimensional view of a box, with a triangular object manipulator  to modify the box's height.  shows the same box viewed from a different direction, where the height manipulator  is difficult to see and interact with.",{"@attributes":{"id":"p-0078","num":"0094"},"figref":["FIG. 12C","FIG. 12B"],"b":"1200"},{"@attributes":{"id":"p-0079","num":"0095"},"figref":["FIG. 12D","FIG. 12B"],"b":["1200","1200"]},"Modifying Object Manipulator Function with Discrete Key Presses","In the prior art, an object manipulator may have only one function. Further, in some applications, holding down a control key such as the Shift key modifies or constrains the cursor point relative to the manipulator, such as constraining cursor movement from the manipulator horizontally or vertically. Another prior art approach is to change the set of manipulators on an object by repeatedly clicking on the object with the pointing device, where each click cycles through a small set of manipulators. However, the prior art fails to provide the ability for a single manipulator to have multiple functions and the ability to easily step through or select the desired function of the single particular manipulator.","In one or more embodiments of the invention, some object grips have multiple functions. For example, a face grip on a freeform mass element may have the following possible grip modes:\n\n","The function of an object manipulator may be modified after it has been activated when a control key, such as the Ctrl key, is pressed and released (e.g., and not simply held down). Further, an object manipulator may have a default function\/action associated with it that may be invoked when the manipulator is activated with\/without using the control key. Once activated (or with the first selection of the manipulator), the control key may be used to cycle to the next editing mode. The control key may only need to be activated\/depressed once, and then released. Such activation cycles the grip to the next editing mode. After releasing the control key, the user may start editing the grip\/object. An alternate key, such as pressing the control and shift keys simultaneously, may cycle the grip to the previous editing mode. In this regard, there is no need to continue pressing the control key while editing the grip.",{"@attributes":{"id":"p-0083","num":"0105"},"figref":["FIGS. 13A\u201313D","FIG. 13A","FIG. 13B","FIG. 13C"],"b":["1300","1300","1300","1300"]},"One potential advantage of such capability is that multiple functions can be assigned to one manipulator , thereby reducing the number of individual manipulators  displayed on the object and thereby reducing visual complexity.","Cursor Graphics to Display Object Manipulator Function State","In the prior art, the function associated with a particular object manipulator may be unknown. For example, without actually activating and experimenting with an object manipulator, the user may not know what function will be performed by activating the manipulator.","In one or more embodiments of the invention, a graphic image may be displayed near the cursor of the pointing device to graphically indicate the manipulator's current function state. Accordingly, if a single object manipulator has multiple functions, which the user is able to cycle through, the user can easily visually identify the manipulator's current function state.","For example, referring to , a manipulator  located on the edge of a rectangle may be used to change the width of the rectangle as one function. A graphic image  indicating such functionality may be displayed near the cursor as illustrated in . If the function of the same manipulator  was changed in some way to be used to skew the rectangle, a different graphic image  may be displayed, as shown in .","Such a display of functionality may provide various advantages. For example, by displaying the graphic image, the user may be made aware that different functionality exists for the manipulator. Further, the graphic image may provide some indication of what the current functionality is.","Graphic Display of Object Manipulator Constraints","When a grip is selected and dragged, the grip's final position may not be the same as the current cursor position, which might be constrained in some way. Accordingly, each grip may have a constraint defined for it, so that user input is constrained to valid values. One of the challenges with using a two-dimensional pointing device in a three-dimensional graphic application is indicating on a two-dimensional viewing screen where the user's current location is in three-dimensional space. Often the user must visually determine where the current position of the pointing device is in relation to the three-dimensional model the user is working in. This problem is exacerbated when the movement of the pointing device is projected in some way.","Accordingly, in one or more embodiments of the invention, graphic feedback may be provided to indicate where the current cursor position is located in three-dimensional space and how the current cursor position is constrained. To indicate a position of a cursor and how user input is constrained, a line or arc (e.g., a dotted line or arc) may be drawn from the current cursor position to a constrained point. Such a line or arc may be referred to as a projection. Further, when interaction with an object manipulator is constrained is some way, and the current position of a pointing device in three-dimensional space is projected in some way to a point other than the current point, graphics may be drawn between the current point and the resulting point to indicate the progress of that projection.","Various general constraint types may be used by a grip and may typically work in three-dimensional as well as two-dimensional space. For example, a constrain-to-plane grip constraint may project user input to a point (e.g., the nearest point) on a specified plane. In this regard, if a constraint has a plane defined for it, a point not on the plane may first be constrained to the nearest point on the plane, then constrained to some other point or specific geometry depending on the rules of the individual constraint.  illustrate the graphic display of a constrain-to-line grip constraint () and a constrain-to-circle grip constraint ().","Referring to , a constrain-to-line grip constraint may project user input from the cursor position  to a point  (e.g., the nearest point) on a specified infinite line. If a plane normal is specified along with the line, user input may first be projected from the cursor position  to a point  on the plane (i.e., the nearest point  on the plane), and may then be projected to a point  on the line (i.e., the nearest point on the line).","Referring to , a constrain-to-circle grip constraint may project user input from a cursor position  to a point  (e.g., the nearest point) on a specified circle. If a plane is specified, the cursor position  is first projected to a point  on the plane of the circle, and then to a point  on the circle.","Another example of a type of constraint is a constrain-to-line-ray grip constraint which may project user input perpendicularly to a point on a specified line ray. Similar to the line grip constraint, if a plane normal is specified along with the line ray, user input may first be projected to the plane, and then to the line ray. A constrain-to-radial-ray grip constraint may project user input radially to a point on a specified line ray on a specified plane. In this regard, the point be first be projected to the nearest point on the plane, and then projected to a point on the line ray with the same distance to the ray base point as the point on the plane.","A constrain-to-line-segment grip constraint may project user input to a point on a specified line segment. However, if the nearest point is not on the line segment, the point may be constrained to the nearest end point.","Another type of constraint is a constrain-to-polyline grip constraint that may project user input to a point (e.g., the nearest point) on a polyline.","Constraining Object Manipulator Movement to Discrete Dimensional Values","As described above, various types of constraints may be available. In this regard, an object manipulator that is used to set a dimensional property on an object can be positioned at any point on a plane or in three-dimensional space.","In one or more embodiments of the invention, the user may have the capability to constrain grip movement to discrete dimensional values. For example, the movement of a grip may be constrained to a pre-specified set of values.",{"@attributes":{"id":"p-0099","num":"0121"},"figref":"FIG. 16","b":["1602","1606","1606","1608","1602","1604","1606","1608","1602","1604","1606","1608","1602","1604","1606","1608","1606"]},"A constrain-to-line-segment-by-values grip constraint is basically a combination of constrain-to-line-ray-by-values constraint and constrain-to-line-segment grip constraint. Typically, a grip with a \u201cby values\u201d constraint may also provide the user with a means to enter custom values, such as by holding the Ctrl key while dragging. The \u201cby values\u201d part of a constrain-to-line-segment-by-values constraint acts like a constrain-to-line-ray-by-values constraint, in that the valid values may be measured from a single base point. The \u201ccustom\u201d part of the constraint acts like a constrain-to-line-segment constraint.","Cursor Graphics to Indicate Constraint Errors","While graphics may illustrate the various projections for the various types of constraints, the invention may also provide for displaying a bitmap image at the current cursor position if selecting that position will result in an error condition when interacting with an activated object manipulator.","For example, in  cursor  movement is constrained to a specified line segment whose endpoints  are indicated with the black dots. If the current cursor  position projects to an invalid point , a bitmap image  is displayed at the cursor , as shown at the cursor positions  at the far left and far right.","In addition to the above, when a constraint has a valid range (e.g., as a line ray or line segment constraint), if the normal constrain results in the constrained point being located beyond the valid range, the linetype for the normal projection graphics may change to a red dashed line.","Object Manipulator Glyph to Indicate Alignment","Object manipulators may be located at geometric points on the object to be manipulated. In accordance with one or more embodiments of the invention, the shape of the object manipulator is used to indicate the desired alignment. For example,  illustrates the use of a diamond shape as an object manipulator. The various positions of the diamond indicate alignment with a line, circle, or other shape. The diamond shaped object manipulator can be located at any point along the line or circle and still provide the same function. As illustrated, the diamond is oriented horizontally and may indicate left, center, or right justifications. Alternatively, when placed on a line, the diamond may indicate justification with the line where the diamond is located (e.g., the baseline of ).","Referring to , in a case where alignment along two different axes is required, a cross shaped manipulator  may be used to indicate double alignment, in other words a point. Thus, the shape\/glyph of the grip may change to indicate the alignment.","Translucent Object Manipulators","In the prior art, object manipulators\/grips are opaque, which results in parts of the object being manipulated being hidden. Further, object manipulators may also be displayed at a constant size, so if the object is very small in the current view, the entire object may often be hidden behind the opaque manipulators.","In one or more embodiments of the invention, object manipulators may be displayed with translucent\/transparent colors. Such coloring provides the ability to see the object being manipulated behind the manipulators.  illustrates a translucent colored object manipulator  in accordance with one or more embodiments of the invention. Object manipulators  are translucent so that the door object being manipulated remains visible through the manipulators .","Proximity Dependent Visibility of Object Manipulators","Multiple object manipulators may be defined for the manipulation of a particular object. In the prior art, all of the manipulators are displayed regardless of the current viewing direction of the object. Often, particularly when the object is visually small on the viewing device, two manipulators will overlap each other. Such an overlap of manipulators results in potentially difficult or confusing use or interaction with the manipulators. For example, when a user desires to use a single particular object manipulator on an object with multiple manipulators located confusingly proximate to each other, the user may not know which manipulator the cursor is located over and may not select the desired manipulator.","One or more embodiments of the invention provide a method of controlling the visibility of an object manipulator based on the manipulator's visual proximity to other manipulators present on the object to be manipulated. All manipulators that can be potentially displayed on an object may be identified with a proximity priority. When two manipulators are displayed within a specified proximity, such as the apparent visual size or the active region of the manipulator, the manipulator with the lower priority may not be displayed, thus simplifying the visual display of the manipulators, and by extension simplifying the use and interaction of the manipulators. The active region of a manipulator may be defined as that region relative to the manipulator graphics that activates interaction with the manipulator when the user positions the cursor of a pointing device over the region and activates the pointing device.","For example,  illustrates a rectangle selected in one view, with object manipulators  displayed on the rectangle's vertices and edges.  shows the same rectangle selected in a different view, which has a different zoom factor, making the rectangle appear visually smaller than it is in the view in . Since object manipulators are usually displayed with a constant relative size and not scaled with the object being manipulated, the edge manipulators on each side overlap with their corresponding vertex manipulators. If the edge manipulators have a lower proximity priority, and they overlap with other manipulators, they are not displayed, as shown in .","Visibility of Object Manipulators based on Selection Quantity","As described above, once a number of object manipulators have been defined for a particular object, those manipulators are always displayed on the object when it is selected, regardless of the apparent visual scale of the object and the number of other objects currently selected. Such displaying of all object manipulators often results in an extremely large number of manipulators displayed at the same time, occluding the objects that are selected. In addition, when a large number of objects are selected the user will rarely, if ever, be interested in manipulating single properties of individual objects, but is more interested in accomplishing general operations on all of the selected objects, e.g. moving, copying, or deleting them.","In one or more embodiments of the invention whether or not manipulators are displayed on an object is based on the number of objects selected the first time. If there are currently no objects selected for editing, and the number of objects selected is less than a pre-specified number, object manipulators are displayed, otherwise the object manipulators are not displayed.","For example, suppose the user (or default) specifies a value of two or more selected objects. With such a value, when the user selects one object, all of the object manipulators (or a subset thereof) may be displayed. However, when the user selects additional objects or adds another object to the selected set of objects, the object manipulators are no longer displayed. The lack of displayed manipulators assumes that the user intends to control the objects as a group and does not desire to edit or manipulate the individual objects in the set. The lack of displayed manipulators also minimizes the display to avoid confusing the user.","Logical Flow","As described above, object manipulators (both button and traditional) provide the ability to easily modify one or more properties of an object.  is a flow chart illustrating the logical flow for using an object manipulator to display an object manipulator (button or traditional) and modify a property of a graphic object in accordance with one or more embodiments of the invention.","At step , the graphic object is displayed in a computer graphics program. The graphic object has one or more properties that may control how the graphic object is displayed. For example, properties may establish the color, size, shape, orientation, alignment, etc. of the graphic object.","At step , an object manipulator is displayed on the graphic object. While some embodiments of the invention may utilize button object manipulators, other embodiments may use traditional object manipulators (e.g., that are dragged to edit a property of an object).","In some embodiments, a set of two or more object manipulators may be displayed on the graphic object. Each object manipulator in the set may be used to manipulate the graphic object. Further, the user may easily change the set of object manipulators that are displayed. For example, the user may simply press and release the control key to change the set of object manipulators that are displayed and currently available to the user. Alternatively, the user may use a button object manipulator displayed on the graphic object to change the set of object manipulators. For example, by selecting and activating (e.g., using a cursor control device) the button object manipulator, the currently available manipulator set may be changed. Thus, the user may easily cycle through the available sets of object manipulators. Further, the user may also have the ability to create new sets, and edit or delete existing sets of the object manipulators as desired.","In alternative embodiments, multiple button object manipulators maybe displayed on the graphic object in geometrically meaningful locations. For example, as described above, when language-based descriptions of multiple properties that are associated with multiple button object manipulators are potentially geometrically confusing, the button object manipulators may be located geometrically in a manner to clarify the manipulator's function. For example, the various potential alignment options for the graphic object may be represented by placing various button object manipulators in strategic geometric locations on the graphic object that reflect those alignment options.","In addition to the above, object manipulators may be displayed in one or more colors. Such coloring may indicate whether use of the object manipulator to manipulate the object will affect one or more properties of another object. In yet another embodiment, an object manipulator may be reoriented when an initial orientation is visually confusing or indistinct. Such reorientation may make the object manipulator easier to discern. Alternatively, if the reoriented manipulator is visually confusing or indistinct, the manipulator may not be visible at all.","Object manipulators (both button and traditional) may also be displayed in a variety of different forms or glyphs. Different forms or glyphs may also indicate different functionality. For example, a particular glyph shape may indicate that the graphic object is to be aligned with respect to one or more additional objects. In such an example, a diamond shaped glyph may indicate alignment with a line, circle, or other shape object. The glyph may also be displayed in a translucent color so that the graphic object is visible behind an object manipulator.","At step , the object manipulator is activated. The activation may be invoked by placing a cursor (controlled by a pointing device) over the object manipulator and clicking a button on the pointing device to activate the object manipulator. As described above, the same object manipulator may be used to perform various discrete functions that modify one or more properties of the graphic object. The function that will be performed by a particular object manipulator is represented by the manipulator's function state. Thus, to change the function performed, after activating the object manipulator, the user may modify the object's function state (e.g., by pressing and releasing a control key). Further, so that the user may more easily identify the current function state, a graphic image may be displayed (e.g., at the location of the cursor) that graphically indicates the function state of the object manipulator","While object manipulator may often be activated at any time and at a variety of cursor locations, object manipulators may also be constrained to a certain set of values or actions. In this regard, the user may not be permitted to select certain positions when using an object manipulator. Accordingly, after activating an object manipulator, a bitmap image (e.g., a circle with a line through it) may be displayed at the cursor position if selecting the cursor position will result in an error condition when interacting with the manipulator.","At step , the property of the graphic object is modified in response to the activation. With traditional object manipulators, the manipulator may need to be dragged to modify a property of an object. However, if the object manipulator is a button object manipulator, there is no need to drag the button object manipulator to modify the property. In other words, the property is directly modified simply by activating (e.g., selecting with a cursor and pressing a physical button on a cursor control device) the button object manipulator. Alternatively, once the object manipulator (button or traditional) is activated, a discrete number of acceptable property values may be displayed for the user's selection.","Conclusion","This concludes the description of the preferred embodiment of the invention. The following describes some alternative embodiments for accomplishing the present invention. For example, any type of computer, such as a mainframe, minicomputer, or personal computer, or computer configuration, such as a timesharing mainframe, local area network, or standalone personal computer, could be used with the present invention.","The foregoing description of the preferred embodiment of the invention has been presented for the purposes of illustration and description. It is not intended to be exhaustive or to limit the invention to the precise form disclosed. Many modifications and variations are possible in light of the above teaching. It is intended that the scope of the invention be limited not by this detailed description, but rather by the claims appended hereto."],"BRFSUM":[{},{}],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"BRIEF DESCRIPTION OF THE DRAWINGS","p":["The patent or application file contains at least one drawing executed in color. Copies of this patent or patent application publication with color drawing(s) will be provided by the Office upon request and payment of the necessary fee.","Referring now to the drawings in which like reference numbers represent corresponding parts throughout:",{"@attributes":{"id":"p-0021","num":"0020"},"figref":"FIG. 1"},{"@attributes":{"id":"p-0022","num":"0021"},"figref":"FIG. 2"},{"@attributes":{"id":"p-0023","num":"0022"},"figref":"FIG. 3"},{"@attributes":{"id":"p-0024","num":"0023"},"figref":"FIG. 4"},{"@attributes":{"id":"p-0025","num":"0024"},"figref":"FIG. 5"},{"@attributes":{"id":"p-0026","num":"0025"},"figref":"FIGS. 6A and 6B"},{"@attributes":{"id":"p-0027","num":"0026"},"figref":"FIG. 7"},{"@attributes":{"id":"p-0028","num":"0027"},"figref":"FIGS. 8A and 8B"},{"@attributes":{"id":"p-0029","num":"0028"},"figref":"FIGS. 9A and 9B"},{"@attributes":{"id":"p-0030","num":"0029"},"figref":"FIG. 10"},{"@attributes":{"id":"p-0031","num":"0030"},"figref":"FIG. 11"},{"@attributes":{"id":"p-0032","num":"0031"},"figref":"FIGS. 12A\u201312D"},{"@attributes":{"id":"p-0033","num":"0032"},"figref":"FIGS. 13A\u201313D"},{"@attributes":{"id":"p-0034","num":"0033"},"figref":"FIGS. 14A\u201314D"},{"@attributes":{"id":"p-0035","num":"0034"},"figref":["FIGS. 15A and 15B","FIG. 15A","FIG. 15B"]},{"@attributes":{"id":"p-0036","num":"0035"},"figref":"FIG. 16"},{"@attributes":{"id":"p-0037","num":"0036"},"figref":"FIG. 17"},{"@attributes":{"id":"p-0038","num":"0037"},"figref":"FIGS. 18A and 18B"},{"@attributes":{"id":"p-0039","num":"0038"},"figref":"FIG. 19"},{"@attributes":{"id":"p-0040","num":"0039"},"figref":"FIGS. 20A\u201320C"},{"@attributes":{"id":"p-0041","num":"0040"},"figref":"FIG. 21"}]},"DETDESC":[{},{}]}
