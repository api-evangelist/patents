---
title: Systems and methods for editing a model of a physical system for a simulation
abstract: Systems and methods for simulating a medical procedure are disclosed. For example, one described system for simulating a medical procedure includes a physics module configured to model at least one physical property of a user-defined organic object associated with a patient; a display module configured to cause a display of the user-defined organic object; a script module configured to execute a user-defined medical procedure script; a simulation module in communication with the physics module, the display module, and the script module, the simulation module configured to execute a simulation of the medical procedure based at least in part on the user-defined model of the organic object and the user-defined medical procedure script.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09104791&OS=09104791&RS=09104791
owner: Immersion Corporation
number: 09104791
owner_city: San Jose
owner_country: US
publication_date: 20090528
---

{"@attributes":{"id":"description"},"BRFSUM":[{},{}],"heading":["FIELD OF THE INVENTION","BACKGROUND","SUMMARY","DETAILED DESCRIPTION","Illustrative Simulation of a Medical Procedure","Illustrative Editor of a Simulation of a Medical Procedure","General"],"p":["The present invention generally relates to simulations and more particularly relates to simulations of medical procedures.","Simulations of medical procedures are used in a variety of settings to train medical staff or to allow a surgeon to practice a procedure before performing it on a patient. For example, a simulation may provide graphical images of anatomic and physiologic models representing a patient or part of a patient. The displayed images of the models may then change during the procedure based on the movements and actions of the user. For example, as the user makes incisions and moves surgical tools within the patient, those actions are tracked, within the patient and result in changes to the simulated anatomy and physiology and thus a new image is presented to the user. By providing a responsive, high-quality simulated procedure, a user, such as a surgeon, may be able to practice the surgery in a realistic environment.","However, these simulations are typically extremely expensive and highly-customized by the supplier of the simulation. The computing hardware necessary to provide real-time simulated cause and effect actions as well as perform the calculations needed to accurately model the patient can be significant. Further, a user of the simulation cannot create and import customized patient data or alter existing simulation models, including adding pathologies or adjusting other characteristics, such as age or weight. Additionally, a user of the simulation cannot modify the simulation to incorporate customized messages or content to aid in the use of the simulation, such as training messages or signals.","Embodiments of the present invention provide systems and methods for simulating medical procedures. For example, in one embodiment of the present invention, a system for simulating a medical procedure comprises a physics module configured to model at least one physical property of a user-defined organic object associated with a patient; a display module configured to cause a display of the user-defined organic object; a script module configured to execute a user-defined medical procedure script; a simulation module in communication with the physics module, the display module, and the script module, the simulation module configured to receive input from a simulated medical apparatus and execute a simulation of the medical procedure based at least in part on the user-defined model of the organic object and the user-defined medical procedure script.","Another embodiment of the present invention comprises a computer-implemented method for simulating a medical procedure comprising the steps of receiving a user-defined organic object associated with a patient, the user-defined organic object comprising at least one physical property; receiving a user-defined medical procedure script; executing a simulation of the medical procedure based at least in part on the user-defined organic object and the user-defined medical procedure script; and outputting an image of the user-defined organic object based at least in part on the simulation. A further embodiment of the present invention comprises a computer-readable medium having program code for executing such a computer-implemented method.","Embodiments of the present invention provide systems and methods for simulating a medical procedure.","For example, one embodiment provides a system for editing a medical procedure including a computer running software for editing a medical procedure. In such a system, a user may use the editing system to create and customize a simulation of a medical procedure. For example, the user can select a template describing a patient with some default characteristics. In one embodiment of the present invention, a patient may be a human being. But in other embodiments, a patient may be an animal, such as in an embodiment for use in a veterinary environment, an environment of objects used for skills training exercises, or gaming environment to foster hand\/eye coordination with the surgical instruments. The user may then adjust parameters describing the patient, such as the patient's age and general level of health. The user may also adjust more detailed characteristics of the patient, such as the locations and sizes of fatty tissue deposits, adhesions, or pathologies. In addition, the user can select surgical tools to be used with the simulation, and incision and insertion points. Further, the user can edit the simulation of the medical procedure to include scripted events. For example, the user can create and include scripts to provide warning messages to a user of the simulation, such as a medical student, indicating that the student has made an incision in a wrong location. The user may also include information to describe haptic feedback to be output to tools used by a user of the simulation.","Another embodiment provides a system for executing a simulation of medical procedure. In such an embodiment, a user may load a customized simulation created with an editor embodiment of the present invention. The simulation system reads the information in the customized simulation and executes a simulation environment based on the customized simulation information. The simulation system displays a rendered image of a three-dimensional scene from the perspective of the surgeon or a camera inserted into the patient, such as in a laparoscopic surgery. The user manipulates simulated surgical tools to perform the simulated medical procedure. The simulated surgical tools may resemble actual surgical tools the user may encounter during an actual surgery and may provide computer-controlled force feedback to the user to simulate the feel of the surgery using the tools. In addition, the simulation system may detect events during the simulated procedure and execute scripts associated with the events. For example, the system may display a message if a user correctly executes an incision, or display a score based on the user's performance of the simulated procedure. Additionally, user performances may be stored in a database. The user performance data can be aggregated for identifying areas for improvement, identifying progress made, and other purposes.","The foregoing embodiments are intended to provide an introduction to the subject matter of the following detailed disclosure and are not intended to limit the scope of the disclosure in any way. It should be noted that the use of the term \u2018or\u2019 in this specification is intended to include both the inclusive and exclusive meanings and is not intended to indicate a choice restricted to only one alternative.","Referring now to the figures in which like numbers refer to like elements throughout the several drawings,  is a block diagram showing a system for simulating a medical procedure according to one embodiment of the present invention. According to the illustrative embodiment shown in , a system  for simulating a medical procedure comprises a computer , an input device , a display , and an actuator  in communication with the input device . The computer  comprises a processor  and a computer-readable medium  in which is stored a physics module , a display module , a script module , and a simulation module . Each of the modules - comprises a software program or is part of a software program. Together, the modules create a framework on which a simulation of a medical procedure may be executed. In other embodiments, the various modules may comprise hardware modules, such as field-programmable gate arrays (FPGAs) configured to perform the various functions of the software modules.","In the embodiment shown in , the system  receives a definition of a customized simulation of a medical procedure, or \u201cscene.\u201d For example, in the embodiment shown in , a user has created a scene representing a human abdomen, including various internal organs, for use in a laparoscopic appendectomy where the abdomen is from a 47 year-old female with appendicitis. When creating the scene, a user specified the amount of fatty tissue and other characteristics of the patient's abdomen to create a particular environment for students in a medical school or training course.","The scene includes models of organic objects that have information about the organs and tissue within the abdomen or covering the abdomen, such as pathologies, and location and size of fatty deposits and adhesions. The models also include physical properties of the different components of the abdomen, such as elasticity characteristics, hardness characteristics, or other characteristics that affect how the abdomen may appear or react to physical interactions. Further, the models include graphical information to allow the abdomen to be displayed to the user. The models are stored in a model file on a computer-readable medium for use with the framework.","The user has also created a script for use in the scene. The script includes information to cause the system  to provide helpful graphics to identify possible incision points, areas of interest (including areas to avoid), as well as textual information that may be displayed to the user upon the occurrence of a pre-determined event. For example, if a student makes an incision in the wrong place, a scripted message may be displayed indicating the error. The script also includes programming to allow the system  to score the user on his performance, and to display the score to the user after the procedure has been completed. The script is stored in a script file on a computer-readable medium for use with the framework.","To execute a simulation using the system , the system  loads the information stored in the model file and the script file. In one embodiment, the model file and the script file may comprise a plurality of files. In another embodiment, a single file may comprise model and script information. The system  executes the simulation by executing the simulation module . The simulation module  manages the execution of the simulation by receiving inputs from a user interacting with the simulation, such as from the input device , and by transmitting or receiving information from one or more of the modules -.","For example, the simulation module  receives an input signal from an input device , such as a simulated surgical tool, indicating movement of the input device . The simulation module  then employs the physics module  to calculate interactions between the model of one or more organic objects and the simulated surgical tool to determine a response of the models to the surgical tool. The physics module  determines the model's response to the surgical tool and sends information to the simulation engine that indicates a deformation of the model. The simulation module  then sends the physics information to the display module . The display engine  uses the physics information to generate a graphical representation of the model comprising the deformation, and transmits a display signal to the display  to cause the display  to display the graphical representation. The simulation module  may also transmit a signal to the input device  configured to cause the actuator  to output a haptic effect to the input device . The simulation module  may also record a user's actions in the simulation to allow replay of the user's performance, or it may store scoring information for the user in a database to allow aggregation of the information for overall scoring or performance tracking.","The simulation module  also determines a script signal based on the input signal or information from the physics engine. The script signal is sent to the script module , which determines whether a scripted event should occur. If a scripted event has occurred, the script engine executes program code within the script associated with the scripted event to cause the scripted event to occur. For example, if the user has made an incision in the correct location and of the correct size, a portion of a script may be executed to display a message or graphic, such as a green light, to indicate that the user has correctly executed the portion of the procedure.","Each of these modules works in concert to provide an immersive, realistic, customized simulation of a medical procedure.","Referring now to ,  shows a method  for simulating a medical procedure according to one embodiment of the present invention. The method  will be described with respect to the system shown in . The embodiment shown begins in block  with the computer receiving a user-defined scene. For example, the computer  may load a user-defined scene from a computer-readable medium, such as a hard drive or CD-ROM. In one embodiment, the computer  may receive the user-defined scene from a server that is remote from the computer . In some embodiments, a remote server may comprise a web server, an FTP server, or a file server.","In this embodiment, the scene comprises an organic object associated with a patient, a description of a surgical tool, and a user-defined medical script. In some embodiments of the present invention, a scene may be user-defined based on a user's selection of components for the scene, though the components may not have been modified by the user. In some embodiments of the present invention, a scene may be user-defined based on both a user's selection of components for the scene as well as a user's modification of the components selected for the scene. Systems and methods for generating a user-defined scene are described in more detail with respect to systems and methods for editing a medical procedure simulation in other parts of this specification.","One example of a user-defined scene may comprise information describing a patient's abdomen, including the location and physical characteristics of the patient's abdominal muscles, intestines, stomach, liver, and pancreas. The physical characteristics may comprise user-defined characteristics including adhesions, fatty deposits, and pathologies, such as growths, tumors, or defects. For example, one organic object may comprise a patient's liver that includes a benign tumor.","In addition to the organic object, the scene in this embodiment also comprises a description of a surgical tool. In one embodiment, a description of a surgical tool may be received from a data file having parameters describing the type of tool as well as characteristics of the tool, such as its size and shape. In another embodiment, a description of a surgical tool may be received from a server remote from the computer .","The user-defined scene further comprises a user-defined script. A script may comprise program code and be employed in a simulation to provide information to a user or to affect the execution of the simulation. For example, one user-defined script may comprise program code to determine if a user's actions are an error and display a message indicating the error or to output a sound indicating the error. Or, the script may be configured to cause a haptic effect to be output to indicate a response to a user's actions. For example, if a user moves simulated surgical tool near an area where the tool should not be used, the script may cause a slight vibrational effect to be output to the simulation input device . The script may increase the intensity of the vibration if the user moves the tool closer to the prohibited area, and may apply a braking force to indicate the direction of motion is incorrect.","After receiving the user-defined scene, the method  proceeds to step  and executes the simulation based on the user-defined scene. For example, in one embodiment of the present invention, the simulation is executed by a simulation module . As part of the execution, input signals from the simulation input device  are received by the simulation module . The simulation module  transmits messages to the physics module  to determine collisions between objects in the scene, such as between the simulation surgical device and an organic object, and determine deformations of objects in the scene. The simulation module  also transmits messages to the display module  to provide a view of the scene from a viewpoint, such as a camera's viewpoint or the user's viewpoint. The simulation module  also transmits messages to the script module  to identify events and to execute the appropriate script.","While executing the simulation, the system may proceed to step  and receive user inputs. For example, in one embodiment, the computer  may receive user inputs, such as input signals indicating a movement of a simulation input device . For example, the computer  may receive signals from sensors within the simulation input device  indicating a movement of the device . The computer  may process the sensor signals to determine a position and orientation of the input device and a corresponding position and orientation of the simulation surgical device. In one embodiment, the computer  may receive a signal indicating that an additional tool may be employed. For example, if a user inserts a simulated cannula into an incision, the user may later insert a catheter or other tool into the cannula. Thus, a user may indicate to the simulator that a catheter tool should be activated to be inserted into the cannula","Further, while executing the simulation, the system may proceed to step  and output images to a display  corresponding to a view of the scene. For example, in one embodiment of the present invention, the system may receive information from a sensor worn by a user indicating a location and orientation of the user's head. This sensor information may be used to determine a viewpoint from which an image should be generated based on the organic objects in the scene. In one embodiment, in addition to such a sensor indicating the location and orientation of the user's head, a simulation surgical device may be defined to comprise a simulated camera to allow the user to view the interior of the patient. In such an embodiment, a viewpoint may be determined based on the position and orientation of a simulation input device  corresponding to the simulation surgical device having the camera.","To generate and output the images, a display module  may be employed. The simulation module may transmit a message comprising a viewpoint to the display module . The display module  may then generate an image based on the organic objects in the scene and the viewpoint. In one embodiment, the simulation module may transmit a message comprising a plurality of viewpoints to the display module . For example, in such an embodiment, an image may be generated comprising views from both of the location and orientation of the user's head and a simulated camera. In one embodiment, multiple images may be generated in succession to create a real-time view of the scene based on user inputs.","While executing the simulation, the method may proceed to step  and output a haptic effect. For example, in one embodiment of the present invention, the simulation module  may transmit a message to the script module . In response, the script module  may execute a script that may determine a haptic effect is to be output. In such an embodiment, the script module  may transmit a message to the simulation module  to generate a signal to cause a haptic effect to be output to an input device . For example, the script module  may determine that a vibration should be output. The script module  generates and transmits a message to the simulation module  comprising a description of the haptic effect. In one embodiment, the description may comprise a high-level haptic command indicating a vibration having a frequency, amplitude, and duration. In such an embodiment the simulation module  may generate an actuator signal configured to cause the actuator to output the haptic effect. In another embodiment, the simulation module  may transmit the high-level haptic command to the input device , which may then generate an actuator signal configured to cause the actuator to output the haptic effect. In another embodiment, the script message may generate a low-level haptic command comprising information to directly command the actuator, which may be transmitted by the simulation module  to the input device  or the actuator. In some embodiments, the script module  may transmit the haptic command to the input device  or the actuator rather than sending a message to the simulation module.","In some embodiments, the simulation module  may determine a haptic effect should be output. For example, a manipulation of the input device may indicate the movement of the simulation surgical device into tissue. The simulation module may determine that a braking force is to be output to simulate resistance to movement of the input device . Still further embodiments may determine and generate default haptic effects, such as the application of a braking force to indicate the completion of a simulation or an active force to simulate a beating heart.","Referring now to ,  is a block diagram showing a system  for editing a medical procedure simulation according to one embodiment of the present invention. According to the illustrative embodiment shown in , a system  for editing a medical procedure comprises a computer , an input device , and a display , though other input devices, such as touch-sensitive devices, may be used. The computer  comprises a processor  and a computer-readable medium  in which are stored a data import module , a visualization module , a scene generation module , and an editor module .","The editor module (or \u201ceditor\u201d)  comprises program code for allowing a user to edit a simulation of a medical procedure. It provides a graphical user interface (GUI) to allow a user to interact with the editor , and provides options for adding, customizing, or removing components of a simulation. In the embodiment shown in , the editor  also provides a text editor, which allows a user to enter program code for one or more scripts that can be included within a simulation. The GUI, in this embodiment, further comprises a window configured to show a graphical representation of the configuration of the medical simulation based on the user's inputs. For example, the editor can display a representation of a patient, a representation of one or more surgical tools, and representations of different views of a surgical procedure, such as views of different locations within the patient at different points along a timeline for a surgery.","The GUI also provides tools to allow a user to define and manipulate components of a simulation, such as internal organs, incision points, and tissue and adhesion characteristics. Thus, by interacting with the various GUI elements and by manipulating an input device, such as a mouse or a keyboard, a user may create and edit a customized simulation of a medical procedure.","In the embodiment shown, the editor  also comprises the portion of the system  that coordinates the display of information to the user to allow the user to create and customize a simulation. The remaining components of the system  are employed by the editor  to provide different functionality to the user.","The system  further comprises a visualization module  that provides graphical rendering of physical models to be displayed in the editor . The visualization module  comprises a rendering engine configured to receive information relating to one or more physical models to be displayed and generates a graphical representation based at least in part on the one or more physical models. The rendering engine may also receive information relating to a location and orientation of a viewpoint of a user of the editor to provide an accurate representation of the physical models from the viewpoint.","The data import module  may be used by the editor  to import data into a simulation. For example, a user may wish to load a previously customized model of an internal organ, or a new simulated surgical tool. The editor  will invoke the data import module  to load the requested information and provide it to the editor  in a format usable by the editor .","The scene generation module  provides functionality for accepting data describing a scene, such as model information (including physical and material properties), patient information, surgical tool information, and script information, and synthesizing the parameters into one or more simulation files that may be stored on a hard disk or other computer-readable medium. The simulation files may then be loaded by a simulator to provide an interactive simulation of the scene.","Referring now to ,  is a block diagram showing a system  for editing a medical procedure simulation according to one embodiment of the present invention. The system  shown in  will be described with respect to computer and hardware components of the system  shown in . The system  shown in  comprises an editor , a visualization module , a scene generation module , and a data import module .","In the embodiment shown in , the editor module (or \u201ceditor\u201d)  comprises the interface to a user for creating and editing a simulation of a medical procedure. It provides a GUI to the user, processes inputs from the user, and maintains simulation configuration parameters that may be customized by the user. It also handles sending requests to the other modules when needed, such as when a user requests to import a customized model of an organic object (e.g. a custom model of a heart) to be embedded within a simulation, when rendering views of the simulation, or when packaging the simulation to be stored on a computer-readable medium in a format usable by a simulation system, such as the one shown in .","In the embodiment shown in , the editor module  is configured to execute on the processor  and to manage the system  to allow a user to create a user-defined medical procedure simulation, also referred to as a \u201cscene.\u201d After the editor module  has been started, a user interacts with the system  by manipulating the input device , which may comprise a mouse and a keyboard. The editor module  generates a GUI to be displayed on the display  and receives input signals from the input device , which allows the user to interact with the editor to define and edit a simulation.","The editor module  allows a user to define the type of medical procedure to be created. For example, the editor module  may allow a user to select a particular procedure or a location of a patient's body, identify the organs and tissue included within simulation, and specify other characteristics of the patient, such as an age or overall level of health. By specifying characteristics of a patient, the part of the patient to be the focus of the procedure, and characteristics of organs and tissues to be included in the simulation, the user can define a scene.","In addition to allowing the user to specify various aspects of a scene, the editor  also provides a graphical representation of the scene, or part of the scene, to the user by transmitting a signal to the visualization module . The visualization module  generates a visualization signal configured to cause a display of a view of an organic object. For example, the visualization module  is configured to generate a three-dimensional visual representation of one or more of a patient's internal organs. In the embodiment, the patient is 47 years-old and has a benign growth on the interior wall of her large intestine. The editor  transmits a signal to the visualization module , the visualization signal comprising the patient's age and parameters describing the benign growth. The visualization module then generates a visualization signal configured to cause the display of a view of the patient's large intestine with characteristics associated with a 47 year-old female patient and comprising the benign growth, based at least in part on the signal received from the editor .","In addition, the visualization module  can generate a three-dimensional interior view of a patient. For example, an interior view of a patient may simulate a view a surgeon may see on a video monitor during a laparoscopic surgery, thus allowing a user of the editor to adjust visual settings or placement of adhesions or fat deposits to accurately replicate a true surgery, or a condition in particular patient that the user had encountered. Alternatively, a three-dimensional view may allow a user to view the scene from any viewpoint to fully view and customize the scene.","To generate a visualization signal, the visualization module  analyzes scene information, including characteristics of the patient, models of physical objects within the scene (e.g. organs and tissue), and a user-selected viewpoint. The visualization module  generates a graphical representation of the scene using a rendering engine and transmits a visualization signal comprising the graphical representation to be displayed. In one embodiment, the visualization signal is transmitted to a graphics adapter within the computer  to be output on the display  or may be transmitted to another computer, such as over a network or the Internet as described below with respect to . In another embodiment, the graphical representation is transmitted to the editor module , which transmits the graphical representation to a file to be stored on a computer readable medium. For example, in the embodiment shown, the customized simulation comprises several internal organs that are represented by three-dimensional wire meshes comprising vertex and edge information. The rendering engine uses the vertex and edge information to calculate the appearance of each model from a viewpoint. In another embodiment, volumetric elements, such as Voxels, to represent objects within the scene.","The visualization module  may also receive information describing the location of fat deposits added by a user of the system . In one embodiment of the present invention, the visualization module may generate a three-dimensional wire mesh representing the fat deposits. For example, in one embodiment of the present invention, the user may specify the location of a fat deposit. The user may also specify a volume defining the size and shape of the fat deposit, such as by layering fat deposits to create increased thickness of the deposit. The visualization module  may then use points on the surface of the user-defined volume as vertices and may generate a three-dimensional triangular mesh based at least in part on the vertices.","Using the various three-dimensional wire meshes, the visualization engine employs a rendering engine to create a graphical representation of all of the meshes. The rendering engine displays textures, bump maps, and coloring information applied to meshes to create a realistic three-dimensional graphical representation of the scene from the selected viewpoint. The graphical representation is then embedded in a visualization signal, which is transmitted to cause the display of the graphical representation. In one embodiment of the present invention, the system  then displays the graphical representation on the display . Such a display helps provides a realistic and accurate simulation of a medical procedure to a user of the system.","In addition to allowing a user to fully-customize a new scene, the system  is capable of importing data from an existing scene, customized models of physical objects, scripts, simulated surgical tools, and other information that may be incorporated into a scene. In the embodiment shown in , the data import module  is configured to receive information describing at least one of a simulation of a medical procedure, a model of an organic object, a model of a surgical tool, or a script. For example, a user may have created a specialized model of a human heart using an embodiment of the present invention, or with another editor capable of creating a model of a physical object, and stored the specialized model within a data file stored on a computer-readable medium. The system  uses the data import module  to access the information stored within the data file and allow the information to be embedded within a customized simulation. For example, the specialized model of the heart may be incorporated into a customized simulation of a heart surgery. The data import module  is configured to be able to accept a wide variety of file formats in which a model of a physical object may be stored, such as in a model file from an editing tool such as Maya or 3D Studio Max.","In addition to importing models of organic objects, the data import module  is configured to import existing simulations of medical procedures or scripts, such as simulations created by other users that may be further customized or scripts that may be incorporated into a customized simulation. Additionally, the data import module  can import models of surgical tools. For example, one embodiment of the present invention may comprise a default set of tools. However, a user may wish to use a tool that is not one of the default tools. The user may obtain a model of the desired surgical tool and employ the system  to import the model of the surgical tool into a customized simulation. Suitable tools, such as grasper tools, scissor tools, and needle driver tools may be imported according to some embodiments.","While creating a scene, a user may create a simulation script that may be employed as part of the scene by the simulation framework during execution. In the embodiment shown in , the editor module  comprises a script editor for creating and editing scripts. A script may include information to cause the system  to execute the simulation in a particular way or to provide prompts or other information on the screen for the user. For example, the script may specify that the first time the simulation is executed, the user will have the option to observe a pre-defined execution of the procedure, similar to watching a video of the procedure, but shown within the simulation environment using the customized models. Alternatively, the script may cause a system for simulating a medical procedure, such as the system  shown in , to display relevant information to the user during the simulation, such as graphical cues indicating incision points, warning messages, positive feedback, a score indicating the quality of the user's performance, or other information that may be useful to a simulation user or instructor. After the user has created the script, it may be stored in a computer-readable medium using a file format recognized by the framework, or it may be incorporated into the scene by the editor  or the scene generation module .","The system  also includes a scene generation module  for generating a self-contained customized simulation scene that may be saved to a computer-readable medium as a file or group of files. The file or files may then be employed by a system for simulating a medical procedure, such as the system  shown in . For example, a user may create a scene of an appendectomy on a 27 year-old healthy, slightly over-weight woman. The scene comprises a plurality of models of organic objects, several scripts related to scoring a medical student on various aspects of the procedure, and two surgical tools. The scene further comprises a plurality of user-defined fat deposits and adhesions, as well as user-defined lighting conditions and trocar locations.","In the embodiment shown in , the scene generation module  is configured to receive information from the editor module  that describes the scene. In this embodiment, the editor module  transmits a signal to the scene generation module  comprising information about the scene, including information describing the models of organic objects, the scripts, the simulated surgical tools, and other user-customized characteristics, including characteristics of the patient and a pathology. In some embodiments, the editor module  may provide a pointer to data stored in memory to the scene generation module , while in other embodiments, the editor module  may transmit the information to the scene generation module . For example, in one embodiment, a scene generation module  may execute on a computer remote from the user's computer, such as on a web server. In such an embodiment, customizations stored in memory on the user's computer may be transmitted to the web server to generate the scene.","In one embodiment, the scene generation module  generates a scene by aggregating all of the information describing the simulation into in one or more data files usable by a system for simulating a medical procedure, such as the embodiment shown in . For example, in one embodiment of the present invention, the scene generation module  generates a plurality of files for the scene. According to the embodiment, a first file comprises information describing the models of organic objects used in the scene, including pathologies present in the organic objects as well as customizations of the organic objects based on characteristics of the patient. A second file comprises the scripts used by the scene. A third file comprises the simulated surgical tools used in the simulation. A fourth file comprises information describing fat deposits and adhesions, such as sizes, shapes, locations, and other parameters. In another embodiment, the information describing the simulation is stored in a single file. Further embodiments may use different partitioning of data into different non-volatile computer-readable storage media.","Structurally, in the embodiment shown in , the system  comprises distinct software components that are connected via application programming interfaces (APIs). The modules are programmatically distinct components of a single software program. For example, the visualization module  comprises a discrete set of program code that communicates with the editor  via an API that may be used within the program code for the editor. Similarly, the scene generation module  is configured to receive information from the editor  through an API. For example, in one embodiment, these distinct modules may be embodied within DLLs. However, other embodiments may provide alternate architectures.","Referring now to ,  is a block diagram showing a system  for editing a medical procedure simulation according to one embodiment of the present invention. The editor module (or \u201ceditor\u201d)  may be provided in a web page that executes program code on a user's computer. But other components of the system  may be executed by a web server at another location, i.e., remotely. For example, the user's web browser may provide the editor  with a GUI for interacting with the system, and may also provide a visualization engine. But a web server may provide scene generation and file management functionality. Such an embodiment may be useful in a medical school setting where a professor may create simulations while working in his office or at home. Alternatively, a third party may license access to an embodiment of the present invention through a website. Such an embodiment may allow a user to create simulations in a cost-effective manner without needing to purchase the full software application. In another embodiment, users may upload completed simulations to a third-party site for distribution, either as a free download or for purchase.","The system  may then provide integrated access to a library of medical simulations that have been developed for use within different classes offered. Thus, the professor can create the simulation remotely, but because the file management and scene generation functionality are handled by the medical school's server, the system  may allow immediate access to the completed simulation to students or other staff at the medical school.","Some embodiments of the present invention may provide a way for a user to customize a medical procedure simulation by using a plurality of templates, which in turn may be customized. For example, to allow a user to quickly develop a basic patient model, one embodiment of the present invention allows the user to select basic characteristics of the patient's anatomy from one or more pre-defined templates. This may aid the user in creating a generic patient model quickly, and allow the user to spend more time customizing the specific pathology or condition that will be the focus of the simulation. For example, a procedure such as an appendectomy may be selected that requires little modification by the user. However, some embodiments of the present invention may not employ templates, but instead may allow a user to build a medical procedure simulation from the ground up with few or no pre-defined characteristics. For example, a user may customize a model of a patient with a liver damaged by the patient's alcoholism. In such an embodiment, a user may modify, for example, a hardness of the liver, a size and shape of the liver, and a color of the liver.","Some embodiments of the present invention may provide for the online retrieval of models, scripts, scenes, or other data that may be imported into a scene. For example, a user may create a scene and, using an embodiment of the present invention, access a third party's server to retrieve a model of a new surgical tool. The embodiment may allow the user to provide payment information to purchase a copy of the surgical tool model and then import the model into the scene. Still further embodiments may allow the user to access a virtual \u201cstore\u201d that can be browsed for desired models or scenes.","Referring now to ,  shows a method  for editing a medical procedure simulation according to one embodiment of the present invention.  will be described with respect to the systems ,  shown in . The method  begins in step  when the system  receives information describing at least one of a scene, a model of an organic object, a model of a surgical tool, or a script. For example, in one embodiment, a user may execute computer software on a computer  that may read the information from a computer-readable medium. In one embodiment, the computer  may receive the information from a web server remote from the computer . After receiving the information, the method  proceeds to step .","In step , the system  may generate a template of a patient using the information. For example, and as will be described in greater detail below, the system  may receive information describing a patient's abdomen, such as a model of the patient's liver. The system may then generate a template such as may be seen in  comprising the information. The user may then edit the template to create a user-defined scene based on the information and the user's inputs.","After generating the patient template, the method  proceeds to step  where the system  receives a modification of a characteristic of the patient template. For example, as may be seen in , a user may select a sex for the patient . In the embodiment shown in , a user may select an age  and general level of health  of a patient . Still further characteristics may be modified by the user. To receive a modification, the system  may receive an input signal from an input device . The system  may determine that the user has changed parameter based at least in part on the input signal, such as by selecting a radio button, a check box, a drop-down menu item, resizing or moving an organic object, or by entering a value into a text field.","After receiving the modification of a characteristic of the patient template, the system  may generate and display a view of the patient to provide feedback to the user modifying the characteristic of the patient template. For example, as may be seen in , the system  has generated views of the patient based on a user's modification of characteristics of the patient. In one embodiment, the view of the patient may be a two-dimensional view of the patient, such as may be seen in . In one embodiment, the system  may generate a three-dimensional view of the patient, such as may be seen in . A further embodiment may be capable generating both a two-dimension and a three-dimensional view of the patient. In one embodiment, the view is generated by the visualization module ,  of the system , . In one embodiment, a view may be loaded from a computer-readable medium and displayed on the display . In another embodiment, a view may be received from a server remote from the system  and displayed on the display . After generating and displaying the view of the patient, the method  may return to step  to receive further modifications. Or the method  may proceed to step .","In step , a user may select a pathology associated with the patient. For example, a user may select a growth associated with an organic object associated with the patient. In one embodiment, a user may select a defect associated with an organic object associated with the patient. For example, in the embodiment shown in , a user may select a pathology  from a list of pathologies. In another embodiment, a user may define a new pathology or may import a pathology. After receiving a selection of the pathology, the method  may return to step  to update the view of the patient, or step  to receive further modifications of characteristics of a patient. Or the method  may proceed to step .","In step , a user may select one or more surgical tools to be included in the user-defined scene. For example, in one embodiment, a user may select a tool from a selection of tools provided by the system .  shows one embodiment in which a user may select a tool provided by the system . In another embodiment, a user may select a tool available from a server remote from the system . The embodiment shown in  also shows tools available from a web server. In such an embodiment, the system  may employ a data import module  to receive and import information describing the selected tool into the user-defined scene. After receiving a selection of a surgical tool, the method  may return to step  to receive further modifications of characteristics of the patient, or it may return to step  to update a view of the patient. Alternatively, the method  may proceed to step .","In step , the system  receives a script. For example, in one embodiment, a user may employ the system  to write program code to be incorporated into a script, such as by using a text editor component of the system. In such an embodiment, the system  may provide text editing capabilities. In one embodiment, the system may comprise information associated with pre-defined events that a user may select. For example, the system may comprise script program code to determine the occurrence of an event and to output messages or haptic effects associated with the occurrence of the event. In another embodiment, a user may generate a script using another software program and may import the script into the scene. In such an embodiment, the system  may employ a data import module  to import the script. After receiving the script, the method may return to step  to allow the user to make additional modifications to the user-defined scene, or to step  to display a view of the patient. Alternatively, the method may proceed to step .","In step , the system  generates a user-defined scene based at least in part on the received information in step , the patient template, the surgical tool, and the pathology. The system  generates the user-defined scene and stores it to a computer-readable medium. For example, in one embodiment the system may generate one or more files, or a package of files, comprising the user-defined scene. In such an embodiment, a user may transfer the files to a portable computer readable medium, such as a compact disc, or upload the files to a server to be made available to other users of systems and methods for editing or simulating a medical procedure.","The foregoing methods describe some embodiments of the present invention, but are not intended to be limiting. Further the steps described with respect to the foregoing embodiments are not required to be performed in the order in which they were described. Steps may be performed in different orders, additional steps may be performed, and in some embodiments, one or more steps may be omitted.",{"@attributes":{"id":"p-0076","num":"0075"},"figref":["FIGS. 7-23","FIG. 3","FIG. 6","FIGS. 7-23"],"b":["300","600"]},"In , the system  provides a template for configuring a medical procedure simulation. In the embodiment shown in , the user is presented with a torso view  of a hypothetical patient. To provide this view to the user, the editor  has generated a graphical user interface view comprising a menu  with options ,  for specifying the sex of the patient and output the view to a display. Further, the editor has additional menu options that are not available for selection by a user: Texture Maps , Bump Maps , and Properties . The editor indicates that the menu options are not available by displaying them in a faded, gray color. However, such menu options may allow a user to select texture information associated with a model, such as texture information indicating a healthy intestine, a liver with cirrhosis, or an infected kidney.","A further option is provided to the user: the system  allows the user to add a new model set  to the simulation. The functionality with regards to this option will be described in greater detail below, but this option can allow a user to import a previously defined patient template that may be used as the basis for a new simulation.","In the embodiment shown in , the system  has requested the visualization module to display a generic torso view  of a patient, and the visualization module has loaded a model and rendered a model for the system . The rendered model is displayed for the user within the GUI. In the embodiment shown in , the model is a two-dimensional depiction of a patient's torso  and requires very little rendering prior to display. For example, in this embodiment, the torso  is loaded from a two-dimensional JPEG image file. In some embodiments, the visualization module may not render two-dimensional images, but may only be employed for three-dimensional rendering. In other embodiments, both types of images may be displayed.","After a user has selected the sex of the patient, a new view is shown to the user which reflects the choices made.","In , the user has identified  the patient as a female. After receiving the input from the user, the editor  has sent a message to the visualization module  to indicate that the patient's sex has been selected. In response, the visualization module changes the shading of the patient's torso . The editor  re-displays the graphical representation of the patient's torso , which provides a more realistic representation of internal organs and tissue. Additionally, the editor  activates menus -, which allows a user to affect the graphical representation of the patient. The functionality provided by these menus - will be described in more detail below.",{"@attributes":{"id":"p-0082","num":"0081"},"figref":["FIG. 9","FIG. 7","FIG. 7"],"b":["910","911","910","911","910","213","310","300"]},"In addition to allowing the user to identify basic characteristics of a patient, such as the sex of the patient, the system  allows the user to further customize additional parameters related to the patient.","In , a user has indicated that additional parameters should be modified. In the embodiment shown, the user is provided with three basic templates: a female obese geriatric patient , a female overweight young patient , and a female middle-aged malnourished patient . Such templates - may be useful for providing a basic framework that can speed customization of a medical procedure simulation. By using some pre-defined parameters, a user can focus on parameters more relevant to a particular patient, such as anomalies associated with particular internal organs or tissue, or other pathologies.","In addition to these basic templates -, the system  provides the ability to specifically tailor the simulation. As can be seen in , the user has opted to manually specify age and general health characteristics of the patient. The editor  provides a slider bar  to allow the user to adjust the age of the patient, and a second slider bar  to allow the user to adjust the health of the patient. In addition to the slider bars , , the editor  also provides the option for the user to specify the age or health with greater precision by providing a \u2018More Options\u2019 selection box , . By selecting the appropriate box, the user may precisely specify the patient's age, weight, fat distribution, health conditions, or other characteristics associated with the patient's age or health. For example, in one embodiment, a user may specify a patient's bone density, blood pressure, or cholesterol. In one embodiment, a user may specify other characteristics, such as whether the patient is a smoker, a heavy drinker, or a drug user.","After the patient has used the editor  to select the basic characteristics of a patient, the user may customize more specific characteristics of the simulation.","In the embodiment shown in , a user may select from one of three pre-defined templates - describing basic models for the patient's small intestine. Further, the user is given the option of importing a customized small intestine model .","After the user has selected the desired model , the user may select additional options  associated with the selected small intestine model .",{"@attributes":{"id":"p-0089","num":"0088"},"figref":"FIG. 13","b":["300","1320","1330","1340","1350","1310"]},"After the user has completed selecting the physical characteristics of the patient and the area of interest\u2014the small intestines in this embodiment\u2014the user may select parameters associated with the surgical procedure.","For example, in , the user may customize lighting conditions  for the surgery by adjusting a slider bar between \u201clight\u201d and \u201cdim\u201d settings. As with many parameters, the user may further customize the lighting conditions by selecting the \u2018More Options\u2019 box. For example, in one embodiment, a user may select a rendering quality option to allow a less powerful computer to execute the simulation. In one embodiment, a user may select a viewing angle of a laparoscope, such as 0, 30, or 45 degrees.","The user may next select surgical sites and tools for a user of the simulation. In the embodiment shown in , the user may identify and locate a tool insertion point as well as the type or types of tools - that may be used. As may be seen in , the user has identified a tool insertion point  in the patient's lower right abdomen. In addition, the user is given the option to add an additional trocar site  to the simulation, as may be seen in . Or the user may select and drag a trocar site to a new location using an input device.","The user may also select from the tools - provided within the system . By selecting one or more tools, the user may require the simulation to employ only the tools selected. Alternatively, the simulation may allow a simulation user to select the tools to be used, but provide feedback to the user if tools other than those selected in the editor were chosen for use in the simulation. For example, the simulation may inform the simulation user that non-ideal tools were selected, or may reduce the simulation user's score for performing the simulated medical procedure.","In the embodiment shown in , the system  has 4 types of tools - available. In addition to the tools that are provided by the system , additional tools may be imported from other sources -. For example,  shows three additional tools - available for importing into the simulation. The tools - are available through a remote server. The tools - include newly released tools, as well as experimental tools that may be tested within the simulation. In some embodiments, the user may need to pay for tools to be imported. For example, a new, patented tool may be created by a manufacturer for use within a simulator, but require a fee to be paid in order to use the tool. The ability to purchase simulated surgical tools may be incorporated into the system to allow the user to purchase the tool without launching an alternate application, such as a web browser","Tools available from other sources may be imported into the system . To do so, the system  invokes the data import module  to import the tool into the simulation To do so, the data import module  receives the information from the remote server, for example as a data stream or as a file download, and converts the parameters into a form usable by the system . Once a tool has been imported, it may be incorporated into the simulation or made available as a tool option to a user of the simulation.",{"@attributes":{"id":"p-0096","num":"0095"},"figref":["FIG. 17","FIG. 17"],"b":["1710","1720","1730","300"]},"In some embodiments of the present invention, a user may import parameters describing a tool directly from the tool itself. For example, in , the user has selected to import  parameters describing a tool from the tool itself. In this embodiment the user has connected a surgical tool to the computer  to a Universal Serial Bus (USB) port on the computer. In this case, the user has selected to import data from the tool, which has been connected as USB device 2. In addition, the user can assign a tool to a trocar location. For example, in the embodiment shown in , in addition to importing parameter data from the tool, the user assigns the tool to the \u2018Trocar 2\u2019 location.","In addition to customizing patient characteristics and tools, a user may customize aspects related to how a user may interact with the patient. For example,  shows an internal view of the patient's abdomen. In this view, the user is given the option of identifying areas where particular tools may be used, and customizing environmental conditions. For example, in , the selected tools may be seen as they may look during a simulation. However, in this view, the user has indicated that fat deposits are to be added. In , the user-added additional fat deposits have been added by the user and will be present during a simulation. In the embodiment shown, the user has added fat deposits by using a paintbrush-like tool. Using such a tool, a user may create different sized and shaped fat deposits. For example, a user may indicate a larger or thicker fat deposit by passing the tool over the same location multiple times.",{"@attributes":{"id":"p-0099","num":"0098"},"figref":["FIGS. 22 and 23","FIG. 22","FIG. 23"],"b":["300","2210","2310"]},"Referring now to ,  is a block diagram showing a system for simulating a medical procedure according to one embodiment of the present invention.  will be described with reference to the system  shown in .","The system  shown in  comprises a simulation execution module , a scene loader , a graphics engine , a physics engine , and a data logging and recording module . The embodiment shown may be executed on a computer system, such as the computer  shown in , which comprises a processor  and a memory . In addition, the computer system also comprises a display  and one or more input devices .","In the embodiment shown in , the simulation execution module  manages the execution of the system . It loads a scene from a computer-readable medium to be executed. For example, the simulation execution module  may employ the scene loader module  to access a scene stored on a local computer-readable medium, such as a hard drive or other non-volatile memory connected to the computer . In another embodiment, the scene loader module may access a computer-readable medium connected to a remote computer, such as a computer connected to a local area network in communication with the computer . In a further embodiment, the scene loader module  may access a scene available from a remote computer or system over a wide area network, such as a website that allows the purchase and download of scenes for use with embodiments of the present invention.","Once a scene has been loaded and the simulation begins, the simulation execution module  receives inputs from the user and sends information to other modules too process responses to the inputs. For example, a user may move an input device , such as a haptically-enabled input device that has been configured to resemble a surgical tool represented in the simulation, to cause the device to be inserted via a trocar into a surgery site. The execution module  receives input signals from the input device  and determines a movement of a simulated surgical tool based at least in part on the input signals.","In one embodiment, the execution module  also generates haptic effects to be output to one or more user input devices, such as simulation surgical tools. In some embodiments, a simulation surgical tool may comprise one or more actuators configured to provide haptic feedback to a user. For example, in one embodiment, a simulation surgical tool may simulate a laparoscopic surgical tool. Such a simulation surgical tool may comprise an actuator configured to provide haptic effects associated with opening and closing grips on the tool. Embodiments of such a tool may be found in co-pending U.S. patent application Ser. No. 10\/196,717, filed Jul. 15, 2002 and entitled \u201cPivotable Computer Interface,\u201d the entirety of which is incorporated herein by reference. Still other haptically-enabled simulation surgical tools may be employed, such as catheters and others.","Haptic effects to be output to a user of one or more embodiments may comprise active or passive haptic effects. For example, in one embodiment a simulation of a medical procedure may require a user to insert a catheter into a patient. In such an embodiment, the embodiment may output resistive haptic effects to the user to simulate the feel of a catheter sliding through tissue within the patient. Additionally, the embodiment may output a vibrational haptic effect to the user. For example, in one embodiment, a system  may output a vibration to a user to indicate the user has made an error during performance of the procedure. In such an embodiment, a script may comprise programming to output a haptic effect, such as a vibration, upon the occurrence of an error. In addition to the vibration, a message may be displayed to the user or an audible sound may be output to indicate the error.","In haptically-enabled embodiments, suitable actuators may be incorporated into simulation surgical tools to output the haptic effects. Such actuators may comprise passive actuators or active actuators. For example, in one embodiment, a vibrational haptic effect may be generated by an eccentric rotating mass (ERM) actuator or by a linear resonant actuator (LRA). In one embodiment, a braking effect may be generated by bringing a braking surface into contact with the simulation surgical tool, such as with an electromagnetic force or with a motor. Still other types of actuators may be employed in various embodiments to provide desired haptic effects.","After determining the movement of the simulated surgical tool, the simulation execution module  transmits information to the physics engine  to determine whether contact with other objects in the scene has occurred. The physics engine  will be described in more detail below. In addition, the simulation execution module  also transmits information to the graphics engine  to update a view of the simulation based on the newly-determined position of the simulated surgical tool.","In the embodiment shown in , the physics engine  is configured to detect collisions between objects in the scene, and to determine deformations of objects in the scene. The physics engine may determine collisions between two objects in the scene, such as two internal organs contacting each other, or a surgical tool contacting an object within the scene. The physics engine  may determine a contact by determining whether a point on a first object contacts or passes through a plane segment defined by three or more points on a triangular mesh describing a second object, or other suitable method.","The physics engine  also determines deformations of objects in the scene. For example, the physics engine  may determine deformations resulting from contact between two objects, or as the result of one object changing shape due to, for example, a biological or physiological process (e.g. a heart beating). A deformation of an object may be determined based on physical characteristics of the model, such as a resilience of edges within a wire mesh describing the object to changes in length or orientation. For example, a surgical tool may be pressed against an object within a patient. The physics engine may analyze characteristics of the object within a distance of a point of contact on the object, such as within 2 cm. The physics engine calculates a pressure on the object based on the movement of the surgical tool, and calculates a movement of one or more vertices within the object's model based on the pressure and a stiffness characteristic associated with edges connecting the vertices. In addition, the simulation engine may transmit information to the simulation execution module  to indicate a collision. Such information may be employed by the simulation module  to generate haptic, visual, or audio feedback to a user.","In the embodiment shown in , the system  further comprises a data logging and recording module . In one embodiment of the present invention, the system  is configured to log a user's movement of surgical tools used within a simulation. The data logging and recording module  receives signals from the simulation execution module  indication the position and orientation of a surgical tool each time either the position or the orientation of the surgical tool changes. The data logging and recording module  stores each received position and orientation of the surgical tool after being received from the simulation execution module . By logging each change of position and orientation, the system  may allow a user to replay the execution of a surgical procedure based on the logged position and orientation information. Such a replay may allow an instructor to review the performance of the surgery with the student, such as by allowing the instructor to pause the replay and change the viewpoint of the replay to provide advice or feedback to the student.","Referring now to ,  shows a block diagram showing a system  for simulating a medical procedure according to one embodiment of the present invention. In the embodiment shown in , two systems  for simulating a medical procedure according to one embodiment of the present invention are in communication with each other via a network . The systems  each comprise a system  shown in . In addition, each system is configured to communicate with the network  and other systems . In such an embodiment, users of the systems  may perform a medical procedure in a cooperative manner, with one user performing one portion of the medical procedure, while a second user performs another portion of the medical procedure. For example, one user may be responsible for creating incisions and inserting tools, while the second user may then use the tools. In another embodiment, each user may perform their respective portion of the simulation substantially simultaneously such that each user may interact with the other during the simulation. For example, one user may manipulate a grasping tool, while the second user manipulates a cutting tool, such as a scissors tool. Such an embodiment may more accurately represent more complex medical procedures that involve multiple practitioners. Alternatively, such an embodiment may allow a more junior user to work with a more senior user to both observe the senior user, but also participate in the procedure as well.","While the methods and systems herein are described in terms of software executing on various machines, the methods and systems may also be implemented as specifically-configured hardware, such a field-programmable gate array (FPGA) specifically to execute the various methods. For example, referring again to  and , embodiments can be implemented in digital electronic circuitry, or in computer hardware, firmware, software, or in combination of them. In one embodiment, a computer may comprise a processor or processors. The processor comprises a computer-readable medium, such as a random access memory (RAM) coupled to the processor. The processor executes computer-executable program instructions stored in memory, such as executing one or more computer programs for editing an image. Such processors may comprise a microprocessor, a digital signal processor (DSP), an application-specific integrated circuit (ASIC), field programmable gate arrays (FPGAs), and state machines. Such processors may further comprise programmable electronic devices such as PLCs, programmable interrupt controllers (PICs), programmable logic devices (PLDs), programmable read-only memories (PROMs), electronically programmable read-only memories (EPROMs or EEPROMs), or other similar devices.","Such processors may comprise, or may be in communication with, media, for example computer-readable media, that may store instructions that, when executed by the processor, can cause the processor to perform the steps described herein as carried out, or assisted, by a processor. Embodiments of computer-readable media may comprise, but are not limited to, an electronic, optical, magnetic, or other storage device capable of providing a processor, such as the processor in a web server, with computer-readable instructions. Other examples of media comprise, but are not limited to, a floppy disk, CD-ROM, magnetic disk, memory chip, ROM, RAM, ASIC, configured processor, all optical media, all magnetic tape or other magnetic media, or any other medium from which a computer processor can read. The processor, and the processing, described may be in one or more structures, and may be dispersed through one or more structures. The processor may comprise code for carrying out one or more of the methods (or parts of methods) described herein.","The foregoing description of some embodiments of the invention has been presented only for the purpose of illustration and description and is not intended to be exhaustive or to limit the invention to the precise forms disclosed. Numerous modifications and adaptations thereof will be apparent to those skilled in the art without departing from the spirit and scope of the invention."],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"BRIEF DESCRIPTION OF THE DRAWINGS","p":["These and other features, aspects, and advantages of the present invention are better understood when the following Detailed Description is read with reference to the accompanying drawings, wherein:",{"@attributes":{"id":"p-0008","num":"0007"},"figref":"FIG. 1"},{"@attributes":{"id":"p-0009","num":"0008"},"figref":"FIG. 2"},{"@attributes":{"id":"p-0010","num":"0009"},"figref":"FIG. 3"},{"@attributes":{"id":"p-0011","num":"0010"},"figref":"FIG. 4"},{"@attributes":{"id":"p-0012","num":"0011"},"figref":"FIG. 5"},{"@attributes":{"id":"p-0013","num":"0012"},"figref":"FIG. 6"},{"@attributes":{"id":"p-0014","num":"0013"},"figref":"FIGS. 7-23"},{"@attributes":{"id":"p-0015","num":"0014"},"figref":"FIG. 24"},{"@attributes":{"id":"p-0016","num":"0015"},"figref":"FIG. 25"}]},"DETDESC":[{},{}]}
