---
title: Method and system for authenticating a user in a web-based environment
abstract: A system and method for authenticating a client having a privilege server, a head end server, and a web adapter performs the steps of negotiating an authentication scheme between the server proxy and the privilege server. User information is presented to the web adapter. The user information is provided to the head end server and in turn presents the information to the web adapter. The user is validated in accordance with the authentication scheme. When the user is validated a ticket is generated for the user. The ticket is presented to the client privilege server proxy that decrypts the ticket. A token is formed from the ticket and the client user identification. The token from the client is provided to the privilege server. A packet is formed having a sequence number and session key encrypted with the ticket. The packet is provided to the head end server which in turn authenticates the user. The packet is provided to the client privilege proxy which decrypts the packet and sends the ticket and the sequence number encrypted with the session key to the data server through the web adapter. User is validated at the data server and privileges are granted thereto.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=07313816&OS=07313816&RS=07313816
owner: One Touch Systems, Inc.
number: 07313816
owner_city: San Jose
owner_country: US
publication_date: 20011217
---

{"@attributes":{"id":"description"},"BRFSUM":[{},{}],"heading":["TECHNICAL FIELD","BACKGROUND","SUMMARY OF THE INVENTION","DESCRIPTION OF THE PREFERRED EMBODIMENT"],"p":["The present invention relates generally to a web-based access system, and more particularly, to a system for providing authentication of a user for a web-based system.","Providing services such as educational services through the Internet or other distributed network system requires potential users of the system to be authenticated by the server that hosts the desired applications. Corporations and other users that have their own web servers may desire services from a central source or server. One way in which a user may use services is to connect directly to the server. However, many corporations have enterprise firewalls that do not allow the potential user to log directly into the central server having the desired application.","Kerberos is a security protocol typically used for single login to an enterprise system for accessing services from multiple servers in the enterprise. Kerberos is typically used on physically insecure networks and is based on a key distribution model. It allows entities communicating over the networks to prove their identity to each other while preventing eavesdropping or replay attacks. It also provides a data stream integrity and secrecy using cryptography systems. Kerberos works by providing principals with tickets that they can use to identify themselves to other principals and secret cryptographic keys for secure communication with other principals. A ticket is typically a sequence of a few hundred bytes. These tickets can be imbedded in virtually any other network protocol, thereby allowing the processes implementing that protocol to be sure about the identity of the principals involved. Kerberos is mostly used in application-level protocols such as Telnet or FTP, to provide user to host security.","It is well known that Kerberos security protocol does not work for Windows 95 and 98 environments because the file system is not secure enough and does not allow multiple users. Also, the Kerberos protocol is not designed for hypertext transfer protocol environments.","It would therefore be desirable to provide a system that uses some Kerberos-based principals to allow users to communicate through their firewalls to reach remote applications.","It is therefore one object of the invention to provide an improved method and system for authenticating a user in a web-based environment.","In one aspect of the invention, system and method for authenticating a client having a privilege server, a head end server, and a web adapter perform the steps of negotiating an authentication scheme between the server proxy and the privilege server. User information is presented to the web adapter. The user information is provided to the head end server and in turn presents the information to the web adapter. The user is validated in accordance with the authentication scheme. When the user is validated a ticket is generated for the user. The ticket is presented to the client privilege server proxy which decrypts the ticket. A token is formed from the ticket and the client user identification. The token from the client is provided to the privilege server. A packet is formed having a sequence number and session key encrypted with the ticket. The packet is provided to the head end server which in turn authenticates the user. The packet is provided to the client privilege proxy that decrypts the packet and sends the ticket and the sequence number encrypted with the session key to the data server through the web adapter. User is validated at the data server and privileges are granted thereto.","In a further aspect of the invention, a method for accessing a service comprising:","presenting a ticket and sequence number to a service through the web adapter;","choosing a service in the service server;","sending the session name encrypted with the ticket and user identification to the privilege server and requesting a session key and sequence number;","receiving the session name from the user;","validating the user ticket and privilege;","when the user is validated, issuing the session key and sequence number for the ticket;","encrypting the session key and sequence number with the ticket to from a packet; and","sending the packet and ticket to the service.","One advantage of the invention is that the system is capable of operating through firewalls and coupling the user to various servers within the firewall. Another advantage of the invention is that the system is capable for use with multiple users.","Other advantages and features of the present invention will become apparent when viewed in light of the detailed description of the preferred embodiment when taken in conjunction with the attached drawings and appended claims.","In the following figures the same reference numerals will be used to identify the same components in the various views.","Referring now to , an authentication system  is illustrated coupled to a user  through a user privilege server proxy . User privilege server proxy  has a dataline  that couples the user privilege server proxy  to authentication system . Dataline  may, for example, be an Internet connection through various routers and the like as is known to those skilled in the art. Dataline  may be a physical wired connection or wireless connection such as a satellite. Although only one user  is illustrated, the present invention is suitable for multiple users.","Authentication system  has a web adapter  coupled to a head end server . Head end server  has a head end server privilege proxy . Head end server  is coupled to a privilege server . Privilege server  has a policy engine  therein. Authentication system  authenticates user  so that the user may be coupled to user services . As illustrated, user services  may include various service servers such as a data server  having a data server privilege server proxy . User services may also include a server gateway (Serge)  and a server gateway privilege server proxy . Both the data server privilege server proxy  and the server gateway privilege server proxy  are coupled to privilege server . Of course, those skilled in the art will recognize various types of services that may be enabled by authentication system  beyond those shown in .","Web adapter  is implemented partially in hardware and partially in software. In hardware, physical connections to dataline  are formed. Web adapter  receives the information from the user and forwards the information to head end server . Head end server  is also implemented partially in hardware and software. Head end server  provides an interconnection or functions as an intermediate server between web adapter  and privilege server . Privilege server  will be further described below but is also implemented at least partially in software.","Referring now to , privilege server  is illustrated in further detail. Policy engine  is the main component within privilege server . Policy engine  is coupled directly to various functional blocks such as a proxy coordinator , a storekeeper , an obfuscate\/deobfuscate block , and key generator . Policy engine  interacts with proxy coordinator  to either publish or subscribe to messages or requests between various proxies in the system. Policy engine  interacts with storekeeper to retrieve and update persistent information. Policy engine  interacts with obfuscate\/deobfuscate block  to obfuscate or deobfuscate the data being either sent to the user or received from the clients. Policy engine  interacts with key generator  to issue either a ticket or sequence number for a user. Policy engine  decides which services of which components should be used in what sequence.","The policy engine  is formed by privilege server . Policy engine  creates the proxy coordinator , storekeeper , obfuscate\/deobfuscate block , and key generator  upon startup. As part of the storekeeper function the policy engine also creates and loads user information lists and session information lists. The policy engine also sets the authorization information after the authorization scheme is completed. Policy engine  also gets the credentials that are initiated by the client for a particular session. Each of these functions will be further described below.","Proxy coordinator  is illustrated coupled to a data server privilege server proxy block , a head end server privilege server proxy block , and a SERGE privilege server proxy block . These blocks represent information used to communicate to the privilege server proxies rather than the actual privilege server proxies themselves. The proxy coordinator  is a component used to communicate with the privilege server proxies. The coordinator  helps propagate credentials of the user in sessions to a specific proxy identified by a proxy identification. The proxy coordinator uses a publish\/subscribe mechanism for data propagation. The proxy coordinator maintains a list of proxy IDs and their respective interfaces in block , , and . Any proxies wanting to listen or send instructions within the system must join proxy coordinator .","Storekeeper  is coupled to various blocks including a key distribution center block , a relational database block , a Microsoft active directory block , and a lightweight directory access protocol block , and another functions block . Key distribution center block  is a key distribution center of the Kerberos system. The function of this block will be further described below. Database block  is a relational database that includes a user information list  and session information list . User information list  is a list of active users in the system and their associated credentials. All information about the user with respect to the privileges, mainly the current ticket, start time and end time of the ticket as well as the active session of the user are in the user information list. Database also includes a session information list  that is used for maintaining the session specific credentials in the system. All the session related information with respect to the privilege servers such as session ID, the proxy ID and session key are maintained within a list.","Obfuscate\/deobfuscate block  obfuscates or deobfuscates the data with the given key. Obfuscate\/deobfuscate block  is essentially a scrambler or descrambler of the various information. Obfuscate\/deobfuscate block  may be coupled to various blocks including a common application programming interface block  (CAPI) or message digest  (MD) block . Obfuscate\/deobfuscate block may also be coupled to other blocks  depending on the specific functions of the specific system. Both the function of CAPI block  and message digest  block  are known to those skilled in the art.","Key generator  is responsible for the generation of tickets and sequence numbers as will be further described below. Also, key generator  generates session keys for a given session. Tickets may, for example, include various information such as a lifetime indicator, a start time and an end time. The tickets may also include random numbers as part thereof to prevent duplication. Key generator  is coupled to Kerberos block , a common application programming interface block , a message digest  block , and another function block . Kerberos block  as mentioned in the background of the invention is a security mechanism typically used for a single log-on to use resources within a trusted network. Some of the general functions of Kerberos are represented by block . Blocks  and  are similar to that of block  and  above.","Referring now to ,  and , the initial log in sequence for a client or user to the system is illustrated. In step , an authentication scheme is negotiated. The negotiation of the authentication scheme will be further described below in . Once a negotiation mechanism or token is accepted by the system, the negotiation mechanism is validated while the client is logged into the system. When the client logs out of the system the negotiation mechanism is invalidated as will be further described below.","In step  the client privilege server proxy  presents a user ID and other required information to web adapter . Web adapter  represents the user and transfers the user ID and required information to head end server . Head end server  then provides the user ID and required information to privilege server .","In step , privilege server  validates the user through policy engine . Once a user has been validated by policy engine , the key generator  generates a ticket for that user. The ticket is encrypted with the user password. The ticket is then coupled to head end server  which in turns transfers the ticket to web adapter . Web adapter  transfers the ticket to user privilege server proxy . The privilege server proxy  can decrypt the ticket only if it has the appropriate password.","In step , after the ticket is decrypted with the user password in step , a default service access request token encrypted with a ticket and user ID is transferred back through web adapter  and head end server  to privilege server . Privilege server  validates the user and issues a sequence number and session key encrypted with the ticket to form a packet. The packet is provided to head end server  which learns that the user is who he claims to be and access to the system is allowed. The head end server  passes the packet to privilege server proxy through web adapter .","In step , the client server privilege proxy  sees the sequence number and key encrypted with the ticket from privilege the server  and decrypts the packet with the user password and provides the ticket and sequence number encrypted with the session key to the service desired such as data server . In step , the user is validated by receiving the packet from web adapter . The packet is decrypted with the session key while privilege server proxy  validates the user in coordination with privilege server . Once the user is validated the data server  allows appropriate roll based privileges to be performed by user .","Referring now to , the negotiation authentication scheme described above in step  is further described in step . The client privilege server proxy proposes one security mechanism or an ordered list of security mechanisms to the privilege server . A negotiation token may be used to establish the authentication mechanism context. In step , if the privilege server authentication model decoding modules are not present within the client machine, the user  may try to download the module from a specific URL. The privileges server accepts or rejects step . If the token is not accepted in step , step  is re-executed. If the token is accepted in step , the token is stored in stan . Once a mechanism has been selected, tokens specific to the selected mechanism are carried with a security token. The token may, for example, include various information such as a time stamp in step . Time stamping a token may include providing a start time, a stop time, and a duration length of the valid token.","Referring now to ,  and , once authentication has taken place as illustrated in , user access to a particular service  is provided. As mentioned in , the user is provided a session key and sequence number from the privilege server. User  presents the ticket and sequence number encrypted in step  with the session key to a service  such as data server  through web adapter .","In step , the client is validated and given a role-based access to data server . Sessions may be chosen from an ordered list in step . The user privilege server proxy  encrypts the session name with the ticket and passes this information to privilege server  through head and server  and web adapter .","In step , when the session name from user  is provided to privilege server , the user ticket and privileges for the requested session are validated. If the request is valid, privilege server  issues a sequence number and session key against the ticket. The sequence number and key is encrypted with a ticket presented by the user in step . In step , the client proxy decrypts the packet of the session number and session key against the ticket as described above. The sequence number and ticket encrypted with the session key are provided to the desired service  in step .","Referring now to , , and , various administration functions may also be performed by system . One such function is registering a user. In step , a request for user registration is received by privilege server  In step . The user sends its user ID and required information based upon the underlying authentication scheme to web adapter . Web adapter  provides the information to privilege server through head end server .","In step , an asymmetric key is issued by privilege server . The asymmetric key is forwarded through head end server  to web adapter . Web adapter  provides the asymmetric key to proxy server . In step , an open connection is for authentication purposes between user privilege server proxy  and web adapter .","In step , user privilege server proxy  presents the password encrypted with the asymmetric key described above from the open connection. The asymmetric key and user ID is provided to head end server  which in turn provides the information to privilege server . Privilege server , in step , registers the user ID and password with the policy engine .","Referring now to , , and , password changes are also provided for in the administrative functions of the system. To change a password, the user privilege server proxy  presents the old password, a new password, and user identification to privilege server  through head end server . Preferably, the password and the old password are encrypted with the ticket in step . In step , privilege server  on receiving the old password, new password and user ID validates the user and issues a new pair of sequence numbers and a session key. These are provided to privilege server proxy  through head end server  and web adapter .","Referring now to , , and , the administrative functions may also include logging out of the system. The privilege server proxy  requests a sequence number in step  and session key from privilege server  through head end server  and web adapter  by sending the head end server access request token encrypted with a ticket and the user ID.","In step , privilege server proxy issues a sequence number and sequence key encrypted with a ticket after validating the user. The head end server  is accessed and forwards the information to web adapter . Web adapter  forwards the information to privilege server proxy .","In step , the privilege server proxy receives the encrypted sequence number and presents the ticket, the token and sequence number encrypted with the sequence key to web adapter . Web adapter  requests a log out from the head end server . Head end and server  logs the user out in step .","While particular embodiments of the invention have been shown and described, numerous variations and alternate embodiments will occur to those skilled in the art. Accordingly, it is intended that the invention be limited only in terms of the appended claims."],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"BRIEF DESCRIPTION OF THE DRAWINGS","p":[{"@attributes":{"id":"p-0020","num":"0019"},"figref":"FIG. 1"},{"@attributes":{"id":"p-0021","num":"0020"},"figref":["FIG. 2","FIG. 1"]},{"@attributes":{"id":"p-0022","num":"0021"},"figref":"FIG. 3"},{"@attributes":{"id":"p-0023","num":"0022"},"figref":"FIG. 4"},{"@attributes":{"id":"p-0024","num":"0023"},"figref":"FIG. 5"},{"@attributes":{"id":"p-0025","num":"0024"},"figref":"FIG. 6"},{"@attributes":{"id":"p-0026","num":"0025"},"figref":"FIG. 7"},{"@attributes":{"id":"p-0027","num":"0026"},"figref":"FIG. 8"}]},"DETDESC":[{},{}]}
