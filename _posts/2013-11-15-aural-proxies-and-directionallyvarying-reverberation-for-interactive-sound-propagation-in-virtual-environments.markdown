---
title: Aural proxies and directionally-varying reverberation for interactive sound propagation in virtual environments
abstract: The subject matter described herein includes a method for simulating directional sound reverberation. The method includes performing ray tracing from a listener position in a scene to surface as visible from a listener position. The method further includes determining a directional local visibility representing a distance from a listener position to nearer surface in the scene alone each ray. The method further includes determining directional reverberation at the listener position based on the directional local visibility. The method further includes rendering a simulated sound indicative of the directional reverberation at the listener position.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09398393&OS=09398393&RS=09398393
owner: The University of North Carolina at Chapel Hill
number: 09398393
owner_city: Chapel Hill
owner_country: US
publication_date: 20131115
---

{"@attributes":{"id":"description"},"RELAPP":[{},{}],"heading":["PRIORITY CLAIM","GOVERNMENT INTEREST","TECHNICAL FIELD","BACKGROUND","SUMMARY","DETAILED DESCRIPTION"],"p":["This application claims the benefit of U.S. Provisional Patent Application Ser. No. 61\/735,989, filed Dec. 11, 2012; the disclosure of which is incorporated herein by reference in its entirety.","This invention was made with government support under Grant No. W911NF-10-1-0506 awarded by the Army Research Office and Grant Nos. CMMI-1000579, IIS-0917040, and 0904990 awarded by the National Science Foundation. The government has certain rights in the invention.","The subject matter described herein relates to estimating sound reverberation. More particularly, the subject matter described herein relates to aural proxies and directionally-varying reverberation for interactive sound propagation in virtual environments.","Video games, virtual reality, augmented reality, and other environments simulate sound reverberations to make the environments more realistic. To make the simulated sound reverberation more realistic, it is desirable to simulate directionally varying reverberations and early reflections so that the sound experienced by a listener will vary based on the listener position and orientation with respect to the sound source. Accordingly, there exists a need for methods, systems, and computer readable media for providing aural proxies and simulating directionally varying reverberation and early reflections for interactive sound propagation in virtual environments.","The subject matter described herein includes an efficient algorithm to compute spatially-varying, direction-dependent artificial reverberation and reflection filters in large dynamic scenes for interactive sound propagation in virtual environments and video games. The present approach performs Monte Carlo integration of local visibility and depth functions to compute directionally-varying reverberation effects. The algorithm also uses a dynamically-generated rectangular aural proxy to efficiently model 2-4 orders of early reflections. These two techniques are combined to generate reflection and reverberation filters which vary with the direction of incidence at the listener. This combination leads to better sound source localization and immersion. The overall algorithm is efficient, easy to implement, and can handle moving sound sources, listeners, and dynamic scenes, with minimal storage overhead. We have integrated our approach with the audio rendering pipeline in Valve's Source game engine, and use it to generate realistic directional sound propagation effects in indoor and outdoor scenes in real-time. We demonstrate, through quantitative comparisons as well as evaluations, that the present approach leads to enhanced, immersive multi-modal interaction.","According to one aspect, the subject matter described herein includes a method for simulating directional sound reverberation. The method includes performing ray tracing from a listener position in a scene to surface as visible from a listener position. The method further includes determining a directional local visibility representing a distance from a listener position to nearer surface in the scene alone each ray. The method further includes determining directional reverberation at the listener position based on the directional local visibility. The method further includes rendering a simulated sound indicative of the directional reverberation at the listener position.","The subject matter described herein may be implemented in hardware, software, firmware, or any combination thereof. As such, the terms \u201cfunction\u201d \u201cnode\u201d or \u201cmodule\u201d as used herein refer to hardware, which may also include software and\/or firmware components, for implementing the feature being described. In one exemplary implementation, the subject matter described herein may be implemented using a computer readable medium having stored thereon computer executable instructions that when executed by the processor of a computer control the computer to perform steps. Exemplary computer readable media suitable for implementing the subject matter described herein include non-transitory computer-readable media, such as disk memory devices, chip memory devices, programmable logic devices, and application specific integrated circuits. In addition, a computer readable medium that implements the subject matter described herein may be located on a single device or computing platform or may be distributed across multiple devices or computing platforms.","As the visual quality of video games and virtual reality systems continuously improves, there is increased emphasis on other modalities such as sound rendering to improve the realism of virtual environments. Several experiments and user studies [5, 26, 14, 15] have shown that improved sound rendering leads to an increased sense of presence in virtual environments. In addition, investigation of audio-visual cross-modal effects has shown that a greater correlation between audio and visual rendering leads to an improved sense of spaciousness of the environment, and an improved ability to locate sound sources [14, 15]. As a result, there has been significant research on sound propagation [28, 19, 32, 23], i.e., computing the manner in which sound waves reflect and diffract about obstacles as they travel through an environment. In particular, reverberation, i.e., sound reaching the listener after a large number of successive temporally dense reflections with decaying amplitude, lends large spaces a characteristic impression of spaciousness. It is the primary phenomenon used by game designers and VR systems to create immersive acoustic spaces. In addition, early reflections, i.e., sound reaching the listener after a small number of reflections, play an important role in helping the user pinpoint the sound source position. In this disclosure, we address the problem of interactively computing reflection and reverberation effects which plausibly vary with the position and orientation of the listener.\n\n","Given the high computational complexity of sound propagation, current video games still use techniques outlined over a decade ago in the Interactive 3D Audio Level 2 specification [10]. Since VR training systems are increasingly based on game engines, the limitations of this model apply to these systems as well. These techniques model reverberation using simple artificial reverberation filters [11], which capture the statistics of reverberant decay using a small set of parameters. The designer manually specifies multiple reverberation filters for different regions of the scene; these filters are interpolated at runtime to provide smooth audio transitions. This approach has two major limitations. Firstly, the amount of spatial detail in the sound field directly depends on the designer's effort, since more reverberation regions must be specified for higher spatial detail. Secondly, the modeled reverberation is not direction-dependent, which leads to reduced immersion. Direction-dependent reverberation provides audio cues for the physical layout of an environment relative to a listeners position and orientation. For example, in a small room with a door opening into a large hangar, one would expect reverberation to be heard in the small room through the open door. This effect cannot be captured without direction-dependent reverberation.","These simple reverberation models cannot handle outdoor scenes, where echoes, not reverberation, are the dominant acoustic effect. In such cases, designers rely on their judgment to specify static filters for modeling outdoor scenes. This results in a static sound field which does not vary as the listener moves around, and is limited to directionally-invariant effects.","Main Results.","We present a simple and efficient sound propagation algorithm inspired by work on local illumination models (such as ambient occlusion) and the use of proxy geometry in visual rendering. Our approach generates spatially-varying, direction-dependent reflections and reverberation in large scenes at interactive rates. We perform Monte Carlo integration of local visibility and depth functions for a listener, weighted by spherical harmonics basis functions. Our approach also computes a local geometry proxy which is used to compute 2-4 orders of directionally-dependent early reflections, allowing our technique to plausibly model outdoor scenes as well as indoor scenes. Our approach reduces manual effort, since it automatically generates spatially-varying reverberation based on the scene geometry. Our approach also enables immersive, direction-dependent reverberation due to the use of spherical harmonics to compactly represent directionally-varying depth functions. It is highly efficient, requiring only 5-10 ms to update the reflection and reverberation filters for scenes with tens of thousands of polygons on a single CPU core, and is easy to implement and integrate into an existing game, as shown by our integration with Valve's Source engine. We also evaluate our results by comparison against a reference image source method, and through a preliminary user study.","The description herein is organized as follows. Section 2 presents an overview of related work. Sections 3 and 4 present our algorithm, and Section 5 presents results and analysis based on our implementation. Finally, Section 6 concludes with a discussion of limitations and potential avenues for future work.","2 Related Work","In this section, we present a brief overview of prior work on sound propagation and reverberation,","2.1 Sound Propagation and Impulse Responses","Sound received at a listener after propagation through the environment is typically divided into three components [12]: (a) direct sound, i.e., sound reaching the listener directly from a source visible to the listener; (b) early reflections, consisting of sound that has undergone a small number (typically 1-4) of reflections and\/or diffractions before reaching the listener; and (c) reverberation, consisting of a large number of successive temporally dense reflections with decaying amplitude (see ). Direct sound and early reflections aid in localizing the sound source, while reverberation gives a sense of the size of the environment, and improves the sense of immersion.","The output of a sound propagation algorithm is a quantity called the impulse response between the source and the listener. The impulse response is the signal received at the listener when the source emits a unit impulse signal. Acoustics in a stationary, homogeneous medium can be viewed as a linear time-invariant system [12], and hence the signal received at the listener in response to an arbitrary signal emitted by the source can be obtained by convolving the source signal with the impulse response. In our work, we use impulse responses to represent early reflections.","2.2 Wave Simulation","Accurate, physically-based sound propagation can be modeled by numerically solving the acoustic wave equation, using techniques such as finite differences [28], finite elements [30], or boundary elements [9]. However, these techniques require the interior or boundary of the scene to be discretized at the Nyquist rate for the maximum frequency simulated. Hence, these techniques often require hours of simulation time and gigabytes of storage to model low frequencies in large scenes, and scale as the third or fourth power of frequency. Despite recent advances [19], they remain impractical for real-time simulation.","2.3 Geometric Acoustics","Most high-performance acoustics simulation systems are based on geometric techniques [33, 8], which make the assumption that sound travels along linear rays. These methods exploit modem high-performance ray tracing techniques [29] to efficiently model sound propagation in complex, dynamic scenes. The geometric assumption limits these methods to accurate simulation of specular and diffuse reflections at high frequencies only; diffraction is typically modeled separately [27,32] by identifying individual diffracting edges. While geometric techniques can interactively model early reflections and diffraction, they cannot interactively model reverberation, since they would require very high orders (50-100) of reflection.","2.4 Precomputed Sound Propagation","Over the last decade, there has been much research on precomputation-based techniques for real-time sound propagation. Guided by the observation that large portions of typical game scenes are static, these techniques precompute sound propagation between static portions of the scene, and use this precomputed data at run-time to update the response from moving sources to a moving listener. Precomputation techniques have been developed based on wave solvers [20] as well as geometric methods [23, 31, 3]. However, these methods cannot practically handle large scenes with long reverberation tails (3-8 seconds), since the size of the precomputed data set scales quadratically with scene size (volume or surface area) and linearly with reverberation length. Developing compressed representations of precomputed sound propagation data is an active area of research. Methods such as beam tracing [8] generate compact data sets, but are limited to static sources.","2.5 Artificial Reverberation","Current games and VR systems model reverberation effects using techniques such as feedback delay networks [11], which encode the parameters of a statistical model describing reverberant sound. The scene must be manually divided into zones, and reverberation parameters must be manually specified for each zone. Parameters are interpolated between zones to create smooth audio transitions [10]. Recently, Bailey and Brumitt presented a technique [4] based on cube map rasterization to automatically determine reverberation parameters. Our approach is similar in spirit, but uses local visibility and depth information to adjust these reverberation parameters. This allows for a greater degree of designer control and enables immersive directional reverberation effects.","2.6 Local Approximations in Visual Rendering","Ambient occlusion [13] is a popular technique used in movies and video games to model shadows cast by ambient light. The intensity of light at a given surface point is evaluated by integrating a local visibility function, with cosine weights, over the outward-facing hemisphere at the surface point. The integral is evaluated by Monte Carlo sampling of the local visibility function. This method can be generalized to obscurance, where the visibility function is replaced by a distance attenuation function [35]. In recent years, screen-space techniques have been developed [22] to efficiently compute approximate ambient occlusion in real-time on modem graphics hardware. Our approach is related to these methods in that we integrate a local depth function to estimate the reverberation properties at a given listener position. Our approach differs from ambient occlusion methods in that we integrate over a sphere centered at the listener position, instead of a hemisphere centered at a surface point.","Many techniques have been developed to accelerate the rendering of large, complex scenes using proxy geometry or impostors. These techniques replace complex geometry with simple proxies such as planar quadrilaterals [17] which may be dynamically generated [21]. Proxy methods have also been used to render distant objects such as clouds [6]. Textured box culling [1] is a method for representing far field geometry by a 6-sided textured cube. In addition to accelerating the rendering of large, complex scenes, simplified proxies can also be used to significantly accelerate the computation of complex, computationally-intensive phenomena such as global illumination. Modular radiance transfer [16] describes a method for replacing complex geometry with cubical proxies, which are then used to compute indirect illumination in response to direct illumination computed for the original, complex geometry. Our method shares some similarities with these previous methods, in that it fits a 6-sided cubical proxy to the local geometry around the listener, and uses this proxy to compute higher-reflections in response to first-order reflections computed using the original geometry.","3 Directionally-Varying Reverberation","In this section, we describe our algorithm for computing dynamic spatially-varying directional reverberation. We begin by describing the statistical model we use to relate the parameters of an artificial reverberation filter to the geometry of a scene.","3.1 Artificial Reverberation and Reverberation Time","Artificial reverberation aims to model the statistics of how sound energy decays in a space over time. For example, an often-used statistical model for reverberation in a single rectangular room is the Eyring model [7]:",{"@attributes":{"id":"p-0038","num":"0038"},"maths":{"@attributes":{"id":"MATH-US-00001","num":"00001"},"math":{"@attributes":{"overflow":"scroll"},"mtable":{"mtr":{"mtd":[{"mrow":{"mrow":{"mrow":[{"mi":"E","mo":"\u2061","mrow":{"mo":["(",")"],"mi":"t"}},{"msub":{"mi":"E","mn":"0"},"mo":"\u2062","msup":{"mi":"e","mrow":{"mfrac":{"mi":"cS","mrow":{"mn":"4","mo":["\u2062","\u2062"],"mstyle":{"mspace":{"@attributes":{"width":"0.3em","height":"0.3ex"}}},"mi":"V"}},"mo":"\u2062","mrow":{"mi":"tlog","mo":"\u2061","mrow":{"mo":["(",")"],"mrow":{"mn":"1","mo":"-","mi":"\u03b1"}}}}}}],"mo":"="},"mo":","}},{"mrow":{"mo":["(",")"],"mn":"1"}}]}}}},"br":[{},{},{},{},{}],"sub":["0 ","i=1","i","i","i","i","j=1","i,j","j","i","60"],"in-line-formulae":[{},{},{},{}],"i":["y","t","c","s","t","dx","t","s","t+\u0394t","a","s","t","b","x","t"],"sup":["N","N"]},"Intuitively, the reverberation time is related to the manner in which sound undergoes repeated reflections off of the surfaces in the scene. This in turn is quantified using the mean free path t, which is the average distance that a sound ray travels between successive reflections. Mathematically, these two quantities are related as follows [12]:",{"@attributes":{"id":"p-0040","num":"0040"},"maths":{"@attributes":{"id":"MATH-US-00002","num":"00002"},"math":{"@attributes":{"overflow":"scroll"},"mtable":{"mtr":{"mtd":[{"mrow":{"mrow":{"mi":"T","mo":"=","mrow":{"mi":"k","mo":"\u2062","mfrac":{"mi":"\u03bc","mrow":{"mi":"log","mo":"\u2061","mrow":{"mo":["(",")"],"mrow":{"mn":"1","mo":"-","mi":"\u03b1"}}}}}},"mo":","}},{"mrow":{"mo":["(",")"],"mn":"4"}}]}}}},"br":{}},{"@attributes":{"id":"p-0041","num":"0041"},"maths":{"@attributes":{"id":"MATH-US-00003","num":"00003"},"math":{"@attributes":{"overflow":"scroll"},"mrow":{"mi":"\u03bc","mo":"=","mfrac":{"mi":"cS","mrow":{"mn":"4","mo":["\u2062","\u2062"],"mstyle":{"mspace":{"@attributes":{"width":"0.3em","height":"0.3ex"}}},"mi":"V"}}}}},"br":[{},{}]},"The mean free path varies with listener position in the scene, as shown in . A straightforward approach for computing the mean free path would be to use path tracing to sample a large number of multi-bounce paths, and compute the mean free path from first principles. However, like ambient occlusion, we only use local visibility and depth information. We define a function l (\u03c9), which denotes the distance from the listener to the nearest surface along direction \u03c9. We integrate over a unit sphere centered at the listener's position to determine the local distance average, :",{"@attributes":{"id":"p-0043","num":"0043"},"maths":{"@attributes":{"id":"MATH-US-00004","num":"00004"},"math":{"@attributes":{"overflow":"scroll"},"mtable":{"mtr":{"mtd":[{"mrow":{"mover":{"mi":["l","_"]},"mo":"=","mrow":{"mfrac":{"mn":"1","mrow":{"mn":"4","mo":"\u2062","mi":"\u03c0"}},"mo":"\u2062","mrow":{"mo":"\u222b","mrow":{"mrow":[{"mi":"l","mo":"\u2061","mrow":{"mo":["(",")"],"mi":"\u03c9"}},{"mo":"\u2146","mi":"\u03c9"}],"mo":"\u2062"}}}}},{"mrow":{"mo":["(",")"],"mn":"5"}}]}}}}},{"@attributes":{"id":"p-0044","num":"0044"},"figref":"FIG. 3","o":"l","sub":["0 ","0 "]},"We then blend the user-controlled mean free path \u03bcand the local distance average :\n\n\u03bc=\u03b2+(1\u2212\u03b2)\u03bc\u2003\u2003(6)\n\nwhere \u03b2\u03b5[0,1] is the local blending weight, and \u03bc is the adjusted mean free path. While \u03b2 may be directly specified to exaggerate or downplay the spatial variation of reverberation, we describe a systematic approach for determining \u03b2 based on surface absorption.\n","Suppose reverberated sound undergoes n reflections before bouncing to the listener. Therefore, the distance traveled before the final bounce is (on average) n\u03bc, and the total distance traveled upon reaching the listener is (on average) +n\u03bc. Averaging over all n+1 bounces yields:",{"@attributes":{"id":"p-0047","num":"0047"},"maths":{"@attributes":{"id":"MATH-US-00005","num":"00005"},"math":{"@attributes":{"overflow":"scroll"},"mtable":{"mtr":[{"mtd":[{"mrow":{"mrow":{"mi":"\u03bc","mo":"=","mrow":{"mrow":[{"mfrac":{"mn":"1","mrow":{"mi":"n","mo":"+","mn":"1"}},"mo":"\u2062","mover":{"mi":["l","_"]}},{"mfrac":{"mi":"n","mrow":{"mi":"n","mo":"+","mn":"1"}},"mo":"\u2062","msub":{"mi":"\u03bc","mn":"0"}}],"mo":"+"}},"mo":","}},{"mrow":{"mo":["(",")"],"mn":"7"}}]},{"mtd":[{"mrow":{"mi":"\u03b2","mo":"=","mrow":{"mfrac":{"mn":"1","mrow":{"mi":"n","mo":"+","mn":"1"}},"mo":"."}}},{"mrow":{"mo":["(",")"],"mn":"8"}}]}]}}},"br":{},"sub":"60 "},{"@attributes":{"id":"p-0048","num":"0048"},"maths":{"@attributes":{"id":"MATH-US-00006","num":"00006"},"math":{"@attributes":{"overflow":"scroll"},"mtable":{"mtr":[{"mtd":[{"mrow":{"mrow":{"msup":[{"mrow":{"mo":["(",")"],"mrow":{"mn":"1","mo":"-","mi":"\u03b1"}},"mi":"n"},{"mn":"10","mrow":{"mo":"-","mn":"6"}}],"mo":"="},"mo":","}},{"mrow":{"mo":["(",")"],"mn":"9"}}]},{"mtd":[{"mrow":{"mi":"n","mo":"=","mfrac":{"mrow":[{"mrow":{"mo":"-","mn":"6"},"mo":["\u2062","\u2062","\u2062","\u2062"],"mstyle":[{"mspace":{"@attributes":{"width":"0.3em","height":"0.3ex"}}},{"mspace":{"@attributes":{"width":"0.3em","height":"0.3ex"}}}],"mi":"log","mn":"10"},{"mi":"log","mo":"\u2061","mrow":{"mo":["(",")"],"mrow":{"mn":"1","mo":"-","mi":"\u03b1"}}}]}}},{"mrow":{"mo":["(",")"],"mn":"10"}}]}]}}},"br":[{},{}]},"Mean free paths also vary with direction of incidence, as shown in  The above technique can be easily generalized to obtain direction-dependent reverberation times from a single user-controlled reverberation time. We express \u03bc as a function of incidence direction \u03c9:\n\n\u03bc(\u03c9)=\u03b2(\u03c9))+(1\u2212\u03b2)\u03bc\u2003\u2003(11)\n\nHere \u03bc(\u03c9) denotes the average distance that a ray incident at the listener along direction \u03c9 travels between successive bounces. As before, l(\u03c9) is computed using Monte Carlo sampling from the listener position. We then use a spherical harmonics representation of l to obtain directional reverberation, since spherical harmonics are well-suited for representing smoothly-varying functions of direction.\n","Spherical harmonics (SH) are a set of basis functions used for representing functions defined over the unit sphere. SH bases are widely used in computer graphics to model the directional distribution of radiance [25]. The basis functions are defined as [24];",{"@attributes":{"id":"p-0051","num":"0051"},"maths":{"@attributes":{"id":"MATH-US-00007","num":"00007"},"math":{"@attributes":{"overflow":"scroll"},"mtable":{"mtr":[{"mtd":[{"mrow":{"mrow":{"mrow":[{"msub":{"mi":"Y","mrow":{"mi":["p","q"],"mo":","}},"mo":"\u2061","mrow":{"mo":["(",")"],"mrow":{"mi":["\u03b8","\u03d5"],"mo":","}}},{"msub":{"mi":"N","mrow":{"mi":["p","q"],"mo":","}},"mo":["\u2062","\u2062"],"msup":{"mi":"\u2147","mrow":{"mi":["\u2148","q","\u03d5"],"mo":["\u2062","\u2062","\u2062","\u2062"],"mstyle":[{"mspace":{"@attributes":{"width":"0.3em","height":"0.3ex"}}},{"mspace":{"@attributes":{"width":"0.3em","height":"0.3ex"}}}]}},"mrow":{"msub":{"mi":"P","mrow":{"mi":"p","mo":"\u2062","mrow":{"mo":["\uf603","\uf604"],"mi":"q"}}},"mo":"\u2061","mrow":{"mo":["(",")"],"mrow":{"mi":["cos","\u03b8"],"mo":["\u2062","\u2062"],"mstyle":{"mspace":{"@attributes":{"width":"0.3em","height":"0.3ex"}}}}}}}],"mo":"="},"mo":","}},{"mrow":{"mo":["(",")"],"mn":"12"}}]},{"mtd":[{"mrow":{"mrow":{"msub":{"mi":"N","mrow":{"mi":["p","q"],"mo":","}},"mo":"=","msqrt":{"mfrac":{"mrow":[{"mrow":[{"mo":["(",")"],"mrow":{"mrow":{"mn":"2","mo":["\u2062","\u2062"],"mstyle":{"mspace":{"@attributes":{"width":"0.3em","height":"0.3ex"}}},"mi":"p"},"mo":"+","mn":"1"}},{"mo":"(","mrow":{"mi":"p","mo":"-","mrow":{"mrow":{"mo":["\uf603","\uf604"],"mi":"q"},"mo":"!"}}}],"mo":"\u2062"},{"mn":"4","mo":"\u2062","mrow":{"mrow":{"mi":"\u03c0","mo":"\u2061","mrow":{"mo":["(",")"],"mrow":{"mi":"p","mo":"+","mrow":{"mo":["\uf603","\uf604"],"mi":"q"}}}},"mo":"!"}}]}}},"mo":","}},{"mrow":{"mo":["(",")"],"mn":"13"}}]}]}}},"br":[{},{},{},{},{},{}],"sub":["p,q ","p=0","q=\u2212p","p,q","p,q","p=0","q=\u2212p","p,q","p,q","p,q","p,q","0","p,q "],"b":"1","i":["a","l","l","Y","Y","=\u03b2l"],"in-line-formulae":[{},{},{},{},{},{}],"sup":["p","p","p"]},{"@attributes":{"id":"p-0052","num":"0052"},"maths":{"@attributes":{"id":"MATH-US-00008","num":"00008"},"math":{"@attributes":{"overflow":"scroll"},"mtable":{"mtr":{"mtd":[{"mrow":{"mrow":{"msub":{"mi":["l","i"]},"mo":"=","mrow":{"mfrac":{"mn":"1","mi":"N"},"mo":"\u2062","mrow":{"munder":{"mo":"\u2211","mi":"j"},"mo":["\u2062","\u2062"],"mstyle":{"mspace":{"@attributes":{"width":"0.3em","height":"0.3ex"}}},"mrow":{"mo":["(",")"],"mrow":{"mn":"1","mo":"-","mrow":{"mn":"2","mo":"\u2062","mrow":{"msub":[{"mi":["\u03c9","j"]},{"mi":["\u03c9","i"]}],"mo":"\u00b7"}}}}}}},"mo":","}},{"mrow":{"mo":["(",")"],"mn":"17"}}]}}}},"br":[{},{}],"sub":["j ","j ","i","i","0"],"in-line-formulae":[{},{}],"i":"=\u03b2l"},"This enables realistic directional reverberation on a variety of speaker configurations, ranging from stereo to 5.1 or 7.1 home theater systems.","4 Early Reflections Estimation","In addition to reverberation, we also wish to model early reflections of sound, for the purposes of improved immersion and spatial localization of sound sources, State-of-the-art techniques for interactively (12) modeling reflected sound are based on the image source method [2]. This method involves determining virtual image sources which represent reflected sound paths reaching the listener from the source. To determine the positions of the image sources, and which image sources contribute reflected sound to the listener, rays are traced from the source position, and recursively from each of the image sources,","Such multi-bounce ray tracing is possible in real-time [29] for up to around 4-5 orders of reflections. However, with all existing real-time ray tracers, achieving such a level of performance requires dedicating significant computational resources (a large number of CPU cores, or most, if not all, of the compute units on a GPU) solely to the audio pipeline. These computational demands cannot be practically met by modern game engines, that require most of the computational resources to be dedicated to rendering, physics simulation, or AI. Hence, we propose an approximate approach which demands significantly fewer computational resources.","Our approach only traces single-bounce rays, which can be used to compute image sources for first-order reflections. We next describe a local model for extrapolating from first-order image sources to higher-order image sources. This approach does not require tracing additional rays to compute higher-order reflections, and hence has a lower computational overhead than ray-tracing-based image source methods.","4.1 Local Model for Reflection Estimation","Our local model is based on the observation that in a rectangular (or shoebox) room, image sources are never occluded, and their positions can be computed by reflections about one of six planes, without having to trace any rays. In fact, in a rectangular room, the superposition of sound fields induced by the image sources obtained using this approach is an analytical solution of the wave equation in the scene [2].","We begin by fitting a shoebox to the local geometry around the listener. We consider the hit points of all the ray traced from the listener during reverb estimation, and perform a cube map projection. This process bins each of the hit points to one of the six cube faces. Suppose the set of hit points binned to one particular cube face (with normal n) is denoted by {d,n,\u03b1)}, where dis the projection depth of the ihit point, nis the surface normal at the hit point, and \u03b1is the absorption coefficient of the surface at the hit point. We use this information to compute the following aggregate properties for the cube face:","Depth: We average the depths of the hit points:\n\n],\u2003\u2003(19)\n\n(where [\u2022] denotes the averaging operator) to determine the average depth of the cube face from the listener along the appropriate coordinate axis.\n","Absorption: We similarly average the absorption coefficients of the hit points;\n\n\u03b1=[\u03b1],\u2003\u2003(20)\n\nto determine the absorption coefficient of the cube face. Note that this process automatically assigns higher weights to the absorption coefficients of surfaces with greater visible surface area (as seen from the listener's position).\n","Scattering In complex scenes, the surface normals nare likely to deviate to a varying extent from the cube face normal n, assuming the cube face to be perfectly planar is likely to result in excess reflected sound being computed. To address this issue, we compute a scattering coefficient a for the cube face, which describes the fraction of non-absorbed sound that is reflected in directions other than the specular reflection direction. Specifically, we compute the random-incidence scattering coefficient, which is defined as the fraction of reflected sound energy that is scattered away from the specular reflection direction, averaged over multiple incidence directions [34].","For any given incidence direction, a surface patch reflects sound in the specular direction for the cube face only if the local surface normal of the patch is aligned with the surface normal of the cube face. We define an alignment indicator function, \u03c7, such that \u03c7(n)=1 if and only if \u2225n\u00b7n\u22121\u2225\u2266\u03b5, and 0 otherwise, where \u03b5 is some suitably chosen tolerance. Since the total energy reflected from each hit point is \u03a3(1\u2212\u03b1), we get:",{"@attributes":{"id":"p-0063","num":"0063"},"maths":{"@attributes":{"id":"MATH-US-00009","num":"00009"},"math":{"@attributes":{"overflow":"scroll"},"mtable":{"mtr":{"mtd":[{"mrow":{"mrow":{"mi":"\u03c3","mo":"=","mrow":{"mn":"1","mo":"-","mfrac":{"mrow":[{"mrow":[{"msub":{"mi":["\u03a3","i"]},"mo":"\u2061","mrow":{"mo":["(",")"],"mrow":{"mn":"1","mo":"-","msub":{"mi":["\u03b1","i"]}}}},{"msub":{"mi":["\u03c7","n"]},"mo":"\u2061","mrow":{"mo":["(",")"],"msub":{"mi":["n","i"]}}}],"mo":"\u2062"},{"msub":{"mi":["\u03a3","i"]},"mo":"\u2061","mrow":{"mo":["(",")"],"mrow":{"mn":"1","mo":"-","msub":{"mi":["\u03b1","i"]}}}}]}}},"mo":","}},{"mrow":{"mo":["(",")"],"mn":"21"}}]}}}},"br":{}},"Note that we cannot use the listeners local coordinate axes for projection, since this would result in the shoebox dimensions varying even if the listener rotates in-place, resulting in an obvious instability in the reflected sound field. Hence, we use the world-space coordinate axes for projection.","4.2 Image Source Extrapolation","Given the local shoebox proxy, we can quickly extrapolate from first-order reflections to higher-order reflections. We take the first-order image sources computed using ray tracing, and recursively reflect them about the faces of the proxy shoebox, yielding higher-order image sources. This process efficiently constructs approximate higher-order image sources. The image sources computed by this approach also have the important property that the directions of the higher-order image sources relative to the listener are plausibly approximated, i.e., if reflected sound is expected to be heard from the listeners right, the approximation tends to contain a reflection reaching the listener from the right. This is because geometry lying (say) to the right of the listener is mapped to a proxy face which also lies to the right of the listener. Therefore, the relative positions of two objects or surfaces roughly correspond to the relative positions of the proxy faces they are mapped to. (See the accompanying video for more.)","To account for absorption and surface normal variations, after each order of reflection, the strengths of the image sources are scaled by (1\u2212\u03b1)(1\u2212\u03c3), where \u03b1 is the absorption coefficient of the face about which the image source was reflected, and \u03c3 is its scattering coefficient.","5 Results","In this section, we present experimental results of the performance of our implementation, and analyze the results.","5.1 Implementation","We have integrated our approach into Valve's Source game engine. Sound is rendered using Microsoft's XAudio2 API. Ray tracing, mean free path estimation, proxy generation, and impulse response computation are performed continuously in a separate thread; the latest estimates are used to configure XAudio2's artificial reverberators for each channel as well as a per-channel convolution unit. Intel Math Kernel Library is used for convolution. All experiments were performed on an Intel Xeon X5560 with 4 cores and 2 GB of RAM running Windows Vista; our implementation uses only a single CPU core.  shows the benchmark scenes used in our experiments. These are indoor and outdoor scenes with dynamic objects (e.g. moving doors).","5.2 Performance","Table 1 shows the time taken to perform the integration required to estimate mean free path. Our implementation uses the ray tracer built into the game engine, which is designed to handle only a few ray shooting queries arising from firing bullet weapons and from GUI picking operations; it is not optimized for tracing large batches of rays. Nonetheless, we observe high performance, indicating that our method is suitable for use in modern game engines running on current commodity hardware. Given the local distance average, the final mean free path and RTestimate is computed within 1-2 \u03bcs.",{"@attributes":{"id":"p-0070","num":"0070"},"tables":{"@attributes":{"id":"TABLE-US-00001","num":"00001"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"center"}},"thead":{"row":{"entry":"TABLE 1"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}},{"entry":"Performance of local distance average estimation."}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"5"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"63pt","align":"center"}},{"@attributes":{"colname":"3","colwidth":"42pt","align":"center"}},{"@attributes":{"colname":"4","colwidth":"56pt","align":"center"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"Scene","Polygons","Ray Samples","Time (ms)"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"4","align":"center","rowsep":"1"}}]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"5"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"63pt","align":"char","char":"."}},{"@attributes":{"colname":"3","colwidth":"42pt","align":"center"}},{"@attributes":{"colname":"4","colwidth":"56pt","align":"char","char":"."}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"Train Station","9110","1024","7.88"]},{"entry":[{},"Citadel","23231","2048","8.94"]},{"entry":[{},"Reservoir","31690","1024","10.79"]},{"entry":[{},"Outlands","55866","1024","4.59"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"4","align":"center","rowsep":"1"}}]}]}}]}}},"The complexity of the integration step is O(k log n), where k is the number of integration samples (rays) and n is the number of polygons in the scene. For low values of k, we expect very high performance with a modern ray tracer.","The time required to generate the proxy is scene-independent. In practice we observe around 0.9-1.0 ms for generating the proxy using 1024 samples; the cost scales linearly in the number of samples. Table 2 compares the performance of constructing higher-order image sources using our method to the time required by a reference ray-tracing-based image source method. The performance of our method is independent of scene complexity, whereas the image source method incurs increased computational overhead in complex scenes.",{"@attributes":{"id":"p-0073","num":"0073"},"tables":{"@attributes":{"id":"TABLE-US-00002","num":"00002"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"center"}},"thead":{"row":{"entry":"TABLE 2"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}},{"entry":"Performance of proxy-based higher-order reflections, compared to"},{"entry":"reference image source method. Column 2 indicates the orders of"},{"entry":"reflection, Column 3 indicates time taken by our approach, and"},{"entry":"Column 4 indicates time taken by the ray-tracing-based image"},{"entry":"source method to compute the reference solution."}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"5"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"56pt","align":"center"}},{"@attributes":{"colname":"3","colwidth":"35pt","align":"center"}},{"@attributes":{"colname":"4","colwidth":"70pt","align":"center"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"Scene","Refl. Orders","Time (ms)","Ref. Time (ms)"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"4","align":"center","rowsep":"1"}}]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"5"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"56pt","align":"center"}},{"@attributes":{"colname":"3","colwidth":"35pt","align":"char","char":"."}},{"@attributes":{"colname":"4","colwidth":"70pt","align":"char","char":"."}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"Outlands","2","0.005","380"]},{"entry":[{},{},"3","0.010","3246"]},{"entry":[{},"Reservoir","2","0.004","101"]},{"entry":[{},{},"3","0.009","656"]},{"entry":[{},"Citadel","2","0.01","341"]},{"entry":[{},{},"3","0.02","3289"]},{"entry":[{},"Train Station","2","0.005","30"]},{"entry":[{},{},"3","0.015","223"]},{"entry":[{},{},"4","0.049","1689"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"4","align":"center","rowsep":"1"}}]}]}}]}},"br":{}},{"@attributes":{"id":"p-0074","num":"0074"},"figref":"FIG. 5"},{"@attributes":{"id":"p-0075","num":"0075"},"figref":"FIG. 8"},{"@attributes":{"id":"p-0076","num":"0076"},"figref":"FIG. 6"},"5.4 Comparison",{"@attributes":{"id":"p-0077","num":"0077"},"figref":"FIG. 7"},"In the case of the Train Station scene, our approach generates extraneous low-amplitude contributions, while retaining a similar overall decay profile. The larger number of contributions arises because our method maps many surfaces which do not actually contribute specular reflections at the listener to the same cube face. This leads to many more higher-order image sources being generated as compared to the reference method. The amplitudes of these contributions are lower since the estimated scattering coefficients compensate for the large variation in local surface normals over the proxy faces by reducing the amplitude of the reflected sound.","In the case of the Reservoir scene, our approach misses a reflection peak which can be seen in the reference impulse response (see ). This is most likely a higher-order reflection from one of the rocks (which are small relative to the rest of the scene). Our approach cannot model higher order reflections from relatively small, distinct features such as the rocks in this scene, since the dimensions of the rectangular proxy are dominated by the distant cliffs and terrain in this scene, which occupy a larger visible projected surface area with respect to the listener position.","In the accompanying video, we also compare the directionally-varying reverberation generated by our method against a simple static reverberation filter, as used in current game engines and VR systems. The video clearly demonstrates that our method is able to create a richer, more immersive reverberant sound field with reduced designer effort, as compared to the state-of-the-art.","5.5 Evaluation","We have performed a preliminary user study to compare the quality of early reflections generated by our approach against those generated by a reference ray-tracing-based image source method. The study involves 16 pairs of video clips showing the same sound clips (gunshots) rendered within an environment. For each of our benchmark scenes, we generated 4 pairs of sound clips. Two of these pairs contained one clip each from our method and the reference method. The remaining two pairs either contained two identical clips generated using the reference method, or two identical clips generated using our method. The ordering of clips was randomized for each participant. For each pair of clips, participants were asked to rate a) which clip they considered more immersive, and b) which clip they thought matched better with the visual rendering. Both answers were given on a scale of Ito 10, with 1 meaning the first clip in the pair was preferred strongly, and 10 meaning the second clip in the pair was preferred strongly.","Table 3 tabulates the results of this user study, gathered from 20 participants. Question 1 refers to the question regarding overall level of realism. Question 2 refers to the question regarding correlation with the visual rendering. For question and for each scene, the table provides the mean and standard deviation of the scores for three groups of questions. The first group, denoted REF\/REF, contains video pairs containing two identical clips generated using the reference method. The second group, denoted OUR\/OUR, contains video pairs containing two identical clips generating using our method. The third group, denoted REF\/OUR, contains video pairs containing one clip generated using the reference method, and one clip generated using our method. In this group, low scores indicate a preference for the reference method, and high scores indicate a preference for our method.",{"@attributes":{"id":"p-0083","num":"0083"},"tables":{"@attributes":{"id":"TABLE-US-00003","num":"00003"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"center"}},"thead":{"row":{"entry":"TABLE 3"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}},{"entry":"Results of our preliminary user study. For each question and for"},{"entry":"each scene, we tabulate the mean and standard deviations of the"},{"entry":"responses given by the participants. The columns labeled REF\/REF are the"},{"entry":"scores for questions involving comparisons between two identical clips"},{"entry":"generated using the reference image source method. The columns labeled"},{"entry":"OUR\/OUR are the scores for questions involving comparisons between"},{"entry":"two identical clips generated using our approach. The columns labeled"},{"entry":"REF\/OUR are the scores for questions involving comparisons between our"},{"entry":"approach and the reference approach."}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"4"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"70pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"56pt","align":"center"}},{"@attributes":{"colname":"2","colwidth":"49pt","align":"center"}},{"@attributes":{"colname":"3","colwidth":"42pt","align":"center"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"REF\/REF","OUR\/OUR","REF\/OUR"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"8"},"colspec":[{"@attributes":{"colname":"1","colwidth":"35pt","align":"center"}},{"@attributes":{"colname":"2","colwidth":"35pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"28pt","align":"center"}},{"@attributes":{"colname":"4","colwidth":"28pt","align":"center"}},{"@attributes":{"colname":"5","colwidth":"21pt","align":"center"}},{"@attributes":{"colname":"6","colwidth":"28pt","align":"center"}},{"@attributes":{"colname":"7","colwidth":"21pt","align":"center"}},{"@attributes":{"colname":"8","colwidth":"21pt","align":"center"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},{},{},"Std,",{},"Std,",{},"Std,"]},{"entry":["Question","Scene","Mean","Dev.","Mean","Dev.","Mean","Dev."]},{"entry":{"@attributes":{"namest":"1","nameend":"8","align":"center","rowsep":"1"}}}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"8"},"colspec":[{"@attributes":{"colname":"1","colwidth":"35pt","align":"center"}},{"@attributes":{"colname":"2","colwidth":"35pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"28pt","align":"center"}},{"@attributes":{"colname":"4","colwidth":"28pt","align":"char","char":"."}},{"@attributes":{"colname":"5","colwidth":"21pt","align":"center"}},{"@attributes":{"colname":"6","colwidth":"28pt","align":"center"}},{"@attributes":{"colname":"7","colwidth":"21pt","align":"center"}},{"@attributes":{"colname":"8","colwidth":"21pt","align":"center"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["1","Citadel","5.3","0.99","5.9","0.97","5.3","1.88"]},{"entry":[{},"Outlands","5.6","0.99","6.1","1.14","5.1","1.43"]},{"entry":[{},"Reservoir","5.8","1.29","6.0","2.11","5.5","2.35"]},{"entry":[{},"Train","6.2","1.6","6.2","1.09","5.6","2.13"]},{"entry":[{},"Station"]},{"entry":["2","Citadel","5.3","1.24","5.8","1.06","5.5","2.02"]},{"entry":[{},"Outlands","5.6","0.83","6.0","1.02","5.4","1.43"]},{"entry":[{},"Reservoir","5.8","1.33","5.7","2.13","5.2","2.26"]},{"entry":[{},"Train","6.1","1.43","5.8","1.21","5.3","1.98"]},{"entry":[{},"Station"]},{"entry":{"@attributes":{"namest":"1","nameend":"8","align":"center","rowsep":"1"}}}]}}]}}},"As the results demonstrate, most participants did not exhibit a strong preference for either of the clips in any pair, since most of the mean scores are between 5 and 6. This indicates that the participants felt that our method generates results that are comparable to the reference method with respect to the subjective criteria of realism and correlation with visuals, However, this is a preliminary user study; we plan to perform a more extensive and detailed evaluation of our technique in the future.","6 Limitations and Conclusions","The subject matter described herein includes an efficient technique for approximately modeling sound propagation effects in indoor and outdoor scenes for interactive applications. The technique is based on adjusting user-controlled reverberation parameters in response to the listener's movement within a virtual world, as well as a local shoebox proxy for generating early reflections with a plausible directional distribution. The technique generates immersive directional reverberation and reflection effects, and can easily scale to multi-channel speaker configurations. It is easy to implement and can be easily integrated into any modern game engine, without significantly re-architecting the audio pipeline, as demonstrated by our integration with Valve's Source engine.","Our reverberation approach does not account for spatially-varying surface absorption properties; however, this is a limitation of the underlying statistical model. Our approach for modeling reflections involves a coarse shoebox proxy; as a result the accuracy of the generated higher-order reflections depends on how good a match the proxy model is to the underlying scene geometry. Finally, since our reverberation approach does not perform global (multi-bounce) ray tracing, but involves a user-controlled reverberation time, it is subject to error in the adjusted mean free path.","There are many avenues for future work. One main challenge is to develop a method for incorporating multi-bounce ray tracing into the mean free path estimate in real-time, so as to generate more realistic reverberation. It would also be interesting to develop a more statistically-driven method for determining higher-order early reflections by using additional statistics computed over the faces of the shoebox model, such as those involving depth variance or normal directions. Further, it would be interesting to explore a more accurate approach for fitting shoebox proxies to scene geometry, based on projections along the principal axes of the point cloud of geometry samples obtained through ray tracing. Finally, we need to evaluate our approach in more game and VR scenarios and perform detailed user studies to evaluate its benefits.",{"@attributes":{"id":"p-0088","num":"0088"},"figref":["FIG. 9","FIG. 9"],"b":["100","102","104","106","102","104","106","102","104","100"]},{"@attributes":{"id":"p-0089","num":"0089"},"figref":["FIG. 10","FIG. 10"],"b":["200","202","204","206"]},"According to another aspect, the subject matter described herein includes a method for simulating early sound reflections.  is a flow chart illustrating exemplary steps of such a method. Referring to , in step , ray tracing is performed from a listener position in a scene to surfaces visible from the listener position. In step , from point visibility and an image source method are used to determine first order reflections of each ray in the scene. In step , an aural proxy is defined for the scene. In step , from point visibility is used to determine second and higher order reflections from the aural proxy. In step , scattering coefficients for surfaces in the aural proxy are defined. In step , early sound reflections are determined for the scene based on the reflections determined using the image source method, the aural proxy, and the scattering coefficients. In step , a simulated sound indicative of the early reflections at the listener position is rendered.","It will be understood that various details of the presently disclosed subject matter may be changed without departing from the scope of the presently disclosed subject matter. Furthermore, the foregoing description is for the purpose of illustration only, and not for the purpose of limitation.","The disclosure of each of the following references is incorporated herein by reference in its entirety.\n\n"],"GOVINT":[{},{}],"BRFSUM":[{},{}],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"BRIEF DESCRIPTION OF THE DRAWINGS","p":["The subject matter described herein will now be explained with reference to the accompanying drawings of which:",{"@attributes":{"id":"p-0010","num":"0009"},"figref":"FIG. 1"},{"@attributes":{"id":"p-0011","num":"0010"},"figref":["FIG. 2","FIG. 2()"],"b":["2","2","2"],"i":["a","b","c"]},{"@attributes":{"id":"p-0012","num":"0011"},"figref":"FIG. 3"},{"@attributes":{"id":"p-0013","num":"0012"},"figref":"FIG. 4"},{"@attributes":{"id":"p-0014","num":"0013"},"figref":"FIG. 5"},{"@attributes":{"id":"p-0015","num":"0014"},"figref":"FIG. 6"},{"@attributes":{"id":"p-0016","num":"0015"},"figref":"FIG. 7"},{"@attributes":{"id":"p-0017","num":"0016"},"figref":"FIG. 8"},{"@attributes":{"id":"p-0018","num":"0017"},"figref":"FIG. 9"},{"@attributes":{"id":"p-0019","num":"0018"},"figref":"FIG. 10"},{"@attributes":{"id":"p-0020","num":"0019"},"figref":"FIG. 11"}]},"DETDESC":[{},{}]}
