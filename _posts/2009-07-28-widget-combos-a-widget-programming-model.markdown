---
title: Widget combos: a widget programming model
abstract: A system and method that can be used to create a new API via a combination of existing APIs, e.g., given a set of existing APIs. The system and method also allow the user to remove existing API elements from the generated API, and to add new API elements to the generated API.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08495566&OS=08495566&RS=08495566
owner: International Business Machines Corporation
number: 08495566
owner_city: Armonk
owner_country: US
publication_date: 20090728
---

{"@attributes":{"id":"description"},"BRFSUM":[{},{}],"heading":["BACKGROUND","BRIEF SUMMARY OF THE INVENTION","DETAILED DESCRIPTION"],"p":["The present disclosure generally relates to creation of a new application programming interface (API), and particularly to, a system and method that can generate a new API from existing APIs.","Widgets are small desktop applications typically implemented using Web 2.0 technologies such as extended markup language (XML) and Javascript\u2122. While widgets are useful tools, in order to be able to reuse those codes, for instance, in a different computing environment or with slight modifications, a programmer or a user needs to modify the widgets.","U.S. Patent Publication No. 2006\/0005207 provides an authoring environment for authoring consistent widgets. U.S. Pat. No. 5,786,815 provides a method facilitating modification of an application's graphical user interface. U.S. Pat. No. 5,603,034 provides a method for selectively customizing graphical resources of a software application. U.S. Patent Publication No. 2005\/0125787 provides a method for modifying the graphical user interface without access to the application source code.","A method and system for creating an API for a widget (also referred to here as a code module) to be used in a computer system are provided. The method, in one aspect, may include creating a new module by composing one or more existing modules and defining an API for the new module using a set of API elements of said one or more existing modules.","A system for creating an API for a code module to be used in a computer system, in one aspect, may include a user interface comprising a frontstage component, a backstage component and a list of existing modules from which one or more existing modules are selected to create a new module. The frontstage component may include the new module being created. An \u201cadd combo\u201d to frontstage handler is operable to add a combo to a list of combos for creating said new module in the frontstage component. Further handlers are operable to add, or remove, one or more API element associated with the combo to a list of APIs in the frontstage component for creating said new module. An \u201cadd combo\u201d to backstage handler is operable to add said new module to a list of combos in the backstage component. A \u201cnew combo\u201d handler is operable to open an empty list of combos in the frontstage component, an empty list of APIs in the frontage component, and an empty list of combos in the backstage component. A \u201csave combo\u201d handler is operable to save said new module to a data store. A \u201cremove API element\u201d handler is operable to remove one or more API elements from the list of APIs in the frontstage component.","A program storage device readable by a machine, tangibly embodying a program of instructions executable by the machine to perform the methods described herein may be also provided.","Further features as well as the structure and operation of various embodiments are described in detail below with reference to the accompanying drawings. In the drawings, like reference numbers indicate identical or functionally similar elements.","Programmers create reusable code modules which can be reused in other programs. These code modules have APIs, which define the interface that another programmer can use. Generally, an API is an interface to a reusable code module that a programmer can use. That is, an API is a way in which a program can communicate with another program, for example, for service requests and the like. Among other things, an API defines the properties, methods, documentation and data-files for the program module or software to communicate (i.e., interface) with another program module or software. The present disclosure describes a system and method that create a new API from a combination of existing APIs, e.g., given a set of existing APIs. The system and method also allow the user to remove existing API elements from the generated API, and to add new API elements to the generated API. An API element is a part of an API, for example, a parameter or a constant that would be part of the API definition. An API specifies an interface and the behavior of the identifiers specified in that interface; it does not specify how the behavior may be implemented. An API is usually defined by an extensive list of functions and classes and variables. It is used for accessing an application or a service from a program. DirectX\u2122 is a collection of games programming APIs. GoogleMaps\u2122 is an example of an API to a web service. An API makes it possible to use programs from within programs, therefore it may be considered as the foundation for modular systems with clearly defined interfaces between separate components.","A widget is a small application program that performs a given functionality. An example may be a weather application that is on a Windows\u2122 desktop, which provides weather information. In the present application the term \u201cwidget\u201d refers to a code module or an application such as a mini application. Those terms are used interchangeably in the present disclosure. A \u201ccombo\u201d or \u201ccombo API\u201d in this application refer to a combination of a code module and an API. A new API may be created from a combo API.","A user interface program may be provided that allows a user, programmer or the like to create a new API from a combo API. In the user interface program, a combo has a frontstage and a backstage, for example, shown as windows or panels or the like in the user interface. A frontstage component shows a currently open widget with an API that is being modified. A list of existing combos, for example, shown as a palette, and previously saved combos is provided as part of a composer module or the like of the present disclosure that is used to compose a new API. A backstage component includes existing combos and previously saved combos. Any API elements that are on the frontstage and are enabled (e.g., by a check in a check box) are saved as the API of the combo when the combo is saved.",{"@attributes":{"id":"p-0019","num":"0018"},"figref":"FIG. 5","b":["502","504","502","506","504","510","511","512","513","508"]},"When an existing combo in the palette  is added to the frontstage  of the combo being composed, any API elements in the added code combo are added to the combo \u201cAPI element list.\u201d In this embodiment, these elements along with their values are also displayed in the API elements area , of the frontstage . When an existing combo is added to the backstage  of the open combo, for example, by dragging and dropping from the palette , the existing combo is added to the backstage combo list, but the API elements of the added combo are not added to the API element list of the open combo. In this embodiment, the added combo is displayed on the backstage of the combo, along with its API elements and any values. APIs of combos on the backstage are not automatically added to the API of the saved combo by default. They implement functionality internal to the combo, but this is not exposed in the resulting combo by default. The combo author can choose to expose API elements such as attributes or functions that are on the backstage, but it does not happen by default. Similarly, the combo author can choose to hide API elements from combos added to the frontstage, but this does not happen by default.","The system and method of the present disclosure in one embodiment also allow API elements on the backstage of the combo to be moved to the frontstage. This may be done by dragging the API element  to the frontstage . The system and method of the present disclosure in one embodiment also allow for hiding API elements from the combo API list shown on the frontstage. This may be done by unchecking the checkbox next to the element. Unchecked API elements that are on the frontstage are not saved as part of the combo API. It is also possible to remove API items from the frontstage API list by selecting them and pressing a delete button or like. Any other forms of user interface may be used to implement such functionalities, including but not limited to using menu items, radio buttons, key combination, etc.",{"@attributes":{"id":"p-0022","num":"0021"},"figref":["FIG. 1","FIGS. 2-5","FIG. 1"],"b":["1000","1030","1040","1020","1010","1010","1030","1020","1020","1040","1020"]},{"@attributes":{"id":"p-0023","num":"0022"},"figref":"FIG. 2","b":["1010","1010","2040","2010","2030","2000","1010","2020","1010","2020","2030"],"ul":{"@attributes":{"id":"ul0001","list-style":"none"},"li":{"@attributes":{"id":"ul0001-0001","num":"0000"},"ul":{"@attributes":{"id":"ul0002","list-style":"none"},"li":["an add combo to frontstage handler , described in detail with reference to ,","an add combo to backstage handler ,","a new combo handler ,","a show\/hide API element handler ,","a save combo handler ,","a move API element to frontstage handler ,","a remove API element from frontstage handler ,","an open combo handler , and","a server database ."]}}}},"A handler may be implemented as a program logic, instructions or module or the like. In one embodiment, the add combo to frontstage hander () has one parameter: uniqueComboID. This uniqueComboID could be a URL or other unique reference or like that is known by those skilled in the art or will be known. The frontstage hander () adds the combo referenced by the uniqueComboID to the frontstage combo list of the combo being composed, and then checks to see if the combo referred to by the uniqueComboID has an existing API list. If it does it loops through the elements in the API list and adds each element to the API element list of the combo being composed.","In one embodiment, the add combo to backstage handler () has one parameter: uniqueComboID. The add combo to backstage handler () adds the combo referred to by the uniqueComboID to the backstage combo list of the combo being composed.","The new combo handler () creates a new combo with a uniqueComboID containing an empty frontstage combo list, a backstage combo list, an API element list and a hidden API element list. It returns the uniqueComboID. Initially these internal lists are empty.","The show\/hide API element handler () has apiElement as a parameter. It checks to see if the apiElement specified as a parameter is already in the API element list. If the apiElement specified as a parameter is already in the API element list, the show\/hide API element handler () removes the apiElement from the list and adds it to the hidden API element list. Otherwise, the show\/hide API element handler () adds the element to the API element list, and removes it from the hidden API element list. This allows an element in an API list of a combo to be hidden or shown, which determines whether the element will be included in the API of the saved combo. Hidden elements are not saved as part of the API.","The save combo handler () saves the combo being composed to a data store, e.g., storage , so it is available for reuse. The save combo handler () saves the combo, for example by adding the uniqueComboID along with an automatically generated description of the API elements in the API element list to database. Any other known or will be known methods may be used to save the combo to a storage device.","The move API element handler () moves an API to the frontstage. This functionality allows a user to move an API element (e.g., ) from the API list of a combo on the backstage to the API list  of the frontstage combo. In one embodiment, this may be done by dragging the element, but it could be implemented using other user interaction techniques known to those skilled in the art, or will be known, such as a pop-up menu with a \u201cmove\u201d choice.","The remove API element handler () has apiElement as a parameter. It checks whether the element is in the API element list. If the element is in the API element list, the remove API element handler () removes the API element from the API element list of the combo being composed. If it is not in the list it checks to see if the element is in the hidden API element list, if it is it removes the API element from the hidden API element list of the combo being composed.","The open combo handler () has uniqueComboID as a parameter. This handler opens the combo indicated by the uniqueComboID in the API composer. This handler also updates the display to reflect the contents of the frontstage and backstage combo list and the API element list and hidden API element list.","The above describes handlers are shown as examples of functional components in the present disclosure. One or more or combinations of modules may implement those functionalities.","The memory  may also include the server database , in one embodiment, which provides for the creation, deletion and modification of persistent data (such as the combo, its frontstage and backstage combo list and its API element list), and is used by the handlers - of the API composer service server . An example of a product providing such function includes IBM DB\/2 database system.",{"@attributes":{"id":"p-0034","num":"0042"},"figref":["FIG. 3","FIG. 1"],"b":["2040","3000","1010","3010","1030","2070","3020","3000","3030","2120","3040","3000","3050","2050","3060","3000","3070","2060","3080","3000"]},"If the input is not an add to backstage request, then step  checks whether it is a show\/hide API element request. If so, the show\/hide API element handler  is invoked in step , following which control continues at step . If the input is not a show\/hide API element request, then step  checks to see if it is a remove API element request. If the request is a remove API element request, the remove API element from frontstage handler  is invoked in step , following which, control continues at step . If the input is not a remove API element request, then step  checks to see if it is a move API element request. If the request is a move API element request, the move API element to frontstage handler  is invoked in step , following which control continues at step . If the input is not a move API element request, then step  checks to see if it is a save combo request. If the request is a save combo request, the save combo handler  is invoked in step , following which, control continues at step . If the input is not a save combo request, then a miscellaneous handler is invoked in step , following which control continues at step . Miscellaneous handler may handles request other than those described above as appropriate.",{"@attributes":{"id":"p-0036","num":"0044"},"figref":"FIG. 4","b":["2050","4000","4010","4020"]},{"@attributes":{"id":"p-0037","num":"0045"},"figref":"FIG. 6","b":["602","604","606","608","610","612","614","610","612"]},"An apiElement object  has its owner, i.e., identification of the combo that owns the apiElement and miscellaneous information. Using the system and method of the present disclosure, APIs for code modules may be generated by selecting and\/or combining existing apiElement objects and associating those apiElement objects with a code module, for which an API is being generated.","As will be appreciated by one skilled in the art, aspects of the present invention may be embodied as a system, method or computer program product. Accordingly, aspects of the present invention may take the form of an entirely hardware embodiment, an entirely software embodiment (including firmware, resident software, micro-code, etc.) or an embodiment combining software and hardware aspects that may all generally be referred to herein as a \u201ccircuit,\u201d \u201cmodule\u201d or \u201csystem.\u201d Furthermore, aspects of the present invention may take the form of a computer program product embodied in one or more computer readable medium(s) having computer readable program code embodied thereon.","Any combination of one or more computer readable medium(s) may be utilized. The computer readable medium may be a computer readable signal medium or a computer readable storage medium. A computer readable storage medium may be, for example, but not limited to, an electronic, magnetic, optical, electromagnetic, infrared, or semiconductor system, apparatus, or device, or any suitable combination of the foregoing. More specific examples (a non-exhaustive list) of the computer readable storage medium would include the following: an electrical connection having one or more wires, a portable computer diskette, a hard disk, a random access memory (RAM), a read-only memory (ROM), an erasable programmable read-only memory (EPROM or Flash memory), an optical fiber, a portable compact disc read-only memory (CD-ROM), an optical storage device, a magnetic storage device, or any suitable combination of the foregoing. In the context of this document, a computer readable storage medium may be any tangible medium that can contain, or store a program for use by or in connection with an instruction execution system, apparatus, or device.","A computer readable signal medium may include a propagated data signal with computer readable program code embodied therein, for example, in baseband or as part of a carrier wave. Such a propagated signal may take any of a variety of forms, including, but not limited to, electro-magnetic, optical, or any suitable combination thereof. A computer readable signal medium may be any computer readable medium that is not a computer readable storage medium and that can communicate, propagate, or transport a program for use by or in connection with an instruction execution system, apparatus, or device.","Program code embodied on a computer readable medium may be transmitted using any appropriate medium, including but not limited to wireless, wireline, optical fiber cable, RF, etc., or any suitable combination of the foregoing.","Computer program code for carrying out operations for aspects of the present invention may be written in any combination of one or more programming languages, including an object oriented programming language such as Java, Smalltalk, C++ or the like and conventional procedural programming languages, such as the \u201cC\u201d programming language or similar programming languages. The program code may execute entirely on the user's computer, partly on the user's computer, as a stand-alone software package, partly on the user's computer and partly on a remote computer or entirely on the remote computer or server. In the latter scenario, the remote computer may be connected to the user's computer through any type of network, including a local area network (LAN) or a wide area network (WAN), or the connection may be made to an external computer (for example, through the Internet using an Internet Service Provider).","Aspects of the present invention are described below with reference to flowchart illustrations and\/or block diagrams of methods, apparatus (systems) and computer program products according to embodiments of the invention. It will be understood that each block of the flowchart illustrations and\/or block diagrams, and combinations of blocks in the flowchart illustrations and\/or block diagrams, can be implemented by computer program instructions. These computer program instructions may be provided to a processor of a general purpose computer, special purpose computer, or other programmable data processing apparatus to produce a machine, such that the instructions, which execute via the processor of the computer or other programmable data processing apparatus, create means for implementing the functions\/acts specified in the flowchart and\/or block diagram block or blocks.","These computer program instructions may also be stored in a computer readable medium that can direct a computer, other programmable data processing apparatus, or other devices to function in a particular manner, such that the instructions stored in the computer readable medium produce an article of manufacture including instructions which implement the function\/act specified in the flowchart and\/or block diagram block or blocks.","The computer program instructions may also be loaded onto a computer, other programmable data processing apparatus, or other devices to cause a series of operational steps to be performed on the computer, other programmable apparatus or other devices to produce a computer implemented process such that the instructions which execute on the computer or other programmable apparatus provide processes for implementing the functions\/acts specified in the flowchart and\/or block diagram block or blocks.","The flowchart and block diagrams in the figures illustrate the architecture, functionality, and operation of possible implementations of systems, methods and computer program products according to various embodiments of the present invention. In this regard, each block in the flowchart or block diagrams may represent a module, segment, or portion of code, which comprises one or more executable instructions for implementing the specified logical function(s). It should also be noted that, in some alternative implementations, the functions noted in the block may occur out of the order noted in the figures. For example, two blocks shown in succession may, in fact, be executed substantially concurrently, or the blocks may sometimes be executed in the reverse order, depending upon the functionality involved. It will also be noted that each block of the block diagrams and\/or flowchart illustration, and combinations of blocks in the block diagrams and\/or flowchart illustration, can be implemented by special purpose hardware-based systems that perform the specified functions or acts, or combinations of special purpose hardware and computer instructions.","Referring now to , the systems and methodologies of the present disclosure may be carried out or executed in a computer system that includes a processing unit , which houses one or more processors and\/or cores, memory and other systems components (not shown expressly in the drawing) that implement a computer processing system, or computer that may execute a computer program product. The computer program product may comprise media, for example a hard disk, a compact storage medium such as a compact disc, or other storage devices, which may be read by the processing unit  by any techniques known or will be known to the skilled artisan for providing the computer program product to the processing system for execution.","The computer program product may comprise all the respective features enabling the implementation of the methodology described herein, and which\u2014when loaded in a computer system\u2014is able to carry out the methods. Computer program, software program, program, or software, in the present context means any expression, in any language, code or notation, of a set of instructions intended to cause a system having an information processing capability to perform a particular function either directly or after either or both of the following: (a) conversion to another language, code or notation; and\/or (b) reproduction in a different material form.","The computer processing system that carries out the system and method of the present disclosure may also include a display device such as a monitor or display screen  for presenting output displays and providing a display through which the user may input data and interact with the processing system, for instance, in cooperation with input devices such as the keyboard  and mouse device  or pointing device. The computer processing system may be also connected or coupled to one or more peripheral devices such as the printer , scanner (not shown), speaker, and any other devices, directly or via remote connections. The computer processing system may be connected or coupled to one or more other processing systems such as a server , other remote computer processing system , network storage devices , via any one or more of a local Ethernet, WAN connection, Internet, etc. or via any other networking methodologies that connect different computing systems and allow them to communicate with one another. The various functionalities and modules of the systems and methods of the present disclosure may be implemented or carried out distributedly on different processing systems (e.g., , , ), or on any single platform, for instance, accessing data stored locally or distributedly on the network.","The terminology used herein is for the purpose of describing particular embodiments only and is not intended to be limiting of the invention. As used herein, the singular forms \u201ca\u201d, \u201can\u201d and \u201cthe\u201d are intended to include the plural forms as well, unless the context clearly indicates otherwise. It will be further understood that the terms \u201ccomprises\u201d and\/or \u201ccomprising,\u201d when used in this specification, specify the presence of stated features, integers, steps, operations, elements, and\/or components, but do not preclude the presence or addition of one or more other features, integers, steps, operations, elements, components, and\/or groups thereof.","The corresponding structures, materials, acts, and equivalents of all means or step plus function elements, if any, in the claims below are intended to include any structure, material, or act for performing the function in combination with other claimed elements as specifically claimed. The description of the present invention has been presented for purposes of illustration and description, but is not intended to be exhaustive or limited to the invention in the form disclosed. Many modifications and variations will be apparent to those of ordinary skill in the art without departing from the scope and spirit of the invention. The embodiment was chosen and described in order to best explain the principles of the invention and the practical application, and to enable others of ordinary skill in the art to understand the invention for various embodiments with various modifications as are suited to the particular use contemplated.","Various aspects of the present disclosure may be embodied as a program, software, or computer instructions embodied in a computer or machine usable or readable medium, which causes the computer or machine to perform the steps of the method when executed on the computer, processor, and\/or machine. A program storage device readable by a machine, tangibly embodying a program of instructions executable by the machine to perform various functionalities and methods described in the present disclosure is also provided.","The system and method of the present disclosure may be implemented and run on a general-purpose computer or special-purpose computer system. The computer system may be any type of known or will be known systems and may typically include a processor, memory device, a storage device, input\/output devices, internal buses, and\/or a communications interface for communicating with other computer systems in conjunction with communication hardware and software, etc.","The terms \u201ccomputer system\u201d and \u201ccomputer network\u201d as may be used in the present application may include a variety of combinations of fixed and\/or portable computer hardware, software, peripherals, and storage devices. The computer system may include a plurality of individual components that are networked or otherwise linked to perform collaboratively, or may include one or more stand-alone components. The hardware and software components of the computer system of the present application may include and may be included within fixed and portable devices such as desktop, laptop, server. A module may be a component of a device, software, program, or system that implements some \u201cfunctionality\u201d, which can be embodied as software, hardware, firmware, electronic circuitry, or etc.","The embodiments described above are illustrative examples and it should not be construed that the present invention is limited to these particular embodiments. Thus, various changes and modifications may be effected by one skilled in the art without departing from the spirit or scope of the invention as defined in the appended claims."],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"BRIEF DESCRIPTION OF THE DRAWINGS","p":[{"@attributes":{"id":"p-0009","num":"0008"},"figref":"FIG. 1"},{"@attributes":{"id":"p-0010","num":"0009"},"figref":"FIG. 2"},{"@attributes":{"id":"p-0011","num":"0010"},"figref":"FIG. 3"},{"@attributes":{"id":"p-0012","num":"0011"},"figref":"FIG. 4"},{"@attributes":{"id":"p-0013","num":"0012"},"figref":"FIG. 5"},{"@attributes":{"id":"p-0014","num":"0013"},"figref":"FIG. 6"},{"@attributes":{"id":"p-0015","num":"0014"},"figref":"FIG. 7"}]},"DETDESC":[{},{}]}
