---
title: Estimating application energy usage in a target device
abstract: Embodiments provide implementations for estimating a test application's energy usage on a target device based on execution of the test application. Resource usage associated with the execution of the test application is measured. The measured resource usage is input into a power model of the target device to estimate the energy that the test application uses when executed on the target device. An emulation system is configured to execute the test application in a virtual execution environment using resource scaling and simulated target device application programming interfaces to substantially simulate the corresponding capabilities of the target device.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09176841&OS=09176841&RS=09176841
owner: Microsoft Technology Licensing, LLC
number: 09176841
owner_city: Redmond
owner_country: US
publication_date: 20111228
---

{"@attributes":{"id":"description"},"BRFSUM":[{},{}],"heading":["BACKGROUND","BRIEF SUMMARY","DETAILED DESCRIPTION","CONCLUSION"],"p":["Developers write software applications that are meant to be executed on multiple computing platforms and models, such as different models of smart phones, tablet computers, netbooks, personal computers, e-readers, and other devices. These various computing platforms have different hardware capabilities\u2014such as processor speeds, memory capacities, bus speeds, display sizes, and so forth\u2014and these various computing platforms consume different amounts of energy during operation. Testing a software application on all such devices is often impractical. Also, an application developer wanting to optimize an application in various dimensions, such as performance, portability, and energy consumption, would need physical access to the devices and, potentially, on-board or external power meters in order to measure their application's usage of power. Even with such access, it is not easy to determine an individual component's energy consumption, or how much of a component-specific energy consumption is attributable to a particular software application.","Also, an application consumes varying amounts of energy depending on operating conditions, such as signal strength, display brightness, network congestion, and so forth. It is often impractical for the developer to subject multiple devices to these various operating conditions in order to test an application's usage of energy under each scenario.","This Summary is provided in order to introduce simplified concepts of target device energy usage estimation, which are further described below in the Detailed Description. This summary is not intended to identify essential features of the claimed subject matter, nor is it intended for use in determining the scope of the claimed subject matter.","A test application\u2014such as an application under development\u2014is executed within a virtual execution environment that emulates the target device. The virtual execution environment may be hosted on any system, such as a development workstation (referred to as the emulation system). The virtual execution environment provides scaled access to hardware components of the emulation system in order to substantially simulate the capabilities of a target device. A measurement module measures the hardware resource usage on the emulation system that is attributable to the execution of the test application, and the measured hardware resource usage is fed into a power model to estimate the energy that the target device would consume if the target device were to execute the test application. The power model is developed based on resource and power profiling of the target device.","The virtual execution environment provides the ability to simulate various operating states, in order to estimate the energy usage attributable to an application under the various operating states.","Overview","As discussed above, testing an application on all of the computing devices that it is designed for is often impractical. Yet, devices differ in their capabilities and are likely to consume different amounts of energy while executing the same application. Embodiments of the present Detailed Description, among other things, execute a test application\u2014such as an application under development\u2014in a virtual execution environment of an emulation system, such as on a developer workstation. The virtual execution environment provides access to application programming interfaces that simulate those available on a target device, such as a mobile device for which an application is being developed. The virtual execution environment also provides scaled access to the hardware resources of the emulation system in order to simulate the hardware capabilities of the target device. For example, a target device may have a slower processor than the emulation system. Thus, embodiments make fewer processor cycles available to the virtual execution environment in order to substantially simulate the slower processor speed of the target device. In embodiments, the virtual execution environment also simulates various operating conditions.","A measurement module measures the hardware resource usage attributable to the execution of the test application. The measured hardware resource usage is fed into a power model to estimate the energy that the target device would consume if the target device were to execute the test application. The power model is developed based on resource and power profiling of the target device.","Developing a power model for a target device may require access to the target device, including the placement of on-board power meters. But once developed for a particular target device, the power model can be used repeatedly to estimate the energy usage associated with executing applications on the target device. Target device power models can be shared with application developers, making it possible for application developers to estimate energy usage for their applications without having physical access to the target devices. Various embodiments provide access to the virtual execution environment for the target device, including resource scaling and operating condition simulation, as part of a distributed computing service accessible by application developers over the Internet.","The processes, systems, and devices described herein may be implemented in a number of ways. Example implementations are provided below with reference to the following figures.","Example Environment for Estimating Energy Usage",{"@attributes":{"id":"p-0017","num":"0016"},"figref":"FIG. 1","b":["100","100"]},"Aspects of system  generate power models for a target device . The target device  includes a plurality of hardware components . Non-limiting examples of the hardware components  include one or more processors, computer-readable storage media, networking hardware (such as wired or wireless networking cards, radios, transceivers, and the like), input and output peripherals (such as pointer devices, touch screens, microphones, cameras, speakers and so forth), location devices (such as global positioning system (GPS) receivers or wireless network devices), and so forth.","The target device  also includes a power source , such as a battery, solar power generator, cabled or wireless power supply, and the like. The target device  also includes a plurality of application programming interfaces (APIs)  that provide, among other things, applications executing on the target device with access to the hardware components .","A resource profiler  profiles one or more of the hardware components  and their corresponding capabilities. For example, the resource profiler  may profile the hardware capabilities of a processor of the target device , such as the processor frequency, a CPU cache size, a CPU bus speed, and so forth. The resource profiler  may profile the memory capability of one or more memory components of the hardware components , such as a hard disc drive (HDD), a flash drive, a RAM device, a ROM device, and so forth. The resource profiler  may profile the display size and brightness settings of a display of the hardware components . The resource profiler  may profile one or more wireless transceivers\/radios available within the hardware components , such as wireless transceivers\/radios configured to operate in a 2G, 3G, 4G, or other wireless cellular network, wireless transceivers\/radios configured to operate in a Wi-Fi-enabled network such as those specified by the IEEE 802.11 standards, wireless transceivers\/radios configured to operate in a personal area network (PAN) network such as Bluetooth\u00ae network, wireless transceivers\/radios configured to operate in a Near Field Communication (NFC) network, and so forth. In addition, embodiments of the resource profiler  may profile other hardware component types, such as location service components (such as Global Positioning System (GPS) devices), infrared transmitters, gaming controllers, and so forth, without departing from the scope of this Detailed Description. In embodiments, the resource profiler  may profile only a subset of the hardware components , such as those hardware components that are likely to have a significant impact on energy usage. In a non-limiting example, the resource profiler may be configured to profile the capabilities of the processor, memory, 4G radio, input and output capabilities of a touch-screen display, and a GPS of a target device while ignoring the capabilities of a NFC transceiver.","A power profiler  measures the power consumed by the hardware components  under various resource usage levels or states. In one non-limiting example, the power consumed by a processor of the target device  may be measured at various resource utilization levels, such as in 5% increments, such that the power consumed at 5%, 10%, 15%, all the way to 100% is measured. Other increments, both smaller and larger, evenly distributed or otherwise, may be used without departing from the scope of the present Detailed Description. In another non-limiting example, the power consumed by a wireless radio component of the target device  may be measured while the radio component transmits under different signal strengths, such as while transmitting at 10% of maximum signal strength, 20%, 30%, and so on. (Other increments both larger and smaller, evenly distributed or otherwise, may be used). The power consumption of other ones of the hardware components  may be modeled, such as the power consumed by read, write, and\/or refresh operations of a random access memory (RAM) component, the power consumed during receipt of input by a touch-sensitive input, or the power consumed by a touch screen display under various brightness settings, under various refresh rates, or while displaying various colors. Embodiments are not limited to these examples, and the power profiler  may measure the power consumption of other hardware components, or the power consumed by the hardware components under other conditions not mentioned above, without departing from the scope of embodiments. The power profiler  may be configured to determine baseline energy levels, such as the amount of power consumed during startup of the target device , and the power consumed running background processes, searching for a wireless signal, and so forth.","The power model generation module  may generate a power model for the target device . The power model generation module  may utilize machine learning or similar technique to model the power consumption of the target device . The power model for the target device  includes individual power models for one or more of the hardware components . A power model for an individual hardware component is of the form of E=\u0192(r), where E represents energy consumed by a hardware component, and r represents the resource usage of the hardware component. The notation \u0192(r) denotes a mathematical function of r, or a \u201cpower model function.\u201d Various embodiments utilize a mathematical function \u0192(r), but various embodiments may utilize look-up tables, or some combination of mathematical formulas or look-up tables. In various embodiments, resource utilization values are input into the power model for each component, and an energy usage number is returned. The resource utilization values may absolute values such as number of memory reads, processor cycles, an amount of time a hardware component is operational and so forth. Or, the resource utilization values may be, in various embodiments, relative values, such as percentages of maximum transmission strength, percentages of processor utilization, and so forth. Resource utilizations values may also be power states that refer to the mode of operation of the component such as \u201coperating at high frequency,\u201d \u201cin active state,\u201d and other such states that may signify a different power level in the power model.","Various embodiments of the power model generation module  may employ modeling techniques such as are described in \u201cSesame: Self-Constructive System Energy Modeling for Battery-Powered Mobile Systems,\u201d by Mian Dong and Lin Zhong, ACM MObisys 2011; \u201cVirtual Machine Power Metering and Provisioning,\u201d by Aman Kansal, Feng Zhao, Jie Liu, Nupur Kothari, and Arka Bhattacharya, SoCC'10, Jun. 10-11, 2010; and U.S. patent application Ser. No. 12\/420,372, entitled \u201cComputational Energy Measurement Without Hardware Support,\u201d filed on Apr. 8, 2009. Embodiments of the present disclosure are not limited to the modeling techniques disclosed in these three references, and other techniques may be used without departing from the scope of the present disclosure. The entire contents of U.S. patent application Ser. No. 12\/420,372 is hereby incorporated herein in its entirety for all purposes.","The system  also includes an energy estimation service . The resource profiler , the power profiler , and the power model generation module  may be part of the same computing system as the energy estimation service . Alternatively, the resource profiler , the power profiler , and the power model generation module  may be part of a computing system that is different than the computing system that hosts the energy estimation service . In any event, the energy estimation service  includes an emulation system . The emulation system  may be a developer workstation (or other developer-controlled device). Alternatively, the emulation system  may be implemented on one or more devices in a distributed computing environment, provided as a \u201ccloud-based\u201d service to application developers (or others).","The virtual execution environment  on the emulation system  includes simulated target device APIs  that simulate the APIs  available on the target device . This allows a virtual execution environment module  of the emulation system  to provide a test application  with a virtual execution environment that emulates the execution environment on the target device . The simulated target device APIs  provide the test application  with access to various operating system functions, and access to the emulation system hardware components .","Non-limiting examples of the emulation system hardware components  include one or more processors, computer-readable storage media, networking hardware (such as wired or wireless networking cards, radios, transceivers, and the like), input and output peripherals (such as pointing devices, touch screens, microphones, cameras, speakers and so forth), location devices (such as global positioning system (GPS) receivers or wireless network devices), and so forth. Various ones of the emulation system hardware components  are likely different than, and likely have different capabilities than, corresponding ones of the hardware components  of target device . For example, target device  may have one single-core processor, while the emulation system hardware components  may include a multi-core\/multi-processor architecture. In another non-limiting example, a processor of the target device  may have a different cache memory size than does a processor of the emulation system hardware components . The emulation system hardware components  may also include memories, networking components, busses, displays, peripheral devices, and other devices that differ from comparable components within the hardware components .","Differences between the hardware components  of the target device  and the emulation system hardware components  result in different resource use on the target device  and the emulation system  when executing the test application . For example, time instances at which various application operations occur, the nature and size of the display, and the speed of the processor, may make the execution of the application on the emulation system  significantly different from that on the target device . Thus, in embodiments, resource scaling is employed in order to make execution of the test application  the same as or similar to execution of the test application  on the target device .","A resource scaling module  provides a virtual execution environment of the virtual execution environment module  with scaled access to one or more of the emulation system hardware components  in order to substantially simulate the capabilities of corresponding ones of one or more of the hardware components  of the target device . The resource scaling module  may employ a resource scaling map, or some other data regarding the capabilities of the hardware components  of the target device , to accomplish this resource scaling. The resource scaling map may be developed based on data collected by the resource profiler , or from information from another source. In one non-limiting example, the resource scaling module  may provide the virtual execution environment with scaled access to the one or more processors of the emulation system hardware components  to substantially simulate central processing unit (CPU) capabilities of the target device . This may involve, for example, reducing the number of processor cycles available to the virtual execution environment. It may also involve reducing the amount of cache memory available to the virtual execution environment.","In another non-limiting example, the resource scaling module  may provide the virtual execution environment with scaled access to a network hardware component of the emulation system hardware components  to substantially simulate networking component capabilities of the target device . To accomplish this, the resource scaling module  provides the virtual execution environment with a virtual network driver that scales the networking capabilities of the emulation system hardware components  in order to substantially simulate the networking capabilities of the target device . This may be based on the known characteristics of the target device's  networking channel. In one non-limiting example, the virtual network driver may emulate a typical wireless networking experience on a 3G cellular wireless network, such as by routing data traffic through a wireless network emulator. This may involve, for example, reducing the data rate available to the virtual execution environment, artificially inducing delay to packets sent to and from the virtual execution environment, artificially inducing packet loss, inducing elevated levels of packet jitter, or other techniques.","In another non-limiting example, the resource scaling module  may provide scaled access to a bus of the emulation system hardware components  to substantially simulate a bus speed of a bus coupled to the processor of the target device . In a further non-limiting example, the resource scaling module may provide the virtual execution environment with a virtual display. The virtual display is created using a smaller portion of a display device of the emulation system hardware components , such that the virtual display is similar in size to a display on the target device . This virtual display may be, in embodiments, an application window that is sized to match a display of target device  such that the test application  is run within the application window.","In addition to providing resource scaling to the virtual execution environment via the resource scaling module , the virtual execution environment module  may also provide simulated operational states via an operational state simulator . An application developer may be interested in how various operational states impact the energy usage on the target device . Thus, various operational states may be simulated. The operational state simulator  is configured to simulate operation of the target device  under high CPU utilization conditions. As noted above, the resource scaling module  provides the virtual execution environment with a reduced number of processor cycles to substantially simulate the processor capabilities of the target device . The operational state simulator  is configured to simulate high CPU utilization further reduce the number of processor cycles available to the virtual execution environment. This further reduction may occur intermittently in order to simulate another application executing on the target device . Alternatively, the operational state simulator  is configured to cause other applications to run within the virtual execution environment to substantially simulate a shared resource environment (which simulates more than just shared CPU).","In another non-limiting example, the operational state simulator  is configured to simulate various network states that may be experienced by the target device . As noted above, the resource scaling module  is configured to provide reduced access to the networking components of the emulation system hardware components  in order to substantially simulate networking capabilities of the target device . The operational state simulator  is configured to simulate network congestion or poor signal strength conditions by providing a further reduced access to the networking components, such as by artificially introducing additional delay, dropped packets, or by further scaling back the data rate. This additional delay, these dropped packets, and\/or the further scaled back data rate are in addition to the resource scaling performed by the resource scaling module , and may be provided by the wireless networking emulator discussed above.","A resource usage measurement module  is configured to measure the resource usage within the emulation system  that is attributable to execution of the test application  within the virtual execution environment. The resource usage measurement module  monitors the calls that the test application  makes to various ones of the emulation system hardware components , such as by monitoring calls to the simulated target device APIs . Because the test application  runs within a virtual execution environment with scaled access to the emulation system hardware components , the resource usage monitored by the resource usage measurement module  is the same or similar to the resource utilization that would occur were the test application  to be executed on the target device .","In embodiments where the test application  is executed under various operational states, as provided by the operational state simulator , resource usages for the execution of each of these states are individually monitored.","In alternative embodiments, the resource usage measurement module  may be stored and executed on the target device . In these and other embodiments, the resource usage measurement module may be configured to measure resource usage of the test application  directly on the target device , and not in the emulation system .","An energy usage estimation module  is configured to estimate, based on a power model(s)  of the target device  and the resource usage measured by the resource usage measurement module , the energy usage associated with execution of the test application  by the target device . The power model(s)  is generated by power model generation module , as discussed elsewhere within this Detailed Description. The input to the power model(s)  is the resource usage for each monitored hardware component of the emulation system hardware components  as measured by the resource usage measurement module , and the output includes energy usage estimations for one or more of the hardware components  of the target device  that would be attributable to executing the test application  on the target device . The total energy usage estimations for the one or more of the hardware components  results in an estimation for the total energy consumed were the test application  to be run on the target device .","The energy usage estimation module  is configured, in embodiments, to determine energy usage for individual components within the emulation system hardware components . For example, where the emulation system hardware components  include a first hardware component (such as a processor or other component) and a second hardware component (such as a display or other component), the energy usage estimation module  is configured to estimate a first component-specific energy usage associated with the first hardware component based on a resource usage of the first hardware component. The energy usage estimation module  is also configured to estimate a second component-specific energy usage associated with the second hardware component based on a resource usage of the second hardware component.","The energy usage estimation module  is further configured to estimate energy usage at various display brightness levels of the target device . The power model(s)  includes energy usage information for various display brightness levels. Thus, the energy usage estimation module  can estimate the energy usage caused by execution of the test application  under these various brightness levels. As noted above, the resource scaling module  is configured to provide a virtual display. The resource usage measurement module  measures the test application  usage of a display of the emulation system hardware components . But an estimate for the energy consumed by a display of the target device  depends on the brightness setting of the display. Thus, the energy usage estimation module  is configured to estimate the energy usage of the display of the target device  based on one or more brightness settings.","The energy usage estimation module  may be configurable to include within the energy estimation a baseline energy usage of the target device . For example, if an application developer believes that the target device  will typically be woken from a sleep state in order to execute the test application , then the developer may be interested in knowing the baseline energy usage of the target device  as well as the energy usage attributable directly to execution of the test application .","A reporting module  is configured to report the estimated energy usage determined by the energy usage estimation module . The reporting module  may cause display of a report on a user interface of some kind (such as a web-based user interface), a reporting email, or some other reporting manner. The reporting module  is configured, in various embodiments, to provide a total energy usage estimation for the target device , one or more component-specific energy usage estimations for the hardware components  of the target device , total energy usage estimations and\/or component-specific energy usage estimations for one or more simulated operating states, and total energy usage estimations and\/or component-specific energy usage estimations for different versions of the test application . The reporting module  is configured to report the estimated energy usages associated with various brightness settings.","The reporting module  may be configured to determine whether the estimated energy usage meets one or more guidelines. Upon a determination that the estimated energy usage fails to meet the one or more guidelines, the reporting module  issues a warning. In embodiments, the warning may indicate that observed energy use patterns violate one or more energy efficient application development guidelines. In embodiments, the warning may indicate that the observed energy use patterns are expected to lead to excessive energy use.","A receiver module  is configured to receive the test application , and cause the emulation system  to execute the test application. The receiver module may include a web-server front-end that provides an interface for application developers to upload one or more test applications for execution in a virtual execution environment. The receiver module  may work in conjunction with the emulation system  to test several versions of a test application. For example, the receiver module  may receive a first test application that is configured to execute natively, or entirely within target device . The receiver module  may be configure to receive a second test application that includes a subset of the plurality of functions of the first test application but that offloads an execution of other ones of the plurality of functions not in the subset to a network-based service communicatively coupled to the emulation system  via a network component of the emulation system hardware components . In other embodiments, a developer may want to test one version of an application that performs various functions simultaneously, and a second version that performs the various functions sequentially. When multiple versions are to be tested, both the first and the second versions are executed by the virtual execution environment module  of the emulation system , and under one or more simulated operational states provided by the operational state simulator . The resource usage measurement module  is configure to measure the resource usage of the two different versions, and the energy usage estimation module  is configured to estimate total and\/or component-specific energy usage for the two different versions. The reporting module  is configured to report these total and\/or component-specific energy usages.","Example Computing System for Energy Estimation",{"@attributes":{"id":"p-0043","num":"0042"},"figref":"FIG. 2","b":"200"},"In one example configuration, the computing system  comprises one or more processors  and memory . The computing system  may also contain communication components  that allow communications with various other systems, such as one or more radio transceivers, or one or more wired networking components. The computing system  may also include one or more input devices , such as a keyboard, mouse, pen, voice input device, touch input device, GPS receiver, etc., and one or more output devices , such as a display, touch-screen display, speakers, printer, etc. coupled communicatively to the processor(s)  and memory . The processors , memory , communication components , input devices , and output devices  may be the same as or similar to the emulation system hardware components .","Memory  may store program instructions that are loadable and executable on the processor(s) , as well as data generated during execution of, and\/or usable in conjunction with, these programs. In the illustrated example, memory  stores an operating system , which provides basic system functionality of the computing system  and, among other things, provides for operation of the other programs and modules of the computing system .","Memory  includes a resource profiler , power profiler , and power model generation module , which may be the same as or similar to resource profiler , power profiler , and power model generation module , respectively.","Memory  includes simulated target device APIs , which may be the same as or similar to simulated target device APIs . Memory  includes virtual execution environment module , which may be the same as or similar to the virtual execution environment module . The virtual execution environment module  includes resource scaling module  and operational state simulator , which may be the same as or similar to resource scaling module  and operational state simulator , respectively.","Memory  includes resource usage measurement module  and energy usage estimation module , which may be the same as or similar to resource usage measurement module  and energy usage estimation module , respectively. The energy usage estimation module  may make use of power models , which may be the same as or similar to the power model(s) . Memory  includes reporting module  and receiver module , which may be the same as or similar to the reporting module  and receiver module , respectively.","Exemplary Distributed Environment for Providing Energy Estimation Services",{"@attributes":{"id":"p-0049","num":"0048"},"figref":"FIG. 3","b":["300","302","304","116","304","306","308","310","310","306","308"]},"By sharing power models from power model database  with various developers such as developer system , embodiments enable developers to use the energy estimation service  to estimate the energy usages of their applications without needing physical access to target devices.","In embodiments, a hosted energy estimation service  is provided as via the front-end . The hosted energy estimation service  may be the same as or similar to energy estimation service . In these embodiments, the developer system  does not need to install the energy estimation service . Furthermore, the hosted energy estimation service  may include a hosted wireless connection , via a wireless provider , to the network . This allows the hosted energy estimation service  to provide actual wireless access to the hosted energy estimation service  in order to simulate the wireless access of a target device.","Exemplary Operations for Providing an Energy Estimation Service",{"@attributes":{"id":"p-0052","num":"0051"},"figref":"FIG. 4","b":["400","402"]},"In one non-limiting example, where the component being modeled is the CPU, the resource usage, r, may be measured in terms of the CPU utilization, and the function \u0192(r) may be of the form a\u00d7r, implying energy used E=a\u00d7r where a represents the energy used over a time interval when the CPU is used at utilization r by the application being tested. In another non-limiting example, where the component being modeled is a communications component, the power model function may be based on parameters such as the time for which the network is powered up, the signal strength, an amount of data transferred by the test application, and so forth.","At , resource scaling is provided to a virtual execution environment of a test device. The resource scaling causes the virtual execution environment to simulate the execution environment of a target device by providing scaled access to the hardware components of the test device. The scaled access substantially simulates the hardware capabilities of the target device. The scaled access may include reduced access to processor cycles, reduced access to a processor cache memory, reduced access to a processor bus, reduced access to a computer-readable storage media of the test device, reduced access to a networking component of the test device, reduced access to a display device, and so forth.","At , a test application is executed in the virtual execution environment, and resource usage attributable to the test application is measured. The measured resource usage includes resource accesses made via one or more simulated target device APIs, to a display device, a processor, a computer-readable storage media, a networking component, a processor cache, a processor bus, and so forth.","At , the energy usage attributable to execution of the test application on the target device is estimated based on the measured resource usage and a power model for the target device. The measured resource usage for the hardware components of the emulation system attributable to the test application is input into the power model, and the power model returns energy usage estimations. The energy usage estimations are not estimations of the amount of energy that the test application consumes on the test device, but rather energy usage estimations for executing the test application on the target device. Because the virtual execution environment provides scaled access to the hardware resources of the test device to substantially simulate the capabilities of the target device, the resource usage of executing the test application in the test device is substantially similar to resource usage of executing the test application in the target device. Thus, the resource usage from executing the test application on the virtual execution environment is usable along with the power model for the target device to estimate how much energy would be consumed by the application were it to be executed on the target device.",{"@attributes":{"id":"p-0057","num":"0056"},"figref":"FIG. 5","b":["500","502"]},"At , a resource scaling module provides a virtual execution environment with scaled access to hardware components of the emulation system. Such resource scaling substantially simulates the hardware component capabilities of the hardware device. In embodiments, the scaled access may include scaled access to one or more processors of the emulation system, scaled access to a network hardware component of the emulation system, scaled access to a display device, scaled access to processor cache, scaled access to a processor-coupled bus, and so forth.","Scaled access to a processor of the emulation system may include providing the virtual execution environment with access to a reduced number of processor cycles. It may also include providing reduced access to a processor cache. Reduced access may include reduced access to a bus coupled to the processor to emulate a transfer rate capability of the processor-connected bus. Scaled access to a display device of the emulation system may include providing the test application with a virtual display, such as a display window within the display device that emulates a screen size of the target device. Scaled access to a networking component of the emulation system includes provisioning a wireless network emulator to route data packets to and from the test application.","The scaled access is configured to substantially simulate the hardware capabilities of the target device. In embodiments, the resource scaling module substantially simulates the capabilities of multiple target devices. Because the multiple target devices differ in their capabilities, the scaled access for the multiple target devices will also be different. In one non-limiting example, a first number of processor cycles are made available to the virtual execution environment by the resource scaling module when a test application is executed for estimating the energy usage on a first target device, and a second number of processor cycles are made available to the virtual execution environment when a test application is executed for estimating the energy usage on a second target device. The same or different test applications can be executed in the virtual execution environment when the virtual execution environment emulates a first target device and a second target device, depending on developer needs (e.g., to estimate energy usage of the same test application on both the first and second target device).","At , a virtual execution environment module executes the test application within a virtual execution environment of the emulation system. As noted above, the execution of the test application may include scaled access to the hardware components of the emulation system. The execution of the test application may be accompanied by execution of multiple versions of the same test application. For example, the virtual execution environment may execute another test application that includes a subset of the plurality of functions of the test application, but that offloads an execution of some functions of the test application to a network-based service. The network-based service may be communicatively coupled to the emulation system via a network hardware component of the emulation system, or via a hosted wireless link, or by other devices.","Execution of the test applications within the virtual execution environment includes providing simulated target device APIs to simulate the operating system functions available on the target device, as well as to provide (scaled) access to hardware capabilities of the emulation system. Where multiple target devices are emulated, the execution of the test applications includes providing access to multiple target device APIs.","An application developer may be interested in determining whether an application under development should be designed to execute natively on a target device, or whether certain processing could be offloaded to a distributed computing environment. The advantages of a natively-executing application include execution time: the more of the processing that occurs on the target device, the faster the application typically generally runs. But the advantages of offloading certain processes of the application to a network-based service include ease of portability: the application can more easily be made to execute on many different devices. But the energy usage advantages and disadvantages of these two application models are not always clear. On one hand, offloading some of the processing results in the processor consuming less power, but also generally results in the networking components of the target device consuming more power. Thus, embodiments\u2014by providing for the execution of different versions of the test application\u2014enable a developer to consider the energy usage of applications of these different application models when developing their software applications.","At , an operational state simulator simulates one or more operational states of the target device. A non-limiting example includes simulating a particular CPU utilization on the target device by providing further reduced access to the processor cycles of the one or more processors that is over-and-above the reduced access to the processor cycles provided in order to substantially simulate the capabilities of the target device. Another non-limiting example includes simulating network congestion by providing a reduced ceiling on the networking data rate.","Another non-limiting example includes executing multiple applications in the virtual execution environment simultaneously, in order to emulate a shared resource situation. In yet another non-limiting example, the plurality of operational states includes a first display brightness setting and a second display brightness setting, to simulate the operation of the target device in varying ambient light situations.","At , an energy usage measurement module measures resource usage associated with the execution of the test application. In embodiments where multiple test applications are executed (such as multiple versions of the test application), the measuring includes measuring resource usage associated with the executing of the various test applications. In embodiments that include simultaneous execution of the test application and another application within the virtual execution environment (such as to simulate a shared resource state), the measuring includes measuring the resource usage of the plurality of hardware components attributable to the test application as a result of the simultaneous execution of the test application and the other application. In embodiments that include simulation of a plurality of operational states, the measuring includes measuring a plurality of resource usages of the plurality of hardware components attributable to the execution of the test application within the virtual execution environment under the plurality of operational states.","At , an energy usage estimation module estimates, based on a power model of a target device and the resource usage associated with the executing of the test application, energy usage associated with executing the test application on the target device. Where the power model includes power models for multiple hardware components of the target device, the energy usage estimation includes estimating a first component-specific energy usage associated with a first hardware component based on resource usage of a corresponding first hardware component of the test device, and estimating a second component-specific energy usage associated with a second hardware component based on resource usage of a corresponding second hardware component of the test device.","In embodiments that include execution of multiple test applications (such as different versions of the same test application), the estimating includes estimating, based on the power model and the resource usage associated with the executing of another test application, the energy usage associated with executing the other test application on the target device. In embodiments that include executing the test application under a plurality of simulated operational states, the estimating includes estimating, based on the power model of the target device and measured plurality of resource usages under the different plurality of operation states, a plurality of energy usages for executing the test application on the target device under the plurality of operational states. In embodiments that include simultaneous execution the test application with another application within the virtual execution environment (such as to simulate a shared resource state), the estimating includes estimating the resource usage of the plurality of hardware components attributable to the test application as a result of the simultaneous execution of the test application and the other application.","At , a reporting module reports the estimated energy usage. Where the power model includes power models for multiple hardware components of the target device, the reporting includes reporting a first component-specific energy usage associated with a first hardware component, and reporting a second component-specific energy usage associated with a second hardware component.","In embodiments that include execution of multiple test application (such as different versions of the same test application), the reporting includes reporting the other energy usage associated with executing the other test application on the target device. In embodiments that include executing the test application under a plurality of simulated operational states, the reporting includes reporting a plurality of energy usages for executing the test application on the target device under the plurality of operational states. In embodiments that include simultaneous execution of the test application with another application within the virtual execution environment (such as to simulate a shared resource state), the reporting includes reporting the resource usage of the plurality of hardware components attributable to the test application as a result of the simultaneous execution of the test application and the other application.","At , a determination is made regarding whether the estimated energy usage of one or more of test applications meets one or more guidelines. At , a warning indicating that the estimated energy usage fails to meet one or more guidelines is generated. In embodiments, the warning may indicate that observed energy use patterns violate one or more energy efficient application development guidelines. In embodiments, the warning may indicate that the observed energy use patterns are expected to lead to excessive energy use. Other guidelines may be used without departing from the scope of embodiments. In various embodiments, the warning may be included with or separate from the estimated energy use report at .",{"@attributes":{"id":"p-0072","num":"0071"},"figref":"FIGS. 4 and 5"},"Computer-Readable Media","Depending on the configuration and type of computing device used, memory  of the computing system  in  may include volatile memory (such as random access memory (RAM)) and\/or non-volatile memory (such as read-only memory (ROM), flash memory, etc.). Memory  may also include additional removable storage and\/or non-removable storage including, but not limited to, flash memory, magnetic storage, optical storage, and\/or tape storage that may provide non-volatile storage of computer-readable instructions, data structures, program modules, and other data for computing system .","Memory  is an example of computer-readable media. Computer-readable media includes at least two types of computer-readable media, namely computer storage media and communications media.","Computer storage media includes volatile and non-volatile, removable and non-removable media implemented in any process or technology for storage of information such as computer-readable instructions, data structures, program modules, or other data. Computer storage media includes, but is not limited to, phase change memory (PRAM), static random-access memory (SRAM), dynamic random-access memory (DRAM), other types of random-access memory (RAM), read-only memory (ROM), electrically erasable programmable read-only memory (EEPROM), flash memory or other memory technology, compact disk read-only memory (CD-ROM), digital versatile disks (DVD) or other optical storage, magnetic cassettes, magnetic tape, magnetic disk storage or other magnetic storage devices, or any other non-transmission medium that can be used to store information for access by a computing device.","In contrast, communication media may embody computer-readable instructions, data structures, program modules, or other data in a modulated data signal, such as a carrier wave, or other transmission mechanism. As defined herein, computer storage media does not include communication media.","Although the disclosure uses language that is specific to structural features and\/or methodological acts, the invention is not limited to the specific features or acts described. Rather, the specific features and acts are disclosed as illustrative forms of implementing the invention."],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"BRIEF DESCRIPTION OF THE DRAWINGS","p":["The Detailed Description is set forth with reference to the accompanying figures. In the figures, the left-most digit(s) of a reference number identifies the figure in which the reference number first appears. The use of the same reference numbers in different figures indicates similar or identical items.",{"@attributes":{"id":"p-0008","num":"0007"},"figref":"FIG. 1"},{"@attributes":{"id":"p-0009","num":"0008"},"figref":"FIG. 2"},{"@attributes":{"id":"p-0010","num":"0009"},"figref":"FIG. 3"},{"@attributes":{"id":"p-0011","num":"0010"},"figref":"FIG. 4"},{"@attributes":{"id":"p-0012","num":"0011"},"figref":"FIG. 5"}]},"DETDESC":[{},{}]}
