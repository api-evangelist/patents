---
title: System and method for collaboration using web browsers
abstract: One or more collaboration computers connected over the network may collaborate using their web browsers. Each collaboration computer may have one or more window locators that uniquely identify a web browser window on the browser. The web browser window can be a window where one or more events occur during the collaboration. One or more document locators may be derived from information describing a document path from the respective web browser window to a document within the respective web browser window. The document path can be a path in a hierarchical structure that includes the document and the respective web browser window. One or more transfer data structures may contain the window locator and the document locator and may be passed to and from the collaboration computer through a network connection to enable a collaboration session.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08443035&OS=08443035&RS=08443035
owner: OP40 Holding, Inc.
number: 08443035
owner_city: Somers
owner_country: US
publication_date: 20010904
---

{"@attributes":{"id":"description"},"RELAPP":[{},{}],"heading":["RELATED APPLICATIONS","RELATED REFERENCES","FIELD OF THE INVENTION","BACKGROUND INFORMATION","SUMMARY","DETAILED DESCRIPTION"],"p":["This application claims the benefit of priority afforded by U.S. Provisional Patent Application Ser. No. 60\/229,685, filed Sept. 1, 2000, the disclosure of which is Incorporated herein.","Priority is also claimed for the following documents for any matter not disclosed in provisional U.S. Patent Application Ser. No. 60\/229,685 incorporated by reference above. The following references are related to this patent application and are herein incorporated by reference in their entirety:","provisional U.S. Patent Application Ser. No. 60\/236,864, entitled \u201cDistributed Internet Server\u201d to Pace et al., filed Sep. 29, 2000;","provisional U.S. Patent Application Ser. No. 60\/237,179, entitled \u201cBusiness Plan and Business Plan Executive Summary\u201d to Chen et al., filed Oct. 2, 2000;","provisional U.S. Patent Application Ser. No. 60\/254,377, entitled \u201cDistributed Internet Services provisional filing II\u201d to Pace et al., filed Dec. 8, 2000;","provisional U.S. Patent Application Ser. No. 60\/262,288, entitled \u201cData Structure, Architecture, Apparatus, and Program Product Capable of Being Distributed to and Executed on Different Network Tiers and on Various Computer Platforms and Environment\u201d to Pace et al., filed Jan. 17, 2001;","U.S. patent application Ser. No. 09\/947,140, entitled \u201cExtended Environment Data Structure for Distributed Digital Assets Over Multi-tiered Computer Networks\u201d, to Pace et al., filed Sep. 4, 2001;","U.S. patent application Ser. No. 09\/946,410, entitled \u201cServer System and Method for Discovering Digital Assets in Enterprise Information Systems\u201d, to Bobick et al., filed Sep. 4, 2001;","U.S. patent application Ser. No. 09\/947,122, entitled \u201cServer System and Method for Exporting Digital Assets in Enterprise Information Systems\u201d, to Pace et al., filed Sep. 4, 2001;","U.S. patent application Ser. No. 09\/947,096, entitled \u201cSystem and Method for Transactional Deployment J2EE Web Components, Enterprise Java Bean Components, and Application Data over Multi-tiered Computer Networks\u201d, to Pace et al., filed on Sep. 4, 2001;","U.S. patent application Ser. No. 09\/946,980, entitled \u201cServer System and Method for Distributing and Scheduling Modules to be Executed on Different Tiers of a Network\u201d, to Pace et al., filed Sep 4, 2001;","U.S patent application Ser. No. 09\/946,699, entitled \u201cSystem and Method for Distributing Assets to Multi-Tiered Network Nodes, to Pizzorni et al. filed on Sept. 4, 2001;","U.S. patent application Ser. No. 09\/946,438, entitled \u201cMethod and System for Deploying An Asset Over a Multi-Tiered Network\u201d, to Pace et al. filed on Sep. 4, 2001;","U.S. patent application Ser. No. 09\/947,161, entitled \u201cSystem and Method for Translating an Asset for Distribution Over Multi-Tiered Networks (Processing)\u201d to Pace et al. filed on Sep. 4, 2001;","U.S. patent application Ser. No. 09\/947,163, entitled \u201cSystem and Method for Synchronizing Assets on Multi-Tiered Networks, to Pace et al. filed on Sep. 4, 2001;","U.S. patent application Ser. No. 09\/947,016, entitled \u201cMethod and System for Deploying an Asset Over a Multi-Tiered Network\u201d' to Pace et al. filed on Sep. 4, 2001;","U.S. patent application Ser. No. 09\/947,095, entitled \u201cSystem and Method for Adjusting the Distribution of an Asset Over a Multi-Tiered Network\u201d, to Pace et al. filed on Sep. 4, 2001;","U.S. patent application No. 09\/947,119, entitled \u201cSystem and Method for Bridging Assets to Network Nodes on Multi-Tiered Networks\u201d, to Pace et al. filed on Sep. 4, 2001;","U.S. patent application Ser. No. 09\/947,141, entitled \u201cMethod and System for Deploying an Asset Over a Multi-Tiered Network\u201d, to Pace et al. filed on Sep. 4, 2001, describing asset streaming;","U.S. patent application Ser. No. 09\/947,162, entitled \u201cSystem, Method, and Data Structure for Packaging Assets for Processing and Distribution on Multi-Tiered Networks\u201d, to Bobick et al. filed on Sep. 4, 2001;","U.S. patent application Ser. No. 09\/947,148, entitled System and Method for Transactional and Fault-Tolerant Distribution of Digital Assets Over Multi-Tiered Computer Networks, to Bobick et al. filed on Sep. 4, 2001;","PCT Patent Application No. PCT\/US2001\/027232, entitled \u201cSystem and Method for Collaboration Using Web Browsers\u201d, to Chen et al. filed on Aug. 31, 2001;","PCT Patent Application No. PCT\/US2001\/027289, entitled \u201cSystem, Method, Uses, Products, Program Products, and Business Methods for Distributed Internet and Distributed Network Services\u201d, to Chen et al. filed on Aug. 31, 2001.","The present invention relates elate s to real time collaboration over computer networks. More specifically, the present invention relates to networking collaboration processes using web browsers.","It is believed that many computers are interconnected with other computers through network connections that support Internet Protocol (IP). Further, it is believed that some communications applications use Transmission Control Protocol (TCP), which uses IP. The HyperText Transfer Protocol (HTTP) may use TCP to support the World Wide Web (WWW, or Web). Web pages are files organized using a HyperText Markup Language (HTML) or extended Markup Language (XML). A web browser may be a client graphical user interface (GUI) application that navigates among web pages containing hypertext links.","Real-time collaboration over computer networks, such as the Internet, corporate intranets, etc.; may involve two or more clients on the network that are participating in the collaboration session seeing the same view, e.g., of the web pages. Some collaboration further includes end user input on the web page. Real-time collaboration is described as \u201cWhat You See Is What I See\u201d (WYSIWIS). Examples of real-time collaboration include: chat, text editor collaboration, web browser collaboration, and various other application program collaborations like collaborative drawing.","Regarding web browser collaboration, it is believed that many systems attempt to work with the same web pages that are used in non-collaborative work\u2014not with specially-modified \u201ccollaboration-aware\u201d web pages. Collaboration-aware web pages are available.","Some web browser collaborative systems share only navigation. That is, collaborating clients see the same web page, but do not share other aspects of collaboration. For example, see Groove 1.0, by Groove Networks, www.groove.net or www.groovenetworks.com. Some collaboration systems share not only navigation, but also document scrolling. For example see eMeeting\u2122 3.0, by Centra, www.centra.com. A few collaboration systems support full WYSIWIS collaboration including navigation, scrolling, and all user inputs. See \u201cCollaborative Customer Services Using Synchronous Web Browser Sharing\u201d, by Makoto Kobayashi, Masahide Shinozaki, Takashi Sakairi, Maroun Touma, Shahrokh Daijavad, and Catherine Wolf, Proceedings of the ACM 1998 Conference on Computer Supported Cooperative Work, Nov. 14, 1998, which is herein incorporated by reference in its entirety. Further, the reference \u201cProgramming Microsoft Internet Explorer 5\u201d, by Scott Roberts, Microsoft Press, 1999, which is herein incorporated by reference in its entirety, discusses Internet Explorer internals.","Some collaborative systems achieve WYSIWIS operation by executing only one copy of the application on one client, and replicating its graphical output on the other clients. This technique requires large amounts of data transfer among collaborating clients, requiring expensive, high-bandwidth connections. Some more advanced systems exploit particular operating system features such as Microsoft Windows\u2122 Dynamic Data Exchange (DDE). See U.S. Pat. No. 6,240,444 B1 to Fin et al., herein incorporated by reference in its entirety.","It is believed that much of the available devices concerning collaboration may operate only with a specific browser for which the collaboration process is designed. For example, a collaboration session using Microsoft's Internet Explorer\u2122 browser (IE) on one client may only collaborate with other clients that use IE. Thus, it is believed that this system cannot create collaboration sessions on clients that have non-compatible browsers.","Much of the prior art uses screen positions to locate windows on collaborating clients graphical user interfaces (GUIs). The client systems in these collaboration sessions should translate this information before the information is used on the collaborating client. However, this class of collaboration system is believed to have problems with window sizing and often has problems with locating windows in the collaboration session.","Some prior art systems do not work accurately with \u201cmutant web pages\u201d in a collaboration session. A mutant web page is a web page that changes so that different clients downloading the \u201csame\u201d web page will get slightly different versions of the web page. These versions have different rendering characteristics so each client sees a somewhat different rendering of the same page. Some examples of mutant web pages include web pages with \u201cbanner ads\u201d that can be randomly generated by the server.","An exemplary method and\/or embodiment of the present invention is directed to providing an improved real time network collaboration system.","Another exemplary method and\/or embodiment of the present invention is directed to providing an improved real time network collaboration system that can operate collaboration sessions independent of a client operating system and\/or a client web browser.","Another exemplary method and\/or embodiment of the present invention is directed to providing an improved real time network collaboration system that is able to work with web pages on a client in a collaboration session without window sizing and location problems.","Another exemplary method and\/or embodiment of the present invention is directed to providing an improved real time network collaboration system that can work with mutant web pages in a collaboration session.","Another exemplary method and\/or embodiment of the present invention is directed to providing a system, method, and program product for collaborating over a computer network. One or more collaboration computers may be connected over the network collaborate using their web browsers. Each collaboration computer may have one or more window locators that uniquely identify a web browser window on the computer. In the web browser window one or more events may occur during the collaboration. One or more document locators may be derived from information describing a document path from the respective web browser window to a document within the respective web browser window. The document path is a path in a hierarchical structure that includes the document and the respective web browser window. One or more transfer data structures may contain the window locator and the document locator and may be communicated to and from the collaboration computer through a network connection to enable a collaboration session with one or more other collaboration computers.","In another exemplary embodiment, the hierarchical structure may be a document object model (DOM) located on the browser or a Dynamic Hypertext Markup Language (DHTML) model. In other exemplary embodiments, the transfer data structure may contain an element locator that uniquely defines an element within the document.","A data structure may also be an asset. The asset has two basic layers: the first layer is the Logic\/Data (LD) layer and the second layer is the Extended Environment (EE) layer which supports the Logic\/Data layer. The Logic\/Data layer comprises any general type of program (algorithmic logic) and\/or data that has some purpose. More specifically, the Logic\/Data layer embodiments can include: systems, applications, modules, functions, variables, and data in any language. Even more specifically, the Logic\/Data layer in an object-oriented language can include: components, classes, methods, and data members. More specifically, in the Java programming language the Logic\/Data layer can include: java archive files (JARs), Java packages, and Java classes. More specifically, in Java Enterprise Edition Application Programming Interfaces (APIs) have Logic\/Data layer that can include: Java Server Pages (JSPs), Java Servlets, and Enterprise Java Beans (EJBs). Data can include any type of data structure including that data stored in a relational database, an object-oriented database, hierarchical database, and\/or flat file. The Logic\/Data layer can also be any combination of these things. Preferably, the Logic\/Data layer is a subset of one or more EIS.","The extended environment layer is also a subset of the respective EIS but includes those portions of the EIS that are necessary to support a respective Logic\/Data layer. The content of the extended environment layer therefore depends on what the respective Logic\/Data layer is. Support of the respective Logic\/Data layer enables the respective Logic\/Data layer to perform its purpose in a different environment and\/or on a different platform. That is, the support provided by the EE layer is that part of the source or EIS system that is necessary for the respective LD layer to perform its function. For example, if the Logic\/Data layer is an EJB, the extended environment layer comprises the proxy stubs and skeletons, deployment descriptor, and JNDI entries associated with the respective EJB. If the Logic\/Data layer is data, the extended environment layer comprises a table schema etc.","There may be an asset interface layer (AI) between the EE layer and the base environment layer (BE) below. The AI enables the passing of information, if required, between the EE and the BE. For the purposes of this disclosure, one preferred structure of an asset includes the LD, the EE, and, where applicable, the AI. The base environment layer is not part of the asset, but is used to enable the asset in one or more environment and\/or platforms other than those on the EIS (source system). The base environment might include web, middleware, and\/or database services. More specifically, in some embodiments, the base environment layer provides a http server, a servlet engine, an EJB container, and\/or relational database management system (RDBMS). In a preferred embodiment, the base environment layer needs to be known so that the class of asset can be provided with an appropriate set of services.","An asset also can be defined as some meaningful partitioning (logic\/data layer) of an application combined with part of the source environment (the extended environment layer) that is needed to run that partition of the application. Each asset has an asset type that uniquely identifies that class of asset. In this way, assets can be correlated with the proper asset adapter(s) as the move across tiers of the network over the lifecycle of the asset. An asset adapter is a logical designation for a set of functionality that enables the asset to progress through the asset lifecycle. The asset lifecycle is a set of operations that transform the asset as it moves from source (e.g. one or more EIS) to distribution server to target (e.g. one or more clients\/nodes).","A single asset contains all the elements necessary to package, move, transport, and restore an asset to its original state (in its source location) while moving the asset from the source location to the target location using a Distributed Internet Services (DIS) system. Thus an asset is able to maintain its relationship with other functions and those things required for it to perform its functions across different environments or platforms. Preferably, the asset has the minimal application logic, execution\/transaction\/security context, and state required to perform the purpose of the asset at one or more targets. An asset has purpose in one environment that can be achieved in one or more other environments by moving a minimal amount of application logic and data.","Discovery is the process of determining asset dependencies that result in the definition of a package specification. Versioning is the process of determining the current version of an asset against a cached asset and updating the cached asset if it is out of date. Export is the process of taking the various elements that constitute an asset and packaging those elements into a data structure.","The EIS adapter\/agents are able to process any general modules\/objects and\/or asset (pg. 19, 11. 41). An agent is a process or service that can be assumed to be available in an environment (pg. 51, 11. 16). These agents provide a generalized framework for distributing assets. The types of assets they distribute correspond with the asset adapters that are defined for the system (pg. 51, 11. 25-26). Each agent is responsible for providing a service interface, on a network node, that other agents can access. Those other agents may be on the same node\/computer or different nodes\/computers on the network.","The asset goes through a lifecycle starting in the source tier, moving through the deployment tier, into the target tier, and then optionally back through the deployment tier to the source tier and\/or can move to any other node or nodes in the network if required. The asset adapter methods define the steps in this lifecycle where asset type specific processing is required for the asset to continue through the lifecycle.","In the source tier, resources are discovered using a discovery asset adapter method, to identify candidates for classification as assets and together as packages. A package specification is created that in turn contains asset specifications. The asset specification is stored in the deployment tier until a package is scheduled to be delivered. The version asset adapter method is used to determine the current version information of the assets in the source tier. This version information is compared with the target tier asset version information in the deployment tier to determine if assets need to be deployed from the source tier to the target tier.","The export asset adapter method is used to obtain the actual current version of assets in the source tier that need to be distributed to the target tier. After the assets are exported, the assets are moved to the deployment tier and stored in an asset cache. When exporting assets, the export asset adapter method captures the logic, data, and extended environment information for an asset and puts it into an asset data structure. If an asset requires processing the processing may be done when the asset is stored in the asset cache or at any time before the asset is distributed to either a secondary cache in the deployment tier or the target tier. The processing is primarily performed on the asset's extended environment, in an attempt to translate the extended environment to run in harmony with the base environment in the target tier.","An agent in the target environment requests the assets that are pending for delivery to that target tier. The target processing asset adapter method is executed against any asset that require targeted processing before being sent to the target tier. Target processing is intended primarily to change the Logic\/Data section of the asset data structure in order to provide a unique asset that can create or has personalized information for the target tier in which it is being deployed. The targeting can be for an intermediate target (a server that will in turn server many users) or a final target (a single node that will serve a single user). When the asset is sent to the target tier, the deploy asset adapter method is invoked to deploy the asset into the computational environment in the target tier. The extended environment from the asset's data structure is used to set the base environment and extended environment in the target tier to run the asset in a correct manner. The asset's logic and data are then deployed into the base environment, and since the environment has been adjusted, the logic will function correctly and the data will be accessible. When changes happen in the target tier that warrant synchronization, the synchronization asset adapter method is executed to create a synchronization asset and the asset is propagated back through the deployment tier into the source tier and the source tier resource that corresponds to the synchronization asset is synchronized with that asset","Distributed Internet Services refers to a logical architecture of a physical network system comprising one or more networks, preferably, the Internet (or other network) that is connected to one or more EIS tiers, one or more component server tiers, and one or more target\/client tiers (of one or more clients) using any well known configuration and communication connections. Each of the EIS tiers, component server tiers, or the client tiers can be further divided into sub-tiers as is done in many well-known network designs. The component server tier, or portions of its functions, may reside on the EIS tier. There can be a plurality of EIS functions that may or may not be connected through the network.","The EIS adapter\/agents are able to process any general modules\/objects and\/or asset. (In some embodiments, the EIS adapter\/agents are part of the Component Distribution Server (CDS) tier and are distributed to the respective EIS to perform their functions.) Again, the EIS tier architecture can comprise one or more sub-tiers and\/or one or more different EIS's. The EIS tier communicates with the client node tier architecture on the client node tier over network connections by any appropriate protocol. In a preferred embodiment, these protocols include the well-known web protocols, web page protocols, browser\/client protocols, network communication protocols, and connection protocols.","The EIS communicates over network connections with one or more CDS tier architectures in the component server tier . The communication between the EIS and the CDS tier architecture includes any appropriate protocol that includes CORBA\u2014Common Object Request Broker Architecture; IIOP\u2014Interoperable Internet Object Protocol; RMI\u2014Remote Method Invocation (T3, JRMP\u2014Java Remote Interface Protocol, IIOP). The CDS tier architecture also communicates with the client node tier architecture through network work communication connections using protocols. These protocols include CORBA (IIOP), RMI (T3, JRMP, IIOP), and Multi-platform Communication Connection.","The Component Server Tier architecture comprises one or more component server nodes that may be distributed across two or more sub-tiers. One or more of these component server nodes has a component distribution server process that includes various combinations of CDS agents and adapters. Generally, in one preferred embodiment, the CDS agents\/adapters find objects in respective tiers across the network and package these objects for distribution to the clients on the client tier and\/or across other tiers of the network. See description below. In one preferred embodiment, the component server node has a collaboration functio, often provided by a collaboration server . The collaboration function can be any known collaboration function in the art.","The target tier architecture includes one or more client nodes. The target\/client node tier architecture can include many different types of clients including: personal computers, workstations, pervasive devices, local servers (e.g. LAN servers), proxy servers, general network servers, EIS systems, etc. Clients in the target tier include any generally known client architecture. The target tier and client architectures can be distributed throughout the network, can be divided into sub-tiers, and can even include general network servers or EIS systems functioning as a client for a particular function or program module. These client nodes comprise one or more novel client distribution agents or adapters (CDA), in various configurations, that handle the communication between the client node and either the CDS tier, other client\/target tiers, and\/or one or more EIS tier.",{"@attributes":{"id":"p-0073","num":"0072"},"figref":["FIG. 1","FIG. 1"],"b":["100","160","160","110","120","130","160","170","140","140","110","120","130","170","110","110","170"]},"A collaboration client  may be executing a web browser A. The present invention enables real-time collaboration among two or more collaboration computers , ,  that may or may not have the same kind of web browser A, B, C. For example, one of the clients, e.g., client\/collaboration computer , may be running a Microsoft Internet Explorer (IE) web browser A while another collaboration computer, e.g., client\/collaboration computer , runs a Netscape Navigator web browser B. Web browsers A,B may download web pages containing Hypertext Markup Language, HTML or Extended Markup Language, XML, (or any general markup language) from the network. These pages are rendered by the web browser A, B, C on a display device  connected to a client computer. Web browsers A, B, C and their function are available and include, for example, IE, Netscape Navigator, and Mozilla.","The collaboration sessions among collaboration computers, such as client\/collaboration computer , can be enabled by the creation and communication of a transfer data structure (TDS) . See, for example, .","The TDS  may contain information like a window locator  that uniquely identifies a browser window  in the respective web browser A and document information (a document locator ) that uniquely identifies a document  within the browser window  by using path information (document path ).","Referring to , in an exemplary embodiment, the TDS  also may also contain event type , element locators , and\/or event data . See, for example, .","Using the TDS , a collaboration session can occur among two or more collaboration computers  with or without a server . In an exemplary embodiment, a server  may not be used and the TDS  is communicated directly among the collaboration clients  in a peer-to-peer communication. In an exemplary embodiment of the present invention, the server  is used to pass the TDS  among the collaboration computers .","Each collaboration computer  executes a collaboration process . See, for example, .","Thus in a collaboration session, a client\/collaboration computer  creates a TDS  and communicates the TDS  to one or more other collaboration computers, for example, collaboration computer(s) . The other collaboration computer(s)  may use the information within the TDS  to determine which document should be operated on, for example, when and\/or where an event is applied to, so that both the collaboration computer I  and the other collaboration computer(s)  may apply the respective event to the document  in a correct manner.",{"@attributes":{"id":"p-0081","num":"0080"},"figref":"FIG. 2A","b":["290","330","230"]},"The document path  is a path within a hierarchical structure  that leads from the web browser window  to the document . The document path  may uniquely connect the web browser window  and the document . One exemplary embodiment of document  can only be reached from the web browser window  by traversing the document path  and no other path. This information in the TDS  may be independent of the web browser that is used on any of the collaboration computers  in the collaboration session. For example, by using the TDS , any computer platform, operating system, and web browser  may be used by any of the collaboration computers , , .","The hierarchical data structure  may originate from the browser window . The browser window  is any window that may be used by the web browser  on the collaboration computer  to render the web page on the collaboration computer  display. Browser windows  are available and may be defined by the type of web browser on which they are used.","The system may select one or more browser windows  called selected browser windows. A browser window  may be selected because an event  occurred in the respective browser window . An event  is a web browser  construct that is created by the web browser  in response to an end user input in the collaboration computer . Examples of end user inputs are: key press, mouse click, touching a touch screen, clicking on a tablet, dragging, etc.","Events  may occur on a document  or on a document  and an element (, , , or , referring to ). When the event  occurs on a document , the respective web browser  and\/or operating system may identify the selected browser window  and the document . In other cases, when the event  occurs on an element , the respective web browser  and\/or operating system may identify the selected browser window, the selected document , and element . An exemplary embodiment of the present invention may be directed to converting this browser\/operating system identification into \u201clocators\u201d (window locator , document locator , and element locator ) that are independent of the browser type, operating system, process, and machine.","For example, the end-user may perform scrolling on a document in a web page in a browser window. The web browser  generates a scroll event , available to the browser . The scroll event  may identify the scrolled document  along with the selected browser window in which the scrolled document  is contained. Information from the scroll event  may be used to create the TDS  in . See also, for example, . The event information includes the event type , locators (not including an element locator ) , , and event data  (how far the end user has scrolled).","In another exemplary embodiment and\/or method, the end-user may perform a mouse-click on a checkbox in a document in a web page in a browser window . In this case, the checkbox is an element  of a document  in the browser window . The web browser  causes a mouse-click event, known to the web browser A, B, C, to be generated in the browser window. Information from the event  can be used to create the TDS  in . See also, for example, . In , the event information may include the event type , window locator , and event data .","A window locator  is process-independent, machine-independent, and browser-type independent data structure that may describe a selected browser window . In an exemplary embodiment, the window locator  may be an index indicating the chronological order of creation of the browser window on the respective machine. For example, using a \u201czero\u201d index origin, a window locator  containing a \u201c\u201d may correspond to a window created on the machine in a particular session. In another exemplary embodiment, the window locator  may be a character string naming the browser window . For example, the window locator  containing the string \u201cGertrude\u201d may correspond to a window named \u201cGertrude\u201d created in a particular session.","Having uniquely identified and selected a browser window (S), an exemplary method and\/or embodiment of the present invention may also allow for selecting a hierarchical structure  that may be associated with a selected browser window . In another exemplary embodiment, the associated hierarchical structure is the set of frames  through  that may be organized in the hierarchy  with the selected browser window S leading to its root. That is, the hierarchy  may be the set of browser specific constructs, e.g., frames , that are associated with the current web page being rendered in the browser window .","A set of frames or frame set  may be made of one or more frames or framesets, e.g.,  and , within the hierarchy . Frames  can contain documents . These documents  may be HTML documents. However, other documents  include XML.","Documents  may contain text, images, etc. Documents may also contain input elements like check boxes, hyperlinks, buttons, input fields, etc.","A frameset, e.g., , is a set of frames and\/or framesets, ordered in the same way in which they are rendered by the browser A, B, C. Frames, framesets, and their ordering are available.","Given the hierarchy , a unique path  can be defined through the hierarchy  from a selected browser window \/S to the frame  of the document . Both the document  and a selected browser window  are identified by the event . While paths  through hierarchies  are available, exemplary methods and\/or embodiments of the present invention may use a path  to provide information about the relationship of the selected browser window S to the document  for collaboration.","A document locator  may be a sequence or vector of indices that describes the path from the browser window, for example, the selected browser window S, to a given document , for example, the selected document. In another exemplary embodiment and\/or exemplary method, each index is the \u201coff-set\u201d of a child frame or frameset from its parent frame set. For example, path  could be defined as (,) where the first \u201c\u201d is the path from frameset  to frameset  (where the \u201c\u201d path would be from frame set  to ) and the second \u201c\u201d is the path from frameset  to frame  (where the \u201c\u201d path here is the path from frameset  to frame ).","In an exemplary embodiment, the browser  may use an industry standard hierarchy  called a Document Object Model (DOM). In another exemplary embodiment and\/or method, the browser  may use a Microsoft\u2122 standard hierarchy called a DHTML.","An exemplary DOM is defined by the World Wide Web Consortium (W3C) DOM Level  specification. See, for example, http:\/\/www.w3.org\/DOM\/.","First generation web browsers did not expose the internals of their user interfaces. Second generation web browsers exposed the user interface components in an operating system-dependent manner. Third generation web browsers are beginning to expose the user interface components in an industry-standard manner, using the Document Object Model (DOM). Until recently, collaboration technology has not had this standardized interface for web browser interaction. However, the DOM does not lend itself easily to collaborative applications. The DOM tends to be several levels of indirection away from the user interface.",{"@attributes":{"id":"p-0098","num":"0097"},"figref":"FIG. 2B","b":["200","340","200","205","150","205","210","220","230","240","210","210"]},"The HTML document  and each HTML element , , , and  may be identified internally by the web browser in terms of a virtual address, also available as a memory address, pointer, or reference. Such identification will herein be called a reference. Thus, the HTML document  is identified by a document reference, for example R, and an HTML element  is identified by an element reference, for example R. The reference for the respective element is designated by adding an \u201cR\u201d to the reference number of the element, for example . For example, the element  may have an element reference R. In addition, any general document  may have a document reference R. A reference may be meaningful only within the process containing it, i.e., it is process dependent\/specific.","One can traverse the HTML Elements , , , and  of an HTML document  by getting the all collection of the document, which contains references to all the elements in the order of the HTML tags. The elements can be retrieved by index. For example, the A: HTMLElement  reference is returned at index value , the B: HTMLElement  reference R is returned at index value , etc. These index values are examples of \u201celement locators\u201d  and can be used to identify DOM objects across processes and across machines. Thus, B: HTML Element  can be identified by an element locator  comprising an index whose value is . Unlike the references, the index values may be process independent.","However, all-collection index values are not necessary browser-type independent. The all-collection for one browser-type may not provide the element references R, from which the index values are obtained, in the same order as does the all-collection for another browser-type.","In another exemplary embodiment of the present invention, the all-collection feature is not used. Instead, a feature specific to element type may be used to produce the index values grouped by element type.","Some HTML Elements contain sub-elements. For example, if  is a Select Box element, it may contain Select Elements, e.g., sub-element buttons  and .",{"@attributes":{"id":"p-0104","num":"0103"},"figref":"FIG. 2C","b":["340","340","341","342"]},"As described above, field  contains the index describing the respective element. In alternative embodiments, e.g., to address browser-type independence, an element type descriptor, e.g., tag name , may also be provided.","In exemplary embodiments that are required to process mutant web pages, a mutant web page value  may also be provided in the element locator . The mutant web page value  may be a description of the element that remains constant even when other parts of the web page change, or when end user inputs occur. In another exemplary embodiment, one or more attributes of the element are concatenated into an identification string (see ) that is then hashed to produce a hash value that is stored in field . (Hashing may be available). Attributes may be selected that do not vary in the collaboration environment. In another exemplary embodiment, such attributes can include the ID attribute and\/or the NAME attribute of the element (HTML object) and\/or its \u201cneighborhood\u201d (nearby elements) on the web page. Delimiters may be written between the fields of the string to avoid certain ambiguous descriptions.",{"@attributes":{"id":"p-0107","num":"0106"},"figref":"FIG. 3","b":["300","110","100","300","110","120","130","300","310","320","205","265","205","210","250","330","250","205","271","265","210","205","300","340","265","350","350","340","330"]},"All the data in the TDS  is process-independent, machine-independent, and browser-type-independent.","Non-limiting examples of the event type  may include any one or more of the following: a window event type, a document event type, an element event type, a move, a mouse move, a resize, a maximize, a minimize, a restore, a focus, an unfocus, a close, a scroll, a keystroke in a text area, a keystroke in an input text field, a mouse click in an input, a button press, a checkbox select, a radio button press\/selection, a mouse click on an anchor, a select on a single-select box, a select on a multiple-select box, a scroll on a textarea, a computer input, a touch on a touch screen, a click on a tablet, a drag, and a scroll on a select box.","The Event Type  can represent a document scroll, in which case the Locators  describe a document, and the Event Data  contains the horizontal and vertical scroll positions.","The Event Type  can represent a mouse click, in which case there is no event data , and the Locators  describe the element upon which the mouse click occurred.","The Event Type  can represent a text change, in which case the Locators  may describe the input text field, input password field, or textarea element in which the text change event occurred, and the Event Data  contains the new text, or the change to the text. A text change event may occur because of a keypress, or select followed by delete key, or optional select followed by paste into from the clipboard.","The Event Type  may represent a single select, in which case the Locators  describe a select box allowing only single select, and the Event Data  contains the index of the selected <option>.","The Event Type  may represent a multiple select, in which case the Locators  describe a select box allowing multiple select, and the Event Data  describes the new set of selections, or alternately, the change in the set of selections. One way to describe the new set of selections is with a Boolean vector.","The Event Type  can represent an element scroll, in which case the locators  describe a textarea or select box, and the Event Data  may contain the horizontal and\/or vertical scroll positions.","The event type  may also include one or more interactions with a browser plug-in. This interaction with a browser plug-in can include: a window event type, a document event type, an element event type, a move, a resize, a maximize, a minimizes a restore, a focus, an unfocus, a close, a scroll, a keystroke in a text area, a keystroke in an input text field, a mouse click in an input, a button press, a checkbox select, a radio button press, a mouse click on an anchor, a select on a single-select box, a select on a multiple-select box, a scroll on a textarea, a computer input, a touch on a touch screen, a click on a tablet, a drag, and a scroll on a select box.","The event type  may also include one or more interactions with an applet hosted in a browser. In another exemplary embodiment, the applet hosted in a browser is a Java applet. Additional interaction could conform to the Java AWT and JFC standards of user interface interaction.","The event type  may also include interaction with a Java application. Nonlimiting examples of the Java application may include interaction conforming to the Java  AWT and JFC standards of user interface interaction. Event types for various browsers  may be varied and available.","Non-limiting examples of event data entries in the event data field  may include any one or more of the following: a horizontal scroll position, a vertical scroll position, a scroll offset, a new value, a new string, a new text, a change of text, a select option, a set of select options, a move position, a horizontal move position, a vertical move position, a horizontal window resize value, and a vertical window resize value. In another exemplary embodiment, the event data entry may transform the scroll data into percentage based scrolls that allow for different display devices to render the correct scroll position for collaborating computer systems.",{"@attributes":{"id":"p-0120","num":"0119"},"figref":"FIG. 4","b":["400","405","110","120","130","1","110","405","410","265","310","210","210","210","220","230","240","205","400","265","205","210","300","500","110","430","300","120","1","110","110","430","300","120","140","120","300","600","360","300","120","450","310","350","120","140"]},{"@attributes":{"id":"p-0121","num":"0120"},"figref":["FIG. 5","FIG. 5"],"b":["300","500","360","300","110","500","300","310","510","300","310","310","310","310"]},"Next, a window locator  is written  into the TDS . See, for example,  regarding window locators.","Next, if the event is a document event or an element event , then the document locator  is computed  from the document reference , and written  into the TDS .","Next, if the event is an element event , then the element locator  is computed  from the element reference R, and written  into the TDS .","Finally, if the event requires event data , then the event data is written  into the TDS . For example, the document scroll event requires event data for scroll offsets.",{"@attributes":{"id":"p-0126","num":"0125"},"figref":["FIG. 6","FIG. 6"],"b":["600","120","600","300","120","610","250","320","250","320","120","320","320","300","320","120","250"]},"Next, if the event type  is one of the available document event or element event types , then the document reference R is computed  from the document locator . See, for example, .","Next, if the event type  is one of the available element event types , then the element reference R is computed  from the element locator . See, for example, .",{"@attributes":{"id":"p-0129","num":"0128"},"figref":["FIG. 7","FIG. 7","FIG. 2A"],"b":["700","700","330","205","330","2","0","2","3","1","2"]},"The process  may begin by obtaining a document reference R in step . The document reference R refers to the selected document .","In step  a variable \u201cframeVector\u201d is initialized to empty (no frames). After the process  is complete, the frameVector will contain a sequence of indices describing the document path .","In step , initialize a variable called childWindow to refer to the parent window of the document  whose document reference R is provided in step . Web browsers  provide a function to get the parent window of a document . It is believed that web browsers use parent windows to contain documents  in a one to one relationship. The parent window is represented here by the variable childWindow to facilitate traversal of the document path  in the hierarchical structure .","In step , the process  attempts to get the collection of frames associated with the parent window of the current childWindow, i.e., the value stored in the \u201cchildWindow\u201d variable. This step , Attempt-to-get-framesCollection, is described in more detail in . This step  implicitly initializes a variable called parentWindow. See, for example, . Step  either returns the collection of frames and\/or frame sets or returns an unsuccessful indication.","If  this attempt is not successful, the process  is complete, and the frameVector-represents the required document locator .","If  this attempt is successful, append next index  to the \u201cframesVector\u201d variable. See, for example, . Next, set childWindow to parentWindow  to continue the traversal up the hierarchy .","After step  the process  returns to step .",{"@attributes":{"id":"p-0137","num":"0136"},"figref":["FIG. 8","FIG. 8"],"b":["800","800","810"]},"If this attempt is not successful , that is, if there is no parent window of the given childWindow, the process  returns an unsuccessful indication . If the attempt  is successful, the process goes to step .","In step  if the attempt in  returns a parentWindow identified as, or equal to, the same window as childWindow , the process  also returns an unsuccessful indication . If the attempt in  returns a parentWindow that is not equal to the childWindow, the process  goes to step .","In step , the process  attempts to get the framesCollection of the parentWindow using an available function of the browser. In another exemplary embodiment, these functions would return a pointer to a collection of one or more frames and\/or frame sets. These frames or frame sets are the those which are the children of the parentWindow.","In step , if step  is not successful, an unsuccessful indication  is returned. If step  is successful, a successful indication is returned .",{"@attributes":{"id":"p-0142","num":"0141"},"figref":["FIG. 9A","FIG. 7"],"b":["900","330","230","900","700","0"]},"In step , the process  may set a variable called index to zero, i.e., origin \u201c\u201d. At the end of process , this index may be the index of the child window (childWindow) in the collection of frames being processed in the particular iteration of process .","In step , the process  gets the particular window that is referenced at this index value in the framesCollection. The window at this index value may or may not be the childWindow.","In an exemplary embodiment, this function may be performed by available operations on prior art web browsers.","Another exemplary embodiment is shown in . This case may apply to Internet Explorer version 5.0 (IE 5.0).","In step , it is determined whether the window returned in step  equals the childWindow (initialized in step ). If the windows are not equal, the index is incremented  and the process  returns to step . If the windows are equal, the index is appended  to the frameVector.",{"@attributes":{"id":"p-0148","num":"0147"},"figref":["FIG. 9B","FIG. 9B"],"b":["920","920"]},"In step  the process A gets an IDispatch interface pointer that may be referenced at the given index in the framesCollection .","In step , the process A converts the IDispatch interface pointer to an IHTMLWindow2 interface pointer.","In step , the process A gets the document  from this IHTMLWindow2 interface pointer.","In step , the process A returns the parent window of the document . Note that for the particular browser IE, the parent window that is returned in step  is different from the window that corresponds to the IHTMLWindow2 interface pointer in step . However, the returned window is the correct window to be compared with the childWindow in step . This exemplary embodiment illustrated the computing document locator from document reference in process . For another exemplary embodiment and\/or method addition to the process , computing locators and writing into the TDS, see, for example, .",{"@attributes":{"id":"p-0153","num":"0152"},"figref":"FIG. 10","b":["1000","205","330","1000","600","1000","205","330"]},"In step , the process  gets the document  contained in the web browser, and uses it to initialize a variable called \u201cdocument\u201d.","In step , the process  initializes an index, called \u201cdindex\u201d to zero .","Next, initialize a variable called \u201clength\u201d to the length of the frameVector  that is input to the procedure from the document locator .","In step , a check of the length is performed. If the dindex is not less than the length , the document is returned, step . Note that this condition is also executed after Step . This indicates that the path  is completely traversed and the document that in contained in the \u201cdocument\u201d variable references the document specified by the document locator .","If the dindex is less than the length , the process  proceeds to step .","In step , the process  gets the framesCollection from the \u201cdocument\u201d variable by using available functions of the browser.","In step , if step  is unsuccessful, the process proceeds to step , i.e., the document reference in the \u201cdocument\u201d variable is returned. If step  is successful , the process goes to step .","In step , the process  gets the document at dindex in framesCollection using available browser functions. This document then updates the \u201cdocument\u201d variable.","The process  then goes to step  where \u201cdindex\u201d is incremented. The process  now returns to step . Thus, each iteration of process  moves along the document path  and determines if the document reference in the \u201cdocument\u201d variable is at the end (complete traversal) of the document path .",{"@attributes":{"id":"p-0163","num":"0162"},"figref":["FIG. 11","FIG. 11"],"b":["1100","1100","210","340","210","205","341","340"]},"In step , the process  gets the tagName collection from the document  being processed. Step  gets the tagName collection of the document using the tagName value  in the element locator . For example, if the tagName value  is textarea, then the tagName collection is a \u201ctextarea collection.\u201d Generally, elements have specific available tagName collections.","In step , the Boolean variables \u201cbeyondUpper\u201d and \u201cbeyondLower\u201d are both initialized to false, and an integer variable \u201coffset\u201d is initialized to zero.","Step  performs a test to determine whether \u201cbeyondUpper\u201d is True or False. If True, a \u201cbeyondLower\u201d test is perform in step . If False, the process  goes to step .","In step , a \u201ctrialIndex\u201d is set equal to the index plus the offset. Then the process goes to step .","Step  tests whether the trialIndex is greater than or equal to a numElems variable, where \u201cnumElems\u201d is the number of elements in the tagName collection. See step .","If the trialIndex is not greater than or equal to the numElems variable, the process  proceeds to step . If the trialIndex is greater than or equal to the numElems, then the process  goes to step .","In step , the \u201cbeyondUpper\u201d variable is set to True and the process goes to step .","In step  the trialIndex is examined. See . Then the process  goes to step .","Step  determines if a match was determined by process . If not, the process  goes to step . If there is a match, the process  returns a successful indication . This indicates that the element reference R was found by process .","Step  performs a test to determine whether the \u201coffset\u201d is equal zero OR the \u201cbeyondLower\u201d variable is True. If this Boolean statement is True, the process  goes to step . If this Boolean statement is False, the process  goes to step .","In step , a \u201ctrialIndex\u201d is set equal to the index minus the offset. Then the process goes to step .","Step  tests whether the trialIndex is less than zero. If the trialIndex is not less than zero the process  proceeds to step . If the trialIndex is greater than zero, then the process  goes to step .","In step , the \u201cbeyondLower\u201d variable is set to True and the process goes to step .","In step  the trialIndex is examined. See . Then the process  goes to step .","Step  determines if a match was determined by process . If not, the process  goes to step . If there is a match, the process  returns a successful indication . This indicates that the element reference R was found by process .","Step  tests whether the \u201cbeyondUpper\u201d AND \u201cbeyondLower\u201d Boolean expression is True or False. If True, the process  returns a failure indication. This indicates that the changes of mutant web page could not be resolved for the collaboration. Another identification string may resolve this problem. If False, the process  goes to step .","In step , the offset variable is incremented and the process returns to step .",{"@attributes":{"id":"p-0181","num":"0180"},"figref":["FIG. 12","FIG. 11"],"b":["1200","205"]},"In step , the process  gets the generic interface pointer at triallndex in the tagName collection. An example of a generic interface pointer in Internet Explorer\u2122 is IDispatch.","In step , the process  converts the item from a generic interface pointer to an interface pointer of the appropriate type for the element. These conversions are available.","In step , an identification string is computed from the interface pointer computed in step . In another exemplary embodiment, one or more attributes of the element  corresponding to the interface pointer may be concatenated into an identification string (see ). Attributes are selected that do not vary in the collaboration environment. In another exemplary embodiment, such attributes can include the ID attribute and\/or the NAME attribute of the element (HTML object) and\/or its \u201cneighborhood\u201d (nearby elements) on the web page. Delimiters can be written between the fields of the string to avoid certain ambiguous descriptions.","In step in step , the identification string is then hashed to produce a hash value. This can be done using any available hash function.","Next, step  compares the hash value just computed with the hash value  in the Element Locator . If the hash values match, set match to true ; otherwise, set match to false .",{"@attributes":{"id":"p-0187","num":"0186"},"figref":"FIG. 13","b":["1300","340","210","1300","500"]},"In step , the process  gets the tagName collection for the element reference R inputted from the document  being processed by process . The tagName determined in this step is stored in field  of the element locator . For example, if the input element reference R references a textarea, then the tagName collection is a \u201ctextarea collection.\u201d It is believed that elements have specific available tagName collections.","In step  the element reference R for the inputted element  is found. This may be accomplished by iteratively comparing each member of the tagName collection to element reference R that was provided in the input. Each iteration is tracked by a tracking index. When there is a match, the tracking index indicates the location of the element reference R in the tagName collection. The tracking index is stored in field  of the element locator .","In step , an identification string is computed from the input element reference R. In another exemplary embodiment, one or more attributes of the element  may be concatenated into an identification string (see ). Attributes may be selected that do not vary in the collaboration environment. In another exemplary embodiment, such attributes can include the ID attribute and\/or the NAME attribute of the element (HTML object) and\/or its \u201cneighborhood\u201d (nearby elements) on the web page. Delimiters can be written between the fields of the string to avoid certain ambiguous descriptions.","In step , the identification string is then hashed to produce a hash value that is stored in field  of element locator . The purpose of hashing is to allow a compact representation of the identification string to be communicated and stored, while still allowing a fairly reliable test for equality.",{"@attributes":{"id":"p-0192","num":"0191"},"figref":"FIG. 14","b":["1400","1400","300","1400"]},"Collaborators that are collaborating by using a sensor containing the virtual document stack  can review the history of the collaboration. In addition, the virtual document stack  can be used to accommodate \u201clate comers\u201d to the collaboration session. This may be accomplished by sending all or part of the virtual document stack to a requesting collaborator. The collaborator then takes each of the TDSs  and uses the process steps  and  of  to recreate the respective portions (states of collaboration) of the collaboration sessions. By going through the virtual document stack  in this way, a collaborator can come to the current state of the collaboration.","In another exemplary embodiment of the present invention, the stack is implemented much like a multimedia stream. The event changes are seen as deltas applied to the base document. Periodically, the base document may be re-established on the stack in order to ease the synchronization of \u201clate comers\u201d to the collaboration session.","In another exemplary embodiment of the present invention, the deltas can be consolidated to the minimal events that would allow for a reduced set of deltas for the synchronization of collaboration participants. This would be achieved by combining events that nullify the functionality of each other. Additionally, events that are repeated would be combined through the use of a count to identify the repetition of events without re-specifying each individual event (Run Length Encoding). Further, if interleaved events are not dependent then the repetitious events that do not have serial dependencies can be combined. Further, higher level repetition of sets of events can be combined and have a repetition count sent with a single specification of the event chain, in order to further reduce the communication among collaboration participants.","The virtual document stack  can contain a set of TDS  for each of one or more documents. Therefore, the virtual document stack  can represent and track changes to more than one document in the collaboration session(s).","Note that, in another exemplary embodiment of the present invention, a first event occurring on a first document will cause a first TDS  to be created. This first event, could cause a change one or more second documents. These changes may initiate second events on each of these respective second documents that would cause the creation of necessary second TDS .","The various embodiments and\/or methods of the present invention may be used together and separately in various combinations.","Several embodiments and\/or methods of the present invention are specifically illustrated and described herein. However, it will be appreciated that modifications and variations of the present invention are covered by the above teachings and within the purview of the appended claims without departing from the spirit and intended scope of the invention."],"BRFSUM":[{},{}],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"BRIEF DESCRIPTION OF THE FIGURES","p":[{"@attributes":{"id":"p-0040","num":"0039"},"figref":"FIG. 1"},{"@attributes":{"id":"p-0041","num":"0040"},"figref":"FIG. 2A"},{"@attributes":{"id":"p-0042","num":"0041"},"figref":"FIG. 2B"},{"@attributes":{"id":"p-0043","num":"0042"},"figref":"FIG. 2C"},{"@attributes":{"id":"p-0044","num":"0043"},"figref":"FIG. 3"},{"@attributes":{"id":"p-0045","num":"0044"},"figref":"FIG. 4"},{"@attributes":{"id":"p-0046","num":"0045"},"figref":"FIG. 5"},{"@attributes":{"id":"p-0047","num":"0046"},"figref":"FIG. 6"},{"@attributes":{"id":"p-0048","num":"0047"},"figref":"FIG. 7"},{"@attributes":{"id":"p-0049","num":"0048"},"figref":"FIG. 8"},{"@attributes":{"id":"p-0050","num":"0049"},"figref":"FIG. 9A"},{"@attributes":{"id":"p-0051","num":"0050"},"figref":"FIG. 9B"},{"@attributes":{"id":"p-0052","num":"0051"},"figref":"FIG. 10"},{"@attributes":{"id":"p-0053","num":"0052"},"figref":"FIG. 11"},{"@attributes":{"id":"p-0054","num":"0053"},"figref":"FIG. 12"},{"@attributes":{"id":"p-0055","num":"0054"},"figref":"FIG. 13"},{"@attributes":{"id":"p-0056","num":"0055"},"figref":"FIG. 14"}]},"DETDESC":[{},{}]}
