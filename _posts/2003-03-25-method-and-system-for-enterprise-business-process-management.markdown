---
title: Method and system for enterprise business process management
abstract: An enterprise business process management system and method for definition and execution of business processes formed from portions of one or more business applications present in an enterprise. The enterprise business process management system includes a server, a router, and an interface for defining and executing such business processes. A data quality business process detects, corrects, analyzes, and reports quantitative and qualitative characteristics of application data and transactional data present in the enterprise. An interface module is provided by which a user may select and define function definition information for a business process.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=06920474&OS=06920474&RS=06920474
owner: Data Quality Solutions, Inc.
number: 06920474
owner_city: Silver Spring
owner_country: US
publication_date: 20030325
---

{"@attributes":{"id":"description"},"RELAPP":[{},{}],"p":["This application claims priority to U.S. Provisional Application No. 60\/366,547 filed Mar. 25, 2002, entitled \u201cMethod and System for Enterprise Data Quality Management.\u201d","This disclosure contains information subject to copyright protection. The copyright owner has no objection to the facsimile reproduction by anyone of the patent disclosure or the patent as it appears in the U.S. Patent and Trademark Office files or records. However, the owner reserves all remaining copyrights associated with the invention described herein, including all copyrights in the screen displays provided herein to facilitate an understanding of the invention.","1. Field of the Invention","Embodiments of the present invention relate generally to business process management and, more particularly, to methods and systems for computer-based business process management.","2. General Background and Description of Related Art","The automated processing of information has been an enormous benefit to businesses because it has greatly reduced the cost of certain tasks. Every enterprise regardless of whether it is a government, commercial business or not-for-profit organization has the operational necessity to manage information.","This information is used to acquire customers, input orders, ship product, bill customers, collect invoices, pay employees and vendors, order product, audit inventory and maintain records of transactions between employees, customers and suppliers, for example, in the case of a commercial business.","In the normal course of events, information is acquired, processed and consolidated utilizing software, computer hardware and digital networks in accordance with each organization's internal operational model.","Unfortunately, the automated processing of information has also created several problems for businesses, especially where the information in the company's data store is incorrect. Automated processing of incorrect information carries a high cost for businesses in and of itself. In addition, the time, effort, and expense required to correct the undesired results can significantly impact an organization's resources.","Typical examples of the impact of errors on an organization include:\n\n","The impact of erroneous information on a company's revenue is easily explained using a typical mass mailing as an example. Naturally, this is but one example, as the list presented above identifies a number of other potential impacts on a company's revenue.","Companies generate customer lists in a variety of ways. Information collected by one part of an enterprise is often used by other parts of an organization to perform their functions. If the company has a retail component and a catalog component, customer information may be entered into the company's data store at the retail location, at the catalog location, or even through the Internet. Each of these three entry positions presents a location where the information may be erroneous or duplicative of pre-existing information. Any error in the accuracy of information as it is collected, processed and consolidated can impact the effectiveness of multiple functions within an enterprise.","It is possible that a customer may have customer information entered correctly at the retail level. Subsequently, the customer may make a purchase through the catalog division. At that time, the data entry specialist may, for example, enter the customer's name into the data store incorrectly (e.g., by misspelling the person's last name). On still another occasion, the same customer may make a purchase through the Internet. At that time, the customer will be required to supply his or her information for a third time. In this situation, assume that the customer typed his or her last name incorrectly. Therefore, in this scenario, the customer information has been entered three times, two of which were incorrect.","Relying on its stored data, the company then prints and sends an updated copy of its catalog to its customers. Since the customer described has three separate entries in the business's data store, the customer receives three copies of the same catalog. As is easily understood, the cost to the company of printing and mailing the catalog has been tripled simply because of errors in the company's data store.","The problem of data quality exists with many businesses. In the prior art, there have been several approaches offered to minimize the data quality problem.","Previous approaches to data quality include providing a variety of vendor-specific or application-specific functions to the business. The data quality functions are designed specifically to automatically review a company's data, identify errors, in some cases, and correct those errors. To do this in such a way that is flexible to different businesses, the data quality functions typically provide several settings that may be adjusted by businesses to meet their individual needs.","Typically, businesses select a standardized set of settings for a particular data quality function that the business finds most beneficial. The settings may, for example, remove the errors in a data store to \u201cclean\u201d the data store to a point where the data is 95% accurate (which is considered to be a very good result).","The problem of data quality is compounded when a company includes multiple units, each of which have separate data stores that contain overlapping information, and the company tries to create a consolidated data store.","In the example presented above, the company had three business components, a retail component, a catalog component, and an Internet component, each of which contained a separate customer information data store. Typically, if each component wished to \u201cclean\u201d up its data, each component would purchase a data quality solution and apply that solution internally. If each component were to produce a data store that was 95% accurate, the result would be considered quite good.","If the company then tries to create a consolidated data store, a problem arises in that the errors in each data store compound one another. In the case presented, each data store has the same error. The combined data store will have an error rate of 0.95\u00d70.95\u00d70.95=0.857375. This means that the resulting data store has an error rate of about 15%, three times higher than each of the data stores that were combined. As may be appreciated, this problem is particularly pronounced when four or more data stores are combined together.","Furthermore, because the vendor-specific and application-specific data quality functions have unique strengths and weaknesses in detecting and\/or correcting errors, the errors may be inadvertently propagated throughout the enterprise as applications pass data back and forth. This may have the undesirable result of causing a multiplicative increase in the overall error rate for the enterprise as a whole.","While data quality solutions are beneficial to the operation of businesses, they are limited in their ability, especially in cases where companies try to create centralized data stores for multiple business entities in an enterprise or group of entities.","Moreover, when a business desires to develop a program to \u201cclean up\u201d its centralized data store, current doctrine dictates that the business retain a firm to develop the appropriate software. The development of software follows what is commonly referred to as the Software Development Life Cycle (SDLC).","The known SDLC adhered to by developers of business processes, such as, for example, data quality processes, results in a time and resource costly lock-step sequential phase approach. For example, a known SDLC includes the following phases which are performed sequentially: requirements definition, general design, detailed design, development, testing, quality assurance checking, trial, implementation, and maintenance\/modification. In addition, different personnel or service providers with different skill sets may be required as the project moves from phase to phase. For example, a systems engineer or business analyst may be required during the requirements analysis\/definition and test phases, but a software engineer may be required for the design phases. Project handoff between phases introduces errors into the final product and adds cost due to increased project time, increased overhead, and higher project headcount.","Still further, because the requirements definition phase may be arbitrarily halted (i.e., requirements \u201cfrozen\u201d) in order to permit design activities to begin, the known SDLC is inflexible and unaccommodating to the evolving needs of customers for software products.","The failings identified above with respect to the prior art cry out for a solution.","It is, therefore, one aspect of the present invention to provide a business process management system and method that resolves many of the deficiencies in the prior art.","An enterprise business process management system may include an enterprise business process server coupled to one or more clients, a router, and an interface module. In particular, at least one embodiment of an enterprise business process management system in accordance with the present invention may include an enterprise business process server capable of receiving data from at least one client, at least one router accessible by the enterprise business process server, and at least one business process accessible by the at least one router. The enterprise business process server may be configured to access the at least one business process via the router, to execute the at least one business process on at least a portion of the client data, and to generate business process output data as a function of the at least one business process. The enterprise business process management system may further include an interface accessible by the enterprise business process server which operates with the enterprise business process server to output a process designer interactive page. The process designer interactive page may be configured to accept instructions concerning the at least one business process, to generate process information data, and to provide the process information data to the enterprise business process server. Furthermore, the enterprise business process server may build an instruction set for the business process based upon the process information data.","In accordance with at least one embodiment of the invention, an enterprise data quality management system and method are provided that determine, analyze, enhance, and report qualitative and quantitative aspects of application data and transactional data present in the enterprise.","In accordance with other aspects of the present invention, error reports may be provided at various levels of data processing to identify where data errors are made.","The system and method also provides for a variety of graphical views to present information concerning where errors are made so that businesses may avoid and correct (or at least minimize) those errors in the future.","Furthermore, embodiments of the present invention may provide for a shortened SDLC in which several of the known SDLC steps are combined such that project development time is shortened and the process simplified, resulting in significant time and cost savings.","For example, in one embodiment, the requirements definition, general design, detailed design, and development phases may be accomplished simultaneously in a single phase utilizing an interactive process designer.","Moreover, in one embodiment of the invention, by applying test data to the business processes defined and implemented as described herein, the known SDLC test, quality assurance, and trial phases may be accomplished in a single phase.","In addition, in an embodiment of the invention, each of the SDLC activities may be accomplished through user interaction with one process designer interface provided by a single product.","Furthermore, in an embodiment of the invention, a software engineer may not be required for coding during the project.","Still further, embodiments of the present invention may allow for the reuse of functions from multiple software applications, as well as providing the capability for the user to define a new or modified function of a business process. In at least one embodiment, each such function may be maintained in a function registry or function library and made available to a business process server for subsequent use in defining additional business processes or modified business processes.","Still further, embodiments of the present invention may provide an enterprise to use \u201cbest of breed\u201d business processes in combination to achieve increased effectiveness for the overall process. Portions of multiple different business applications may be combined to form a new or modified business process in which the portions are chosen for a particular effect or other such criteria resulting in increased overall effectiveness. For example, several data quality processes, each of which may be obtained from the same or multiple different business applications, may be defined to comprise a single data quality business process that achieves a higher overall data accuracy percentage than would be possible applying each of the multiple data quality business applications alone.","Still other aspects of the invention will be made apparent from the description that follows and the drawings appended hereto.","This application claims priority to U.S. Provisional Application No. 60\/366,547 filed Mar. 25, 2002, entitled \u201cMethod and System for Enterprise Data Quality Management,\u201d the entire disclosure of which is hereby incorporated by reference as if fully set forth herein.","While the present invention will be described in connection with exemplary embodiments thereof, the exemplary embodiments are not intended to be limiting of the invention. On the contrary, alternatives, modifications and equivalents of the described examples are also intended to be included within the spirit and scope of the invention, which is defined in part by the claims appended hereto.","In accordance with at least one embodiment of the invention, an enterprise business process management system and method are provided. Although at least one embodiment is presented herein in the form of an embodiment of an enterprise data quality management system, it is to be understood that the teachings herein may be applied more generally to any enterprise business process management system, including or in addition to those business processes involved in data quality management. The system and method may utilize a server and an interchangeable router for defining, building and executing steps in business processes, including, for example, steps for detecting, correcting and reporting data errors present in various applications throughout an enterprise. An enterprise may include multiple computing nodes located in different geographic or physical locations that comprise a business organization. The various computing nodes may be interconnected for inter-node communication throughout the enterprise using a network such as, but not limited to, an intranet, the Internet, leased telephone or data lines, a wireless network, or any combination of these. Connected in any of these manners, among others, users associated with the enterprise may obtain transparent, virtual access to enterprise applications, processes, and functions regardless of the physical location of the node or nodes where the applications, processes, and functions reside.",{"@attributes":{"id":"p-0084","num":"0089"},"figref":["FIG. 1","FIG. 1"],"b":["100","101","102","103","104","105","101","101","106","107","108","109","101","110","111","112","113","101"]},"The enterprise business process server  may communicate with enterprise nodes including the additional clients -, the data stores  and , mainframes , Internet  and terminals - using a variety of communications networks including, but not limited to, a network of interconnected networks such as the Internet, a Local Area Network (LAN), a Wide Area Network (WAN), an intranet including any of these, and\/or the PSTN, a wireless network, or any combination thereof. In at least one embodiment, the enterprise business process server  may communicate with one or more of these enterprise nodes for receiving and transmitting transaction related data as well as error reports, at a minimum.","Generally, the clients - may be any data source that can send or receive data such as, but not limited to, a server, or a client portion of a client-server application. A client may host one or more business applications processes, or functions of the enterprise, for example. Clients may be located internal or external to an enterprise firewall.","The ETL client  may be configured to enable an organization to extract data sets from one data source, map the data to another data source, transform the data if necessary, consolidate data sources, and load the data into the destination source or sources. Such an ETL client  may be primarily batch processing oriented and utilize a hub architecture in which the transformations and mappings are performed as the data is passed from its source to its destination.","The EAI client  may be configured to enable enterprise transactions to pass from one application to another within an organization\/enterprise and from one organization to a partner organization that exists on an EAI network. Such an EAI client  may use a hub architecture and include capabilities for mapping and transforming data associated with the enterprise transactions.","The ERP client  may be configured to integrate multiple facets of the business or enterprise, including planning, manufacturing, sales, and marketing activities. Such an ERP client  may use a hub architecture and include capabilities for mapping and transforming data associated with these activities.","The CRM client  may be configured to manage multiple aspects of interaction between the organization\/entity and its customers using a variety of electronic-based tools, including help-desk software, sales, marketing, e-mail organizers and Web development applications. Such a CRM client  may use a hub architecture and include capabilities for mapping and transforming data associated therewith.","The additional enterprise clients, including the ETL client , EAI client , ERP client , and CRM client , may each include vendor-specific application quality checking processes that operate internally to each of the respective server applications. In at least one embodiment, the enterprise business process server  may include a Transmission Control Protocol\/Internet Protocol (TCP\/IP) interface for exchange of information with additional enterprise servers including the ETL client , EAI client , ERP client , and CRM client . Information exchanged between the enterprise business process server  and the additional clients may include commands or requests from the enterprise business process server  to perform one or more particular processes or functions of a process (or processes) such as, for example, processes to check data quality. The exchanged information may also include data output by application quality checking processes or functions. The TCP\/IP communication interface may allow the enterprise business process server  to connect directly to any application on the enterprise network. Alternatively, the TCP\/IP communication interface may allow the enterprise business process server to connect to external applications using, for example, the Internet.","In at least one embodiment, the enterprise business process server  may obtain information from the information data store  and the flat files data store . In particular, the enterprise business process server  may include application instructions such as data store scripts for accessing, storing, or selectively retrieving information contained in the information data store  and the flat files data store . The data store scripts may be implemented in the form of programming statements provided in accordance with, for example, SQL version 7.0 data store management system query language, as well as Transact\u00ae SQL (in accordance with the ColdFusion\u00ae data store management system). Other data store implementations are possible, including, but not limited to, those available from Oracle\u00ae or IBM DB2\u00ae.","In an alternative embodiment, the enterprise business process management system  may include an enterprise database server (not shown) coupled to the enterprise business process server  and the information data store  and the flat files data store  for the purpose of accessing information stored therein. The information data store  may include enterprise application or transactional data arranged in accordance with a hierarchical data store management system format such as, for example, SQL. The flat files data store  may include enterprise application or transactional non-hierarchical data.","The enterprise business process server  may also be coupled to one or more mainframes  in the enterprise. The mainframe(s)  may include organization or enterprise applications such as, for example, legacy payroll or accounting systems. In at least one embodiment, the enterprise business process server  may communicate with the mainframe(s)  using a Local Area Network (LAN), a Wide Area Network (WAN), dedicated landlines, or a combination thereof, among others.","Furthermore, in at least one embodiment the enterprise business process server  may also be coupled to one or more terminals such as a call center terminal(s) , data entry terminals , local user terminal(s) , and remote user terminal(s)  via LAN, WAN, dedicated landlines, an intranet, the Internet, a wireless network, or a combination thereof. The enterprise business process server  may thereby receive transactional data from one or more of the terminals -.","In addition, the enterprise business process server  may communicate with users at one or more remote terminals  using, for example, the Internet . In at least one embodiment, the enterprise business process server  may further include a web browser or thin client for this purpose. The web browser displays data and is capable of communicating with other computers via a network such as, for example, the Internet or an intranet. The web browser may provide a user with a way to navigate, via, for example, hyperlinks which are selected by a pointing device (such as a computer mouse) or typed in by the user. The web browser may use a protocol such as, for example, HyperText Transfer Protocol (HTTP) or File Transfer Protocol (FTP), to transmit data of various content such as, for example, HTML formatted documents, plain text documents, graphic images, and XML documents for presentation to a user via a display.",{"@attributes":{"id":"p-0097","num":"0102"},"figref":["FIG. 2","FIG. 2"],"b":["101","200","210","220","230","240","250","210","240"]},"The memory  may be implemented utilizing alternative configurations depending on the needs of a user or a system associated with the enterprise business process management system. The system interface  may include both hardware and software to allow the equipment  to communicate with components that provide data utilized by the enterprise business process management system, for example, transactional data feeds from the additional enterprise servers.","The processor  controls operation of the other elements -, based on instructions fetched from the memory . The instructions may include or be implemented as software code that dictates some or all of the operations of the enterprise business process management system  and method explained herein. The memory  may include this code and may also include storage area for data utilized by or generated by the enterprise business process management system . The processor  may fetch the instructions, decode them, and act or instruct other elements - to, for example, transfer data to or from the memory  or to work in combination with the system interface  or the user interface  (for example, to input or output information), etc.","The processor  may actually be implemented as more than one processor. The processor  may, based on instructions fetched from the memory , operate to control operation of the other elements -. It should be appreciated that control may be implemented with the processor , for example, in a central processing unit, or other similar device. Similarly, the processor  and the memory  may be implemented via one or more servers coupled to a network that allows the user interface  to be implemented at a user terminal, such as local terminal  and remote terminal , and include a Graphical User Interface (GUI) on a terminal screen.","The user interface  may include, for example, hardware and software for cooperating with a terminal display, a keyboard and mouse, printer, etc. Moreover, the user interface  may include a speaker and microphone, not shown, for outputting and inputting information to and from a user. The user interface  may operate in conjunction with the processor  to allow a user to interact with software programs stored in the memory  and used by the processor  so as to perform the operations explained below.","The enterprise business process server  can be implemented, for example, as portions of a suitably programmed general-purpose computer. The system may be implemented, for example, as physically distinct hardware circuits within an ASIC. Thus, it should be appreciated that the particular form of the system  may differ from the embodiment(s) explained herein. For example, although the enterprise business management system  has been described as being implementable on a general-purpose computer, for example, a personal computer, it is foreseeable that the system may be implemented in a network environment where the software implementing the system is stored on one or more servers. In at least one embodiment, the enterprise business process server  may allow a user (e.g., an administrative user) to add, modify, or delete business process processes or steps without taking down the server . Furthermore, the enterprise business process server  may be scalable in order to easily function within server array or cluster environments and for processing of large volumes of data. In at least one embodiment, the enterprise business process server  may include a Microsoft Windows\u2122 NT enabled personal computing platform, for example.","In at least one embodiment, the enterprise business process server  may include one or more applications programs containing a series of programmed instructions that cause the enterprise business process server  to be configured to perform the business process operations as described herein. In particular, in at least one embodiment,  illustrates a functional block diagram of an enterprise data quality application  of the enterprise business process server . Referring to , the enterprise data quality application  may include a core architecture , a set of predefined view tools , a developer's kit , and an interface module , which may be a business analyst interface. The core architecture  may include a series of programmed instructions for obtaining application data or transactional data from one or more data sources, analyzing the obtained data for errors, logging detected errors, and generating at least one error report according to a particular requested view. The enterprise data quality application  may include one or more functions designed to analyze a particular type of application data, which may be obtained from one or more data sources, for occurrences of one or more types of errors present in the application data. In addition, the enterprise data quality application  may include instructions causing a request to be transmitted to one or more of the additional enterprise servers, including the ETL server , EAI server , ERP server , and CRM server , requesting execution of a particular application's internal quality checking processes or a particular set of functions of one or more of the application's internal processes. In at least one embodiment, the enterprise business process server  may transmit commands\/requests (e.g., function calls or procedure calls\/Remote Procedure Calls (RPCs)) and receive responses from the associated server via the TCP\/IP interface. The core architecture  may include a multi-threaded management layer for automatically converting any legacy applications that are not multi-threaded to multi-threaded capabilities.","In an embodiment, the business analyst module  may include a sequence of programmed instructions to implement the interface module (e.g., business analyst interface or BAI) described herein. These instructions may, upon execution by the enterprise business process management server , cause the enterprise business process management server  to provide an interactive means to facilitate user interaction with the enterprise business process management system . In particular, the business analyst module  may include instructions operable to cause process steps to be represented graphically, for example, using a display, and indicative of a particular operation to be accomplished by the enterprise business process server when executing one or more process steps of a business process. As such, the business analyst module  may be an overlay application to the developer's kit . The business analyst module  may also include instructions operable to cause the enterprise business process server  to retrieve, build and compile from a data store such as, for example, the data store , a sequence of instructions implementing the business process defined by a user interacting with the interface module.","In at least one embodiment, the enterprise business process system  may output error information in the form of one or more error reports. Error reports may be presented in accordance with a variety of views. The predefined view tools  may include programming instructions associated with one or more error reports provided in accordance with a predefined set of views. For example, the predefined view tools may provide instructions that cause the enterprise business process server  to output an error report including a numeric count of errors for a data source for a manager's view. Further exemplary views and reports are described hereinbelow.","The developer's kit  may include an Application Programming Interface (API) useful for users of the enterprise business process system  or their designated third parties to create and use customized view tools for analyzing particular data, sources, error syndromes, or for providing customized reports over and above the set of predefined view tools . There is no limit on the number of views supported by the enterprise business process management system .","In at least one embodiment, the enterprise business process server  may be implemented in accordance with a client-server architecture. Programmed instructions, including the enterprise data quality application , may be implemented in portable source code such as, but not limited to, generic Microsoft\u00ae C. The enterprise business process server  may be implemented in accordance with an encapsulated server design in order to support clusters and server arrays. Furthermore, the enterprise business process server  may be implemented in accordance with a stateless architecture approach to allow use of third-party technology for load balancing and high availability, for purposes of providing reliability and scalability to handle huge volumes of data. In addition, the enterprise business process server  may utilize \u201csandbox technology\u201d (i.e., use of a combination of process synchronization and isolation techniques such as, for example, handling each session via a separate thread) to allow legacy technology that was not multi-threaded, or even thread-safe, to be quickly and reliably added to the real-time, parallel processing environment.",{"@attributes":{"id":"p-0108","num":"0113"},"figref":["FIG. 4","FIG. 4"],"b":["101","305","101","305","1","101","315","1","315","101","310","1","101","325","310","310","325","320","160","5"]},"The enterprise business process management system  may include an architecture designed to utilize an unlimited number of different vendors' products in a unique process for each application (data source) or data set within an application. In particular, the enterprise business process management system  may provide a framework for a unique process that creates, executes, manages and reports on individual process steps in a business process that utilizes different vendors' products on various platforms and enables these products to be used across the entire enterprise. The enterprise business process management system  may provide archiving or logging of the quality of the data being processed at each step in a multi-vendor environment. The enterprise business process management system  may allow for managing, tracking and reporting on the use of multiple vendors' products in a unique process for any application (data source) or data set within an application. The enterprise business process management system  may provide for the utilization of the same functions from the same or multiple vendors with different settings in a process. The enterprise business process management system  may provide different views on the performance of individuals, business units, or special constituencies within an organization and the enterprise in regard to particular aspects of the business process such as, for example, data quality. The enterprise business process management system  may provide for comparisons of the effectiveness of various functions and settings from different vendors for the selection of the most effective functions and settings to handle a specific enterprise issue, such as, for example, a data quality issue. The enterprise business process management system  may provide for the fast implementation of multi-vendor applications, such as data quality tools and data quality processes.","In particular, the enterprise business process server  may utilize a vendor independent architecture that allows for business process tools to be used either on their current computer platform or on the same platform that hosts the enterprise business process server . In at least one embodiment, the enterprise business process management system  provides for reuse of functions of multiple business applications in system  defined business processes.",{"@attributes":{"id":"p-0111","num":"0116"},"figref":"FIG. 5","b":["100","101","160","170","160","160","160","170","400","170","160","400","400","170","112","113"]},"As can be seen in , the enterprise business process management system  may provide several different views , including, but not limited to, an end user view, a developer view, a manager view, and an executive view. Exemplary views  are described in further detail with respect to  below.","The enterprise business process management system  may provide the ability to create different views  of the results of each step in a process for different levels of an organization to permit the measurement and management of the effectiveness of the organization's business processes. The enterprise business process management system  may include visualization software that creates graphical information for the different views . This graphical information may include analytical tools, statistical information, data tracking, cost analysis and, in at least one embodiment, an indication of the impact of the results of the different levels of the organization in reducing the errors in data quality.","In order to support the generation of error reports in accordance with a variety of views , the data store  (which may be an online application processing database or summary database) may maintain error report information in accordance with a \u201csingle view\u201d in which information contained in the data store  is formatted and arranged in a consistent manner equally accessible by the view engine  for the production of any view , regardless of the data source\/destination , product , or process  from which the data was obtained.","The enterprise business process management system  may log the results of each step in a process from every data source. This log may provide information regarding who sent the data, what occurred during each step of the process, and where the data was sent after the process was completed. This log may feed directly into the view engine , which may be a graphical reporting system, for rendering of multiple views.","In at least one embodiment, view engine  may provide graphical reports to various users including executives, managers, end users, and process developers that convey information regarding how they, their department, organization or processes are performing. In particular, in at least one embodiment, view engine  may provide the following views , for example views for Executives, Managers, Users, and Developers. The Executive View provides graphical reports on the quality of data for the whole organization. Executives can drill down into the performance of every segment within the organization to compare performances and causes of data quality issues. Executives have access to Manager and User Reporting modules as well. The Managers View provides graphical reports on the quality of data in the manager's organization(s) and department(s). Managers can drill down into the performances of their business units and departments and compare performances and causes of issues such as, for example, data quality. The Users View provides graphical reports on the quality of the data that has been entered by users into the system. Users can drill down on the specific problems and review the input and output data and result codes of each step in the process. The Developers View provides graphical reports on the results of all processes and steps so that developers may analyze the results and make changes to the process to improve the results. Developers can readjust the sequences of functions, eliminate functions, utilize functions from other vendors, add new functions from different vendors and create new functions themselves.","The view engine  may include statistical modeling packages that can be used to add the financial impact of data that is validated\/corrected and not validated\/corrected. In at least one embodiment, the view engine  may be implemented using graphical modeling technology available from, for example, Illumitek\u2122 Corp. of Dulles, Va.",{"@attributes":{"id":"p-0118","num":"0123"},"figref":"FIG. 6","b":["100","100","100"]},"The enterprise business process management system  may include the ability to compare the strengths and weaknesses of each vendor's functions and settings in a multi-vendor, multi-step process. Furthermore, the enterprise business process management system  may provide a fast, easy to use methodology for installing products and functions from multiple vendors to expedite the implementation of business process projects. Thus, in at least one embodiment, the enterprise business process management system  may be vendor independent while allowing users access to all the functions included in additional enterprise servers or application, including existing business process vendor products, custom codes, or services. Through use of the function oriented approach as described herein, a user may sequence the business process functions, such as, for example, data quality functions, from different vendors in any order determined to fit the needs of each data set and data source. Furthermore, a user may establish unique processes  and steps for each data set within a data source as described with respect to FIG. .","A vendor may be a software company that provides functionality to, for example, identify and separate into distinct fields the elements of a business and consumer name; identify, separate, validate and correct each element of an address; identify, separate, validate, correct and transform non-name and address information for on-line transactions and batch processing; consolidate data from different records and different data sources; augment the original data with additional data; and create a single record or view of that individual or client.","The enterprise business process management system  may include a Graphical User Interface (GUI) capable of allowing a user to create a process for an application or data set from an application. The user may specify the format for the data, and may also create individual steps in a process by calling a specific function(s) and setting(s) from an available tool for each step. The GUI may be implemented using Java\u00ae instructions, for example. The user may repeat the exercise of creating steps until a business process process is fully defined and completed. The process may be represented, viewed and navigated in a hierarchical fashion where a single step may represent a multi-step sub process. The process depiction and description may be presented on other output devices, such as printer. The process depiction and description may be exported for viewing and manipulation by external applications, such as a word processor, flow chart application, or web browser. The user may then identify the destination(s) for the results of the process and decide what information is to be sent to each destination. The results of each step within a Process may be logged to a text file or data store. The data that is stored in the text file or data store may used by a view engine, which may include visualization software, to create graphical reports, which contains analytical information, statistical information, data tracking, cost analysis, and the impact of data for the different levels within an organization. This information may be used to measure and monitor the effectiveness of an enterprise business process such as, for example, a data quality program.",{"@attributes":{"id":"p-0122","num":"0127"},"figref":["FIG. 39","FIG. 39"],"b":["304","101","3905","605","101","605","605","101","605","605","3905","3905","1","2","3","39","3910","3905","3910","3905","3905"]},"In at least one embodiment, the router  may be an interchangeable router in which new versions or loads for the router  may replace the current router  version, and be placed in service and handle data traffic, without the need to take the server  down (i.e, out of service). The router  may include the instruction set for the currently active business processes provided by the enterprise business process management system . A new router  version may be built and placed into service to begin data traffic handling according to a new or modified business process. In an embodiment, the interface module  may generate an instruction set embodying a new or modified business process in response to user entered function information. The user may enter the function information using, for example, a process designer interactive page provided by the interface module . Following replacement of the current router version with a new router version, input data  may be handled according to the new router version. Further details concerning the replacement of a current router version with a new router version are described with respect to herein.","Referring to , a method  may commence with the enterprise business process server  receiving input data at . The input data  may be received from a data source\/destination .","Control may then proceed to  at which the input data may be passed to a process router. Based on a process identifier, the process router may direct the input data to a particular process  (e.g., Process X). In at least one embodiment, the process router may allow processes and steps to be easily and quickly modified without bringing down the server  (i.e., an interchangeable or hot swappable router).","Control may then proceed to , at which the process  (e.g., Process X) may receive the input data and pass it to each step in a multiple step process. An example of a business process is a data quality process such as an address validation operation in which transactional data (obtained from a data source\/destination  associated with a particular enterprise application) is compared to a trusted source such as, for example, a United States Postal Service database. Control may then proceed to a second step at  and thereafter to subsequent steps (e.g., Step N) at . After each step in the process , the results of the step may be entered into a log , such as, for example, error log , and the data is passed to the next step. The results of each step of the process  and the error log  may be maintained in a data store , such as the data store . As mentioned above, the data store  (and the data store ) may be, but is not limited to, an OLAP (On-Line Analytical Processing Database) or a Summary Database. Logging may include server Logging (e.g., logging of all transactions received by the server, logging of server statistics) as well as process logging (e.g., detailed logging of each step within a process that can be used for analysis on transaction data and product abilities).","After the final step in the process  has been completed, control may proceed to  at which the process results may be applied to an output data structure. The output data may then be provided to a data source\/destination , following which processing may end for the method .","In at least one embodiment, a process  may include fields such as, but not limited to, ROME_ID, ROME_TIME, SECT_CODE, SOURCE_DEST, SUB_SOURCE_DEST, RETURN_CODE, and INPUT COMPONENT 1-N. Each step in a process  may include fields such as, but not limited to, ROME_UID, ROME_TIME, PRODUCT_ID, PRODUCT_RC, STEP_ID, and OUTPUT COMPONENT 1-M. Each data packet may have a unique identifier (e.g., \u201cROME_ID\u201d) that can be used to track the results of multiple submissions of the same data packet.","As described earlier herein with respect to , for example, in at least one embodiment, the enterprise business process server  may provide error reports in accordance with one or more views .  is an example of an error report for an executive view according to at least one embodiment of the invention. As shown in , an executive view  may include one or more error reports providing data error information for a variety of divisions  of an enterprise. For example, the exemplary executive view  shown in  may present an error report for divisions  including marketing, finance, sales, development, web, and customer support divisions, giving the requesting user (e.g., enterprise executive) visibility into aspects of the enterprise such as, for example, data quality, so that corrective action may be taken, for example. In at least one embodiment, incorrect or errored records may be marked to indicate that they were not corrected, and the reasons for such.","In particular, an error report may provide in numeric as well as graphical form, using tools such as charts  and , ranking or statistical analysis of the errors detected in a given set of enterprise application data or transactional data. For example, in at least one embodiment the enterprise business process management system  may perform analysis processes that provide information to the requesting user such as, but not limited to, a ranking of the data errors  detected for applications within different divisions , a traffic intensity indicator  for data transactions flowing into and out of a division , a productivity chart  showing the change in productivity for each division  over time, and a process error classification  of the strengths, weaknesses, costs, and gains associated with the data quality for the divisions .","Similarly,  are examples of an error report for a customer support view , an individual view , and a manager view , respectively, according to at least one embodiment. Items including reference numbers identical to those appearing in  are as described earlier with respect thereto.","In particular, for individual view , the enterprise business process management system  may provide visibility to the requesting user into, for example, data errors attributable to a particular individual. For example,  shows a process error classification  of the strengths, weaknesses, costs, and gains associated with a particular individual , as well as the error types  committed by the individual  and the number of errors distributed over time  attributable to the individual . The example error classification  of the error report in  shows that the individual  is strong (i.e., few errors committed) in entering address information, is weak (i.e., many errors) in entering names, has committed , , and  errors in different time periods, and has cost the enterprise $800 as a result of the data errors.","Furthermore, for manager view , the enterprise business process management system  may provide visibility to the requesting user (e.g., enterprise manager) into data errors attributable to particular individuals  and to the individuals as a group. For example,  shows a process error classification  of the strengths, weaknesses, costs, and gains associated with multiple individuals , as well as the error types  committed by each of the individuals  and the number of errors distributed over time  (e.g., time of day) attributable to the group. A cost per time period chart  may also be provided indicating the daily cost incurred by the enterprise for the data errors attributed to each individual .","In at least one embodiment, the enterprise business process management system  may provide the capability for a user (e.g., an administrative user) to create and establish business processes  for execution by the enterprise business process server .  is a flow chart of a method  of establishing an exemplary data quality process for the enterprise business process management system  in accordance with at least one embodiment. The method  may commence at  upon the enterprise business process server  receiving a user request to create a process . A user may enter a request to create a process  by, for example, using a pointing device to select an associated hyperlink contained on an interactive page provided by a graphical user interface portion of the enterprise data quality application .","Control may then proceed to , at which the enterprise business process server  may prompt the user to create a process name and select a data source for the process .  is an example of an interactive page  provided by the enterprise business process server  in which a user may enter a process name, description, and associated data source .","Control may then proceed to , at which the enterprise business process server  may prompt the user to enter a new data source , if necessary. If the user responds by requesting to add a new data source , control may proceed to  at which the enterprise business process server  may generate and output an interactive page  for a user to add a data source .  is an example of an interactive page  provided by the enterprise business process server  in which a user may add a data source  by entering information such as, but not limited to, a data source name, description, IP address, Port Number, and platform identifier.","Control may then proceed to , at which the enterprise business process server  may prompt the user to create an input packet for the process .  is an example of an interactive page  provided by the enterprise business process server  in which a user may create an input packet by entering attribute information such as, but not limited to, an input element name, type, length, and description. The input element type may specify a data type for the input packet such as, but not limited to, boolean, character, double character, wide character (UNICODE), floating point decimal, integer, long integer, or short integer.","Control may then proceed to , at which the enterprise business process server  may prompt the user to create an output packet for the process .  is an example of an interactive page  provided by the enterprise business process server  in which a user may create an output packet by entering attribute information such as, but not limited to, an output element name, type, length, and description. The output element type may specify a data type for the output packet such as, but not limited to, boolean, character, double character, wide character (UNICODE), floating point decimal, integer, long integer, or short integer.","Control may then proceed to , at which the enterprise business process server  may prompt the user to select a product  (or function or set of functions, as the case may be) to be associated with the process . A product  may include a function or a set of functions.  is an example of an interactive page  provided by the enterprise business process server  using which a user may select a product  by entering, as a minimum, a selection of a product  from a pull-down list, for example, and a product description.","Control may then proceed to , at which the enterprise business process server  may prompt the user to add a product , if necessary. If the user responds by requesting to add a product , control may proceed to  at which the enterprise business process server  may generate and output an interactive page  for a user to add a product .  is an example of an interactive page  provided by the enterprise business process server  in which a user may add a product  by entering information such as, but not limited to, a product name, product type, version, and product template. APPENDIX A hereto provides an exemplary sequence of pseudocode instructions for creating a product template.","Control may then proceed to , at which the enterprise business process server  may prompt the user to select a data destination  for the process .  is an example of an interactive page  provided by the enterprise business process server  in which a user may enter a data destination name and description.","Control may then proceed to , at which the enterprise business process server  may prompt the user to enter a new data destination , if necessary. If the user responds by requesting to add a new data destination , control may proceed to  at which the enterprise business process server  may generate and output an interactive page (not shown) for a user to add a data destination  by entering information such as, but not limited to, a data destination name, IP address, Port Number, and description. In at least one embodiment, all or a portion of data output by the enterprise business process server  may go to one or more data destinations .","Control may then proceed to , at which the enterprise business process server  may prompt the user to establish the process .  is an example of an interactive page  provided by the enterprise business process server  in which a user may review and confirm information associated with the process  as described above. Summary process information provided by the page  may include, but is not limited to, the process name, its data source , the input and output data specifications, the associated product  list, and the data destination(s)  for the process output. After a process  has been created, it may be edited (i.e., source code edit). Edited process instructions may be compiled into the process router. In at least one embodiment, the instructions may be source code instructions.","Processing for the method  may end at .","It should be noted that the data output from the system and method described may be provided in whole or in part to one or more destinations . In other words, all of the output data may be directed to a single destination . Alternatively, portions of the output data may be sent to multiple destinations .",{"@attributes":{"id":"p-0146","num":"0151"},"figref":"FIG. 24"},"In at least one embodiment, the enterprise business process management system  may include an interface module, an example of which is described more particularly below. The interface module may also include aspects of the user interface described earlier herein. In an embodiment, the interface module  may be implemented as component of the enterprise data quality application  as shown in FIG. . The interface module may provide the capability for a user to define, create, modify, test and execute a sequence of function steps for a business process using the enterprise business process management system . In particular, the interface module may include an interactive graphically-oriented process specification tool that allows a user to define or modify a business process by, for example, selecting and moving (e.g., dragging and dropping) symbols relating to process functions to a display location representing a particular process step. Each process step may be represented, for example, as one or more function icons grouped together as shown generally in FIG. .  shows an example process designer interface interactive display  provided in accordance with at least one embodiment. Thus, the interface module process designer may be used to define or specify a business process to be performed by the enterprise business process management system . As an overlay application to the developer's toolkit , the interface module  may provide interactive pages similar or in addition to  described earlier herein.","A function may be a named section of a program that performs a specific task. In this sense, a function may be a type of procedure or routine. Some programming languages make a distinction between a function, which returns a value, and a procedure, which performs some operation but does not return a value. Most programming languages come with a prewritten set of functions that are kept in a library. Custom functions may also be developed that perform specialized tasks. For example, in the C language and certain other programming languages, a function is a named procedure that performs a distinct service. The language statement that requests the function is called a function call.","Referring to , the process designer interactive display  may include a function library , a process input area , a process step definition area , and a process output area . Each process step  may be represented, for example, as one or a group of function inputs , function outputs , and function identifiers  within the process step definition area . Each function input  may be (or may not be) linked to an input element  within the process input area  using, for example, a link . A link  is also referred to as a connection or \u201croad.\u201d Similarly, the each function output  may be (or may not be) linked to an output element  within the process output area  using, for example, a link . In an embodiment, links  may be used to represent the directional flow of information from source to destination such as, for example, from an input element  to a function input . The flow of information may be controlled by at least one router that uses packet header information and a routing table to determine the destination or target. Furthermore, process steps  may be linked to form, for example, a chain of successive process steps  to be sequentially accomplished in a business process.",{"@attributes":{"id":"p-0150","num":"0155"},"figref":["FIG. 25","FIG. 25"],"b":["2500","2005"]},{"@attributes":{"id":"p-0151","num":"0156"},"figref":"FIG. 26","b":"2000"},"Each process step  may represent a particular operation to be accomplished by the enterprise business process server when executing that process step . In particular, a process step  may include one or more function inputs  and function outputs . Furthermore, a function identifier  may represent a particular operation to be performed using the function input(s)  to produce the function output(s) . In an embodiment, the enterprise business process management system  may perform many different process steps  obtained from multiple application providers within a single business process. In at least one embodiment, the function identifier  may serve to specify the functions and function elements of a particular application provider whose application(s) is used by the enterprise. Furthermore, multiple business processes may be supported by the enterprise business process management system .","In at least one embodiment, a user of the enterprise business process management system  may interact with the process designer interactive display  to create and modify process steps  which make up a business process. In particular, the user may manipulate, move and link the display icons or symbols representing function inputs , function outputs , function identifiers , input elements , output elements  and links  using, for example, a pointing device of terminals -. Alternatively, a keyboard device may be used for this purpose. For example, a new function input  may be added to a process step  by dragging and dropping (e.g., selecting) the new function input  from the function library  to the desired process step  of the process step definition area .  shows an example interactive page of the process designer  illustrating adding an element of a process step  from the function library  in an embodiment. If the new function input  requires an input element , then the user may, for example, drag and drop the desired input element  from the function library  to the input area  and add a link  from the new input element  to the new function input .  shows an example interactive page of the process designer  illustrating linking of process steps  in the process definition area of a process designer interactive page in an embodiment.","In an embodiment, a function input  may include a conditional statement to specify alternative actions to be taken upon the occurrence (or not) of a specified event.  shows an example interactive page portion  by which a conditional statement may be defined for an element of a process step according to at least one embodiment.",{"@attributes":{"id":"p-0155","num":"0160"},"figref":["FIG. 30","FIG. 31","FIG. 32"],"b":["3000","17","3100","18","3200","16"]},"In at least one embodiment, the enterprise business process management system  may retrieve, build and compile from a data store such as, for example, the data store , a sequence of instructions implementing the business process defined by the interface module process designer. In an embodiment, the interface module  of the enterprise business process server  may obtain a sequence of instructions implementing one or more business processes defined using, for example, the interface module, from the data store  for execution by the enterprise business process server .","In at least one embodiment, the interface module  may assemble (i.e., build) a sequence of instructions implementing the interface module process designer defined process steps  in a series of build steps utilizing a number of build files.  shows a series of build files utilized in an embodiment by the enterprise business process server to build a code implementation of a business process. Referring to , a set of build files for a business process may, in an embodiment, include at least one temporary step build file(s) , a process steps file , one or more function attributes file(s) , one or more associated function temporary files(s) , and a process file . The enterprise business process management system  may use these files in an embodiment to implement a business process defined by a business analyst, for example, using the interface module process designer in the following manner.","In an embodiment, all functions that have been added to the enterprise business process management system may appear in the function library  (FIG. ). Each function may be identified in the function library  by a function name and an icon, for example. The function attributes file  may contain all of the necessary information, in XML format, for example, so that when this function is added as a step in a process the function will be displayed on the interface module process designer  with the correct number of function inputs , function outputs , and will have the associated settings defined by the content parameters of data fields used by or produced by the function. In an embodiment, every function in the enterprise business process management system  has its own function attributes file . Function step  shows an example of a function as is appears using the interface module process designer  when added as a step to a business process. When a function is added to the business process, the interface module  first reads the function attributes file  for that function. After reading the function attributes file , the interface module  builds the necessary input and output elements for that function as they are defined in the function attributes file .","In an embodiment, the interface module  may include a function wizard that provides a sequence of interactive pages to the user operable to assist the user in importing a pre-built function into the library or modifying an existing function. The function wizard may include interactive fields of one or more interactive pages in which a user may enter a function name, choose a function icon, enter an associated product name, enter a function type, and add a function description. The function wizard may provide a function template in response to the user entered information. Function templates may be maintained using, for example, the function template files . The function template may include a sequence of instructions that define various aspects of the function (e.g., variables). The actual values for each function variable may be determined by a function setting that corresponds to each function variable.  shows an example of the content of a function template file page  provided in an embodiment.","After the function has been added to the business process, a temporary step file  may be created. In, an embodiment, the temporary step file  may be provided in XML format. The temporary step file  may contain all of the information about the function as it pertains to this step in the business process. It is important to note that the temporary steps file may be different for every step, even if it is from the same function.","Furthermore, as illustrated in , the interface module  may create the process steps file  when the business process is to be built. In an embodiment, the process steps file  may be the joined group of temporary step file(s)  associated with this business process.","Finally, the interface module  may create the process instruction set file  as follows. First, the interface module  may read the process steps file . Since each step in may correspond to a function in the function library, the interface module may retrieve the function attributes file  for each step in the process steps file , and then map the data in the process steps file  to the corresponding fields in the function attributes file . Next, after the information from the process steps file  has been linked to corresponding fields in the function attributes file , the interface module  may then map each function attributes file  to a function template file . The function template file  may, in an embodiment, contain source code instructions (e.g., \u2018C\u2019 source code) to be added to the sequence of instructions implementing the process. Furthermore, in at least one embodiment, the function template file  may include XML tags that correspond to fields in the associated function attributes file . As the function template file source code is being added to the source code in the process instruction set file , the interface module  may replace the XML tags in the function template file  with the data that was provided in the function attributes file  which was in turn the data that was provided from the process steps file .","In an embodiment, following build of a new process instruction set file , the enterprise data quality application  may build a new router DLL including the new process source code file  as shown in FIG. . In at least one embodiment, the instruction set file  may include source code instructions. Referring to , the enterprise data quality application  may build a new router DLL  including the new process instruction set file  (e.g, Process File ) along with other process instruction set files (e.g., Process Files -K). The new router DLL  may then be loaded by the enterprise business process server  and placed into service, at which point the new process may be executed.",{"@attributes":{"id":"p-0164","num":"0169"},"figref":["FIGS. 23","FIG. 23"],"i":"a-d ","b":["2300","2302","2302","101","110","111","112","113","101","101","110","111","112","113","2000","2000"]},"Control may then proceed to , at which the user may desire to add a process step to or modify a process step of the business process (reference FIG. ). Control may then proceed to , at which the user may determine that a function to be added to a process step, or for which a new process step is to be added, may need to be added to the function library. If so control may proceed to . If not, control may proceed to .","At , the user may enter information defining a new function into the function library. Such information may include, but is not limited to, a function name and a function icon. The function name may provide a brief description of the operation provided by the function. The function icon may be a symbol representing the vendor or provider of the application from which the function is taken. In an embodiment, all functions used in process steps must be included in the function library.","Control may then proceed to , at which the user may define particular function attributes using the function attributes file. The function attributes file may include all information necessary to define a function information, in XML format, so that when this function is added as a step in a business process the function will be displayed on the interface module process designer with the correct number of function inputs and function outputs, as well as its associated function settings. In an embodiment, the function attributes file may be provided in accordance with the XML format. Also in an embodiment, every function in the function library may have an corresponding function attributes file.  shows an example of a function settings interactive page  provided in an embodiment.","Control may then proceed to , at which a temporary step file may be created as follows. When a function is added to the business process, the interface module may first read the function attributes file for that function. After reading the function attributes file, the interface module may build the necessary input and output elements for that function as they are defined in the function attributes file. In an embodiment, the temporary step file may be provided in XML format. The temporary step file may contain all of the information about the function as it pertains to this step in the business process. It is important to note that the temporary steps file may be different for every step, even if it is from the same function.","Control may then proceed to , at which the interface module may create the process steps file. In an embodiment, the process steps file may be the joined or assembled group of temporary step file(s) associated with this business process.","Control may then proceed to , at which the interface module may retrieve the function attributes file for each step in the process steps file. Control may then proceed to , at which the interface module may map the data in the process steps file to the corresponding fields in the function attributes file. Control may then proceed to , at which the interface module may map each function attributes file to a function template file. The function template file may, in an embodiment, contain source code instructions (e.g., \u2018C\u2019 source code) to be added to the sequence of instructions implementing the process. Furthermore, in at least one embodiment, the function template file may include XML tags that correspond to fields in the associated function attributes file.","Control may then proceed to , at which the interface module may replace the XML tags in the function template file with the data that was provided in the function attributes file, which was in turn the data that was provided from the process steps file.","Control may then proceed to , at which the interface module may assemble the data-populated function template files into a process instruction set file containing a sequence of program instructions implementing the process. Control may then proceed to , at which the interface module may store the process instruction set file in a data store. The instruction set file may be, but is not limited to, a source code file.","Control may then proceed to , at which the enterprise data quality application core application may determine if the user has specified the business process to be a test process or a production process. In an embodiment, the business analyst module  may provide an interactive page (not shown) for the user to specify whether a test build or a production build of the router is to be performed. If a test process, control may proceed to  at . If a production process, control may proceed to  at ","At  of , at which following the build of a new test process instruction set file, the enterprise data quality application core application may build a new router DLL including the new test process instruction set file (see FIG. ). The test process instruction set may be optimized for production.","Control may then proceed to , at which the interface module may notify the enterprise business process server that a new router is ready to be loaded. Control may then proceed to , at which the enterprise business process server may pause and halt any transactions from entering the current router, allow all transactions currently in the router to finish processing, and unload the current router.","Control may then proceed to , at which the enterprise business process server may notify the interface module that the current router has been unloaded.","Control may then proceed to , at which, upon receiving notification that the current router has been unloaded, the interface module may archive the current (i.e., \u201cold\u201d) router, replace it with the newly built router, and notify the enterprise business process server to load the new router.","Control may then proceed to , at which the enterprise business process server may load and initialize the new router and allow transactions to enter the new router.","Control may then proceed to , at which the enterprise business process server may notify the interface module that the new router has been loaded.","Control may then proceed to , at which, upon receiving notification that the new router has been loaded, the interface module may output to the terminal of the user a process tester interactive page.  shows an example process tester interactive page  according to an embodiment. A process tester interactive page  may include a process test steps listing .","Control may then proceed to , at which the terminal may output the process tester interactive page to the user via, for example, a display of a web browser application.  shows an illustration of a data-populated process definition area of a process tester interactive page  in an embodiment in which the interface module has replaced the XML tags in the function template file with the data that was provided in the function attributes file.","Control may then proceed to , at which a method may end.","At  of , at which following the build of a new production process instruction set file, the enterprise data quality application core application may build a new router DLL including the new production process instruction set file (see FIG. ). The production process instruction set may be optimized for production.","Control may then proceed to , at which the interface module may notify the enterprise business process server that a new router is ready to be loaded. Control may then proceed to , at which the enterprise business process server may pause and halt any transactions from entering the current router, allow all transactions currently in the router to finish processing, and unload the current router.","Control may then proceed to , at which the enterprise business process server may notify the interface module that the current router has been unloaded.","Control may then proceed to , at which, upon receiving notification that the current router has been unloaded, the interface module may archive the current (i.e., \u201cold\u201d) router, replace it with the newly built router, and notify the enterprise business process server to load the new router.","Control may then proceed to , at which the enterprise business process server may load and initialize the new router and allow transactions to enter the new router.","Control may then proceed to , at which the enterprise business process server may notify the interface module that the current router has been unloaded.","Control may then proceed to , at which, upon receiving notification that the new router has been loaded, the interface module may output to the terminal of the user a main processes interactive page.","Control may then proceed to , at which the terminal may output the main processes interactive page to the user via, for example, a display of a web browser application.","Control may then proceed to , at which a method may end.","In at least one embodiment, the enterprise business process server  may retrieve and execute a particular business process upon receiving a packet of input elements associated with that business process from a data source via a connection. In at least one embodiment, such a connection may be a compiled dynamic link library (DLL) file that maps the business application function input data and output data to corresponding information fields of functions of an associated business process.  shows an example of a connection definition interactive page  by which a user may define a connection according to at least one embodiment. Each enterprise application may have a corresponding connection maintained using the data store , for example, that maps its functions to one or more business processes executed by the enterprise business process server . Upon receiving an associated packet of input elements, the enterprise business process server  may retrieve and execute the associated business process and produce its resultant output elements. In an embodiment, the enterprise business process server  may send a packet containing the output elements to a data destination via the connection for further processing. A connection may encapsulate data routing information specifying the path between to enterprise nodes. In an embodiment, the connection may be a socket connection for a packet-based network such as, for example, TCP\/IP.","Thus, an interface module may provide the capability for a user, such as a business analyst for example, to define, create, modify, implement, test and execute a business process using the enterprise business process management system without having to undertake a lengthy requirements definition, general design, detailed design, coding and testing cycle involving software engineering or programming personnel. The interface module of the enterprise business process management system as shown herein allows rapid iterative development and implementation of business processes, reducing development costs and time, as well as reducing the need to periodically freeze functional requirements.","Thus, an enterprise business process management system has been described, embodiments of which may provide an integrated data quality management system capable of collecting, analyzing, and reporting information concerning qualitative and quantitative aspects of application or transactional data throughout an enterprise. It should be understood that the enterprise data quality management system described herein is but one aspect of the enterprise business process management system of the present invention. One skilled in the art would be capable of determining other embodiments of the present invention based on the disclosure herein. In particular, the enterprise business process server  may be more generally described as a server capable of providing or operating in conjunction with many different enterprise business process applications. In general, such an enterprise business process management system may provide the capability to collect, analyze, and report information concerning qualitative and quantitative aspects of application or transactional data throughout an enterprise across some or all of the computing nodes of the entire enterprise network, and is able to process application data output by heterogeneous computing platforms and applications. As a result, the enterprise business process management system may provide a variety of integrated views of data present throughout the enterprise. Such views may range from data associated with the total enterprise, to individual divisions or business functions\/business units, down to individuals.","For example, an embodiment of the enterprise business process management system may be directed to biometric and homeland security applications such as, but not limited to, defining, building and executing business processes that include functions from business applications involving fingerprint analysis, retinal imaging\/scanning, voice identification, and image matching and comparison. In a particular example of such a business process, an employee of a company may be required to pass a fingerprint identification scan in order to enter a company facility. When the employee places their fingerprint on a fingerprint pad or scanner, data representing the unique fingerprint scan may be sent to a process maintained by the enterprise business process management system. This process may include, for example, comparing the scanned fingerprint data to a set of valid fingerprints using one or more functions from different fingerprint software matching tools that attempt to validate the employee against the company employee fingerprint database. If the employee is validated as an employee then a signal may be sent from the enterprise business process management system to an access control device of the door so that the door will unlock and allow the employee ingress access.","In another example of such a business process, photographic imaging data may be input to a multiple step business process that attempts to match the photographic imaging data against multiple image databases to search for matching features. If a match is found, then a signal may be sent to another process maintained by the enterprise business process management system to output the image coordinates to a targeting or reporting system.","In another example, an embodiment of the enterprise business process management system may be directed to compliance assurance such as, for example, business compliance with applicable governmental regulations. Such applications are myriad. One example in particular may be a business process directed to ensuring that a healthcare enterprise operates in conformance with government mandated rules and regulations such as, for example, the Health Insurance Portability and Accountability Act of 1996 (\u201cHIPAA\u201d). In a particular example of such a business process, business rules applying HIPAA requirements may be maintained in the function library, and a business process defined and executed that includes a series of business rules that must be applied to particular patient information based upon government HIPAA requirements. In an embodiment, this process may be a multiple step process with each step representing a different HIPAA requirement. This arrangement may provide for easy modification of such rules based upon changing government requirements. In other words, after the roads to the business applications for HIPAA compliance have been established, the corresponding functions used to represent the requirements as process steps may be modified as described herein using, for example, the interface module process designer. In this way, new changes to regulations affecting a business may be accommodated with minimal impact to the business process.","As another example, an embodiment of the enterprise business process management system may be directed to ensuring that government data quality regulations are met for a data set. For example, data concerning child welfare provided to the federal government may be required to comply to a specified data accuracy, such as greater than 90% accuracy.","As another example, an embodiment of the enterprise business process management system may be directed to tax assignment applications such as, but not limited to, defining, building and executing business processes that include functions from business applications involving geographic coding software and tax assignment software. In a particular example of such a business process, an organization may need to correctly assign the appropriate tax to their client's bills during the billing process. Incorrect tax assignment during the billing process may result in lost customers. Therefore, in an embodiment, a business process may be created and executed (or, alternatively, a sequence of process steps in a billing process) in which customer information, such as address information, is checked for accuracy by multiple functions from different tax assignment business applications (e.g., software packages) prior to final processing and mailing of bills to customers. The results of the functions may then, for example, be compared against each other and based on those results a correct tax could then be assigned. Furthermore, after the correct tax is determined, the correct tax assignment and the customer identifier may be sent as input into another business process which may, for example, receive as input a tax assignment and a customer identifier, and then perform multiple steps in which each step would perform an SQL query against different databases. In an embodiment, each step may perform a data store lookup of the customer via the customer identifier and then update that customer's tax assignment so that the customer has the same tax assignment across multiple data stores.","As another example, an embodiment of the enterprise business process management system may be directed to product comparison applications such as, but not limited to, defining, building and executing business processes that include functions from business applications involving address validation. In a particular example of such a business process, a business process may be created and executed which receives as input an individual's address, and then performs a multiple step process. In an embodiment, each step in the business process may include, for example, a different software vendor's address coder. Each step may attempt to receive as input the address and then validate that address against its own postal database. In an embodiment, a comparison of each vendors capabilities may then be performed and statistics could be created to see exactly which product performs the best under certain data conditions.  illustrates the comparison business process in accordance with an embodiment.","More generally, if an organization is trying to decide which software application or vendor provides the best functionality, then those products may be integrated under the enterprise business process management system and comparatively tested. Furthermore, any business process that compares different software vendors API calls can be included in such a process.","As another example, an embodiment of the enterprise business process management system may be directed to data mapping or transformation applications such as, but not limited to, defining, building and executing business processes that include functions from business applications involving data store transformation software. In a particular example of such a business process, a business process could be created and executed in which there the input data is received in a first format associated with one data store (e.g., first database) and the output data is provided in another data store (e.g., second database) format. In an embodiment, each process step may be a mapping from one field type to another, for example.","Finally, as another example, an embodiment of the enterprise business process management system may be directed to software-based mapping applications such as, but not limited to, defining, building and executing business processes that include functions from business applications involving information matching and database retrieval software. In a particular example of such a business process, a business process may include information matching and data store lookups for information related to call center operations. In particular, a call center operator may take a call from a customer in which the customer provides the call center operator name and address information. The call center operator may input the information using, for example, and interactive page, and then initiate a search request. The search request may cause the name and address information to be sent to a business process maintained by the enterprise business process management system that may perform, for example, the following steps:\n\n","Users of the enterprise business process management system, including management and executive users, may be provided different levels of visibility into enterprise-level issues such as, but not limited to, data quality issues, so that appropriate corrective action may be taken. In at least one embodiment, the enterprise business process management system may automatically make corrections to incorrect or errored data based on a trusted source of data. Because of the integrated view provided by the enterprise business process management system of the present invention, the shortcomings of vendor-specific approaches such as, for example, application-specific data checking processes, are minimized. In addition, total acquisition costs for data quality tools, for example, may be minimized for the enterprise through use of the integrated approach described herein, because the need to acquire and maintain many individual independent data quality applications is reduced.","Furthermore, in at least one embodiment, the business process server may be further configured to select and execute a set of preferred functions, wherein each preferred function is obtained from one of multiple different business applications. The business process server may select one function from among multiple similar functions provided by business applications based on, for example, a selection heuristic. An example of such a selection heuristic may be the percentage of errors detected by a function in a comparison of multiple similar functions applied to a given set of business application output data. Each of the business applications may or may not be products from different vendors. Alternatively, the function selection criteria may be specified by a user via an interactive page of the interface module. In this way, the enterprise business process management system may select a set of preferred or \u201cbest of breed\u201d functions from among those offered by different business applications.","While the invention has been described with reference to the certain illustrated embodiments, the words which have been used herein are words of description, rather than words of limitation. Changes may be made, within the purview of the appended claims, without departing from the scope and spirit of the invention in its aspects. Although the invention has been described herein with reference to particular structures, acts, and materials, the invention is not to be limited to the particulars disclosed, but rather extends to all equivalent structures, acts, and materials, such as are within the scope of the claims thereto."],"BRFSUM":[{},{}],"heading":["BACKGROUND OF THE INVENTION","SUMMARY OF THE INVENTION","DETAILED DESCRIPTION OF THE INVENTION"],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"BRIEF DESCRIPTION OF THE DRAWINGS","p":["The benefits of the present invention will be readily appreciated and understood from consideration of the following detailed description of at least one exemplary embodiment of this invention, when taken with the accompanying drawings, in which:",{"@attributes":{"id":"p-0042","num":"0047"},"figref":"FIG. 1"},{"@attributes":{"id":"p-0043","num":"0048"},"figref":"FIG. 2"},{"@attributes":{"id":"p-0044","num":"0049"},"figref":"FIG. 3"},{"@attributes":{"id":"p-0045","num":"0050"},"figref":"FIG. 4"},{"@attributes":{"id":"p-0046","num":"0051"},"figref":"FIG. 5"},{"@attributes":{"id":"p-0047","num":"0052"},"figref":"FIG. 6"},{"@attributes":{"id":"p-0048","num":"0053"},"figref":"FIG. 7"},{"@attributes":{"id":"p-0049","num":"0054"},"figref":"FIG. 8"},{"@attributes":{"id":"p-0050","num":"0055"},"figref":"FIG. 9"},{"@attributes":{"id":"p-0051","num":"0056"},"figref":"FIG. 10"},{"@attributes":{"id":"p-0052","num":"0057"},"figref":"FIG. 11"},{"@attributes":{"id":"p-0053","num":"0058"},"figref":"FIG. 12"},{"@attributes":{"id":"p-0054","num":"0059"},"figref":"FIG. 13"},{"@attributes":{"id":"p-0055","num":"0060"},"figref":"FIG. 14"},{"@attributes":{"id":"p-0056","num":"0061"},"figref":"FIG. 15"},{"@attributes":{"id":"p-0057","num":"0062"},"figref":"FIG. 16"},{"@attributes":{"id":"p-0058","num":"0063"},"figref":"FIG. 17"},{"@attributes":{"id":"p-0059","num":"0064"},"figref":"FIG. 18"},{"@attributes":{"id":"p-0060","num":"0065"},"figref":"FIG. 19"},{"@attributes":{"id":"p-0061","num":"0066"},"figref":"FIG. 20"},{"@attributes":{"id":"p-0062","num":"0067"},"figref":"FIG. 21"},{"@attributes":{"id":"p-0063","num":"0068"},"figref":"FIG. 22"},{"@attributes":{"id":"p-0064","num":"0069"},"figref":"FIGS. 23","i":"a-d "},{"@attributes":{"id":"p-0065","num":"0070"},"figref":"FIG. 24"},{"@attributes":{"id":"p-0066","num":"0071"},"figref":"FIG. 25"},{"@attributes":{"id":"p-0067","num":"0072"},"figref":"FIG. 26"},{"@attributes":{"id":"p-0068","num":"0073"},"figref":"FIG. 27"},{"@attributes":{"id":"p-0069","num":"0074"},"figref":"FIG. 28"},{"@attributes":{"id":"p-0070","num":"0075"},"figref":"FIG. 29"},{"@attributes":{"id":"p-0071","num":"0076"},"figref":"FIG. 30"},{"@attributes":{"id":"p-0072","num":"0077"},"figref":"FIG. 31"},{"@attributes":{"id":"p-0073","num":"0078"},"figref":"FIG. 32"},{"@attributes":{"id":"p-0074","num":"0079"},"figref":"FIG. 33"},{"@attributes":{"id":"p-0075","num":"0080"},"figref":"FIG. 34"},{"@attributes":{"id":"p-0076","num":"0081"},"figref":"FIG. 35"},{"@attributes":{"id":"p-0077","num":"0082"},"figref":"FIG. 36"},{"@attributes":{"id":"p-0078","num":"0083"},"figref":"FIG. 37"},{"@attributes":{"id":"p-0079","num":"0084"},"figref":"FIG. 38"},{"@attributes":{"id":"p-0080","num":"0085"},"figref":"FIG. 39"}]},"DETDESC":[{},{}]}
