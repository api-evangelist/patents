---
title: Systems and methods for identifying the spreading of sensitive data by a suspicious application
abstract: A computer-implemented method to identify the spreading of sensitive data from a suspicious application is described. At least one security attribute for an application programming interface (API) is defined. Sensitive data passed through the at least one security attribute to the suspicious application are marked. The marked sensitive data being passed through the at least one security attribute from the suspicious application are detected. A notification is generated regarding the spreading of the sensitive data by the suspicious application.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08474046&OS=08474046&RS=08474046
owner: Symantec Corporation
number: 08474046
owner_city: Mountain View
owner_country: US
publication_date: 20110721
---

{"@attributes":{"id":"description"},"BRFSUM":[{},{}],"heading":["BACKGROUND","SUMMARY","DETAILED DESCRIPTION OF EXEMPLARY EMBODIMENTS"],"p":["The use of computer systems and computer-related technologies continues to increase at a rapid pace. This increased use of computer systems has influenced the advances made to computer-related technologies. Indeed, computer systems have increasingly become an integral part of the business world and the activities of individual consumers. Computer systems may be used to carry out several business, industry, and academic endeavors. The wide-spread use of computers has been accelerated by the increased use of computer networks, including the Internet.","Many businesses use one or more computer networks to communicate and share data between the various computers connected to the networks. The productivity and efficiency of employees often requires human and computer interaction. Users of computer technologies continue to demand an increase in the efficiency of these technologies. Improving the efficiency of computer technologies is always desirable to anyone who uses and relies on computers.","A computer system may execute various types of applications or software programs. These applications may provide certain functions and interfaces to the user of the computer system. In some cases, one application may interface with another application on the computer system. The interface that allows different applications to communicate with each other is an application programming interface (API). For example, a first application may interface with an API and the API may in turn interface with a second application. The first application may request and receive information from the second application through the API. In this manner, developers of an application may also create an API for that application. This API may be provided to developers of additional applications. As a result, the developers of the additional applications may incorporate the specifications of the API into the additional applications so that these additional applications may interface with the original application. When a user requests information from a first application that is available through a second application, the first application may communicate with the second application to request and receive the data via the API that serves as the interface between the first and second applications.","According to at least one embodiment, a computer-implemented method to identify the spreading of sensitive data from a suspicious application is described. At least one security attribute for an application programming interface (API) is defined. Sensitive data passed through the at least one security attribute to the suspicious application are marked. The marked sensitive data being passed through the at least one security attribute from the suspicious application are detected. A notification is generated regarding the spreading of the sensitive data by the suspicious application.","In one embodiment, the at least one security attribute may be an incoming security attribute for incoming data passed through the API to the suspicious application. In one example, the at least one security attribute may be an outgoing security attribute for outgoing data passed from the suspicious application through the API. The suspicious application may execute on a smartphone device.","In one configuration, the sensitive data passed to and from the suspicious application through the API may be monitored in a simulated environment. At least one additional security attribute for the API may be defined. An argument passed on the at least one additional security attribute may cause at least one data object to become sensitive data. An argument passed on the at least one additional security attribute may cause at least one data object in a smartphone device to become exposed. In one embodiment, the spreading of sensitive data from a suspicious application may be identified using static analysis.","A smartphone device configured to identify spreading of sensitive data from a suspicious application is also described. The smartphone device may include a processor and memory in electronic communication with the processor. The device may further include a monitoring module configured to define at least one security attribute for an API and mark sensitive data passed through the at least one security attribute to the suspicious application. The module may be further configured to detect the marked sensitive data being passed through the at least one security attribute from the suspicious application, and generate a notification regarding the spreading of the sensitive data by the suspicious application.","A computer-program product for identifying spreading of sensitive data from a suspicious application is also described. The computer-program product may include a non-transitory computer-readable medium having instructions thereon. The instructions may include code programmed to define at least one security attribute for an API, and code programmed to mark sensitive data passed through the at least one security attribute to the suspicious application. The instructions may further include code programmed to detect the marked sensitive data being passed through the at least one security attribute from the suspicious application, and code programmed to generate a notification regarding the spreading of the sensitive data by the suspicious application.","Features from any of the above-mentioned embodiments may be used in combination with one another in accordance with the general principles described herein. These and other embodiments, features, and advantages will be more fully understood upon reading the following detailed description in conjunction with the accompanying drawings and claims.","While the embodiments described herein are susceptible to various modifications and alternative forms, specific embodiments have been shown by way of example in the drawings and will be described in detail herein. However, the exemplary embodiments described herein are not intended to be limited to the particular forms disclosed. Rather, the instant disclosure covers all modifications, equivalents, and alternatives falling within the scope of the appended claims.","An application programming interface (API) is a particular set of rules and specifications that software applications can follow to communicate with each other. An API may serve as an interface between different software applications and facilitates their interaction, similar to the way the user interface facilitates interaction between humans and computers.","In one embodiment, a malicious software application may acquire sensitive data regarding a user from another application by calling a particular API. For example, the malicious application may attempt to interface with an address book application to gather data regarding various contacts of the user. The malicious application may not be able to interface directly with the address book application. As a result, the malicious application may call a particular API to serve as the interface between the malicious application and the address book application. The malicious application may then harvest the data relating to the contacts stored in the address book application. The malicious application may transmit (or otherwise make available) the harvested data to a third party by calling certain APIs.","In one configuration, the malicious (or otherwise suspicious application) may be installed on a smartphone or other type of computing device. The present systems and methods may define how confidential data are brought into an application executing on a smartphone. The present systems and methods may perform static analysis of the application's behavior regarding the handling of the confidential data.","As mentioned previously, by calling certain APIs, a smartphone application may obtain confidential data of a user by calling certain APIs. The application may then expose this confidential data to unauthorized third parties by calling specific APIs. The present systems and methods may provide a data flow analysis of the application that may serve to discover potentially leaky execution paths inside the smartphone application. The basis for the data flow analysis may include defining the APIs that are authorized to bring confidential data into an application and defining the APIs that are authorized to transmit confidential data out of the application.",{"@attributes":{"id":"p-0023","num":"0022"},"figref":"FIG. 1","b":["100","102","104","102","112","102","114","112"]},"In one example, a suspicious application  may interface with an application  via an API . The suspicious application  may request and receive data from the application  through the API . The suspicious application  may transmit or output the received confidential data to a different application so that the confidential data is accessible by a third party. The suspicious application  may output the confidential data to the different application via the API  or via a different API used to transmit or output data.","In one configuration, the application  that provides the confidential data to the suspicious application  via the API  may be executing on the first client . In one embodiment, the application  that provides the data to the suspicious application  via the API  may be executing on the second client device . In other words, communications may be established between the first client device  and the second client device  across the network . The suspicious application  may interface with the API  to request data from the application . The application  may provide the data to the suspicious application  via the API .","In one embodiment, the monitoring module  may define security attributes associated parameters of the API . The monitoring module  may monitor the data returned by these parameters of the API . The monitoring module  may also perform a data flow analysis to determine how the suspicious application  handles the data received by these parameters of the API . Details regarding the monitoring module  will be discussed below.",{"@attributes":{"id":"p-0027","num":"0026"},"figref":"FIG. 2","b":["204","204","216","218","220","216","108","216","108"]},"In one configuration, the data passed back to the suspicious application  via the security attribute CONFIDENTIAL_DATA_PAYLOAD may be data that have been identified as confidential or sensitive data. In one example, the argument passed on the security attribute CONFIDENTIAL_DATA_PORT may cause other data objects to become confidential data. Further, the argument passed on the security attribute DATA_EXPOSURE_PAYLOAD may represent data being outputted from the suspicious application . In addition, the argument passed on the security attribute DATA_EXPOSURE_PORT may cause other data objects to be exposed by the suspicious application .","The data flow analysis module  may identify incoming data passed to the suspicious application  on certain security attributes. For example, confidential data that are passed to the suspicious application  on the security attribute CONFIDENTIAL_DATA_PAYLOAD may be flagged by the monitoring module  for further analysis. The data flow analysis module  may also identify outgoing data from the suspicious application  on certain security attributes. For example, the data flow analysis module  may monitor the suspicious application  to verify whether the suspicious application  outputs the flagged confidential data via the DATA_EXPOSURE_PAYLOAD of the API . If the data flow analysis module  determines that the suspicious application  outputs the flagged confidential data via a certain security attribute of the API , the notification module  may generate a notification to a user of the first client device . The notification may indicate that the suspicious application  may be attempting to harvest and expose confidential data to an unauthorized third party.","In one configuration, when the data flow analysis module  identifies confidential data as being passed to the suspicious application  via the API , the data flow analysis module  may conduct the remaining portions of the analysis in a simulated environment. As a result, the data flow analysis module  may be able to observe the behavior of the suspicious application  with confidential data in a secure, simulated environment without the risk of the suspicious application  actually transmitting confidential data to an unauthorized third party.",{"@attributes":{"id":"p-0031","num":"0030"},"figref":"FIG. 3","b":["302","302","302","304","306","308","310","330"]},"As previously explained, the monitoring module  may define various security attributes for the API . For example, the API  may include a first security attribute , a second security attribute , a third security attribute , and a fourth security attribute . While only four security attributes are illustrated, it is to be understood that the monitoring module  may define more or less security attributes for the API .","In one example, the monitoring module  may monitor the data the API passes to and from the suspicious application  via the defined security attributes. For example, the first security attribute  may pass the sensitive data  from the application  to the suspicious application . The monitoring module  may mark or otherwise flag the data that are provided via the first security attribute . The monitoring module  may also monitor data that is outputted from the suspicious application  via a certain security attribute of the API . For example, the monitoring module  may monitor data that are outputted via the second security attribute . If the second security attribute  outputs the marked or flagged sensitive data , the monitoring module  may generate a notification to a user of the client device . The notification may notify the user that the suspicious application  may be a malicious application attempting to distribute the sensitive data  to unauthorized third parties. In one configuration, the monitoring module  may monitor the data flow of the sensitive data  by the suspicious application  in a simulated environment.",{"@attributes":{"id":"p-0034","num":"0033"},"figref":"FIG. 4","b":["400","400","104"]},"In one embodiment, at least one incoming security attribute for incoming data and at least one outgoing security attribute for outgoing data may be defined  for an API. The incoming security attribute may be monitored  for incoming data requested by a suspicious application . A determination  may be made as to whether incoming data passed through the incoming security attribute of the API  has been detected. If it is determined  that incoming data have not been detected through the incoming security attribute of the API , the method  may return to monitor the incoming security attribute. If, however, it is determined  that incoming data passed through the incoming security attribute have been detected, the incoming data may be marked .","In one configuration, the outgoing security attribute may be monitored  for outgoing data from the suspicious application . A determination  may be made as to whether the marked data have been detected being passed through the outgoing security attribute of the API  from the suspicious application . If it is determined  that the marked data have not been detected, the method  may return to monitor the outgoing security attribute. If, however, it is determined  that the marked data have been detected being passed through the outgoing security attribute of the API  from the suspicious application , a warning message regarding the suspicious application may be generated . In one configuration, the method  may be executed in a simulated environment.",{"@attributes":{"id":"p-0037","num":"0036"},"figref":"FIG. 5","b":["510","510","512","510","514","517","518","520","522","524","526","528","530","532","533","592","591","534","537","538","535","590","535","539","540","542","546","512","528","547","512","530","548","512"]},"Bus  allows data communication between central processor  and system memory , which may include read-only memory (ROM) or flash memory (neither shown), and random access memory (RAM) (not shown), as previously noted. The RAM is generally the main memory into which the operating system and application programs are loaded. The ROM or flash memory can contain, among other code, the Basic Input-Output system (BIOS) which controls basic hardware operation such as the interaction with peripheral components or devices. For example, the monitoring module  to implement the present systems and methods may be stored within the system memory . Applications resident with computer system  are generally stored on and accessed via a non-transitory computer readable medium, such as a hard disk drive (e.g., fixed disk ), an optical drive (e.g., optical drive ), a floppy disk unit , or other storage medium. Additionally, applications can be in the form of electronic signals modulated in accordance with the application and data communication technology when accessed via network modem  or interface .","Storage interface , as with the other storage interfaces of computer system , can connect to a standard computer readable medium for storage and\/or retrieval of information, such as a fixed disk drive . Fixed disk drive  may be a part of computer system  or may be separate and accessed through other interface systems. Modem  may provide a direct connection to a remote server via a telephone link or to the Internet via an internet service provider (ISP). Network interface  may provide a direct connection to a remote server via a direct network link to the Internet via a POP (point of presence). Network interface  may provide such connection using wireless techniques, including digital cellular telephone connection, Cellular Digital Packet Data (CDPD) connection, digital satellite data connection or the like.","Many other devices or subsystems (not shown) may be connected in a similar manner (e.g., document scanners, digital cameras and so on). Conversely, all of the devices shown in  need not be present to practice the present systems and methods. The devices and subsystems can be interconnected in different ways from that shown in . The operation of a computer system such as that shown in  is readily known in the art and is not discussed in detail in this application. Code to implement the present disclosure can be stored in a non-transitory computer-readable medium such as one or more of system memory , fixed disk , optical disk , or floppy disk . The operating system provided on computer system  may be MS-DOS\u00ae, MS-WINDOWS\u00ae, OS\/2\u00ae, UNIX\u00ae, Linux\u00ae, or another known operating system.","Moreover, regarding the signals described herein, those skilled in the art will recognize that a signal can be directly transmitted from a first block to a second block, or a signal can be modified (e.g., amplified, attenuated, delayed, latched, buffered, inverted, filtered, or otherwise modified) between the blocks. Although the signals of the above described embodiment are characterized as transmitted from one block to the next, other embodiments of the present systems and methods may include modified signals in place of such directly transmitted signals as long as the informational and\/or functional aspect of the signal is transmitted between blocks. To some extent, a signal input at a second block can be conceptualized as a second signal derived from a first signal output from a first block due to physical limitations of the circuitry involved (e.g., there will inevitably be some attenuation and delay). Therefore, as used herein, a second signal derived from a first signal includes the first signal or any modifications to the first signal, whether due to circuit limitations or due to passage through other circuit elements which do not change the informational and\/or final functional aspect of the first signal.",{"@attributes":{"id":"p-0042","num":"0041"},"figref":"FIG. 6","b":["600","610","620","630","640","640","610","650","104","640","640","640","660","1","640","660","1","670","680","1","640","640","610","620","630","650","690","670"]},"With reference to computer system , modem , network interface  or some other method can be used to provide connectivity from each of client computer systems , , and  to network . Client systems , , and  are able to access information on storage server A or B using, for example, a web browser or other client software (not shown). Such a client allows client systems , , and  to access data hosted by storage server A or B or one of storage devices A()-(N), B()-(N), ()-(N) or intelligent storage array .  depicts the use of a network such as the Internet for exchanging data, but the present systems and methods are not limited to the Internet or any particular network-based environment.","While the foregoing disclosure sets forth various embodiments using specific block diagrams, flowcharts, and examples, each block diagram component, flowchart step, operation, and\/or component described and\/or illustrated herein may be implemented, individually and\/or collectively, using a wide range of hardware, software, or firmware (or any combination thereof) configurations. In addition, any disclosure of components contained within other components should be considered exemplary in nature since many other architectures can be implemented to achieve the same functionality.","The process parameters and sequence of steps described and\/or illustrated herein are given by way of example only and can be varied as desired. For example, while the steps illustrated and\/or described herein may be shown or discussed in a particular order, these steps do not necessarily need to be performed in the order illustrated or discussed. The various exemplary methods described and\/or illustrated herein may also omit one or more of the steps described or illustrated herein or include additional steps in addition to those disclosed.","Furthermore, while various embodiments have been described and\/or illustrated herein in the context of fully functional computing systems, one or more of these exemplary embodiments may be distributed as a program product in a variety of forms, regardless of the particular type of computer-readable media used to actually carry out the distribution. The embodiments disclosed herein may also be implemented using software modules that perform certain tasks. These software modules may include script, batch, or other executable files that may be stored on a computer-readable storage medium or in a computing system. In some embodiments, these software modules may configure a computing system to perform one or more of the exemplary embodiments disclosed herein.","The foregoing description, for purpose of explanation, has been described with reference to specific embodiments. However, the illustrative discussions above are not intended to be exhaustive or to limit the invention to the precise forms disclosed. Many modifications and variations are possible in view of the above teachings. The embodiments were chosen and described in order to best explain the principles of the present systems and methods and their practical applications, to thereby enable others skilled in the art to best utilize the present systems and methods and various embodiments with various modifications as may be suited to the particular use contemplated.","Unless otherwise noted, the terms \u201ca\u201d or \u201can,\u201d as used in the specification and claims, are to be construed as meaning \u201cat least one of\u201d In addition, for ease of use, the words \u201cincluding\u201d and \u201chaving,\u201d as used in the specification and claims, are interchangeable with and have the same meaning as the word \u201ccomprising.\u201d"],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"BRIEF DESCRIPTION OF THE DRAWINGS","p":["The accompanying drawings illustrate a number of exemplary embodiments and are a part of the specification. Together with the following description, these drawings demonstrate and explain various principles of the instant disclosure.",{"@attributes":{"id":"p-0012","num":"0011"},"figref":"FIG. 1"},{"@attributes":{"id":"p-0013","num":"0012"},"figref":"FIG. 2"},{"@attributes":{"id":"p-0014","num":"0013"},"figref":"FIG. 3"},{"@attributes":{"id":"p-0015","num":"0014"},"figref":"FIG. 4"},{"@attributes":{"id":"p-0016","num":"0015"},"figref":"FIG. 5"},{"@attributes":{"id":"p-0017","num":"0016"},"figref":"FIG. 6"}]},"DETDESC":[{},{}]}
