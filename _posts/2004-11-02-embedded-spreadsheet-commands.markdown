---
title: Embedded spreadsheet commands
abstract: A cell of a spreadsheet is automatically updated and a comment is determined to have a command associated with the update. In response to detecting the command, the command is processed.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=07426688&OS=07426688&RS=07426688
owner: Hewlett-Packard Development Company, L.P.
number: 07426688
owner_city: Houston
owner_country: US
publication_date: 20041102
---

{"@attributes":{"id":"description"},"BRFSUM":[{},{}],"heading":["BACKGROUND","DETAILED DESCRIPTION"],"p":["Spreadsheets have become the life blood of many organizations. Spreadsheets are used to track inventory and resources, order goods and services, hire or contract resources, plan business activity, forecast business activity, determine business financials, and the like. However, some spreadsheet operations and some data integration can be overly complex and difficult to achieve with the interfaces that are available with spreadsheets.","For example, maintaining state associated with data of cells embedded within a spreadsheet is not easily achieved because to do so requires developing complex and lengthy formulas for each cell where there is a desire to track state changes. Additionally, spreadsheets generally provide data in generic formats and rely on external services to interpret and translate those generic formats in order to interface with the spreadsheets and their data. As a result, newly added external services have to include separate translation features for each different type of spreadsheet data for which the services may desire to integrate with.",{"@attributes":{"id":"p-0009","num":"0008"},"figref":"FIG. 1","b":["100","100"]},"As will be described in greater detail herein, the spreadsheet interface service permits features and content associated with a spreadsheet to be enhanced by processing commands which are embedded within comment fields of the spreadsheet.","The spreadsheet interface service is layered over a spreadsheet. That is, the spreadsheet service interfaces with an Application Programming Interface (API) associated with a spreadsheet software application or a spreadsheet software system. The spreadsheet software application or system is used to create and modify specific spreadsheets (instances of spreadsheets). One technique for doing this is to monitor specific API calls being made in a spreadsheet to detect when operations and changes are being made to cells of the spreadsheet. These events are then detected and communicated to the spreadsheet interface service. One technique for detecting events may include monitoring when metadata associated with a spreadsheet data file changes, such as when a file-modified date is changed.","In an embodiment, the spreadsheet interface is the entity that actually makes changes to data in a spreadsheet data file. Therefore, the spreadsheet interface service is aware of when it is making a change and thus does not have to detect any specific events within the spreadsheet software application or system, since the spreadsheet interface service is making the changes through existing API calls of the spreadsheet application or system.","The actual spreadsheet application or system may be any commercially available application or system (e.g., EXCEL, ABYKUS, etc.). Additionally, the spreadsheet application or system may be any custom-developed or open source application or system. Moreover, the spreadsheet application or system may process within any operating system environment (e.g., LINUX, UNIX, WINDOWS, etc.). The teachings and embodiments presented herein can be achieved without modifying or augmenting any existing API associated with any specific spreadsheet application or system.","As used herein a \u201cservice\u201d is a single application or a combination of applications that cooperate as a system. An external service is one that is not natively integrated or interfaced to an API of a spreadsheet application or system. Thus, as used herein \u201cexternal\u201d indicates that a particular service is not capable of directly interfacing with an API of a spreadsheet. This does not mean that the external service is incapable of processing and\/or consuming spreadsheet data. In fact, some external services may be capable of translating spreadsheet formatted data and producing spreadsheet formatted data. However, an external service does not natively interface with an API of a spreadsheet application or system.","A \u201ccommand\u201d is a string constant or an expression using a variety of string constants, which is recognized as reserved syntax by the spreadsheet interface service. The command may be recognized via special delimiter characters (e.g., #, (@, $, &, *, \/, etc.) or combinations of special characters (e.g., ##, \/\/, #$, etc.). The special delimiter characters may surround commands or may precede commands. In an embodiment, delimiter characters are not used at all; rather, string constants are detected and used to recognize the commands (or expressions). The commands are embedded within comment fields of spreadsheet instances (herein after \u201cspreadsheets\u201d). The commands are parsed and recognized by the spreadsheet interface service and prompt the spreadsheet interface service to take some action. The spreadsheet interface service may be configured to recognize and process any custom-defined syntax and set of actions via the commands.","In an embodiment, some of the commands may actually be in the syntax and the format of recognized formula operations or macro operations that a spreadsheet application or system is capable of processing. In this manner, additional standard spreadsheet formulas or macros may be embedded within a comment of a spreadsheet and recognized by the spreadsheet interface service. The spreadsheet interface service then detects these commands and submits them for processing to the spreadsheet application or system when it is appropriate to do so.","Commands may be added to spreadsheet applications and systems using their existing API calls within a particular spreadsheet. For example, in EXCEL a string of text can be added to any particular cell in the following manner. A cell is selected with a mouse click and then the pull-down menu for Insert is activated and the Comment option selected with another mouse click. At this point, a user may add any string of text to the comment field for the selected cell. The contents of a cell's comments are viewed when the mouse is placed over a cell that has a comment. Of course, each particular spreadsheet application or system may have its own user-defined manner in which comments are added to cells and viewed from the cells. Thus, the exact technique for adding and viewing comment text for cells is dependent on the spreadsheet application or system that the spreadsheet interface service is monitoring and layered upon.","An example command syntax may appear as \u201c#=SUM (A1:A10) #;\u201d where \u201c=SUM (A1:A10)\u201d is a formula operation recognized and processed by EXCEL by instructing the EXCEL API to sum the contents of cells A1 through A10. In this example, the command is in a syntax which can be processed as a formula operation within the EXCEL spreadsheet software system. The command may appear within a comment of one or several other cells, such as cell D1 or cells D1 through D10. The command may be compound, which means that it includes multiple commands strung together (commands may be separated by a delimiter, such as a semicolon). The command may also be in custom recognized syntax, which is understood by the spreadsheet interface service and processed exclusively by the spreadsheet interface service.","Initially, the spreadsheet interface service is configured to communicate with a desired spreadsheet application or system's API. Moreover, the spreadsheet interface service is configured to recognize and perform predefined actions based on a predefined grammar or language associated with the desired commands and their syntaxes and semantics.","In an embodiment, the grammar may be defined within an extensible markup language (XML) and represented as an extensible style sheet definition (XSD). In this manner, the spreadsheet interface service may automatically and dynamically configure itself to process new and previously unknown grammars associated with previously unknown commands by parsing an XSD.","Referring now to  and the processing of a configured spreadsheet interface service, at , the spreadsheet interface service automatically and dynamically updates a particular cell of a spreadsheet.","In an embodiment, at , the spreadsheet interface service decides to update the cell based on interactions associated with interfacing to a Radio Frequency (RF) tracking service. The RF tracking service may monitor the physical movements of products for a particular organization. For example, RF tags may be placed on products of an organization and RF receivers may be placed at various locations throughout stores, warehouses, distribution centers, transportation vehicles, etc.","When a particular product is moved from its current existing location, the RF receivers detect this movement and communicate the same to the spreadsheet interface service. Thus, if the product is a toothbrush, then when the toothbrush is removed from a shelf location of a store the RF tracking service detects this and communicates the same to the spreadsheet interface service. In response to this movement of the toothbrush, the spreadsheet interface service decrements a total count within a cell of a spreadsheet for toothbrushes for a particular shelf location within a particular store. By decrementing the total count, the spreadsheet interface service has automatically updated a cell of the spreadsheet.","It should be noted, that in the toothbrush example, the RF tracking service may be configured in a variety of manners, such that toothbrushes (products) are sampled at predefined intervals for their present locations. Thus, movements of products may have to exceed some predefined threshold of deviation from their original locations. In this manner, temporary or insignificant movements of the toothbrushes are not used to continuously and unnecessarily interrupt the RF tracking service and its interaction with the spreadsheet interface service.","In other embodiments, at , the spreadsheet interface service may be configured to interact with any external service. The external service may be adapted to communicate events or conditions that the spreadsheet interface service determines should result in an update of a cell of a spreadsheet. Moreover, the external service may be adapted to receive and process other instructions communicated by the spreadsheet interface service.","In yet another embodiment, at , the spreadsheet interface service may be adapted to automatically and dynamically update a state associated with a graph. The graph may be embedded in a different spreadsheet or may be associated with any other graphical user interface (GUI) service. For example, suppose that the toothbrush in the previous example is also being tracked through animation in a graph in order to dynamically depict its movements from shipping to customer purchase. When the spreadsheet interface service detects the toothbrush being removed from the shelf through interactions and communications with the RF tracking service, the spreadsheet interface service may indicate this state change to the service associated with the graph as a state change. The graph service may then elect to take this information and dynamically communicate it within the graph, such as by making a node of the graph associated with shelf location have a distinctly new color or new effect (flashing).","At , once a cell is updated, the spreadsheet interface service inspects a comment field (herein after \u201ccomment\u201d) associated with the updated cell to determine if a command is present in that comment. If, at , no command is detected within the comment, then the spreadsheet interface service continues to monitor and to update other cells of the spreadsheet when appropriate. However, if, at , a command is detected within the comment, then, at , the spreadsheet interface service processes the command. That is, the spreadsheet interface service determines what action or actions are associated with the command and the spreadsheet interface service performs those action(s). In some cases, the spreadsheet interface service may have to evaluate expressions associated with the command before the appropriate action(s) can be resolved and processed. In other cases, the spreadsheet interface service may process some portions of the command by submitting the commands to the API of the spreadsheet application or system, such as when the commands are existing spreadsheet formulas or macros.","For example, suppose that with the toothbrush example that a cell within the spreadsheet has a command that instructs the spreadsheet interface service to detect a state change when the total count for toothbrushes is decremented from the cell and to send alerts or notifications if another cell within the spreadsheet is not updated within some predefined period of elapsed time. This may be useful because an organization may expect that its revenue for toothbrushes located in another cell of the spreadsheet is incremented shortly after its shelf inventor for toothbrushes is reduced. If toothbrush revenue is not increased within some predefined elapsed period of time, then this may indicate that a customer has moved the toothbrush to a different location within the store and discarded it or that the customer has stolen the toothbrush. When the toothbrush is located via a RF tracking service interfaced to the spreadsheet interface service within a different shelf location, then the spreadsheet interface service may generate a notification for store employees to retrieve it and place it back in its proper shelf location. Moreover, the spreadsheet interface service may generate periodic reports for employees to gather various products that are in their incorrect locations and to return them to their proper locations and if this is not done within some predefined period of time, then reports may be issued to management of the store.","In an embodiment, at , the spreadsheet interface service may also generate a variety of additional commands in response to processing a command embedded in an updated cell of the spreadsheet. These commands may be translated into formats and operations recognized by one or more external services, and, at , communicated to those external service(s) for subsequent processing. This feature permits the spreadsheet interface service to interact with external services that may desire notification or modification based on the processing of the command embedded in the comment of the updated cell.","In another embodiment, at , the spreadsheet interface service may detect an error condition or notification condition in response to processing the command. An example of how this may occur was supplied above with the toothbrush being removed from a shelf but not resulting in a corresponding purchase. One technique for achieving this example and other situations is for the spreadsheet interface service to set a timer, at , in response to processing the embedded command within the comment. If, at , an expected event is not detected (e.g., update of another cell within the spreadsheet, etc.) within a predefined elapsed period of time, then, at , the spreadsheet interface service may process error handling or notification reporting.","Embodiments of the spreadsheet interface service demonstrate how custom commands may be embedded within a spreadsheet for purposes of achieving operations and integration to enhance the usefulness of spreadsheet applications and systems. State changes are more easily identified and accounted for within cells of spreadsheets. Furthermore, the content of the spreadsheet more readily reflects real time and dynamic conditions of that content.",{"@attributes":{"id":"p-0032","num":"0031"},"figref":["FIG. 2","FIG. 1"],"b":["200","200","200","100"]},"Initially, the processing of the method  is configured to interact with an API of a spreadsheet application or system, to recognize and process commands embedded within comments of a spreadsheet, and to interact with a variety of desired external services. Accordingly, at , the method  is initiated and begins to interact with a first service.","In an embodiment, at , the first service is a graph service that visually depicts and perhaps animates states of a product. The states may be defined in any manner within the graph service, such as when the states depict physical locations for the product. In an embodiment, the processing of the method  may communicate and\/or receive from the graph service state changes associated with the product. When the graph service communicates the state changes, at , the processing of the method  may decide that a cell of a spreadsheet should be updated. Again, state changes may occur for a variety of configurable reasons or events; one such circumstance is presented as an example at  where a product moves its location within the graph service.","At , a determination is made to update a cell of the spreadsheet. In one embodiment, that determination may be decided based on interactions with a first external service (e.g., at ). In alternative arrangements, the determination may be decided based on a user that interacts directly with the spreadsheet and updates the cell, where that update is captured by the processing of the method . In still other embodiments, the processing of the method  may decide based on its own state, conditions, and\/or events that it should update the cell.","When the cell is updated, the processing of the method  inspects the cell's comment to determine if a command is present that should be processed. At , a command is detected in the updated cell. This results in the command being processed, at . In some cases, the command or portions of the command include existing spreadsheet formula operations and\/or macro operations; in these cases, the formula or macro operations may be submitted to the spreadsheet's API for processing.","In an embodiment, at , and in response to processing the command, the method  may interact with a second external service. This may entail, at , translating the command or other commands into a plurality of additional commands and submitting those commands in formats recognized and processed by the second service.","In yet another embodiment, at , and in response to processing the command, a timer may be set or an event that tracks elapsed time. The timer may be used to track when other events or conditions are met or not met and to process, at , other commands or to take other actions in response to the events or conditions.",{"@attributes":{"id":"p-0039","num":"0038"},"figref":"FIG. 3","b":["300","300","300","300","300"]},"Again, portions of the method  are preconfigured to interface with a desired API of a spreadsheet application or system, preconfigured to recognize and process predefined commands, and preconfigured to interface with one or more external services. The API of the spreadsheet application or system does not have to be modified or changed in any manner for the processing of the method  to perform the beneficial techniques described herein.","Once the instructions of the method  are loaded and processed either from a remote network location or on a desired processing device, the instructions perform the processing depicted in . Accordingly, at , the instructions determine at some point that a state for a cell has changed within a spreadsheet. A state change indicates that some modification, such as an update, has occurred to the content of the cell within the spreadsheet.","The actual change in state to the cell may have occurred as a result of other processing associated with the instructions. In other words, the instructions of the method  may have changed the state or updated the cell. In an embodiment, at , that state change may have been received from an external service or may have been decided upon based on other communications received from the external service. In a different embodiment, the state change may have originated with a user that manually edits or revises the content of the cell within the spreadsheet.","In an embodiment, at , the instructions interact with a graph service. The graph service communicates product movements or state transitions that occur within a graph being managed by the graph service. Again, the graph service may communicate product movements or may receive product movements from the instructions. As one example, the graph service may receive product movements from the instructions, when the instructions are also interfaced to an RF tracking service that monitors locations of products based on RF tags included on the products and RF receivers located in various geographical locations. In other arrangements, the graph service may directly interface to a RF tracking service and may therefore communicate movements to the instructions. The instructions use these movements to indicate state changes or updates to cells within the spreadsheet are desired and the instructions may perform the updates directly.","Once a state change or update is detected, the instructions, at , identify and parse a comment field of the cell within the spreadsheet. If a recognized command is not detected, then the instructions continue to monitor the cells of the spreadsheet waiting for the next state change to one of the cells to be detected. Once a parsed comment field includes a recognized command for a cell that has been updated or had its state changed in some manner, the instructions acquire the command, at , for the comment field. At , the command is evaluated and processed.","In an embodiment, at , the instructions may, in response to processing the command, communicate additional commands to other services. In another embodiment, at , the instructions may, in response to processing the command, elect to set a timer. The timer may trigger additional commands or actions to be processed by the instructions if predefined events or conditions are met or not met within predefined elapsed periods of time.",{"@attributes":{"id":"p-0046","num":"0045"},"figref":"FIG. 4","b":["400","400","400","100","200","300","400"]},"The comment command spreadsheet processing system  includes a comment string A and a spreadsheet interface . The comment string A includes an embedded command that is adapted to be recognized by the spreadsheet interface  and adapted to prompt the spreadsheet interface  to take a variety of configurable actions. Moreover, the comment string A is adapted to be represented as text data within a comment field of a spreadsheet B.","The spreadsheet interface  is adapted to interact with the API associated with the spreadsheet B. The spreadsheet interface  may be configured to interact with any desired spreadsheet application or system's API associated with the spreadsheet B. In an embodiment, the spreadsheet interface  is adapted to perform the processing depicted in  which are associated with the methods , , and .","In an embodiment, the spreadsheet interface  is also adapted to interact, communicate, or interface with a variety of external services . Two example external services  include a RF tracking service and a graph service that were described in detail above with the methods , , and .","In some arrangements, the comment string A is adapted to be associated with multiple cells of the spreadsheet B. For example, a single comment string A may be associated within the spreadsheet for a whole column, partial column, whole row, partial row, and\/or selective cells. This may be achieved using existing API operations associated with the spreadsheet B being used with the comment command spreadsheet processing system .","During operation of the comment command spreadsheet processing system , a spreadsheet B is modified to include a variety of comment strings A which have embedded commands. When a cell associated with the comment string A is modified, the spreadsheet interface  is adapted to recognize, acquire, and process the command embedded within the comment string A.","In some arrangements, it is the spreadsheet interface  that actually modifies the cell or is instructed to modify the cell by an external service . In another embodiment, the cell is modified by a user interacting with the spreadsheet B using the API of the spreadsheet application or system. In some cases, after processing the command embedded in the comment string A, the spreadsheet interface  may be prompted to take other actions on other cells of the spreadsheet B, set timers, or transmit other instructions or commands to external services .",{"@attributes":{"id":"p-0053","num":"0052"},"figref":["FIG. 5","FIG. 5"],"b":["500","500","500"]},"Thus, some components may be condensed into composite entities, other components may be exploded into multiple sub entities, some components may be removed, and\/or some additional components may be added. In an embodiment, the comment command spreadsheet processing system  implements, among other things, the techniques presented above with respect to the methods , , and . Moreover, in an embodiment, the comment command spreadsheet processing system  implements the processing of the spreadsheet interface  associated with the comment command spreadsheet processing system  of .","The comment command spreadsheet processing system  includes a command detector  and a command processor . In some arrangements, the comment command spreadsheet processing system  also includes a cell updater  and one or more external service communicators .","In an embodiment, the command detector  is a means for detecting a command within a spreadsheet. The means for detecting the command may be implemented as software service(s), application(s), function(s), instructions, and\/or module(s) which are adapted to parse comment fields of cells associated with the spreadsheet and acquire any embedded commands. The means for detecting the command may be interfaced to an API of the spreadsheet application or system for purposes of accessing the data contents of a cell's comment field. Furthermore, the means for detecting the command may be interfaced to the cell updated  for purposes of determining when it is appropriate to inspect a particular cell's comment field for any embedded command. Also, the means for detecting the command may be interfaced to the command processor for purposes of forwarding detected commands for processing.","In an embodiment, the command processor  is a means for processing the command. The means for processing the command may be implemented as software service(s), application(s), function(s), instructions, and\/or module(s) which are adapted to evaluate expressions, perform logic, and take action for purposes of processing a command detected by the command detector . In addition to being adapted to interface with the command detector , the means for processing the command is adapted to be interfaced to one or more external service communicators  for purposes communication actions or instructions to the external service communicators  in response to processing the command.","In an embodiment, the cell updater  is a means for automatically and dynamically updating a cell of a spreadsheet. The means for updating the cell may be implements as software service(s), application(s), function(s), instructions, and\/or module(s) which are adapted to update all or a portion of a cell's data content. The means for updating the cell may be adapted to interface within one or more external service communicators  for purposes of deciding whether to update a particular cell of the spreadsheet and for purposes of notifying the command detector  of any such update that the means for updating a cell performed. The means for updating the cell may also be adapted to monitor a session associated with a user that interacts with the API of the spreadsheet application or system for purposes of communicating a cell update to the command detector .","In an embodiment, the external service communicator(s)  is a means for interfacing with one or more external service, which are external to the spreadsheet. The means for interfacing with one or more external services may be implemented as software service(s), application(s), function(s), instructions, and\/or module(s) which are adapted to use existing API's of external services for purposes of receiving actions and communication actions from the command processor  and\/or the cell updater . Thus, the means for interfacing with one or more external services is adapted to translate actions or instructions that may be understood by the external service's APIs and is adapted to translate actions or instructions received from those APIs into formats that can be interpreted and processed as other actions b the cell updater  and\/or the command processor .","The comment command spreadsheet processing system  is adapted to integrate external services into the maintenance and management of data content included within a spreadsheet. Moreover, the comment command spreadsheet processing system  is adapted to perform a variety of enhanced programming features within a spreadsheet based on embedded comment commands.","The above description is illustrative, and not restrictive. Many other embodiments will be apparent to those of skill in the art upon reviewing the above description. The scope of embodiments should therefore be determined with reference to the appended claims, along with the full scope of equivalents to which such claims are entitled.","The Abstract is provided to comply with 37 C.F.R. \u00a71.72(b) and will allow the reader to quickly ascertain the nature and gist of the technical disclosure. It is submitted with the understanding that it will not be used to interpret or limit the scope or meaning of the claims.","In the foregoing description of the embodiments, various features are grouped together in a single embodiment for the purpose of streamlining the disclosure. This method of disclosure is not to be interpreted as reflecting that the claimed embodiments have more features than are expressly recited in each claim. Rather, as the following claims reflect, inventive subject matter lies in less than all features of a single disclosed embodiment. Thus the following claims are hereby incorporated into the Description of the Embodiments, with each claim standing on its own as a separate exemplary embodiment."],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"BRIEF DESCRIPTION OF THE DRAWINGS","p":[{"@attributes":{"id":"p-0004","num":"0003"},"figref":"FIG. 1"},{"@attributes":{"id":"p-0005","num":"0004"},"figref":"FIG. 2"},{"@attributes":{"id":"p-0006","num":"0005"},"figref":"FIG. 3"},{"@attributes":{"id":"p-0007","num":"0006"},"figref":"FIG. 4"},{"@attributes":{"id":"p-0008","num":"0007"},"figref":"FIG. 5"}]},"DETDESC":[{},{}]}
