---
title: Content archival and retrieval
abstract: Content archival and retrieval, in which connections with multiple, different enterprise applications operated by an organization are established. In addition, a connection with a central archival system is established and content to archive is received from the multiple, different enterprise applications. The central archival system is controlled to archive, in a central location, the content received from the multiple, different enterprise applications such that content from a first type of enterprise application is archived in the central location together with content from a second type of enterprise application.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08412681&OS=08412681&RS=08412681
owner: Accenture Global Services Limited
number: 08412681
owner_city: Dublin
owner_country: IE
publication_date: 20110729
---

{"@attributes":{"id":"description"},"BRFSUM":[{},{}],"heading":["FIELD","BACKGROUND","SUMMARY","DETAILED DESCRIPTION"],"p":["The present application claims the benefit of Indian Patent Application No. 2173\/CHE\/2010, filed on Jul. 30, 2010, which is incorporated herein by reference in its entirety for all purposes.","A company may use an archival system to archive content and documents related to the company and its processes. The company may use multiple, different archival systems to separately archive content developed using different processes.","In one aspect, a system archives content from multiple, different types of enterprise applications in a central location. The system includes multiple, different application connectors that are configured to interface with multiple, different enterprise applications operated by an organization. The multiple, different application connectors include at least a first application connector configured to interface with a first type of enterprise application operated by the organization, and a second application connector configured to interface with a second type of enterprise application operated by the organization. The second type of enterprise application is different than the first type of enterprise application. The system also includes an archival system connector that is configured to interface with a central archival system. The central archival system is configured to archive content from the multiple, different enterprise applications in a central location. The system further includes an application server that is configured to receive, using the multiple, different application connectors, content to archive from the multiple, different enterprise applications, and control, using the archival system connector, the central archival system to archive, in the central location, the content received from the multiple, different enterprise applications such that content from the first type of enterprise application is archived together in the central location with content from the second type of enterprise application.","Implementations may include one or more of the following features. For example, the application server may be configured to provide a standard user interface that enables a user to provide input to control archival operations for the multiple, different enterprise applications and the central archival system, receive user input that is entered into the standard user interface, and control, based on the received user input, archival operations for the multiple, different enterprise applications and the central archival system. In addition, the application server may be configured to convert, into a different format, at least a portion of the content received from the multiple, different enterprise applications prior to controlling the central archival system to archive, in the central location, the content received from the multiple, different enterprise applications.","In some implementations, the application server may be configured to receive user input defining a complex record type that includes information from the multiple, different enterprise applications, define the complex record type based on the received user input, and handle archival of information from the multiple, different enterprise applications using the complex record type. In these implementations, the complex record type may include first content from a first enterprise application, first metadata from the first enterprise application, second content from a second enterprise application, second metadata from the second enterprise application, and record data that describes aspects of a record of the complex record type. The second enterprise application may be different than the first enterprise application, the first content may be different than the second content, and the first metadata may be different than the second metadata. The application server may be configured to create a single record of the complex record type by integrating, into the single record of the complex record type, the first content from the first enterprise application, the first metadata from the first enterprise application, the second content from the second enterprise application, and the second metadata from the second enterprise application and adding, to the single record of the complex record type and in the record data portion of the complex record type, data describing aspects of creation of the single record.","Further, the application server may be configured to detect an archival operation that uses the complex record type and, in response to the archival operation that uses the complex record type, identify content needed from the multiple, different enterprise applications to populate the complex record type and identify metadata needed from the multiple, different enterprise applications to populate the complex record type. The application server may be configured to access the identified content and the identified metadata and control, using the archival system connector, the central archival system to store, in a single record of the complex record type, the accessed content and the accessed metadata.","In some examples, the application server may be configured to handle an event that results in a request to at least one of archive data in the central archival system and retrieve data from the central archival system and, in response to the event, log, in electronic storage separate from the central location of the central archival system, the event to identify data associated with the event and one or more of the multiple, different enterprise applications associated with the event. In these examples, the application server may be configured to, based on the logging, audit the central archival system to determine whether the data was properly archived. The application server may be configured to, in response to a determination that the data was not properly archived, take corrective action with respect to the central archival system to cause proper archival of the data in the central location. Also, the application server may be configured to calculate, based on the logging and auditing, archival statistics related to archival operations performed for each of the multiple, different enterprise applications and success or failure of the archival operations, generate a report that reflects the calculated archival statistics, and output, using an output device, the report.","In addition, the application server may be configured to handle an archival event that results in a request to archive data in the central archival system and, in response to the archival event, log, in electronic storage separate from the central location of the central archival system, the archival event to identify data archived as part of the archival event and one or more of the multiple, different enterprise applications providing the data archived as part of the archival event. The application server also may be configured to handle a retrieval event that results in a request to retrieve data from the central archival system and, in response to the retrieval event, log, in electronic storage separate from the central location of the central archival system, the retrieval event to identify data retrieved as part of the retrieval event and one or more of the multiple, different enterprise applications providing the data retrieved as part of the retrieval event.","In some implementations, the application server may be configured to receive input related to a new enterprise application to archive in the central archival system, add a new application connector to interface with the new enterprise application based on the input, update archival record types and archival policies to account for the new enterprise application based on the input, and handle archival for the new enterprise application based on the new application connector and the updated archival record types and archival policies. In these implementations, the application server may be configured to maintain an existing application connector used by a previous enterprise application whose content was previously being archived in the central archival system, existing archival record types used in archiving content from the previous enterprise application, and existing archival policies used in archiving content from the previous enterprise application such that addition of the new enterprise application does not impact archival of content from the previous enterprise application.","In some examples, the application server may be configured to receive user input defining one or more policies to apply in archiving content in a particular record type. The particular record type may be used to archive content from multiple, different enterprise applications. In these examples, the application server may be configured to, based on the received input, define, in electronic storage, the one or more policies to apply in archiving content in the particular record type. The one or more policies may be applicable to archiving content from all of the multiple, different enterprise applications whose content is archived in the particular record type.","Further, the application server may be configured to identify an archival operation that relates to the particular record type, apply the one or more policies defined for the particular record type to the archival operation based on the identification of the archival operation as relating to the particular record type, and perform the archival operation that relates to the particular record type based on application of the one or more policies. Also, the application server may be configured to receive user input defining a retention policy to apply in archiving content in the particular record type and, based on the received input, define, in electronic storage, the retention policy to apply in retaining content archived in the particular record type. Further, the application server may be configured to receive user input defining a location policy to apply in archiving content in the particular record type. The location policy may define a location within the central archival system at which to store content archived using the particular record type. The application server may be configured to, based on the received input, define, in electronic storage, the location policy to apply in determining the location within the central archival system at which to store content archived using the particular record type.","In another aspect, a computer-implemented method of archiving content from multiple, different types of enterprise applications in a central location includes establishing, using multiple, different application connectors, connections with multiple, different enterprise applications operated by an organization. The multiple, different application connectors include at least a first application connector configured to interface with a first type of enterprise application operated by the organization, and a second application connector configured to interface with a second type of enterprise application operated by the organization. The second type of enterprise application is different than the first type of enterprise application. The method also includes establishing, using an archival system connector, a connection with a central archival system. The central archival system is configured to archive content from the multiple, different enterprise applications in a central location. The method further includes receiving, over the connections established using the multiple, different application connectors, content to archive from the multiple, different enterprise applications and controlling, using the archival system connector, the central archival system to archive, in the central location, the content received from the multiple, different enterprise applications such that content from the first type of enterprise application is archived in the central location together with content from the second type of enterprise application.","In yet another aspect, at least one computer-readable storage medium encoded with executable instructions that, when executed by at least one processor, cause the at least one processor to perform operations. The operations include establishing, using multiple, different application connectors, connections with multiple, different enterprise applications operated by an organization. The multiple, different application connectors including at least a first application connector configured to interface with a first type of enterprise application operated by the organization, and a second application connector configured to interface with a second type of enterprise application operated by the organization. The second type of enterprise application is different than the first type of enterprise application. The operations also include establishing, using an archival system connector, a connection with a central archival system. The central archival system is configured to archive content from the multiple, different enterprise applications in a central location. The operations further include receiving, over the connections established using the multiple, different application connectors, content to archive from the multiple, different enterprise applications and controlling, using the archival system connector, the central archival system to archive, in the central location, the content received from the multiple, different enterprise applications such that content from the first type of enterprise application is archived in the central location together with content from the second type of enterprise application.","Implementations of any of the techniques described throughout the disclosure may include a method or process, a system, or instructions stored on a computer-readable storage device. The details of particular implementations are set forth in the accompanying drawings and description below. Other features will be apparent from the following description, including the drawings, and the claims.","Like reference numbers represent corresponding parts throughout.",{"@attributes":{"id":"p-0024","num":"0023"},"figref":"FIG. 1","b":["100","100","102","106","110","100","100","100"]},"Business users  may use the central archive system  for records retention , searching and indexing documents , low cost storage  of documents and other data, workflow approval processes  and for metadata and taxonomy management . The application server  includes an administration module , a records manager module , a policy manager module , a controller module , an application connector module , and an archival system connector module .","The administration module  may be used by records managers and legal authorities , or other users, to administer and configure archival and retrieval processes. The administration module  may provide, for example, a set of user interface components which the records managers and legal authorities  may use to design records policies for archiving, retaining, retrieving, and disposing records, to generate reports, to monitor archival processes, to initiate workflows, to review and approve record types and record policies, and to perform auditing of archival and retrieval activity.","The records managers and legal authorities  may use the records manager module  to manage record types and records information. For example, the records manager module  may be used to define a record type. Record and record type information may be stored, for example, using XML (eXtensible Markup Language). The records manager module  may be used to transfer or communicate record and record type information to other modules of the application server .","The records managers and legal authorities  may use the policy manager module  to define and manage policies. The policy manager module  may be used to enforce policies on records. The policy manager module  may be used to transfer or communicate policy-related information to other modules of the application server .","The controller module  may coordinate or control other modules and may provide common functionality used by other modules, such as central monitoring, auditing, reporting, and database functionality. The controller module  may provide functionality to cache information in one or more memory caches (e.g., a records store , a policy store , an object cache store , etc.) and\/or to store information in a database . For example, the policy manager module  may store policy-related information in the policy store  and the records manager module  may store record and record type information in the records store .","The controller module  may provide functionality to cache content and metadata in the object cache store . The controller module  may provide interfaces to store and retrieve other information to and from the database , such as audit trail entries and report-related information (e.g., report definitions, generated reports). The controller module  includes a central monitoring component  which may provide features such as logging, tracing, auditing, and reporting.","The application connector module  includes a set of application connectors. Each application connector may be configured to interface with a different type of enterprise application. For example, the application connector module  may include an application connector for each enterprise application -included in the archive sources . Each of the enterprise applications -may be a different type of enterprise application. Each of the enterprise applications -may be, for example, of one of the following types of enterprise applications or systems: enterprise content management or other content management, business process management, human resource management, customer relationship management, sales force automation, enterprise resource planning, product lifecycle management, supply chain management, supplier relationship management, enterprise forms automation, automated billing systems, relational database management system, data warehousing, business intelligence, enterprise portal, or some other type of enterprise application. A new application connector may be added to the application connector module  to support a new enterprise application.","The archival system connector module  may be used to connect to the central archival system  and to inject content and metadata into the central archival system  and to extract content and metadata out of the central archival system . The archival system connector module  may also provide functionality for PDF (Portable Document Format) conversion, logging and tracing, auditing, workflow initiation, taxonomy structure creation and navigation, virtual document creation, structured data conversion, and other configuration tasks.","In further detail and as shown in , an archival system connector module  may include connection manager , taxonomy handler , object injector , metadata handler , object extractor , virtual document handler , PDF processor , meta-XML converter , workflow handler , and configuration manager  components. As discussed above, the archival system connector module  may be included in an application server , and may connect to a central archival system .","The connection manager component  may be used to manage a session (e.g., establish a session, release a session) with the central archival system . For example, a session may be established by invoking interfaces included in an API (Application Programming Interface) . The taxonomy handler component  may be used to associate an injected record with a folder path included as part of a taxonomy folder structure in the central archival system . The taxonomy handler component  may be called by the object injector component  as each record is injected, and may return one or more folder paths to the object injector component .","The object injector component  handles injections of objects into the central archival system , where an object may be, for example, a simple record or a complex record. A complex record is a record which includes content from multiple sources. The object injector component  may inject a record within an appropriate taxonomy folder structure as indicated by the taxonomy handler component . The object injector component  may update metadata of a record as indicated by the metadata handler component . The metadata handler component  indicates values for one or more metadata items for a record. The metadata handler component  may be invoked by the object injector component  as each record is injected.","The virtual document handler component  may be used to create virtual documents in the central archival system . A virtual document may be created, for example, for a complex record. The virtual document handler component  may be invoked by the object injector component  for each injection of a complex record. For example and as shown in , a virtual document handler component  may be invoked when a complex record  is injected. The virtual document handler component  may create a virtual document  based on the complex record .","For example, the structure of the virtual document  may correspond to the structure of the complex record . The complex record  includes first content  (e.g., a document), second content , and structured data . The corresponding virtual document  includes a parent element  and child elements , , and , which correspond to the first content , the second content , and the structured data , respectively.","Returning to , the PDF processor component  may be used to queue documents for PDF rendering. For example, individual documents in a complex record or a document in a simple record may be queued for PDF rendering. The PDF processor component  may be invoked by the object injector component  after the injection of a record if PDF conversion options are configured for a record type corresponding to the injected record. The workflow handler component  may be used to initiate workflow processes in the central archival system . Workflow processes may be defined, for example, during definition of a record type. The workflow handler component  may be invoked by the object injector component  after the injection of a record if workflow initiation is configured for a record type corresponding to the injected record.","The meta-XML converter component  may be used to convert structured or relational data into an XML file. The meta-XML converter component  may be invoked by the injector component  if an injected record includes structured or relational information. For example and as shown in , a meta-XML converter component  may be invoked when a record which includes relational data  is injected. The meta-XML converter component  may create an XML file  based on the relational data . For example, the structure of the XML file  may correspond to the structure of the relational data .","Returning to , the object extractor component  handles extraction of objects (e.g., records) from the central archival system . If a complex record is extracted, the complex record may include one or more content items, where a content item may be a content file or may be an XML file or data stream which includes relational or structured information.","The configuration manager component  may be used to retrieve configuration information. For example, in some implementations, the configuration manager component  may retrieve and parse a configuration file (e.g., an XML configuration file), such as to extract configuration parameters. For example, configuration parameters may include class names of classes for other components included in the archival system connector module . The configuration manager component  may invoke some or all of the other components included in the archival system connector module . For example, the configuration manager component  may invoke the connection manager component  to establish a session with the central archival system  and may invoke the object injector component  in response to a request to inject a record. The object injector component  may invoke some or all of the taxonomy handler component , the metadata handler component , the virtual document handler component , the PDF processor component , the meta-XML converter component , and the workflow handler component , as part of injection processing.",{"@attributes":{"id":"p-0042","num":"0041"},"figref":["FIG. 5","FIG. 1"],"b":["502","504","502","138","502","504","506","506","508","502","510","510","510","510","506","506","506","506","510","510","506","506","510","502","506"],"i":["a","f ","a","e","a","e ","a","f","a","f ","a","f ","a","f"]},"As discussed above, a complex record may include content from multiple archives sources.  illustrates an example complex record . The complex record  may include, for example, a product specification document  from a first enterprise application , a cover letter document  from a second enterprise application , and customer data  from a third enterprise application . The product specification document  may be retrieved from the first enterprise application  using a first application connector  configured to interface with the first enterprise application  and may exist in the complex record  as a first component . Similarly, the cover letter document  may be retrieved from the second enterprise application  using a second application connector  configured to interface with the second enterprise application  and may exist in the complex record  as a second component . The customer data  may be retrieved from the third enterprise application  using a third application connector  configured to interface with the third enterprise application . The customer data  may be converted to XML and may exist in the complex record  as a third component .","In contrast to a complex record, a simple record may be associated with one content item retrieved from one archival source. For example, a simple record  may be associated with a medical record  retrieved from a fourth enterprise application , using a fourth application connector  configured to interface with the fourth enterprise application .",{"@attributes":{"id":"p-0045","num":"0044"},"figref":"FIG. 7","b":["702","704","702","706","708","710","712","714","710","702"]},"The schema manager component  may be used to extract details of a relational database schema or other schema used by an enterprise application associated with the application connector . The extracted schema information may include, for example, details about relational records stored in or accessible from the enterprise application associated with the application connector . The extracted schema information may be used when defining record types of records to be archived.","The object model manager component  may be used to extract details of one or more object models used in an enterprise content management system associated with the application connector  (e.g., the application connector  may be configured to interface with the enterprise content management system). Extracted object model information may include information about content stored in or accessible from the enterprise content management system associated with the application connector . A content schema for the enterprise content management system may be generated based on a set of object models. The extracted object model information may be used when defining record types of records to be archived.","The data extractor component  may be used to extract structured (e.g., relational) data from an enterprise system associated with the application connector . Extracted data may be treated as or may be included in a record and may be archived in a central archival system. The content extractor component  may be used to extract content and associated metadata stored in an enterprise content management system associated with the application connector . Extracted content may be treated as or may be included in a record and may be archived in a central archival system.",{"@attributes":{"id":"p-0049","num":"0048"},"figref":["FIG. 8","FIG. 1"],"b":["802","804","802","130","802","806","808","810","812","814","816","818"]},"The login manager component  may be used to provide functionality for records managers and legal authorities  to log into and log out of the application server . The records browser component  allows the records managers and legal authorities  to browse and search archived records. For example, the records managers and legal authorities  may use the records browser component  to perform records discovery by issuing keywords-based and\/or metadata-based searches. The records managers and legal authorities  may also use the records browser component  to navigate one or more taxonomy folder structures. Selected records may be retrieved, if the user has appropriate authority.","The records type console component  may allow users to define and configure record types. The records managers and legal authorities  may use the records type console component  to define simple and complex record types. The records managers and legal authorities  may use the policy console component  to define record policies and to associate a defined policy with one or more record types. Defining policies is described in more detail below with respect to .","The reports manager component  may be used to define and generate reports. A preconfigured report or custom report may be generated using report parameters, such as record creation time, record source, or record type, to name a few examples. The records managers and legal authorities  may use the tasks manager component  to view and perform archival or retrieval-related tasks. For example, the records managers and legal authorities  may review and approve incoming records before they are injected into a central archival system, or may review and approve the retrieval of the records from the central archival system. The audit manager component  may be used to define audit events for a particular record type and to view generated audit events. Auditing is described in more detail below with respect to .",{"@attributes":{"id":"p-0053","num":"0052"},"figref":["FIG. 9","FIG. 8","FIG. 1"],"b":["802","902","906","908","910","912","914","916","918","906","908","910","912","920","920","136"]},"The records browser component  may interface with an application connector module , the records type console component  may interface with a records manager module , and the policy console component  may interface with a policy manager component . The application connector module , the records manager module , and the policy manager component  may be implementations of the application connector module , the records manager module , and the policy manager module  described above with respect to , respectively.",{"@attributes":{"id":"p-0055","num":"0054"},"figref":["FIG. 10","FIG. 1"],"b":["1002","1004","1002","136","1002","1006","1008","1010","1012","1013"]},"The object cache store  is a memory cache which may be used to cache received content and metadata as memory objects. Storing received content and metadata in memory in the object cache store  may improve performance as compared to storing content and metadata in disk storage. Content may be cached in the object cache store  and may subsequently be sent to the central archival system. The policy store  may be used to store policy definitions and policy rules which may be included in one or more policy definitions. The records store  may be used to store record and record type information, such as definitions of simple and complex record types, and other information used for records assembly. In some implementations, the policy store  and\/or the records store  may use or include an in-memory cache and\/or may use or may be associated with persistent storage associated with the database .","The database  may be used to store information such as logs, generated reports, report definitions, audit-related information, and other information. In some implementations, policy information may be cached in the policy store  and may be also stored persistently in the database . Similarly, in some implementations, record and record type information may be cached in the records store  and may be also stored persistently in the database .","The central monitoring component  includes a reports manager component , a dashboard generator component , and an audit manager component . The report manager component  may access a central archival system to extract information about archived records, may consolidate the extracted information, and may generate reports based on the extracted information. The dashboard generator component  may include a set of pre-configured chart definitions. The chart definitions may be used by the reports manager component . For example, the reports manager component  may populate a chart with data based on information queried from the central archival system and may display the chart on a report. The audit manager component  may query the central archival system for audit trail objects based on a set of query parameters received from an audit manager component included in an administration module (e.g., the audit manager component  of the administration module  described above with respect to ). The audit manager component  may return query results to the audit manager component included in the administration module.",{"@attributes":{"id":"p-0059","num":"0058"},"figref":["FIG. 11","FIG. 1"],"b":["1102","1102","1104","1106","1102","1104","1106","134","130","136","1102","1102","1106","1108","1106","1110","1106"]},"Records managers and legal authorities  may use a policy console component  included in the administration module  to perform or initiate policy related operations. The policy console component  may communicate user input and commands to the policy manager module . In response to received user input and commands, the policy manager module  may add, change, or delete policy information in the policy store  and\/or in the database .",{"@attributes":{"id":"p-0061","num":"0060"},"figref":["FIG. 12","FIG. 1"],"b":["1202","1202","1204","1206","1202","1204","1206","132","130","136","1202","1202","1206","1208","1206","1210","1206"]},"Records managers and legal authorities  may use a records type console component  included in the administration module  to perform or initiate records related operations. The records type console component  may communicate user input and commands to the records manager module . In response to received user input and commands, the records manager module  may add, change, or delete records related information in the records store  and\/or in the database .",{"@attributes":{"id":"p-0063","num":"0062"},"figref":"FIG. 13","b":["1300","1300","100","1300","100","110","100","1300"]},"The system  establishes connections with multiple, different enterprise applications operated by an organization (). For example, an applications connector module may be used, where the applications connector module includes multiple application connectors and where each application connector is configured to interface with a particular type of enterprise application. Each application connector may include a connection manager component which may be used to establish a connection with an associated enterprise application.","The system  establishes a connection with a central archival system (). For example, an archival system connector module may be used to establish a connection with the central archival system which is configured to archive content from the multiple, different enterprise applications in a central location. The archival system connector module may include a connection manager component which may be used to establish a session with the central archival system.","The system  receives content to archive from the multiple, different enterprise applications (). For example, for each enterprise application, an associated connector may be used to receive content to archive from the enterprise application. Content may include, for example, one or more documents, or structured or relational data. Content may be stored, for example in one or more caches of an application server, as one or more records. A record may be associated with a record type. A record type may be a simple record type or a complex record type. A simple record type may indicate that content for a simple record may be received from one enterprise application. A complex record type indicates that content for a complex record may be received from multiple, different enterprise applications.","The system  controls the central archival system to archive, in the central location, the content received from the multiple, different enterprise applications (). Some or all of the received content may be converted to a different format before archiving. For example, structural or relational database data may be converted to one or more XML files. A PDF version may be generated for some or all documents. For content for which a PDF document is made, either just the PDF document or both the PDF document and the original content may be archived.","Prior to archiving, a complex record type may be defined and the system  may handle archiving using the complex record type. For example, a complex record may be represented as a virtual document. Handling archiving using a complex record type is described in more detail below with respect to .",{"@attributes":{"id":"p-0069","num":"0068"},"figref":"FIG. 14","b":["1400","1400","100","1400","100","110","100","1400"]},"The system  receives user input defining a complex record type that includes information from multiple, different enterprise applications (). For example, a records manager or legal authority may provide user input using a records type console (e.g., the records type console  described above with respect to ). A record type may refer to content and\/or metadata from multiple enterprise applications. For example,  illustrates a complex record type  which is defined to include first content  and first metadata  from a first enterprise application and second content  and second metadata  from a second enterprise application. The complex record type  also includes record data  which describes other aspects of a record of the complex record type .","As another example, a complex record type  is defined to include a customer name, customer date of birth, and date last contacted information  from a first enterprise application, a customer cover letter and a customer passport copy  from a second enterprise application, and customer transaction information  from a third enterprise application.","Simple record types may also be defined, where a simple record type is defined to include information from a single enterprise application. For example, a simple record type  is defined to include product specification content  from a fourth enterprise application and a simple record type  is defined to include project documentation content  from a fifth enterprise application.","Returning to , the system  defines the complex record type (). For example, a complex record type definition may be generated by a records manager module and the complex record type definition may be stored in a records store.","The system  handles archival of information from the multiple, different enterprise applications using the complex record type, based on the received user input (). For example, the system  may detect an archival operation that uses the complex record type and in response may identify content and metadata needed to populate the complex record type and may identify multiple enterprise applications from which to retrieve the identified content and identified metadata. The system  may connect to the identified enterprise applications to access the identified content and identified metadata. The system  may control, using an archival system connector, a central archival system to store, in a single record of the complex record type, the accessed content and the accessed metadata.",{"@attributes":{"id":"p-0075","num":"0074"},"figref":"FIG. 16","b":["1600","1600","100","1600","100","110","100","1600"]},"The system  receives input defining policies to apply in archiving content in a particular record type (). For example, a records manager or legal authority may provide user input specifying one or more policy rules to apply in archiving content in a particular record type using a policy console component (e.g., the policy console  described above with respect to ). As shown in , example policy rules  may be based on a record type, may involve one or more pre-ingestion handlers (e.g., a handler may be called before a record is injected), may involve one or more post-ingestion handlers (e.g., a handler may be called after a record is injected), may involve PDF conversion, may involve applying an archive system lifecycle stage, may involve initiating an archive system workflow, may be based on or may refer to an archive system target folder, may be based on or may refer to one or more retention phases, may involve one or more pre-retrieval handlers (e.g., a handler may be called before a record is retrieved), may involve one or more post-retrieval handlers (e.g., a handler may be called after a record is retrieved), and may involve deletion of a record.","The system  defines policies to apply in archiving content in the particular record type based on the received input (). For example, a policy definition may be generated by a policy manager module and the policy definition may be stored in a policy store.","The system  identifies an archival operation that relates to the particular record type (). For example, a request to archive content related to the particular record type may be received. As another example, a request to retrieve content related to a particular record type may be received.","The system  applies the policies defined for the particular record type to the archival operation () and the system  performs the archival operation based on application of the policies (). Policy rules may be applied by invoking one or more handlers. For example, a pre-ingestion handler may be invoked before a record is injected and a post-ingestion handler may be invoked after a record is injected. A pre-retrieval handler may be invoked before a record is retrieved and a post-retrieval handler may be invoked after a record is retrieved.","Policies may be based on or may refer to one or more lifecycle states of a record. A record may be in one or more of the following states: draft, in-review, in-workflow, approved, archived, retrieved, deleted, and PDF-generated. Some of the lifecycle states are mutually exclusive (e.g., a record may not be simultaneously in an in-review and a deleted state) and some combinations of the lifecycle states may be simultaneously applicable to a record (e.g., a record may be both approved and retrieved).",{"@attributes":{"id":"p-0081","num":"0080"},"figref":"FIG. 18","b":["1800","1800","100","1800","100","110","100","1800"]},"The system  receives input related to a new enterprise application to archive in a central archival system (). For example, the new enterprise application may be a new enterprise application product offering or may otherwise be an enterprise application for which content has not previously been archived in the central archival system. As shown in , a company may begin using a new enterprise application  and may wish to integrate the new enterprise application  with an archival system  used by the company.","The system  adds a new connector to interface with the new enterprise application based on the input (). The new connector may be implemented, configured to interface with the new enterprise application, and may be added to an application connector module. In the example of , a new connector  is added to an application server .","The system  updates archival record types and\/or archival policies to account for the new enterprise application based on the input (). For instance, in the example of , after updating archival record types and archival policies, the application server  may include updated policies  and updated record types . The updated policies  may include new policies added to support the new enterprise application , modified policies changed to support the new enterprise application , and old policies left unchanged after accounting for the new enterprise application . Similarly, the updated record types  may include new record types added to support the new enterprise application , modified record types changed to support the new enterprise application , and old record types left unchanged after accounting for the new enterprise application .","Returning to , the system  handles archival for the new enterprise application based on the new connector and the updated archival record types and\/or archival policies (). For instance, in the example of , a request to archive information from the new enterprise application  may be received by the application server . The application server  may connect to the new enterprise application  using the new connector , may retrieve content from the new enterprise application  using the new connector , and may inject the retrieved content into the archival system , for example in archived records  included in the archival system .","After the addition of the new enterprise application , the application server  may receive a request to archive content from an existing enterprise application . In response to such a request, the application server  may connect to the existing enterprise application  using an existing connector , may retrieve content from the existing enterprise application  using the existing connector , and may inject the retrieved content into the archival system . The operations may be performed as had occurred prior to the addition of the new enterprise application . In other words, addition of the new enterprise application  does not impact archival of content from the existing enterprise application . The updated policies  and updated record types  may include policies and record types, respectively, that are used in archiving content from the existing enterprise application , where those policies and record types may be maintained as unchanged in response to adding support for the new enterprise application .",{"@attributes":{"id":"p-0087","num":"0086"},"figref":"FIG. 20","b":["2000","2000","100","2000","100","110","100","2000"]},"The system  handles an event that results in a request to archive or retrieve data in a central archival system (). For example, as shown in , example events that may be audited include: record type creation, modification, or deletion; policy creation, modification, or deletion; structural\/relational data archival; other content archival; records assembly or retrieval; policy enforcement, policy removal and policy phase changes; records lifecycle changes; workflow triggering; PDF generation; records deletion; and virtual document creation.","In response to the event, the system  logs the event to identify one or more enterprise applications associated with the data (). For example, data associated with the event may be logged to a database. Logged data may include, for example, an event time, an identity of one or more applicable enterprise applications, an applicable record type, an event description, and an event type. Data may be logged in electronic storage which is separate from the central archival system (e.g., electronic storage included in a different physical machine located in a different geographic location).","The system  audits, based on the logging, the central archival system to determine whether the data was properly archived or retrieved (). For example, the system  may analyze log data to determine a set of records identified to be archived. The system  may compare the set of records identified to be archived with the current records included in the central archival system (accounting for records which have been deleted from the central archival system (e.g., as indicated by log data)). If each record identified to be archived is found in the central archival system, the system  may determine that data was properly archived. If some of the records identified to be archived cannot be found in the central archival system, the system  may determine that data was not properly archived.","The system  takes corrective action in response to a determination that the data was not properly archived or retrieved (). For example, one or more parties may be notified, such as administrators, records managers, or one or more requestors of archival operations for which data was not properly archived. As another example, archival of records not properly archived may be reattempted.","The system  provides reporting based on the logging and auditing (). For example, the system  may calculate, based on the logging and auditing, archival statistics related to archival operations performed for each of the multiple, different enterprise applications and success or failure of the archival operations. A reports manager module may generate and output a report that reflects the calculated archival statistics.",{"@attributes":{"id":"p-0093","num":"0092"},"figref":"FIG. 22","b":["2200","2200","1300","1400","1600","1800","2000"]},"The system  includes a processor , a memory , a storage device , and an input\/output device . Each of the components , , , and  are interconnected using a system bus . The processor  is capable of processing instructions for execution within the system . In one implementation, the processor  is a single-threaded processor. In another implementation, the processor  is a multi-threaded processor. The processor  is capable of processing instructions stored in the memory  or instructions stored on the storage device  to display graphical information for a user interface on the input\/output device .","The memory  stores information within the system . In one implementation, the memory  is a computer-readable medium. In one implementation, the memory  is a volatile memory unit. In another implementation, the memory  is a non-volatile memory unit.","The storage device  is capable of providing mass storage for the system . In one implementation, the storage device  is a computer-readable medium. In various different implementations, the storage device  may be a floppy disk device, a hard disk device, an optical disk device, or a tape device.","The input\/output device  provides input\/output operations for the system . In one implementation, the input\/output device  includes a keyboard and\/or pointing device. In another implementation, the input\/output device  includes a display unit for displaying graphical user interfaces.","The features described can be implemented in digital electronic circuitry, or in computer hardware, firmware, software, or in combinations of them. The apparatus can be implemented in a computer program product tangibly embodied in an information carrier, e.g., in a machine-readable storage device, for execution by a programmable processor; and method steps can be performed by a programmable processor executing a program of instructions to perform functions of the described implementations by operating on input data and generating output. The described features can be implemented advantageously in one or more computer programs that are executable on a programmable system including at least one programmable processor coupled to receive data and instructions from, and to transmit data and instructions to, a data storage system, at least one input device, and at least one output device. A computer program is a set of instructions that can be used, directly or indirectly, in a computer to perform a certain activity or bring about a certain result. A computer program can be written in any form of programming language, including compiled or interpreted languages, and it can be deployed in any form, including as a stand-alone program or as a module, component, subroutine, or other unit suitable for use in a computing environment.","Suitable processors for the execution of a program of instructions include, by way of example, both general and special purpose microprocessors, and the sole processor or one of multiple processors of any kind of computer. Generally, a processor will receive instructions and data from a read-only memory or a random access memory or both. The elements of a computer may include a processor for executing instructions and one or more memories for storing instructions and data. Generally, a computer will also include, or be operatively coupled to communicate with, one or more mass storage devices for storing data files; such devices include magnetic disks, such as internal hard disks and removable disks; magneto-optical disks; and optical disks. Storage devices suitable for tangibly embodying computer program instructions and data include all forms of non-volatile memory, including by way of example semiconductor memory devices, such as EPROM, EEPROM, and flash memory devices; magnetic disks such as internal hard disks and removable disks; magneto-optical disks; and CD-ROM and DVD-ROM disks. The processor and the memory can be supplemented by, or incorporated in, ASICs (application-specific integrated circuits).","To provide for interaction with a user, the features can be implemented on a computer having a display device such as a CRT (cathode ray tube) or LCD (liquid crystal display) monitor for displaying information to the user and a keyboard and a pointing device such as a mouse or a trackball by which the user can provide input to the computer.","The features can be implemented in a computer system that includes a back-end component, such as a data server, or that includes a middleware component, such as an application server or an Internet server, or that includes a front-end component, such as a client computer having a graphical user interface or an Internet browser, or any combination of them. The components of the system can be connected by any form or medium of digital data communication such as a communication network. Examples of communication networks include, e.g., a LAN, a WAN, and the computers and networks forming the Internet.","The computer system can include clients and servers. A client and server are generally remote from each other and typically interact through a network, such as the described one. The relationship of client and server arises by virtue of computer programs running on the respective computers and having a client-server relationship to each other.","A number of implementations have been described. Nevertheless, it will be understood that various modifications may be made without departing from the spirit and scope of the disclosure. Accordingly, other implementations are within the scope of the following claims."],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"BRIEF DESCRIPTION OF THE DRAWINGS","p":[{"@attributes":{"id":"p-0016","num":"0015"},"figref":"FIGS. 1-6","b":["8","9","11","12","19","22"]},{"@attributes":{"id":"p-0017","num":"0016"},"figref":"FIG. 7"},{"@attributes":{"id":"p-0018","num":"0017"},"figref":"FIG. 10"},{"@attributes":{"id":"p-0019","num":"0018"},"figref":"FIGS. 13","b":["14","16","18","20"]},{"@attributes":{"id":"p-0020","num":"0019"},"figref":"FIG. 15"},{"@attributes":{"id":"p-0021","num":"0020"},"figref":"FIG. 17"},{"@attributes":{"id":"p-0022","num":"0021"},"figref":"FIG. 21"}]},"DETDESC":[{},{}]}
