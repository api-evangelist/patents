---
title: Layered machine images
abstract: In certain embodiments, a computer-implemented method includes accessing user selection data that includes selections associated with computing system resources, determining two or more machine image layers from available machine image layers to instantiate on a particular computing system resource, and determining that a particular machine image layer is not cached locally on one or more memory devices of the particular computing system resource. The method includes, in response to determining that the particular machine image layer is not cached locally on one or more memory devices, accessing a stored copy of the particular machine image layer residing in memory external to the particular computing system resource and caching the stored copy of the particular machine image layer on the one or more memory devices of the particular computing system resource. The method further includes instantiating the particular machine image layer on the particular computing system resource.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08862741&OS=08862741&RS=08862741
owner: Amazon Technologies, Inc.
number: 08862741
owner_city: Reno
owner_country: US
publication_date: 20110623
---

{"@attributes":{"id":"description"},"BRFSUM":[{},{}],"heading":["BACKGROUND","DESCRIPTION OF EXAMPLE EMBODIMENTS"],"p":["Online service providers offer many products and services to their clients. One such service is the ability of a client to purchase and operate a certain amount of computing capacity on a remote computer system. For example, a client may submit a request to create and operate a virtual web server running on a host server of the online service provider. Typically, the instantiation of computing capacity on a computer system involves the creation and execution of a machine image. The process of selecting, creating, and executing a machine image, however, is often cumbersome and inefficient.","Instantiating a virtual machine on a host computer system often involves the selection, creation, and instantiation of a machine image. A machine image may include data that, when executed, creates or \u201cinstantiates\u201d a replica of a particular computer system. For example, machine images may include an operating system and one or more applications to perform a specific task. As a particular example, a machine image for a web server may include an operating system such as LINUX, a web server application such as APACHE, and a database application such as MYSQL. Machine images allow for multiple instances of the same particular computer system to be instantiated quickly either as a stand alone computer system or as a virtual machine running on a host computer system.","While the use of machine images enables customers of online service providers to instantiate a particular virtual machine on a host computer system, choosing a proper machine image to instantiate is often difficult and cumbersome. For example, a customer of an online service provider may desire to instantiate a virtual web server on a host computer system of the online service provider. As a result, the customer may be presented with a selection of pre-assembled machine images to instantiate on the host computer system. However, it may be difficult for some customers to determine which of the pre-assembled machine images are appropriate for their particular application.","Another disadvantage of typical machine images is that the online service provider stores a large number of unique machine images despite the machine images having common elements. For example, one customer may create and utilize a machine image for a web server that includes a particular version of LINUX as the operating system and JETTY for the web server application. Another customer, however, may desire a machine image for a web server that includes the same version of LINUX as the operating system and a different web server application such as TOMCAT. Even though both machine images include the same version of LINUX as the operating system, the online service provider stores two separate machine images for the customers. This creates an increased demand for storage space and other possible issues.","Certain of the present disclosure provide machine images that are created in real-time using pre-approved and pre-assembled machine image layers. For example, machine image layers may be created using various techniques, examples of which are described herein, and made available to customers to use in custom machine images. One or more of the pre-approved machine image layers may be selected and executed in order to instantiate a desired computing resource for the customer.  below illustrate layered machine images according to certain embodiments of the present disclosure.",{"@attributes":{"id":"p-0013","num":"0012"},"figref":"FIG. 1","b":["100","100","102","104","104","106","108","110","106","108","110","104","112","102","104","114","100","100"],"i":["a ","b","b ","a "]},"In general, provisioned computing resources environment  (including, for example, one or more of server system , storage module , and hosts ) provides a collection of remote computing services offered over a network (which may or may not be network ). Those computing services may include, for example, storage, compute processing, networking, applications, or any other suitable computing resources that may be made available over a network. In certain embodiments, entities accessing those computing services may gain access to a suite of elastic information technology (IT) infrastructure services (e.g., computing resources on hosts ) as the entity requests those services. Provisioned computing resources environment  may provide a scalable, reliable, and secure distributed computing infrastructure.","To gain access to computing resources on hosts , user system  may first transmit one or more user selections  to provisioned computing resources environment . In general, user selections  indicate a desired configuration for a particular computing environment to be instantiated on hosts . As an illustration, user selections  may indicate, among other things, a particular operating system for a desired virtual machine  to be instantiated on hosts . After user selections  are transmitted by user system , provisioned computing resources environment  may access user selections  stored in storage module  and then determine one or more machine image layers  to execute on a particular host . Machine image layers  are described in more detail below. In particular, embodiments of instantiating machine image layers  are described below in reference to , and embodiments of creating machine image layers  are described below in reference to .","User system  may include one or more computer systems at one or more locations. Each computer system may include any appropriate input devices, output devices, mass storage media, processors, memory, or other suitable components for receiving, processing, storing, and communicating data. For example, each computer system may include a personal computer, workstation, network computer, kiosk, wireless data port, personal data assistant (PDA), one or more Internet Protocol (IP) telephones, smart phones, tablet computers, one or more servers, a server pool, one or more processors within these or other devices, or any other suitable processing device. User system  may be a stand-alone computer or may be a part of a larger network of computers associated with an entity.","Networks and facilitate wireless or wireline communication. Networks and may communicate, for example, IP packets, Frame Relay frames, Asynchronous Transfer Mode (ATM) cells, voice, video, data, and other suitable information between network addresses. Networks and may include one or more personal area networks (PANs), local area networks (LANs), a wireless LAN (WLAN), a virtual private network (VPN), radio access networks (RANs), metropolitan area networks (MANs), wide area networks (WANs), mobile networks (e.g., using WiMax (802.16), WiFi (802.11), 3G, or any other suitable wireless technologies in any suitable combination), all or a portion of the global computer network known as the Internet, an extranet, a satellite network, and\/or any other communication system or systems at one or more locations, any of which may be any suitable combination of wireless and wireline. Networks and may be combined, in whole or in part, or may be distinct, according to particular needs.","Server system  may include one or more computer systems  at one or more locations. Each computer system may include any appropriate input devices, output devices, mass storage media, processors, memory, or other suitable components for receiving, processing, storing, and communicating data. For example, each computer system may include a personal computer, workstation, network computer, kiosk, wireless data port, PDA, one or more IP telephones, one or more servers, a server pool, one or more processors within these or other devices, or any other suitable processing device. Server system  may be a stand-alone computer or may be a part of a larger network of computers associated with an entity.","Each computer system  of server system  may include processing unit  and memory unit . Processing unit  may include one or more microprocessors, controllers, or any other suitable computing devices or resources. Processing unit  may work, either alone or with other components of system , to provide a portion or all of the functionality of system  described herein. Memory unit  may take the form of volatile or non-volatile memory including, without limitation, magnetic media, optical media, RAM, ROM, removable media, or any other suitable memory component.","Server system  may facilitate making computing resources on hosts  available over a network (which may or may not be network ) and may manage the provision of computing resources on hosts  to other computing systems over the network. For example, server system  may control access to and rationing of computing resources on hosts  to other computing systems over a network.","Server system  may be operable to access or otherwise communicate with a storage module . In some embodiments, for example, server system  communicates with storage module  over network . Storage module  may take the form of volatile or non-volatile memory including, without limitation, magnetic media, optical media, RAM, ROM, removable media, or any other suitable memory component. In certain embodiments, a portion of all of storage module  may include a database, such as one or more SQL servers or relational databases. Storage module  may be a part of or distinct from memory unit  of server system .","Storage module  may store a variety of information and applications that may be used by server system , hosts , or other suitable components of system . In the illustrated example, storage module  may store logic , machine image layers , dependencies , and user selections , each of which are described in greater detail below. Although storage module  is described as including this particular information and applications, storage module  may store any other suitable information and applications. Furthermore, although these particular information and applications are described as being stored in storage module , the present description contemplates storing this particular information and applications in any suitable location, according to particular needs.","Hosts  may include any suitable computing resources that may be made available over a network (which may or may not be network ). Hosts  may be communicatively coupled to network and may include any suitable combination of hardware, firmware, and software. As just a few examples, hosts  may include any suitable combination of applications, power, processors, storage, and any other suitable computing resources that may be made available over a network. Hosts  may each be substantially similar to one another or may be heterogeneous. As described above, entities accessing computing services provided by provisioned computing resources environment  may gain access to a suite of elastic IT infrastructure services (e.g., computing resources on hosts ) as the entity requests those services. Provisioned computing resources environment  may provide a scalable, reliable, and secure distributed computing infrastructure. Herein \u201cavailable\u201d computer resources include computer resources that are currently available to be provisioned, computer resources that are currently in use but may become available for provisioning in the future, or computer resources that may be added to a pool of available computer resources and become available for provisioning in the future.","In the illustrated example, each host  comprises a processing unit , a memory unit , and a cache memory unit . Processing unit  may include one or more microprocessors, controllers, or any other suitable computing devices or resources. Processing unit  may work, either alone or with other components of system , to provide a portion or all of the functionality of system  described herein. Memory unit  and cache memory unit  may take the form of volatile or non-volatile memory including, without limitation, magnetic media, optical media, RAM, ROM, removable media, or any other suitable memory component. In certain embodiments, a portion or all of memory unit  may include a database, such as one or more structured query language (SQL) servers or relational databases.","In certain embodiments, cache memory unit  may be internal or external to processing unit  and may include one or more instruction caches or one or more data caches. Instructions in the instruction caches may be copies of instructions in memory unit  or storage module , and the instruction caches may speed up retrieval of those instructions by processing unit . Data in the data caches may include any suitable combination of copies of data in memory unit  or storage module  for instructions executing at processing unit  to operate on; the results of previous instructions executed at processing unit  for access by subsequent instructions executing at processing unit , or for writing to memory unit  or storage module ; and other suitable data. The data caches may speed up read or write operations by processing unit . In certain embodiments, as described in more detail below, machine image layers  may reside in cache memory units  in order to allow computing resources such as virtual machines.  on hosts  to be quickly and efficiently instantiated.","Logic  may comprise any suitable combination of hardware, firmware, and software. Logic  may handle any function or method described herein including analyzing user selections , determining which machine image layers  to instantiate based on user selections , and instantiating the determined machine image layers  on a particular host . In certain embodiments, logic  may be a part of a larger application for monitoring or otherwise managing the provision of computing resources  over a network.","As described briefly above, machine image layers  may be used to instantiate computer resources such as a virtual machine  on a particular host . Each machine image layer  comprises data that, when combined with one or more other machine image layers , forms a complete machine image which may then be used to instantiate a particular computer resource. Examples of particular machine image layers  may include: a machine image layer  for an operating system such as LINUX variants, MICROSOFT WINDOWS, and the like; a machine image layer  for a web server application such as TOMCAT, JETTY, and the like; a machine image layer  for a database application such as MYSQL and the like; a machine image layer  for a scripting language such as PHP and the like; and a machine image layer  for a custom customer application. While particular examples of machine image layers  have been cited, the disclosure contemplates machine image layers  for any appropriate computer application.","In some embodiments, machine image layers  comprise one or more software packages that have been assembled together. For example, a machine image layer  for a particular LINUX operating system may comprise various software packages that have been selected and grouped together based on a package dependency graph provided by the particular LINUX distributor. In other embodiments, machine image layers  may be created by grouping commonly-used software packages together. Example embodiments of the creation of machine image layers  are described in more detail below in reference to .","Machine image layers  may offer distinct advantages to customers of online service providers. For example, certain embodiment may present a customer with a series of choices on user system  that allows the customer to build custom machine images using pre-assembled and pre-approved machine image layers . As an illustration, a customer wanting to instantiate a web server may first be presented with the choice of pre-approved machine image layers  for various operating systems (e.g., LINUX variants, WINDOWS, etc.). Then, based on the customer's selection of operating system, the customer may be presented with appropriate pre-approved machine image layers  for particular web servers (e.g., TOMCAT, JETTY, etc.) that will function with the chosen operating system machine image layer . The customer experience may be improved as a result of offering the customer choices of pre-approved machine image layers .","Furthermore, in certain embodiments, image layers  may reduce storage space requirements and lower image launch times. For example, by storing machine image layers  instead of whole machine images and then assembling a machine image in real-time per a customer request using the stored machine image layers , an online service provider may have lower storage requirements. Furthermore, because certain popular machine image layers  may already reside in cache (e.g., cache memory unit ), the instantiation of a machine image that includes the certain machine image layer  may require less time. That is, if two machine images both utilize a particular image layer , the particular image layer  may only need to be cached once.","In operation of an example embodiment of system , server system  may receive via network a request  from user system  for computing system resources. In some embodiments, for example, request  may be for a virtual machine  to be instantiated on hosts . In response to request , server system  may transmit to user system  a list  of available machine image layers . In some embodiments, available machine image layers  may be presented to a user of user system  in a series of steps. For example, a first group of machine image layers  may be initially presented to user system  for selection by the user. After a selection from the first group of machine image layers  has been made, a second group of machine image layers  may be presented to user system  for selection by the user. In some embodiments, the second group of machine image layers  is based on the selection from the first group of machine image layers . This process may be repeated any number of times until an appropriate number of selections of machine image layers  have been made to form a complete machine image. The selections may then be transmitted as user selections  to server system  and stored on storage module .","Provisioned computing resources environment  or a particular host  may access user selections  in order to create and instantiate an appropriate machine image on hosts . For example, server system  or a particular host  may access user selections  and determine that a particular group of machine image layers  should be combined to form a machine image for the customer associated with the accessed user selections . After determining the particular group of machine image layers  to combine to form the machine image, server system  or a particular host  may access cache memory unit  of the particular host  and determine whether any of the particular group of machine image layers  are currently stored in the cache memory unit . If any of the particular machine image layers  are currently stored in cache memory unit , the particular machine image layers  may be instantiated on the particular host  without retrieving the particular machine image layers  from storage module . As a result, the time required to instantiate the particular machine image layers  may be reduced.","If, however, any of the particular machine image layers  are not currently stored in cache memory unit , a stored copy of the particular machine image layers  may be accessed from storage module  or any storage module external to hosts . In some embodiments, the stored copy of the particular machine image layer may be located using a uniform resource locator (URL) or any other appropriate method. After accessing the stored copy of the particular machine image layers  in storage module , the stored copy of the particular machine image layers  may then be received at the particular host , stored in cache memory unit , and instantiated on the particular host . An example embodiment of the instantiation of machine image layers  is described below in reference to .",{"@attributes":{"id":"p-0034","num":"0033"},"figref":"FIG. 2","b":["128","128","110","136","136","128","128","110","128","128","136","136","202","128","110","136","136","128","136","136","128","136","136"],"i":["a","c ","a ","a","e","b ","c ","a ","a","a ","a ","b ","a","a ","a ","a ","b"]},"As depicted in , virtual machine is to be instantiated on host using machine image layers and (as depicted with lines ). It may be determined, for example, that virtual machine should be instantiated using machine image layers and by accessing and analyzing user selections . In the illustrated embodiment, machine image layer already exists in cache memory unit since it was previously utilized to instantiate virtual machine . Therefore, machine image layers may be substantially immediately executed on host to at least partially instantiate virtual machine . Also, because machine image layer already exists in cache memory unit , a stored copy of machine image layer does not need to be retrieved from storage module , thereby decreasing the amount of time required to instantiate virtual machine . Machine image layer , however, was not previously utilized to instantiate virtual machine and therefore is not in cache memory unit when the process of instantiating virtual machine begins. Consequently, a stored copy of machine image layer is retrieved from storage module  and loaded into cache memory unit . In some embodiments, the stored copy of machine image layer may be additionally loaded into memory unit . Machine image layer may then be executed from cache memory unit , memory unit , or directly from storage module  in order to further instantiate virtual machine . Once instantiated, virtual machine may be accessed in some embodiments by a user via user system  directly through networks and ","In the illustrated embodiment, virtual machine is to be instantiated on host using machine image layers and (as depicted with lines ). In this case, however, neither machine image layer nor machine image layer was previously utilized to instantiate any virtual machines . Therefore, neither machine image layer nor machine image layer is stored in cache memory unit when the process of instantiating virtual machine begins. Consequently, a stored copy of both machine image layers and are retrieved from storage module  and loaded into cache memory unit . In some embodiments, the stored copy of machine image layers and may be additionally loaded into memory unit . Machine image layers and may be executed from cache memory unit , memory unit , or directly from storage module  in order to instantiate virtual machine . Even though machine image layers and were retrieved from storage module  and therefore likely took more time to execute than if they were already stored in cache memory unit , subsequent instantiations of virtual machines  using either machine image layer or may benefit because these machine image layers  will be stored in cache memory unit and available for substantially immediate execution.","As described above, machine image layers  may be created by grouping certain software packages together. For example, certain software packages for a particular application may be selected and grouped together to form a machine image layer  based on a dependency graph. An example embodiment of a dependency graph  and a method of grouping software packages to form a machine image layer  are illustrated below in reference to .",{"@attributes":{"id":"p-0038","num":"0037"},"figref":"FIG. 3","b":["300","136","300","302","302","304","304","300","138","108"],"i":["a","e ","a","g"]},"Dependency graph  provides information regarding software packages  and dependencies  between the software packages . For example, a certain embodiment of dependency graph  may indicate dependencies  between software packages  for an operating system. As an illustration, the illustrated embodiment of dependency graph  may be for a specific version of the LINUX operating system and software packages -may be the various software packages that may be combined to form variations of the specific version of the LINUX operating system. In some embodiments, for example, software package may be chosen for the specific version of the LINUX operating system. However, software package includes dependencies and which indicate that if software package is chosen, software packages and must also be chosen. Furthermore, software package includes dependencies and which indicate that if software package is chosen, software packages and must also be chosen. Consequently, if software package is chosen to be included in the specific version of the LINUX operating system, all of software packages -must also be chosen.","As another example, software package includes dependency which indicates that if software package is chosen, software package must also be chosen. Likewise, software package includes dependency which indicates that if software package is chosen, software package must also be chosen. That is, if either of software packages or are chosen to be included in the specific version of the LINUX operating system, both software packages and must be chosen.","In some embodiments, dependency graphs such as dependency graph  may be utilized to create machine image layers . For example, some embodiments may analyze dependency graph  and determine a quantity of dependencies  for each software package . As described above, for instance, software package includes two direct dependencies (i.e., dependencies and ) and the software packages  that depend from software package (i.e., software packages and ) include two additional unique dependencies (i.e., dependencies and ). Consequently, it may be determined that software package requires four additional software packages (i.e., software packages , , , and ). Likewise, as described above, both software packages and include a single dependency to each other. Consequently, it may be determined that software packages and each require one additional software package.","After determining the quantity of dependencies  for each software package , certain software packages  may be grouped together based on the determined number of dependencies . For example, certain embodiments may group software packages  together in order to minimize the number of dependencies . In the illustrated embodiment, software packages and may be grouped together into a group since the number of dependencies for each is one. As another example, software packages -may be grouped into a group since the number of dependencies for this group would be three. Conversely, certain embodiments may avoid including software package in a group since its selection would require the selection of the remainder of the illustrated software packages  (i.e., all of software packages -).","In some embodiments, certain software packages  may be grouped together based on usage patterns. As one example, one embodiment may determine how frequently software packages  have been used or selected in the past. As another example, embodiments may determine software packages  that are compatible with a user's prior user selection data  or selected machine image layers . As another example, a user's browsing history may be compared with other users' browsing history to determine software packages  that are likely to be chosen. In yet another example, software packages  may be grouped together based on data indicating that users who have chosen a particular software package  have also chosen another particular software package . While particular examples of usage patterns have been cited, the disclosure contemplates the grouping of software packages  together using any appropriate usage data.","In some embodiments, one or more machine image layers  may be created from grouped software packages . For example, a particular machine image layer  may be created that includes the software packages  of group described above (i.e., software packages and ). In another embodiment, a particular machine image layer  may be created that includes the software packages  of group described above (i.e., software packages , , and ). After machine image layers  are created, they may be stored in one or more memory units such as storage module .",{"@attributes":{"id":"p-0045","num":"0044"},"figref":["FIG. 4","FIG. 1"],"b":["400","100"]},"At step , user selection data is accessed. In some embodiments, the accessed user selection data is user selection data  described above and includes a plurality of selections associated with computing system resources available over a communication network. In some embodiments, the user selection data is accessed by any appropriate system of a provisioned computing resources environment such as one or more computer systems  of server system  or hosts  described above. In some embodiments, the computing system resources that are available over a communication network refer to computing system resources of hosts  described above.","At step , two or more particular machine image layers from a plurality of available machine image layers are determined, based on the user selection data accessed in step , to instantiate on a particular computing system resource. In some embodiments, the plurality of available machine image layers refers to machine image layers  and the particular computing system resource refers to a particular host  described above. In some embodiments, the determination of step  is performed by any appropriate system of a provisioned computing resources environment such as one or more computer systems  of server system  or hosts  described above.","At step , it is determined whether the particular machine image layers of step  are cached locally on one or more memory devices of the particular computing system resource. In some embodiments, the one or more memory devices of the particular computing system resource of step  refer to cache memory units  described above. If it is determined that a particular machine image layer of step  is cached locally on one or more memory devices of the particular computing system resource, method  proceeds to step . If it is determined that a particular machine image layer of step  is not cached locally on one or more memory devices of the particular computing system resource, method  proceeds to step .","At step , a stored copy of the particular machine image layer of step  that was determined to not be cached locally is located and accessed. In some embodiments, the stored copy of the particular machine image layer resides in memory external to the particular computing system resource, such as storage module  coupled to server system . In some embodiments, a URL is utilized to locate the stored copy of the particular machine image layer of step .","At step , the stored copy of the particular machine image layer is cached on the one or more memory devices of the particular computing system resource. In some embodiments, the one or more memory devices of the particular computing system resource of step  refer to cache memory units  described above. After the stored copy of the particular machine image layer is cached on the one or more memory devices of the particular computing system resource in step , method  proceeds to step .","At step , the particular machine image layers of step  are instantiated on the particular computing system resource. If a particular machine image layer already resided in local cache (i.e., method  arrived at step  directly from step ), the particular machine image layer is executed in step  from the local cache. If, however, a particular machine image layer did not already reside in local cache (i.e., method  arrived at step  through steps  and ), the particular machine image layer is executed in step  either from the local cache after it is cached in step , from the memory external to the particular computing system resource such as storage module , or from a local memory unit such as memory unit . After step , method  ends.","In certain embodiments, the above-described method may be performed in response to a user request (e.g., from user system ). In some embodiments, for example, method  may be performed in response to request  from user system  for computing system resources on hosts . In some embodiments, method  may be performed in response to any other appropriate event. For example, some embodiments may perform method  in response to computer system resources on a particular host  becoming available. The disclosure contemplates method  being performed at any appropriate time after receiving user request .",{"@attributes":{"id":"p-0053","num":"0052"},"figref":["FIG. 5","FIG. 1"],"b":["500","100","102","106","108","110","500","500","500","500","500"]},"This disclosure contemplates any suitable number of computer systems . This disclosure contemplates computer system  taking any suitable physical form. As example and not by way of limitation, computer system  may be an embedded computer system, a system-on-chip (SOC), a single-board computer system (SBC) (such as, for example, a computer-on-module (COM) or system-on-module (SOM)), a desktop computer system, a laptop or notebook computer system, an interactive kiosk, a mainframe, a mesh of computer systems, a mobile telephone, a personal digital assistant (PDA), a server, or a combination of two or more of these. Where appropriate, computer system  may include one or more computer systems ; be unitary or distributed; span multiple locations; span multiple machines; or reside in a cloud, which may include one or more cloud components in one or more networks. Where appropriate, one or more computer systems.  may perform without substantial spatial or temporal limitation one or more steps of one or more methods described or illustrated herein. As an example and not by way of limitation, one or more computer systems  may perform in real time or in batch mode one or more steps of one or more methods described or illustrated herein. One or more computer systems  may perform at different times or at different locations one or more steps of one or more methods described or illustrated herein, where appropriate.","In particular embodiments, computer system  includes a processor , memory , storage , an input\/output (I\/O) interface , a communication interface , and a bus . Although this disclosure describes and illustrates a particular computer system having a particular number of particular components in a particular arrangement, this disclosure contemplates any suitable computer system having any suitable number of any suitable components in any suitable arrangement.","In particular embodiments, processor  includes hardware for executing instructions, such as those making up a computer program. As an example and not by way of limitation, to execute instructions, processor  may retrieve (or fetch) the instructions from an internal register, an internal cache, memory , or storage ; decode and execute them; and then write one or more results to an internal register, an internal cache, memory , or storage . In particular embodiments, processor  may include one or more internal caches for data, instructions, or addresses. The present disclosure contemplates processor  including any suitable number of any suitable internal caches, where appropriate. As an example and not by way of limitation, processor  may include one or more instruction caches, one or more data caches, and one or more translation lookaside buffers (TLBs). Instructions in the instruction caches may be copies of instructions in memory  or storage , and the instruction caches may speed up retrieval of those instructions by processor . Data in the data caches may be copies of data in memory  or storage  for instructions executing at processor  to operate on; the results of previous instructions executed at processor  for access by subsequent instructions executing at processor  or for writing to memory  or storage ; or other suitable data. The data caches may speed up read or write operations by processor . The TLBs may speed up virtual-address translation for processor . In particular embodiments, processor  may include one or more internal registers for data, instructions, or addresses. The present disclosure contemplates processor  including any suitable number of any suitable internal registers, where appropriate. Where appropriate, processor  may include one or more arithmetic logic units (ALUs); be a multi-core processor; or include one or more processors . Although this disclosure describes and illustrates a particular processor, this disclosure contemplates any suitable processor.","In particular embodiments, memory  includes main memory for storing instructions for processor  to execute or data for processor  to operate on. As an example and not by way of limitation, computer system  may load instructions from storage  or another source (such as, for example, another computer system ) to memory . Processor  may then load the instructions from memory  to an internal register or internal cache. To execute the instructions, processor  may retrieve the instructions from the internal register or internal cache and decode them. During or after execution of the instructions, processor  may write one or more results (which may be intermediate or final results) to the internal register or internal cache. Processor  may then write one or more of those results to memory . In particular embodiments, processor  executes only instructions in one or more internal registers or internal caches or in memory  (as opposed to storage  or elsewhere) and operates only on data in one or more internal registers or internal caches or in memory  (as opposed to storage  or elsewhere). One or more memory buses (which may each include an address bus and a data bus) may couple processor  to memory . Bus  may include one or more memory buses, as described below. In particular embodiments, one or more memory management units (MMUs) reside between processor  and memory  and facilitate accesses to memory  requested by processor . In particular embodiments, memory  includes RAM. This RAM may be volatile memory, where appropriate Where appropriate, this RAM may be dynamic RAM (DRAM) or static RAM (SRAM). Moreover, where appropriate, this RAM may be single-ported or multi-ported RAM. The present disclosure contemplates any suitable RAM. Memory  may include one or more memories , where appropriate. Although this disclosure describes and illustrates particular memory, this disclosure contemplates any suitable memory.","In particular embodiments, storage  includes mass storage for data or instructions. As an example and not by way of limitation, storage  may include an HDD, a floppy disk drive, flash memory, an optical disc, a magneto-optical disc, magnetic tape, or a Universal Serial Bus (USB) drive or a combination of two or more of these. Storage  may include removable or non-removable (or fixed) media, where appropriate. Storage  may be internal or external to computer system , where appropriate. In particular embodiments, storage  is non-volatile, solid-state memory. In particular embodiments, storage  includes ROM. Where appropriate, this ROM may be mask-programmed ROM, programmable ROM (PROM), erasable PROM (EPROM), electrically erasable PROM (EEPROM), electrically alterable ROM (EAROM), or flash memory or a combination of two or more of these. This disclosure contemplates mass storage  taking any suitable physical form. Storage  may include one or more storage control units facilitating communication between processor  and storage , where appropriate. Where appropriate, storage  may include one or more storages . Although this disclosure describes and illustrates particular storage, this disclosure contemplates any suitable storage.","In particular embodiments, I\/O interface  includes hardware, software, or both providing one or more interfaces for communication between computer system  and one or more I\/O devices. Computer system  may include one or more of these I\/O devices, where appropriate. One or more of these I\/O devices may enable communication between a person and computer system . As an example and not by way of limitation, an I\/O device may include a keyboard, keypad, microphone, monitor, mouse, printer, scanner, speaker, still camera, stylus, tablet, touch screen, trackball, video camera, another suitable I\/O device or a combination of two or more of these. An I\/O device may include one or more sensors. This disclosure contemplates any suitable I\/O devices and any suitable I\/O interfaces  for them. Where appropriate, I\/O interface  may include one or more device or software drivers enabling processor  to drive one or more of these I\/O devices. I\/O interface  may include one or more I\/O interfaces , where appropriate. Although this disclosure describes and illustrates a particular I\/O interface, this disclosure contemplates any suitable I\/O interface.","In particular embodiments, communication interface  includes hardware, software, or both providing one or more interfaces for communication (such as, for example, packet-based communication) between computer system  and one or more other computer systems  or one or more networks. As an example and not by way of limitation, communication interface  may include a network interface controller (NIC) or network adapter for communicating with an Ethernet or other wire-based network or a wireless NIC (WNIC) or wireless adapter for communicating with a wireless network, such as a WI-FI network. This disclosure contemplates any suitable network and any suitable communication interface  for it. As an example and not by way of limitation, computer system  may communicate with an ad hoc network, a PAN, a LAN, a WAN, a MAN, or one or more portions of the Internet or a combination of two or more of these. One or more portions of one or more of these networks may be wired or wireless. As an example, computer system  may communicate with a wireless PAN (WPAN) (such as, for example, a BLUETOOTH WPAN), a WI-FI network, a WI-MAX network, a cellular telephone network (such as, for example, a Global System for Mobile Communications (GSM) network), or other suitable wireless network or a combination of two or more of these. Computer system  may include any suitable communication interface  for any of these networks, where appropriate. Communication interface  may include one or more communication interfaces , where appropriate. Although this disclosure describes and illustrates a particular communication interface, this disclosure contemplates any suitable communication interface.","In particular embodiments, bus  includes hardware, software, or both coupling components of computer system  to each other. As an example and not by way of limitation, bus  may include an Accelerated Graphics Port (AGP) or other graphics bus, an Enhanced Industry Standard Architecture (EISA) bus, a front-side bus (FSB), a HYPERTRANSPORT (HT) interconnect, an Industry Standard Architecture (ISA) bus, an INFINIBAND interconnect, a low-pin-count (LPC) bus, a memory bus, a Micro Channel Architecture (MCA) bus, a Peripheral Component Interconnect (PCI) bus, a PCI-Express (PCI-X) bus, a serial advanced technology attachment (SATA) bus, a Video Electronics Standards Association local (VLB) bus, or another suitable bus or a combination of two or more of these. Bus  may include one or more buses , where appropriate. Although this disclosure describes and illustrates a particular bus, this disclosure contemplates any suitable bus or interconnect.","Herein, reference to a computer-readable storage medium encompasses one or more non-transitory, tangible computer-readable storage media possessing structure. As an example and not by way of limitation, a computer-readable storage medium may include a semiconductor-based or other integrated circuit (IC) (such, as for example, a field-programmable gate array (FPGA) or an application-specific IC (ASIC)), a hard disk, an HDD, a hybrid hard drive (HHD), an optical disc, an optical disc drive (ODD), a magneto-optical disc, a magneto-optical drive, a floppy disk, a floppy disk drive (FDD), magnetic tape, a holographic storage medium, a solid-state drive (SSD), a RAM-drive, a SECURE DIGITAL card, a SECURE DIGITAL drive, or another suitable computer-readable storage medium or a combination of two or more of these, where appropriate. Herein, reference to a computer-readable storage medium excludes any medium that is not eligible for patent protection under 35 U.S.C. \u00a7101. Herein, reference to a computer-readable storage medium excludes transitory forms of signal transmission (such as a propagating electrical or electromagnetic signal per se) to the extent that they are not eligible for patent protection under 35 U.S.C. \u00a7101. A computer-readable non-transitory storage medium may be volatile, non-volatile, or a combination of volatile and non-volatile, where appropriate.","This disclosure contemplates one or more computer-readable storage media implementing any suitable storage. In particular embodiments, a computer-readable storage medium implements one or more portions of processor  (such as, for example, one or more internal registers or caches), one or more portions of memory , one or more portions of storage , or a combination of these, where appropriate. In particular embodiments, a computer-readable storage medium implements RAM or ROM. In particular embodiments, a computer-readable storage medium implements volatile or persistent memory. In particular embodiments, one or more computer-readable storage media embody software. Herein, reference to software may encompass one or more applications, bytecode, one or more computer programs, one or more executables, one or more instructions, logic, machine code, one or more scripts, or source code, and vice versa, where appropriate. In particular embodiments, software includes one or more application programming interfaces (APIs). This disclosure contemplates any suitable software written or otherwise expressed in any suitable programming language or combination of programming languages. In particular embodiments, software is expressed as source code or object code. In particular embodiments, software is expressed in a higher-level programming language, such as, for example, C, Perl, or a suitable extension thereof. In particular embodiments, software is expressed in a lower-level programming language, such as assembly language (or machine code). In particular embodiments, software is expressed in JAVA. In particular embodiments, software is expressed in Hyper Text Markup Language (HTML), Extensible Markup Language (XML), or other suitable markup language.","Particular embodiments may be implemented in a network environment.  illustrates an example network environment . Network environment  includes a network  coupling one or more servers  and one or more clients  to each other. In particular embodiments, network  is an intranet, an extranet, VPN, LAN, a WLAN, a WAN, a MAN, a communications network, a satellite network, a portion of the Internet, or another network  or a combination of two or more such networks . The present disclosure contemplates any suitable network .","One or more links  couple servers  or clients  to network . In particular embodiments, one or more links  each includes one or more wired, wireless, or optical links . In particular embodiments, one or more links  each includes an intranet, an extranet, a VPN, a LAN, a WLAN, a WAN, a MAN, a communications network, a satellite network, a portion of the Internet, or another link  or a combination of two or more such links . The present disclosure contemplates any suitable links  coupling servers  and clients  to network .","In particular embodiments, each server  may be a unitary server or may be a distributed server spanning multiple computers or multiple datacenters. Servers  may be of various types, such as, for example and without limitation, web server, news server, mail server, message server, advertising server, file server, application server, exchange server, database server, or proxy server. In particular embodiments, each server  may include hardware, software, or embedded logic components or a combination of two or more such components for carrying out the appropriate functionalities implemented or supported by server . For example, a web server is generally capable of hosting websites containing web pages or particular elements of web pages. More specifically, a web server may host HTML files or other file types, or may dynamically create or constitute files upon a request, and communicate them to clients  in response to HTTP or other requests from clients . A mail server is generally capable of providing electronic mail services to various clients . A database server is generally capable of providing an interface for managing data stored in one or more data stores.","In particular embodiments, each client  may be an electronic device including hardware, software, or embedded logic components or a combination of two or more such components and capable of carrying out the appropriate functionalities implemented or supported by client . For example and without limitation, a client  may be a desktop computer system, a notebook computer system, a netbook computer system, a handheld electronic device, or a mobile telephone. A client  may enable a network user at client  to access network . A client  may have a web browser, such as MICROSOFT INTERNET EXPLORER or MOZILLA FIREFOX, and may have one or more add-ons, plug-ins, or other extensions, such as GOOGLE TOOLBAR or YAHOO TOOLBAR. A client  may enable its user to communicate with other users at other clients . The present disclosure contemplates any suitable clients .","In particular embodiments, one or more data storages  may be communicatively linked to one or more servers  via one or more links . In particular embodiments, data storages  may be used to store various types of information. In particular embodiments, the information stored in data storages  may be organized according to specific data structures. Particular embodiments may provide interfaces that enable servers  or clients  to manage (e.g., retrieve, modify, add, or delete) the information stored in data storage .","In particular embodiments, a server  may include hardware, software, or embedded logic components or a combination of two or more such components for carrying out the appropriate functionalities of server . In particular embodiments, a server  may also include a data monitor\/collector . Data monitor\/collection  may include hardware, software, or embedded logic components or a combination of two or more such components for carrying out the appropriate functionalities implemented or supported by data collector\/collector . For example and without limitation, data monitor\/collector  may monitor and collect network traffic data at server  and store the collected network traffic data in one or more data storage .","Herein, \u201cor\u201d is inclusive and not exclusive, unless expressly indicated otherwise or indicated otherwise by context. Therefore, herein, \u201cA or B\u201d means \u201cA, B, or both,\u201d unless expressly indicated otherwise or indicated otherwise by context. Moreover, \u201cand\u201d is both joint and several, unless expressly indicated otherwise or indicated otherwise by context. Therefore, herein, \u201cA and B\u201d means \u201cA and B, jointly or severally,\u201d unless expressly indicated otherwise or indicated otherwise by context.","This disclosure encompasses all changes, substitutions, variations, alterations, and modifications to the example embodiments herein that a person having ordinary skill in the art would comprehend. Similarly, where appropriate, the appended claims encompass all changes, substitutions, variations, alterations, and modifications to the example embodiments herein that a person having ordinary skill in the art would comprehend. Moreover, reference in the appended claims to an apparatus or system or a component of an apparatus or system being adapted to, arranged to, capable of, configured to, enabled to, operable to, or operative to perform a particular function encompasses that apparatus, system, component, whether or not it or that particular function is activated, turned on, or unlocked, as long as that apparatus, system, or component is so adapted, arranged, capable, configured, enabled, operable, or operative."],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"BRIEF DESCRIPTION OF THE DRAWINGS","p":["For a more complete understanding of the present disclosure and its advantages, reference is made to the following descriptions, taken in conjunction with the accompanying drawings, in which:",{"@attributes":{"id":"p-0004","num":"0003"},"figref":"FIG. 1"},{"@attributes":{"id":"p-0005","num":"0004"},"figref":["FIG. 2","FIG. 1"]},{"@attributes":{"id":"p-0006","num":"0005"},"figref":["FIG. 3","FIG. 1"]},{"@attributes":{"id":"p-0007","num":"0006"},"figref":["FIG. 4","FIG. 1"]},{"@attributes":{"id":"p-0008","num":"0007"},"figref":["FIGS. 5 and 6","FIG. 1"]}]},"DETDESC":[{},{}]}
