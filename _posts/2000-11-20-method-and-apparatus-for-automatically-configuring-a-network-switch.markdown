---
title: Method and apparatus for automatically configuring a network switch
abstract: A method and apparatus for automatically configuring a network switch having external network data ports, a processor, and memory. Network data is monitored on the external network data port. Information about the network data traffic is compared to one or more threshold conditions. The network switch is automatically configured if the network data meets one of the threshold conditions. The monitor and configuration functions can be performed by software running on the processor which has been downloaded from an external network maintenance station through a maintenance data port. Information about the network data traffic can be uploaded to the external network maintenance station through a maintenance data port.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=06850989&OS=06850989&RS=06850989
owner: Nortel Networks Limited
number: 06850989
owner_city: St. Laurent
owner_country: CA
publication_date: 20001120
---

{"@attributes":{"id":"description"},"RELAPP":[{},{}],"heading":["CROSS-REFERENCES TO RELATED APPLICATIONS","FIELD OF THE INVENTION","BACKGROUND OF THE INVENTION","SUMMARY OF THE INVENTION","DETAILED DESCRIPTION OF A PREFERRED EMBODIMENT OF THE PRESENT INVENTION"],"p":["This is a continuation of U.S. patent application (application Ser. No. 09\/079,890) filed May 15, 1998, which has now matured to U.S. Pat. No. 6,175,868.","This invention relates generally to data communications networks, and more particularly, to a method and apparatus for automatically configuring a network switch.","Computer networks are used to interconnect many computing resources, including computers, workstations, servers, printers, modems, and storage devices. For example, two or more computers may be connected together through a network. Network users are able to share files, printers and other resources, send messages and run applications on remote computers. An important part of any computer network includes the physical components or network communications devices used to interconnect the computing resources.","One network communications device used to interconnect multiple computing resources is a chassis-based system designed to accommodate a number of internal cards. The computing resources such as computers are coupled to the internal cards of the chassis-based system. Once the computers are coupled to the internal cards, the computers are coupled to the network. To accommodate network growth, additional internal cards may be purchased and added to the chassis-based system. With the additional internal cards installed, additional computing resources may be added to the network. A disadvantage of these chassis-based systems is that there is a relatively large initial investment when purchasing the chassis because of the large amount of overhead associated with chassis-based systems.","An alternative to expensive chassis-based systems is the use of less expensive standalone network communications devices or units that have a fixed number of ports for connecting computing resources or stations to the network. Such standalone network communications devices include stackable switches or the like. Although additional ports can not be added to each individual standalone unit, separate standalone units can be stacked, cascaded or coupled to accommodate network growth. As a result, there is a lower startup cost when establishing a computer network with the standalone units in comparison with chassis-based systems. Furthermore, network administrators still have the flexibility to increase the size of the network with the less-expensive standalone units.",{"@attributes":{"id":"P-00007","num":"00007"},"figref":"FIG. 1","b":["103","105","107","109","111","101","103","105","107","109","111","103","105","107","109","111","113","113","101","113"]},"The use of stackable switches allows network administrators to build systems having multiple physical ports to various computing resources on the network. Different types of network use patterns may typically be handled most efficiently by different configurations of a network switch. Currently, a network administrator must manually monitor and analyze network traffic patterns, and also manually make any changes to the configuration of a network switch through the use of an external network maintenance station (NMS). Although some network switches may have data gathering and reporting capabilities, a network administrator must still take a considerable amount of time to analyze the network traffic pattern and manually reconfigure the switch. Delays in rerouting network traffic are directly related to the time required to analyze network traffic and reconfigure a network switch by a network administrator.","Therefore, there is a need for a way to automatically monitor and configure a network switch according to changes in network traffic. There is a further need to automatically configure a network switch which does not reduce the flow of data through the switch.","The present invention provides a method and apparatus for automatically configuring a network switch having external network data ports, a processor, and memory. Network data is monitored on the external network data port. Information about the network data traffic is compared to one or more threshold conditions. The network switch is automatically configured if the network data meets one of the threshold conditions. The monitor and configuration functions can be performed by software running on the processor which has been downloaded from an external network maintenance station through a maintenance data port. Information about the network data traffic can be uploaded to the external network maintenance station through a maintenance data port.","In the following description of a preferred embodiment, reference is made to the accompanying drawings which form a part hereof, and in which is shown by way of illustration a specific embodiment in which the invention may be practiced. It is to be understood that other embodiments may be utilized and structural changes may be made without departing from the scope of the present invention.","The present invention provides for a method and apparatus for automatically configuring a network switch having external network data ports, a processor, and memory. Network data is monitored on the external network data port. Information about the network data traffic is compared to one or more threshold conditions. The network switch is automatically configured if the network data meets one of the threshold conditions. The monitor and configuration functions can be performed by software running on the processor which has been downloaded from an external network maintenance station through a maintenance data port. Information about the network data traffic can be uploaded to the external network maintenance station through a maintenance data port.","For the purpose of illustration, one embodiment of present invention is described below in the context of a Java virtual machine in a Java development environment. Information and specifications relating to the Java development environment are described in the document \u201cJava Virtual Machine Specification\u201d, October, 1997, Sun Microsystems. It will be recognized by one of ordinary skill in the art that the present invention may be used with other development environments without loss of generality, such as Microsoft Visual C\/C++.","Java is a programming language similar to the object-oriented language C++, and consists of runtime libraries. These libraries provide a standard set of facilities for manipulating the user interface, communicating across a network, etc. Two Java runtime libraries, remote method invocation (RMI) and and Java native interface (JNI) allow a single application to run on multiple hardware platforms without modification.","Java preferably isolates applications from both hardware and operating systems. Unlike traditional computer programs, which are almost always compiled for a hardware platform using tools that preclude their running on anything else, Java applications can be designed to run on any system that has a Java Virtual Machine (VM), also known as a Java Runtime Engine. The VM takes Java byte code and transforms it on the fly into instructions that can be executed by the PC. The same byte code can be interpreted as hardware-level instructions for any other platform with a VM implementation.","Java can be used to create two types of programs: applications and applets. Java applications, like those written in other languages, are standalone programs. They require a VM to run, but this runtime environment may be separate, embedded in the OS or in the application itself. Applets rely on a Web browser with a VM (such as Microsoft Internet Explorer or Netscape Communicator). Since applets are designed to be downloaded, they are also typically much smaller than applications.","In addition to platform independence, Java applications offer several other advantages. First, Java was designed for network computing and makes hiding the differences between local and remote resources easy. This allows Java to be used with thin-client computing, in which most of the processing and storage is handled by a server, while the client is used largely for display and interaction. Typical thin clients include network computers (NCs), which are low-cost personal computers typically connected to a private or public network. Second, the Java programming language has a rigorous object-oriented model that makes it possible to build modular applications. An end user need only download a particular feature of a Java word processor when needed, for example. This dynamic design also lets developers create custom desktop environments that display only those applications required by each end user.","The Java platform or runtime environment is the platform that enables Java applications and applets to run on any system regardless of the operating system and underlying hardware. Rather than compiling code into a format designed for a specific platform, developers compile Java source code into an intermediate form, bytecode, which can be executed on any system with a runtime environment. A Class Loader transfers the Java bytecode to the Java Virtual Machine (JVM). As the heart of the Java platform, the JVM is basically a software CPU that sits between applications and the platform consisting of the operating system and hardware. The JVM interprets bytecode for the platform or uses a just-in-time (JIT) compiler to convert the bytecode to machine code for that specific platform. Java class libraries, which are files that make up the standard application programming interface (API) for applications and applets, are also loaded dynamically as needed.","The runtime system, which manages threads, memory, and other system resources, preferably executes the interpreted or machine code on the end platform. The program may be run within a browser as an applet, or as a standalone application.","JavaBeans are reusable building blocks that make up object-oriented Java programs. JavaBeans are defined by an API specification for a visual component architecture based on the Java language. Preferably, any Java components conforming to the JavaBeans component model can be reused in any other JavaBean-compliant application.","The present invention is used to configure a network switch or other apparatus having a processor and memory which can be modified through software.  show alternative network switch configurations typically chosen by a network administrator, and which may be automatically configured by the present invention.  shows a L2 switch configuration;  shows a configuration which routes or switches on any port;  shows a configuration which routes on all ports;  shows a configuration which creates virtual local area networks (VLANs) by policy or port;  shows a configuration which routes between VLANs with simple software configurations;  shows a configuration which demonstrates arbitrary network routing and switching. It will be recognized by one of ordinary skill in the art that configurations shown in  are for illustration purposes only, and that other configurations may be implemented with the present invention without loss of generality. Different applications or users may be assigned different priorities. For example, high level network applications such as real-time network monitoring and two-way voice and video may be given a low priority, equivalent to that of non-critical email or internet browsing. Alternatively, an important user such as a corporate CEO may be given a higher network priority than other employees.",{"@attributes":{"id":"P-00033","num":"00033"},"figref":"FIG. 3","b":["301","305","305","303","301","305","311","301","305","311","305","305","305","311","305","315","301","307","315","305","301","307","315","315","313","301","307","305","309","305"]},{"@attributes":{"id":"P-00034","num":"00034"},"figref":"FIG. 4","b":["401","403","405","407","403","403","411","409","415","403","421","423"]},{"@attributes":{"id":"P-00035","num":"00035"},"figref":"FIG. 5","b":["501","503","505","503","507","509","505","513","511","501","511","515","517","519","521","501"]},{"@attributes":{"id":"P-00036","num":"00036"},"figref":"FIG. 6","b":["601","603","605","607","609","611","613","615","617","619","621","601","623","625","627","629"]},{"@attributes":{"id":"P-00037","num":"00037"},"figref":"FIG. 7","b":["701","703","705","707","709","711","707","715","713","721","717","719"]},{"@attributes":{"id":"P-00038","num":"00038"},"figref":"FIG. 8","b":["801","803","807","805","803","807","809","811","803","815","813","803"]},{"@attributes":{"id":"P-00039","num":"00039"},"figref":"FIG. 9","b":["901","909","913","903","905","909","907","903","905","911","905","907","909","913","901"]},{"@attributes":{"id":"P-00040","num":"00040"},"figref":"FIG. 10","b":["1001","1003","1004","1005","1006","1007","1007","1008","1009","1010","1013","1011","1012","1003"]},"While the invention is described in terms of preferred embodiments in a specific system environment, those of ordinary skill in the art will recognize that the invention can be practiced, with modification, in other and different hardware and software environments within the spirit and scope of the appended claims."],"BRFSUM":[{},{}],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"BRIEF DESCRIPTION OF THE DRAWINGS","p":["The present invention is illustrated by way of example and may be better understood by referring to the following description in conjunction with the accompanying drawings, in which like references indicate similar elements and in which:",{"@attributes":{"id":"P-00012","num":"00012"},"figref":"FIG. 1"},{"@attributes":{"id":"P-00013","num":"00013"},"figref":"FIGS. 2A-2F"},{"@attributes":{"id":"P-00014","num":"00014"},"figref":"FIG. 3"},{"@attributes":{"id":"P-00015","num":"00015"},"figref":"FIG. 4"},{"@attributes":{"id":"P-00016","num":"00016"},"figref":"FIG. 5"},{"@attributes":{"id":"P-00017","num":"00017"},"figref":"FIG. 6"},{"@attributes":{"id":"P-00018","num":"00018"},"figref":"FIG. 7"},{"@attributes":{"id":"P-00019","num":"00019"},"figref":"FIG. 8"},{"@attributes":{"id":"P-00020","num":"00020"},"figref":"FIG. 9"},{"@attributes":{"id":"P-00021","num":"00021"},"figref":"FIG. 10"}]},"DETDESC":[{},{}]}
