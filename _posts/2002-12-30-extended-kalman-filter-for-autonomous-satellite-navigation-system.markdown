---
title: Extended kalman filter for autonomous satellite navigation system
abstract: An autonomous navigation system for an orbital platform incorporating a global positioning system based navigation device optimized for low-Earth orbit and medium-Earth orbit applications including a 12 channel, GPS tracking application-specific integrated circuit () operating in concert with a computer system () implementing an extended Kalman filter and orbit propagator which autonomously generates estimates of position, velocity and time to enable planning, prediction and execution of event-based commanding of mission operations.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=06859170&OS=06859170&RS=06859170
owner: The Johns Hopkins University
number: 06859170
owner_city: Baltimore
owner_country: US
publication_date: 20021230
---

{"@attributes":{"id":"description"},"RELAPP":[{},{}],"heading":["CROSS-REFERENCE TO RELATED APPLICATION","STATEMENT OF GOVERNMENTAL INTEREST","BACKGROUND OF THE INVENTION","OBJECTIVES OF THE INVENTION","SUMMARY OF THE INVENTION","DESCRIPTION OF THE PREFERRED EMBODIMENT"],"p":["This application is a division of prior filed U.S. application Ser. No. 09\/295,544, filed Apr. 21, 1999 now U.S. Pat. No. 6,608,589.","The Government has rights in this invention pursuant to Contract No. NAS5-97271 awarded by the National Aeronautics and Space Administration.","1. Field of the Invention","This invention relates to global positioning system based navigation techniques for developing position and velocity data required for autonomous operation of satellites incorporating on-board, event-based command systems.","2. Discussion of the Related Art","Spacecraft tracking and navigation began when The Johns Hopkins University Applied Physics Laboratory determined Sputnik's orbital parameters as a function of the doppler shift of an on-board radio beacon. That was in 1957. Soon thereafter, that organization devised and developed the Navy Transit Satellite Navigation System which provided global navigation services for the military and civilian community for over 35 years. The \u201cTRANSIT\u201d system used a network of low earth orbit satellites and therefore it was unacceptable for most spacecraft navigation applications.","A limited number of experimental systems developed by the Applied Physics Laboratory (APL), NASA and the U.S. Air Force provided semi-autonomous means for orbit determination and prediction. The experimental system provided ground-based orbit determination for spacecraft through the use of complex ground stations and coherent transponders that reside on the spacecraft to be tracked. The French National Space Agency has operated a similar system, DORIS, since the early 1990s. However, the high cost of operating such systems has forced spacecraft operators to find other tracking methods.","Over the last three decades, APL and other organizations have demonstrated the feasibility of using GPS for positioning satellites and other high dynamic platforms. For over 20 years, the APL developed SATRACK system has utilized GPS translators and ground-based signal processing systems for trajectory reconstruction and guidance system evaluation of Navy Trident missiles. The first GPS-based navigation of a satellite occurred on Transat, an APL spacecraft launched in 1978 and operated for over 10 years. Transat was a Transit navigation satellite with an on-board GPS translator.","Autonomous positioning of satellites using space borne GPS receivers was first demonstrated in the early 1980s when APL developed and flew four GPSPAC systems, and in the early to mid 1990s when NASA and the Jet Propulsion Laboratory used GPS receivers on the TOPEX\/Poseidon spacecraft. More recently, other programs have adopted the use of GPS-based navigation systems for spacecraft. For instance, U.S. Pat. No. 5,109,346 for \u201cAutonomous Spacecraft Navigation System\u201d issued to J. Wertz on Apr. 28, 1992 describes a system using onboard observations of the earth, sun and moon to determine spacecraft attitude, instantaneous position and orbit based on multiple position estimates. Position and orbit data are derived by multiple deterministic solutions, including some that employ star sensors and gyros, and the multiple solutions are accumulated in a Kalman filter to provide continuous estimates of position and orbit for use when the sun or moon is not visible.","Developing totally autonomous satellites results in large cost savings because of the elimination of ground support stations. In addition, ground supported satellites are subject to ongoing maintenance costs and are prone to serious malfunction if ground support stations are damaged or if control signal transmissions are interfered with.","A primary objective of the present invention is to provide a satellite for collecting data which utilizes on-board event-based command techniques relying on a navigation system which uses an extended Kalman filter to process data derived from a plurality of global positioning satellites.","A further objective of the present invention is to provide an orbital platform for collecting data which utilizes an autonomous navigation system incorporating an application specific integrated circuit for processing signals from global positioning satellites in concert with an extended Kalman filter.","Another objective is to provide an autonomous, on-board, event-based command system responsive to a GPS based navigation system for controlling data collection functions on-board low-earth-orbit and medium-earth-orbit satellites.","A further objective of the invention is to provide an extended Kalman filter combined with an application specific integrated circuit for determining continuous real time earth-sun vector data, from a GPS constellation comprised of at least four satellites.","A still further objective is to provide an autonomous navigation system whose primary input data is derived from at least four satellites of a GPS constellation.","An objective of the invention is to provide an extended Kalman filter for interpreting data, from a GPS constellation comprised of at least four satellites and predicting ground contact event times therefrom.","Another objective is to provide an application specific integrated circuit for processing data required for tracking global positioning system satellites.","A further objective of the invention is to provide an extended Kalman filter combined with an application specific integrated circuit for interpreting data, from a GPS constellation comprised of at least four satellites, as continuous real-time orbital platform position and velocity.","A still further objective of the invention is to provide an extended Kalman filter combined with an application specific integrated circuit for propagating state vectors to allow estimating future orbital platform position from a GPS constellation comprised of at least four satellites.","The primary purpose of the present invention is to provide an autonomous navigation system for satellites to be employed in NASA's Solar Terrestrial Probe Program for measuring Thermosphere, Ionosphere, Mesosphere, Energetics, and Dynamics (TIMED). The TIMED program is a remote atmospheric remote sensing mission to study the interaction of the Sun and Earth's atmosphere. This spacecraft serves as an orbital platform for four instruments that measure the basic state parameters and energy balance of the mesospheric, lower thermospheic, and ionospheric regions, i.e. MLTI regions of the atmosphere. The program investigates and documents the energetics of the MLTI region, i.e., its pressure, temperature, density, and wind structure and the relative importance of various sources and sinks of energy. To make the required measurements, a 625-km circular orbit inclined 74.1 degrees with a nodal regression of 7200 per year is used. On-orbit instruments augmented by an array of ground-based instruments provide the basic measurements required by the mission. The instruments require precise knowledge of position and velocity of the orbital platform to perform their mission. This is accomplished by the autonomous navigation and time keeping system which provides position, velocity, time, and earth-sun vector data and notification of defined orbital events in real-time. It also generates predictions of events such as ground stations contacts. In addition, it generates orbital element sets which are down-linked for use by ground station antenna pointing systems. The navigation system contains two processors; a tracking processor which is responsible for controlling and interacting with GPS hardware in order to obtain raw tracking data and the navigation processor which is responsible for command and telemetry handling, determination of navigation solutions, generation of tracking acquisition aids and generation of the output data products. To simplify command control, the GPS based navigation system (GNS) is used to produce accurate estimates of position, velocity, and time to an event-based command system.","The GNS uses SPS ranging signals broadcast from the constellation of GPS satellites. The SPS ranging signal, referred to as L is Binary Phase Shift Key (BPSK) modulated. The modulation consists of two components that are modulo-2 summed: (1) a 1.023 MHz Pseudo-Random Noise (PRN) code known as the coarse acquisition (CA) code and (2), a 50 Hz navigation message. The CA code sequence repeats every 1 ms. The GNS receiver demodulates the received code from the L carrier, and detects the time offset between the received and a locally generated replica of the code. The receiver also reconstructs the navigation message data.","To compute TIMED spacecraft position, velocity, and time, the GNS determines the pseudorange to four or more GPS satellites in track. The propagation time to each GPS satellite is obtained by determining the difference between transmit and receipt times of the CA code. The pseudorange to each GPS satellite is computed by multiplying each propagation time measurement by the speed of light.","The navigation message transmitted from each GPS satellite provides data which are required to support the position determination process. That includes information to determine satellite time of transmission, satellite position, satellite health, satellite clock correction, time transferred to UTC, and constellation status.",{"@attributes":{"id":"P-00025","num":"00025"},"figref":"FIG. 1"},"A graphite epoxy optical bench is mounted on the spacecraft's zenith-facing surface to provide a thermally stable mounting surface for TIMED Doppler Interferometer (TIDI) telescopes and the attitude system's star trackers (required to satisfy TIDI attitude knowledge requirements). Two GPS Navigation System (GNS) antennas are mounted atop composite masts on the optical bench for performing on-orbit GPS attitude determination verification with a precision reference, or truth, data set.","The TIMED mission and spacecraft top-level command and control requirements are satisfied by the GNS which is designed specifically for TIMED and implemented on Application-Specific Integrated Circuits (ASIC). Although designed for TIMED, the GNS will satisfy the functional requirements that are typically placed on spaceborne autonomous navigation systems for LEO or MEO host vehicles.","The GNS includes redundant Standard Positioning Service (SPS) receiver systems with access to the GPS civilian ranging code called the coarse acquisition (CA) code that modulates the L (1575.42 MHz) signal. The GNS is a state-of-the-art spaceborne system optimized for autonomous on-orbit operations. The GNS is radiation tolerant, has extensive command and telemetry capability, provides access to raw and intermediate data products, supports on-orbit software reprogramming, is designed to accommodate the large doppler signal, dynamic range resulting from orbital velocities, and implements robust signal acquisition, navigation, and orbit determination algorithms.","The TIMED spacecraft major components include a system for sounding of the atmosphere using broadband emission radiometry to measure pressure, temperature and infrared cooling. This is the SABER instrumentation package. Located on the underside of SABER, , is a Global Ultraviolet Imager (GUVI) for obtaining temperature profiles and auroral energy inputs. A pair of NADIR S-band antennas are located with the GUVI.","A graphite epoxy optical bench is positioned on top of the SABER instrumentation package. The bench serves as a mounting base for the TIMED Doppler Interferometer (TIDI) profiler and four TIDI telescopes that constitute the TIMED Doppler Interferometer system which obtains wind and temperature profiles. A pair of star cameras, positioned on the bench, provide inputs to attitude star trackers which supply the attitude knowledge requirements of the TIDI. Also positioned on the optical bench is the Solar Extreme-UV Experiment (SEE) which measures solar x-ray, UV and FUV irradiance and a pair of S-band antennas.","Power for the system is derived from a battery power supply augmented by two solar arrays.","The primary electronics for the TIMED system are contained in an integrated electronics module (IEM). The system is redundant, being comprised of two IEMs, IEM # and IEM #, see FIG. . Each IEM includes a 2.5 Gbit SSR with command and telemetry interface on a command and data handling card. An RF telecommunications card includes an uplink receiver and down link transmitter. A DC\/DC converter card, , contains a pair of voltage converters. Also contained in each IEM is a GPS navigation system, GNS. Each GNS includes a GPS receiver card, , and a processor card, , containing dual Mongoose V processors.","The GPS navigation system provides: 1) estimated position and velocity of the satellite; 2) estimated UTC time and transfer to the command and data handling card; 3) estimated earth-sun vector data; 4) position-based event notifications; 5) position-based event predictions; 6) autonomous orbit determination; 7) data for non-GPS navigation; and 8) support for on-orbit software up-loading.","The GPS navigation system, i.e., GNS, operations and specifications are presented in Table 1.",{"@attributes":{"id":"P-d0e1157","num":"00002"},"tables":{"@attributes":{"id":"TABLE-US-00001","num":"00001"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"center"}},"thead":{"row":[{"entry":"TABLE 1"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}},{"entry":"GNS Operations and Specifications."},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}]},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":{}}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"77pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"140pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["Parameter","Operation or Specification"]},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}},{"entry":["Position (P)","<300 m (3 \u03c3), Geodetic latitude, longitude,"]},{"entry":[{},"height (<10 m predicted)"]},{"entry":["Velocity V)","<25 cm\/sec (3 \u03c3), east, north, up (<5 cm\/sec"]},{"entry":[{},"predicted)"]},{"entry":["Coordinate frame","ECEF-CTS (ECI-CIS for use by attitude"]},{"entry":[{},"system)"]},{"entry":["Earth-Sun vector (S)","0.06\u00b0 (3 \u03c3)"]},{"entry":["Time of validity of PVS","UTC 1-sec epochs"]},{"entry":["Time, output signal (T)","100 \u03bcsec (3 \u03c3) (<1 \u03bcsec predicted)"]},{"entry":["Time, output data (T)","CCSDS Unsegmented Time Code (CUC)"]},{"entry":[{},"Epoch: OH, Jan. 6, 1980"]},{"entry":["Data rate of PVST","1 Hz"]},{"entry":["Event notification (E)","Notify spacecraft of events, 5 sec uncertainty"]},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}},{"entry":[{},"Terminator crossing: primary and backup"]},{"entry":["Events:","ground contacts: SAA; polar region"]},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}},{"entry":["Orbit determination","Every 12 hours, predict forward 60 hours"]},{"entry":["Data format:","NORAD 2-line element set and one state vector"]},{"entry":[{},"per ground contact"]},{"entry":["Event predictions","Every 12 hours, predict forward 60 hours"]},{"entry":["Non-GPS navigation","No accuracy reqs; errors grow w\/atmospheric"]},{"entry":[{},"density uncertainty"]},{"entry":["Autonomous operations","TTFF <30 mm, (cold start) 90% probable;"]},{"entry":[{},"<2 min (warm start)"]},{"entry":["Uploads accepted:","Solar flux; Geomag. Index; Polar wander; UTI-"]},{"entry":[{},"GPS time offset"]},{"entry":["Input voltage","\u00b115 Vdc and \u00b15 Vdc"]},{"entry":["Power dissipation","\u22487 W (1.5 W not including processors)"]},{"entry":["Physical configuration","Two 2-sided stretch SEM-E circuit boards +"]},{"entry":[{},"preamp + antenna"]},{"entry":["Radiation","5 krads (Si); latch-up immune (GTA & proc."]},{"entry":[{},">1 Mrad, RF IC: \u226750 krads)"]},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}}]}}]}}},{"@attributes":{"id":"P-00052","num":"00052"},"figref":"FIG. 2","b":["11","12","13"]},"At the heart of the electronics is a low-voltage, low-power, radiation-hardened, high-speed application specific integrated circuit (ASIC), . This GPS Tracking ASIC (GTA) implements all the GPS-specific digital hardware functions.","The received GPS signals are converted to baseband digital signals and input to the GTA from the downconverter, , via a baseband electronics interface board. The GTA, under software control, implements  independent GPS tracking channels, , provides timing and control functions, and incorporates a built-in-test capability. The device is designed to accept up to four downconverted inputs to support future attitude determination capabilities and can be daisy-chained to support over 72 tracking channels. It will support P\/Y code operations with additional external hardware.","The GNS's computer system, , comprises two Mongoose V radiation-hardened 32-bit processors, the tracking processor (TP), , and the navigation processor (NP), , and associated memory and interface support circuitry. Each Mongoose V operates at 12 MHz with no wait states for memory access. The two-processor approach is used to ensure adequate processor throughput. In an alternate embodiment, a single processor, such as a 20-MHz Mongoose V processor is used. The tracking processor, , implements the GNS acquisition, tracking, and data preprocessing functions, and outputs its products to the navigation processor, . Optimized \u201clost in space\u201d or \u201csky search\u201d signal acquisition algorithms may be executed on the tracking processor. These algorithms are designed to minimize the cold-start time-to-first-fix and to minimize the likelihood of on-orbit GNS signal acquisition problems. The navigation processor, , implements numerous functions including the command, control, and telemetry processing, and the navigation and orbit determination algorithms including a 45-state extended Kalman filter, orbit propagator, event detector and predictor, and an orbit element set generator.","The GNS is implemented redundantly on two identical TIMED Integrated Electronics Modules (IEM), each of which includes a GNS receiver card, , and a GNS dual-processor card, , see FIG. . The receiver card, , and processor card, , interface to each other and to the rest of the IEM via a backplane bus, . Regulated DC power, , and discrete reset signals are input to each card and discrete analog telemetry signals and a 1 PPS signal, steered to align with UTC, are output via the Cmd & Telemetry card, . The interface to the IEM's command and data handling (C&DH) system, , including input commands and all output data products, is provided through a 16-bit, 2.5-MHz (40 Mbps) implementation of the PCI bus through the backplane connector.","Six major elements comprise each GNS, they are: 1) a GNS micro-strip antenna, ; 2) an RF subsystem on a GNS receiver card, ; 3) a baseband electronics subsystem on the GNS receiver card, ; 4) a dual processor subsystem on an independent GNS dual processor card, ; 5) an IEM backplane bus I\/O network, ; and 6) the system soft-ware, FIG. .","GNS Antenna","Each GNS antenna is a single-element microstrip patch bonded to a truncated, cone-shaped ground plane. The antenna is painted with a thermal control paint and coated with 1200 angstroms of SiOto protect the paint from atomic oxygen erosion on orbit. The element is tuned, after compensation for the effects of the paint, to receive right-hand circular polarized (RHCP) signals at the GPS L frequency of 1575.42 MHz with a nominal bandwidth of 5 MHz. In the preferred embodiment, the antenna is a modification of a space-qualified design produced by Ball Aerospace and Technology Corp. The shaped ground plane provides excellent gain (nominally \u22672.5-dBiC) at \u226710\u00b0 elevations. Antenna gain on the order of +5 dBiC is achieved at zenith. To eliminate obstruction of the GPS signals and to minimize multipath effects, the antenna is mounted on top of a graphite epoxy pedestal, which in turn, is mounted on the zenith optical bench, providing a full hemisphere of unobstructed coverage.","RF Subsystem","The RF subsystem, , is comprised of a GNS Receiver Card, , for each GPS antenna, . Each receiver card, , includes four RF preamplifier modules, , which are space-qualified COTS devices with a preselect L filter and a low-noise amplifier,  of FIG. . The filter is comprised of a 3-dB bandwidth at 30 MHz element,  and a 90-dB bandwidth at 250 MHz element, . It amplifies the band-passed raw received signal and applies it to an RF, L-band downconverter module, .","The downconverter, , is based on a COTS triple-superheterodyne downconverting integrated circuit, such as a Plessey 6P2010, adapted for the GNS design. It is a plastic encapsulated microcircuit (PEM). There are eight downconverters, , on a GNS receiver card, , but only one is illustrated for simplicity as in the case of the eight RF preamplifiers, .","A PPL frequency synthesizer, , functions as the local oscillator for the downconverter. It is driven by the fundamental reference oscillator, , which is a high-stability, low-noise TCXO crystal oscillator. The oscillator's phase noise is less than 45 dBc at 1 Hz offset from the carrier and \u221295 dBc at 10 Hz with stability of less than \u00b11 part per million (PPM) over all operating temperatures. The reference oscillator, , also generates the system clock for the GTA. A surface acoustic wave (SAW) filter, , in the second intermediate frequency (IF) circuit provides filtering of out-of-band signals and noise and establishes the system bandwidth.","There are four RF receiver channels on each GNS receiver card, . Each receiver channel comprises two RF preamplifier modules, , and two RF downconverter modules, , supplying a set of complementary I and Q signals. Thus the eight RF preamplifier\/downconverter circuits provide sampled two-bit, three-level signals in four sets of complementary I-signals, comp and comp, and complimentary Q-signals, comp and comp, for digital processing.","A block diagram of one of the RF front ends is presented by  to illustrates how the GPS signal is downconverted and digitized in the preamplifiers, , and downconverters, . These modules produce a single pair of complimentary outputs as I-signals or Q-signals. After downconversion, the signal is buried in noise but it is extracted as the state of a three level quantizer, . The outputs of the eight quantizers, as I-signal or Q-signal comp and comp, are applied to the baseband electronics module,  of , as the four GPS receiver channel output signal pair sets, comp and comp for I and Q signals. The signals are applied to an associated one of the four input channels of the GPS tracking application specific integrated circuit, , which is part of the baseband electronics system, .","Baseband Electronics Subsystem","The baseband electronics subsystem is comprised of the hardware and software elements illustrated in FIG. . The software element is an extended Kalman filter process executed by microprocessors on the processor cards . The hardware is comprised of processor cards  and receiver cards  which are constructed around a GPS tracking application specific integrated circuit or GTA.",{"@attributes":{"id":"P-00068","num":"00068"},"figref":"FIG. 6","b":["20","22","23","21","20","24","25","20"]},"The GTA handles a wide variety of sampled data inputs. The expected forms of sampled input to the GTA include both 1 bit and 1.5 bit versions of quadrature (I&Q) and non-quadrature (I only) outputs from the downconverters. Quadrature inputs are desirable when the downconversion process results in spectral folding due to a lower than nominal sampling rate. The losses of spectral folding are recovered when quadrature samples are used in a single side-band (SSB) carrier mixing process which removes the image frequency in the signal band. If spectral folding does not occur in the downconversion process, the non-quadrature (I only) samples are adequate.","Regardless of the GPS signal data type received from the RF downconverters, , it is applied to one of the four input channels to the GTA.  is a schematic diagram of the input latch, , and I\/Q generator, , circuits which form each of the four input channels. The latch circuit includes a pair of exclusive NOR gates,  and , which route the data in separate non-quadrature, I, and quadrature, Q, paths to enable the system to obtain an ideal set of quadrature sampled data. The I and Q input signals are each comprised of complimentary outputs comp and comp. This approach is used because of its inherent immunity to phase imbalances which exists between carriers in the quadrature downconverters. Each exclusive NOR gate,  and , provides inputs to the I\/Q multiplexers  and . The multiplexers,  and , are each responsive to both exclusive NOR gate outputs and the comp inputs in the I and Q channels. The comp I and Q channel inputs are applied to a third multiplexer, . The three multiplexers, , , and , form the channel's I\/Q generation module, , which enables the channel to handle different input formats and convert them to an output which the remainder of the GTA can recognize. There are eight different modes of operation which the I\/Q generator can handle. Each mode is listed and described in Table 2 in terms of the output produced for the reset of the GTA. This table includes the definition of the 1.5 bit output signal in terms of two actual bits. During the I-only operation (Modes -), the zero bit of the Q sample is set. The I\/Q generation module 1.5 bit representations are presented in Table 3.",{"@attributes":{"id":"P-d0e2341","num":"00002"},"tables":{"@attributes":{"id":"TABLE-US-00002","num":"00002"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"center"}},"thead":{"row":{"entry":"TABLE 2"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}},{"entry":"I\/Q Generation Modes"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"21pt","align":"center"}},{"@attributes":{"colname":"2","colwidth":"196pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["Mode","Description"]},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}},{"entry":["0","I & Q, 1 Bit, use comp1 input of both I & Q channels"]},{"entry":["1","I & Q, 1.5 bit, generate zeros from comp1 and comp2 inputs"]},{"entry":["2","I & Q, 1.5 bit, comp2=zero bit function for both I & Q"]},{"entry":["3","I & Q, 1.5 bit, generate quadrature data from non-quadrature data"]},{"entry":["4","I & Q, 1 bit, generate quadrature data from non-quadrature data"]},{"entry":["5","I, 1 bit, use comp1 input from I channel only"]},{"entry":["6","I, 1.5 bit, generate zero bit from comp1 and comp2 inputs"]},{"entry":["7","I, 1.5 bit, comp2=zero bit function for I only"]},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}}]}}]}}},{"@attributes":{"id":"P-d0e2522","num":"00002"},"tables":{"@attributes":{"id":"TABLE-US-00003","num":"00003"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"center"}},"thead":{"row":{"entry":"TABLE 3"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}},{"entry":"1.5 Bit Representations"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"4"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"21pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"42pt","align":"center"}},{"@attributes":{"colname":"2","colwidth":"84pt","align":"center"}},{"@attributes":{"colname":"3","colwidth":"70pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"Signal Value","Sample (1)","Sample (2)"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"3","align":"center","rowsep":"1"}}]},{"entry":[{},"\u22121","0","0"]},{"entry":[{},"\u20020","1","X (don't care)"]},{"entry":[{},"\u20021","0","1"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"3","align":"center","rowsep":"1"}}]}]}}]}}},"The data router  acts as an intelligent distribution means for the outputs of the I\/Q generators, . It provides an I sample and a Q sample input pair to one of the 12 tracker channels, . As seen in , the functional block diagram of one of the tracker channels, each tracker channel includes an I sample input, , and a Q sample input, , from the data router. The I and Q sample channels are identical so only the I sample channel is discussed in detail. It is comprised of a suming network  which combines the outputs of two carrier mixing operations,  and . The first mixing operation, , multiplies the I sample input, , with a cosine function from the phase mapping generator . The other mixing operation, , multiplies the Q sample input  with a sine function from the phase mapping generator . The output of the summing network  is re-clocked with a flip-flop  which provides parallel outputs to the three code mixers comprised of accumulators  and associated latched registers  and an un-mixed output .","The Q sample channel is nearly identical to the I sample channel. It is identified in  by reference designators , , , , , ,  and  which provided functions similar to those provided by the circuit elements , , , , , ,  and  of the I sample channel. The key difference is the summing operation  is indicating the difference between the mixing outputs  and .","The outputs of the flip-flops  and  represent the final downconversion process which is achieved using an adjustable local oscillator frequency to accommodate the variable Doppler shift present in the GPS downlink. A numerically controlled oscillator, the carrier NCO, , generates a digitally responsive version of the local oscillator frequency required for the final downconversion process. A block diagram of the oscillator is presented in FIG. . It uses a 24-bit full adder, , to provide the sequential logic which is clocked at the sample rate of the signal by latch  and kept in phase with sample by the phase and rate of phase change circuit . The three most significant bits, MSBs, of the adder provide the phase output, , to the mixing process in the sample channels via the phase mapping means . The carrier NCO provides the system with an ability to vary local oscillator frequency. A register, , allows the system to read the current phase information. The system can set the NCO output to s at anytime. The carrier NCO has a 32 bit counter, , with which it keeps track of the number of carrier cycles occurring during each measurement period and provides integrated Doppler estimates during GPS tracking. It's value is read by the microprocessor on each measurement interval. The carrier cycle counter and NCO phase are set to 0 by either an align_time condition or an nco_car_clear condition. The controls are maintained by the microprocessor and actions occur only on the first positive edge of the MIC signal following a clear request. The 3 bit phase output of the carrier NCO, , is mapped to sine and cosine components according to Table 4.",{"@attributes":{"id":"P-d0e3005","num":"00002"},"tables":{"@attributes":{"id":"TABLE-US-00004","num":"00004"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"center"}},"thead":{"row":{"entry":"TABLE 4"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}},{"entry":"Carrier NCO Phase Mapping"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"1","colwidth":"91pt","align":"center"}},{"@attributes":{"colname":"2","colwidth":"49pt","align":"center"}},{"@attributes":{"colname":"3","colwidth":"77pt","align":"center"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["Carrier NCO Phase","Cosine Value","Sine Value"]},{"entry":{"@attributes":{"namest":"1","nameend":"3","align":"center","rowsep":"1"}}},{"entry":["000","+2","+1"]},{"entry":["001","+1","+2"]},{"entry":["010","\u22121","+2"]},{"entry":["011","\u22122","+1"]},{"entry":["100","\u22122","\u22121"]},{"entry":["101","\u22121","\u22122"]},{"entry":["110","+1","\u22122"]},{"entry":["111","+2","\u22121"]},{"entry":{"@attributes":{"namest":"1","nameend":"3","align":"center","rowsep":"1"}}}]}}]}}},"Three fundamental signals act as inputs during the carrier mixing process in FIG. . The three signals are the two quadrature sample data components, Isamp, , and Qsamp, , and three bits of phase from the carrier NCO, . The two quadrature carrier components, cosine and a sine, are generated by the phase mapper, , from the carrier NCO phase information according to the data presented in Table 4. The carrier mixing process is similar to processing employed for single sideband modulation (SSB). This technique provides a large amount of image rejection. It is used to prevent image products from folding back down to the desired signal band and corrupting the signal. The fundamental mixing process is represented by the equations:\n\nsamp*cos+samp*sin\n\nsamp*sin\u2212samp*cos\n","The carrier mixing process is implemented with multiple-bit accuracy. The input samples, Isamp and Qsamp, have the values \u22121, 0, or +1. The sine and cosine components from the carrier NCO have the values \u22122, \u22121, +1, and +2. This results in mixing outputs which can take on the values 0, \u00b11, \u00b12, \u00b13, and \u00b14. These values are represented by a four bit binary output defined in Table 5. The outputs are re-clocked at the sample clock rate for timing considerations.",{"@attributes":{"id":"P-d0e3307","num":"00002"},"tables":{"@attributes":{"id":"TABLE-US-00005","num":"00005"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"center"}},"thead":{"row":{"entry":"TABLE 5"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}},{"entry":"Multi-Value Bit Definition"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"56pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"21pt","align":"center"}},{"@attributes":{"colname":"2","colwidth":"140pt","align":"center"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"Value","Binary"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"2","align":"center","rowsep":"1"}}]},{"entry":[{},"\u22124","0000"]},{"entry":[{},"\u22123","0001"]},{"entry":[{},"\u22122","0010"]},{"entry":[{},"\u22121","0011"]},{"entry":[{},"\u20020","1XXX"]},{"entry":[{},"\u20021","0100"]},{"entry":[{},"\u20022","0101"]},{"entry":[{},"\u20023","0110"]},{"entry":[{},"\u20024","0111"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"2","align":"center","rowsep":"1"}}]}]}}]}}},"The numerically controlled oscillator, NCO, which clocks the GPS course acquisition code generator circuit, the CA code NCO, , is similar to the carrier NCO, . A block diagram of the CA code NCO  is presented in FIG. . To emphasize the similarity between the NCOs  and , common reference designators are used to indicate identical circuits in . For instance, in , the CA code NCO phase and rate of phase change is set by register, , which is identical to register  in FIG. . It is also controlled by the microprocessor bus as in the carrier NCO. The phase increment register, chx_code_phincr, is used to set the phase offset incremented to the current phase at every sample clock time as in the carrier NCO. The current phase clock of the CA code NCO, , is read at the current phase register, , by performing a microprocessor read from the address chx_codenco_phase as with the current phase register  of the carrier NCO, ,. Verification of correct CA code NCO operation is determined by directing the microprocessor to clear the current phase prior to the next phase addition by setting the appropriate bit in the register nco_code_clear. This clear operation occurs at the next measurement interval clock, MIC, cycle.","The GPS coarse acquisition code numerically controlled oscillator, CA code NCO,  of , provides an output to the GPS course acquisition code generator . A block diagram of generator  is illustrated in FIG. . It incorporates two shift registers,  and , which generate the PRN codes that are summed together by the modulo-2 summing means  to produce the desired GPS coarse acquisition code. Each shift register is clocked on the negative edge of the CA code NCO fchip to ensure that the code generator is initialized at a specific time so the current phase of the code may be derived from a code phase counter. The code phase counter, , is a 10-bit counter that resets to a value of zero at every epoch and increments by one on every chip. Critical timing is achieved with the use of the align_time signal form the microprocessor along with the MIC signal. Different codes corresponding to each GPS space vehicle are generated by verying the initial phase of the lower shift register. It is possible to start generation of a GPS course acquisition code at a point besides its epoch by initializing the top register to something other than all 1s.","The next step in processing consists of mixing the signals, i.e. the outputs of the differentiators  and , with a locally generated replica of the code used during the data modulation produced by CA code generator . This process occurs simultaneously in six differential mixing circuits,  through , for every tracker. The purpose is to lock frequency and phase of the code present on the received signal with a locally generated code. Both the I and Q outputs of the carrier mixing are multiplied by three time-shifted versions of the local code produced by the 3-bit shift register . This results in a total of six code mixing and correlation operations per tracker. Early, prompt, and late time-shifted versions of the code are used because their \u00bd chip delay offsets provide good code acquisition and tracking performance.","The code mixing process is illustrated in the functional block diagram of a single tracker in FIG. . The components of the I and Q carrier mixing products are clocked at the input sample rate and the code to be mixed with them is clocked at twice the CA code numerically controlled oscillator rate, i.e., CA code NCO, , rate. Because the CA code NCO is clocked at the sample rate, data transitions for all of the involve signals occur on the same boundaries. Both the I and Q carrier mixing products are adjusted so they are represented by the values 0, \u00b11, \u00b12, \u00b13, and \u00b14. Using the code values \u00b11, the output of the code mixers,  through , take on the same range of values as the outputs of the carrier mixing process.","After the code mixing process, the GPS signal outputs IE, IP, IL, QE, QP, and QL are loaded in the registers forming the appropriate accumulators,  and . Because the accumulator can be implemented easier as an up-counter instead of an up\/down-counter, the representation of the mixer outputs is changed by adding an offset of +4 to the mixer outputs. The new values represent the increment value corresponding to each possible code mixing output. The process is repeated for subsequent values of the products coming out of each code mixer. This represents the correlation operation of a GPS receiver. See Table 6.",{"@attributes":{"id":"P-d0e3765","num":"00002"},"tables":{"@attributes":{"id":"TABLE-US-00006","num":"00006"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"center"}},"thead":{"row":{"entry":"TABLE 6"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}},{"entry":"Relationship of Code Mixing Output to Counter Increment"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"4"},"colspec":[{"@attributes":{"colname":"1","colwidth":"49pt","align":"center"}},{"@attributes":{"colname":"2","colwidth":"56pt","align":"center"}},{"@attributes":{"colname":"3","colwidth":"56pt","align":"center"}},{"@attributes":{"colname":"4","colwidth":"56pt","align":"center"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["Code","Code","Counter","Counter"]},{"entry":["Mixing Value","Mixing Bindery","Increment Value","Increment Binary"]},{"entry":{"@attributes":{"namest":"1","nameend":"4","align":"center","rowsep":"1"}}},{"entry":["\u22124","0000","0","0000"]},{"entry":["\u22123","0001","1","0001"]},{"entry":["\u22122","0010","2","0010"]},{"entry":["\u22121","0011","3","0011"]},{"entry":["\u20020","1XXX","4","0100"]},{"entry":["\u20021","0100","5","0101"]},{"entry":["\u20022","0101","6","0110"]},{"entry":["\u20023","0110","7","0111"]},{"entry":["\u20024","0111","8","1000"]},{"entry":{"@attributes":{"namest":"1","nameend":"4","align":"center","rowsep":"1"}}}]}}]}}},"The six accumulator values from the code mixing outputs of each tracker are normally latched into a register  or , at every internally generated code epoch. However, to reduce the load on the microprocessor, each tracker has the capability of latching the data at a multiple number of epochs. Each tracker can be program so that anywhere from 1 to 20 epochs may occur between latching of the accumulator contents.","The timebase, clock, and interrupt generator, , create all timing and interrupt signals for the GTA. Certain portions of the clock generator work specifically with the TIMED frequency plan while other parts of the generator are adapted to provide different frequency and timing requirements.  is a block diagram of the timing and interrupt generator. The generator is normally driven by the same sample clock that the rest of the GPA uses for data processing.","A common clock or timing signal is required to efficiently allow the microprocessor to download the latched accumulator values between epoch states. This download signal, the accumulator or interval clock (AIC), occurs at a 1.499812 kHz rate or a period of 666.75 microseconds. It is used to generate an interrupt for the microprocessor.","The measurement interval clock (MIC) is a timing signal used to notify the microprocessor when measurement readings are to be be made. The MIC is used as a reference time for aligning other signals such as the carrier and CA code NCOs and code generator outputs. The MIC has four different, selectable rates, they are 100 Hz, 10 Hz, 1 Hz and 0.1 Hz. During applications requiring critical timing measurements, a 1 PPS signal is used as the MIC. When using one of the internal MIC rates, this signal is a non-square waveform with a positive pulse width of two AIC clock periods, or 1333.34 microseconds.","The time base generation circuit provides a 1 pulse-per-second (pps) UTC clock reference that is used to control the TIMED spacecraft timing system. Under control of a tracking loop in the navigation processor's extended Kalman filter, a numerically controlled oscillator is continually controlled such that it outputs a 1-PPS signal that is steered to align it with UTC's 1-second epochs. This is accomplished by using a 25-bit synchronous divider (counter) which is clocked by the sample_clk signal. When the counter reaches a value set by the microprocessor, the 1 PPS signal is set high and the counter resets to zero. The 1 PPS signal is then set low halfway through the next count to create a clock with a 50% duty cycle. This clock is capable of being aligned with UTC time by modifying the 25 bit maximum count value. Initially the 1 PPS divider is aligned with the MIC signal. This is achieved whenever an align_time signal occurs.","The time offset between the MIC and a 1 PPS signals must be measurable. The measurement is obtained with a second counter that determines the time interval between the 1 PPS rising edge and the next MIC rising edge. Two registers hold the number of sampleclk cycles which occurred between the two signals.","The GTA is implemented on a radiation-hardened HR23OO series CMOS gate array produced by Honeywell Solid State Electronics Center. The GTA uses over 200,000 gates, operates on 3.3 V for internal circuits and 5 V for input\/output, and dissipates \u2248200 mW.","Receiver Timing","Receiver timing is unique for TIMED. The receiver contains a fundamental oscillator which drives a group of frequency dividers, one of which is coupled into the receiver clock to produce a function of true time which is uncontrolled or open loop time. Controlled time is created by a control process that drives the system time bias to zero. The process is modeled as a continuous time adjustment to frequency error which converts an uncontrolled time function to a controlled time function of true time for use by the Kalman filter.","Correct modeling of the TIMED orbital dynamics and the GPS measurements is key to achieving good navigation performance. This includes having adequate gravity and drag models and correct modeling of the measurements derived from the GPS receiver carrier and code tracking loops. Modeling the effects of the receiver clock error on the measurements is critical. A unique feature of the GNS receiver is the control of the sampling times of the tracking loops to align with Universal Coordinated Time (UTC) time tics.",{"@attributes":{"id":"P-00093","num":"00093"},"figref":"FIG. 4","b":["12","13","1","14"]},"The outputs of the quantizer are processed by an application-specific integrated circuit, as shown in FIG. . As previously stated, the ASIC chip includes twelve replications of a GPS tracker, so up to twelve GPS satellites can be tracked. The signals are sampled and distributed to the 12 trackers by four receiver channels. In the trackers, this signal samples are digitally mixed with a local carrier and code. The sampling accomplishes an additional downconversion of the L signal to \u22121.4054 Mhz. The negative sign arises because the signal is oversampled and downconverted through zero frequency. This results in a reversal of sign in the Doppler shift. After lockup, the local carrier and code are in phase with the received carrier and code. The GPS message data is retrieved inside the carrier tracking loop as the pseudo-range and integrated carrier. The data is manipulated by an extended Kalman filter implemented by software in the mongoose microprocessors.","The software used by the system is presented by way of mathematical functions to avoid hardware and programing language ambiguities. To simplify the presentation, the analysis considers the pseudo-range and integrated carrier produced by the code epoch accumulator and the carrier phase accumulator using the output of a single exemplary tracker channel. These accumulators are sampled at interrupts generated by the Measurement Interrupt Clock (MIC). The timing of this interrupt is controlled by the Kalman filter so that at steady state, it occurs as close to the UTC time tics as possible. Since this is different than what normally occurs in a Kalman processed GPS evaluation, a thorough discussion of the receiver timing is presented. Receiver timing is developed by the GNS software which implements the following equations, where:","Vectors\/matrices are represented as lower\/upper case (x\/T). The transpose of a vector or matrix is denoted as x. For quantities that depend on a particular tracking channel, the tracking channel superscript \u03bd is used. Thus \u03c3 is the pseudo-range associated with tracking channel \u03bd. Quantities associated with GPS satellites are identified by their tracking channel index (as opposed to their PRN or SV numbers). Thus x(\u03c4) is the position implied by the GPS message ephemeris for the satellite being tracked by channel \u03bd. Estimates are denoted as {circumflex over (x)}. Reference receiver time is denoted by t while true time is denoted by \u03c4. The reference times at the MIC interrupt event are denoted by t. Sometimes tis used to denote a general Kalman filter update time. (Note that these form a subset of the MIC times since a measurement is processed every mMIC interrupt.) The apriori\/aposteriori estimates of quantities at tare denoted as {circumflex over (x)}\/{circumflex over (x)}. Unless otherwise stated, all vector quantities are expressed in the Conventional Inertial System (CIS).","Basically, the system uses an imprecise clock. To develop error equations for a navigation system which contains an imprecise clock, a precise definition of error is required. This is accomplished in the software by defining the asynchronous errors as:\n\n\u03b4()\u2261()\u2212()\n\nwhere x(\u2022) is any function of time, x(t) is its true value, and x(t) is its reference value according to the GNS system. Similarly, the synchronous errors are defined as:\n\n\u03b4()\u2261(\u03c4())\u2212()\n\nwhere \u03c4(t) is a function that takes the nominal time t of the GNS system into the corresponding true time. This situation is illustrated graphically in , where \u03c4(t)>t is assumed. If the difference \u03c4(t)\u2212t is small, and the difference between the true trajectory and the reference trajectory is small, the following relations hold between the two error conventions:\n\n\u03b4()\u2248\u03b4()+()(\u03c4()\u2212)\u2003\u2003(1)\n\nwhere {dot over (x)}(t)\u2261dx\/dt.\n\nThe synchronous error is the error in x(t) ignoring the time tagging errors of the GNS clock, while the asynchronous error takes these errors into account. If the difference between the indicated and true time to be the state is defined as T\u2261t\u2212\u03c4(t), the appropriate transformation between asynchronous and synchronous errors is: \n\n\nand the associated suitably partition covariance is: \n\n\nFor most sections in the following development, the synchronous error convention will serve as the default. It will be written without a subscript.\n","For the uncontrolled time receiver reference times, Let \u03c4 represent the independent variable true time. The receiver contains a fundamental oscillator with instantaneous frequency \u0192(\u03c4). (For the TIMED GNS receiver using a Plessy RF Front End, \u0192is nominally 10 MHz.) It drives a group of frequency dividers, one of which is coupled into the receiver clock. The output of this frequency divider as a function of true time is: \n\n\nwhere kis the (rational) divide-down ratio. (For TIMED the system clock is coupled directly into the fundamental oscillator, so that k=1) The true time at which the clock was set is \u03c4, the phase (in radians) of the fundamental oscillator is \n\n\nis an arbitrary phase of the fundamental oscillator at \u03c4. The number of complete cycles executed by this sinusoid since \u03c4is N(\u03c4)=floor[(\u03a6(\u03c4)\u2212\u03c6)\/2\u03c0k]. If \u0192cycles per second are being executed by the fundamental oscillator, the estimate of time is: \n\n\nwhere tis the value placed in the clock at \u03c4. Dispensing with the floor function since all times of interest (the sampling times) occur when the oscillator has executed an integral number of cycles (i.e. when (\u03a6(\u03c4)\u2212\u03c6)\/2\u03c0 is an integral multiple of k).\n\nThen: \n\n\nwhere the fractional frequency error is defined by: \n\n\nThis is the uncontrolled or open loop time. If t=\u03c4and \n\n\nthere will be no error and t*(\u03c4)=\u03c4. Since this is not the case, there will be an error defined by: \n\n\nNote that t*(\u03c4) is the function that takes true time into the simultaneous uncontrolled reference time. Note also that the divide-down ratio kdoes not appear. This function is inverted to obtain the true time, \u03c4(t*), as a function of uncontrolled reference time. This function is defined implicitly by: \n\n\nThe instantaneous phase of the fundamental oscillator is recovered from t*(\u03c4) by solving equation (2) for \u03a6(\u03c4) to get: \n\n\nwhere \u03c6has been modified to include t, because only \u03a6(\u03c4) is significant, modulo 2\u03c0 and (t2\u03c0\u0192)mod(2\u03c0) can be absorbed in \u03c6.\n","The uncontrolled time thus far defined is used to derive controlled time by driving the system time bias to zero. A quantized and control in a discrete time system is modeled as a continuous time adjustment to the frequency error. Applying the control process to equation (2) produces: \n\n\nwhere t(\u03c4) is the system reference time as a function of true time, including the control effects, and u(\u03c4) is the continuous time process used to represent the control. Its dimensions are seconds\/second (the same as fractional frequency error). Note that t(\u03c4) is the function that takes true time into simultaneous controlled reference time. This function is inverted to obtain the true time, \u03c4(t), as a function of controlled reference time. The inverse function is defined implicitly by: \n\n","Defining the (controlled) clock bias to be that quantity which when subtracted from the (controlled) reference time gives the corresponding true time: \n\n\nThe rate of change of T(\u03c4) with respect to true time is then: \n\n","The Kalman filter runs according to receiver time, therefor the derivative of T(t)\u2261T(\u03c4(t)) with respect to t. By the chain rule, this is \n\n\n{dot over (\u03c4)}(t)\u2261d\u03c4\/dt is derived by differentiating equation (7) with respect to t using the Leibniz rule which produces:\n\n1=(1\u2212\u03b5(\u03c4())+(\u03c4())){dot over (\u03c4)}()\n\nor \n\n\nwhere \u03b5(t)\u2261\u03b5(\u03c4(t)) and u(t)\u2261u(\u03c4(t)). Substituting equations (11) and (9) into equation (10) yields: \n\n\nThe variables \u03c4 and t represent the true time and controlled reference time independent variables as well and the functions \u03c4(t) and its inverse t(\u03c4). The distinction is clear from the context. When appropriate, superscripts identify the system to which the time functions pertain. Thus, a reference time from the Guidance and Navigation System (GNS) leads to the corresponding true time:\n\n\u03c4()=()\u2003\u2003(13)\n","By a notational slight-of-hand, as in equation (13), functions may be accessed according to receiver time instead of true time. This is accomplished by writing T(t) to mean T(\u03c4(t)). The GNS time t represents the number of seconds in the GPS standard epoch. It is stored in two variables so that precision will not be lost:\n\n_time\n\nwhere MIC_timeis the number of seconds since GNS turn-on and tis an integer that brings the sum MIC_time+tclose to the desired value when time is initially set.\n","MIC slew control, u(t), is a continuous time representation of the digital process used to control the timing of the MIC interrupt in the GNS receiver so that it aligns with UTC tic boundaries. The GNS receiver continually estimates the difference between its internal clock and GPS time. The GPS time differs from UTC by an integer; therefore the GPS time tics are coincident with UTC tics. In the actual digital implementation, the MIC interval counter is strobed by \u0192\/k. An interrupt is generated and the counter resets when the counter reaches a value written into a memory location on the GPS Tracking ASIC (GTA). The desired number of clock cycles between MIC interrupts is known as the MIC register count and is determined from Kalman filter estimates.","The objectives of the digital control are to compensate for the time bias error and the fractional frequency errors, and to bring the MIC interrupt into coincidence with the UTC tics. The control will be applied across the whole Kalman update interval consisting of m MIC interrupts so the difference between the true and nominal MIC interval times can be minimized. As described earlier, the nominal time since the GPS standard epoch is constructed as:\n\n_time\n\nThe corresponding estimate of true time after a measurement update is found by removing the bias from the reference time:\n\n{circumflex over (\u03c4)}_time\u2003\u2003(14)\n","It takes far less time to eliminate the clock bias and to align the MIC with UTC tic's if the clock bias is removed by absorbing it in t:\n\n\u2212round{}\n\n\u2212round{}\u2003\u2003(15)\n\nwhere round{x} is the closest integer to x, i.e.\n\n\n\nwhere Z are the integers. It is clear that this redefinition leaves the estimate of true time given by equation (14) unchanged. This redefinition is done after every measurement update. If the MIC slew is operating in steady state, the time bias will be maintained at a very small value and this redefinition will not do anything. The absorption of the integral part of the clock bias will only happen after the first measurement update or if the MIC slew is deactivated.\n","Assuming \u03c4denotes ksampling time, then the kMIC interrupt is triggered when the GTA MIC counter (which is strobed at the frequency \u0192\/k) counts up to a prescribed value, n(k). The GTA MIC counter then resets. The true MIC interrupt times (\u03c4,k=1,2,3 . . . ) are thus defined by: \n\n\nwhere \u03c4is the true turn on time.\n","The Kalman update interval contains m MIC intervals and a Kalman crank interval is: \n\n","The update interval is divided into subsections of length p and q=m\u2212p, as in FIG. .","For the first p MIC intervals, the measurement update calculations at tare still underway and a default MIC interval count nis used. The value for the default MIC interval count is based on the previously estimated fractional frequency error so that the true MIC interval times are as close to the nominal as possible: (If this is the first Kalman crank, the estimate comes from preflight calibration of the oscillator.)\n\n=round{\u0394\u00b7\u0192(1\u2212{circumflex over (\u03b5)})\/}\n\nFor the remainder of the Kalman crank interval, the MIC interval counts are calculated to minimize the time bias estimate predicted at the end of the crank interval: \n\n\nassuming \u0192(\u03be) is slowly varying. Using the above definitions for the receiver time bias and frequency errors:\n\n\u03c4()\n\nthen\n\n\u2003\u03c4()\n\nand \n\n\nSubstituting these values into equation (17) yields: \n\n\nLet \u0394=t\u2212tbe the nominal MIC interval in seconds (=1 sec). Then t\u2212t=m\u00b7\u0394, and: \n\n","Minimizing to find the integer sequence n(i) which makes the clock bias at the next crank as small as possible: \n\n\nNote that this optimization problem defines only the sum of the sequence \n\n\nand can be expressed in the form: \n\n\nBy definition of the round function, the minimum of equation (18) is attained if: \n\n","The last line is used for computation because the causal estimates are substituted for the true quantities \u03b5(t) and T(t), which are unknown.","The optimal sum is generate by the following sequence which is preferred over other sequences because it produces a minimum variance from the optimal mean count value S*\/q. The last q MIC intervals in the Kalman crank are divided into two groups, one with q intervals using n(i)=floor(S*\/q) as the MIC register count and one with",{"@attributes":{"id":"P-00163","num":"00163"},"br":{},"in-line-formulae":[{},{}],"i":["q","=q\u2212q","n","i","S*\/q"],"sub":["c","\u0192"],"maths":{"@attributes":{"id":"MATH-US-00030","num":"00030"},"math":{"@attributes":{"overflow":"scroll"},"mrow":{"mrow":[{"mi":"n","mo":"\u2061","mrow":{"mo":["(",")"],"mi":"i"}},{"mo":"{","mrow":{"mtable":[{"mtr":[{"mtd":{"mrow":{"msub":{"mi":["n","f"]},"mo":"=","mrow":{"mi":"floor","mo":"\u2061","mrow":{"mo":["(",")"],"mrow":{"msup":{"mi":"S","mo":"*"},"mo":"\/","mi":"q"}}}}}},{"mtd":{"mrow":{"msub":{"mi":["n","c"]},"mo":"=","mrow":{"mrow":{"mi":"floor","mo":"\u2061","mrow":{"mo":["(",")"],"mrow":{"msup":{"mi":"S","mo":"*"},"mo":"\/","mi":"q"}}},"mo":"+","mn":"1"}}}}]},{"mtr":[{"mtd":{"mrow":{"mi":"i","mo":"\u2208","mrow":{"mo":["{","}"],"mrow":{"mi":["k","p","p","p"],"mo":["+","+","+","+","+","+"],"mrow":[{"mn":"1","mo":[",","\u2062"],"mstyle":{"mtext":"\u2003"},"mi":"k"},{"mn":"2","mo":["\u2062","\u2062","\u2062"],"mrow":{"mo":",","mi":"\u2026"},"mstyle":{"mtext":"\u2003"},"mi":"k"}],"msub":{"mi":["q","f"]}}}}}},{"mtd":{"mrow":{"mstyle":{"mtext":"\u2003"},"mo":"\u2062","mrow":{"mi":"i","mo":"\u2208","mrow":{"mo":["{","}"],"mrow":{"mrow":[{"mi":["k","p","p"],"mo":["+","+","+","+","+","+"],"msub":[{"mi":["q","f"]},{"mi":["q","f"]}],"mrow":{"mn":"1","mo":[",","\u2062"],"mstyle":{"mtext":"\u2003"},"mi":"k"},"mn":"2"},{"mrow":{"mi":["\u2026","k"],"mo":["\u2062","\u2062"],"mstyle":{"mtext":"\u2003"}},"mo":"+","mi":"m"}],"mo":","}}}}}}]}],"mo":"\u2062"}}],"mo":"="}}}},"The sum of the sequence is: \n\n\nThe integer q that generates the minimum variance sequence that satisfies \n\n\nwhich yields:\n\n\u2003(+1)\u2212\u2003\u2003(21)\n\nwhich is greater than zero, provided q,S*\u22671. Then qis: \n\n","During the period between the first two Kalman cranks, the MIC slew has to absorb time errors up to \u00bd second in magnitude. The MIC is disseminated to the spacecraft as a 1-PPS timing source. There for, the time between MIC interrupts cannot be shorter than 0.9999 seconds. (\u0394=1 sec.) To ensure that this constraint is met in the presence of a 100 nanosecond time quantization on the GTA and clock estimation uncertainties, the GNS uses a tighter constraint of 0.9999+100\u00d710+3\u03c3seconds, where \u03c3is the estimation uncertainty of the receiver clock in seconds. Since \u0394is expected to be 1 second and \u03c3is expected to be around 100 nanoseconds, \u03b4=9.96\u00d710is used. If the shortest true time interval between MIC interrupts is less than \u0394(1\u2212\u03b4), the system redefines the MIC counts for MIC intervals k+p+2 to k+m so that the true time interval between MIC interrupts is as close to \u0394as possible and lengthens the k+p+1MIC interval so that the total length of the Kalman crank is increased by an integer number of seconds so that the length of the crank is m\u0394+s seconds.","The MIC interrupt has been brought into coincidence with UTC boundaries at the true time of the next Kalman crank, this is still the case if an integer number of true seconds are added to the Kalman crank interval. The rate of change of the time bias estimate in the Kalman filter is computed based on the actual time sequence of MIC counts, assuring that the estimate of the time bias will evolve correctly.","The best estimate of the shortest true time interval resulting from the calculations this far is nk\/(\u0192(1\u2212{circumflex over (\u03b5)})). The minimum MIC interval constraint will be violated (on q intervals) if: \n\n\nIf the foregoing is true, the system redefines the true MIC interval for MIC interrupts k+p+2 to k+m to be as close to the nominal MIC interval as possible:\n\n()=2\u2003\u2003(24)\n\nwhere \n\n\nThe foregoing is the value for the default MIC count that is used for the next Kalman crank interval.\n","Next, the counts for the k+p+1interval are defined so that the whole Kalman crank interval is lengthened by s seconds, according to the estimates of the clock parameters. A lengthening of s seconds means that instead of steering the clock bias to zero, the count is selected for this new interval so that the clock bias T(t) is as close to \u2212s as possible. n(k+p+1) is selected from the integers to minimize: \n\n\nwhere A and B are as defined in equation (18) and A\u2032=A+s\u2212B(q\u22121)n. The optimal integer value for n(k+p+1) is then: \n\n\nThe integer s is chosen so that the true-time length of MIC interval (k+p+1) is greater than \u0394(1\u2212\u03b4). This is accomplished by setting \u0394>\u0394(1\u2212\u03b4) or: \n\n\nSince round(x)>x\u2212\u00bd for x>0: n(k+p+1)>n\u2032(s) where: \n\n","If the magnitude of the oscillator fractional frequency error is bounded by |\u03b5|<\u03b2, s is selected so that \n\n","The upper bound for s is defined by: \n\n\nNow |{circumflex over (T)}|\u2266\u00bd since the whole value part of the clock bias is absorbed in t(see equation 15), so s\u22661 if: \n\n\nThis implies \n\n\nWith default values of m=180, \u0394=1 and \u0192=10; \u03b2<1.3867\u00d710guarantees s\u22661. This is a very loose requirement for the oscillator fractional frequency error (and its estimate) since the expected flight oscillator will be bounded by 30 ppm.\n","The the following equations are used for calculation of the MIC interval counts for a Kalman crank interval. The default control used for the first p interval is: \n\n\u2003*=round()\n\n=floor()\n\nand\n\n+1\u2003\u2003(29)\n","If the minimum MIC constraint is satisfied (as it is in steady-state operation), i.e.: \n\n\nusing the baseline rules: \n\n\nwhere q=q(n+1)\u2212S*. If the minimum MIC interval constraint is violated, the following is calculated: \n\n\u2003(\u22121)\n\nusing the rule: \n\n","The average rate of change of the time bias over the Kalman update interval is: \n\n\nWhich is manipulated to: \n\n","This is the (constant) deterministic control value that is applied across the receiver time interval [t,t] when propagating the estimate of receiver time bias in equation (12).","To illustrate the operation of the MIC slew control, consider first a case in which the MIC interval is 1 second, the Kalman crank interval is 4 seconds, and the delay in implementing the MIC slew is 1 second (p=1). Assume that the time bias estimated after the 64th MIC interrupt is 1.4 seconds, that there is no frequency error, and that the time bias is perfectly estimated. This scenario is illustrated in  where the data is identified with o's (the \u201co\u201d data):","After the rounded time bias is removed using equation (15), the time bias drops immediately to 0.4 seconds. This corresponds to point M+. Note that the time bias is the difference between the \u201co\u201d data and the slope 1 line. Following this, there is a period of one second in which the default MIC interval count (n) is used. The MIC slew control then removes the remaining 0.4 seconds of time bias by calculating a MIC interval count profile from equations (28) and (31). (The quantization effects are ignored in this example since they will not show up on a plot.) Since the time bias is positive, the unquantized MIC interval count is greater than its default value and the true time between MIC interrupts is lengthened so that the minimum length constraint is not active.","Next consider the case where the time bias estimated after the 64th MIC is \u22120.4 seconds. The true time between MIC interrupts resulting from using equation (31) would be lengthened by {fraction (0.4\/3)} seconds. Therefore the minimum length constraint becomes active and the true time in the Kalman crank is increased by one second. The MIC is then aligned with the UTC time tics in the interval between MIC interrupts  and . During this alignment, the true time interval between MIC interrupts is increased to 1.6 seconds. Note that in this example also, there is a period after the 64th MIC in which the default MIC interval count is used. At the next Kalman crank time (the 68th MIC interval) the MIC interrupt is aligned with the UTC tic, but the time bias is now +1 second. Since equation (34) was used to propagate the filter estimate of the time bias, the Kalman filter \u201cknows\u201d this. When equation (15) is again invoked, the time bias is reset to zero (point M+).","Dual-Processor Subsystems","The GNS software executes on two processors, a tracking processor  and a navigation processor . In the preferred embodiment, two Mongoose V, Synova, Inc. processors ,  are used. They run on an adaptation of the 32-bit MIPS processor architecture. Like the GTA, the processors are implemented on a rad-hard HR2300 series gate array from Honeywell.  is a functional block diagram of the dual processor and  is a simplified layout of the hardware. Both processor hardware configurations are nearly identical and include Static Random Access Memory ,  and other custom hardware  with the exception that the navigation processor has a command and telemetry interface with the spacecraft  and the tracking processor has a control and data interface to the GTA . In addition, the tracking processor has no nonvolatile memory and thus is slaved to the navigation processor, which is responsible for booting it up  after a reset and continually monitoring its health.","The navigation processor communicates with the spacecraft via a memory-mapped, 8-Kbyte, dual-port RAM (DPRAM), which interfaces to PCI hardware  on the spacecraft side of the DPRAM. The \u201csharing\u201d of the DPIAN between the GNS and the spacecraft is arbitrated by the GSE by use of interrupts and defined access timing constraints. The navigation and tracking processors communicate with each other via interface software  and another memory-mapped 8-Kbyte DPRAM  and, like wise, arbitrate their access with the use of interrupts and defined timing constraints. While the navigation processor has read\/write access to this entire DPRAM, the tracking processor has read\/write access to the upper 4 Kbytes but only read access to the lower 4 Kbytes. This \u201cread-only\u201d memory provides a \u201cpseudo-non-volatile memory\u201d for the tracking processor, which is utilized during boot-up. The tracking processor communicates with the GTA via a custom address and data bus used for sending control and configuration information and receiving data and status. The software executes an extended Kalman filter  and provides orbit estimation and event prediction  and generates orbital elements  which is presented by way of a mathematical model immediately after the following functional descriptions of the software and its tasks.","GNS Software","The GNS software is presented as a functional block diagram in FIG. . It is partitioned between the tracking processor and navigation processor based on functional requirements, system topology, and required and available processor throughput. The navigation processor utilizes an embedded Operating System (OS) such as the Nucleus Plus produced by Accelerated Technologies, but only in a limited manner i.e., limited to task switching, interrupt handling, and minimal use of events and semaphores. The tracking processor does not make use of an OS due to unacceptable interrupt latencies on its high-rate interrupt (\u02dc667 sec). All navigation and tracking processor software is written in ANSI C, except for a minimal amount of modularized assembly code.","Tracking Processor Software","The major tasks performed by the GNS tracking software are listed in table 7. This software, in conjunction with the GTA, can acquire and track up to 12 space vehicles (SVs). The software  supports aided-search and sky-search acquisition modes for acquiring satellites on a channel-by-channel basis. In aided-search, aids  generated by the navigation processor are used to determine the SV pseudo-random noise (PRN) and the Doppler range searched out for potential acquisition. In sky-search, no aids are provided and the system searches a wide Doppler range for SV PRNs from a predetermined set. For each signal acquired, the software uses a third-order, phase locked loop  to track the carrier, and an aided first-order, delay-locked loop to track the CA code. A signal monitor is used to determine when a channel drops lock. When this occurs, the processor autonomously tries to reacquire the satellite with a short search. If this fails, the channel switches to the sky-search acquisition mode or if aided by the NP, to the aided acquisition mode.","The software makes carrier and pseudo-range measurements  every second for each satellite in track, and outputs these data to the navigation processor. In addition, the software builds GNS message subframes , validates them using the message parity bits, and then out puts validated subframes to the navigation processor message handler software . Interrupts generated by the GTA control the sampling and processing of the data from the 2 tracking channels on the GTA. A measurement signal generated by the GTA is used to control processing and handling of the pseudo-range and carrier phase data, and subsequent output to the navigation processor.",{"@attributes":{"id":"P-d0e21530","num":"00002"},"tables":{"@attributes":{"id":"TABLE-US-00007","num":"00007"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"center"}},"thead":{"row":[{"entry":"TABLE 7"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}},{"entry":"Major GNS Tracking Software Tasks"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}]},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":{}}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"35pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"182pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"Accept and apply acquisition aids"]},{"entry":[{},"Execute sky-search algorithm in absence of aids"]},{"entry":[{},"Control the GTA"]},{"entry":[{},"Track up to 12 SVs simultaneously"]},{"entry":[{},"Generate validated GPS message subframes"]},{"entry":[{},"Determine SV transmit time for latched data"]},{"entry":[{},"Execute commands from the navigation processor"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}]}}]}},"br":{}},"Table 8 details the major tasks performed by the navigation processor. The core of the navigation processor software is the Kalman filter task, which consists of two main parts: the Extended Kalman Filter (EKF) and the Short-Term Propagator (STP). The Kalman filter updates the state vector and covariance at 180-second intervals and the STP generates all of the data products and outputs them at 1-second intervals.",{"@attributes":{"id":"P-d0e21683","num":"00002"},"tables":{"@attributes":{"id":"TABLE-US-00008","num":"00008"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"center"}},"thead":{"row":[{"entry":"TABLE 8"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}},{"entry":"Major GNS Navigation Software Tasks"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}]},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":{}}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"Process 1 CCSDS telecommand packet per second"]},{"entry":[{},"Output 6 CCSDS telemetry packets per second"]},{"entry":[{},"Output unpacketized data to guidance and control instruments"]},{"entry":[{},"every second"]},{"entry":[{},"Generate a pseudo-range table"]},{"entry":[{},"Build OPS message data stores"]},{"entry":[{},"Execute Kalman filter crank every 180 seconds"]},{"entry":[{},"Output a PVTSE data set once per second; (PVTSE = Position,"]},{"entry":[{},"velocity, time, Sun vector events)"]},{"entry":[{},"Generate acquisition aids"]},{"entry":[{},"Generate control for steering 1 PPS signal"]},{"entry":[{},"Generate and output long-term propagation data"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}]}}]}}},"The GNS uses a Fault Detection and Exclusion (FOB) RAIM technique. The software excludes measurements from the GSE whose residuals exceed a defined threshold via the Kalman filter. The GNS uses a current-state EKF to obtain the current best estimate of the position and velocity of the TIMED satellite center of mass. The EKF is essentially a simulation corrected by periodic measurement updates. The updates normally occur every 180 seconds and process GNS range and phase measurements for up to 12 satellites in track. The state propagation in the EKF contains a Jacchia upper atmospheric density model and a gravity model using degree and order 15 spherical harmonics from the EGM96 database.","The EKF uses a state space containing 45 states, defined in Table 9, to model the measurements. The drag error state normally represents the error in the drag model, which is dominated by the unpredictability of the upper atmospheric density. If the parameters for the density model are unavailable, the drag error state can be used to model the whole drag effect.",{"@attributes":{"id":"P-d0e21886","num":"00002"},"tables":{"@attributes":{"id":"TABLE-US-00009","num":"00009"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"center"}},"thead":{"row":{"entry":"TABLE 9"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}},{"entry":"The GNS EKF State Space"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"119pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"84pt","align":"center"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"Parameter","Number of States:"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"2","align":"center","rowsep":"1"}}]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"119pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"84pt","align":"char","char":"."}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"Position","3"]},{"entry":[{},"Velocity","3"]},{"entry":[{},"Drag Parameter Error","1"]},{"entry":[{},"Clock Error","1"]},{"entry":[{},"Frequency Error","1"]},{"entry":[{},"Selective Availability Markov Process","24"]},{"entry":[{},"Integrated Carrier Phase Bias","12"]},{"entry":[{},"Total","45"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"2","align":"center","rowsep":"1"}}]}]}}]}}},"The prediction capability of the EKF is primarily determined by how rapidly the atmospheric density fluctuates in reaction to solar activity, which will be at a maximum during the TIMED mission.","The clock and frequency error states are used within a control system that drives the STA's measurement clock and 1 PPS output to be coincident with UTC epochs. This latching signal is also used to define the time of validity of the output data products.","A two-state damped harmonic oscillator driven by process noise models the selective availability errors for each SV link. The integrated carrier phase bias is used to model the integer ambiguity associated with the phase tracking process. These selective availability (SA) Markov and carrier phase biases are reinitialized when new satellites are brought into track or during reacquisition after a tracking loss of lock.","After each measurement update, the Kalman filter state is propagated for 180 seconds to the next (anticipated) update time. After this, the STP propagates the state for two more 180-second intervals. These additional propagations are used only for generating real time GNS output data products for the spacecraft (position, velocity, time, Sun vector, event notification flags, and data validity flags) and do not affect the Kalman filter solution. A 5th degree Hermite interpolating polynomial is fit to the three points position and three velocity points forming the boundaries of the two additional propagations. The interpolating polynomial matches position and velocity at the boundary points and is used to interpolate position and velocity to one second intervals. The interpolated position and velocity are used to generate the five event notification flags: 1) primary ground station contact, 2) backup ground station contact, 3) SAA encounter, 4) polar region and 5) day\/night at sub-satellite point (used for signaling a terminator crossing).","Approximately every 12 hours, a long-term propagation (LTP) is executed in order to predict the primary and backup ground station contacts, and the SAA encounters for the next 60 hours. The duration of the propagation is limited by the required accuracy of the data, which is largely dependent on the uncertainty of the atmospheric density at solar max. During the LTP, a state vector corresponding to each predicted ground station contact is saved and used to generate an orbital element set for the respective contact. All of the LTP data products are used solely on the ground (i.e., not utilized onboard) by the MOC and the instrument Payload Operations Centers (POC).","Extended Kalman Filter","The TIMED system thus far described is realized through the application of an extended Kalman filter. The filter distills information accumulated from received GPS signals into current state estimates. This is accomplished by propagation and measurement equations which involve nonlinear transformations of the state. A mathematical model defining the processes of the program implementation of the extended Kalman filter is presented immediately after the following graphic description of the filter.","The time update of the Kalman filter state contains models for the earth's gravity field and for drag. However, since the drag model is uncertain, an error state is included in the state space. Small errors induced by these and other sources are eliminated by a linearization process wherein small errors in the state are estimated and added to the whole value state.","The filter processes both pseudo-range and carrier phase measurements. The pseudo-range measurements offer a noisy (3-5 m with CA code) measurement of slant range from the TIMED satellite to each GPS satellite. The carrier phase measurements provide precise measurements of line-of-sight velocity which is fully exploited only when the selective availability mode is off.","The Kalman filter state space is divided into two partitions which are dynamically uncoupled. The first partition includes the states which directly determine the satellite position and time, i.e., position, velocity, drag parameter error, receiver clock and frequency bias. These states evolve according to nonlinear dynamics. The influence of the receiver position on the measurements is also a nonlinear transformation.","The filter estimates current position and velocity in the conventional inertial system (J2000). The position and velocity change as a result of gravitational acceleration (as provided by a 15\u00d715 spherical harmonic model) and the drag acceleration (provided by the U.S. Space Command high altitude atmosphere model). Any errors in the drag model are absorbed by the drag error state.","The effects of the imperfect receiver clock are modeled by the time bias and clock frequency error which have been defined in the Receiver Timing section of this patent specification. The time rate of change of the receiver clock is the receiver frequency error.","The second partition of the state space contains states which do not directly affect TIMED position and time. They are used to model errors in the GPS measurements. These states evolve according to linear dynamics and their influence on the measurements is also linear.","These selective availability states are a set of second-order Markov processes, one for each link, which model the effect of selective availability on the pseudo-range and carrier phase measurements. A second order process is used with an undamped natural frequency of 300 seconds, damping ratio of 0.4, and a steady state standard deviation of 75 m. When a GPS track is initiated, the selective availability state standard deviation is initialized with the steady state standard deviation.","The carrier phase bias states model the unknown cycle ambiguity in the phase-derived range. The carrier phase bias state standard deviation is initialized at 1.e9 when a new track is initiated, or when loss of phase-lock is detected.","The Kalman filter can be initialized in one of three ways: 1) The normal mode of initialization through pre-loaded orbital insertion data. The separation position and velocity in an ECEF coordinate system are loaded by command prior to launch. When the separation event is detected, the Kalman filter transforms the initial conditions to J2000, initialize its state and covariance, resets the crank interval counter, and begins cycling. 2) through a GPS doublet. In this mode, the GPS point solutions are used to establish the initial position, velocity and associated covariance. This process assumes that the point solutions are close enough in time that the TIMED velocity can be regarded as constant. The Kalman filter uses the GPS doublet to reinitialize this state if it detects that its state vector is inconsistent with a large number of GPS measurements. 3) through a commanded upload. In this mode a NORAD two line element set (compatible with the SGP4 orbit propagator) is transformed to a J2000 state vector and covariance by the ground system. This mode is intended for unusual cases in which the GPS cannot function.","The filter time update propagates the state and covariance between measurements. The filter time update is done immediately after the measurement update so that the MIC corrections can be spread evenly across a Kalman crank interval. This requires that the Kalman filter measurement updates be evenly spaced.","Every 180 seconds, difference measurements are formed on the basis tracker and GTA data latched at the corresponding MIC. The difference measurements are the pseudo-range and carrier phase minus their predicted values. At this time, measurement sensitivity is calculated. The filter state and covariance are updated by the measurement update process. The Kalman filter residuals are monitored to verify that there are no huge discrepancies between the Kalman filter state and the measurements. If there are, the filter is reinitialized using the GPS doublet. After the measurement update, the GNS output products are generated and a check is made to determine whether the long-term propagation should begin.","The independent variable in this state propagation is receiver time. An increment of receiver time differs from an increment of true time because of the receiver oscillator frequency error. The position, velocity, drag, clock and fractional frequency error states (the dynamic states) are coupled dynamically to each other by a system of nonlinear ordinary differential equations, the derivations of which commences with equation (35). A transition matrix that propagates small errors in these states is generated using the gradient of the dynamic state derivative with respect to the dynamic state. This discrete time process noise matrix for the dynamic states is also found by integrating its o.d.e. which involves the same gradient.","The system of nonlinear ordinary differential equations describing the state dynamics is solved by using an 8order Runge-Kutta Fehlberg algorithm. The performance of the filter begins to degrade because of measurement thinning if the step size is increased beyond 180 seconds. Because propagation is from measurement to measurement, a fixed-step size version of the algorithm is used. The RFK8 algorithm requires 12 function evaluations per step. The subroutine that implements the algorithm integrates vector (not matrix) differential equations. Therefore, the discrete time process noise matrix must be remapped into a vector as well as its derivative.","The selective availability (SA) states and the phase biases (the \u201csat\u201d states) obey linear dynamics. The separation between measurements is constant, allowing the continuous part of the transition matrix and discrete time process noise to be precomputed. The \u201csat\u201d states are ordered according to tracker channel. The transition matrix (and the discrete time process noise matrix for the \u201csat\u201d states) model the effects of a new GPS satellite in a given tracking channel.","A full state (\u201cdyn\u201d+\u201csat\u201d) transition matrix is formed from the block-diagonal concatenation of the \u201cdyn\u201d and \u201csat\u201d transition matrices. The \u201cdyn\u201d partition is computed by solving an o.d.e. containing the \u201cdyn\u201d state derivative gradient. The covariance factor is updated for deterministic effects by premultiplying it by the full state transition matrix using a sparse matrix multiply routine. To accomplish the stochastic update of the covariance factor, a vertical concatenation of the deterministically updated covariance factor and the full-state discrete time process noise factor is formed. This array is then decomposed into an orthogonal matrix and upper triangular matrix using a sparse QR decomposition algorithm. The updated covariance factor (transpose) is found in the upper part of the upper triangular matrix.","The raw pseudo-range and carrier phase measurements are formed from the following quantities: 1) fractional chip count (pass-through from GTA); 2) chips into epoch (pass-through from GTA); 3) epochs into bit (from tracking SW bit sync process); 4) high order bits of Z-count or TOW (Time Of Week) (from message); 5) GPS week (from message); 6) whole cycle count; 7) fractional cycle count; and 8) receiver time.","Predicted pseudo-range and carrier phase for each satellite in track is then calculated from the receiver position, the SA and phase bias states of the GPS message ephemeris. Since the predicted pseudo-range is a function of the satellite position at the predicted transmit time (which in turn depends on the predicted pseudo-range) this process is iterative. The Kalman filter processes the difference between the raw measurements and their predicted values. The measurement sensitivity depends on the unit vectors from the TIMED satellite to the GPS satellites in track. They are produced in the calculation of predicted pseudo-range.","In the Levy square root covariance Kalman filter derivations, the array on the left of equation (67) is formed from the measurement noise factor, the time-updated covariance factor, and the measurement. This array is factored into an orthogonal matrix and an upper triangular matrix containing the measurement update covariance factor, and the W matrix which is used to compute the Kalman gain.","After every measurement update, the filter launches a low precision state propagation to fill a table containing position, velocity, sun-vector, event notifications, and time for the next 180+ seconds. In this mode the orbit propagator may only use the J2 part of the gravity module to improve execution speed. The event notifications are: 1) entry into the South Atlantic Anomaly (SAA) or Polar regions, 2) ground contacts and 3) terminator crossings.","Every 12 hours, the Kalman filter launches a high precision orbit propagation using its last computed state vector. This trajectory is monitored for contact events and any SAA entry. When a contact event is found, the trajectory points near the AOS are used to define an element set appropriate for used in the NORAD SGP4 algorithm. After every measurement update, the Kalman filter produces acquisition aides for the tracking software. The aids contain Doppler and Doppler rate for all GPS satellites based on the current TIMED state vector and current almanac ephemeris.","To avoid missing an event because of the granularity of the propagated orbit, the event detection and prediction is based on polynomials fit to functions of the propagated points. For the contact events, a polynomial is fit to the elevation of the TIMED satellite as seen by the various ground stations evaluated at the trajectory points. The roots of this polynomial are the AOS (going+) and LOS (going\u2212) times. If AOS\u2212LOS>5 minutes, it is a valid contact. For the South Atlantic Anomaly, a polynomial is fit to the latitude and longitude polynomials of the sub-satellite point. The points at which the latitude and longitude polynomials cross the latitudes and longitudes of the SAA region is calculated. If the satellite is in the SAA latitude band at the same time it is in the longitude band, an SAA event is flagged. The polar region is done in a similar fashion, except only the latitude is used. For the terminator crossings, a curved is fit to the inner product of the sun-vector and the unit normal to the reference episode at the sub-satellite point. The roots of this polynomial define the terminator crossings.","Kalman Filter Implementation","The following presentation mathematically describes the processes carried out by the software in implementing the various routines used to accomplish the tasks of the extended Kalman filter which forms the nucleus of the GNS.","The state space for the TIMED GNS Kalman filter is: \n\n\nwhere w(\u03c4(t)) is the position and velocity of the TIMED center of mass (CM) in the conventional inertial system (CIS): \n\n\nNote that w(\u03c4(t)) is defined as a composite function: w(\u2022) is an explicit function of true time. The evolution of w(\u2022) is governed by Newton's second law, which involves derivatives taken according to true time (not receiver time). The units of w(\u2022) are meters and meters per second. The drag error parameter is defined as the ratio of the true value of the parameter group \u03c1\u00b7C\u00b7A\/(2\u00b7M) to its nominal value: \n\n\nThe state \u03b1 includes the effects of errors in density, drag coefficient, projected area, and satellite mass. The first term on the right is the true parameter group, the second is the parameter group predicted by the density model, with the nominal spacecraft ballistic coefficient, mass, and an average projected area.\n","The clock related states T(t) and \u03b5(t) and are defined according to:",{"@attributes":{"id":"P-00246","num":"00246"},"br":{},"in-line-formulae":[{},{}],"i":["T","t","t","t"],"maths":{"@attributes":{"id":"MATH-US-00054","num":"00054"},"math":{"@attributes":{"overflow":"scroll"},"mtable":{"mtr":{"mtd":[{"mrow":{"mrow":[{"mi":"\u025b","mo":"\u2061","mrow":{"mo":["(",")"],"mi":"\u03c4"}},{"mfrac":{"mrow":{"msubsup":{"mi":["f","ref"],"mn":"0"},"mo":"-","mrow":{"msub":{"mi":"f","mn":"0"},"mo":"\u2061","mrow":{"mo":["(",")"],"mi":"\u03c4"}}},"msubsup":{"mi":["f","ref"],"mn":"0"}},"mo":"\u2062","mrow":{"mrow":{"mo":["(",")"],"mrow":{"mi":["Fractional","frequency","bias"],"mo":["\u2062","\u2062","\u2062","\u2062"],"mstyle":[{"mtext":"\u2003"},{"mtext":"\u2003"}]}},"mo":"."}}],"mo":"\u2261"}},{"mrow":{"mo":["(",")"],"mn":"37"}}]}}}}},"The effect of selective availability is modeled as a two-state Markov process for each satellite. The vector sa(t) contains two states for each satellite that can be tracked for a total of 2nstates:\n\n()\u2261[()() \u2022 \u2022 \u2022 ()()].\u2003\u2003(38)\n\nThe odd elements of sa(t) represent the effect of SA in meters on the pseudo-range and integrated carrier measurements. The even elements are the (receiver) time derivatives of the odd elements. The vector b(t) is an array of phase derived range biases to account for the arbitrary initialization of the integrated carrier phase measurement:\n\n()\u2261[()() \u2022 \u2022 \u2022 ()()](Phase derived range biases).\n","The equations defining the forming and processing of the Kalman filter measurements use the index k to denote times at which a Kalman filter measurement is to be processed, which is every mMIC interrupt. Previously, k was used to denote the MIC times.","The pseudo-range measurement begins with the raw data where the GPS signal coming into the TIMED antenna at true time \u03c4 is:\n\n(\u03c4)=((\u03c4))\u00b7((\u03c4))\u00b7sin(2\u03c0{circumflex over (\u0192)}(\u03c4)\u2212\u03a6(\u03c4))\u2003\u2003(39)\n\nwhere PRN is the PRN (pseudo random noise) number of the satellite in tracking channel \u03bd, CA(PRN,t) is the CA (coarse acquisition) code transmission for the satellite as a function of the signal-indicated transmit time t(\u03c4), m(t(\u03c4)) is the data modulation of the GPS transmission, sin(2\u03c0{circumflex over (\u0192)}t(\u03c4)\u2212\u03a6(\u03c4)) is the GPS carrier, {circumflex over (\u0192)}is the nominal GPS carrier frequency 1575.42 Mhz, and \u03a6(\u03c4) is the phase retardation of the GPS carrier (relative to the code) caused by ionospheric dispersion. This is equal to the difference in the phase and group delays: \n\n\nwhere I(\u03c4) is the group delay in seconds and I(\u03c4) is the phase delay. The GNS receiver generates a local replica of the GPS CA code, which is synchronized with the received code when the receiver has locked-up:\n\n((\u03c4))=((\u03c4))\n\nAt receiver time t\u2261t(\u03c4), the local code phase is latched, this is the measurement interrupt clock (MIC) event. The value of the transmit time in seconds since the GPS standard epoch in terms of the local code phase and quantities in the GPS message is: \n\n\nHere t is the receiver estimate of the transmit time of that point in the CA code that the local code was correlating with at the kMIC. It is composed of an integer part and a floating point part which can never exceed 6 seconds. The quantities bits_n_sframeand epochs_n_bitrepresent the number of completed bits into the current subframe and the number of completed code epochs into the current bit for tracking channel x. They are maintained by the tracking software after it has achieved bit and frame synchronization. The quantities chx_cacode_phase and chx_codenco_phase are read from the registers on the TIMED GTA chip containing the full chip count and the fractional chip count for tracking channel x. The variable GPS_week (the current GPS week) is initially set by the contents of word  of subframe  in the GPS message and is incremented by one (and seconds_n_week is decremented by 7\u00b786400) if seconds_n_week=TOW\u00b76+T_float exceeds 7\u00b786400. TOW is the number of 6 second counts from the beginning of the week to the beginning of the next subframe, taken from the handover word of the last completely assembled subframe.\n","The pseudo-range is then constructed as: \n\n\nwhere c is the speed of light, and t=MIC_time+tis the (controlled) receiver time corresponding to the MIC. Note that the large integers tand t_int are differenced before subtracting the floating point number t_float so as not to lose precision. The model for the indicated receive time is: t=\u03c4+T.\n","The signal indicated transmit time is the transmit time derived from the modulation on the GPS signal. The model for the signal-indicated transmit time is: \n\n\nThe receiver indicated transmit time is the signal indicated transmit time corrupted with receiver tracking errors: \n\n\nwhere t is the signal-indicated transmit time and \u03b4t is the tracking error: \u03c4\u2261\u03c4(t) is the true transmit time of the signal being tracked in channel \u03bd at the kMIC interrupt, T(\u03c4) is the GPS satellite clock bias, sa(\u03c4) is the selective availability process, and the receiver tracking error, \u03b4t, is assumed to be white at the MIC interval. The true transmit and receive times are related by: \n\n\nwhere v(r) is the group speed of the GPS transmission as a function of position, and where the integration path (PATH) begins at the GPS satellite position at the true transmit time (r(\u03c4), and ends at the position of the receiver antenna at the receive time (r(\u03c4)=r(\u03c4)+T(\u03c4)L). Here r(\u03c4) is the TIMED center of mass position in the CIS system at the true receive time \u03c4, r(\u03c3) is the true position of the GPS satellite in track by channel \u03bd at the transmit time \u03c4, Lis the CM to antenna phase center lever arm in the TIMED body system, and T(\u03c4) is the transformation from body to inertial coordinates obtained from the attitude system.\n","Assuming: \n\n\nthe free space range delay and the ionospheric delay are separable, so that the time difference may be modeled as: \n\n\nwhere \u0394(\u03c4) is the free-space range delay (in seconds) for the \u03bdlink, and \n\n\nis the ionospheric range delay (in meters) at the true receive time. Here n(r) is the index of refraction as a function of position. The free space range delay is given implicitly by: \n\n\nwhere r(\u03c4)=r(\u03c4)+T(\u03c4)Lis the position of the TIMED GPS antenna. The model for the raw pseudo-range measurement is: \n\n\nwhere a second order markov random process in the range domain keyed on receiver time, sa(\u03c4), is used to model the true selective availability process\u2014sa(\u03c4) (note the sign reversal).\n","The Kalman filter pseudo-range difference measurement is constructed as the difference between the measured pseudo-range and pseudo-range predicted from all measurements processed up to the previous time:\n\n()\u2261\u03c1\u2212{circumflex over (\u03c1)}\u2003\u2003(47)\n\nThe predicted pseudo-range is given by:\n\n{circumflex over (\u03c1)}\u00b7({circumflex over (\u0394)}()\/()+())\n\nwhere:\n\n","An iteration is used to find the solution to the light-time equation:\n\n0=\u03be({circumflex over (\u0394)})\n\nwhere: \n\n\nr(\u03c4) is the position of the \u03bdsatellite in the earth-fixed CTS frame calculated from the GPS message ephemeris.\n","Using an initial guess for \u0394: \n\n\nthe iteration proceeds as: \n\n\nuntil |\u0394(j+1)\u2212\u0394(j)|\u2266tol. Typically, tol=1.e\u221211 seconds. At convergence set {circumflex over (\u0394)}=\u0394(j).\n","In the Kalman filter, the pseudo-range difference measurement is determined by substituting into equation (47): \n\n\nthis assumes that I(t)=I(\u03c4) and T(t)=T(\u03c4) (no errors in the ionospheric compensation or GPS clock compensation in the GPS message data). \u03b4\u03c1=c\u00b7\u03b4t is a white noise process representing all high frequency delay-locked loop errors, and \u03b4\u0394\u2261\u0394(\u03c4)\u2212{circumflex over (\u0394)} is the error in the estimated free space range delay. The solution for \u03b4\u0394 in terms of the Kalman filter error state follows:\n","The errors in position and velocity are synchronous, therefor: \n\n\nAssuming that the attitude system provides an orientation matrix that is a perfect real-time reference and the lever arm is perfect: \n\n\nso: \n\n","The true quantity minus the error is substituted for the estimated quantities in equation (48):\n\nWhere: \n\n\n\n\nSolving for \u03b4\u0394 yields: \n\n\nThe measurement model for the pseudo-range observable is then: \n\n\nleading to the concatenated measurement model: \n\n\nwhere \u03b4\u03c1is modeled as white Gaussian noise with (\u03b4\u03c1)=diag(\u03c3) and where the measurement sensitivity partitions are: \n\n\n[\u2202\u0394\/\u2202r]as defined in equation (54) \n\n\nand [\u2202\u0394\/\u2202T]as defined in equation (53)\n\n=[1 0 1 0 \u2022 \u2022 1 0]\u2003\u2003(59)\n","The raw phase measurement in cycles is constructed as: \n\n\nwhere chx_cyc_cnt_upper, and chx_cyc_cnt_upper are the registers on the TIMED GTA chip containing the whole cycle count and the fractional cycle count for tracking channel x.\n","In deriving the truth model for the raw phase measurement, the oscillator phase as a function of true time is given by: \n\n\nwhere T* is the uncontrolled time bias.\n\nThe GPS signal coming into the antenna is:\n\n(\u03c4)=((\u03c4))\u00b7((\u03c4))\u00b7sin(2\u03c0{circumflex over (\u0192)}(\u03c4)\u2212\u03a6(\u03c4))\n\nIf the phase of the signal after code and data wipe-off is \u03a6(\u03c4):\n\n\u03c6(\u03c4)=2\u03c0{circumflex over (\u0192)}(\u03c4)\u2212\u03a6(\u03c4)\n\nas developed by equation (43), \n\n\nand \n\n\n","The ionospheric phase delay relative to a wave propagating in free space is:\n\n(\u03c4)=\u2212(\u03c4)\n\nThe minus sign indicates the wavefront arrives before a wavefront propagating in free space. Referring to the definition \u03a6(\u03c4) in equation (40), the phase advance relative to the code is: \n\n\nwhere I(\u03c4) the ionospheric group delay defined above. Thus:\n\n\u03a6(\u03c4)=2\u03c0{circumflex over (\u0192)}(\u03c4(\u03c4)\u2212\u0394(\u03c4)+((\u03c4)+())\/)\n","The downconverter-sampler effectively mixes the received signal with a kmultiplication of the fundamental oscillator. The combined effect of the downconversion and sampling process result in a value for kof: \n\n","The continuous-time representation of the output of the downconverter-sampler is: \n\n\nwhere LFP{x(t)} represents a low-pass filterring of the process x(t). When locked, the phase tracking loop will match the total phase of this signal, modulo 2\u03c0. The model for the raw phase measurement (in cycles) is then:\n\n\u2003\u03c6(\u03c4)=([\u03a6(\u03c4)\u2212\u03c8(\u03c4)]\/2\u03c0)++\u03b4\u03c6\n\nwhere N is the cycle integer ambiguity which is constant as long as channel \u03bd retains phase lock, and \u03b4\u03c6 represents the phase tracking error, which is regarded as a white noise process at the Kalman crank iterval. The GNS tracking processor samples this process at the MIC interrupts and performs the following deterministic transformation on the raw phase samples to provide the Doppler sense that is conventional to the GPS post-processing community (i.e. consistent with the RINEX file definition), and to eliminate the large variation in phase caused by the known part of the zero Doppler offset: \n\n","This transformed phase data is what crosses the boundary between the tracking processor and the navigation processor. The model for the phase data is derived by combining the above results: \n\n\nand \u03bb=c\/{circumflex over (\u0192)}is the GPS L wavelength. From equation (4), t*(\u03c4)=\u03c4+T*(\u03c4) leading to: \n\n\nand where the biases have been absorbed into b\u2261\u2212(N\u2212k\u03c6\n","The observable processed by the Kalman filter is the difference between the phase measurement and its predicted value based on the current state estimates:\n\n()=\u03c6(\u03c4)\u2212{circumflex over (\u03c6)}\n","The estimate of the phase measurement is given by:\n\n{circumflex over (\u03c6)}={circumflex over (\u0192)}((\u03c4)\u2212(\u03c4)+{circumflex over (\u0394)})+(())\/\u03bb\n","The phase difference measurement is given by: \n\n","Because of the similarity between equations 64 and 55, the concatenated measurement y(k)\u2261[y(k), y(k) . . . y(k)] can be in the same form as equation (56): \n\n\nwhere \u03b4\u03c6is modeled as white Gaussian noise with \n\n","The concatenated measurement matrices is defined as: \n\n","The measurement update proceeds as follows:\n\n","The whole-value dynamic state is re-initialized as:\n\n\n","The evolution of the position and velocity states depends on the drag and clock states, but not the SA states or the PDR range biases. The state dynamics can therefore be decoupled by partitioning the state as follows. \n\n\nThe time update is then represented as: \n\n","The update of xcan be written in terms of the transition matrix \u03a62(t,t) since its dynamics are linear. The vector \u03c6(x(t),t,t) is the soution of: \n\n\nintegrated from tto twith x(t) as the initial condition.\n","By using the chain rule, the position and velocity partition w(\u03c4(t)) is evolved according to: \n\n","Where {dot over (\u03c4)}(t) is evaluated as described with respect to equation (11), and where the rate of change of w(\u2022) with respect to true time is f(w(\u03c4(t)),\u03b1,\u03c4(t)). The term {dot over (\u03c4)}(t) is the ratio of a true time differential to a receiver time differential and arises because the system is integrating with respect to receiver time. The explicit relation for the true time derivative f(w(\u03c4(t)),\u03b1,\u03c4(t)) is: \n\n\nwhere r(\u03c4)\u2261T(\u03c4)\u00b7r(\u03c4) is the CTS position of the TIMED CM, g(r(\u03c4)) is the acceleration of gravity, T(\u03c4) is the transformation from the conventional inertial system to the conventional terrestrial system (see \u201cGPS Theory and Practice\u201d by B. Hoffmann-Wellenhof, et. al., published by Springer-Verlag 1992, the contents thereof which is incorporated herein by reference), \u03c1(r(\u03c4),\u03c4) is the mass density from the atmospheric model, and \u03b2is the nominal TIMED ballistic coefficient, defined as M\/C\u00b7A. The earth-relative velocity coordinatized in the CIS frame is given by:\n\n(\u03c4)=(\u03c4)\u2212\u03c9(\u03c4)\n\nwhere \u03c9is the angular velocity of the Earth in the CIS frame. Note that the explicit dependence on receiver time is suppressed with the understanding that \u03c4=\u03c4(t). The time rate of change of the clock error is given by the following form of equation (12): \n\n","The time rate of change of xis then: \n\n","The PDR biases are not dynamically coupled with the SA states, therefor the transition matrix \u03a62(t,t) can be partitioned as: \n\n","The PDR bias states are true biases, they have no dynamics. However the transition matrix must take account of rising and setting satellites. (Loss of lock is modeled by increasing the covariance on the PDR biases to infinity.). To do this, a list of the PRN numbers is constructed for the satellites in each tracker. At receiver time t, PRN(t)is the PRN number of the satellite being tracked by receiver channel i, for i\u03b5{1,2, . . . , n}. If channel i is not tracking any satellite PRN(t)=0. The selector matrix S(t,t) is defined as:\n\n()=\u03b4(()())\u2003\u2003(76)\n\nWhere \n\n","For instance, assume a scenario with 3 tracking channels (n=3) and PRN , , and  are being tracked by channels , , and  at t. At measurement time t, PRN is , , and  are being tracked by channels , , and : \n\n","S(t,t) connects the satellite identities at time tto the identities at time t. Then:\n\n\u03a6()=()\u2003\u2003(77)\n","For each satellite, SA is modeled as a second order Markov process:\n\nThe solution can be written in terms of the transition matrix as: \n\n","Written in terms of the transition matrix, the foregoing is:\n\n()=\u03c6()\u00b7()\n\nwhere \u03c6(t,t) is given by:\n\n\u03c6()=\u03b1(2\u00d72)\n\n\n\n\u03c9=\u0394\u221a{square root over (1\u2212\u03be)}\n\n\u03b1\u00b7(\u00b7sin \u03c9\u2212\u03c9\u00b7cos \u03c9)\/\u03c9\n\n\u03b1\u00b7sin \u03c9\/\u03c9\n\n\u0394\u2003\u2003(78)\n\nThe full SA state vector is the concatenation of ncopies of the per-link SA states, so that the full SA transition matrix is block diagonal with \u03c6(t,t) on the diagonals:\n\n()=\u03a6(,t)\u00b7()\n\n\u03a6()=diag[\u03c6()](2\u00b7\u00d72\u00b7)\u2003\u2003(79)\n\nwhere t is a fictional time prior to updating the satellite states to account for the addition and deletion of satellites. Bookkeeping is accomplished with the selector matrix defined in equation (76) by segregating the SA states into terms associated with range (sa_) and those associated with range rate (sa_): \n\n\nwhere P is a (constant) permutation matrix given by: \n\n","The addition and deletion of satellites is accomplished with the selector matrix defined above: \n\n","P is a permutation matrix, there for its inverse is its transpose so the SA states are returned to their original order by premultiplying by the transpose: \n\n\nThe complete update to the SA states is:\n\n()=\u03a6()\u00b7()\n\nwhere:\n",{"@attributes":{"id":"P-00384","num":"00384"},"br":{},"in-line-formulae":[{},{}],"sub":["sa","k+1","k","k+1","k","mkv","k+1","k"],"i":["t",",t","P","\u00b7S","t",",t","P\u00b7\u03a6","t",",t"],"sup":["t","\u2212"],"b":"2","maths":{"@attributes":{"id":"MATH-US-00113","num":"00113"},"math":{"@attributes":{"overflow":"scroll"},"mtable":{"mtr":{"mtd":[{"mrow":{"mrow":[{"mi":"S2","mo":"\u2061","mrow":{"mo":["(",")"],"mrow":{"msub":[{"mi":"t","mrow":{"mi":"k","mo":"+","mn":"1"}},{"mi":["t","k"]}],"mo":","}}},{"mo":["[","]"],"mtable":{"mtr":[{"mtd":[{"mrow":{"mi":"S1","mo":"\u2061","mrow":{"mo":["(",")"],"mrow":{"msub":[{"mi":"t","mrow":{"mi":"k","mo":"+","mn":"1"}},{"mi":["t","k"]}],"mo":","}}}},{"mn":"0"}]},{"mtd":[{"mn":"0"},{"mrow":{"mi":"S1","mo":"\u2061","mrow":{"mo":["(",")"],"mrow":{"msub":[{"mi":"t","mrow":{"mi":"k","mo":"+","mn":"1"}},{"mi":["t","k"]}],"mo":","}}}}]}]}}],"mo":"="}},{"mrow":{"mo":["(",")"],"mn":"81"}}]}}}}},"The time update of the extended Kalman filter state estimates is exactly the same as the evolution of the Kalman filter state described in the foregoing truth model, i.e.: \n\n","The TIMED Kalman filter is a square root covariance implementation wherein the state error covariance P=cov(\u03b4x) is maintained in factored form as P=P\u00b7Pwhere Pis upper triangular and P=(P). The the covariance factor update is achieved by post multiplying the transpose of the transition matrix:\n\n\u00b7\u03a6()\u2003\u2003(82)\n\nwhere {tilde over (P)}is the state error covariance after the deterministic update and prior to the stochastic update.\n","The full transition matrix used in equation (82) is: \n\n\nwhere \u03a6(,t) is as computed above, and \u03a6(t,t) is the solution to: \n\n\nbetween \u03be=tand \u03be=t. The initial condition is \u03a6(t,t)=I. Fis the gradient of fwith respect to x=[w,\u03b1, T,\u03b5]as derived below: \n\n\nThe partitions of Fare: \n\n\nIn the last two rows above: \n\n","The above results are substituted into equation (84): \n\n\nwhere {dot over (\u03c4)}=(1+u(t)\u2212\u03b5(t))and fis given by equation (72). The \u2202f\/\u2202w partition is: \n\n\nIn the above differentiations, variation of density with position are not considered. The \u2202f\/\u2202\u03b1 partition is given by: \n\n\nThe \u2202f\/\u2202\u03c4 partition is: \n\n\nwhere {dot over (v)}(\u03c4) is as given in equation (72) and the important terms in {umlaut over (v)}(\u03c4) are given by: \n\n\nwhere the time rate of change of the Earth relative velocity is: v={dot over (v)}\u2212{overscore (\u03c9)}v (89)\n","The effects of process noise on the covariance factor are accounted for by the following Q-R decomposition: \n\n\nwhere T is an orthonormal matrix and QD is a discrete-time process noise covariance matrix for the entire state, which is partitioned as: \n\n\nwhere QD=cov(\u03b4x) is the error covariance of the xpartition of the state. QDis the solution of: \n\n\nbetween \u03be=tand \u03be=t. The initial condition is QD=0. The square root QDis given by: QD=USwhere QD=USUis the SVD factorization of (the symmetric) QD. (QDobtained in this way is a symmetric square root, not lower triangular. Although lower triangular square roots are baselined in the Levy SRCF algorithm, any square root will do)\n","The process noise for the dynamic states (Q) is essentially a tuning parameter. The physics of the problem dictate that: 1) There should be no process noise driving position. 2) There should be enough process noise driving the velocity to cover all of the unmodeled accelerations (third body effects, Earth tides and so on). 3) The process noise on the drag parameter must be large enough to allow the filter to react to changes in the conditions in the upper atmosphere. 4) There should be enough process noise driving the clock frequency error \u03b5 to model the oscillator Allan variance.","Analytically, the process noise for the SA states is: \n\n\nwhere the blocks are initialized to the steady state SA covariance matrix if the satellite is new in track, or the accumulated process noise appropriate for an interval of length \u0394=t\u2212tif it is not a new satellite: \n\n\nwhere the steady-state covariance is: \n\n\n\u03c3is the steady state standard deviation of the sa process (currently 75 m), \u03c3=\u03c3{overscore (\u03c9)}is the velocity sigma, and {overscore (\u03c9)}is the natural frequency of the sa markov (currently 300 seconds). The covariance for the existing satellites is: \n\n","The process noise for the carrier cycle ambiguities is zero unless the satellite is new or a break in track has occurred, in which case it is set to a very large value. Thus: \n\n","The GNS state can be initialized or reset by any one of three different ways:\n\n","Two GPS point solutions are used to initialize the state and covariance partitions for all of the dynamic states except for drag. In each point solution, the system solves for the receiver position and clock parameters. It assumes constant velocity, the two point solutions are therefor treated as data for estimating the position, velocity, receiver clock error, and receiver fractional frequency error at the second epoch. At least 4 satellites must be in track before point solutions can be obtained which are defined completely by the data. With the inclusion of prior information on the clock and fractional frequency error, the technique works with three satellites. The information on the clock is obtained from the constraint that the propagation delay is around 60 milliseconds (+\/\u221220 milliseconds) and is applied in the non-linear least squares point solutions. The information on the fractional frequency error is obtained from preflight calibration and is applied in the combining procedure.","Under the assumption of constant velocity, and assuming there is no MIC control being applied, equation (9) may be approximated as {dot over (T)}=\u2212\u03b5, then: \n\n\nz=[z,z ] with {circumflex over (z)}=[{circumflex over (r)}(t),{circumflex over (T)}(t)]is then calculated from the position-clock point solutions at epochs i=1,2 (as described below). The point solution estimate errors are regarded as independent (although this is not true for the errors caused by selective availability), to enable the system to solve the Bayesian least-squares problem: \n\n\nwhere H is as above, \u03a3 and \u03bc represent any prior information on x, and R is the measurement noise associated with uncertainty of the single point solutions given below. The solution to this problem is obtained using the same method that was used to perform the measurement update, namely equations (67) and (68). This is a square root procedure requiring that the covariance matrices be factored as \n\n\nand R=RRwhere \n\n\nand Rare upper triangular. Since only prior information need be incorporated in the case where there are only three satellites in the solution; \n\n\nand \u03bc (partitioned consistent with the partitioning of x in equation (97)) are of the form: \n\n\nwhere \u03b5and \u03c3 are the prior estimate of the fractional frequency error and its associated one-sigma uncertainty. The noise factor is given by: \n\n\nwhere \u0393are the covariance matrices from the point solution nonlinear least-squares procedure described below. The aposteriori covariance and state estimate are nexed mapped into the Kalman filter order.\n","The point solutions used above are arrived at by the following a nonlinear least squares solution to the point navigation equations.","Starting with an initial guess for the receiver position in the inertial frame ({circumflex over (r)}) and the receiver clock error ({circumflex over (T)}), the initial guess for the clock bias is obtained by subtracting the estimate of the transmit time corrected for a mean propagation time of 60 milliseconds with the receiver reference time from the tracking processor:\n\n\u2212(+0.060)\n","The true time at the receiver \u03c4=t+{circumflex over (T)} is then determined:\n\nFor tracking channels v=1, n, the implicit light time equation is solved: \n\n\u2003\u03c4=\u03c4\u2212\u0394\n\n(\u03c4)=(\u03c4)(\u03c4)\u2003\u2003(98)\n\nwhere r(\u03c4) is the satellite position according to the message ephemeris\n","After convergence, the unit vectors are computed: \n\n","The sensitivity matrix is then created: \n\n\nIf channel \u03bd is not tracking a satellite, that row of M is zeroed out.\n","The measurement vector is formed:\n\ny=[y, . . . y,0]\u2003\u2003(101)\n\nwhere: \n\n\nwhere \u03c1 is the raw pseudo-range measurement and {circumflex over (T)}((\u03c4) is the satellite clock bias computed from the message data. (The SA and the ionosphere are ignored in the foregoing initialization procedure.)\n","Next, errors in the state are determined and the state is updated: \n\n\nwhere B is the Kalman gain associated with the Bayesian least-squares problem:\n\n\u2003\n\nx{tilde over ( )}N(0,D)\n\nv{tilde over ( )}N(0,E)\n\n\n\nwhere E=diag(UERE) is a diagonal matrix representing the average user effective ranging error and \u03c3=0.020 represents the uncertainty in the coarse estimate of clock error obtained from the constraint that the range delay is aproximatly 60 milliseconds. (This is dominated by SA if it is on.) The above process is repeated until the estimates are not changing rapidly, i.e. |By|\u2266test. At convergence, the error covariance factor using the algorithm of equation (67) is selected as P. This is used to form the measurement noise factor for the combining step described previously.\n","The Delta guidance system will place TIMED at a position and velocity specified in the Conventional Terrestrial System (CTS). \n\n\nrepresents the true position and earth-relative velocity of the TIMED CM in the CTS system and w(t) represents its nominal value. Then the orbital insertion error appearing in the Delta specification will be of the form: \n\n\nwhere \u03c4is the true orbital insertion time, defined to be the time immediately after all thrusting (including pyrotechnic separation devices) is over, and tis its nominal value. By specifying the insertion error in this way, there is no penalty for placing TIMED in the correct position and velocity at a different time than intended. The desired orbital insertion vector W(t) is a point fixed in the Conventional Terrestrial System (CTS). If the launch time slips, this aim-point will remain constant, implying that the right ascension of the ascending node of the TIMED orbit will rotate at Earth rate. The six-vector w(t) will be loaded into memory on the spacecraft prior to launch. The actual orbital insertion time (\u03c4), which may be substantially different than the nominal time (t), is communicated to the TIMED GNS via a measurement of the TIMED disconnect switch time (t). The difference T\u2261t\u2212\u03c4is the error in time tagging the insertion event and is assumed to be small (at most a few seconds). The TIMED Guidance and Navigation System (GNS) position and velocity state vector is defined in the Conventional Inertial System (CIS). Therefore w(t) must be transformed into the CIS using a transformation valid at t:\n\n()=()\u00b7()\u2003\u2003(104)\n\nwhere: \n\n","The transformation from Earth-relative to inertial velocity is built-in to A(t). The synchronous error of the TIMED position and velocity state at tis then: \n\n\nwhere: \n\n","\u03b4whas to be written in terms of the orbital insertion error defined in equation (103), since w(\u03c4)=A(\u03c4)\u00b7w(\u03c4): \n\n\nwhere {dot over (w)}(t)=f(w)(t) is the model predicted rate of change of inertial position and velocity (largely driven by local gravity). Arranged in matrix form to clearly show the error source contributors as: \n\n\nThe following approximations have been used \n\n\nto substitute the computable A, {dot over (w)}and {dot over (A)}for the corresponding quantities evaluated at (the unknown) \u03c4, realizing that terms like T{dot over (A)}(\u03c4)\u03b4ware higher order. The covariance structure for the synchronous errors consistent with the initialization in equation (104) is then: \n\n","The actual correlation between the errors in the disconnect switch time tagging of the insertion time and the receiver clock error (cov(T,T)) depends on whether and how recently the C&DH clock has been synchronized with the GNS 1 pps. It is assumed to be zero.","In addition to the initial setting of the position and velocity state vector, the system can reset the state vector by command based on NORAD radar tracking. This command consist of CIS position and velocity estimates along with a defined time of validity (\u03c4).","The first step in implementing this upload is to transform the orbital elements provided by NORAD on its two-line element set format into the CIS position and velocity:\n\n\n\nwhere \u03b8 are the orbit-defining quantities in the two-line element set, and \u03be(\u03b8,\u03c4) is the nonlinear transformation implemented in SPG4 that takes these quantities into the inertial position and velocity at time \u03c4. The derivative of the transformation \u039e can be found analytically or by the numerical differentiation of SGP4. The error \u03b4w(\u03c4) is not identified as synchronous or asynchronous because there is no error associated with \u03c4since it is a defined time at which the SGP4 transformation is evaluated. The error (if any) associated with time-tagging the NORAD epoch will propagate through the transformation \u03be(\u2022). In this case, the synchronous and asynchronous errors are equal, so a generic designator is used.\n","Since the Kalman filter time update propagates between receiver times, the time of validity must be transformed from a true time to a GNS receiver time, using the process illustrated below:","\u2003{circumflex over (t)}\u2190\u03c4(\u2022)\u2190\u03c4","where \u03c4(\u2022) is the inverse of the function that takes GNS reference times into their corresponding true times. Specifically, the GNS time corresponding to \u03c4is calculated from the relation: \n\n","where:",{"@attributes":{"id":"P-00464","num":"none"},"ul":{"@attributes":{"id":"ul200005","list-style":"none"},"li":{"@attributes":{"id":"ul200006-li00006"},"ul":{"@attributes":{"id":"ul200006","list-style":"none"},"li":["t=current receiver time (know)","\u03c4=true time corresponding to t","\u03c4=time of validity of uploaded state acording to NORAD","{circumflex over (t)}=receiver clock reading corresponding to \u03c4","{circumflex over (\u03b5)}=current estimate of receiver frequency bias\n\nwhich is solved for {circumflex over (t)}to obtain: \n\n"]}}}},"The foregoing completely defines the TIMED state upload. The position and velocity are given by:","\u2003()=(\u03c4)","and the start time for the time update (t) is set to {circumflex over (t)}from equation (107).","The covariance matrix implied by this initialization process is derived s follows. The synchronous error of the GNS state is: \n\n\nindicating that the GNS inherits the synchronous error of the NORAD uplinked state vector, which is the generic error defined in equation (106). The appropriate transformation of the error state is then: \n\n","The appropriate transformation of covariance is: \n\n","The foregoing defines only the GNS position, velocity, and clock error covariance. Default values are used for the rest of the state space.","Short Term Propagator","The short term propagator creates the navigation data that is placed on the TIMED data bus every second. This short term data includes (in the order of calculation):\n\n","During the short term propagation, the dynamic propagation routine operates in the noncovariance propagation mode.","These data are computed after the time update in each KF Crank interval. This is part of the \u201cCleanup\u201d of the KF Crank interval. During each KF Crank, the short term data is computed for a 180 second interval beginning at the start time of the next KF Crank. Thus, the basic flow of the KF Crank for a single crank interval is:\n\n","In the following description, the short term data is valid for the period Tto T. The short term data cannot be created for the same interval as the KF Crank because the KF Crank takes longer than 1 second to complete. Therefore, the short term data for the for the first several seconds of the current interval is not available when it is needed.","The short term propagator begins with the propagated dynamic state vector X (position(), velocity(), drag, clock, frequency), state vector derivative {dot over (X)}, and covariance factor matrix . These variables are created by the time update part of the KF Crank and are valid at time T. To simplify the notation, the superscript \u201c\u201d denoting \u201cbefore measurement\u201d is dropped. Assuming T=T, the required calculations are:\n\n","The data validity flags are computed using the  matrix. They are constant throughout the 180 second interval. The following values are used to compute the one sigma values:","The covariance matrix =\u00b7and that  is lower triangular. This means that the diagonal values of  are given by \n\n\nThis yields the one sigma values for position, velocity and time. The data validity flags are then set from these one sigma values according to the following:\n\n","The system requires short term data at a 1-Hertz rate, therefor the data is interpolated between S, S, and S. This is accomplished by fitting a 5th order polynomial to the curve described by:\n\n","This structure is used to interpolate data for the state vector and the state vector derivative defined as follows:","For the state vector:\n\n()=\u2003\u2003(108)\n","For the state vector derivative:\n\n()=2+3+4+5\u2003\u2003(109)\n","The interval between S and S is the same as the interval between S and S and denoted by I. By letting the time(t) for the above equations go from \u2212180 to +180 instead of 0 to 360, the system can then use the following six equations to determine the six coefficients:\n\n()\n\n()=2+3\u22124+5\n\n(=0)=\n\n(=0)=\n\n()=\n\n()=+2+3+4+5\n","This yields the following equations for the six coefficients:\n\n()\n\n()\n\n=(1)\u00b7(()\u22122()+()\u2212()\/4()\/4)\n\n=(1\/(4))\u00b7(5()\u22125()\u22128()\u2212()+))\n\n=\u2212(1\/2)\u00b7(()\u22122()+()\u2212()\/2()\/2)\n\n=(1.0\/(4))\u00b7(3()\u22123()\u22124()\u2212()+())\n","The foregoing provides the coefficients required to compute X(t) at any point by looping through the first 180 second interval and proceeding as follows at each of the 180 (tto t) points.","Using the previously described points, equation (108), X(t)=A+B\u00b7t+C\u00b7t+D\u00b7t+E\u00b7t+F\u00b7t, X(t) is computed each time (t) goes from \u2212180 to 180 while the trajectory time goes from S to S+180.","The same routine is used to compute Tthat is used in the Dynamic Propagation Routine (see also equations (71) and (72) and the comments therefor).","The sun vector, S, in conventional inertial system, CIS, coordinates is computed using the same routine that is used in the Dynamic Propagation Routine.","With Tand Scomputed, the system determines position, velocity and sun vector in the conventional terrestrial system, CTS, frame:","The position vector in the CTS frame is determined by:\n\n(position)\u2003\u2003(110)\n","The velocity vector in the CTS frame is determined by transforming the coordinate system from CIS to CTS and removing the earths relative velocity from the inertial velocity. The velocity vector in the CTS frame is:\n\n(velocity)\u2212\u03a9\u2003\u2003(111)\n","The matrix multiplication is eliminated because: \n\n\nwhich simplifies the process and results in:\n\n\u2003(\u03a9)(1)=\u2212\u03c9(2)\n\n(\u03a9)(2)=\u03c9(1)\n\n(\u03a9)(3)=0\n","The sun vector in the CTS frame is:\n\nS\u2003\u2003(112)\n","The Geodetic Latitude (lat) and Altitude are computed using a routine that is the same as used in the Dynamic Propagation Routine. The Longitude (ion) is computed using the standard C library routine atan2:\n\nlongitude=\u03b1 tan 2((_axis), (_axis)\u2003\u2003(113)\n","To compute the east, north, and up velocity, the system computes the transformation from CTS coordinates to East, Down, and North @ Equator (EDN) coordinates: \n\n\nIt then computes the transformation from EDN to East, North, Up (ENU) coordinates: \n\n\nThe system uses the Geodetic Latitude, therefor \u201cUP\u201d is in the local vertical direction.\n","Because the normal to the surface in the ENU coordinate frame is given by the vector [0,0,1], the system transforms the vector to the CTS frame using: \n\n\nwhich provides:\n\n(1)=(1,3)=(3,1)\n\n(2)=(2,3)=(3,2)\n\n(1)=(3,3)=(3,3)\u2003\u2003(115)\n\nThis provides a vector normal to the surface of the earth in the CTS coordinate frame. The system then creates: D=U\u2022S. If U\u2022S\u22670.0, then the latitude and longitude point is in sunlight and the flag=1. When U\u2022S<0.0, the flag=0.\n","The South Atlantic Anomaly, SAA is described in the GNS by 12 longitude and latitude points which are vertices, in clockwise order (looking down at the earth), of a convex polygon inside which lies the SAA. When these values are loaded into the KF database, the system computes vectors for each side using S=V\u2212V, where V=(longitude, latitude). These are longitude and latitude points (NOT latitude, an longitude) and are ready for use in the Short Term Propagation loop.","To determine if the spacecraft is within the SAA polygon, the system performs the following operations for each side of the SAA after setting the SAA event notification flag to \u2018EVENT\u2019.","The spacecraft vector, S, is computed using the previously computed spacecraft latitude and longitude (Lon, Lat), which is in the form of the vector from Vto the spacecraft location:\n\n=(Lon,Lat)\u2212\u2003\u2003(116)\n","A z-coordinate (=0) is appended to each vector and used to successively compute the cross-product of a side of the SAA polygon with the spacecraft vector: \n\n","The system uses the right hand rule, i.e., if Q>0 the spacecraft lies outside the SAA and the SAA Event Notification flag is set to \u2018NO-EVENT\u2019. The system then exits the loop.","The Compute Polar Region Event Notification flag is set using a simple comparison, i.e., if |Latitude|\u2267Value, the flag is set to 1.","The location of each ground station is described by a latitude and longitude. When these values are loaded into the KF Database, the system computes CTS coordinates Vfor each of the ground stations using the ground station latitude and longitude and an altitude 0. It then computes the CTS vector Nnormal to the surface of the earth at the ground station coordinates using the following steps:","Multiplying the two matrices of equation (114) reduces the operation to: \n\n","The normal to the surface in the ENU coordinate frame is given by the vector [0,0,1 ] as established by equation (115). The vector is transformed to the CTS frame \n\n\nThis yields:\n\n(1)=(1,3)=(3,1)=sin(\u03b8)sin(\u03c6)\n\n(2)=(2,3)=(3,2)=\u2212sin(\u03b8)cos(\u03c6)\n\n(3)=(3,3)=(3,3)=cos(\u03b8)\u2003\u2003(118)\n","The values are now ready for use in the Short Term Propagation loop. To determine if the spacecraft is above the horizon relative to each ground station, the system computes the dot product of the vector from the ground station to the spacecraft and the ground station normal vector: D=(P\u2212V)\u2022N","If D\u22670, the spacecraft is at or above the horizon and the GSENF is 1.","The system computes the second 180 second loop using the previously described operations, i.e.:","X(t) is computed each time (t) goes from \u2212180 to180 while the trajectory time goes from S to S+180.\n\n()=\n","The same routine is used to compute Tthat is used in the first 180 second loop.","The same routine, equation (118), that is used in the first 180 second loop is used to compute the GSENF.","The system then shifts the GSENF as the short term propagation continues to provide GSENFs for each ground station for a period of 360 seconds. The extra 180 seconds allows the system to predict rise or set times up to 180 seconds in advance of the time it outputs the data. The GSENFs which are output may need to be set before the spacecraft rises above the horizon and may need to be unset before the spacecraft has set below the horizon to satisfy Rise\/Set Lead Time requirements. The system predicts rise time so that instruments on board the satellite can be ready to send data when the satellite rises above the horizon instead of spending time gaining acquisition to the ground station. The system also computes set lead time so that the satellite may know when to start shutting down the data transmission sequence. The time shifts for the Rise Lead Time Rand Set Lead Time Sare GNS parameters.","For example, if R=4 seconds and the GSENFs are\n\n","Or if R=5 and the GSENFs are\n\n","There are several situations that can occur in the stream of GSENFs during the 360 second interval.\n\n","The foregoing is considered as illustrative only of the principles of the invention. Since numerous modifications and changes will readily occur to those skilled in the art, it is not desired to limit the invention to the exact construction and applications shown and described. Accordingly, all suitable modifications and equivalents may be resorted to and are considered to fall within the scope of the invention and the appended claims and their equivalents."],"GOVINT":[{},{}],"BRFSUM":[{},{}],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"BRIEF DESCRIPTION OF THE DRAWINGS","p":[{"@attributes":{"id":"P-00029","num":"00029"},"figref":"FIG. 1"},{"@attributes":{"id":"P-00030","num":"00030"},"figref":"FIG. 2"},{"@attributes":{"id":"P-00031","num":"00031"},"figref":"FIG. 3"},{"@attributes":{"id":"P-00032","num":"00032"},"figref":"FIG. 4"},{"@attributes":{"id":"P-00033","num":"00033"},"figref":"FIG. 5"},{"@attributes":{"id":"P-00034","num":"00034"},"figref":"FIG. 6"},{"@attributes":{"id":"P-00035","num":"00035"},"figref":"FIG. 7"},{"@attributes":{"id":"P-00036","num":"00036"},"figref":"FIG. 8"},{"@attributes":{"id":"P-00037","num":"00037"},"figref":"FIG. 9"},{"@attributes":{"id":"P-00038","num":"00038"},"figref":"FIG. 10"},{"@attributes":{"id":"P-00039","num":"00039"},"figref":"FIG. 11"},{"@attributes":{"id":"P-00040","num":"00040"},"figref":"FIG. 12"},{"@attributes":{"id":"P-00041","num":"00041"},"figref":"FIG. 13"},{"@attributes":{"id":"P-00042","num":"00042"},"figref":"FIG. 14"},{"@attributes":{"id":"P-00043","num":"00043"},"figref":"FIG. 15"},{"@attributes":{"id":"P-00044","num":"00044"},"figref":"FIG. 16"},{"@attributes":{"id":"P-00045","num":"00045"},"figref":"FIG. 17"}]},"DETDESC":[{},{}]}
