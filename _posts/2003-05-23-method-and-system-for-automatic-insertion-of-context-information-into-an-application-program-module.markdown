---
title: Method and system for automatic insertion of context information into an application program module
abstract: Context information surrounding an application program can be inserted into an electronic document in order to increase accuracy and efficiency in note taking. For example, in a meeting scenario where a slide presentation is being displayed, the present invention can automatically insert information relating to the slide presentation into an application program such as a document editing module. Specifically, in this example, the information relating to the slide information can be inserted into the document editing module in one of four different formats: (1) as editable text derived from each slide; (2) an editable image for each slide; (3) a thumbnail image for each slide; (4) a hypertext link to each slide; and (5) any combination thereof.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=07392475&OS=07392475&RS=07392475
owner: Microsoft Corporation
number: 07392475
owner_city: Redmond
owner_country: US
publication_date: 20030523
---

{"@attributes":{"id":"description"},"BRFSUM":[{},{}],"heading":["TECHNICAL FIELD","BACKGROUND OF THE INVENTION","SUMMARY OF THE INVENTION","DETAILED DESCRIPTION OF EXEMPLARY EMBODIMENTS","CONCLUSION"],"p":["The present invention relates to creating electronic documents and more specifically relates to inserting context information into an application program that may originate from another application program or a device.","One of the simplest methods of recording and communicating information is the traditional method of writing information down on a piece of paper with a writing instrument such as a pen. Writing information by hand on a piece of paper is inexpensive and can be done quickly and easily with little preparation. The traditional method is also flexible in that a writer can generally write in any format anywhere on the page.","However, one of the limitations of handwritten work is that the author of such work often needs to record information that does not require significant thought but does require effort. For example, when present at a meeting, an author of notes will often write down background or context information relating to the meeting. Specifically, the author will often record the time, date, location, title of the meeting, and meeting attendees. Sometimes, the author may even re-write the agenda scheduled for the meeting. As another example of context information, when an author of notes receives a phone call, he or she will often record the time, date, subject of the call, and the identity of the caller.","The aforementioned exemplary context information share a common trait: Because the context information does not require significant thought but does require effort, the author usually does not record this information especially when the author is pressed for time and efficiency. In some situations, an author will skip recording context information in order to concentrate on information that does require critical thinking. When this context information is not recorded, the notes taken by an author may not make sense to a person reading them later. Also, it may be difficult for the author to locate a set of notes when notes are taken in a series with other sets of notes.","Advances have been made to help an author organize and preserve handwritten notes electronically. For example, conventional electronic tablets have been made that can record handwriting. Such electronic tablets typically comprise a screen and a handheld device that is similar to a pen (also referred to as a stylus). A user can manipulate the pen to write on the electronic tablet in a manner similar to the use of traditional pen and paper. The electronic tablet can \u201cread\u201d the strokes of the user's handwriting with the handheld device and render the handwriting in electronic form on the tablet's screen and\/or the computer's display as \u201celectronic ink\u201d.","This electronic tablet approach can be employed in a variety of ways including on a personal computer and on a handheld computing device. The electronic tablet can be useful for taking notes when the tablet supports a document editing program. Instead of using an electronic tablet to record handwritten notes, a keyboard can be used to generate typewritten notes that can be recorded in a document editing program.","While the document editing program can be used to preserve handwritten notes or typewritten notes (or a combination thereof), such programs suffer the same draw backs relative to the traditional pen and paper approach with respect to context information. Conventional document editing programs do not assist the author to record context information such as the time, date, location, title of a meeting, and attendees present at a meeting.","Accordingly, there is a need in the art for a method and system for automatically inserting context information into an application program such that an author can concentrate on preserving information that requires more critical thinking and that cannot be accurately recorded by a machine. Another need exists in the art for a method and system that inserts context information into an application program and permits the context information to be formatted or presented in a variety of ways.","The present invention can comprise a method and system automatically inserting context information into an application program. In other words, the present invention can monitor context information surrounding an application program and can insert this information directly into the application program in order to increase accuracy and efficiency during note taking.","For example, in a meeting scenario where a slide presentation is being displayed, the present invention can automatically insert information relating to the slide presentation into an application program such as a document editing module. Specifically, in this example, the information relating to the slide information can be inserted into the document editing module in one of four different formats: (1) as editable text derived from each slide; (2) an editable image for each slide; (3) a thumbnail image for each slide; (4) a hypertext link to each slide; and (5) any combination thereof.","The present invention is not limited inserting context information relating to slide presentation scenarios. Other scenarios or events which can comprise context information that can be inserted into a document editing module include monitoring surfing on the Internet, placing or receiving telephone calls, viewing video programs, listening to music, receiving a faxes, monitoring a controlled accessed facility\/room, and other types of scenarios.","According to one exemplary aspect of the present invention, the system can comprise a controller that monitors other application programs that may exist on single computer. The controller may comprise a separate program module that can poll or pull information from the application programs as events occur. The controller can monitor many different types of application programs. Some application programs can include, but are not limited to, slide presentation programs, web browsing programs, spreadsheet programs, word processing programs, e-mail programs, scheduling programs, and calendar programs, just to name a few. Other application programs are not beyond the scope and spirit of the present invention.","According to one exemplary scenario, the controller of the present invention can monitor an internet browser. In this way, if notes are being created about a particular web page in a document editing module, the controller can automatically insert a hypertext link or an editable image of the web page being browsed by the internet browser. In this way, the uniform resource locater (URL) or internet address will be automatically recorded into the document editing module.","According to another exemplary scenario, a slave slide presentation application program and the controller may reside on one platform while a master slide presentation program may reside on another platform. The slave slide presentation program may be operatively linked to the master slide presentation program.","When the slave slide presentation program receives new information from the master slide presentation program, the controller can detect this new information by monitoring the slave slide presentation program. Alternatively, instead of the controller polling or pulling information from the slave slide presentation program, the slave slide presentation program can push information on to the controller. The controller can insert this new information into a document editing module where a user can be taking notes. The new information can be inserted into the document according to a format previously selected by a user. The user can further select different display or storage formats for the information at his or her option.","As another non-limiting example, when an e-mail application program receives a message that is related to a document that is being edited within a document editing module, the controller can feed this e-mail information to the document editing module. The e-mail information can be inserted into the document according a format previously selected by a user. The user can further select different formats for the e-mail information at his or her option. In this way, notes of a user can be associated with context information as the context information is being generated.","According to another exemplary aspect of the present invention, the controller can monitor an application program that resides on a different platform relative to the platform of the controller. The controller can use one or more application programming interfaces (APIs) to communicate with application programs residing on a different platform or with application programs present on the same platform, where a platform can include a single machine or a class of machines.","According to a further aspect of the present invention, a first controller may support or comprise a user interface. The first controller can communicate with several other different second controllers that may reside on platforms different from the first controller. In this way, the first controller can communicate context information present in the user interface directly with other second controllers. For example, in an exemplary meeting scenario, a meeting agenda can be entered into the user interface of the first controller. The first controller can communicate this meeting agenda to the second controllers residing on different platforms. The second controllers can communicate this meeting agenda to their respective document editing programs.","The first controller can also monitor the presence of the other second controllers and update context information based on the detection or presence of another second controller. For example, as a new second controller joins a meeting, the first controller can communicate to other existing second controllers of the meeting that the new second controller has joined the meeting. In other words, when a new person joins a meeting, the first controller can update an attendee list so that each controller will now have this information that the new person has joined the meeting.","According to another aspect of the present invention, the controller can monitor context events originating from things other than application programs. For example, the controller can be operatively linked to a telephone such that when a call is received, the caller identification information that can comprise a name and number of caller can be automatically inserted into a document editing module that is linked to the controller. Alternatively, as noted above, the controller can monitor an application program that is designed specifically to monitor incoming and outgoing phone calls. Also, the controller can be operatively linked to other devices such as, but not limited to, a television, a fax machine, and other devices that may produce context information that can be inserted into an document editing module.","A method and system for automatically inserting context information into an application program can monitor event information generated by a variety of other program modules and devices. According to one exemplary embodiment, context information may be generated by application programs such as slide presentation programs, web browsing programs, spreadsheet programs, word processing programs, e-mail programs, scheduling programs, and calendar programs, just to name a few. Devices monitored for context information can include telephones, televisions, fax machines, and other devices.","Exemplary Operating Environment","Exemplary embodiments of the present invention will hereinafter be described with reference to the drawings, in which like numerals represent like elements throughout the several figures.  illustrates an exemplary operating environment for implementation of the present invention.","The exemplary operating environment includes a general-purpose computing device in the form of a conventional personal computer . Generally, the personal computer  includes a processing unit , a system memory , and a system bus  that couples various system components including the system memory  to the processing unit . The system bus  may be any of several types of bus structures including a memory bus or memory controller, a peripheral bus, and a local bus using any of a variety of bus architectures. The system memory includes a read-only memory (ROM)  and a random access memory (RAM) . A basic input\/output system (BIOS) , containing the basic routines that help to transfer information between elements within personal computer , such as during start-up, is stored in ROM .","Personal computer  further includes a hard disk drive  for reading from and writing to a hard disk, not shown, a magnetic disk drive  for reading from or writing to a removable magnetic disk , and an optical disk drive  for reading from or writing to a removable optical disk  such as a CD-ROM or other optical media. Hard disk drive , magnetic disk drive , and optical disk drive  are connected to system bus  by a hard disk drive interface , a magnetic disk drive interface , and an optical disk drive interface , respectively.","Although the exemplary environment described herein employs hard disk , removable magnetic disk , and removable optical disk , it should be appreciated by those skilled in the art that other types of computer readable media which can store data that is accessible by a computer, such as magnetic cassettes, flash memory cards, digital video disks, Bernoulli cartridges, RAMs, ROMs, and the like, may also be used in the exemplary operating environment. The drives and their associated computer readable media provide nonvolatile storage of computer-executable instructions, data structures, program modules, and other data for personal computer .","A number of program modules may be stored on hard disk , magnetic disk , optical disk , ROM , or RAM , including an operating system , an ink processing module , a stylus and ink module , and an electronic document editing module . Program modules include routines, sub-routines, programs, objects, components, data structures, etc., which perform particular tasks or implement particular abstract data types. Aspects of the present invention may be implemented in the form of a ink processing module  that can operate in concert with a stylus and ink module .","A user may enter commands and information into personal computer  through input devices, such as a keyboard  and a pointing device . Pointing devices may include a mouse, a trackball, and an electronic pen that can be used in conjunction with an electronic tablet. Other input devices (not shown) may include a microphone, joystick, game pad, satellite dish, scanner, or the like. These and other input devices are often connected to processing unit  through a serial port interface  that is coupled to the system bus , but may be connected by other interfaces, such as a parallel port, game port, a universal serial bus (USB), or the like. A display device  may also be connected to system bus  via an interface, such as a video adapter . In addition to the monitor, personal computers typically include other peripheral output devices (not shown), such as speakers and printers.","The personal computer  may operate in a networked environment using logical connections to one or more remote computers . Remote computer  may be another personal computer, a server, a client, a router, a network PC, a peer device, or other common network node. While a remote computer  typically includes many or all of the elements described above relative to the personal computer , only a memory storage device  has been illustrated in the Figure. The logical connections depicted in the Figure include a local area network (LAN)  and a wide area network (WAN) . Such networking environments are commonplace in offices, enterprise-wide computer networks, intranets, and the Internet.","When used in a LAN networking environment, the personal computer  is often connected to the local area network  through a network interface or adapter . When used in a WAN networking environment, the personal computer  typically includes a modem  or other means for establishing communications over WAN , such as the Internet. Modem , which may be internal or external, is connected to system bus  via serial port interface . In a networked environment, program modules depicted relative to personal computer , or portions thereof, may be stored in the remote memory storage device . It will be appreciated that the network connections shown are exemplary and other means of establishing a communications link between the computers may be used.","Moreover, those skilled in the art will appreciate that the present invention may be implemented in other computer system configurations, including hand-held devices, multiprocessor systems, microprocessor based or programmable consumer electronics, network person computers, minicomputers, mainframe computers, and the like. The invention may also be practiced in distributed computing environments, where tasks are performed by remote processing devices that are linked through a communications network. In a distributed computing environment, program modules may be located in both local and remote memory storage devices.","Referring to , an exemplary architecture  is illustrated for editing electronic ink in accordance with an embodiment of the present invention.  shows typical hardware and software components used in operating the invention from a functional perspective. Conventional input devices are represented by the keyboard  and the pointing device (mouse) . A user can enter commands and information into the computer  using the input devices. Other input devices (not shown) may include a microphone, joystick, game pad, satellite dish, and scanner.","A conventional output device, such as monitor , is used to display information from the computer . Other output devices (not shown) can include a printer or speaker. Other hardware components shown in  include an electronic tablet  and an accompanying stylus . The tablet  and stylus  are used to input handwriting strokes which are converted to collections of data that can be represented as electronic ink. The electronic ink may be incorporated into an electronic document  supported by the document editing module  and may be displayed on either the electronic tablet , the monitor , or both.","Although the electronic tablet  and the monitor  are illustrated as being distinct, in the preferred embodiment they are either coupled or form a single component. The joint tablet\/monitor component has the ability to display information and receive input from the stylus . Also shown among the hardware components is a conventional electronic storage device such as a hard drive  or RAM .","In the representative architecture , all of the hardware components are coupled to an ink processing software module . It should be understood by those skilled in the art that  is merely representative and that in practice the hardware components typically are coupled to the elements shown in . The ink processing module  is operable for receiving data from the electronic tablet  and\/or the stylus  and rendering that data as electronic ink. In the preferred and exemplary embodiment, the ink processing module  is a collection of software modules that perform different tasks for rendering handwriting strokes as electronic ink.","For example, the stylus and ink module  can receive data describing the positions and angles of the stylus for a series of handwriting strokes. The stylus and ink module  can interpret the data for rendering electronic ink. Other software modules, such as a gesture recognizer  and word recognizer  can be designed to identify certain handwriting strokes and assign them a particular significance. For example, certain gestures such as a cross-out may be recognized and associated with other editing processes. The ink processing module  can also include an erasing functions module  for removing electronic ink that has been previously rendered.","Although ink processing modules are known in the art and necessary for an electronic tablet to function, what is needed is a document editing module , such as the one shown in , that enhances the performance of an electronic tablet. Specifically, document editing module  facilitates the manipulation of electronic ink so that a user can create and manipulate an electronic document  with greater ease and sophistication.","The windows operating system  can comprise a graphical user interface (GUI) manager . The document editing module  can be operatively linked to other application programs , such as action item programs, e-mail programs, calendar programs and the like. The document editing module  can use application programming interfaces (APIs) (not shown) to form this link.","A controller , as will be discussed below, can comprise a program module that monitors activity or events generated by the other application program . The controller  can monitor the activity or events by polling or pulling from the other application program . Alternatively, the controller can monitor activity by receiving information from the other application program  that is pushed by other application program onto the controller . Further details of the controller  will be discussed below with respect to , , and .","Meanwhile, the document editing module  may further comprise a collection of software modules for controlling and manipulating electronic ink rendered on the monitor . For example, a parsing module  can be used to identify handwriting strokes that are selected by the user for editing. Selected strokes may by highlighted or shaded to assist the user in identifying which strokes are to be edited. A classifier module  can identify certain handwriting strokes as being part of a word or drawing. Software modules such as the layout module  and the insert space module  can be designed to control how electronic ink is rendered and moved. Other modules can include a selection manager , a context menu manager , a text input manager , and a user interface language input processor .","The selection manager  can monitor how converted text or electronic ink is selected for editing by the user. The context menu manager  can monitor the selection of a list of alternate words that can be displayed when a user edits a word in converted text. The text input manager  can operate as an interface for a user interface language input processor  that uses language rules to assist in the recognition of words through context.","The modules shown in  are representative and those skilled in the art should understand that other modules may also be part of or coupled to the document editing module . For example, the document editing module  may also work with a rich edit module  that provides added functionality such as monitoring and controlling the selection of text and word wrapping.","The present invention includes multiple computer programs which embodies the functions described herein and illustrated in the exemplary display screens and the appended flow chart. However, it should be apparent that there could be many different ways of implementing the invention in computer programming, and the invention should not be construed as limited to any one set of computer program instructions. Further, a skilled programmer would be able to write such a computer program to implement the disclosed invention without difficulty based on the exemplary display screens and flow charts and associated description in the application text, for example.","Therefore, disclosure of a particular set of program code instructions is not considered necessary for an adequate understanding how to make and use the invention. The inventive functionality of the claimed computer program will be explained in more detail in the following description in conjunction with the remaining Figures illustrating the functions and program flow.","Exemplary Architecture Overview","Referring now to , this Figure is a block diagram illustrating a controller  and application programs  present on a platform  according to one exemplary embodiment of the present invention. The platform  can comprise a single computer. The controller  can comprise a program module that can communicate directly with application programs  or via application programming interfaces (APIs\u2014not shown).","While the controller  is illustrated and described as a separate program module, one of ordinary skill in the art recognizes that the functionality of this module could be incorporated into the document editing module  or each of the application programs  or a combination thereof. The controller  can monitor activity or events generated by each application program. When an event is generated, the controller  can forward information about the event to the document editing module  that supports an electronic document . For example, suppose application program #-A comprises an internet browser. The controller  can monitor activity or events produced by the internet browser .","When an event is created, such as surfing to a particular web page on the internet, the controller  can send this context information to the document editing module . The document editing module  can then determine how to format this context information. For example, the document editing module  could insert this context information into the electronic document  in any one or a combination of formats such as a hypertext link, an editable image, a small image (i.e.\u2014a thumbnail image), and as editable text data. Further details of the exemplary formats will be discussed below with respect to .","Referring now to , since this Figure is similar to , only the differences between these two figures will be discussed below.  is another block diagram illustrating multiple controllers A, B and application programs A, B present on a different platforms A, B according to one exemplary embodiment of the present invention. In this exemplary embodiment, a first application program A on a first platform A can comprise a slave application program that is operatively linked to a master application program B that resides on a second platform B. As illustrated with a first arrow , the slave application program A can receive commands or changes from the master application program B.","As a more specific example, the slave application program A can comprise a slave slide presentation application program that is operatively linked to the master application program B that can comprise a master slide presentation program. When the slave slide presentation program A receives new context information from the master slide presentation program B, the controller  can detect this new context information by monitoring the slave slide presentation program A.","Alternatively, instead of the controller  polling or pulling information from the slave slide presentation program A, the slave slide presentation program A can push context information on to the controller. The controller  can insert this new context information into an electronic document  (not shown) supported by the document editing module A where a user can be taking notes. The new context information can be inserted into the document  according to a format previously selected by a user. The user can further select different display or storage formats for the information at his or her option.","As a further alternative exemplary embodiment, the controller A of the first platform A can be operatively linked to the master slide presentation program B residing on the second platform B as indicated with the second dashed arrow . However, this is a less preferred embodiment as of the time of this written description, as this embodiment may require more complex APIs relative to the embodiment in which the controller A merely monitors the slave slide presentation program A.","Referring now to , this Figure illustrates duplicated context information B formatted as an editable image  on an exemplary display screen of a document editing module A. The document editing module A can reside on a first platform A relative to originating context information A present on an exemplary display screen of a master slide presentation program B. The master slide presentation program B can reside on a second platform B according to one exemplary embodiment of the present invention.","Specifically, the originating context information A can comprise a slide of presentation as well as file name for the source of the slide. The master slide presentation program B (not shown) can forward the context information to the slave slide presentation program A (not shown). The controller  (not shown) can detect this context information and forward a copy of it to the document editing module A. The document editing module A can format the duplicated context information B as an editable slide  as well as a note  comprising the title of the file containing the context information.","A user can activate a menu icon  and upon activation of the menu icon , the document editing module A can display a list  of options. A first option can comprise a command to the controller to constantly monitor the activity of the program supporting the file name of the note . In other words, the \u201cLink to Q4 Sales.ppt\u201d option will direct the controller to continuously monitor the slave presentation program B for changes (which usually includes additions) in context information. Other options in the list  can include how the document editing module A should display and store the context information.","The other options can include formatting the context information B (1) as editable text derived from each slide (\u201cInsert slide outline for markup\u201d); (2) an editable image  for each slide (\u201cInsert slides for markup as shown\u201d); (3) a thumbnail image for each slide (\u201cInsert slides into margin now\u201d); (4) a hypertext link to each slide (\u201cDon't show this presentation\u201d); and (5) any combination thereof.","As illustrated in , the editable slide  allows a user to overwrite the slide  with additional data such as a handwritten \u201cNote A\u201d . Handwritten \u201cNote A\u201d  can be generated with a user's hand  and a stylus . By inserting context information B in the format of an editable slide , notes that may require more critical thinking may be made by the user more easily. If the context information B was not inserted, a user's notes may be less meaningful and possibly more cryptic to a reader other than the user. Also, if the user needed to write-out the context information, he or she would have less time to produce more thoughtful notes for interpreting the context information.","Referring now to , since this Figure is similar to , only the differences between these two figures will be discussed below.  illustrates duplicated context information B formatted as editable text  as well as small images (thumbnails)  and hypertext links .","The context information B can be displayed on an exemplary display screen of a document editing module  that resides on a first platform A relative to originating context information A present on an exemplary display screen of a master slide presentation program B. The master slide presentation program B can reside on a second platform B. Typed text  can be inserted adjacent to the editable text . And the editable text , as its name implies, can be changed or edited by a user.","Referring now to , since this Figure is similar to , only the differences between these two figures will be discussed below.  illustrates duplicated context information B formatted as small images  (thumbnails) and hypertext links  on an exemplary display screen of a document editing module A that resides on a first platform A relative to originating context information A present on an exemplary display screen of a master slide presentation program B. The master slide presentation program B can reside on a second platform B.","According to this exemplary embodiment illustrated in , all of the duplicated context information B is inserted in the margins of the electronic document  supported by the document editing module A. Meanwhile, in the main area of the electronic document , a user can produce type written notes  or handwritten notes  with a stylus .","Referring now to , since this Figure is similar to , only the differences between these two figures will be discussed below.  is a block diagram illustrating a multiple controllers A, B, C that support user interfaces which are linked together according to one exemplary embodiment of the present invention. According to this exemplary embodiment, a first controller A can communicate context information comprising a meeting agenda to second and third controllers B, C.","The meeting agenda can be inserted into electronic documents  in the form of editable text. The first controller A can also monitor attendees of a meeting and can send the second and third controllers B, C updates as other attendees (having their own controllers  not shown) enter and become part of the meeting. Further details of this exemplary embodiment will be discussed below with respect to . Those skilled in the art will appreciate that context information comprising a meeting agenda is but a mere exemplary application for the inventive technology. Other applications are not beyond the scope and spirit of the present invention.","Referring now to , this Figure illustrates context information B, B such as an agenda formatted as editable text and meeting attendees and a location present in page headers on an exemplary display screen of a document editing module B or C that resides on a first platform B or C relative to originating context information A, A. The originating context information A, A can be present on an exemplary display screen of a controller user interface A residing on a second platform A.","The first originating context information A can comprise a meeting agenda while the second originating context information A can comprise an attendee list and location of the meeting. The controller A can communicate a copy of this originating context information A, A to the second and third controllers B, C. The copy can comprise the duplicate context information B, B. The second duplicate context information B comprising the meeting agenda can be inserted into the electronic document  and more specifically, into a body  of a page within the electronic document as editable text. Meanwhile, the first duplicate context information B comprising the attendees and meeting location can be inserted into a header portion  of the electronic document . As a new person joins the meeting having a computer with a controller , the first controller A can update the attendee list and communicate this information to all of the controllers who are on different platforms . This updating feature demonstrates one of the strengths of the present invention.","Even after specific context information such as an attendee list is automatically inserted into an electronic document, the attendee list can still be updated as people arrive, in whatever format the user has selected. For example, according to another exemplary format, the attendee list could comprise a table of names and checkmarks. Alternatively, the attendee list could comprise a list of people who were present at the meeting. And further, the attendee list could comprise two lists of people: people who were present at the meeting and people who were not present at the meeting. And lastly, the attendee list could just comprise a number representing the number of people who were present at the meeting. Those skilled in the art recognize that other attendee formats are possible and are not beyond the scope and spirit of the present invention.","Also, with respect to updates, the updating feature could also exist for slides provided to users during a presentation. But usually slide presentations are generally static where the content of the slides do not change. This updating feature could also be used for agenda items as they are updated during a meeting. The updating feature for agenda items could depend on how the agenda items are selected to be inserted into an electronic document\u2014all at once or as agenda items are covered during a meeting or a combination thereof.","Specifically, when a meeting starts, an agenda item can be received and the user can have the option of receiving the agenda items as editable text or marginal text (etc.) for each agenda item as it is covered in a meeting. But a user may also have the option of asking for the whole agenda at once, at the beginning of the meeting. It is for this exemplary scenario when the agenda items are received all at once where each agenda item can be automatically updated with checkmarks for completion or with time stamp information to indicate an amount of time spent on each agenda item.","The controllers  can further monitor each other's application programs and have each document editing module  update the page of notes illustrated in  as information or an event is covered. For example, the controllers  can have respective document editing modules  insert hypertext links  as information is being covered in a meeting. Specifically, when \u201cJo and Frank\u201d open their resource allocation spreadsheet during the \u201cFrisco team meeting\u201d, a hypertext link  comprising the name of the spreadsheet file (\u201cResource List.xls\u201d) containing the resource allocation can be generated. Similarly, when \u201cGinger\u201d opens her slide presentation during the \u201cFrisco team meeting\u201d, a hypertext link  comprising the slide presentation file (\u201cQ4 Sales.ppt\u201d) containing her slides can also be generated.","Referring now to , since this Figure is similar to , only the differences between these two figures will be discussed below.  is a block diagram illustrating a controller  operatively linked to external devices , ,  or an application program  that monitors the external devices , ,  according to another exemplary embodiment of the present invention. Specifically, according to one exemplary embodiment, the controller  can directly monitor and provide context information relating to a television , a telephone , and a fax machine .","For example, if a user is taking notes with the document editing module  and the user receives a phone call, the controller  can communicate context information to the document editing module . The document editing module  can then format this context information and then insert it into the electronic document  being manipulated by a user. Further details of this exemplary calling scenario will be discussed below with respect to . The present invention is not limited to the devices illustrated and can operate with other devices that fall within the scope and spirit of the present invention.","According to an alternate exemplary embodiment and as illustrated with dashed lines in , the controller  can monitor an application program  that may be designed to directly interface with external devices such as the television , the telephone , and fax machine . According to this exemplary embodiment, the controller  would not have a direct link with each of the external devices.","Referring now to , since this Figure is similar to , only the differences between these two figures will be discussed below.  illustrates context information  comprising phone call information that can be formatted as header information on an exemplary display screen of a document editing module  that is linked to a controller  (not shown) that monitors external devices such as a telephone  according to another exemplary embodiment of the present invention. The phone call information can comprise the phone number, name of the caller, date, and time of the call. Similarly, while a user is creating notes and watching television or a video taped program, context information comprising the name of the show as well as the date and time can be recorded in the electronic document . And similarly, while a user is creating notes and receives a fax, context information comprising the fax originator, the number of pages, the time, and date of the fax can be recorded in the electronic document .","A generic device  is also illustrated and can be linked to the controller . This generic device  represents any one of a variety of devices that can generate context information that can be monitored by the controller . As a non-limiting example, the generic device  can comprise medical equipment. When a doctor is taking notes with his electronic tablet  (not shown) in a patient's hospital room, the controller  can automatically add context information to document editing module  (not shown) from the medical device  in the patient's hospital room. In other words, the medical device  providing context information could comprise a blood pressure, pulse, or any other type of patient monitors.","In one exemplary embodiment, prior to adding any context information, the controller  or document editing module  could ask the user if the context information is desired for the note taking session that is open. For example, a user could be prompted with the question: \u201cInsert patient monitoring data for patient Jane Doe?\u201d Alternatively, a context menu could have a default setting of \u201cNo Data Inserted\u201d, rather than permitting the automatic insertion of context information. For this example, either the controller  or document editing program  can query the user in some manner in order to determine if context information should be inserted before starting to do so automatically.","As another non-limiting example, the generic device  could comprise machines that are typically present in an auto repair shop. In such a scenario, a mechanic could be prompted to allow the automatic insertion of context data that could comprise information generated by a variety of machines such as fluid level detection devices, a timing machine for tune-ups, and any other types of machines that could send context information to the controller . Those skilled in the art will appreciate that other external devices that may produce useful context information relative to notes generated by a user are not beyond the scope and spirit of the present invention.","Exemplary Method for Automatically Inserting Context Information into an Application Program","Referring now to , this Figure is a logic flow diagram illustrating an overview of an exemplary process  for automatically inserting context information into an application program  according to one exemplary embodiment of the present invention. Certain steps in the processes described below must naturally precede others for the present invention to function as described. However, the present invention is not limited to the order of the steps described if such order or sequence does not alter the functionality of the present invention. That is, it is recognized that some steps may be performed before or after other steps or in parallel with other steps without departing from the scope and spirit of the present invention.","Decision step  is the first step of the exemplary process  in which it is determined whether a context generator has been selected for monitoring or linking to the controller . In other words, to start monitoring the activity of an application program  or an external device such as a telephone , the controller  must be instructed or receive a command to start monitoring the activity of the program  or telephone .","The controller  will only insert context information from a program  or device when the controller  is instructed by a user to start retrieving or monitoring context information from a particular source. In this way, a user can select which programs  or devices may be pertinent to a specific note taking session. If the inquiry to decision step  is negative, then the \u201cNo\u201d branch is followed back to step . If the inquiry to decision step  is positive, then the \u201cYes\u201d branch is followed to decision step .","In decision step , the controller  determines if new context information has been detected from a source. As noted above, the controller  can actively poll or pull information from a context source. Alternatively, the controller  can passively receive information pushed on to it from a context source. If the inquiry to decision step  is negative, the \u201cNo\u201d branch is followed back decision step . If the inquiry to decision step  is positive, then the \u201cYes\u201d branch is followed to step .","In step , the detected context information is forwarded to a designated or active application program. For example, the controller  can forward the detected context information to the document editing module  as selected by the user. Alternatively, the controller  can forward the detected context information to any application program selected by the user to receive and format the detected context information.","Next, in decision step , the application program such as the document editing module  can determine if preferences have been set by the user for how the detected context information should be formatted. If the inquiry to decision step  is negative, then the \u201cNo\u201d branch is followed to decision step . If the inquiry to decision step  is positive, then the \u201cYes\u201d branch is followed to step  in which the detected context information is inserted into the application program  and displayed in accordance with the set preference.","Next, in decision step , it is determined if the icon  for changing the format of the context information has been selected. If the inquiry to decision step  is negative the \u201cNo\u201d branch is followed to step  in which default or the set preferences are used. From step , the process proceeds to step  as will be discussed below.","If the inquiry to decision step  is positive, then the \u201cYes\u201d branch is followed to step  in which the format options in the form of a drop down list  can be displayed. Next in routine , the active application program or document editing module  determines which option has been selected. Further details of routine  will be discussed below with respect to . If the inquiry to routine  is negative, then the \u201cNo\u201d branch is followed back to step . If the inquiry to decision step  is positive, then the \u201cYes\u201d branch is followed to step .","In step , the context information is formatted with the selected option. And in step  the formatted context information is displayed and saved. The process then ends.","Referring now to , this Figure is a logic flow diagram illustrating a submethod  of  for determining display options for context information according to one exemplary embodiment of the present invention. While only four display options are discussed below, one of ordinary skill in the art recognizes that a fewer number or a greater number of display options are certainly not beyond the scope and spirit of the present invention.","Decision step  is the first step in submethod  in which the application program  or document editing module  determines if the display context information as a thumbnail has been selected. If the inquiry to decision step  is positive, then the \u201cYes\u201d branch is followed to step  in which the selected format is saved. Next in step , the submethod returns to step  of .","If the inquiry to decision step  is negative, then the \u201cNo\u201d branch is followed to decision step . In decision step , the application program  or document editing module  determines if the display context information as an image that can be edited has been selected. If the inquiry to decision step  is positive, then the \u201cYes\u201d branch is followed to step  in which the selected format is saved. Next in step , the submethod returns to step  of .","If the inquiry to decision step  is negative, then the \u201cNo\u201d branch is followed to decision step . In decision step , the application program  or document editing module  determines if the display context information as hyperlink text has been selected. If the inquiry to decision step  is positive, then the \u201cYes\u201d branch is followed to step  in which the selected format is saved. Next in step , the submethod returns to step  of .","If the inquiry to decision step  is negative, then the \u201cNo\u201d branch is followed to decision step . In decision step , the application program  or document editing module  determines if the display context information as text that can be edited has been selected. If the inquiry to decision step  is positive, then the \u201cYes\u201d branch is followed to step  in which the selected format is saved. Next in step , the submethod returns to step  of . If the inquiry to decision step  is negative, then the \u201cNo\u201d branch is followed to step .","With the present invention, context information can be automatically inserted into an application program such that an author can concentrate on preserving information that requires more critical thinking and that cannot be accurately recorded by a machine. The method and system of the present invention inserts context information into an application program and permits the context information to be formatted or presented in a variety of ways.","It should be understood that the foregoing relates only to illustrative embodiments of the present invention, and that numerous changes may be made therein without departing from the spirit and scope of the invention as defined by the following claims."],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"BRIEF DESCRIPTION OF THE DRAWINGS","p":[{"@attributes":{"id":"p-0022","num":"0021"},"figref":"FIG. 1"},{"@attributes":{"id":"p-0023","num":"0022"},"figref":"FIG. 2"},{"@attributes":{"id":"p-0024","num":"0023"},"figref":"FIG. 3"},{"@attributes":{"id":"p-0025","num":"0024"},"figref":"FIG. 4"},{"@attributes":{"id":"p-0026","num":"0025"},"figref":"FIG. 5A"},{"@attributes":{"id":"p-0027","num":"0026"},"figref":"FIG. 5B"},{"@attributes":{"id":"p-0028","num":"0027"},"figref":"FIG. 5C"},{"@attributes":{"id":"p-0029","num":"0028"},"figref":"FIG. 6"},{"@attributes":{"id":"p-0030","num":"0029"},"figref":"FIG. 7"},{"@attributes":{"id":"p-0031","num":"0030"},"figref":"FIG. 8"},{"@attributes":{"id":"p-0032","num":"0031"},"figref":"FIG. 9"},{"@attributes":{"id":"p-0033","num":"0032"},"figref":"FIG. 10"},{"@attributes":{"id":"p-0034","num":"0033"},"figref":["FIG. 11","FIG. 10"]}]},"DETDESC":[{},{}]}
