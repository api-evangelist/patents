---
title: Workflow services architecture
abstract: An automated workflow services system can accommodate a wide variety of workflow scenarios. A composition service, a constraint service, and a tracking service can be provided to client programs. The composition service can support client-directed instantiation of actions for activity flows. Activity flows can be based on an activity model, constructed on an ad hoc basis, or a combination thereof. Actions can be added to an activity flow at execution time of the activity flow. The tracking service can track messages to and from the actions.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=07062537&OS=07062537&RS=07062537
owner: Microsoft Corporation
number: 07062537
owner_city: Redmond
owner_country: US
publication_date: 20031219
---

{"@attributes":{"id":"description"},"RELAPP":[{},{}],"heading":["CROSS REFERENCE TO RELATED APPLICATIONS","TECHNICAL FIELD","BACKGROUND","SUMMARY","DETAILED DESCRIPTION OF EXEMPLARY EMBODIMENTS","EXAMPLE 1","Exemplary Workflow System","EXAMPLE 2","Exemplary Method for Processing Workflows","EXAMPLE 3","Exemplary Actions","EXAMPLE 4","Exemplary Method of Processing Messages Via Interfaces","EXAMPLE 5","Exemplary Activity Flows","EXAMPLE 6","Exemplary Messages","EXAMPLE 7","Exemplary Synchronization Scenario","EXAMPLE 8","Exemplary Tasks","EXAMPLE 9","Exemplary Composability of Actions","EXAMPLE 10","Exemplary Constraints","EXAMPLE 11","Exemplary Acquisition of Facts for Constraints","EXAMPLE 12","Exemplary Composability for Constructing Activity Models","EXAMPLE 13","Exemplary Composability for Ad Hoc Selection of Actions","EXAMPLE 14","Exemplary Composability for Adding Ad Hoc Actions to Activity Model","EXAMPLE 15","Exemplary Ad Hoc Actions for Tasks","EXAMPLE 16","Exemplary Constraints Based on User Identity","EXAMPLE 17","Exemplary Transitive Actions","EXAMPLE 18","Exemplary Tracking","EXAMPLE 19","Exemplary Portrayal of Workflow Status","EXAMPLE 20","Exemplary Implementation as Web Services","EXAMPLE 21","Exemplary Pervasive Interface Techniques","EXAMPLE 22","Exemplary Discoverability","EXAMPLE 23","Exemplary Action Template","EXAMPLE 24","Exemplary Execution of Workflow Technologies","EXAMPLE 25","Exemplary Notification of Task","EXAMPLE 26","Exemplary Schemas for Message Types","EXAMPLE 27","Exemplary Schema for Activate Message Type","EXAMPLE 28","Exemplary Schema for Activate Response Message Type","EXAMPLE 29","Exemplary Schema for Synchronize Message Type","EXAMPLE 30","Exemplary Schema for Task Message Type","EXAMPLE 31","Exemplary Schema for Finish Message Type","EXAMPLE 32","Exemplary Schema for Interrupt Message Type","EXAMPLE 33","Exemplary Implementation of Architecture","EXAMPLE 34","Exemplary Implementation of User Interface for Accessing Workflow Services","EXAMPLE 35","Exemplary Implementation of Template for Building Actions","EXAMPLE 36","Combinations of the Technologies","EXAMPLE 37","Exemplary Computer System","EXAMPLE 38","Exemplary Computer-Executable Instructions","Alternatives"],"p":["This application is a continuation-in-part of U.S. patent application Ser. No. 10\/304,589 to Teegan et al, \u201cSYSTEM AND METHOD FOR COMPOSING AND CONSTRAINING AUTOMATED WORKFLOW\u201d filed Nov. 25, 2002, which is hereby incorporated herein by reference.","The technical field relates generally to automated workflow technologies.","Automated workflow technologies have been touted as a panacea for enhancing productivity in the workplace. By bringing the science of computer automation to business processes, workflow technologies promise to apply the power of software to the way companies do business.","Automated workflow technologies can represent a business process in software as a workflow. Workflow designers typically break the business process into discrete pieces that are to be performed and monitored until some completion criteria are achieved.","A persistent problem with workflow technologies is that they are typically incomprehensible to the average business worker. For example, constructing a workflow typically requires programming skills and extensive knowledge of the workflow system. Even sophisticated information workers generally do not possess the requisite programming skills and are not able or willing to learn yet another information system for the sake of utilizing the workflow technologies.","In addition, information workers tend to lose interest in the workflow system because it does not reflect the way they actually conduct business. For example, a small exception in a process typically cannot be accommodated by the workflow system, so it can often inhibit accomplishing the business process rather than facilitating it.","Conventional approaches to automated workflow are typically too complicated and rigid for actual worker needs. Thus, there is still a need for improved techniques for automated workflow.","Technologies described herein can be used in a wide variety of automated workflow scenarios. For example, a workflow service can provide for execution of composable actions. The actions can send and receive a standard set of messages, the format of which can be specified by standard interfaces.","The workflow service can include a composition service, a constraint service, and a tracking service. The composition service can support composition of actions on an a priori basis, an ad hoc basis, or a combination of the two. A priori composition can be based on an activity model.","The constraint service can support a wide variety of constraints, including constraints based on the identity of an actor. Constraints can constrain actions or target actors. Constraints can be relative or negative. In addition, constraints for transitive actions can be supported.","The services can communicate via a Single Object Access Protocol (SOAP)-based protocol with the clients, and the services can be client agnostic. User interfaces for accessing the services can be integrated into commonly-used applications already appearing on the desktops of users. For example, workflow operations can be easily integrated into familiar email or word processing interfaces.","Messages to and from actions can be tracked. As a result, the status of workflow processing can be provided.","A resilient workflow service accommodating unanticipated situations can be implemented via the technologies described herein.","Composable actions providing a wide variety of action functionality and action cooperation can be implemented via the technologies described herein.","The foregoing and other features and advantages will become more apparent from the following detailed description of disclosed embodiments, which proceeds with reference to the accompanying drawings.",{"@attributes":{"id":"p-0056","num":"0055"},"figref":"FIG. 1","b":["100","122","122","140","132","122","122","140","125"]},"The workflow services  can operate independently of the user interfaces and other details of the client programs A\u2013N. Thus, the client programs A\u2013N can take a variety of forms or be uniform as desired. Because the services  can be accessed by a variety of clients (e.g., different types of client software), they are sometimes called \u201cclient agnostic.\u201d","The workflow services  can perform workflow processing via a composition service , which can assemble composable actions (e.g., the action ) into activity flows. The composable actions can send and receive messages (e.g., the message ) according to standard interfaces.","Indications of the messages can be stored by a tracking service (e.g., in a tracking database ) for later retrieval, such as tracking the status of activity flows. A constraint service  can implement constraints to impose a wide variety of constraints to guide users during workflow processing. The constraint service can consult a fact store to apply constraints as appropriate. Such a fact store can contain a wide variety of information for an organization, and new fact types can be accommodated.","In practice, the system  can have any number of client programs, execute over a plurality of networks, and support a wide variety of concurrently-executing actions and activity flows.",{"@attributes":{"id":"p-0061","num":"0060"},"figref":["FIG. 2","FIG. 1"],"b":["200","200"]},"At , composable actions are composed into activity flows in light of constraints. For example, a constraint service can indicate possible actions and target actors based on a fact store. At , the actions are executed by the workflow services. Execution can take a wide variety of forms and include a wide variety of processing, including receiving information or indications from human actors. During execution, tasks can be assigned and information regarding the tasks collected.","At , the progress of the activity flows is tracked. For example, messages sent to and from composable actions can be recorded for later inspection. Information regarding tasks associated with the activity flows can also be tracked.","In practice, a workflow system can offer a wide variety of other functionality, including the ability to build activity models which specify a set of actions for execution in the workflow services.","In any of the examples described herein, a composable action can take the form of the exemplary composable action  shown in . The action  can be instantiated from a composable action definition, which typically includes a definition of the action's action-specific workflow processing (e.g., business logic) .","The interfaces , , , , ,  can take the form of standard interfaces. For example, the interfaces , , , , ,  can accept messages conforming to an Extensible Markup Language (XML) schema (e.g., an XML Schema Definition (XSD) specification) used throughout the workflow system. In this way, a developer can develop new actions; if the actions conform to the XML schema, they can be composed with other actions in the workflow services and benefit from the workflow services features. A different schema can be used for each of the interfaces , , , , , . For example, the schema related to the task interface  can include how to specify the actor associated with a task.","Messages (e.g., the message ) can be received by logic encapsulated by the action for a variety of reasons, including to activate the action, interrupt the action, finish the action, or synchronize (e.g., unblock) the action with other composable actions. Similarly, messages can be sent by logic encapsulated by the action for a variety of reasons, including indicating that the action has been activated, that the action has finished, or that a task is to be assigned (e.g., to an actor).","Alternative arrangements of interfaces are possible, such as fewer, more, or different interfaces. However, certain identical interfaces can be used throughout (e.g., interfaces for receiving activation and interrupt messages) if conformity is desired. Because the interfaces facilitate connection of the composable actions to each other, the workflow services, and client systems, they are sometimes called \u201cpins.\u201d Action definitions having the pins can be installed into the workflow services for use by workflow participants. Constraints regarding the accessibility of the installed actions can be specified by an administrator. The workflow system can then present the action as an option only to the appropriate actors.",{"@attributes":{"id":"p-0069","num":"0068"},"figref":["FIG. 4","FIG. 3"],"b":["300","412","422","432"]},"In practice, sending and receiving of messages can be much more complicated, including synchronization between messages, and a variety of processing by the action. However, a template can be provided to developers by which the desired business logic of the action can be easily integrated into the template to facilitate creation of actions by developers without becoming familiar with the detailed workings of the workflow services.","An executable set of one or more composable actions can take the form of an activity flow. The workflow services can coordinate the activation, instantiation, and execution flow between the actions. During execution, the actions can send and receive messages to and from the workflow services and each other. Additionally, the actions can send and receive messages from client programs (e.g., via the workflow services).","A wide variety of messages can be supported by the workflow services. However, by choosing a set of possible messages, standard modes of communication between actions, the workflow services, and clients of the workflow services can be achieved. Table 1 shows an exemplary set of messages for a workflow system.",{"@attributes":{"id":"p-0073","num":"0072"},"tables":{"@attributes":{"id":"TABLE-US-00001","num":"00001"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"center"}},"thead":{"row":{"entry":"TABLE 1"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}},{"entry":"Exemplary Message Types"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"49pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"168pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["Message",{}]},{"entry":["Type Name","Description"]},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}},{"entry":["Activate","Sent to action to activate it."]},{"entry":["Activate","Sent by action to indicate it was instantiated and"]},{"entry":["Response","activated. The message can be looped back to the action"]},{"entry":[{},"itself to initialize values used to correlate other messages"]},{"entry":[{},"received by the action."]},{"entry":["Synchronize","Can be sent or received by an action. Used for action-to-"]},{"entry":[{},"action communication. Can enable dependent"]},{"entry":[{},"composition between actions. For example, can be used"]},{"entry":[{},"to unblock processing within an action when received."]},{"entry":["Task","Sent by action to an actor and can signify the assignment"]},{"entry":[{},"of a task to the actor."]},{"entry":["Response","Sent by actor (e.g., via client software) to the action and"]},{"entry":[{},"can signify the response to a Task message (e.g., that the"]},{"entry":[{},"task was accepted and the results)."]},{"entry":["Finish","Sent by an action at the end of its execution. Can also be"]},{"entry":[{},"received to indicate that an action is to finish (e.g., for"]},{"entry":[{},"termination of dependent actions in a synchronization"]},{"entry":[{},"scenario)."]},{"entry":["Interrupt","Sent to action (e.g., via an actor) to interrupt execution."]},{"entry":[{},"The action can implement roll back functionality in"]},{"entry":[{},"response."]},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}}]}}]}}},"Each of the protocol messages can conform to an XSD schema. Thus, messages can be sent in XML.","In some situations, it may be desirable for actions to synchronize execution with each other. For example, a first action may execute while a second action waits for the first to indicate that it is proper for the second action to proceed. Such an approach can be used to implement timeouts in activity flows.",{"@attributes":{"id":"p-0076","num":"0075"},"figref":"FIG. 5","b":"500"},"In the example, due to activity of actor A, execution of the activity flow has reached the action , which assigns a task to actor B. Actor B then activates actions  and , making the action  dependent on the action . For example, the action  can be a \u201cdelegation\u201d action, and the action  can be an \u201cescalation action.\u201d Actor B can choose actor C as the target for delegation, and also specify that if C does not respond within a certain time limit, an escalation is to be sent to C's manager. The action  can in such a case block until the action  times out and sends a synchronization message .","The synchronization message  is sent between the interfaces  and . Upon receipt of the synchronization message , the action  becomes unblocked and performs its functionality, sending a message to C's manager. C's manager can then extend the flow to the next action .",{"@attributes":{"id":"p-0079","num":"0078"},"figref":"FIG. 6","b":["600","612","622","632"]},"The arrangement  or  can be useful for coordinating execution along parallel execution paths, and can be employed to implement timeout conditions, such as when an actor is assigned a task, but the task is escalated to someone else if the actor does not respond within a timeout period. Synchronization messages can be used in any of a wide variety of other action-to-action communication scenarios (e.g., to monitor the progress of another action).","In workflow processing, it is often desirable to assign work for human participants. Such assignments can be accomplished by assigning tasks to actors. Task functionality can be implemented generically by the workflow services to support a wide variety of implementations by workflow services clients. The details concerning tasks can be handled by client software. For example, the workflow services can track that there is a task assigned to a particular actor, but how the task is accomplished need not be understood or implemented by the workflow services.","For example, the client software can present the task to a human actor, who responds and may take additional steps to complete the task. In many instances, human-to-human interaction is involved in accomplishing the task, so implementing the tasks generically within the workflow services enables the workflow services to be useful in a more wide variety of circumstances.",{"@attributes":{"id":"p-0083","num":"0082"},"figref":"FIG. 7","b":["700","712","714","724","722","724","732","734"]},"The workflow services  can intercept the message  for tracking purposes and store an indication of the message  in a database . For example, a table  can indicate the task assigned and the associated actor. In practice, additional information can be stored (e.g., when the task was assigned, task results, and the like). The information can be taken from or represented by messages sent to and from the actions .",{"@attributes":{"id":"p-0085","num":"0084"},"figref":"FIG. 8","b":["800","812","822"]},"At , the tracking system of the workflow services is updated. In this way, queries about workflow progress (e.g., progress of tasks) can be answered and presented to users who wish to monitor workflow progress.","In any of the examples described herein, the actions can be composed (e.g., pieced together) to form an activity flow. Due to the design of the workflow services, actions can be composed at execution time (e.g., runtime) of the activity flow. As the workflow processing related to an activity flow is proceeding, additional actions can be added to the activity flow. Thus, the system can support activity flows created in an a priori manner (e.g., during design time of the activity model), in an ad hoc manner (e.g., during execution time of the activity model), or some combination thereof (e.g., adding actions on an ad hoc basis to an activity flow created in an a priori manner).","A developer can design new actions, which can be installed into system as long as they fit the pattern supported by the workflow services.","In any of the examples described herein, the workflow services can accommodate constraints via a constraints service. Constraints can be defined generically to support a wide variety of forms. For example, a constraint can evaluate various aspects of a current scenario and compare it to a store indicating which actions or targets are available for the current scenario. The available actions or targets can be provided to client software, which can present them for consideration by participant actors during execution or construction of an activity flow.","In addition to being applied before any action is executed, constraints can also be applied at execution time of associated activity flows. Although constraints can be used to limit what actors can do next, they can also have the corollary effect of guiding actors on what actions are available during execution of the workflow. In this way, the system can avoid overwhelming a user with numerous meaningless options, and a simple but effective user interface can be presented.","An exemplary constraint restricts which actors can perform which actions or initiate an activity flow based on a particular activity model. For example, access to a particular action or activity model can be restricted to a particular role, group, or actor. A constraint service can impose constraints generically with respect to facts.","Similarly, the actors that can be targeted (e.g., to which a task can be assigned) can be similarly restricted. For example, an actor might only be permitted to assign an accounting task to people in the accounting department, or the like.","A wide variety of facts can be included for consideration by the constraint service. For example, an organization may store information indicating an actor's name, the associated department, whether the actor is a manager, the direct reports of the actor, and the like. Such facts can be drawn from a variety of sources as described elsewhere herein. Constraints can be defined for any of the facts available via knowledge bases.","Additionally, the workflow services can support relative constraints. For example, a task might only be escalate-able to a manager of the escalating actor. Or, an actor might only be permitted to assign a task to target actors in her department. Thus, relationships between actors and targets can be taken into consideration.","Further, constraints can be defined in a negative way. For example, instead of specifying the actors who can start an activity flow, the actors who cannot start an activity flow can be specified.","Still further, the workflow services can support constraints for transitive actions. For example, in a scenario in which a task has been assigned to someone in the accounting department, a constraint can specify which actors are permitted to act upon (e.g., escalate) the task as well as constraining the transitive target (e.g., the new person to whom the task is assigned). The constraint can also take into account the actor enacted on (e.g., the target actor to which the task is already assigned). A constraint for a transitive action can be specified relatively (e.g., a relationship between a source actor and an enacted on actor)","Other constraints can be based on a document type. For example, if a task has a particular document type (e.g., a proposal), then constraints can control which actions and what targets are available. In an activity model, determining the next action to be executed can be implemented as a form of constraint.","Still other constraints can be based on activity flow progress state (e.g., where within the activity model the activity flow has progressed). For example, if an activity model is associated with a document, and the activity model has not yet been instantiated (e.g., the progress state is \u201cnot started\u201d), constraints can affect the available actions. After the activity flow for the activity has started (e.g., the progress state is \u201cstarted\u201d), different constraints can present different actions. Similarly, when the activity flow has finished (e.g., the progress state is \u201cfinished\u201d), constraints can so reflect (e.g., to not present finishing the activity flow as an option). Other states can be supported (e.g., finished a particular action, or the like).",{"@attributes":{"id":"p-0099","num":"0098"},"figref":"FIG. 9","b":["900","912","922","922","922","922"]},{"@attributes":{"id":"p-0100","num":"0099"},"figref":"FIG. 10","b":["1000","1012","1022"]},"Employing constraints in a generic way enables a wide variety of mechanisms by which a workflow participant is guided during workflow execution. Constraints are typically managed via an administrator, but participant actors can contribute to constraints (e.g., when putting together an activity flow).",{"@attributes":{"id":"p-0102","num":"0101"},"figref":"FIG. 11","b":["1100","1112","1162","1162","1132","11122","1122","1162","1162"]},"Availability of the facts in a knowledge base (e.g., the knowledge base A) can be accomplished by installing a respective knowledge base adapter (e.g., the adapter A) in the workflow services. The adapter A includes a mapping by which the information in the knowledge base A can be retrieved for use by the workflow services . For example, the workflow services  may wish to consult facts concerning actors, their positions, a security level, and the like when applying the constraints . In this way, the facts available to the workflow services  can come from any of a wide variety of sources.",{"@attributes":{"id":"p-0104","num":"0103"},"figref":"FIG. 12","b":["1200","1212","1222","1232"]},"In practice, the facts can be retrieved (e.g., from one or more knowledge bases) on a periodic basis or one-time basis and stored in a central fact store under control of the workflow services, from which requests can be fulfilled.","In addition, facts can include the current progress state of an activity flow, a document type associated with an activity flow, or some combination thereof.","In any of the examples described herein, one or more actions can be composed into a set of actions and associated constraints instantiable to create an activity flow. Such a set of actions is sometimes called an \u201cactivity model.\u201d","Executing an activity model is sometimes referred to as executing an a priori activity flow because the actions have already been chosen by the activity model designer. If desired, the activity model designer can define the activity model as immutable so that changes can not be made during execution of the associated activity flow.",{"@attributes":{"id":"p-0109","num":"0108"},"figref":"FIG. 13","b":["1300","1322","1324","1326","1328","1330"]},{"@attributes":{"id":"p-0110","num":"0109"},"figref":"FIG. 14","b":["1400","1412","1422","1432"]},"In any of the examples described herein, one or more actions can be composed into a set of actions by a human actor to form an activity flow on an ad hoc basis. For example, a human actor can choose an action for instantiation. If desired, various parameters can be provided to the instantiated action by the human actor (e.g., via an electronic form) appropriate for specific circumstances.",{"@attributes":{"id":"p-0112","num":"0111"},"figref":"FIG. 15","b":["1500","1522","1552","1522","1532","1534","1536","1538"]},"However, in the example, the target actor has not reviewed the item in the time desired. Accordingly, an actor (e.g., the same actor who chose to instantiate the review action  or another actor) has chosen to add an escalate action  at execution time of the activity flow (e.g., before the activity flow has completed). Accordingly, a new action  is instantiated and placed into the activity flow . As a result, the task is re-assigned to another target user. If desired, an interrupt message can be sent to the review action , which can take appropriate steps (e.g., canceling the task to the first target actor).","As a result of the new task, a new user interface  appears for the target actor. Again, the user interface can include the elements , , and .","The pictured actions are exemplary only. In practice, a wide variety of ad hoc actions can be provided in light of constraints.",{"@attributes":{"id":"p-0116","num":"0115"},"figref":"FIG. 16","b":["1600","1612","1622"]},"In addition to supporting activity models for execution of a priori activity flows and ad hoc composition of activity flows, the workflow services can support addition of actions to activity flows based on an activity model on an ad hoc basis.",{"@attributes":{"id":"p-0118","num":"0117"},"figref":"FIG. 17","b":["1700","1788","1722","1724","1726","1728","1730","1788"]},{"@attributes":{"id":"p-0119","num":"0118"},"figref":"FIG. 18","b":["1800","1812"]},"At , an indication of the desired ad hoc action is received. For example, client software can indicate which option a user has selected.","At , the ad hoc action is composed into the activity flow. The tracking service of the workflow services can be updated to indicate that the new action has been added and which actor added it.","A special task-specific set of ad hoc actions can be made available for tasks. Such ad hoc actions can be presented for selection by an actor whenever a task is involved (e.g., even though they did not appear in the associated activity model). Such ad hoc actions can be selectively presented based on constraints.","Exemplary ad hoc actions for tasks include escalate, delegate, and the like. For example, when presented with a task, an actor can also be presented with the option to escalate or delegate the task. Whether such an option is available and the possible targets can be controlled by constraints. Such options can also be presented in a graphical depiction of the activity flow's progress. In this way, an actor monitoring the progress can easily move execution along by escalation or delegation.","The ability to specify such ad hoc actions related to tasks can make the workflow services more useful because workflow processing is more able to respond to unanticipated circumstances.",{"@attributes":{"id":"p-0125","num":"0124"},"figref":"FIG. 19","b":["1900","1912","1922","1912"]},"The defined constraints  will determine whether the actor  (i.e., the source actor) can select the action  for instantiation and which targets  can be selected. The determination can be based on the identity of the actor . Such identity considerations can include a user name of the actor, which group(s) the actor is a member of, and what role(s) the actor  is a member of. In addition, a relative constraint can specify that the actor  have a relationship to another actor.","Further, the constraints  will determine which target actors  can be specified for the action . The target actor  may be a single actor, a group, or some other designation. The various constraints can associate the action (e.g., via an action id associated with a definition of the action) with permitted instantiating actors and target actors (e.g., for the particular instantiating actor).","In practice, constraints can be implemented so that the human actor associated with the actor  only sees options appropriate as indicated by the constraints . In this way, the human actor is not overwhelmed by too many choices and is guided during workflow processing.",{"@attributes":{"id":"p-0129","num":"0128"},"figref":"FIG. 20","b":["2000","2012","2022"]},"The workflow can also support constraints for transitive actions. Transitive actions include those actions that can be applied to other actions, which typically already have associated target actors. Examples of transitive actions include delegate and escalate.",{"@attributes":{"id":"p-0131","num":"0130"},"figref":"FIG. 21","b":["2100","2112","2131","2134","2122","2144","2131"]},"Whether the transitive action  will appear as an option for the actor  will depend on the constraints . Such a determination can be based on the identity of the actor , the type of transitive action , the type of action , the enacted on actor , or some combination thereof. Finally, the permitted targets  can also be controlled via the constraints  (e.g., based on the same considerations or other combination of considerations as for whether the option will appear).",{"@attributes":{"id":"p-0133","num":"0132"},"figref":"FIG. 22","b":["2212","2222"]},{"@attributes":{"id":"p-0134","num":"0133"},"figref":"FIG. 23","b":["2300","2312","2312","2322","2322","2332"]},{"@attributes":{"id":"p-0135","num":"0134"},"figref":"FIG. 24","b":["2400","2412","2422"]},{"@attributes":{"id":"p-0136","num":"0135"},"figref":"FIG. 25","b":["2500","2521","2522","2523","2524","2525","2526","2500","2534","2532"]},{"@attributes":{"id":"p-0137","num":"0136"},"figref":"FIG. 26","b":["2600","2612","2622"]},"In practice, a wide variety of user interfaces can be presented. In addition, the user interface can present further options for human actors by which they can participate in the workflow as they monitor it. For example, an option to escalate or interrupt an option can be presented.","In any of the examples described herein, the workflow services can be presented to clients as a web service. For example, user interfaces can be provided in the form of Hyper Text Markup Language (HTML), which can be rendered by the client.","In any of the examples described herein, the workflow services can be utilized via a pervasive user interface. For example, the user interface for workflow services can be integrated into common software programs, such as an email program or a word processing program. In this way, common, familiar software can be used as a client for the workflow services. Communication can be accomplished by sending XML messages (e.g., according to the SOAP protocol), and user interfaces can be depicted via HTML.",{"@attributes":{"id":"p-0141","num":"0140"},"figref":"FIG. 27","b":["2700","2712","2722","2762"]},"The user interface indicates that the task for the target actor (e.g., the user reviewing email) is to review a budget document. The user interface elements , , and  can be used to communicate back to the workflow services. For example, upon activation of the pushbutton , a message is sent back to the action that has initiated the task to the target actor. Appropriate steps can then be taken by the associated activity flow.","Instead of the pane , the pane  of  can be shown. In the example, in addition to the standard task options of sub-pane  (e.g., the user interface elements , , and ), options for ad hoc actions appear in the sub-pane  (e.g., the user interface element ).",{"@attributes":{"id":"p-0144","num":"0143"},"figref":"FIG. 29","b":["2900","2912","2922"]},{"@attributes":{"id":"p-0145","num":"0144"},"figref":"FIG. 30","b":["3000","3062","3062","3072","3076"]},{"@attributes":{"id":"p-0146","num":"0145"},"figref":"FIG. 31","b":["3100","3136","3134","3136","3136","3136"]},"The specification can be provided in the form of or be transformed into an HTML form by which the parameters can be collected. For example, a review action may specify that targets are to be provided and thus generate an appropriate HTML form for completion by an actor. Constraints can be used to fill in the appropriate target actors.",{"@attributes":{"id":"p-0148","num":"0147"},"figref":"FIG. 32","b":["3200","3212","3222"]},"A similar approach can be used for discoverability of a parameter specification for an activity model. Discoverability can be performed at execution time of an action or an activity flow.","In order to facilitate development of actions, a template can be provided to developers.  shows an exemplary arrangement  involving a template action definition . The template can be edited in a visual programming language which can then generate appropriate executable code for the action.","In the example, the interfaces of the action are represented by pins , , , and . The template accounts for receipt of an activation message by the activation interface . Activation logic  encapsulated by the action receives the activation message and loops back the activation response message to itself, in order to initialize values that correlate other messages received by the action template.","The template  further accounts for dependent composition (e.g., synchronization scenarios). For example, the synchronization logic  and the listen logic  can be executed in parallel. If the action has been composed in a dependent way (e.g., its further execution depends on receiving a message from another action), the synchronization logic  can block execution until a message is received from the synchronization interface .","In parallel, the listen logic  can listen for interrupt or finish messages. If an interrupt message is received from the interrupt interface , interrupt logic (e.g., rolling back state) can be executed.","If not blocked or unblocked, the action-specific processing (e.g., business logic)  can be executed. Finally, finish logic  can be executed, and a finish message sent to the finish interface . The message is received by the action in the listen logic  and causes the parallel branch to complete as well.","In practice, additional or other logic can be included. After development is completed, the action definition can be installed into the workflow services and appropriate constraints defined as associated with the action.",{"@attributes":{"id":"p-0156","num":"0155"},"figref":"FIGS. 34","b":["35","36","37"]},{"@attributes":{"id":"p-0157","num":"0156"},"figref":"FIG. 34","b":["3410","3420","3430","3430"]},{"@attributes":{"id":"p-0158","num":"0157"},"figref":["FIGS. 35\u201337","FIG. 35"],"b":["3510","3520","3530","3520","3430","3430","3530"]},{"@attributes":{"id":"p-0159","num":"0158"},"figref":"FIG. 36","b":["3430","3430","3610","3620","3530"]},"The user interface can also include a pane  that allows one of the experts A\u2013D to escalate or delegate the task to another actor. In the example, the viewing actor delegates the task to actor \u201cKern\u201d and activates the user interface element .","Due to the tracking feature of the workflow technologies, a presentation  can show the status of the workflow described above. The customer Peter  initiated the workflow by sending an email. For example, instead of manually forwarding the email, the actor Jenny  could have a rule set up in her email inbox to automatically start an activity model based on detecting \u201cNew RFP\u201d in the subject of a message. The experts - have received the RFP for review. Julian  has approved the RFP at , and Michael  has delegated  his task to Kerry , as indicated by the indicator .",{"@attributes":{"id":"p-0162","num":"0161"},"figref":"FIG. 38","b":"3800"},"Exemplary schemas for various message types are shown below. The message types can include activate, activate response, synchronize, task, finish, and interrupt. Although some of the examples indicate that a schema should not be modified for purposes of conforming to the schema, alternative implementations can use a different set of schemas accomplishing similar functionality. For example, although Globally Unique Identifiers (GUIDs) are specified in the examples, other identifiers (e.g., another unique identifier) can be used instead. In the examples, the workflow system is sometimes called a human workflow system (\u201cHWS\u201d).","The Hws_Activate message is an exemplary activate message used to supply parameters to an action during its activation. An action can have at most one activation message schema associated with it. In the example, the Hws_Activate message has three child elements under the HwsMessage node. These are HwsSection, ActionSection and Payloads. These are explained below:","HwsSection: The HwsSection holds definitions of XML elements and attributes that are reserved for use by the Hws system. Elements or attributes defined under this section should not be modified. Table 2 shows an exemplary list of elements\/attributes defined under the HwsSection node.",{"@attributes":{"id":"p-0166","num":"0165"},"tables":{"@attributes":{"id":"TABLE-US-00002","num":"00002"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0","pgwide":"1"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"273pt","align":"center"}},"thead":{"row":{"entry":"TABLE 2"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}},{"entry":"Exemplary Elements\/Attributed under HwsSection node"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"5"},"colspec":[{"@attributes":{"colname":"1","colwidth":"84pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"35pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"4","colwidth":"35pt","align":"center"}},{"@attributes":{"colname":"5","colwidth":"91pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},{},{},"Min\/",{}]},{"entry":[{},{},{},"Max"]},{"entry":[{},{},"Data","occur-"]},{"entry":["Node name","Node type","type","ance","Description"]},{"entry":{"@attributes":{"namest":"1","nameend":"5","align":"center","rowsep":"1"}}},{"entry":["HwsMessageType","Attribute","String","1\/1","This attribute identifies the"]},{"entry":[{},{},{},{},"message schema to be of type"]},{"entry":[{},{},{},{},"Hws_Activate. The default"]},{"entry":[{},{},{},{},"value for the attribute is"]},{"entry":[{},{},{},{},"\u201cHws_Activate\u201d."]},{"entry":["ActivityFlowID \u2020","Element","String","1\/1","The value for this element is a"]},{"entry":[{},{},{},{},"GUID string and it identifies"]},{"entry":[{},{},{},{},"the activity flow which the"]},{"entry":[{},{},{},{},"action being instantiated is"]},{"entry":[{},{},{},{},"going to be a part of."]},{"entry":["ActivityFlowDescription","Element","String","1\/1","The value for this element"]},{"entry":[{},{},{},{},"should carry a description of"]},{"entry":[{},{},{},{},"the activity flow which the"]},{"entry":[{},{},{},{},"action being instantiated is"]},{"entry":[{},{},{},{},"going to be a part of."]},{"entry":["InitiatingActor","Element","String","1\/1","The value for this element is"]},{"entry":[{},{},{},{},"the id of the actor initiating"]},{"entry":[{},{},{},{},"the action."]},{"entry":["ActionTypeID","Element","String","1\/1","The value for this element is a"]},{"entry":[{},{},{},{},"GUID string that identifies"]},{"entry":[{},{},{},{},"the action being instantiated."]},{"entry":["ActionInstanceID \u2020","Element","String","1\/1","The value for this element is a"]},{"entry":[{},{},{},{},"GUID string that uniquely"]},{"entry":[{},{},{},{},"identifies an instance of the"]},{"entry":[{},{},{},{},"action being activated."]},{"entry":["ActionInstanceDescription","Element","String","1\/1","The value for this element"]},{"entry":[{},{},{},{},"should carry a description for"]},{"entry":[{},{},{},{},"the action instance being"]},{"entry":[{},{},{},{},"activated."]},{"entry":["ParentActionInstanceID \u2020","Element","String","1\/1","The value for this element is a"]},{"entry":[{},{},{},{},"GUID string that identifies"]},{"entry":[{},{},{},{},"the action instance preceding"]},{"entry":[{},{},{},{},"this action in the activity"]},{"entry":[{},{},{},{},"flow."]},{"entry":["ParentTaskID","Element","String","1\/1","The value for this element is a"]},{"entry":[{},{},{},{},"GUID string that identifies a"]},{"entry":[{},{},{},{},"task from a preceding action"]},{"entry":[{},{},{},{},"in the activity flow. This is"]},{"entry":[{},{},{},{},"the id of the task message that"]},{"entry":[{},{},{},{},"led or required the initiating"]},{"entry":[{},{},{},{},"actor to activate the current"]},{"entry":[{},{},{},{},"action."]},{"entry":["ActivityModelTypeID","Element","String","1\/1","The value for this element is a"]},{"entry":[{},{},{},{},"GUID string that identifies"]},{"entry":[{},{},{},{},"the activity model the action"]},{"entry":[{},{},{},{},"being instantiated is a part of."]},{"entry":["ActivityModelInstanceID \u2020","Element","String","1\/1","The value for this element is a"]},{"entry":[{},{},{},{},"GUID string that identifies"]},{"entry":[{},{},{},{},"the activity model instance"]},{"entry":[{},{},{},{},"the action being activated is a"]},{"entry":[{},{},{},{},"part of."]},{"entry":["ActivityModelStepID","Element","Int","1\/1","The value for this element is a"]},{"entry":[{},{},{},{},"GUID string that identifies an"]},{"entry":[{},{},{},{},"activity model step associated"]},{"entry":[{},{},{},{},"with this action. Each step"]},{"entry":[{},{},{},{},"within an activity model is"]},{"entry":[{},{},{},{},"associated with one action."]},{"entry":["IsDependentOnParent \u2020","Element","Boolean","1\/1","This flag determines if the"]},{"entry":[{},{},{},{},"action being instantiated"]},{"entry":[{},{},{},{},"should wait for a synchronize"]},{"entry":[{},{},{},{},"message from a parent action"]},{"entry":[{},{},{},{},"instance. If true, the current"]},{"entry":[{},{},{},{},"action waits for a synchronize"]},{"entry":[{},{},{},{},"message from the parent"]},{"entry":[{},{},{},{},"action before it proceeds. If"]},{"entry":[{},{},{},{},"false, the current action does"]},{"entry":[{},{},{},{},"not wait for the synchronize"]},{"entry":[{},{},{},{},"message."]},{"entry":["ActivityFlowProperties","Record",{},"1\/1","This node groups properties"]},{"entry":[{},{},{},{},"that correspond to an activity"]},{"entry":[{},{},{},{},"flow and need to be tracked"]},{"entry":[{},{},{},{},"so that they can be used in"]},{"entry":[{},{},{},{},"other actions in the activity"]},{"entry":[{},{},{},{},"flow."]},{"entry":["ActivityFlowProperties\\","Record","String","0\/un-","This property is optional."]},{"entry":["Property",{},{},"bounded","Nodes of this type carry"]},{"entry":[{},{},{},{},"values for properties that need"]},{"entry":[{},{},{},{},"to be tracked at the activity"]},{"entry":[{},{},{},{},"flow level."]},{"entry":["ActivityFlowProperties\\","Attribute","String","1\/1","Name of the property being"]},{"entry":["Property\\Name",{},{},{},"tracked at activity flow level."]},{"entry":["ActivityFlowProperties\\","Attribute","String","1\/1","Description of the property"]},{"entry":["Property\\Description",{},{},{},"being tracked at activity flow"]},{"entry":[{},{},{},{},"level."]},{"entry":["ActivityFlowProperties\\","Attribute","String","1\/1","Data type of the property"]},{"entry":["Property\\Type",{},{},{},"being tracked at activity flow"]},{"entry":[{},{},{},{},"level."]},{"entry":["ActionProperties","Record",{},"1\/1","This node groups properties"]},{"entry":[{},{},{},{},"that correspond to an action"]},{"entry":[{},{},{},{},"instance and need to be"]},{"entry":[{},{},{},{},"tracked."]},{"entry":["ActionProperties\\","Record","String","0\\un-","This property is optional."]},{"entry":["Property",{},{},"bounded","Nodes of this type carry"]},{"entry":[{},{},{},{},"values for properties that need"]},{"entry":[{},{},{},{},"to be tracked at the action"]},{"entry":[{},{},{},{},"instance level."]},{"entry":["ActionProperties\\","Attribute","String","1\/1","Name of the property being"]},{"entry":["Property\\Name",{},{},{},"tracked at action instance"]},{"entry":[{},{},{},{},"level"]},{"entry":["ActionProperties\\","Attribute","String","1\/1","Description of the property"]},{"entry":["Property\\Description",{},{},{},"being tracked at action"]},{"entry":[{},{},{},{},"instance level"]},{"entry":["ActionProperties\\","Attribute","String","1\/1","Data type of the property"]},{"entry":["Property\\Type",{},{},{},"being tracked at action"]},{"entry":[{},{},{},{},"instance level"]},{"entry":["HwsWebServiceUrl","Element","String","1\/1","Url of the Human workflow"]},{"entry":[{},{},{},{},"web-service."]},{"entry":{"@attributes":{"namest":"1","nameend":"5","align":"center","rowsep":"1"}}},{"entry":"\u2020 These properties are promoted out by default for reference and use in the action template."}]}}]}}},"ActionSection: The ActionSection is customizable by action developers and can contain any action specific parameters and values to be delivered to the action during instantiation. This section may contain elements that correspond to human targets for the action. The values of elements\/attributes in the ActionSection are not tracked by the Hws interceptor. If you need properties that should be tracked, specify them in the instance document under the pre-defined HwsSection\\ActionProperties collection.\n\n","Each activation message schema can have a target namespace that uniquely identifies it within the set of deployed schemas.","The Hws_ActivateResponse message is an exemplary activate response message used internally by the action template to initialize a set of correlation variables that are used for receiving other messages in the template.","The Hws_ActivateResponse message has only one child element under the HwsMessage node. This is the HwsSection. This is explained below:\n\n",{"@attributes":{"id":"p-0171","num":"0179"},"tables":{"@attributes":{"id":"TABLE-US-00003","num":"00003"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0","pgwide":"1"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"266pt","align":"center"}},"thead":{"row":{"entry":"TABLE 3"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}},{"entry":"Exemplary Elements\/Attributed under HwsSection node"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"5"},"colspec":[{"@attributes":{"colname":"1","colwidth":"84pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"35pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"4","colwidth":"28pt","align":"center"}},{"@attributes":{"colname":"5","colwidth":"91pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},{},{},"Min\/",{}]},{"entry":[{},{},{},"Max"]},{"entry":[{},{},"Data","occur-"]},{"entry":["Node name","Node type","type","ance","Description"]},{"entry":{"@attributes":{"namest":"1","nameend":"5","align":"center","rowsep":"1"}}},{"entry":["HwsMessageType","Attribute","String","1\/1","This attribute identifies the"]},{"entry":[{},{},{},{},"message schema to be of"]},{"entry":[{},{},{},{},"type"]},{"entry":[{},{},{},{},"Hws_ActivateResponse. The"]},{"entry":[{},{},{},{},"default value for the attribute"]},{"entry":[{},{},{},{},"is \u201cHws_ActivateResponse\u201d."]},{"entry":["ActivityFlowID \u2020","Element","String","1\/1","The value for this element is"]},{"entry":[{},{},{},{},"a GUID string and it"]},{"entry":[{},{},{},{},"identifies the activity flow"]},{"entry":[{},{},{},{},"which the action is a part of."]},{"entry":["ActionInstanceID \u2020","Element","String","1\/1","The value for this element is"]},{"entry":[{},{},{},{},"a GUID string that uniquely"]},{"entry":[{},{},{},{},"identifies an instance of the"]},{"entry":[{},{},{},{},"action activated."]},{"entry":["ParentActionInstanceID \u2020","Element","String","1\/1","The value for this element is"]},{"entry":[{},{},{},{},"a GUID string that identifies"]},{"entry":[{},{},{},{},"the action instance preceding"]},{"entry":[{},{},{},{},"this action in the activity"]},{"entry":[{},{},{},{},"flow."]},{"entry":["ActivityModelInstanceID \u2020","Element","String","1\/1","The value for this element is"]},{"entry":[{},{},{},{},"a GUID string that identifies"]},{"entry":[{},{},{},{},"the activity model instance"]},{"entry":[{},{},{},{},"the action being activated is"]},{"entry":[{},{},{},{},"a part of."]},{"entry":{"@attributes":{"namest":"1","nameend":"5","align":"center","rowsep":"1"}}},{"entry":"\u2020 These properties are promoted out by default tor initializing the correlation sets used by the action template."}]}}]}},"ul":{"@attributes":{"id":"ul0009","list-style":"none"},"li":{"@attributes":{"id":"ul0009-0001","num":"0000"},"ul":{"@attributes":{"id":"ul0010","list-style":"none"},"li":{"@attributes":{"id":"ul0010-0001","num":"0000"},"ul":{"@attributes":{"id":"ul0011","list-style":"none"},"li":"Annotations: The activate response message schema has annotation for Description of the message. The value for this annotation is not available for editing."}}}}}},"The TargetNamespace of this schema is defined via an URL (e.g., http:\/\/[base]\/Hws_ActivateResponse). This schema can be compiled into an assembly (e.g., a DLL) and is referenced by the action template. The message is constructed in the action and sent\/received over a direct-bound port.","The Hws_Synchronize message is an exemplary synchronize message sent from one action to another to unblock the execution of the receiving action. The receiving action instance should have been activated with the IsDependentOnParent property in its activation message set to true to be able to wait for the synchronize message.","The Hws_Synchronize message has three child elements under the HwsMessage node. These are HwsSection, ActionSection and Payloads. These are explained below:","HwsSection: The HwsSection holds definitions of xml elements and attributes that are reserved for use by the Hws system. Elements or attributes defined under this section should not be modified. Table 4 shows an exemplary list of elements\/attributes defined under the HwsSection node.",{"@attributes":{"id":"p-0176","num":"0185"},"tables":{"@attributes":{"id":"TABLE-US-00004","num":"00004"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0","pgwide":"1"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"266pt","align":"center"}},"thead":{"row":{"entry":"TABLE 4"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}},{"entry":"Exemplary Elements\/Attributed under HwsSection node"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"5"},"colspec":[{"@attributes":{"colname":"1","colwidth":"77pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"35pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"4","colwidth":"28pt","align":"center"}},{"@attributes":{"colname":"5","colwidth":"98pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},{},{},"Min\/",{}]},{"entry":[{},{},{},"Max"]},{"entry":[{},{},"Data","occur-"]},{"entry":["Node name","Node type","type","ance","Description"]},{"entry":{"@attributes":{"namest":"1","nameend":"5","align":"center","rowsep":"1"}}},{"entry":["HwsMessageType","Attribute","String","1\/1","This attribute identifies"]},{"entry":[{},{},{},{},"the message schema to"]},{"entry":[{},{},{},{},"be of type"]},{"entry":[{},{},{},{},"Hws_Synchronize. The"]},{"entry":[{},{},{},{},"default value for the"]},{"entry":[{},{},{},{},"attribute is \u201cHws_Synchronize\u201d."]},{"entry":["ActivityFlowID","Element","String","1\/1","The value for this"]},{"entry":[{},{},{},{},"element is a GUID"]},{"entry":[{},{},{},{},"string and it identifies"]},{"entry":[{},{},{},{},"the activity flow which"]},{"entry":[{},{},{},{},"the action sending the"]},{"entry":[{},{},{},{},"synchronize message is"]},{"entry":[{},{},{},{},"a part of."]},{"entry":["ActionInstanceID \u2020","Element","String","1\/1","The value for this"]},{"entry":[{},{},{},{},"element is a GUID"]},{"entry":[{},{},{},{},"string that uniquely"]},{"entry":[{},{},{},{},"identifies the action"]},{"entry":[{},{},{},{},"instance that sends the"]},{"entry":[{},{},{},{},"synchronize message."]},{"entry":["ActivityModelInstanceID","Element","String","1\/1","The value for this"]},{"entry":[{},{},{},{},"element is a GUID"]},{"entry":[{},{},{},{},"string that identifies the"]},{"entry":[{},{},{},{},"activity model instance"]},{"entry":[{},{},{},{},"the action sending the"]},{"entry":[{},{},{},{},"synchronize message is"]},{"entry":[{},{},{},{},"a part of."]},{"entry":["HwsWebServiceUrl","Element","String","1\/1","Url of the Human"]},{"entry":[{},{},{},{},"workflow web-service."]},{"entry":{"@attributes":{"namest":"1","nameend":"5","align":"center","rowsep":"1"}}},{"entry":"\u2020 These properties are promoted out by default for reference and use in the action template."}]}}]}}},"ActionSection: The ActionSection is customizable by action developers and can contain any scenario specific parameters and values to be delivered to the receiving action.\n\n","Each synchronize message schema should have a Target Namespace that uniquely identifies it within the set of deployed schemas. If the TargetNamespace of the synchronize message is changed or if a new synchronize message schema is added to an action then the Incoming Sync Messages and Outgoing Sync Messages properties on the activation message (of the action that either sends this synchronize message or receives it) needs to be updated as well. Synchronize messages are sent and received over direct-bound ports.","The Hws_Task message schema is an exemplary schema used for messages that are sent to the participating targets of an action. An action can send task messages of one or more types. It can also send one or more instances of a given task message type. The Hws_Task message can be used for submitting responses back to the action also.","The Hws_Task message has three child elements under the HwsMessage node. These are HwsSection, ActionSection and Payloads. These are explained below:","HwsSection: The HwsSection holds definitions of xml elements and attributes that are reserved for use by the Hws system. Elements or attributes defined under this section should not be modified. Table 5 shows an exemplary list of elements\/attributes defined under the HwsSection node.",{"@attributes":{"id":"p-0182","num":"0195"},"tables":{"@attributes":{"id":"TABLE-US-00005","num":"00005"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0","pgwide":"1"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"259pt","align":"center"}},"thead":{"row":{"entry":"TABLE 5"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}},{"entry":"Exemplary Elements\/Attributed under HwsSection node"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"5"},"colspec":[{"@attributes":{"colname":"1","colwidth":"77pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"35pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"4","colwidth":"35pt","align":"center"}},{"@attributes":{"colname":"5","colwidth":"84pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},{},{},"Min\/",{}]},{"entry":[{},{},{},"Max"]},{"entry":[{},{},"Data","occur-"]},{"entry":["Node name","Node type","type","ance","Description"]},{"entry":{"@attributes":{"namest":"1","nameend":"5","align":"center","rowsep":"1"}}},{"entry":["HwsMessageType","Attribute","String","1\/1","This attribute identifies the"]},{"entry":[{},{},{},{},"message schema to be of"]},{"entry":[{},{},{},{},"type Hws_Task. The"]},{"entry":[{},{},{},{},"default value for the"]},{"entry":[{},{},{},{},"attribute is \u201cHws_Task\u201d."]},{"entry":["ActivityFlowID","Element","String","1\/1","The value for this element"]},{"entry":[{},{},{},{},"is a GUID string and it"]},{"entry":[{},{},{},{},"identifies the activity flow"]},{"entry":[{},{},{},{},"which the action sending"]},{"entry":[{},{},{},{},"or receiving the task"]},{"entry":[{},{},{},{},"message is part of."]},{"entry":["TaskID\u2020","Element","String","1\/1","The value for this element"]},{"entry":[{},{},{},{},"is a GUID string that"]},{"entry":[{},{},{},{},"uniquely identifies each"]},{"entry":[{},{},{},{},"task that is being assigned"]},{"entry":[{},{},{},{},"to an actor by the action."]},{"entry":[{},{},{},{},"The same TaskID value"]},{"entry":[{},{},{},{},"should used in the task"]},{"entry":[{},{},{},{},"message that the actor"]},{"entry":[{},{},{},{},"sends back to the action in"]},{"entry":[{},{},{},{},"response."]},{"entry":["TaskDescription","Element","String","1\/1","The value for this element"]},{"entry":[{},{},{},{},"should carry a description"]},{"entry":[{},{},{},{},"of the task being assigned"]},{"entry":[{},{},{},{},"to and actor or that of the"]},{"entry":[{},{},{},{},"response from the actor."]},{"entry":["ActionTypeID","Element","String","1\/1","The value for this element"]},{"entry":[{},{},{},{},"is a GUID string that"]},{"entry":[{},{},{},{},"identifies the action"]},{"entry":[{},{},{},{},"sending or receiving the"]},{"entry":[{},{},{},{},"task message."]},{"entry":["ActionInstanceID \u2020","Element","String","1\/1","The value for this element"]},{"entry":[{},{},{},{},"is a GUID string that"]},{"entry":[{},{},{},{},"uniquely identifies an"]},{"entry":[{},{},{},{},"instance of the action"]},{"entry":[{},{},{},{},"sending or receiving the"]},{"entry":[{},{},{},{},"task message."]},{"entry":["InitiatingActor","Element","String","1\/1","The value for this element"]},{"entry":[{},{},{},{},"is the id of the actor who"]},{"entry":[{},{},{},{},"initiated the action that is"]},{"entry":[{},{},{},{},"sending or receiving the"]},{"entry":[{},{},{},{},"task message."]},{"entry":["ActorElementXPath","Element","String","1\/1","This is the Xpath of the"]},{"entry":[{},{},{},{},"target actor to which the"]},{"entry":[{},{},{},{},"task message is being sent."]},{"entry":[{},{},{},{},"The XPath is the value of"]},{"entry":[{},{},{},{},"the Instance XPath"]},{"entry":[{},{},{},{},"property for the target node"]},{"entry":[{},{},{},{},"that corresponds to the"]},{"entry":[{},{},{},{},"target actor from the"]},{"entry":[{},{},{},{},"activation message of the"]},{"entry":[{},{},{},{},"action."]},{"entry":["TargetActor","Element","String","1\/1","The value of this element"]},{"entry":[{},{},{},{},"is the id of the actor who is"]},{"entry":[{},{},{},{},"receiving the task message"]},{"entry":[{},{},{},{},"or is sending the response"]},{"entry":[{},{},{},{},"for it."]},{"entry":["ActivityModelTypeID","Element","String","1\/1","The value for this element"]},{"entry":[{},{},{},{},"is a GUID string that"]},{"entry":[{},{},{},{},"identifies the activity"]},{"entry":[{},{},{},{},"model the action being"]},{"entry":[{},{},{},{},"instantiated is a part of."]},{"entry":["ActivityModelStepID","Element","Int","1\/1","The value for this element"]},{"entry":[{},{},{},{},"is an integer that identifies"]},{"entry":[{},{},{},{},"an activity model step"]},{"entry":[{},{},{},{},"associated with this action."]},{"entry":[{},{},{},{},"Each step within an"]},{"entry":[{},{},{},{},"activity model is unique"]},{"entry":[{},{},{},{},"and is associated with one"]},{"entry":[{},{},{},{},"action."]},{"entry":["ActivityModelInstanceID","Element","String","1\/1","The value for this element"]},{"entry":[{},{},{},{},"is a GUID string that"]},{"entry":[{},{},{},{},"identifies the activity"]},{"entry":[{},{},{},{},"model instance the action"]},{"entry":[{},{},{},{},"sending or receiving the"]},{"entry":[{},{},{},{},"task message is a part of."]},{"entry":["TaskProperties","Record",{},"1\/1","This node groups"]},{"entry":[{},{},{},{},"properties that correspond"]},{"entry":[{},{},{},{},"to a task and need to be"]},{"entry":[{},{},{},{},"tracked."]},{"entry":["TaskProperties\\","Record","String","0\/un-","This property is optional."]},{"entry":["Property",{},{},"bounded","Nodes of this type carry"]},{"entry":[{},{},{},{},"values for properties that"]},{"entry":[{},{},{},{},"need to be tracked at the"]},{"entry":[{},{},{},{},"task message level."]},{"entry":["TaskProperties\\","Attribute","String","1\/1","Name of the property"]},{"entry":["Property\\Name",{},{},{},"being tracked at the task"]},{"entry":[{},{},{},{},"message level."]},{"entry":["TaskProperties\\","Attribute","String","1\/1","Description of the property"]},{"entry":["Property\\Description",{},{},{},"being tracked at the task"]},{"entry":[{},{},{},{},"message level."]},{"entry":["TaskProperties\\","Attribute","String","1\/1","Data type of the property"]},{"entry":["Property\\Type",{},{},{},"being tracked at the task"]},{"entry":[{},{},{},{},"message level."]},{"entry":["HwsWebServiceUrl","Element","String","1\/1","Url of the Human"]},{"entry":[{},{},{},{},"workflow web-service."]},{"entry":{"@attributes":{"namest":"1","nameend":"5","align":"center","rowsep":"1"}}}]}}]}}},"ActionSection: The ActionSection is customizable by action developers and can contain any scenario specific parameters and values to be delivered to the participating targets. It can also be used to define any parameters that the targets can supply in their responses.","Payloads: The payloads node in the schema is a placeholder for applications to specify additional information that may need to be included in other messages sent out by the action.\n\n","The Hws_Finish message is an exemplary finish message used internally by an action and is sent out when the action completes execution. The Hws_Finish message has only one child element under the HwsMessage node. This is the HwsSection. This is explained below:","HwsSection: The HwsSection holds definitions of xml elements and attributes that are reserved for use by the Hws system. Elements or attributes defined under this section should not be modified. Table 6 shows an exemplary list of elements\/attributes defined under the HwsSection node.",{"@attributes":{"id":"p-0187","num":"0204"},"tables":{"@attributes":{"id":"TABLE-US-00006","num":"00006"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"center"}},"thead":{"row":{"entry":"TABLE 6"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}},{"entry":"Exemplary Elements\/Attributed under HwsSection node"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"5"},"colspec":[{"@attributes":{"colname":"1","colwidth":"49pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"35pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"4","colwidth":"28pt","align":"center"}},{"@attributes":{"colname":"5","colwidth":"77pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},{},{},"Min\/",{}]},{"entry":[{},{},{},"Max"]},{"entry":[{},{},"Data","occur-"]},{"entry":["Node name","Node type","type","ance","Description"]},{"entry":{"@attributes":{"namest":"1","nameend":"5","align":"center","rowsep":"1"}}},{"entry":["HwsMessage","Attribute","String","1\/1","This attribute identifies"]},{"entry":["Type",{},{},{},"the message schema to"]},{"entry":[{},{},{},{},"be of type Hws_Finish."]},{"entry":[{},{},{},{},"The default value for the"]},{"entry":[{},{},{},{},"attribute is"]},{"entry":[{},{},{},{},"\u201cHws_Finish\u201d."]},{"entry":["Action","Element","String","1\/1","The value for this"]},{"entry":["InstanceID \u2020",{},{},{},"element is a GUID string"]},{"entry":[{},{},{},{},"that uniquely identifies"]},{"entry":[{},{},{},{},"an instance of the action"]},{"entry":[{},{},{},{},"that was activated and is"]},{"entry":[{},{},{},{},"now sending the finish"]},{"entry":[{},{},{},{},"message."]},{"entry":{"@attributes":{"namest":"1","nameend":"5","align":"center","rowsep":"1"}}}]}}]}},"ul":{"@attributes":{"id":"ul0021","list-style":"none"},"li":{"@attributes":{"id":"ul0021-0001","num":"0000"},"ul":{"@attributes":{"id":"ul0022","list-style":"none"},"li":"Annotations: The activate response message schema has annotation for Description of the message. The value for this annotation is not available for editing.\n\nThe TargetNamespace of this schema can be defined via an URL (e.g., http:\/\/[base]\/Hws_Finish). This schema can be compiled into an assembly (e.g., a DLL) and is referenced by the action template. The message is constructed in the action and sent\/received over a direct-bound port.\n"}}}},"The Hws_Interrupt message is an exemplary interrupt message used to interrupt a running instance of an action. An interrupt message can be sent to an individual action instance, to an entire activity flow or to an entire activity model instance. There are two kinds of interrupts\u2014abort and rollback.","The Hws_Interrupt message has only one child element under the HwsMessage node. This is the HwsSection. This is explained below:","HwsSection: The HwsSection holds definitions of xml elements and attributes that are reserved for use by the Hws system. Elements or attributes defined under this section should not be modified. Table 7 shows an exemplary list of elements\/attributes defined under the HwsSection node",{"@attributes":{"id":"p-0191","num":"0209"},"tables":{"@attributes":{"id":"TABLE-US-00007","num":"00007"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0","pgwide":"1"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"259pt","align":"center"}},"thead":{"row":{"entry":"TABLE 7"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}},{"entry":"Exemplary Elements\/Attributed under HwsSection node"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"5"},"colspec":[{"@attributes":{"colname":"1","colwidth":"84pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"35pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"4","colwidth":"28pt","align":"center"}},{"@attributes":{"colname":"5","colwidth":"84pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},{},{},"Min\/",{}]},{"entry":[{},{},{},"Max"]},{"entry":[{},{},"Data","occur-"]},{"entry":["Node name","Node type","type","ance","Description"]},{"entry":{"@attributes":{"namest":"1","nameend":"5","align":"center","rowsep":"1"}}},{"entry":["HwsMessageType","Attribute","String","1\/1","This attribute identifies"]},{"entry":[{},{},{},{},"the message schema to"]},{"entry":[{},{},{},{},"be of type"]},{"entry":[{},{},{},{},"Hws_Interrupt. The"]},{"entry":[{},{},{},{},"default value for the"]},{"entry":[{},{},{},{},"attribute is"]},{"entry":[{},{},{},{},"\u201cHws_interrupt\u201d."]},{"entry":["InterruptLevel","Record","N\/A","1\/1","Holds one of the three"]},{"entry":[{},{},{},{},"interrupt level elements"]},{"entry":[{},{},{},{},"defined in the Choice"]},{"entry":[{},{},{},{},"group."]},{"entry":["InterruptLevel\/<Choice>","Choice","N\/A","1\/1","Choice group that holds"]},{"entry":[{},"Group",{},{},"values for one of"]},{"entry":[{},{},{},{},"ActionInstanceID,"]},{"entry":[{},{},{},{},"ActivityFlowID or"]},{"entry":[{},{},{},{},"ActivityModelInstanceID."]},{"entry":["InterruptLevel\/Choice\/","Element","String","1\/1","The value for this"]},{"entry":["ActionInstanceID \u2020",{},{},{},"element is a GUID string"]},{"entry":[{},{},{},{},"that uniquely identifies"]},{"entry":[{},{},{},{},"an instance of the action"]},{"entry":[{},{},{},{},"being interrupted."]},{"entry":["InterruptLevel\/Choice\/","Element","String","1\/1","The value for this"]},{"entry":["ActivityFlowID \u2020",{},{},{},"element is a GUID string"]},{"entry":[{},{},{},{},"and it identifies the"]},{"entry":[{},{},{},{},"activity flow which is"]},{"entry":[{},{},{},{},"being interrupted."]},{"entry":["InterruptLevel\/Choice\/","Element","String","1\/1","The value for this"]},{"entry":["ActivityModelInstanceID \u2020",{},{},{},"element is a GUID string"]},{"entry":[{},{},{},{},"that identifies the activity"]},{"entry":[{},{},{},{},"model instance which is"]},{"entry":[{},{},{},{},"being interrupted."]},{"entry":["RequestingActor","Element","String","1\/1","The value for this"]},{"entry":[{},{},{},{},"element is the id of the"]},{"entry":[{},{},{},{},"actor requesting the"]},{"entry":[{},{},{},{},"interrupt."]},{"entry":["InterruptType","Element,","String","1\/1","The value for this"]},{"entry":[{},"Restricted",{},{},"element is restricted to"]},{"entry":[{},{},{},{},"either Abort or Rollback."]},{"entry":["HwsWebServiceUrl","Element","String","1\/1","Url of the Human"]},{"entry":[{},{},{},{},"workflow web-service."]},{"entry":{"@attributes":{"namest":"1","nameend":"5","align":"center","rowsep":"1"}}}]}}]}},"br":{}},"The TargetNamespace of this schema can be defined via an URL (e.g., http:\/\/[base]\/Hws_Finish). This schema can be compiled into an assembly (e.g., a DLL) and is referenced by the action template. An instance of the interrupt message is received over the ActionInterruptPort in the template. An interrupt message at activity flow level or activity model instance level is submitted to each action currently active in the activity flow or the activity model instance. An interrupt type Abort causes the interrupted action to terminate without compensating for the work done by the action. A Rollback interrupt type causes the action to compensate for the work already completed by the action.",{"@attributes":{"id":"p-0193","num":"0211"},"figref":"FIG. 39","b":["3900","3902","3904","3902","3902","3908","3906","3910"]},"Workflows can be created by composing actions  within an activity flow. The composition of actions  is governed by constraints  that are enforced by workflow services . Constraints  can be defined in any number of known methods, including through a workflow administration and management (e.g., Multi-Media Commands (MMC)) or through an administrative Application Programming Interface (API) in a programmatic manner.","The definition of these constraints  can leverage facts exposed by fact retrievers. Fact retrievers can implement a standard interface so that the constraint service  can query these facts and apply them to the workflow. A fact retriever may expose facts from any underlying data source , such as an Active Directory or Structured Query Language (SQL) database.","Client applications  can register with workflow services  when they want to participate in an activity flow. The composition service  can associate a unique ID with the client request and use this ID to keep track of actions  that an actor performs as part of an activity flow.","The tracking service  can be used to keep track of the state of the activity flow and to reconstruct the activity flow as requested by a client. When a client makes an attempt to attach an action  to the activity flow, the constraint service  can check constraints (e.g., based on the Fact Store  or the state of a flow) to see which actions  can be attached in the activity flow. For example, displayed options can be limited to those available under the constraints. After the user selects an action from the constrained set, the composition service  can compose the selected actions with those already in use.","The Actions can be instrumented to emit tracking events that are consumed by the tracking service . These events can then be accessed by the client to provide an up-to-date workflow to actor.",{"@attributes":{"id":"p-0199","num":"0217"},"figref":"FIG. 40","b":"4000"},{"@attributes":{"id":"p-0200","num":"0218"},"figref":"FIG. 41","b":["4100","4100","4100"]},"The template  can include activation receiver logic . The action can receive the activate message over a one-way port that is bound to the Hyper Text Transport Protocol (HTTP) transport. It can then create an instance of the ActivateResponse message. The response message is used to initialize correlation sets used later in orchestration. The action sends the message to itself. It can use the SendOrReceiveActivateResponse operation of the ActionDirectBoundOutPort to send the message out and receives it back using the ActionDirectBoundInPort. The section  of the template can also check to see if the value for ParentActionInstanceID or ActivityModelInstanceID are empty identifiers (e.g., empty GUIDs). If so, it can generate new identifier values for the properties. The values will be empty identifiers if the action being instantiated does not have a parent action or if the action is not being instantiated as part of an activity model. If there are many such action instances, an equal number of non-unique subscriptions for finish and interrupt message types can be created, which could adversely affect performance.","Such a situation is avoided by generating new identifiers and is safe because the subscriptions are not expected to be fulfilled in such scenarios anyway. Uniqueness of subscription guarantees that the routing performance of the messages for valid subscribers does not degrade.","The parallel statement  has two branches. The left branch allows for composition of the action to another (e.g., ) and also provides the site for custom development within the template (e.g., ). The right branch allows the action to listen for interrupt and finish messages (e.g., ).","The decision shape  (blown up as ) checks to see if the action was activated with the intention of composing it as dependent on another action. At  it checks for the IsDependentOnParent promoted property in the activation message. If so, the action waits for receipt of a synchronize message or a finish message from the parent at .","The receive shapes for synchronize message  or finish message  use correlation sets based on the instance id of the parent action. Upon receipt of the synchronize message, the execution proceeds to ScopeAllActionSpecificLogic and can execute logic dropped in by the developer at .","A receipt of a finish message instead, causes the action to terminate at . In such a case, before terminating, the action sends out a finish message to the message-box over a direct bound port to indicate its completion.","The correlation set used on the synchronize message can be extended to include additional properties promoted out of the activate message. Additional correlation sets can be used as well on the receive shape for the synchronize message .","The listen for a finish message in parallel with the synchronize message allows dependent actions to clean up if the parent action ends without sending a synchronize message.","Custom logic (e.g., business logic) can be incorporated into the site for custom development . There is a transactional scope and a compensation block defined around the site . This allows custom compensation to be built if the action is sent an interrupt message requesting a rollback operation or if an unknown exception is raised within the action.",{"@attributes":{"id":"p-0210","num":"0228"},"b":["4250","4260","4240"]},"The other message in the listen block  is the finish message from itself. This message is generated by the action itself and is sent to the message box via a direct-bound port in the left hand side branch of the parallel statement . The message is sent right after the ScopeAllActionSpecificLogic scope (e.g., at ) completes. A receipt of this message in the right hand side branch causes the listen shape ListenForAbortOrFinish to complete and the branch to end.","The section  of the action has exception handlers for the Abort, Rollback, and Unknown exceptions. The Abort and Rollback exceptions are generated within the action upon receipt of the interrupt message. The exception handler for the Abort exception builds and then sends out the finish message indicating that the action is completing and then enters the terminate state. The exception handler for the Rollback exception calls the compensation block CompensateForAllActionSpecificLogic before building and sending a finish message. It then enters the terminate state.","The exception handler for the Unknown exception also calls the compensation block CompensateForAllActionSpecificLogic before building and sending a finish message and terminating.","Each exception handler can send out a finish message to the message box over a direct bound port. This message indicates to other child actions that were dependently composed to this action and have not received a synchronize message to terminate. The finish message is received by the dependently composed child actions (e.g., at )",{"@attributes":{"id":"p-0215","num":"0233"},"b":["4270","4230","4270"]},"Technologies from any example described herein can be combined with technologies in any combination of one or more other examples described herein.","Any of the exemplary systems described herein can be implemented by software running on a computer system, such as a general purpose programmable computer, including microprocessor-based systems running any of a variety of operating systems, including the Microsoft\u00ae Windows\u00ae operating system and others. Such computer systems can include or work in conjunction with computer-readable media, such as Random Access Memory (RAM), Read-Only Memory(ROM), hard disks, Compact Disc Read-Only Memory (CD-ROM), Digital Video Disc Read-Only Memory (DVD-ROM), and the like.","Any of the exemplary methods described herein can be implemented by software comprising computer-executable instructions, which can be stored in computer-readable media.","In view of the many possible embodiments to which the principles of the invention may be applied, it should be recognized that the illustrated embodiments are examples of the invention, and should not be taken as a limitation on the scope of the invention. Rather, the scope of the invention includes what is covered by the following claims. We therefore claim as our invention all that comes within the scope and spirit of these claims."],"BRFSUM":[{},{}],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"BRIEF DESCRIPTION OF THE FIGURES","p":[{"@attributes":{"id":"p-0017","num":"0016"},"figref":"FIG. 1"},{"@attributes":{"id":"p-0018","num":"0017"},"figref":["FIG. 2","FIG. 1"]},{"@attributes":{"id":"p-0019","num":"0018"},"figref":"FIG. 3"},{"@attributes":{"id":"p-0020","num":"0019"},"figref":"FIG. 4"},{"@attributes":{"id":"p-0021","num":"0020"},"figref":"FIG. 5"},{"@attributes":{"id":"p-0022","num":"0021"},"figref":"FIG. 6"},{"@attributes":{"id":"p-0023","num":"0022"},"figref":"FIG. 7"},{"@attributes":{"id":"p-0024","num":"0023"},"figref":"FIG. 8"},{"@attributes":{"id":"p-0025","num":"0024"},"figref":"FIG. 9"},{"@attributes":{"id":"p-0026","num":"0025"},"figref":"FIG. 10"},{"@attributes":{"id":"p-0027","num":"0026"},"figref":"FIG. 11"},{"@attributes":{"id":"p-0028","num":"0027"},"figref":"FIG. 12"},{"@attributes":{"id":"p-0029","num":"0028"},"figref":"FIG. 13"},{"@attributes":{"id":"p-0030","num":"0029"},"figref":"FIG. 14"},{"@attributes":{"id":"p-0031","num":"0030"},"figref":"FIG. 15"},{"@attributes":{"id":"p-0032","num":"0031"},"figref":"FIG. 16"},{"@attributes":{"id":"p-0033","num":"0032"},"figref":"FIG. 17"},{"@attributes":{"id":"p-0034","num":"0033"},"figref":"FIG. 18"},{"@attributes":{"id":"p-0035","num":"0034"},"figref":"FIG. 19"},{"@attributes":{"id":"p-0036","num":"0035"},"figref":"FIG. 20"},{"@attributes":{"id":"p-0037","num":"0036"},"figref":"FIG. 21"},{"@attributes":{"id":"p-0038","num":"0037"},"figref":"FIG. 22"},{"@attributes":{"id":"p-0039","num":"0038"},"figref":"FIG. 23"},{"@attributes":{"id":"p-0040","num":"0039"},"figref":"FIG. 24"},{"@attributes":{"id":"p-0041","num":"0040"},"figref":"FIG. 25"},{"@attributes":{"id":"p-0042","num":"0041"},"figref":"FIG. 26"},{"@attributes":{"id":"p-0043","num":"0042"},"figref":"FIG. 27"},{"@attributes":{"id":"p-0044","num":"0043"},"figref":"FIG. 28"},{"@attributes":{"id":"p-0045","num":"0044"},"figref":"FIG. 29"},{"@attributes":{"id":"p-0046","num":"0045"},"figref":"FIG. 30"},{"@attributes":{"id":"p-0047","num":"0046"},"figref":"FIG. 31"},{"@attributes":{"id":"p-0048","num":"0047"},"figref":"FIG. 32"},{"@attributes":{"id":"p-0049","num":"0048"},"figref":"FIG. 33"},{"@attributes":{"id":"p-0050","num":"0049"},"figref":"FIGS. 34","b":["35","36","37"]},{"@attributes":{"id":"p-0051","num":"0050"},"figref":"FIG. 38"},{"@attributes":{"id":"p-0052","num":"0051"},"figref":"FIG. 39"},{"@attributes":{"id":"p-0053","num":"0052"},"figref":"FIG. 40"},{"@attributes":{"id":"p-0054","num":"0053"},"figref":"FIG. 41"},{"@attributes":{"id":"p-0055","num":"0054"},"figref":"FIG. 42"}]},"DETDESC":[{},{}]}
