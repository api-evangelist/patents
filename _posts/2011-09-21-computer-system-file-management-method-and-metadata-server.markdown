---
title: Computer system, file management method and metadata server
abstract: A computer system, comprising: a file server; a metadata server; and a business server, the metadata server being coupled to a storage apparatus for providing a save area for storing at least one file that is removed from the file server, the metadata server storing a metadata repository for managing metadata of a file and the files stored in the save area, the metadata server being configured to: store a file as a saved file in the save area, in a case of detecting that the file stored in the file server is to be removed; and store information indicating a location of the file in the file server and information indicating the location of the saved file in the save area in association with each other in the metadata repository.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09396198&OS=09396198&RS=09396198
owner: Hitachi, Ltd.
number: 09396198
owner_city: Tokyo
owner_country: JP
publication_date: 20110921
---

{"@attributes":{"id":"description"},"BRFSUM":[{},{}],"heading":["BACKGROUND OF THE INVENTION","SUMMARY OF THE INVENTION","DETAILED DESCRIPTION OF THE PREFERRED EMBODIMENTS","First Embodiment","Second Embodiment","Third Embodiment","Fourth Embodiment","Fifth Embodiment"],"p":["This invention relates to a file management method for use in a computer system including a storage apparatus, a metadata server for managing metadata of files stored in the storage apparatus, a business server for executing predetermined business processing, and an analysis server for executing analytical processing on data used by the business server.","In a computer system in which a plurality of computers and a plurality of file servers corresponding to storage apparatus are coupled via a network, business programs operating on the computers execute business logic. The business programs include, for example, programs that autonomously operate, such as a document management system, and interactive programs such as a word processing program used by a user.","Business data required by the business program to execute the logic may be stored in the file server to flexibly perform a configuration change of a system and management of a storage capacity.","Moreover, it is a common practice that an analysis program operating on a computer different from the business program executes the analytical processing such as statistical processing on the business data stored in the file server to obtain information useful for business management.","The business program may remove a file stored in the file server in the course of the logic. On the other hand, it is preferred that the analysis program obtain and analyze all files in the computer system tracing back in time, including the file removed from the file server, in order to obtain more useful information.","As a method for allowing the removed file to be read later, there is known a method using a backup system. The backup system periodically reads data stored in the file server and copies the data in another storage apparatus for backup. However, the backup system holds the same data in the file server and the storage apparatus for backup, and hence a use efficiency of storage spaces is low.","Moreover, as another method, there is known a method using a snapshot function of the file server. The snapshot function is used so that a plurality of states of the file server at a time point in the past may be held while suppressing an amount of consumption of the storage spaces. However, there is a limit in the number of snapshots that can be created, and hence, for example, the method is not suited for an application where a file that was present at a time point tracing back in time 5 years or more is to be obtained.","Moreover, as a method of moving a file to another storage apparatus, there is known an archive system. The archive system is a system for moving a file that satisfies a predetermined condition (for example, file that has not been modified for a certain period of time) to another storage. However, the archive system deals only with files that are present in the file system, and cannot specify \u201cremoved files\u201d as a condition, for example.","Moreover, in Japanese Patent Application Laid-open No. 2008-17049, there is disclosed a technology in which a file removed by a user's operation is not actually removed but is saved in another storage space so that the file can be restored later.","However, in the technology disclosed in Japanese Patent Application Laid-open No. 2008-17049, when the removed file is restored once, the file is not managed by the system anymore. Therefore, the object of providing to the analysis program all files in the computer system tracing back in time, including the removed file, cannot be achieved.","This invention realizes a computer system allowing all files under management of a business program, including a removed file that was present in the past, to be referenced from an analysis program without creating an extra copy.","The present invention can be appreciated by the description which follows in conjunction with the following figures, wherein: a computer system comprises: a file server for managing a plurality of files; a metadata server for managing a plurality of piece of metadata of the plurality of files; and a business server for using the plurality of files to execute predetermined business processing. The file server, the metadata server, and the business server is coupled to each other via a network. The file server includes a first processor, a first memory coupled to the first processor, a first network interface coupled to the first processor, and a first storage medium coupled to the first processor, for storing the plurality of files. The metadata server includes a second processor, a second memory coupled to the second processor, a second network interface coupled to the second processor, and a second storage medium coupled to the second processor. The business server includes a third processor, a third memory coupled to the third processor, and a third network interface coupled to the third processor. The metadata server is coupled to a storage apparatus including a controller and a plurality of storage media, for providing a save area for storing at least one file that is removed from the file server. The second storage medium stores a metadata repository for managing at least one of the plurality of piece of metadata of the plurality of files and at least one location of one of the plurality of files stored in the save area. The metadata server is configured to: store the one of the plurality of files as a saved file in the save area, in a case of detecting that the one of the plurality of files stored in the file server is to be removed by the predetermined business processing executed by the business server; and store information indicating a location of the one of the plurality of files in the file server and information indicating the location of the saved file in the save area in association with each other in the metadata repository.","According to this invention, the metadata server may manage the file removed from the file server without creating the extra copy.","First, this invention is outlined.",{"@attributes":{"id":"p-0047","num":"0046"},"figref":"FIG. 1"},"A computer system  according to this invention includes a metadata server , a saving storage apparatus , a plurality of file servers , a plurality of business servers , and a plurality of analysis servers .","The business server  is a computer for executing a predetermined business task, and a business program  operates thereon. The business program  executes the predetermined business task using files stored in the file servers .","In an example illustrated in , the business program  executes the predetermined business task using a file - having a path name of \u201c\/A\/a.doc\u201d and a file - having a path name of \u201c\/A\/c.doc\u201d. When not distinguished, the files are hereinafter referred to as files .","The analysis server  is a computer for analyzing the files , and an analysis program  operates thereon. The analysis program  reads the files - and - used by the business program  and executes analytical processing such as statistical processing.","The metadata server  is a computer for managing a plurality of piece of metadata of the files stored in the plurality of file servers . The metadata server  according to this embodiment has a feature in that metadata on a file that has been removed from the file servers  is also managed.","The metadata as used herein refers to a set of attribute values set to a file. For example, the metadata includes an owner of the file, an owner group of the file, access control information, a creation date of the file, a modified date of the file, a metadata modification date of the file, a size of the file, and other user-defined attribute values.","The metadata server  manages a metadata repository in which the plurality of piece of metadata of the files is stored. The metadata repository includes a field for identifying a file stored in the file server , a field for identifying a file stored in the saving storage apparatus , and a field indicating a status of the file.","The field for identifying the file stored in the file server  includes a path name and a storage name. The field for identifying the file stored in the saving storage apparatus  includes a path name and a storage name. Moreover, the field indicating the status of the file stores information indicating whether or not the file is present in the file server .","Next, processing executed in a case where the business program  removes the file - is outlined.","The business program  transmits to the file server  having an identification name of \u201cFS1\u201d a request to remove the file - (Step S).","In a case of detecting the request to remove the file, the file server  suspends the removal of the file - and notifies the metadata server  that the request to remove the file - has been received (Step S).","In a case of receiving the notification from the file server  (Step S), the metadata server  updates a record corresponding to the file - stored in a metadata repository  (Step S). To be specific, in the field indicating the status of the file, \u201cremoved\u201d is stored to indicate that the file - is to be removed.","Next, the metadata server  moves the file - to the saving storage apparatus  (Step S). To be specific, the metadata server  obtains the file - from the file server  and stores the file - as a file  in a file system  of the saving storage apparatus .","In the example illustrated in , the file  is stored under a path name of \u201cr\/FS1\/A\/a.doc\u201d. It should be noted that path names in the saving storage apparatus  are set so as not to overlap.","Next, the metadata server  instructs the file server  to remove the file - (Step S). In a case of receiving the instruction, the file server  removes the file - and responds to the business program  with a completion of the removal of the file -.","Finally, the metadata server  updates the record corresponding to the metadata of the file - in the metadata repository  (Step S). To be specific, in the field for identifying the file stored in the saving storage apparatus , the path name \u201cr\/FS1\/A\/a.doc\u201d of the file  and an identification name \u201cS1\u201d of the saving storage apparatus , in which the file  is stored, are stored.",{"@attributes":{"id":"p-0064","num":"0063"},"figref":"FIG. 1","b":["150","1000","1"]},"Next, analytical processing in which the analysis program  analyzes files at present and in the past is outlined. A description is given here of the analytical processing after the file - is removed from the file server  by the business program  and the file - is moved to the saving storage apparatus .","The analysis program  inquires of the metadata server  about all files including the files that are currently stored and the files that were present in the past (Step S). To be specific, the analysis program  requests a list of all the files from the metadata server .","The metadata server  generates the list based on the metadata repository  and responds to the analysis program  with the generated list (Step S).","It should be noted that the list includes a plurality of entries including information for identifying the files. The entry includes fields indicating the path name of the file, an identification name of a stored storage apparatus, the metadata of the file in the file server , and a status of the file.","The entry of the file - removed from the file server  further includes the saved path name of the file and the identification name of the saving storage apparatus . Moreover, the field indicating the status of the file of the entry stores information indicating that the file has been removed.","The analysis program  identifies locations of the files based on the list obtained from the metadata server .","In the example illustrated in , the analysis program  finds that two files having the path names of \u201c\/A\/a.doc\u201d and \u201c\/A\/c.doc\u201d have been present in the file server . Further, the analysis program  finds that, of the above-mentioned files, the file having the path name of \u201c\/A\/a.doc\u201d has been removed from the file server  and stored as the file  having the path name of \u201cr\/FS1\/A\/a.doc\u201d in the saving storage apparatus  having the identification name of \u201cS1\u201d.","The analysis program  refers to the list to obtain all the files required for the analytical processing (Steps S and S). In other words, the analysis program  obtains from the file server  the file - stored in the file server  and obtains from the saving storage apparatus  the file  corresponding to the file - that has been removed from the file server .","As described above, the metadata server  may manage files that have been removed by the business program  during the execution of the business task so as to be analyzable by the analysis program .","In this manner, according to this invention, in a case where a file is to be removed from the file server , the file is moved to the saving storage apparatus  before being removed from the file server , and hence an unnecessary copy of the file is not created.","A file that is removed from the file server  and may be inquired of the metadata server  to obtain its content as with the file - is hereinafter referred to as a removed file. Moreover, a copy of the removed file stored in the saving storage apparatus is referred to as a saved file. Moreover, the file that is to be removed and has been stored in the file server  before becoming the removed file is referred to as an original file. Moreover, a file that is stored in the file server  and has not been removed is referred to as a normal file.",{"@attributes":{"id":"p-0076","num":"0075"},"figref":"FIG. 2","b":"500"},"The computer system  includes the metadata server , the saving storage apparatus , a backup storage apparatus , the plurality of file servers , the plurality of business servers , the plurality of analysis servers , and a network .","The metadata server , the saving storage apparatus , the backup storage apparatus , the file servers , the business servers , and the analysis servers  may communicate with each other via the network . It should be noted that the network  may be constituted by using a local area network (LAN), a wide area network (WAN), the Internet, or the like. This invention is not limited to a coupling system of the network .","The metadata server  is a computer for managing the metadata. It should be noted that the metadata server  may be a virtual machine generated by using a virtualization technology.","The metadata server  includes a metadata server program  and the metadata repository . The other components are described later.","The saving storage apparatus  is a storage apparatus for storing various files.","The storage apparatus as used herein refers to an apparatus that includes a controller (not shown), a network interface (not shown), and one or more storage media (not shown) and is capable of providing storage spaces of the storage media to a computer. The storage apparatus may use a plurality of storage media to constitute a redundant array of inexpensive disks (RAID), and further may use a physical storage space to generate a plurality of logical storage spaces. Moreover, the storage apparatus may construct a different file system for each of the logical storage spaces.","The saving storage apparatus  includes a file sharing program  and the file system . The file sharing program  stores a file in the file system  and reads the file from the file system  in accordance with a file access request received from the metadata server  via the network . The other components are described later.","The backup storage apparatus  is a storage apparatus for storing various files. It should be noted, however, that the backup storage apparatus  is used especially for the purpose of backing up the files. The backup storage apparatus  includes a backup program  and a file system . The other components are described later.","The file server  is a computer for storing various files and managing the files. In particular, the file server  stores files required by the business program  to execute business processing. The file server  includes a file sharing program  and a file system . The other components are described later.","It should be noted that on the computer, the file server  is also recognized as a type of storage apparatus.","The business server  is a computer for executing a program required to realize the business processing. It should be noted that the business server  may be a virtual machine generated by using the virtualization technology.","The business server  includes the business program . The business program  is a program for performing specified business processing, and obtains data required for the business processing from the file server  to execute the predetermined business processing. The other components are described later.","The analysis server  is a computer for executing a program required to realize the analytical processing. It should be noted that the analysis server  may be a virtual machine generated by using the virtualization technology.","The analysis server  includes the analysis program . The analysis program  reads a file stored in the file server  and used by the business program  for the business processing, and uses the read file to execute the analytical processing.",{"@attributes":{"id":"p-0091","num":"0090"},"figref":"FIG. 3","b":"1"},"The metadata server  includes a memory , a processor , a network interface , and a local storage , and the components are connected to each other via an internal bus .","The processor  executes programs stored in the memory . The processor  executes the programs so that functions of the metadata server  may be realized.","The memory  stores the metadata server program . The metadata server program  is a program for realizing the functions of the metadata server , and includes a plurality of subprograms.","To be specific, the metadata server program  includes an inquiry processing program , a metadata management program , a file removal detection program , a file save program , and a file read proxy program .","The inquiry processing program  is a program for executing processing on inquiries from the file server  and the analysis server . The metadata management program  is a program for managing the metadata.","The file removal detection program  is a program for detecting that a file is to be removed from the file server . The file save program  is a program for copying the file to the saving storage apparatus . The file read proxy program  is a program for reading the file from the saving storage apparatus .","Each of the above-mentioned subprograms may be executed as an independent process or as a partial program such as a library constituting the metadata server program . It should be noted that details of the processing executed by the subprograms are described later with reference to the figures.","Moreover, the memory  also stores a list  generated when an inquiry from the analysis server  is received. The list  stores information required to obtain files from the file server  or the saving storage apparatus .","The local storage  is a storage medium of the metadata server , and may include a hard disk drive (HDD), a solid state drive (SSD), and a non-volatile memory (NVRAM).","The local storage  stores the metadata repository . It should be noted that the metadata repository  may be stored in the memory  or in a storage apparatus coupled to the metadata server .","The metadata repository  includes a storage management table , a name space management table , a metadata management table , and a saved file management table . In the following, configurations of the tables are described.",{"@attributes":{"id":"p-0103","num":"0102"},"figref":"FIG. 4","b":"151"},"The storage management table  stores information on storage apparatus managed by the metadata server . To be specific, the storage management table  includes one or more records, and each of the records includes a storage ID , a storage name , a type , and an IP address .","Each record of the storage management table  corresponds to one storage apparatus managed by the metadata server .","The storage ID  stores an identifier used by the metadata server  to uniquely identify the storage apparatus. The storage name  stores an identification name set to the storage apparatus in the computer system .","The type  stores a type of usage of the storage apparatus. For example, \u201cfile server\u201d is stored in a case where the storage apparatus is the file server , and \u201carchive storage\u201d is stored in a case of a storage apparatus for storing archive files.","The IP address  stores an IP address assigned to the storage apparatus.","In the example illustrated in , the first record stores information on a file server  having the storage ID  of \u201cs1000\u201d, the storage name  of \u201cFS1\u201d, the type  of \u201cfile server\u201d, and the IP address  of \u201c192.168.10.100\u201d.","Similarly, the second record stores information on a file server , and the third record stores information on a saving storage apparatus .",{"@attributes":{"id":"p-0111","num":"0110"},"figref":"FIG. 5","b":"152"},"The name space management table  stores information on name spaces in the storage apparatus managed by the metadata server . The name space as used herein is a logical unit for identifying a storage space in which the file is stored. In the case of the file server , a name such as a share name or a public name is known to correspond to the name space. Moreover, a similar concept is also known for the case of the saving storage apparatus .","The name space management table  includes one or more records, and each of the records includes a name space ID , a name space name , a storage ID , a capacity , a protocol , a used volume , and a usage .","Each record of the name space management table  corresponds to a name space in the file server  or the saving storage apparatus .","The name space ID  stores an identifier used by the metadata server  to uniquely identify the name space. The name space name  stores a name used by the storage apparatus to uniquely identify the name space.","The storage ID  stores an identifier of a storage apparatus providing a logical storage space corresponding to the name space. It should be noted that the storage ID  is the same as the storage ID .","The capacity  stores a capacity of the logical storage space corresponding to the name space. The protocol  stores a protocol used to access the logical storage space corresponding to the name space. The used volume  stores a used volume of the logical storage space corresponding to the name space.","The usage  stores a usage of the logical storage space corresponding to the name space. For example, \u201cprimary\u201d is stored in a case of a logical storage space used by the business program . Moreover, \u201csaved\u201d is stored in a case of a logical storage space storing saved files.","In the example illustrated in , the first and second records store information on name spaces on the file server  having the storage ID  of \u201cs1000\u201d.","The first record stores \u201cn1001\u201d in the name space ID , \u201cshare1\u201d in the name space name , \u201cs1000\u201d in the storage ID , \u201c20 TB\u201d in the capacity , \u201cnfs\u201d in the protocol , \u201c5 TB\u201d in the used volume , and \u201cprimary\u201d in the usage .","Similarly, the second record stores information on a name space having the name space name  or a share name of \u201cshare2\u201d. Moreover, the third record stores information on a name space of another file server  having the name space name  or a share name of \u201cshare3\u201d. Moreover, the fourth record stores information on a name space of a saving storage apparatus  having the name space name  of \u201cr\u201d.",{"@attributes":{"id":"p-0122","num":"0121"},"figref":"FIG. 6","b":"153"},"The metadata management table  stores information indicating locations of files and metadata. To be specific, the metadata management table  includes one or more records, and each of the records includes a metadata ID , a path , a name space ID , original metadata , and a file status .","Each record of the metadata management table  corresponds to a file stored in the file server  or a removed file.","The metadata ID  stores an identifier for identifying the metadata. The path  stores a path name indicating a location at which the file is stored.","The name space ID  stores an identifier for identifying a name space of a logical storage space in which the file is stored. The name space ID  is the same as the name space ID .","The original metadata  stores metadata (not shown) in the file server .","The file status  stores information indicating whether or not the file is present in the file server . To be specific, \u201cpresent\u201d is stored in a case where the file is present in the file server , and \u201cremoved\u201d is stored in a case where the file is not present in the file server .","A record having \u201cpresent\u201d stored in the file status  indicates that a file corresponding to the record is stored at the location indicated by the path  and the name space ID .","On the other hand, a record having \u201cremoved\u201d stored in the file status  indicates that a file corresponding to the record is not currently stored at the location indicated by the path  and the name space ID , and is currently a removed file.","The metadata of the file is managed by the file server  for each of the files, and the metadata server  may obtain the metadata from the file server  through an application programming interface (API) provided for each type of name space.","In the example illustrated in , the metadata management table  stores three records. It should be noted that the number of records is merely an example and is not intended to limit this invention. In other words, the metadata management table  stores records corresponding to the metadata of all the files managed by the metadata server .","The first record represents metadata corresponding to the file \u201c\/share1\/a.doc\u201d stored in the name space \u201cshare1\u201d of the file server , and stores \u201c100\u201d in the metadata ID .","The first record stores in the path  \u201c\/share1\/a.doc\u201d, which is a path name of the corresponding file, and stores in the name space ID  \u201cn1001\u201d, which is an identifier of the name space \u201cshare1\u201d. Moreover, the first record stores in the original metadata  the metadata of the corresponding file in the file server , which is not shown here. Further, the first record stores \u201cpresent\u201d in the file status .","The second record represents metadata corresponding to the file \u201c\/share1\/b.doc\u201d stored in the name space \u201cshare1\u201d of the file server , and stores \u201c110\u201d in the metadata ID . Moreover, the second record stores \u201cremoved\u201d in the file status . Therefore, the second record represents that the file \u201c\/share1\/b.doc\u201d is not currently stored at the location indicated by the path  and the name space ID , and is a removed file.","The third record represents metadata corresponding to the file \u201c\/share1\/c.doc\u201d stored in the name space \u201cshare1\u201d of the file server , and stores \u201c120\u201d in the metadata ID .",{"@attributes":{"id":"p-0137","num":"0136"},"figref":"FIG. 7","b":"154"},"The saved file management table  stores information on locations (save destinations) of saved files. To be specific, the saved file management table  includes one or more records, and each of the records includes a metadata ID , a saved path , and a saved name space ID .","Each record of the saved file management table  corresponds to a saved file stored in the saving storage apparatus .","It should be noted that the metadata server  updates the saved file management table , in a case of detecting a file is to be removed from the file server , and being moved the file to the saving storage apparatus .","The metadata ID  stores an identifier for identifying the metadata. The metadata ID  is the same as the metadata ID .","The saved path  stores the path name indicating the location at which the saved file is stored. The saved name space ID  stores an identifier for identifying a name space in which the saved file is stored.","In the example illustrated in , the first record stores information on a saved file corresponding to the file \u201c\/share1\/b.doc\u201d in .","The metadata ID  stores the identifier \u201c110\u201d of the metadata corresponding to the file \u201c\/share1\/b.doc\u201d. Moreover, the saved path  stores a path name \u201c\/r\/FS1\/share1\/b.doc\u201d of a location of the saved file corresponding to the file \u201c\/share1\/b.doc\u201d. Further, the saved name space ID  stores an identifier \u201cn3001\u201d of a name space in which the saved file \u201c\/r\/FS1\/share1\/b.doc\u201d is stored.","Next, a configuration of the file server  is described.",{"@attributes":{"id":"p-0146","num":"0145"},"figref":"FIG. 8","b":"4"},"The file server  includes a memory , a processor , a network interface , and a storage interface , and is coupled to a storage apparatus .","The processor  executes programs stored in the memory . The processor  executes the programs so that functions of the file server  may be realized.","The memory  stores the file sharing program , a file system program , and a storage input\/output program .","The file sharing program  is a program for providing a function for the business program , the analysis program , and the metadata server program  to access a file stored in the storage apparatus  via the network .","The file system program  is a program for configuring the file system for storing the file in the storage apparatus  and managing input\/output of the file.","The storage input\/output program  is a program for managing read processing and write processing of data with respect to the storage apparatus .","The processor  executes the above-mentioned programs so that the file server  realizes a file sharing function via the network .","The storage apparatus  generates a storage volume  therein. The storage volume  is constituted of a storage space of a storage medium such as a hard disk drive, a solid state drive, or a non-volatile memory of the storage apparatus .","The storage volume  includes two name spaces - and -. \u201cshare1\u201d is set as an identification name to the name space -, and \u201cshare1\u201d is set as an identification name to the name space -.","The name spaces - and - include data areas - and - and hidden file storage areas - and -, respectively.","The data areas - and - are areas for storing files that can be referenced by the business program . The hidden file storage areas - and - are areas for temporarily storing files removed by the business program .","The files stored in the hidden file storage areas - and - are treated as files that are not present by the business program . In other words, the business program  cannot recognize the files stored in the hidden file storage areas - and -.","The data areas - and - and the hidden file storage areas - and - may be included in different storage volumes , or may each be one directory in a single file system tree. Moreover, the name spaces - and - may be included in different storage volumes , or may each be one directory in a single file system tree.","In this embodiment, the two name spaces are defined in the storage volume . However, this invention is not limited thereto, and two or more name spaces may be defined.","When not distinguished, the data areas - and - are hereinafter represented as data areas . Moreover, when not distinguished, the hidden file storage areas - and - are represented as hidden file storage areas .",{"@attributes":{"id":"p-0162","num":"0161"},"figref":"FIG. 9","b":"112"},"The metadata management program  executes this processing periodically or in accordance with a user's request in order to update the metadata repository .","In a case where the processing is started (Step S), the metadata management program  refers to the name space management table  to select one name space to be processed (Step S).","Next, the metadata management program  selects one file to be processed from among files stored in the selected name space (Step S).","It should be noted that as a method of selecting the file, a method of following a file system tree in the name space in order from the upper directory may be contemplated.","The metadata management program  obtains metadata of the file to be processed from the file server  (Step S).","The metadata management program  updates the metadata management table  based on the obtained metadata (Step S). To be specific, the following processing is executed.","The metadata management program  determines whether or not a record corresponding to the selected file is registered. To be specific, the metadata management program  determines whether or not there is a record having the path  and the name space ID  that match the identifier of the name space to be processed and the path name of the file to be processed.","It should be noted that a method of determining whether or not the obtained metadata and the original metadata match may be employed. For example, an i-node number, which is identification information of the file in the file server , may be used.","In a case where it is determined that the record corresponding to the selected file is not registered, the metadata management program  registers a new record with the metadata management table . At this time, the metadata management program  generates an identifier for uniquely identifying the metadata and stores the generated identifier in the metadata ID .","Further, the metadata management program  stores in the path  the path name of the file to be processed in the selected name space, and stores the identifier of the selected name space in the name space ID . The metadata management program  also stores the obtained metadata in the original metadata , and stores \u201cpresent\u201d in the file status .","On the other hand, in a case where the record corresponding to the selected file is registered, the metadata management program  stores the obtained metadata in the original metadata  of the existing record.","The metadata management program  determines whether or not the processing is complete for all the files stored in the name space to be processed (Step S).","In a case where it is determined that the processing is not complete for all the files stored in the name space to be processed, the metadata management program  returns to Step S and executes similar processing (Steps S to S).","In a case where it is determined that the processing is complete for all the files stored in the name space to be processed, the metadata management program  determines whether or not the processing is complete for all the name spaces under its management (Step S).","In a case where it is determined that the processing is not complete for all the name spaces under its management, the metadata management program  returns to Step S and executes similar processing (Steps S to S).","In a case where it is determined that the processing is complete for all the name spaces under its management, the metadata management program  ends the processing (Step S).",{"@attributes":{"id":"p-0179","num":"0178"},"figref":"FIG. 10","b":"411"},"The file server  executes the following processing, in a case where an access request to a file is received from the business program  or another program.","In a case where the processing is started (Step S), the file sharing program  receives an access request to a predetermined file from the business program  or another program via the network  (Step S).","The file sharing program  determines whether or not the received access request is a request to remove the file (Step S).","In a case where it is determined that the received access request is not the request to remove the file, the file sharing program  instructs the file system program  to execute processing in accordance with the received access request (Step S). Thereafter, the file sharing program  transmits a response to the program that has transmitted the access request, and ends the processing (Step S).","In a case where it is determined that the received access request is the request to remove the file, the file sharing program  notifies the file removal detection program  of the metadata server  that the access request including the request to remove the file has been received (Step S).","The notification that the access request that requests the removal of the file has been received is hereinafter represented as a removal notification. Moreover, the file requested for removal by the business program  or another program is referred to as a file to be removed. The file to be removed is moved to the saving storage apparatus  by the metadata server  in the end. In a case where the file to be removed is moved to the saving storage apparatus  and \u201cremoved\u201d is stored in the file status  of the metadata management table , the file becomes a removed file.","It should be noted that the removal notification includes information such as the path name of the file to be removed, a name space in which the file to be removed is stored, the identification name of the file server, and metadata of the file to be removed.","In a case of receiving a response to the removal notification from the file removal detection program , the file sharing program  executes processing on the file to be removed in accordance with the response (Step S). It should be noted that the response transmitted from the file removal detection program  includes an instruction from the file save program . To be specific, the following processing is executed.","In a case where the received response includes an instruction to hide the file to be removed, the file sharing program  moves the file to be removed to the hidden file storage area . This disables the business program  from accessing the file to be removed. In other words, the file is recognized by the business program  as having been removed.","Moreover, in a case where the received response includes an instruction to remove the file to be removed, the file sharing program  removes the file to be removed.","It should be noted that the file sharing program  outputs the instructions to the file system program  to realize the moving processing and the removal processing of the file to be removed.","Hereinafter, the file to be removed stored in the hidden file storage area  is referred to as a hidden file.","In a case where the processing on the file to be removed is finished, the file sharing program  ends the processing (Step S).","In this embodiment, the file sharing program  executes the processing, but the processing may be executed by another program such as the file system program .",{"@attributes":{"id":"p-0194","num":"0193"},"figref":"FIGS. 11A, 11B, and 11C","b":"113"},"In a case where the processing is started (Step S), the file removal detection program  detects that a file is to be removed from the file server  (Step S). The file removal detection program  recognizes the file as a file to be removed.","In this embodiment, the file removal detection program  may detect that the file is to be removed from the file server  by receiving the removal notification from the file sharing program  (see Step S). It should be noted that the notification includes the path name of the file to be removed, the name space name, the metadata, and the like.","The file removal detection program  updates a record corresponding to the file to be removed of the metadata management table  (Step S).","To be specific, the file removal detection program  refers to the metadata management table  based on the information included in the received removal notification to identify the record corresponding to the file to be removed, and stores \u201cremoved\u201d in the file status  of the record.","The file removal detection program  executes file hiding processing on the file to be removed for the file server  (Step S). In the file hiding processing, the following processing is executed.","First, the file removal detection program  instructs the file server  that has transmitted the removal notification to execute the hiding processing on the file to be removed (Step S).","Receiving the instruction to execute the hiding processing, the file sharing program  of the file server  moves the file to be removed to the hidden file storage area . As a result, the removed file is treated as a hidden file. It should be noted that a path name of the hidden file may be automatically determined by the file sharing program  or the file system program , or may be automatically determined by the file removal detection program .","Next, the file removal detection program  updates the saved file management table  (Step S). To be specific, the following processing is executed.","The file removal detection program  adds a new record to the saved file management table , and stores the metadata ID  of the record corresponding to the file to be removed in the metadata ID  of the record. The file removal detection program  stores the path name of the hidden file in the saved path , and stores in the saved name space ID  an identifier of a name space in which the hidden file is stored.","This concludes the description of the hiding processing on the file to be removed.","Next, the file removal detection program  executes the save processing on the hidden file (Step S), and ends the processing (Step S). In the save processing on the hidden file, the following processing is executed.","First, the file removal detection program  calls the file save program , and instructs the file save program  to execute the save processing on the hidden file.","In a case of receiving the instruction to execute the save processing, the file save program  copies the hidden file in the name space on the saving storage apparatus  (Step S). The copied file becomes a saved file. At this time, as the path name of the saved file, a path name that is unique in the name space in which the saved file is stored is determined.","The file save program  provides a notification of completion of the save processing on the hidden file along with the information on the saved file.","Next, the file removal detection program  updates the saved file management table  based on the information included in the received completion notification (Step S). To be specific, the file removal detection program  stores the path name of the saved file in the saved path  of the record added in Step S, and stores in the saved name space ID  an identifier of a name space in which the saved file is stored.","Next, the file removal detection program  instructs the file server  to remove the hidden file (Step S). In a case of receiving the instruction, the file server  removes the hidden file from the name space corresponding to the hidden file storage area .","It should be noted that the file server  may periodically inquire of the metadata server  whether or not there is a file to be removed. In this case, the file removal detection program  may not provide the instruction to remove the hidden file.",{"@attributes":{"id":"p-0212","num":"0211"},"figref":["FIG. 12","FIG. 13"],"b":["153","154"]},"A description is given here as an example of a case where the file \u201cshare1\/a.doc\u201d stored in the name space \u201cshare1\u201d of the file server  has been moved to the saving storage apparatus .","When  are compared, it can be seen that the file status  of the first record corresponding to the file \u201cshare1\/a.doc\u201d has been changed from \u201cpresent\u201d to \u201cremoved\u201d. This means that the file \u201cshare1\/a.doc\u201d has become the removed file.","Moreover, when  are compared, it can be seen that the second record is newly added to the saved file management table . The second record stores \u201c100\u201d in the metadata ID . Therefore, it can be seen that the second record is a record storing information on the file for which the identifier of the metadata is \u201c100\u201d, that is, a saved file corresponding to the file \u201cshare1\/a.doc\u201d.","Moreover, referring to the saved path  and the saved name space ID , it can be seen that the path name of the saved file corresponding to the file \u201cshare1\/a.doc\u201d is \u201cr\/FS1\/share1\/a.doc\u201d, and that the name space is identified by the saved name space ID  of \u201cn3001\u201d, that is, the name space \u201cr\u201d of the saving storage apparatus .",{"@attributes":{"id":"p-0217","num":"0216"},"figref":"FIG. 14","b":"111"},"The inquiry processing program  executes processing, in a case where requested by the analysis program  to output a list of the files managed by the metadata server .","In a case where the processing is started (Step S), the inquiry processing program  receives an inquiry about the files from the analysis program  (Step S).","The inquiry may include conditions on the files to be output. The conditions may include, for example, files including a particular character string in the path name, files modified in a particular period of time, files of a particular owner, files to which a particular access right is set, files stored in a particular file server or name space, files that were stored in the particular file server or name space, or the like. Moreover, conditions on the removed file may be specified, such as being a removed file, not being a removed file, both of removed files and files that are not removed files. Further, a logical disjunction or a logical conjunction of sets of the files satisfying the above-mentioned conditions may also be specified.","The inquiry processing program  refers to the metadata repository  to generate the list  of the files satisfying the specified conditions on the memory  (Step S). To be specific, the inquiry processing program  refers to the storage management table , the name space management table , and the metadata management table  to generate the list .",{"@attributes":{"id":"p-0222","num":"0221"},"figref":"FIGS. 15A and 15B","b":"116"},"The list  stores information on the files managed by the metadata server . To be specific, the list  includes a metadata ID , a path , original metadata , a storage ID , an IP address , a name space ID , a file status , and save destination information .","The metadata ID  stores an identifier for identifying metadata. The metadata ID  is the same as the metadata ID .","The path  stores a path indicating the location at which the file is stored. The path  is the same as the path .","The original metadata  stores the metadata of the file. The original metadata  is the same as the original metadata .","The storage ID  stores an identifier of a storage apparatus in which the file is stored. The storage ID  is the same as the storage ID .","The IP address  stores an assigned IP address of the storage apparatus. The IP address  is the same as the IP address .","The name space ID  stores an identifier used by the metadata server  to uniquely identify a name space. The name space ID  is the same as the name space ID .","The file status  stores information indicating whether or not the file is present in the file server . The file status  is the same as the file status .","The save destination information  stores information on a saved file. It should be noted that the save destination information  does not store the information, in a case where the file is not a saved file.","The save destination information  includes a saved path , a storage ID , an IP address , and a saved name space ID .","The saved path  stores a path indicating the location at which the saved file is stored. The saved path  is the same as the saved path .","The storage ID  stores an identifier of the storage apparatus in which the saved file is stored. The storage ID  is the same as the storage ID .","The IP address  stores an assigned IP address of the storage apparatus in which the saved file is stored. The IP address  is the same as the IP address .","The saved name space ID  stores an identifier for identifying the name space in which the saved file is stored. The saved name space ID  is the same as the saved name space ID .","In Step S, information is stored in the metadata ID , the path , the original metadata , the storage ID , the IP address , the name space ID , and the file status .","This concludes the description of the list . The description returns to .","The inquiry processing program  selects one entry corresponding to the removed file from the generated list (Step S). To be specific, the inquiry processing program  selects an entry storing \u201cremoved\u201d in the file status . It should be noted that a method of selecting an entry in order from the top may be contemplated, in a case where there are a plurality of entries corresponding to removed files.","The inquiry processing program  refers to the saved file management table  to obtain information on a save destination of the removed file corresponding to the selected entry (Step S).","To be specific, the inquiry processing program  identifies a record that matches the metadata ID  of the selected entry from the saved file management table .","The inquiry processing program  obtains the saved path  and the saved name space ID  from the identified record. Further, the inquiry processing program  uses the saved name space ID  to obtain from the storage management table  and the name space management table  the identification name, the IP address, and the identification name of the name space of the saving storage apparatus  in which the saved file is stored.","Next, based on the information obtained in Step S, the inquiry processing program  updates the list  (Step S). To be specific, the information obtained in Step S is stored in the save destination information  of the selected entry.","The inquiry processing program  determines whether or not the processing is complete for entries corresponding to all the removed files included in the list  (Step S).","In a case where it is determined that the processing is not complete for the entries corresponding to all the removed files, the inquiry processing program  returns to Step S and executes similar processing (Steps S to S).","In a case where it is determined that the processing is complete for the entries corresponding to all the removed files, the inquiry processing program  transmits the generated list  to the analysis program  which has transmitted the request to output the file list, and ends the processing (Steps S and S).",{"@attributes":{"id":"p-0247","num":"0246"},"figref":"FIG. 16","b":"61"},"The analysis program  executes the analytical processing periodically or in accordance with a user's instruction.","In a case where the analytical processing is started (Step S), the analysis program  transmits to the inquiry processing program  of the metadata server  an inquiry about files stored in all the file servers  (Step S). The output request may include conditions on the files to be included in the list .","The analysis program  waits for a response from the metadata server . In other words, the analysis program  suspends the processing until the list  is transmitted from the metadata server .","The analysis program  selects one entry to be processed from the received list  (Step S). For example, a method of selecting an entry in order from the top of the list  may be contemplated.","The analysis program  obtains, based on the entry to be processed, information on a read location of the file corresponding to the entry (Step S). To be specific, the following processing is executed.","First, the analysis program  determines whether or not \u201cremoved\u201d is stored in the file status  of the selected entry. In a case where \u201cremoved\u201d is stored in the file status , it can be seen that the selected entry is an entry on a removed file.","In a case where \u201cremoved\u201d is stored in the file status , the analysis program  obtains information stored in the save destination information . In other words, the saved path , the storage ID , the IP address , and the saved name space ID  are obtained.","In a case where \u201cremoved\u201d is stored in the file status , the analysis program  obtains the path , the storage ID , the IP address , and the name space ID .","This concludes the processing of Step S.","Next, based on the information obtained in Step S, the analysis program  reads the file corresponding to the selected entry from the storage apparatus as the read location (Step S).","The analysis program  executes predetermined analytical processing based on the content of the read file and the original metadata  of the selected entry (Step S).","The analysis program  determines whether or not the processing is complete for all the entries in the obtained list  (Step S).","In a case where it is determined that the processing is not complete for all the entries, the analysis program  returns to Step S and executes similar processing (Steps S to S).","In a case where it is determined that the processing is complete for all the entries, the analysis program  ends the analytical processing (Step S).","It should be noted that in Step S, the storage apparatus in which the file is stored may be a storage apparatus that cannot be accessed by the analysis program . This applies, for example, to a case where a file sharing protocol for reading the file is not supported in the analysis program .","In this case, the analysis program  transmits a read request for a desired file to the file read proxy program . In a case of receiving the request, the file read proxy program  reads the file from the storage apparatus as proxy for the analysis program , and responds to the analysis program  with the read file.","Next, a second embodiment of this invention is described.","In the first embodiment, in a case of receiving from the business program  the request to remove a file, the file server  transmits the removal notification of the file to the metadata server  in the course of the processing. Thereafter, the file server  executes the hiding processing in accordance with the instruction of the metadata server .","The second embodiment is different in that the file server  transmits removal notifications of a plurality of files to the metadata server  at one time, in a case where requests to remove a certain number of files are received from the business program  or in a case where a certain period of time has elapsed since the removal notification is transmitted. Moreover, in the second embodiment, in order to transmit the removal notifications of the plurality of files at one time, in a case where a request to remove a file is received, the file server  automatically executes the hiding processing on the file without waiting for an instruction from the metadata server .","In the following, differences from the first embodiment are mainly described.","The components of the computer system , the components of the metadata server , and the tables managed by the metadata server  in the second embodiment are the same as those of the first embodiment, and hence descriptions thereof are omitted. The file server  in the second embodiment is different from the file server  in the first embodiment in that the memory  newly includes a hidden file management table  (not shown). The other components are the same as those of the first embodiment, and hence descriptions thereof are omitted.",{"@attributes":{"id":"p-0269","num":"0268"},"figref":"FIG. 17","b":"415"},"The hidden file management table  stores information on hidden files. To be specific, the hidden file management table  includes a path , a name space ID , original metadata , and a hidden file path .","The path  stores the path name of the file before the hiding processing is executed. The name space ID  stores the identification name of the name space in which the file was stored before the hiding processing is executed.","The original metadata  stores the metadata of the file before the hiding processing is executed. The hidden file path  stores the path name of the hidden file.",{"@attributes":{"id":"p-0273","num":"0272"},"figref":"FIG. 18","b":"411"},"In a case where the processing is started (Step S), the file sharing program  receives an access request to a predetermined file from the business program  or another program via the network  (Step S).","The file sharing program  determines whether or not the received access request is a request to remove the file (Step S).","In a case where it is determined that the received access request is not the request to remove the file, the file sharing program  instructs the file system program  to execute processing in accordance with the received access request (Step S). Thereafter, the file sharing program  transmits a response to the program that has transmitted the access request, and ends the processing (Step S).","In a case where it is determined that the received access request is the request to remove the file, the file sharing program  moves the file to be removed to the hidden file storage area  (Step S). As a result, the file to be removed is recognized by the business program  as having been removed.","The file sharing program  updates the hidden file management table  (Step S). In other words, the file sharing program  stores the information on the hidden file in the hidden file management table .","To be specific, the file sharing program  generates a new record, and stores in the generated record the path name, the identification name of the name space, and the metadata under which the file to be removed was stored before being moved to the hidden file storage area , and the path name of the hidden file. The path name of the hidden file is determined by the file sharing program  so as not to overlap in the hidden file management table .","The file sharing program  determines whether or not the removal notification of the file needs to be transmitted to the metadata server  (Step S). For example, in a case where a preset certain number of records or more are registered with the hidden file management table , or in a case where a preset period of time has elapsed from the last removal notification, the file sharing program  determines that the removal notification of the file needs to be transmitted.","In a case where it is determined that the removal notification of the file does not need to be transmitted to the metadata server , the file sharing program  ends the processing (Step S).","In a case where it is determined that the removal notification of the file needs to be transmitted to the metadata server , the file sharing program  transmits the removal notification of the file to the metadata server  (Step S). The notification includes information on all records stored in the hidden file management table , that is, information on all hidden files. Thereafter, the file sharing program  ends the processing (Step S).","It should be noted that the processing of Steps S and S is executed in the course of the processing in response to the access request from the business program , but the two processing steps may be periodically executed as processing independent of the processing in response to the access request.","In a case of receiving the removal notification from the file sharing program , the file removal detection program  executes the processing illustrated in . It should be noted, however, that when the removal notification is received, the removed file is hidden by the file server , and hence the processing of Step S is not executed.","Next, a third embodiment of this invention is described.","The third embodiment has a feature in that the second embodiment is extended to manage, in addition to the removed file, data to be partially erased from a file due to overwrite on the file, a change in size of the file, or the like so as to be readable by the analysis program .","The data to be erased due to removal of the file, the overwrite on the file, or truncation of the file size is hereinafter referred to as erased data.","Moreover, a file that cannot be read from the file server  because the erased data is generated by the above-mentioned processing but can be obtained by inquiring of the metadata server  is referred to as the removed file. In particular, the file from which a part of data is erased due to the overwrite on the file or the truncation of the file size is referred to as a partially erased file.","Moreover, the file on the file server  in which the erased data was stored is referred to as an original file. A file for saving the erased data is referred to as a saved file. One saved file stores erased data generated in processing of one access.","In the following, differences from the first embodiment and the second embodiment are mainly described.","The components of the computer system  and the components of the metadata server  in the third embodiment are the same as those of the first embodiment, and hence descriptions thereof are omitted. Moreover, the components of the file server  in the third embodiment are the same as those of the second embodiment, and hence descriptions thereof are omitted.","The third embodiment is different in the saved file management table  included in the metadata server  and the hidden file management table  included in the file server .",{"@attributes":{"id":"p-0293","num":"0292"},"figref":"FIG. 19","b":"154"},"The saved file management table  in the third embodiment is stored in the memory  of the metadata server .","The saved file management table  stores information for managing correspondences between the erased data and the saved file. To be specific, the saved file management table  includes one or more records, and each of the records includes the metadata ID , the saved path , the saved name space ID , and an address range .","Each record of the saved file management table  corresponds to information on the erased data generated in the processing of one access.","As compared to the saved file management table  in the first embodiment, the address range  is newly added. The address range  stores the address range of the erased data on the original file, the erased data was stored in the original file.","In a case of detecting that data has been erased in the file server , the metadata server  moves the erased data to the saved file and updates the saved file management table .","In the example illustrated in , the first record stores information on erased data in the file \u201c\/share1\/b.doc\u201d. The metadata ID  stores the identifier \u201c110\u201d of the metadata corresponding to the file \u201c\/share1\/b.doc\u201d. Moreover, the saved path  stores the path name \u201c\/r\/FS1\/share1\/b.doc\u201d of the location of the saved file. The saved name space ID  stores the identifier \u201cn3001\u201d of the name space in which the saved file \u201c\/r\/FS1\/share1\/b.doc\u201d is stored. Further, the address range  stores an address range [10,20) of the erased data in the original file \u201c\/share1\/b.doc\u201d.",{"@attributes":{"id":"p-0300","num":"0299"},"figref":"FIG. 20","b":"415"},"The hidden file management table  in the third embodiment is stored in the memory  of the file server .","The hidden file management table  stores information for managing correspondences between the erased data and the hidden file. To be specific, the hidden file management table  includes one or more records, and each of the records includes the path , the name space ID , the original metadata , the hidden file path , an address range , and an erasure type .","Each record of the hidden file management table  corresponds to information on the erased data generated in the processing of one access.","As compared to the second embodiment, the address range  and the erasure type  are newly added. The address range  stores the address range of the erased data on the original file in which the erased data was stored. The erasure type  stores a reason why the erased data was generated.","In a case where the erased data was generated because the file was removed, the erasure type  stores \u201cremoved\u201d, which is information indicating that the file was removed. In a case where the erased data was generated due to the overwrite in a part of the file or the truncation of the file size, the erasure type  stores \u201cpartially erased\u201d, which is information indicating that a part of data of the file was erased.","In a case where the erased data is generated, that is, in a case of processing such as the removal of the file, the overwrite on the file, or the truncation of the file size is requested, the file server  reads the erased data from the original file to write the erased data in the hidden file, and updates the hidden file management table .",{"@attributes":{"id":"p-0307","num":"0306"},"figref":"FIG. 21","b":"411"},"The third embodiment is different from the second embodiment in that not only when the removal of the file is requested but also when the erased data is generated due to the overwrite on the file or the truncation of the file size, the erased data is stored in the hidden file storage area .","As in the second embodiment, in a case where the processing is started (Step S), the file sharing program  receives an access request to a file from the business program  or another program via the network  (Step S).","The file sharing program  determines whether or not the erased data is generated, in a case where processing corresponding to the received access request is executed (Step S). In other words, it is determined whether or not the received access request requests the erasure of data from the file. For example, in a case where the received access request is a request for the removal of the file, the overwrite on the file, the truncation of the file size, or the like, it is determined that the erased data is generated, in a case where the processing corresponding to the received access request is executed.","In a case where it is determined that the erased data is not generated, the file sharing program  proceeds to Step S.","In a case where it is determined that the erased data is generated, the file sharing program  moves the erased data to the hidden file storage area  (Step S).","To be specific, the file sharing program  identifies the address range of the erased data, generates a hidden file for storing the erased data in the hidden file storage area , and stores the erased data in the generated hidden file.","At this time, a path name of the hidden file is determined so as not to overlap with the other hidden files stored in the hidden file storage area .","The file sharing program  updates the hidden file management table  based on information on the generated hidden file (Step S).","To be specific, the file sharing program  adds a new record to the hidden file management table .","The file sharing program  stores the path name of the original file in the path  of the added record, stores in the name space ID  an identifier of a name space in which the original file is stored, and stores the metadata of the original file in the original metadata .","Moreover, the file sharing program  stores the path name of the generated hidden file in the hidden file path , and stores the address range of the erased data in the address range . Further, the file sharing program  stores in the erasure type  \u201cremoved\u201d when the file is removed, and \u201cpartially erased\u201d when the file is not removed.","Next, the file sharing program  executes the processing corresponding to the received access request on the file (Step S).","The file sharing program  determines whether or not the removal notification needs to be transmitted (Step S). It should be noted that the removal notification also includes a notification that the access request that generates the erased data has been received.","For example, in a case where a preset certain number of records or more are registered with the hidden file management table  or in a case where a preset period of time has elapsed from the last removal notification, it is determined that the removal notification needs to be transmitted.","In a case where it is determined that the removal notification, that is, the notification that the erased data has been generated does not need to be transmitted to the metadata server , the file sharing program  ends the processing (Step S).","In a case where it is determined that the removal notification needs to be transmitted, that is, the generation of the erased data needs to be notified to the metadata server , the file sharing program  notifies the metadata server  of the generation of the erased data (Step S). The notification includes information on all the records stored in the hidden file management table , that is, information on all the hidden files. Thereafter, the file sharing program  ends the processing (Step S).","It should be noted that the processing of Steps  and S is executed in the course of the processing in response to the access request, but may be periodically executed as processing independent of the processing in response to the access request.",{"@attributes":{"id":"p-0325","num":"0324"},"figref":"FIG. 22","b":"113"},"In a case where the processing is started (Step S), the file removal detection program  detects the generation of the erased data in the file server  (Step S).","To be specific, the file removal detection program  may detect that the erased data has been generated in the file server  by receiving the removal notification that the erased data has been generated from the file server . It should be noted that the removal notification includes the information stored in the hidden file management table .","The description is given here assuming that the file removal detection program  executes the processing for each piece of the erased data, that is, for each record of the hidden file management table .","The file removal detection program  determines, based on the hidden file management table  included in the received removal notification, whether or not the erased data to be processed is generated due to the removal of the file (Step S). In other words, it is determined whether the file that included the erased data to be processed is the removed file or the partially erased file.","In a case where \u201cremoved\u201d is stored in the erasure type , the file removal detection program  determines that the erased data was generated due to the removal of the file. On the other hand, in a case where \u201cpartially erased\u201d is stored in the erasure type , the file removal detection program  determines that the erased data was generated due to the overwrite on the file or the truncation of the file size.","In a case where it is determined that the erased data was generated due to the removal of the file, the file removal detection program  identifies a record of the metadata management table  corresponding to the file to be processed, and stores \u201cremoved\u201d in the file status  of the record (Step S). Thereafter, the file removal detection program  proceeds to Step S.","In a case where it is determined that the erased data was not generated due to the removal of the file, the file removal detection program  adds a record corresponding to the file to be processed to the metadata management table  (Step S).","To be specific, the file removal detection program  stores an identifier that does not overlap with the other records in the metadata ID  of the added record. The file removal detection program  stores the path name and the metadata of the file to be processed in the path  and the original metadata  of the added record, respectively. The file removal detection program  stores in the name space ID  an identifier of a name space in which the file to be processed is stored. Moreover, the file removal detection program  stores \u201cpartially erased\u201d in the file status .","It should be noted that the information to be stored in the added record may be obtained based on the information included in the removal notification received from the file server .","The file removal detection program  updates the saved file management table  (Step S). To be specific, the file removal detection program  adds a record corresponding to the hidden file in which the erased data to be processed is stored.","The added record stores in the metadata ID  the same identifier as the metadata ID  of the record identified in Step S or the metadata ID  of the record added in Step S. The saved path  stores the path name of the hidden file, the saved name space ID  stores an identifier of a name space in which the hidden file is stored, and the address range  stores the address range of the erased data stored in the hidden file. It should be noted that the information to be stored in the added record may be obtained based on the information included in the removal notification received from the file server .","The file removal detection program  moves the hidden file to the saving storage apparatus  (Step S). To be specific, the file removal detection program  copies the hidden file in the name space of the saving storage apparatus  to move the erased data to be processed to the saved file. At this time, the path name of the saved file is determined so as not to overlap with the other saved files stored in the saving storage apparatus .","The file removal detection program  updates the saved file management table  (Step S). To be specific, the file removal detection program  changes the saved path  of the record added in Step S to the path name of the saved file.","The file removal detection program  instructs the file server  to remove the hidden file (Step S). Thereafter, the file removal detection program  ends the processing (Step S).",{"@attributes":{"id":"p-0340","num":"0339"},"figref":["FIGS. 23 and 24","FIG. 25"],"b":["153","154"]},"A description is given here of the metadata management table  and the saved file management table  in a case where data is overwritten on the file \u201c\/share1\/a.doc\u201d stored in the name space \u201cshare1\u201d of the file server .",{"@attributes":{"id":"p-0342","num":"0341"},"figref":"FIG. 23","b":["153","153","4"]},{"@attributes":{"id":"p-0343","num":"0342"},"figref":"FIG. 24","b":["153","1","2"]},"When compared to , the second record having the metadata ID  of \u201c101\u201d is added. The record represents that the metadata server  manages the file \u201c\/share1\/a.doc\u201d at the modified time of \u201c10:00\u201d as the partially erased file. Therefore, the file status  of the record stores \u201cpartially erased\u201d.","Moreover, it can be seen that in the first record, the modified time is changed to \u201c12:00\u201d due to the overwrite of the data on the file \u201c\/share1\/a.doc\u201d.",{"@attributes":{"id":"p-0346","num":"0345"},"figref":"FIG. 25","b":["154","1","2"]},"The first record of the saved file management table  of  stores information on the erased data and the saved file of the partially erased file corresponding to the second record of the metadata management table  of .","The metadata ID  of the second record stores \u201c100\u201d. Therefore, it can be seen that the second record is a record relating to the erased data of the partially erased file corresponding to the second record of the metadata management table  of .","It can be seen from the saved path  and the saved name space ID  that the erased data is stored in the name space \u201cr\u201d of the saving storage apparatus  as a file having the path name of \u201cA\/r\/s1000\/share\/a.doc_diff\u201d.","It can also be seen from the address range  that the erased data is data that was stored in the range of addresses \u201c0\u201d to \u201c29\u201d of the original file.",{"@attributes":{"id":"p-0351","num":"0350"},"figref":"FIG. 26","b":"115"},"The file read proxy program  according to this embodiment receives a read request for the normal file, the removed file, or the partially erased file and responds to the requester with a content of the file. In a case where the requested file is the removed file or the partially erased file, the requested file is temporarily restored to respond with the content of the restored file.","In a case where the processing is started (Step S), the file read proxy program  receives a file read request from the analysis program  or the like (Step S). The received file read request includes information for the requester program to specify the file. For example, information such as the path name, the name space name, the metadata, or another identifier (metadata ID or i-node number in the file system) of the file is included.","The file read proxy program  identifies a corresponding record of the metadata management table  based on the information included in the received file read request (Step ).","The file read proxy program  refers to the file status  of the identified record to determine whether or not the file to be read is the normal file (Step S).","In a case where the file status  is \u201cremoved\u201d or \u201cpartially erased\u201d, it is determined that the file to be read is the removed file or the partially erased file. On the other hand, in a case where the file status  is \u201cpresent\u201d, it is determined that the file to be read is the normal file.","In a case where it is determined that the file to be read is not the normal file but is any one of the removed file and the partially erased file, the file read proxy program  executes restoration processing for restoring the file to be read (Step S). As a result, the file is temporarily restored in the saving storage apparatus . It should be noted that details of the restoration processing are described later with reference to .","Thereafter, the file read proxy program  transmits the restored file to the requester, and ends the processing (Steps S and S).","In a case where it is determined in Step S that the file to be read is the normal file, the file read proxy program  identifies the location of the file to be read (Step S). To be specific, the location of the file is identified based on the identifier of the file server , the identifier of the name space, the path name, and the like.","Further, the file read proxy program  reads the file to be read from the file server  as the identified location to transmit the read file to the requester, and ends the processing (Steps S and S).",{"@attributes":{"id":"p-0361","num":"0360"},"figref":"FIG. 27"},"In a case where the processing is started (Step S), the file read proxy program  extracts records relating to the file to be read from the metadata management table  (Step S). In this example, records of the same file to be read that are newer in time series than the record identified in Step S are extracted.","To be specific, the file read proxy program  extracts records each having the path  and the name space ID  that match those of the file to be read and having a modified time included in the original metadata  that is later than the modified time of the file to be read, that is, having a newer modified time.","The file read proxy program  determines whether or not the file to be read is currently the removed file (Step S). To be specific, of the extracted records, the file read proxy program  identifies a record for which a modified time stored in the original metadata  is the latest, and determines whether or not the file status  of the record is \u201cremoved\u201d.","In a case where it is determined that the file to be read is currently the removed file, the file read proxy program  copies, based on the record of the removed file extracted in Step S, the removed file as a temporary file in a work area (Step S). The work area as used herein is one storage space of the saving storage apparatus .","On the other hand, in a case where it is determined that the file to be read is not currently the removed file but is the partially erased file, the file read proxy program  reads, based on the records extracted in Step S, the file to be read that is currently stored in the file server , and copies the read file as a temporary file in the work area (Step S).","The file read proxy program  selects, from among the extracted records, a record having the next newer modified time than the record identified in Step S as a record to be processed (Step S).","The file read proxy program  overwrites the temporary file with removed data stored in the saved file (Step S). To be specific, the following processing is executed.","The file read proxy program  identifies, based on the information in the record selected in Step S, a record of a corresponding saved file from the saved file management table .","The file read proxy program  reads the saved file from the saving storage apparatus  based on the identified record to obtain the removed data.","The file read proxy program  refers to the address range  of the identified record to overwrite the same address range of the temporary file with the read removed data. Moreover, the file read proxy program  changes a file size of the temporary file to the file size stored in the original metadata  of the selected record of the metadata management table .","Through the above-mentioned processing, the temporary file has the same content as the file at a time when the record selected in Step S is added to the metadata management table .","The file read proxy program  determines whether or not the processing is complete for all the records extracted in Step  (Step S).","In a case where it is determined that the processing is not complete for all the records extracted in Step , the file read proxy program  returns to Step S and executes similar processing (Steps S to S).","In a case where it is determined that the processing is not complete for all the records extracted in Step , the file read proxy program  ends the processing (Step S).","It should be noted that in the third embodiment, the metadata server  reads the file and transmits the read file to the analysis server . However, this invention is not limited thereto, and the analysis server  may obtain the file. In this case, the following processing is executed.","In Step S, the file read proxy program  generates the list  and transmits the generated list  to the analysis server . It should be noted that as the method of generating the list , the same method as in the first embodiment is used. It should be noted that the saved path  of the record corresponding to the temporary file of the list  stores information on a location of the temporary file in the work area.","The analysis server  reads the files based on the received list . It should be noted that this processing is the same as in the first embodiment, and hence a description thereof is omitted.","In this embodiment, each piece of the erased data is stored in one saved file or hidden file, but this invention is not limited thereto. For example, the erased data may be stored collectively in several files, or stored in a database or block storage.","Next, a fourth embodiment of this invention is described.","The fourth embodiment extends the first embodiment, and in a case where a file having the same content as that of the removed file is stored in the backup storage apparatus , the saved file corresponding to the removed file is not generated. In this manner, the number of copied files having the same content may be reduced in the computer system .","In the following, differences from the first embodiment are mainly described.","The components of the computer system , and the components of the metadata server  and the file server  in the fourth embodiment are the same as those of the first embodiment, and hence descriptions thereof are omitted. Moreover, the configuration of each table managed by the metadata server  and the file server  is also the same as that of the first embodiment, and hence a description thereof is omitted.",{"@attributes":{"id":"p-0384","num":"0383"},"figref":"FIG. 28","b":"151"},"The storage ID , the storage name , the type , and the IP address  are the same as those of the first embodiment, and hence descriptions thereof are omitted.","The fourth embodiment is different from the first embodiment in that the metadata server  also manages the backup storage apparatus  in addition to the file server  and the saving storage apparatus . In other words, the fourth record of the storage management table  illustrated in  stores information on a backup storage apparatus . It should be noted that the type  of the record corresponding to the backup storage apparatus  stores \u201cbackup\u201d.",{"@attributes":{"id":"p-0387","num":"0386"},"figref":"FIG. 29","b":"152"},"The name space ID , the name space name , the storage ID , the capacity , the protocol , the used volume , and the usage  are the same as those of the first embodiment, and hence descriptions thereof are omitted.","As illustrated in , the fifth record of the name space management table  stores information on a name space in the backup storage apparatus . It should be noted that the usage  of the record corresponding to the backup storage apparatus  stores \u201cbackup\u201d.",{"@attributes":{"id":"p-0390","num":"0389"},"figref":"FIG. 30","b":"153"},"In the fourth embodiment, the metadata management table  is stored in the memory  of the metadata server .","The metadata management table  in the fourth embodiment is different from the first embodiment in that a hash value  is added. The hash value  stores a hash value representing the content of the file corresponding to the entry. The hash value as used herein is a value obtained by applying a predefined hash function to the content of the file. For example, as the hash function, various known algorithms (for example, SHA256) may be used.","In this embodiment, it is determined whether or not the contents of the files are the same based on the hash value .","In the example illustrated in , the fourth record of the metadata management table  stores information on a file \u201c\/BU\/x.doc\u201d stored in the backup storage apparatus . The file stored in the backup storage apparatus  is hereinafter referred to as a backup file.","Moreover, the file status  of an entry corresponding to the backup file stores \u201cBU\u201d, which represents that the file corresponding to the entry is the backup file. Moreover, it can be seen in the hash value  of the record that a hash value calculated based on the file \u201c\/BU\/x.doc\u201d is \u201ce001\u201d. It is assumed here that the hash value is a value represented in hexadecimal notation.","In order to store the information on the backup file in the metadata management table , the metadata management program  in this embodiment inquires of the backup program  of the backup storage apparatus  to obtain metadata of the backup file stored in the backup storage apparatus . Moreover, the metadata management program  may read a database or the like holding a list of backup files managed by the backup program .","The hash value of the backup file may be calculated by the metadata management program , in a case where the metadata management program  reads the backup file from the backup storage apparatus , or may be calculated by the backup program  and transmitted to the metadata management program .",{"@attributes":{"id":"p-0398","num":"0397"},"figref":"FIG. 31","b":"113"},"In a case of detecting the file to be removed, the file removal detection program  in the fourth embodiment determines whether or not there is a backup file having the same content as that of the file. In a case where there is a backup file having the same content, the file removal detection program  adds the backup file as the saved file corresponding to the file to be removed to the saved file management table . Further, the file removal detection program  removes the file to be removed without generating the hidden file in the file server .","In a case where the processing is started (Step S), the file removal detection program  detects that a file is to be removed from the file server  (Step S).","The processing of Step S is the same processing as Step S. It should be noted, however, that in the fourth embodiment, the removal notification transmitted from the file server  includes the hash value of the file to be removed.","It should be noted that the hash value of the file to be removed may be calculated by the file removal detection program  by applying the hash function to the file to be removed read from the file server .","The file removal detection program  updates a record corresponding to the file to be removed of the metadata management table  (Step S). The processing of Step S is the same processing as Step S.","The file removal detection program  refers to the metadata management table  to search for a backup file having the same content as that of the file to be removed (Step S). To be specific, the following processing is executed.","The file removal detection program  obtains the hash value  of the file to be removed.","Next, the file removal detection program  extracts an entry having \u201cBU\u201d stored in the file status , and compares a hash value  of the extracted entry and the hash value  of the file to be removed. The entry matching the hash value  of the file to be removed is the backup file having the same content as that of the file to be removed.","It should be noted that a method of determining the content of the file is not limited to the above-mentioned method. For example, a method of comparing the metadata of the files, a method of comparing file sizes, a method combining those methods, or the like may be used.","As a result of the search processing described above, the file removal detection program  determines whether or not there is a backup file having the same content as that of the file to be removed (Step S).","In a case where it is determined that there is no backup file having the same content as that of the file to be removed, the file removal detection program  executes the file hiding processing on the file to be removed with respect to the file server  (Step S).","Further, the file removal detection program  instructs the file server  that has provided the notification of the removal of the file to execute the hiding processing of the file to be removed (Step S), and ends the processing (Step S).","It should be noted that the processing of Steps S and S is the same processing as Steps S and S, and hence a description thereof is omitted.","In a case where it is determined in Step S that there is a backup file having the same content as that of the file to be removed, the file removal detection program  updates the saved file management table  and ends the processing (Steps S and S).","To be specific, the file removal detection program  adds the information on the backup file as information on the saved file corresponding to the file to be removed to the saved file management table .","In other words, a value of the metadata ID  of a record corresponding to the backup file is stored in the metadata ID , and the path name of the path  of the record corresponding to the backup file is stored in the saved path . Moreover, an identifier of the name space ID  of the record corresponding to the backup file is stored in the saved name space ID .","In the above-mentioned processing, the files stored in the backup storage apparatus  are searched for the file having the same content as that of the file to be removed, but in addition thereto, all the storage apparatus managed by the metadata server  may be searched.","Next, a fifth embodiment of this invention is described. In the fifth embodiment, the file server  does not transmit the removal notification of the file to the metadata server , in a case where removal of a file is requested from the business program . Therefore, the metadata server  periodically determines whether or not a file has been removed from the file server . For the determination, a snapshot function of the file server  is used.","In the following, differences from the first embodiment are mainly described.","The components of the computer system , and the components of the metadata server  and the file server  in the fifth embodiment are the same as those of the first embodiment, and hence descriptions thereof are omitted. It should be noted that the fifth embodiment is different in that the file server  has the snapshot function. Moreover, the configuration of each table managed by the metadata server  and the file server  is also the same as that of the first embodiment, and hence a description thereof is omitted.",{"@attributes":{"id":"p-0419","num":"0418"},"figref":"FIGS. 32A and 32B","b":"112"},"In this embodiment, the metadata management program  collects the metadata of the files stored in the file server , and detects a file removed from the file server  and moves the file to the saving storage apparatus .","In a case where the processing is started (Step S), the metadata management program  instructs the file server  to generate a snapshot of the name space from which the metadata is to be collected (Step S). In a case of receiving the instruction, the file server  generates the snapshot of the specified name space.","The metadata management program  selects one file to be processed from among files included in the generated snapshot (Step S). The processing of Step  is different from the processing of Step S (see ) in that a file included in the snapshot is selected.","The metadata management program  obtains metadata of the selected file from the file server  (Step S).","The metadata management program  updates the metadata management table  based on the obtained metadata (Step S). The processing of Step S is the same processing as the processing of Step S (see ).","The metadata management program  determines whether or not the processing is complete for all the files included in the snapshot (Step S).","In a case where it is determined that the processing is not complete for all the files included in the snapshot, the metadata management program  returns to Step S and executes similar processing (Steps S to S).","In a case where it is determined that the processing is complete for all the files included in the snapshot, the metadata management program  extracts, from among the records of the metadata management table , records that have not been updated in the processing of Steps S to S (Step S).","The metadata management program  selects one record to be processed from among the extracted records (Step S).","The metadata management program  determines whether or not a file corresponding to the record to be processed is included in the snapshot (Step S).","In a case where it is determined that the file corresponding to the record to be processed is included in the snapshot, the metadata management program  proceeds to Step S.","In a case where it is determined that the file corresponding to the record to be processed is not included in the snapshot, the metadata management program  updates the record to be processed (Step S). To be specific, the metadata management program  stores \u201cremoved\u201d in the file status  of the record to be processed.","This indicates that the file corresponding to the record to be processed is a file that has been removed before the snapshot is generated. Therefore, the file is managed as a removed file.","The metadata management program  obtains the file corresponding to the record to be processed from the snapshot of the previous generation of the snapshot generated in Step S (Step S). The snapshot of the previous generation is generated in this processing executed last time. It should be noted that the snapshot of the previous generation may be stored in the file server  or in the saving storage apparatus .","The metadata management program  moves the file obtained from the snapshot of the previous generation as the saved file of the removed file corresponding to the record to be processed to the saving storage apparatus  (Step S).","The metadata management program  updates the saved file management table  (Step S). The processing of Step S is the same processing as the processing of Step S (see ).","The metadata management program  determines whether or not the processing is complete for all the records extracted in Step S (Step S).","In a case where it is determined that the processing is not complete for all the records extracted in Step S, the metadata management program  returns to Step S and executes similar processing (Steps S to S).","In a case where it is determined that the processing is complete for all the records extracted in Step S, the metadata management program  instructs the file server  to remove the snapshot of the previous generation, and ends the processing (Steps S and S). In a case of receiving the instruction, the file server  removes the specified snapshot.","In this embodiment, the file server  does not need to provide a notification of the removal of the file, and hence even a file server  not having the function of providing the notification of the removal of the file may move the removed file to the saving storage apparatus .","In any embodiment of this invention, the hidden file is removed under the instruction of the metadata server . This is to prevent, even when a failure occurs in the file server , the metadata server , or the network  and the file save processing that is being executed is stopped, the hidden file from being removed by the file server  before completion of movement of the file to the saving storage apparatus  by the metadata server .","Moreover, in a case where a failure occurs in the metadata server  or the network  and the file server  cannot notify the metadata server  of the removal of the file, the file server  detects the failure and delays the notification of the file removal until the communication with the metadata server  is resumed.","In the first embodiment, in a case where the file server  detects that the communication to\/from the metadata server  is disabled, the file server  may continue the operation by switching to the notification method of the file removal in the second embodiment.","Though the detailed description has been given of this invention referring to the attached drawings, this invention is not limited to this specific configuration, and includes various variations and equivalent configurations within the scope of the accompanying claims."],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"BRIEF DESCRIPTION OF THE DRAWINGS","p":[{"@attributes":{"id":"p-0015","num":"0014"},"figref":"FIG. 1"},{"@attributes":{"id":"p-0016","num":"0015"},"figref":"FIG. 2"},{"@attributes":{"id":"p-0017","num":"0016"},"figref":"FIG. 3"},{"@attributes":{"id":"p-0018","num":"0017"},"figref":"FIG. 4"},{"@attributes":{"id":"p-0019","num":"0018"},"figref":"FIG. 5"},{"@attributes":{"id":"p-0020","num":"0019"},"figref":"FIG. 6"},{"@attributes":{"id":"p-0021","num":"0020"},"figref":"FIG. 7"},{"@attributes":{"id":"p-0022","num":"0021"},"figref":"FIG. 8"},{"@attributes":{"id":"p-0023","num":"0022"},"figref":"FIG. 9"},{"@attributes":{"id":"p-0024","num":"0023"},"figref":"FIG. 10"},{"@attributes":{"id":"p-0025","num":"0024"},"figref":"FIGS. 11A, 11B, and 11C"},{"@attributes":{"id":"p-0026","num":"0025"},"figref":"FIG. 12"},{"@attributes":{"id":"p-0027","num":"0026"},"figref":"FIG. 13"},{"@attributes":{"id":"p-0028","num":"0027"},"figref":"FIG. 14"},{"@attributes":{"id":"p-0029","num":"0028"},"figref":"FIGS. 15A and 15B"},{"@attributes":{"id":"p-0030","num":"0029"},"figref":"FIG. 16"},{"@attributes":{"id":"p-0031","num":"0030"},"figref":"FIG. 17"},{"@attributes":{"id":"p-0032","num":"0031"},"figref":"FIG. 18"},{"@attributes":{"id":"p-0033","num":"0032"},"figref":"FIG. 19"},{"@attributes":{"id":"p-0034","num":"0033"},"figref":"FIG. 20"},{"@attributes":{"id":"p-0035","num":"0034"},"figref":"FIG. 21"},{"@attributes":{"id":"p-0036","num":"0035"},"figref":"FIG. 22"},{"@attributes":{"id":"p-0037","num":"0036"},"figref":"FIGS. 23 and 24"},{"@attributes":{"id":"p-0038","num":"0037"},"figref":"FIG. 25"},{"@attributes":{"id":"p-0039","num":"0038"},"figref":"FIG. 26"},{"@attributes":{"id":"p-0040","num":"0039"},"figref":"FIG. 27"},{"@attributes":{"id":"p-0041","num":"0040"},"figref":"FIG. 28"},{"@attributes":{"id":"p-0042","num":"0041"},"figref":"FIG. 29"},{"@attributes":{"id":"p-0043","num":"0042"},"figref":"FIG. 30"},{"@attributes":{"id":"p-0044","num":"0043"},"figref":"FIG. 31"},{"@attributes":{"id":"p-0045","num":"0044"},"figref":"FIGS. 32A and 32B"}]},"DETDESC":[{},{}]}
