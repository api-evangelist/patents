---
title: System and method for implementing an image ancillary to a cursor
abstract: A system and method to display an ancillary image which is movable with a cursor image. A cursor image indication is obtained which is indicative of the cursor image. An ancillary image indication is generated based on the cursor image indication. The cursor image and the ancillary image are displayed based on the cursor image indication and the ancillary image indication.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=06971071&OS=06971071&RS=06971071
owner: Microsoft Corporation
number: 06971071
owner_city: Redmond
owner_country: US
publication_date: 20000308
---

{"@attributes":{"id":"description"},"RELAPP":[{},{}],"heading":["REFERENCE TO RELATED APPLICATION","BACKGROUND OF THE INVENTION","SUMMARY OF THE INVENTION","DETAILED DESCRIPTION OF THE PREFERRED EMBODIMENTS","Overview"],"p":["The present application claims priority from U.S. provisional application Ser. No. 60\/138,433, filed on Jun. 10, 1999, entitled CURSOR SHADOWS.","The present invention relates to a computer system. More specifically, the present invention relates to a system which provides an ancillary image, ancillary to the cursor image.","Conventional computers, such as desktop computers, typically include a visual display screen, such as a cathode ray tube(CRT). Conventional computers also typically include a user input pointing device, such as a mouse. The mouse typically includes a ball and position encoders. As the user moves the mouse over a work surface, the ball rotates and the position encoders provide position information to the computer. The position information is indicative of the movement of the mouse. Based on the position information, the computer system typically moves a mouse cursor about the visual display screen allowing the user to acquire targets on the visual display screen.","A conventional mouse also typically includes one or more actuator buttons. The actuator buttons are typically actuable by the operator by simply depressing the selected button. Actuation of the buttons can implement a number of different features. For example, where the user has acquired a target (e.g., an icon), by placing the mouse cursor over the icon on the visual display screen, the user may typically be able to select the feature or program represented by that icon by simply depressing one of the actuator buttons after the target has been acquired.","In one conventional system, the cursor is associated with an arrow, or other visible display element which moves about the screen. The cursor display element or display image is conventionally treated the same as any other object on the display screen, from a depth perception standpoint. Therefore, when the display screen is displaying a large number of icons, windows, or other display elements, the cursor can be difficult to locate and follow during operation.","A system and method display in ancillary image which is movable with a cursor image. A cursor image indication is obtained which is indicative of the cursor image. An ancillary image indication is generated based on the cursor image indication. The cursor image and the ancillary image are displayed based on the cursor image indication and the ancillary image indication.","In one illustrative embodiment, the ancillary image is a shadow cast by the cursor image. Therefore, while the cursor image is opaque, the ancillary image is translucent. Of course, the ancillary image can take any other of a wide variety of forms, some of which are discussed below. However, the ancillary image is movable along with the cursor during operation.","In one embodiment, the present invention is a method, apparatus and display which enables cursor shapes or images to be displayed with shadows. In another embodiment, the present invention is a method, apparatus and display which enables cursor shapes or images to be specified or represented by an alpha, red, green, blue (ARGB) bitmap image. In one embodiment, the present invention provides an image ancillary to a cursor image.  and the related discussion are intended to provide a brief, general description of a suitable computing environment in which the invention may be implemented.","Although not required, the invention will be described, at least in part, in the general context of computer-executable instructions, such as program modules, being executed by a personal computer or other computing device. Generally, program modules include routine programs, objects, components, data structures, etc. that perform particular tasks or implement particular abstract data types. Moreover, those skilled in the art will appreciate that the invention may be practiced with other computer system configurations, including hand-held devices, multiprocessor systems, microprocessor-based or programmable consumer electronics, network PCs, minicomputers, mainframe computers, palmtop computers and the like. The invention is also applicable in distributed computing environments where tasks are performed by remote processing devices that are linked through a communications network. In a distributed computing environment, program modules may be located in both local and remote memory storage devices.","With reference to , an exemplary environment for the invention includes a general purpose computing device in the form of a conventional personal computer , including processing unit , a system memory , and a system bus  that couples various system components including the system memory to the processing unit . The system bus  may be any of several types of bus structures including a memory bus or memory controller, a peripheral bus, and a local bus using any of a variety of bus architectures. The system memory includes read only memory (ROM)  a random access memory (RAM) . A basic input\/output  (BIOS), containing the basic routine that helps to transfer information between elements within the personal computer , such as during start-up, is stored in ROM . The personal computer  further includes a hard disk drive  for reading from and writing to a hard disk (not shown), a magnetic disk drive  for reading from or writing to removable magnetic disk , and an optical disk drive  for reading from or writing to a removable optical disk  such as a CD ROM or other optical media. The hard disk drive , magnetic disk drive , and optical disk drive  are connected to the system bus  by a hard disk drive interface , magnetic disk drive interface , and an optical drive interface , respectively. The drives and the associated computer-readable media provide nonvolatile storage of computer readable instructions, data structures, program modules and other data for the personal computer .","Although the exemplary environment described herein employs a hard disk, a removable magnetic disk  and a removable optical disk , it should be appreciated by those skilled in the art that other types of computer readable media which can store data that is accessible by a computer, such as magnetic cassettes, flash memory cards, digital video disks, Bernoulli cartridges, random access memory (RAM), read only memory (ROM), and the like, may also be used in the exemplary operating environment.","A number of program modules may be stored on the hard disk, magnetic disk , optical disk , ROM  or RAM , including an operating system , one or more application programs , other program modules , and program data . A user may enter commands and information into the personal computer  through input devices such as a keyboard  and pointing device (or mouse) . Other input devices (not shown) may include a touch pad, roller ball, microphone, joystick, game pad, satellite dish, scanner, or the like. These and other input devices are often connected to the processing unit  through one of a plurality of ports. For instance, keyboard  is connected through a keyboard port , and mouse  is connected through serial port interface  but could also be connected through a MousePort or a PS\/2 port.","In the illustrative embodiment, keyboard port  and serial port interface  are coupled to the system bus . User input devices may also be connected by other interfaces, such as a sound card, a parallel port, a game port or a universal serial bus (USB). A monitor  or other type of display device is also connected to the system bus  via an interface, such as a video adapter  controlled by a graphics engine either integrated with or located separately from operating system . Of course, the display can be provided on a CRT or any other type of display device, such as plasma display, an LED or LCD device, as examples. In addition to the monitor , personal computers may typically include other peripheral output devices such as a speaker and printers (not shown).","The personal computer  may operate in a networked environment using logic connections to one or more remote computers, such as a remote computer . The remote computer  may be another personal computer, a server, a router, a network PC, a peer device or other network node, and typically includes many or all of the elements described above relative to the personal computer , although only a memory storage device  has been illustrated in . The logic connections depicted in  include a local are network (LAN)  and a wide area network (WAN) . Such networking environments are commonplace in offices, enterprise-wide computer network intranets and the Internet.","When used in a LAN networking environment, the personal computer  is connected to the local area network  through a network interface or adapter . When used in a WAN networking environment, the personal computer  typically includes a modem  or other means for establishing communications over the wide area network , such as the Internet. The modem , which may be internal or external, is connected to the system bus  via the serial port interface . In a network environment, program modules depicted relative to the personal computer , or portions thereof, may be stored in the remote memory storage devices. It will be appreciated that the network connections shown are exemplary and other means of establishing a communications link between the computers may be used.",{"@attributes":{"id":"p-0028","num":"0027"},"figref":"FIG. 2","b":["200","47","200","202","202","204","204","202","202"]},"Cursor image  also illustrates an ancillary image . In the embodiment illustrated in , ancillary image  is a shadow which follows opaque portion  of cursor image  around the screen, as the cursor is moved. While the arrow  is opaque, ancillary image  is translucent such that the images displayed on screen  beneath ancillary image  are visible, but shaded. Also, in the embodiment illustrated in , ancillary image (or shadow image)  is provided with an umbra portion  and a penumbra portion . The umbra portion , being located generally centrally on ancillary image , is darker, while penumbra , being located toward the outer periphery of ancillary image , is more translucent. This gives the shadow a more realistic and \u201cfuzzy\u201d appearance, rather than a sharp appearance. Of course, ancillary image  can be implemented as simply a sharp image, as desired.",{"@attributes":{"id":"p-0030","num":"0029"},"figref":["FIG. 3","FIG. 3"],"b":["206","204","202"]},"First, an indication of the cursor image is obtained. This is indicated by block  in . The image of the cursor can be a bitmap or other similar indication which illustrates cursor image . Next, based on the opaque portions of cursor image , the ancillary image  is created. This is indicated by block . In an embodiment in which ancillary image  is a shadow, the opaque portion  of cursor image  can simply be augmented with an offset and translucency value in order to obtain the ancillary image. This is described in greater detail below. Next, the opaque portion of the cursor and the ancillary image are both displayed on the display screen. This is indicated by block .",{"@attributes":{"id":"p-0032","num":"0031"},"figref":["FIG. 4A","FIGS. 4B\u20134D"],"b":["200","206","204"]},"Most cursor images  have an associated AND-mask. The AND-mask is a monochrome bitmap of the same dimensions as the bitmap defining the cursor image. In the associated AND-mask, each bit defines whether the corresponding pixel in the cursor image is visible or non-visible. For example,  illustrates an AND-mask  for the cursor image  shown in . The bits within arrow  (which corresponds to the opaque portion  of cursor image ) are given a value of zero, which means those pixels are visible. The bits residing within AND-mask , but outside of arrow  (i.e., which correspond to the invisible pixels of cursor image \u2014ignoring the ancillary image  for now) are given a value of 1 which indicate that the corresponding pixels are invisible. In any case, the cursor AND-mask is first obtained. This is indicated by block  in .","Next, in one illustrative embodiment, an ALPHA-mask (which illustratively includes both alpha and color channel information) is obtained. This is described in greater detail below. Briefly, however, the AND-mask  is expanded and each invisible bit (bit value 1 on the AND-mask) is mapped to a value of zero, while each visible bit (bit value zero on the AND-mask) is mapped to a non-zero value. Creating the ALPHA-mask is illustrated by block  in . The ALPHA-mask is illustrated by  in . ALPHA-mask  contains a silhouette of the cursor  shown in AND-mask  of . Thus, in one embodiment, the ALPHA-mask is simply blended to the screen, and the cursor is drawn on top of the ALPHA-mask. This is shown by numeral  in , and is illustrated by blocks  and  in . Blending the images to the screen can also be combined into a single step, and is discussed in greater detail below.","While the ALPHA-mask can be used to generate the ancillary image (in this case a shadow), the ALPHA-mask has very sharply defined edges. This may not be the most aesthetically pleasing embodiment.","To create a more realistic looking ancillary image (e.g., a shadow), the edges of the ALPHA-mask can be softened. This is illustrated in greater detail in .  is a flow diagram illustrating further steps which can be used to create a more aesthetically desirable ancillary image.  illustrate such images.","The first portion of  is similar to that shown in , and is similarly numbered. Therefore, the cursor AND-mask is first obtained as illustrated in block , and the ALPHA-mask is created as illustrated in block . As discussed above, the creation of the ALPHA-mask is discussed in greater detail below with respect to .","However, in the embodiment illustrated in , once the ALPHA-mask is obtained, it is softened to obtain a shadow mask. In one illustrative embodiment, the ALPHA-mask is filtered by a convolution filter, or another similar filter (such as an averaging filter) to soften its edges.","In one illustrative embodiment, the ALPHA-mask is filtered twice with a three by three (box car) convolution filter which is well known in the art. Briefly, each resulting pixel value is computed as the average of the corresponding source pixel and its eight closest neighboring pixels. The contributing pixels form a three by three array of pixels centered around the corresponding source pixel. This type of filter has a blurring effect. Because the ALPHA-mask is subjected to the filtering operation twice, the resultant shadow image now contains an interior portion (or umbra)  shown in , and an exterior portion (or penumbra) . The interior portion  is darker while the exterior portion  is more translucent. Of course, at this point, the pixels outside of the shadow have an alpha value of zero and the soft edges have a value somewhere between zero and one. This will be referred to hereinafter as the SHADOW-mask. Softening the ALPHA-mask to obtain the SHADOW-mask is illustrated by block  in .","In the embodiment illustrated in , the cursor image ( illustrated in ) and the shadow images  and  are combined to obtain a combined image . This is indicated by block  in . The combined image  is ALPHA blended to the screen of monitor , as indicated by block . Combining the images is discussed in greater detail with respect to .",{"@attributes":{"id":"p-0041","num":"0040"},"figref":"FIG. 6A"},"Therefore, in an illustrative embodiment, in order to compensate for this loss of data, the cursor AND-mask is initially expanded to a 32 bit per pixel bitmap in which invisible bits are mapped to a value of 0\u00d700000000 where, for example, the first eight most significant bits (the bits on the left of the value) are indicative of the alpha value. The visible bits in the AND-mask are mapped to a value which has a non-zero ALPHA value. During this enlarging or expansion operation, extra space is allocated along the borders of the bitmap to accommodate for data loss. The border can be implemented, as an example, as a three pixel border. Enlarging the cursor AND-mask to create the border to compensate for loss of data at the edge of the display is illustrated by block  in .","Translation of the AND-mask one values to zero and the AND-mask zero values to a non-zero alpha value is indicated by block  in .","In addition, when the ancillary image is a shadow, it must be offset from the primary image of the cursor. Of course, the offset value can be predetermined or dynamically variable. Therefore, when the cursor AND-mask is expanded to the 32 bit per pixel bitmap, the pixels are positioned within the expanded bitmap, shifted by a desired vertical and horizontal offset value.  illustrates the original AND-mask  for a cursor image which is expanded into the ALPHA-mask . It can be seen that, in the embodiment illustrated in , the ALPHA-mask is formed by providing an extra border around the AND-mask, and shifting the AND-mask downwardly and to the right, within the ALPHA-mask . Obtaining an offset value is indicated by block  in , and shifting the translated AND-mask image by the offset value to relocate the ancillary image to a desired position (i.e., to obtain the ALPHA-mask) is illustrated by block  in .","Once the ALPHA-mask is obtained in this way, it is filtered any desired number of times to obtain the SHADOW-mask, as is described above. This is indicated by block  in .","Once the SHADOW-mask has been obtained, the cursor image and the SHADOW-mask can be blended to the computer display in one of a wide variety of different ways. In one illustrative embodiment, an alpha blending function is performed using an application programming interface (API) known as the AlphaBlend supported by the WIN32 API set provided by Microsoft Corporation of Redmond, Wash. Many different types of alpha compositing operations can be performed to accomplish this. However, in one illustrative embodiment, a simple \u201csource over\u201d operation is used. In this type of compositing operation, each resulting pixel displayed is a function of a source, a current destination, and an alpha value associated with the source as follows:\n\nResult=(source*alpha)+(1\u2212alpha)*destination\u2003\u2003Equation 1\n\nwhere the source color is the color of the shadow (e.g., black) and the destination is the image on the computer screen which will reside under the image being blended to the computer screen. The areas outside of the shadow and cursor have an alpha value of zero. Therefore, it can be seen from Equation 1 that the resulting pixels will be unmodified. The umbra portion of the SHADOW-mask has the highest alpha value, so those portions of the screen will have more black blended into the resulting pixels. The areas with an intermediate alpha value (the penumbras) will have somewhat less black blended into the resulting pixel values.\n","This source over function is applied to each of the color channels as follows:\n\nResult=(source*alpha)+(1\u2212alpha)*destination\u2003\u2003Equation 2\n\nResult=(source*alpha)+(1\u2212alpha)*destination\u2003\u2003Equation 3\n\nResult=(source*alpha)+(1\u2212alpha)*destination\u2003\u2003Equation 4\n","Subscript r designates the red channel, the subscript g designates the green channel and the subscript b designates the blue channel. Therefore, sourcecorresponds to the red value for the pixel while sources and sourcecorrespond to the green and blue source values for that pixel, respectively.","The shadow can be alpha blended to the screen first and the cursor drawn on top of the blended shadow. Alternatively, the cursor and shadow can be combined into a composite image and blended to the screen in a single step.","Further, the alpha values can be pre-multiplied against the source values. Therefore, instead of storing each pixel value as (r, g, b, a), the alpha values can be premultiplied against the red, green, and blue source values such that the values stored are (a*r, a*g, a*b, a). This is advantageous because the \u201csource over\u201d operation described earlier requires these values when computing the resulting pixel.","In any case, the combined cursor and shadow image will contain completely opaque cursor pixels (which have an alpha value of one), translucent umbra and penumbra pixels (which have an alpha value between zero and one), and completely transparent pixels that are neither in the cursor nor the shadow (which have an alpha value of zero). The combined image can then be AlphaBlended to the screen in a single step using the AlphaBlend API set.",{"@attributes":{"id":"p-0052","num":"0051"},"figref":["FIG. 7","FIG. 7"]},"The term BitBlt refers to a function which transfers pixels from a specified source rectangle to a specified destination rectangle, altering the pixels according to a selected raster operation code. The supported raster operation codes include the SRCAND code which combines the colors of the source and destination rectangles by using the BOOLEAN AND operator. The SRCPAINT code combines the colors of the source and destination rectangles using the BOOLEAN OR operator.","Documentation regarding the above-described functions and APIs is available from the Microsoft Corporation of Redmond, Wash.","With this background,  can now be discussed. While  proceeds with respect to the above-described functions and APIs, it will be appreciated that this is for illustrative purposes only, and any other desired mechanism can be used to generate a composite image. Once the SHADOW-mask has been created as described above with respect to , the graphics engine performs an SRCAND function of the cursor AND-mask into the SHADOW-mask. The palette is set so that the AND-mask pixel values of zero are treated as the color transparent black (the (alpha, red, green, blue) values are (0.0, 0.0, 0.0, 0.0)) and the pixel values of one are treated as the color opaque white (the alpha, red, green, blue) values are (1.0, 1.0, 1.0, 1.0)). This combines the SHADOW-mask with the AND-mask using a logical AND function, which essentially cuts a hole in the SHADOW-mask for the opaque cursor image. In other words, where the AND-mask is visible (having a pixel value of zero), the SRCAND function results in zero, and where the AND-mask is invisible (having a pixel value of one), the SRCAND function results in the shadow remaining unchanged. This is indicated by block  in .","Next, the hole for the opaque cursor pixels is set to an alpha value of one in the SHADOW-mask by performing an SRCPAINT function of the cursor AND-mask into the SHADOW-mask. The palette is set so that the AND-mask pixel values of zero are treated as the color opaque black (the (alpha, red, green, blue) values (1.0, 1.0, 1.0, 1.0)) and the pixel values of one are treated as the color transparent black (the (alpha, red, green, blue) values are (0.0, 0.0, 0.0, 0.0)). This is indicated by block  in .","Finally, the graphics engine performs an SRCPAINT of the cursor image into the SHADOW-mask. This combines the cursor image with the SHADOW-mask using the logical OR operator to plug the cursor image into the hole left for it in the SHADOW-mask. This is indicated by block  in . It should also be noted that the composite image can be created by blending to a temporary bitmap and than simply copying the contents of the temporary bitmap to the display screen.","Of course, as discussed above, when an application is directly specifying the cursor image, it can specify the cursor image as an alpha blended ARGB image. If the cursor image is to include an ancillary image, the application can derive its own \u201cancillary\u201d image and combine that image with the original cursor image. In addition, the application can do many other things, such as provide an artist-rendered ARGB bitmap which includes an artist-rendered shadow, specify alpha values such that the cursor image is anti-aliased with no shadow, specify combined alpha and color channels to provide substantially any desired affect (such as a glow or halo around the cursor image, translucent smoke emanating from the cursor image, etc).",{"@attributes":{"id":"p-0059","num":"0058"},"figref":["FIGS. 8A\u20138C","FIG. 8A","FIG. 8A"],"b":["400","402","404","406"]},"Other embodiments are contemplated as well. For example, rather than having a fixed point light source, the point light source can emulate the sun, and can thus move from east to west (e.g., right to left) across the screen based on the time of day. In that case, the position of the shadow will change depending on the current position of the point light source and the current position of the cursor relative to the point light source. Also, of course, rather than being located at a central top region, the light source can be located at substantially any position on or off the screen such that the shadow will move about the cursor image based on its position relative to the point light source.",{"@attributes":{"id":"p-0061","num":"0060"},"figref":["FIG. 8B","FIG. 8B"],"b":["408","410","410","412"]},{"@attributes":{"id":"p-0062","num":"0061"},"figref":["FIG. 8C","FIG. 8C","FIG. 8C","FIG. 8C"],"b":["414","416","414","418"]},"Similarly properties of the shadow can be changed to indicate depth. For example, shadows on windows or icons which are deeper are more blurry. This can be done, in one illustrative embodiment, simply by controlling application of the convolution filter.","The shadow offset can also be adjusted based on the size of the cursor image. For example, when the cursor image is quite large, the offset can be increased so the offset is not overwhelmed by the cursor size. Similarly, the offset can be decreased for smaller cursors so the shadow does not appear disconnected from the cursor image.","Of course, the present invention can be used with dynamic or animated cursors as well. For example, some cursors commercially available today are dynamic or animated cursors in that they move. As one illustration, a cursor can be embodied as a galloping horse, a swinging monkey, etc. In those embodiments, the shadow or ancillary image is moved along with the dynamic or animated movement of the cursor image.","Similarly, the ancillary image need not only be a shadow. For example, the ancillary image can give the perception that the cursor image is a stained glass window and the ancillary image is an image generated by light impinging on the surface below the cursor image after the light has passed through the cursor image from the top. In that embodiment, the ancillary image is illustratively colored based on the color of the cursor. However, the ancillary image need not be opaque, as is the cursor image. In other words, if the cursor image is red, the ancillary image may be a light red tinted shadow image giving the impression of a red tint after light has passed through the red cursor image.","Similarly, the ancillary image can be one which reflects a simulated property of the cursor. In other words, if the cursor is displayed to look like a water droplet, the ancillary image can be a wavy shadow or image which gives the appearance of light impinging on a surface after it has traveled through water. In the illustrative embodiment, the ancillary image simply moves with the cursor image and is based on some characteristic or property of the cursor image.","It can thus be seen that one illustrative embodiment of the present invention provides a cursor with a shadow. This can be accomplished in any number of ways, such as by simply displaying or rendering a cursor which includes a shadow as a part of its image, or by obtaining information indicative of the cursor image and deriving the shadow based on the cursor information. Similarly, when the cursor and shadow are separately obtained or derived, they can be separately rendered on the display, or rendered as a composite image.","Other illustrative embodiments of the present invention include methods, displays and apparatus which provide cursor and associated ancillary images as ARGB bitmaps. The ancillary images can exhibit a wide variety of characteristics.","Although the present invention has been described with reference to preferred embodiments, workers skilled in the art will recognize that changes may be made in form and detail without departing from the spirit and scope of the invention."],"BRFSUM":[{},{}],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"BRIEF DESCRIPTION OF THE DRAWINGS","p":[{"@attributes":{"id":"p-0009","num":"0008"},"figref":"FIG. 1"},{"@attributes":{"id":"p-0010","num":"0009"},"figref":"FIG. 2"},{"@attributes":{"id":"p-0011","num":"0010"},"figref":"FIG. 3"},{"@attributes":{"id":"p-0012","num":"0011"},"figref":"FIG. 4A"},{"@attributes":{"id":"p-0013","num":"0012"},"figref":["FIGS. 4B\u20134D","FIG. 4A"]},{"@attributes":{"id":"p-0014","num":"0013"},"figref":"FIG. 5A"},{"@attributes":{"id":"p-0015","num":"0014"},"figref":["FIGS. 5B and 5C","FIG. 5A"]},{"@attributes":{"id":"p-0016","num":"0015"},"figref":"FIG. 6A"},{"@attributes":{"id":"p-0017","num":"0016"},"figref":["FIG. 6B","FIG. 6A"]},{"@attributes":{"id":"p-0018","num":"0017"},"figref":"FIG. 7"},{"@attributes":{"id":"p-0019","num":"0018"},"figref":"FIGS. 8A\u20138C"}]},"DETDESC":[{},{}]}
