---
title: Method and apparatus for acquiring media services available from content aggregators
abstract: A method for generating a unified list of media services available from a plurality of content aggregators having different data formats. A first list of media services from a first content aggregator is transmitted to a playback device. A second list of media services from a second content aggregator is also transmitted to the playback device, which combines both lists into a unified list of media services. The method optionally details the playback of a media service from said plurality of content aggregators via a selection made on the unified list to a playback device.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08677417&OS=08677417&RS=08677417
owner: Thomson Licensing
number: 08677417
owner_city: Boulogne-Billancourt
owner_country: FR
publication_date: 20020104
---

{"@attributes":{"id":"description"},"RELAPP":[{},{}],"p":["This application claims the benefit under 35 U.S.C. \u00a7365 of International Application PCT\/US02\/00008 filed Jan. 4, 2002, which claims the benefit of U. S. Provisional Application 60\/259,173 filed Jan. 4, 2001.","This invention is related to the field of indexing, acquiring, and playing media services, particularly media services in the form of streaming media available from a plurality of content aggregators.","Listening to radio broadcast programming, such as music, news, and talk shows, is a commonly enjoyed form of media entertainment that are typically sent as radio transmissions through the airwaves.","Radio transmissions have problems that arise due to the inherent physical limitations of using radio waves. For example, radio waves lose power the further they are from their broadcast source, whereby it becomes difficult for a receiver to reliably receive and demodulate a broadcast from a long distance. This limitation makes it difficult for listeners to receive their favorite stations if outside of a geographic region (e.g., a person who lives in Boston typically can not receive a radio broadcast from Los Angeles). Additionally, the frequencies of radio broadcasts have to be tightly controlled because the airwaves can only accommodate a finite number of electronic-magnetic waves before interference results.","The limitations of broadcasting via radio waves are overcome by using alternative broadcasting techniques. One approach transmits radio station broadcasts as satellite transmissions that are received through a satellite dish coupled to an audio decoder. Satellite broadcasts have a further geographic range than radio wave based transmissions. Also, satellite transmissions can accommodate more radio stations broadcasts than broadcasted as radio waves, by using techniques as multiplexing and data compression increasing the bandwidth efficiency of a transmission. Satellite broadcasts are limited in programming choices available, because the radio stations are selected by satellite broadcasters and broadcasting via satellite is cost prohibitive, which may underrepresent the broadcasting choices available from small media markets.","The amount of programming choices available to a listener (or viewer) has increased since the development of radio and video transmissions through a communications network such as the Internet. Radio and video services (referred to as media services) that were otherwise limited by geographic bandwidth or other constraints are broadcasted around the world via the Internet. Any user who possesses a connection to the Internet and an Internet enabled device (computer, cellular phone, MP3 music player, Internet appliance, satellite receiver) can receive a media service broadcasted in the form of streaming media. The media service is encoded and compressed, typically by a computer, into packets that conform to a transport protocol, such as TCP\/IP. The packets are routed to a listener's device through the Internet, in that software on the listener's decoding device (e.g., a computer with a media player as REALPLAYER\u2122, MACROMEDIA PLAYER\u2122, and MP3PRO\u2122) decompresses and decodes the-packets into an audio\/video signal for playback on an output device (computer, receiver, stereo, television set).","The Internet provides a listener with the ability to access thousands of media services. The music genres available to a user are equally as expansive, as a user can select to hear a sub-genre of a music genre (e.g., a rock and roll station \u201cmusic genre\u201d that plays 1980's new wave music \u201csub-genre\u201d). The listener also can manipulate the songs (media objects) or content heard into a playlist, which is organized by the preferences of the listener. These broadcasts are accessed choosing a link (uniform resource indicator URI) to a music file on a website or by using a media player that receives streaming feeds of media services. Within all of these customizable options, it is difficult for a user to find all of the media services available because the content on the Internet is chaotically organized.","One development for organizing media services available through the Internet is the use of a tuning service or a media subscription service . These type of services (alternatively known as content aggregators), such as MUSICMATCH\u2122, LIVE365\u2122, and STREAMWAVES\u2122 bring together a plurality of media services to a common point or interface (e.g., a website, a streaming media player with channels) with an architecture where a user selects media services from categories including genre and performer. A tuning service is typically proprietary to protect the copyrighted material comprising media services and requires an interface to successfully use the tuning service to playback an available media service. The restrictions of using a proprietary tuning service typically limits a user from activating media services available from different content aggregators, without switching to an additional device.","In accordance with the principles of the present invention, a method and apparatus are disclosed that enable the indexing and acquisition of media services from a plurality of content aggregators. A listing of media services is generated by the indexing of available media services from the plurality of content aggregators. The method and apparatus also describe the retrieval and output of a selected media service available from the plurality of content aggregators to a playback device.","In , a composition of media services available to a content aggregator  is shown. Audio based media services, as audio website , radio station , music service , originating as audio based feeds (e.g., music, talk radio show, streaming media files, baseball game, audio from a television program, audio books), and video station  (e.g., CNN\u00ae, ABC\u00ae, DIRECTV\u00ae) are media services available to content aggregator  through communications network  (e.g., Internet, Public Switched Telephone Network (PSTN), Local Area Network (LAN), wireless network, Digital Subscriber Line (DSL), peer to peer network). Preferably, the media services are coupled to content aggregator  via communications network  with the media services transmitted as packets conforming to a TCP\/IP protocol. Optionally, content aggregator  receives audio and video feeds that are transmitted through a wireless interface (radio frequency, microwaves, infrared) or receives media objects (e.g., audio-video files that are pre-recorded or real time feeds transmitted as streaming media) that are stored locally at the site of the content aggregator  (such as in a hard disk drive, optical storage, removable storage device, or magnetic tape).","The media services available for transmission comprise audio and video feeds. Audio website  is an Internet based website that comprises audio based media services that are transmitted in the form of streaming media or are computer files partially or completely transmitted. Optionally, the media services may purport to a type of media file format (e.g., REALAUDIO\u00ae, REALMEDIA\u00ae, APPLE QUICKTIME\u00ae, MICROSOFT\u00ae WINDOWS MEDIA\u2122 FORMAT, MPEG-2 LAYER III AUDIO, and MP3\u00ae) that is played back via a media player (REALPLAYER\u00ae, WINAMP\u00ae, and MICROSOFT\u00ae WINDOWS MEDIA\u2122 PLAYER). Radio station  is a content provider that broadcasts radio programs as audio based streamed media services. The broadcasts may be live or prerecorded. Music service  is a media service that is subscription based (e.g., MUSAK\u00ae, MUSIC CHOICE\u00ae) that broadcasts programming as an audio based media service available through the content aggregator . Video feed  is a media service that is transmitted from a television station (e.g., CNN, ABC ) or as a video service (e.g., a movie on demand) available to content aggregator .","In accordance with the principles of the present invention, content aggregator , in an alternative embodiment, exists as a web resource (e.g., website, index, catalog) that comprises Uniform Resource Indicators (URIs) that link to the location of media services. A playback program (e.g., a streaming media player) directly accesses a media service at its listed location (by using the listed link) instead of receiving the media service directly from content aggregator . Content aggregator  may comprise an index of links to the location of media services and may have media services that are transmitted directly from content aggregator .","Uniform resource indicators (URIs) are a universal set of names that refer to existing protocols or name spaces that identify resources (e.g., website, streaming media server,), services (e.g., videos on demand, internet radio), devices (e.g., mobile phone, internet enable appliance), and data files (e.g., media files and text documents). A URL is a form of a URI that expresses an address that maps to an access algorithm using network protocols (e.g., TCP\/IP or a MPEG transport scheme). When a URL is used, a specific resource, service, device, or data file may be accessed and\/or manipulated. An alternative form of a URI known as an Internet protocol number or address (IP) is a series of numbers that refers to a specific resource, service, or data file. Optionally, a URL is mapped to an IP number, typically through a Domain Name Server (DNS), that provides two ways to access a desired resource (e.g., a resource is accessed either by using the domain name www.whitehouse.gov or the IP address 198.137.240.91).",{"@attributes":{"id":"p-0026","num":"0025"},"figref":"FIG. 2","b":["202","204","102","104","106","202","102","110"]},"Playback device  communicates with content aggregator  to request a listing of media services available from content aggregator  and to receive media services selected from the list of media services. Preferably, the communications are procedural calls and requests comprising computer commands, for example hypertext markup language (HTML) or extensible markup language (XML) based requests, transported as packets adhering to a transport structure (e.g., Transmission Control Protocol\/Internet Protocol (TCP\/IP)) through communications network . The procedural calls are formatted through the use of an application programming interface (API). This interface comprises a series of functions that are used by a program or device to initiate a specific action (for example, an Internet enabled device uses an audio API to control a soundcard for the playback of an audio based media service).","Playback device , as an Internet enable device, contains hardware and software (APIs and program subroutines) for communicating and interacting with content aggregator . Preferably, playback device  comprises central processing unit (CPU) , program memory , data memory , an audio speaker , display device , and input device . CPU  (a computer processor) processes audio services received from the content aggregator , received via communications network . CPU  is coupled to data memory  that stores data received from the content congregator  and selected media services. Program memory , connected to CPU , stores programming instructions and APIs used to communicate with and process the media services obtained from content aggregator .","Display device  displays the program genres and subgenres of audio based media services available from content aggregator . Preferably, display device  is a television display, LED display, or LCD display. The genres and sub-genres are selected by using input device  by engaging a button, dial, or touch screen interface, or other tactile mechanism available on input device . CPU  requests (via a command such as a computer command or a procedural call) an audio based media service (in this example from a radio station ) through content aggregator , after the media service was selected via input device . Content aggregator  receives the request from playback device  and, in response, sends the selected media service to playback device  in the form of a packetized transmission. Playback device  processes the media service and outputs the results through connected audio speaker (loudspeaker) . In an alternative embodiment, the selected media service is video based and is outputted to display device .","Set top box  is an Internet enabled device that receives audio and video based media services from, for example, cable or broadcast television stations. Preferably, set top box  is a conduit for media services that are multi-threaded or multiplexed by set top box  to devices that are not Internet enabled (e.g., stereo receiver  and television audio output ). For example, set top box  receives a classical music based media service, which set top box  sends to stereo receiver . At the same time, set top box  receives a newscast media service that is transmitted to coupled television . Optionally, set top box  transmits audio services to an attached data network  (e.g., Ethernet network, wireless RF network, power line based network, or infrared network) that is connected to output device  (connector or audio speaker) that outputs the media services as a signal.","Multi-threading operates by set top box  dividing up its processing tasks (housekeeping tasks, data retrieval, processing data, outputting data) into a number of timeslots. Each processing task is allocated a number of timeslots. Processing tasks of a high priority (playback of a media service) receive a larger number of timeslots than other processing tasks (updating the display of available media services). The times slots as allocated in accordance with a predetermined procedure. In the current example, set top box  divides each second into ten timeslots: four timeslots are allocated for the classical music media service, four timeslots are for the newscast media service, and the remaining two timeslots are for housekeeping procedures. Set top box  then processes the media services and performs housekeeping tasks in accordance with the timeslots allocated. An embodiment of the invention supports that time slots durations may be unequal or equal amounts of time.",{"@attributes":{"id":"p-0032","num":"0031"},"figref":"FIG. 3","b":["202","204","102","202","102","110","214","102","302","202","102","202","102","202","202","102","202","102","202","202"]},"For example, a sample data structure comprises media service menus, the locations (URIs) and types of media service formats (Real Audio, Microsoft Media Player, MP3) available from the providers of the media services that correspond to a style sheet Playback device  receives the style sheet from content aggregator  and formats incoming and outgoing data accordingly. Preferably, the determination of data structure comprises a document object model (DOM) comprising three levels. Level 1 establishes the format governing the exchange of data (e.g., XML and HMTL). Level 2 controls presentation and manipulation of data being transmitted (using style sheets). Level 3 defines a content model (e.g., data variables and metadata fields) and events used for a document (function key F12 saves a document). Optionally, Multipurpose Internet Mail Extensions (MIME) compliant classes and object types are used to define the objects available. Playback device  stores data structure parameters from content aggregator  into the program memory , in step , and formats future communications with the content aggregator  accordingly.","The use of a DOM allows playback device  to support new document types and media formats as multimedia standards adjust. For example, a new content aggregator uses a new multimedia player to play back available media services. Playback device , when requesting a media service from the new content aggregator, will read the corresponding DOM and locate the new multimedia player (either by a embedded locator in the DOM or by referring to an external database). Playback device  then requests a codec (update) for the new media player, which is stored once the codec is received. The media service is ready to be outputted by playback device  using the new media player.","With the data structure parameters stored, playback device  requests a content list of media services from content aggregator  via a List_Content_Call issued by CPU , in step . As displayed in , the List_Content_Call comprises an Iradio API  that initiates an Iradio Request API  (stored in program memory ) that allocates and manages the internal resources used for the content list request. Preferably, CPU  designates operational cycles for the content list request and designates space in the data memory  for the storage of a content list. Optionally, Request API  manages multiple requests for content lists from a plurality of content aggregators , simultaneously.","CPU  then issues a HTTP processor API  subroutine that controlling the communication transmissions with content aggregator . HTTP processor API  functions in accordance with the parameters stored in step  by managing the connection, communications, and HTTP protocol exchange with the content aggregator . This includes all processing related to HTTP URI redirection, error recognition, and response classification as a standard response to a stream comprising a media service. HTTP processor API  transmits the content list request to content aggregator  via communications network . Content aggregator  responds by transmitting a content list of available media services received through HTTP processor API .","After receiving the content list, preferably in a pred termined format, CPU  initiates content adapter  routine that formats the received content list to an internal format of data and an internal data structure used by playback device . For example, CPU  uses a XML (internal format of data) based document type definition (DTD) that predefines the internal data structure (data fields) used for playback device . Data received from the content aggregator , in a XML format, is directly matched to the data fields defined by the DTD. If the data received from content aggregator  does not comply with the internal data format (XML), content adapter  formats the data into XML, preferably by the use of translation tables, and associates the formatted data into the internal data structure (DTD) of playback device . Optionally, the formatted data and data received from content aggregator  are stored in data memory . Also, the DTD is updateable (for example, an update sent as a style sheet via the Internet  overwrites an existing DTD).","XML parser  receives the XML based data from the content adapter  (or from the data memory ), and maps the XML based data to preselected menu elements that are displayed and manipulated by a user. The data mapping accomplished via a data table that indicates which variables from the internal data structure are mapped to preselected menu elements.",{"@attributes":{"id":"p-0039","num":"0038"},"figref":["FIG. 9","FIG. 10","FIG. 11"],"b":["900","202","102","1000","202","406","1100","408"]},"As an exemplary embodiment, data formatted by the XML parser , is displayed as a hierarchical menu on display device . The hierarchical menu lists fields that are either preselected or designated by a user (sample fields are media service, title, media type, performer, content aggregator source, etc.). For example, a \u201ctop\u201d level of the menu is displayed by genre (e.g., talk show, music, news, sports talk, mystery, soap opera, etc.). When a user selects a genre listed on the \u201ctop\u201d menu level via input device , content data procedure  initiated by CPU  checks data memory  if there are any sub-genres or available media services listed in association with the selected genre. Alternatively, content data procedure  issues an additional content list call  to content aggregator  for more information that is associated with the selected genre (repeating the steps discussed above). Content data procedure  generates and displays from the associated data a \u201csecond\u201d level menu listed underneath the \u201ctop\u201d level. The user then makes a selection from the \u201csecond\u201d level, and content data procedure  continues to issue content list calls , until the user selects a media service for playback.","After a media service is selected via input device  (e.g., from a hierarchical menu or a listing of available media services), CPU  issues an Iradio_Stream_Contents_call API, in step , to retrieve the selected media service from the content aggregator . The Iradio_Stream_Contents_call API, as displayed in , begins with a Stream Request Call  that determines a location of the requested media service (preferably the media service's URI) either through data returned from the Iradio_List_Content_Call (in data memory ) or through other means (e.g., as requesting the location of the media service from the content aggregator ). Optionally, Iradio_Stream_Contents_call API  supports asynchronous (multiple) requests for media services via the multithreading capability described above.","Once the location of the selected media service is known, the CPU  issues an Iradio API  that starts with the Request API  subroutine for allocating and managing resources used for the Stream Request Call . HTTP processor API  is issued, as part of Iradio API , to connect to the location of the selected media service via the communications network . The connection to the location of the media service is a direct connection (website, storage device, cellular network, etc.), a connection made through cont nt aggregator  to the location of the media service, or a connection that is redirected to the location of the media service. HTTP processor API  also manages the details of locating stream data in the response that comes from the requested media service's location. The request for a media service is preferably made as a HTTP or MIME compliant request containing information about the resources required to playback the media service (such as a media player). Along with standard HTTP redirect processing, HTTP processor API  analyzes the HTTP response header to determine whether the response is a stream, media file, or other type of multimedia format (e.g. a REALPLAYER\u00ae based stream, a non-streamed MP3 file, or a video signal). Once the determination is made, HTTP processor API  accepts data comprising the selected media service.","As the data comprising the media service is transmitted to playback device , HTTP processor  routes the data to buffer  (contained in data memory ). Buffer  preferably outputs data in a first in first out (FIFO) scheme. Optionally, buffer  comprises a plurality of memory banks that queue data in accordance with a predetermined method (e.g., shared memory, memory interleaving, memory address cycling, etc.) enabling the request and delivery of multiple media services via the multithreading capability discussed above.","Content adapter  accesses and processes the data comprising the media service that is stored in buffer . Preferably, the processing of media service data depends upon information that is contained in the response header or footer of the media service data (e.g., indicating the format of the media service, the corresponding playback application , output requirements of the media service). Processing examples performed by the content adapter  include decompressing the data, analyzing metadata in the media service data (e.g., metadata that describes the media service), or applying preselected audio or video effects.","The media service data, once processed, is sent to player application  (media player) that outputs or \u201cplays\u201d media service data in, step . The player application is a media complaint decoder (e.g., REALPLAYER, MPEG-1 Layer-3, MICROSOFT MEDIA PLAYER, QUICKTIME, MPEG-4, DivX) that decodes the media service data into a decoded audio\/video signal that is ready for output to a media device (e.g., audio speaker, video screen, audio\/video receiver, transmission device).","Player application  will keep playing the media service until the content adapter  runs out of data received from buffer  (starting playback of another media service), or the media service is terminated via a return code in step , whereby the media service is told to stop transmitting. Preferably, the return code is issued from content adapter  to HTTP processor  that sends a \u201ccancel\u201d command to the location of media service via the communications network  to terminate the transmission of media service data. The return code results from sources including, as examples, a user issuing a cancel command, an overflow\/underflow error, not enough available memory, network congestion, output device not connected, etc. Optionally, CPU  has diagnostic circuitry that recognizes an error that results in the cancellation of the transmission of a media service via a return code.","As described above, an embodiment of the invention breaks up the processing demands of service requests, I\/O (Input and Output) routines, and data conversion into distinct threads. The threads are dynamically categorized and allocated computer resources (by a predetermined method), in order to fulfill desired requests and housekeeping routines for the invention. The benefit of this approach is that requests can be processed by a system in accordance with this invention simultaneously, without the conflicts or delays induced by the processing of other requests.","In addition, the use of threads to process API requests allows application designers to choose whether or not they want to use synchronous or asynchronous interfaces to implement API services. This feature provides for APIs to be implemented within a vast majority of programs without forcing application designers to develop infrastructure around the API for managing its service characteristics.","The threads communicate with each other via a unique memory buffer queue that resides in data memory . The threads put and retrieve buffers (in data memory ) from named queues, and when done with a buffer, release the buffer to a buffer pool comprising a plurality of buffers. The buffer queue enables the invention to designate specific threads to specific buffers, optimizing the storage and access of media service data when processing multiple media services.","Access to the memory buffer queue's data structure is protected by semaphore primitives, which may be implemented as a binary flag. The use of semaphore primitives allow for the media service data to be shared across threads without corruption of the data management structures. For example, when a thread requests a buffer from the memory buffer queue, all management of data structures that track the queue buffer are performed after locking a semaphore primitive that guarantees exclusive access to the data structures.","Queue retrievals of data from the memory buffers (in data storage ), supports both a blocking and a non-blocking mode. In the blocking mode, the thread will stop processing and wait on the buffer to be presented, which could be an indeterminate amount of time. This blocking mechanism allows CPU  resources to be balanced across the threads. For example, the content adapter will process a buffer and send the buffer to the player application via a queue that empties the buffer. When the buffer is waiting to be filled, the content adapter will ignore (block) the buffer until it is filled by the I\/O thread, freeing up the content adapter to access other filled buffers. The non-blocking mode accesses a memory buffer whether it is filled or empty (reducing the content adapter's efficiency).","As described in step , the invention optionally operates in a synchronous or asynchronous mode. Preferably, in accordance with the principles of the present invention, the asynchronous mode operates with callback functions, whereby the CPU  initiates a process (API) and designates the process to a specific thread. CPU  also designates a corresponding callback function for the procedure that terminates the procedure (API) when the callback function is returned to CPU . For example, when an Iradio_List_Content_Call  (requesting a list of media services) is initiated by CPU , a thread and a callback function are issued by CPU  that corresponds to the procedure. As the thread corresponding to the procedure is executed, the callback function is passed to a pointer that responds to a predetermined condition specified for the procedure (e.g., the transmission of the content list from content aggregator  triggers the callback function back to CPU ). During this time, additional procedures run on other threads. The pointer, after the condition is met, issues a callback function to CPU  that terminates the thread executing the procedure.","Alternatively, the synchronous usage model does not utilize callback functions. The functionality is the same of the asynchronous mode, but only a single (current) procedure is run at a time, effectively blocking all other procedures until the current procedure is serviced or an error results (terminating the current procedure). CPU  begins a \u201cnew\u201d procedure after the current procedure terminates and memory space in data memory  is cleared with a release command (ReleaseRespond).",{"@attributes":{"id":"p-0054","num":"0053"},"figref":["FIG. 7","FIGS. 3 and 4"],"b":["102","702","214","214","102","214","404","102"]},"Step  entails a request for a second list of media service available from a second media content aggregator . CPU  executes a second Iradio_Set_Service call that builds a set of commands for accessing second content aggregator  (in accordance with  described above). An Iradio_Content_List call is then assigned to a second thread, which is received by second HTTP processor API  that accesses and retrieves the list of media services from second content aggregator . Optionally, the first and second HTTP processor API  are the combined into one HTTP processor unit , which may be contained within CPU .","In Step , the first HTTP processor API  performs a Get command (e.g., HTTP Get Command) used to request the list of media services from first content aggregator . Preferably, the Get command is transmitted as a HTML or XML based request.","Step  involves the response to the Get command by first content aggregator . Preferably, first content aggregator  transmits a list of media service to first HTTP processor API  that determines the integrity of the list (e.g., does the list comply with a format recognized by first HTTP processor API ?). Alternatively, if the list of media services is corrupted, the Get command (in step ) is repeated a predetermined number of times, before first HTTP processor API  times out and returns an error message to CPU . In Step , first HTTP processor API  collects data comprising the list of media services from first content aggregator and forwards the list to content adapter  for additional processing.","Step , content adapter  receives the list of media services and invokes the appropriate transformation routine (e.g., converting the received list into the internal format of the invention via lookup tables) to create a common (internal) content list data structure containing genres and sub-genres of media services. This common content list may be used to generate a viewable list of media service that is displayed on display device . Preferably, the genres and sub-genres of media services are determined by metadata within the list of media services, or by matching the metadata to an external database (e.g., CDDBT\u2122 and MUZEW\u2122). In accordance with the principles of the present invention, media services may be grouped by information (metadata) such as: media service author, date of copyright, media service date of transmission, performer, title, subject, parental rating, user rating, director, producer, running length, media service transmission locator (e.g., radio station, television station, studio, etc), content aggregator subscription, and language.","In Step , CPU  repeats steps - for a second list of media services available from second content aggregator . A second HTTP processor API  requests the second list of media services via a Get Command (step ). The second content aggregator  responds to the Get command (step ). The second HTTP processor API  collects the list of media services from second content aggregator  and forwards the second list to content adapter  for additional processing (step ). Content adapter  uses the common list data structure to match the media services listed in the second content list to genres and sub-genres of media types. The contents of the first and second content list are then indexed into a unified content list, for example under common music genres as shown in  or other types of hierarchical listings using metadata attributes, as described above.","The unified content list is presented to the user on display device . Each item in the unified content list has a content identifier that uniquely identifies the content and its source. Content adapter  passes this identifier to CPU  when a media service is selected for retrieval. CPU  then retrieves and plays back the media service, in accordance with the method described in  above.","An example of merged content selections in the form of a unified list is displayed in . The genres and the sub-genres of media services available from the content aggregators are downloaded into data memory , and are manipulated preferably by a subroutine of the XML parser . For example, a first content aggregator  has a listing of media services  grouped by music genres and related sub-genres (e.g., Jazz, a music genre, has the sub-genres of Brass, Suncoast Sound, and Trios). Second content aggregator  has a listing of media services  grouped by music genres with related sub-genres (e.g., Jazz, a music genre, with the sub-genre of Acid Jazz). XML parser  groups the related genres together and into a format shown in unified content aggregator list  (e.g., Jazz has the combined sub-genres from the two content aggregators being Acid Jazz, Brass, Suncoast Sound, and Trios). This format is then outputted to display device , and the music services are selected via input device  for playback through audio speaker .",{"@attributes":{"id":"p-0062","num":"0061"},"figref":"FIG. 8","b":["102","820","822","824","818","820","102","204","204","806"]},"Receiver  communicates via the predetermined protocol to set top box  through a network or wireless connection. Set top box  also connects to content aggregator  through communications network , whereby content aggregator  has secondary media services (e.g., streaming audio and video, MP3, compact disc music, broadcast video) available. Preferably, content aggregator  communicates to set top box  through a TCP\/IP based connection through hardware services module . Hardware services module  is a modem or other type of bidirectional communications device with serial, parallel, Ethernet, or other connecting interface. Hardware services module  also controls the video programming displayed on television  connected to set top box .","Control point , a controller (e.g., computer, microprocessor, or software driver) connected to set top box , requests a listing of media services available from content aggregator  through set top box . This request is received by ContentDirectory  that in turn issues a List_Content_Call (from step ) to the stream API , as described above in . Optionally, set top box  receives listings of media services from a plurality of content aggregators  preferably as XML or HTML based documents. The listing of the media services received by stream API  is processed and transferred to the ContentDirectory services . Additionally, the ContentDirectory service  formats the listing of media services from XML in accordance with a predetermined format and indexes the listing for access by other equipment that conform to the predetermined format.","Control point  transmits a command to set top box  to display the available media services on a display device (television ). The control point  uses the display services routines of the predetermined protocol and requests the list of media services from set top box . Also, set top box  takes delivery of the request and transfers the listing of media services residing in the ContentDirectory services . Control point  receives and formats the media service list as HTML code that is sent to hardware services  that renders the HTML for display on connected television . Preferably, the rendered HTML code is displayed as a combination of text and graphics that may be used as an electronic programming guide, as in  described above. Control point  is also enabled to control and transmit other services  such as additional media services, or Internet based material that does not come from content aggregator , such as an electronic program guide, electronic mail, and purchasing a selected media service (as a CD or cassette tape) through an online store via user selection device .","From television , a media service is selected from the listing of media services via user selection device  that transmits signals to control point . Preferably, user selection device  is remote control that uses a wire or wireless interface to communicate with control point , whereby television  displays the listing of the media services by a use of a directional pad, buttons, or knob on user selection device . Once a media service is selected with user selection device , control point  formats and sends a request for the media service to a content aggregator  via hardware services module  and communications network .","Content aggregator  receives the request for the media service and after processing the request, transmits data comprising the media service to hardware services  through communications network . Hardware services  receives data that transferred to stream API  that formats the data of the media service to an internal format utilized by set top box .","Control point  coordinates the outputting of the data comprising the media service by transmitting a request to AV transport  to output the media service to receiver . Preferably, AV transport  comprises a connection interface to an external device (as receiver ). Optionally, AV transport  comprises software that controls the transmission of data (forming the media service) residing in buffers of the stream API . AV transport  receives (from the stream API ) and formats the data comprising the media service (into predetermined signal format for output to the receiver . The signal is outputted through the connection of the AV transport  to receiver . AV transport  continuously queues the buffers of stream API  until the media selection is completely received or a user terminates the play of the selection.","Receiver  (e.g., an audio receiver) receives the output signal through AV transport  via the connection interface with set top box . AV transport  forwards the signal to hardware services  for processing. Hardware services  then transfers the processed signal to audio speaker  for audio playback. Optionally, the external device has built in tuner  that receives RF based radio signals from antenna . Tuner  demodulates and decodes radio signals for playback on the connected audio speaker . The external device automatically interrupts the playback of tuner  when hardware services  receives and outputs the processed signal. The playback of the radio signals received through tuner  is resumed when the selected media service is terminated or completed.","In accordance with the principles of the present invention, forms of other delivery systems delivering media services available from content aggregators may benefit from the present invention. For example, a satellite radio broadcast with multiple media services available may have its selections combined with the available media services through a set top box cable interface, to form a unified listing of media services."],"BRFSUM":[{},{}],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"BRIEF DESCRIPTION OF THE DRAWINGS","p":[{"@attributes":{"id":"p-0011","num":"0010"},"figref":"FIG. 1"},{"@attributes":{"id":"p-0012","num":"0011"},"figref":"FIG. 2"},{"@attributes":{"id":"p-0013","num":"0012"},"figref":"FIG. 3"},{"@attributes":{"id":"p-0014","num":"0013"},"figref":"FIG. 4"},{"@attributes":{"id":"p-0015","num":"0014"},"figref":"FIG. 5"},{"@attributes":{"id":"p-0016","num":"0015"},"figref":"FIG. 6"},{"@attributes":{"id":"p-0017","num":"0016"},"figref":"FIG. 7"},{"@attributes":{"id":"p-0018","num":"0017"},"figref":"FIG. 8"},{"@attributes":{"id":"p-0019","num":"0018"},"figref":"FIG. 9"},{"@attributes":{"id":"p-0020","num":"0019"},"figref":"FIG. 10"},{"@attributes":{"id":"p-0021","num":"0020"},"figref":"FIG. 11"}]},"DETDESC":[{},{}]}
