---
title: Methods for handling a multi-protocol content name and systems thereof
abstract: A method, computer readable medium, and system that handles a multi-protocol name in a virtualization environment includes determining and predicting with a virtualization management computing device when a name collision occurs between content names of different content accessible by two or more protocols. The virtualization management computing device restricts access to the different content in one or more network attached storage devices when the name collision is determined to occur to one or more of the protocols which can distinguish the different content. It preserves access to the different content in certain cases where the collision can be predicted.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08549582&OS=08549582&RS=08549582
owner: F5 Networks, Inc.
number: 08549582
owner_city: Seattle
owner_country: US
publication_date: 20090709
---

{"@attributes":{"id":"description"},"RELAPP":[{},{}],"p":["This application claims the benefit of U.S. Provisional Patent Application Ser. No. 61\/080,075, filed Jul. 11, 2008 which is hereby incorporated by reference in its entirety.","This invention generally relates to methods and systems for content virtualization and, more particularly to methods for handling a multi-protocol content name in a virtualization environment and systems thereof.","Often content, such as files and directories, in computer systems are remotely stored on one or more data storage devices. Multiple protocols, such as NFS and CIFS protocols, are used by these computer systems to access this content stored on these data storage devices.","Virtualization devices manage and present content stored on a plurality of data storage devices as a single, unified file system. Basically, these virtualization devices decouple the presentation of content from the actual physical location of the content to provide a single unified file system. Additionally, these virtualization devices rely on the ability to migrate data between different data storage devices as appropriate and desired for the particular application.","Unfortunately, this multi-protocol mode which these virtualization devices accommodate presents a number of challenges. More specifically, the CIFS protocol is unable to represent many NFS filenames. For example, certain characters, such as the colon \u201c:\u201d can not be used in CIFS names. As a result, virtualization devices can not produce a file generated name for some NFS filenames.","Additionally, CIFS typically is incapable of representing two files with names that differ only in their capitalization. When an NFS device creates a name that can not be represented in CIFS, the data storage system creates a special CIFS name for the file. Unfortunately, these filer-generated names (FGN) can match an already existing name of a file or directory resulting in a collision. If this occurs, when the virtualization device moves the content, such as a file or directory, between data storage devices, the content can be overwritten and lost.","A method for handling a multi-protocol name in a virtualization environment includes determining with a virtualization management computing device when a name collision occurs between content names of different content accessible by two or more protocols. The virtualization management computing device restricts access to the different content in one or more network attached storage devices when the name collision is determined to occur to one or more of the protocols which can distinguish the different content.","A computer readable medium having stored thereon instructions for methods for handling a multi-protocol content name in a virtualization environment comprising machine executable code which when executed by at least one processor, causes the processor to perform steps including determining when a name collision occurs between content names of different content accessible by two or more protocols. Access to the different content is restricted when the name collision is determined to occur to one or more of the protocols which can distinguish the different content.","A multi-protocol name handling system includes a collision determination system and a traffic management system. The collision determination system determines when a name collision occurs between content names of different content accessible by two or more protocols. The traffic management system restricts access to the different content in one or more network attached storage devices when the name collision is determined to occur to one or more of the protocols which can distinguish the different content.","Accordingly, as illustrated and described herein the present invention provides a more effective method and system for handling a multi-protocol content name in a virtualization environment. With the present invention, potential collisions between similar content names in different shares can be identified and remedial action can be taken. The present invention helps to avoid the accidental overwrite or other loss of content, such as a file or a directory, in a virtualization environment.","A system  in which a multi-protocol content name is handled in a file virtualization environment is illustrated in . This system  includes a virtualization management computing device , a plurality of client computing devices ()-() utilizing an NFS protocol, a plurality of client computing devices ()-() utilizing a CIFS protocol, data storage devices ()-(), a metadata filer system  which are all coupled together by one or more communication networks, although this system can include other numbers and types of systems, devices, components, and elements in other configurations. The present invention provides a number of advantages including providing more effective methods and system for handling a multi-protocol content name in a virtualization environment.","The virtualization management computing device  tracks content, such as files and directories, and manages multi-protocol content name handling in a virtualization environment, although other numbers and types of systems can be used and other numbers and types of functions can be performed. The virtualization management computing device  includes a central processing unit (CPU) or processor , a memory , and an interface system  which are coupled together by a bus  or other link, although other numbers and types of systems, devices, components, and elements in other configurations and locations can be used. The processor  in the virtualization management computing device  executes a program of stored instructions for one or more aspects of the present invention as described and illustrated by way of the embodiments herein, such as handling a multi-protocol content name in a virtualization environment, although other types and numbers of processing devices could be used and the processor could execute other numbers and types of programmed instructions.","The memory  in the virtualization management computing device  stores these programmed instructions for one or more aspects of the present invention as described and illustrated herein, although some or all of the programmed instructions could be stored and executed elsewhere. A variety of different types of memory storage devices, such as a random access memory (RAM) or a read only memory (ROM) in the system or a floppy disk, hard disk, CD ROM, DVD ROM, or other computer readable medium which is read from and written to by a magnetic, optical, or other reading and writing system that is coupled to processor , can be used for the memory in the virtualization management computing device .","The interface system  in the virtualization management computing device  is used to operatively couple and communicate between the virtualization management computing device  and the client computing devices ()-(), the client computing devices ()-(), the data storage devices ()-(), and the metadata filer system  via one or more the communications networks, although other types and numbers of communication networks or systems with other types and numbers of connections and configurations can be used. By way of example only, the one or more the communications networks can use TCP\/IP over Ethernet and industry-standard protocols, including NFS, CIFS, SOAP, XML, LDAP, and SNMP, although other types and numbers of communication networks, such as a direct connection, a local area network, a wide area network, modems and phone lines, e-mail, and wireless communication technology, each having their own communications protocols, can be used.","Each of the client computing devices ()-() utilizes the virtualization management computing device  and the NFS protocol to conduct one or more operations with one or more of the data storage systems ()-() and the metadata filer system , such as to store a file or directory, delete a file or directory, and create a file or directory by way of example only, although other numbers and types of systems could be utilizing these resources and other types and numbers of functions utilizing other types of protocols could be performed. Each of the client computing devices ()-() includes a central processing unit (CPU) or processor, a memory, user input device, a display, and an interface system, and which are coupled together by a bus or other link, although each of the client computing devices ()-() can include other numbers and types of components, parts, devices, systems, and elements in other configurations. The processor in each of the client computing devices ()-() executes a program of stored instructions for one or more aspects of the present invention as described and illustrated herein, although the processor could execute other numbers and types of programmed instructions.","The memory in the each of the client computing devices ()-() stores these programmed instructions for one or more aspects of the present invention as described and illustrated herein, although some or all of the programmed instructions could be stored and executed elsewhere. A variety of different types of memory storage devices, such as a random access memory (RAM) or a read only memory (ROM) in the system or a floppy disk, hard disk, CD ROM, or other computer readable medium which is read from and written to by a magnetic, optical, or other reading and writing system that is coupled to one or more processors, can be used for the memory in each of the client computing devices ()-().","The user input device in each of the client computing devices ()-() is used to input selections, such as to store a file or directory, delete a file or directory, and create a file or directory, although the user input device could be used to input other types of data and interact with other elements. The user input device can include a computer keyboard and a computer mouse, although other types and numbers of user input devices can be used. The display in each of the client computing devices ()-() is used to display information, such as the retrieved prior file or directory, although other types and amounts of information can be displayed in other manners. The display can include a computer display screen, such as a CRT or LCD screen, although other types and numbers of displays could be used.","The interface system in each of the client computing devices ()-() is used to operatively couple and communicate between the client computing devices ()-() and the virtualization management computing device , the client computing devices ()-(), the data storage devices ()-(), the metadata filer system  via the one or more communications networks, although other types and numbers of communication networks or systems with other types and numbers of configurations and connections to other systems and devices can be used.","Each of the client computing devices ()-() utilizes the virtualization management computing device  and the CIFS protocol to conduct one or more operations with one or more of the data storage systems ()-() and the metadata filer system , such as to store a file or directory, delete a file or directory, and create a file or directory by way of example only, although other numbers and types of systems could be utilizing these resources and other types and numbers of functions utilizing other types of protocols could be performed. Each of the client computing devices ()-() includes a central processing unit (CPU) or processor, a memory, user input device, a display, and an interface system, and which are coupled together by a bus or other link, although each of the client computing devices ()-() can include other numbers and types of components, parts, devices, systems, and elements in other configurations. The processor in each of the client computing devices ()-() executes a program of stored instructions for one or more aspects of the present invention as described and illustrated herein, although the processor could execute other numbers and types of programmed instructions.","The memory in the each of the client computing devices ()-() stores these programmed instructions for one or more aspects of the present invention as described and illustrated herein, although some or all of the programmed instructions could be stored and executed elsewhere. A variety of different types of memory storage devices, such as a random access memory (RAM) or a read only memory (ROM) in the system or a floppy disk, hard disk, CD ROM, or other computer readable medium which is read from and written to by a magnetic, optical, or other reading and writing system that is coupled to one or more processors, can be used for the memory in each of the client computing devices ()-().","The user input device in each of the client computing devices ()-() is used to input selections, such as to store a file or directory, delete a file or directory, and create a file or directory, although the user input device could be used to input other types of data and interact with other elements. The user input device can include a computer keyboard and a computer mouse, although other types and numbers of user input devices can be used. The display in each of the client computing devices ()-() is used to display information, such as the retrieved prior file or directory, although other types and amounts of information can be displayed in other manners. The display can include a computer display screen, such as a CRT or LCD screen, although other types and numbers of displays could be used.","The interface system in each of the client computing devices ()-() is used to operatively couple and communicate between the client computing devices ()-() and the virtualization management computing device , the client computing devices ()-(), the data storage devices ()-(), the metadata filer system  via the one or more communications networks, although other types and numbers of communication networks or systems with other types and numbers of configurations and connections to other systems and devices can be used.","Each of the data storage devices ()-() stores content, such as files and directories, and other data in multiple protocols, although other numbers and types of storage systems which could have other numbers and types of functions and store other data could be used. In this particular example, data storage device () comprises a single data storage device with two physical file systems and data storage device () comprises a single data storage device with a single physical file system, although one or more of the data storage devices ()-() could have other numbers of physical file systems or all could have the same number of physical file systems. Each physical file system has its own catalog of data backups.","Each of the data storage devices ()-() include a central processing unit (CPU) or processor, a memory, and an interface system which are coupled together by a bus or other link, although other numbers and types systems, devices, components, and elements in other configurations can be used. By way of example only, the storage systems may not have their own separate processing capabilities. In this example, the specialized processor in each of the data storage devices ()-() executes a program of stored instructions for one or more aspects of the present invention as described and illustrated by way of the embodiments herein, although the processor in each of the data storage devices ()-() could execute other numbers and types of programmed instructions.","The memory in each of the data storage devices ()-() store these programmed instructions for one or more aspects of the present invention as described and illustrated herein, although some or all of the programmed instructions could be stored and executed elsewhere. A variety of different types of memory storage devices, such as a random access memory (RAM) or a read only memory (ROM) in the system or a floppy disk, hard disk, CD ROM, DVD ROM, or other computer readable medium which is read from and written to by a magnetic, optical, or other reading and writing system that is coupled to one or more processors in each of the data storage devices ()-(), can be used for the memory in each of the data storage devices ()-().","The interface system in each of the data storage devices ()-() are each used to operatively couple and communicate between each of the data storage devices ()-() and the virtualization management computing device , the client computing devices ()-(), the client computing devices ()-(), and the metadata filer system  via one or more the communications networks, although other types and numbers of communication networks or systems with other types and numbers of configurations and connections to other systems and devices can be used.","The metadata filer system  is another type of storage device to store and manage metadata relating to a location of content, such as a file or a directory, for the virtualization management computing device , although other numbers and types of storage systems which could have other numbers and types of functions and could store other data could be used. The metadata filer system  includes a central processing unit (CPU) or processor, a memory, and an interface system which are coupled together by a bus or other link, although other numbers and types of components, parts, devices, systems, and elements in other configurations can be used for the storage system. By way of example only, the metadata filer system  may not have its own separate processing capabilities. In this example, the specialized processor in the metadata filer system  executes a program of stored instructions for one or more aspects of the present invention as described and illustrated by way of the embodiments herein, although the processor in the metadata filer system could execute other numbers and types of programmed instructions.","The memory in the metadata filer system  stores these programmed instructions for one or more aspects of the present invention as described and illustrated herein, although some or all of the programmed instructions could be stored and executed elsewhere. A variety of different types of memory storage devices, such as a random access memory (RAM) or a read only memory (ROM) in the system or a floppy disk, hard disk, CD ROM, DVD ROM, or other computer readable medium which is read from and written to by a magnetic, optical, or other reading and writing system that is coupled to the processor in the metadata filer system , can be used for the memory in the metadata filer system .","The interface system in the metadata filer system  is used to operatively couple and communicate between the metadata filer system  and the virtualization management computing device , the client computing devices ()-(), the client computing devices ()-(), and the data storage devices ()-() via the one or more communications networks, although other types and numbers of communication networks or systems with other types and numbers of configurations and connections to other systems and devices can be used.","Although embodiments of the virtualization management computing device , the plurality of client computing devices ()-(), the client computing devices ()-(), the data storage devices ()-(), and the metadata filer system  are described herein, each of these systems can be implemented on any suitable computer system or computing device. It is to be understood that the devices and systems of the embodiments described herein are for exemplary purposes, as many variations of the specific hardware and software used to implement the embodiments are possible, as will be appreciated by those skilled in the relevant art(s).","Furthermore, each of the systems of the embodiments may be conveniently implemented using one or more general purpose computer systems, microprocessors, digital signal processors, and micro-controllers, programmed according to the teachings of the embodiments, as described and illustrated herein, and as will be appreciated by those ordinary skill in the art.","In addition, two or more computing systems or devices can be substituted for any one of the systems in any embodiment of the embodiments. Accordingly, principles and advantages of distributed processing, such as redundancy and replication also can be implemented, as desired, to increase the robustness and performance of the devices and systems of the embodiments. The embodiments may also be implemented on computer system or systems that extend across any suitable network using any suitable interface mechanisms and communications technologies, including by way of example only telecommunications in any suitable form (e.g., voice and modem), wireless communications media, wireless communications networks, cellular communications networks, G3 communications networks, Public Switched Telephone Network (PSTNs), Packet Data Networks (PDNs), the Internet, intranets, and combinations thereof.","The embodiments may also be embodied as a computer readable medium having instructions stored thereon for one or more aspects of the present invention as described and illustrated by way of the embodiments herein, as described herein, which when executed by a processor, cause the processor to carry out the steps necessary to implement the methods of the embodiments, as described and illustrated herein.","An exemplary method for handling a multi-protocol content name in a virtualization environment will now be described with reference to . In step , one of the client computing devices ()-() initiates an operation relating to incoming content with an original content name with one or more of the data storage systems ()-() through the virtualization management computing device , although other types and numbers of devices and systems using other protocols and performing other operations can be used.","In step , the virtualization management computing device  determines whether an original content name for incoming content matches a generated name pattern used by the virtualization management computing device  for the one or more data storage systems ()-(), although other types and numbers of determinations for potential collisions could be used. By way of example only, if the original content name was ACOPIA\u02dc1 and the generated name pattern used by the virtualization management computing device  inserts a tilde symbol (\u02dc1) when one or more of the protocols is unable to represent the original content name, then a match is determined.","In step , the virtualization management computing device  determines whether an original content name for incoming content is not representable in one or more of the protocols used by virtualization management computing device . By way of example only, if the original content name, \u201cAcopia\u201d for the incoming content only differs from a stored content name. \u201cacopia\u201d by capitalization, then only systems and devices utilizing NFS can distinguish and separately identify this incoming content from the stored content. Systems and devices utilizing the CIFS protocol could not distinguish and separately identify this incoming content from the stored content.","If in steps  and , the virtualization management computing device  determined that the original content name does not match the generated name pattern used by the virtualization management computing device  and that the original content name is representable in all protocols then in step  the No branch is taken to step , where this method ends. If in step  the virtualization management computing device  determines the original content name matches the generated name pattern used by the virtualization management computing device , then in step  the Yes branch is taken to step . Likewise, if in step  the virtualization management computing device  determines the original content name is not representable in any of the protocols used by the virtualization management computing device , then the Yes branch is taken to step .","In step , virtualization management computing device  consults metadata filer system  to determine whether any stored content names in the same directory as the incoming content name match the generated name pattern used by the virtualization management computing device  for the one or more data storage systems ()-(). The result may be yes, no, or unknown.","In step , virtualization management computing  queries metadata filer system  to determine whether any other stored content names in the same directory as the incoming content name are not representable in one or more of the protocols used by virtualization management computing device . The result may be yes, no, or unknown.","If in steps  and , the virtualization management computing device  determined that there are no stored content names in the same directory as the incoming content name that match the generated name pattern used by virtualization management computing device  and that there are no stored content names in the same directory as the incoming content name that are not representable in all protocols, then the in step  the No branch is taken to step . If in step  the No branch is determined not to be appropriate by the virtualization management computing device , then the Yes branch is taken to step .","In step , the information regarding the incoming content name determined in steps  and  is recorded in metadata filer system . It is now available to inform future operations. This method proceeds to step , where it ends.","In step , the information regarding the incoming content name determined in steps  and  is recorded in metadata filer system . It is now available to inform future operations. This method proceeds to step .","In step , the result of step  is used. If the virtualization management computing device  determined in step  whether the original content name for incoming content matches a generated name pattern used by the virtualization management computing device  for the one or more data storage systems ()-(), the Yes branch is taken to step . If the incoming content name does not match the generated name pattern, then in step  the No branch is taken to step .","In step , the virtualization management computing device  notes that, as logically follows from earlier steps, the original name for incoming content is not representable in one or more of the protocols used by virtualization management computing device . Next, this method proceeds to step .","In step , the virtualization management computing device  provides notification by email to one of the client computing devices ()-() which is acting as an administrator of the restricted access to the content, although other manners of providing notification to other types and numbers of systems can be used. By way of example only, other manners of providing notification which could be used in this and the other notification step described herein include logging to a system log file, displaying notifications to client or graphical user interfaces, sending data via SNMP or other network protocols or building datasets containing the information via application programming interfaces (API) for administrative notification. Next, this method proceeds to step .","In step , the result of step  is used. If in step , the virtualization management computing device  determines there are no stored content names in the same directory as the incoming content name that match the generated name pattern used by the virtualization management computing device , then in step  the No branch is taken to step . If in step  the No branch is determined not to be appropriate by the virtualization management computing device , then in step  the Yes branch is taken to step .","In step , the virtualization management computing device  records on metadata filer system  that the original name for incoming content is not representable in some protocols. This name does not cause a collision because there are no other stored names for original content in the same directory that match the generated name pattern used by virtualization management computing device . Next, this method proceeds to step  where it ends.","In step , the virtualization management computing device  has predicted that a collision may occur, as there exist stored names for original content that match the generated name pattern in the same directory as the incoming name, and the incoming name is not representable in one or more supported protocols. The virtualization management computing device  attempts to prevent the impending collision from affecting access to directories contained within the directory for the incoming name. It copies all sub-directory names within the incoming name's directory that match the generated name pattern to all data storage systems ()-(). Thus, the names are allocated by virtualization management computing device , and cannot be chosen later by data storage systems ()-(). Next, this method proceeds to step .","In step , the virtualization management computing device  sends (proxies) the original incoming operation initiated by the user to one or more data storage systems ()-(). As identified earlier, the name created will not be accessible to one or more protocols supported by the virtualization management computing device  and data storage systems ()-(). However, the collision name(s) generated by the filer will not affect access to directories due to the action taken in step . If this proxy operation was not successful for any reason, this method proceeds to step  where an error is noted, and on to step  where it ends. If the proxy operation was successful, this method proceeds to step .","In step , the virtualization management computing device  communicates with data storage systems ()-() to discover the collision name generated by data storage system ()-() for the protocols (CIFS, NFS) that could not represent the original content name for incoming content.","In step  if the name is not found to collide with any existing stored content names in the same directory, then the No branch is taken to step  where this method ends. If in step  the name collides with an existing stored content name in the same directory, as obtained from metadata filer system , the Yes branch is taken to step . In step , this stored content name is marked as not representable by certain protocols in metadata filer system  and this method proceeds to step .","In step , the virtualization management computing device  provides notification by email to one of the client computing devices ()-() which is acting as an administrator of the restricted access to the content, although other manners of providing notification to other types and numbers of systems can be used as described earlier. Next, this method proceeds to step  where it ends.","In step , it has been established that the incoming name matches a generated name pattern used by the virtualization management computing device  for the one or more data storage systems ()-(). If the incoming content name is, in addition, representable by all protocols supported by virtualization management computing device  for the data storage systems ()-(), then in step  the No branch is taken to step . If the incoming content name is not representable in one or more protocols, then in step  the Yes branch is taken to step .","In step , the virtualization management computing device  notes that, as logically follows from earlier steps, the original name for incoming content matches a generated name pattern used by the virtualization management computing device  for one or more data storage systems ()-(). Next, this method proceeds to step .","In step , the result of step  is used. If in step , the virtualization management computing device  determines that all stored content names in the same directory as the incoming content name can be represented in all protocols used by the virtualization management computing device , then in step  the No branch is taken to step . If in step  the No branch is determined not to be appropriate by the virtualization management computing device , then the Yes branch is taken to step .","In step , the virtualization management computing device  records on metadata filer system  that the original name for incoming content matches the generated name pattern used by the virtualization management computing device  for one or more data storage systems ()-(). This name does not cause a collision because all stored names for original content in the same directory are representable in all protocols supported by the virtualization management computing device . Next, this method proceeds to step  where it ends.","In step , the virtualization management computing device  consults the data storage systems ()-() to determine if the incoming name for original content already exists as a name generated by the data storage systems ()-(). If in step  the virtualization management computing device  determines the name is found, then the Yes branch is taken to step  to handle the collision. If in step  the virtualization management computing device  determines the name is not found, then the No branch is taken to back to step .","In step , the results of steps  and  are used. If it is not known by consulting metadata filer system  whether the directory for the incoming name contains names that match the generated name pattern used by the virtualization management computing device  for any of the data storage systems ()-(), or if it is not known by consulting metadata filer system  if the directory for the incoming name contains names that cannot be represented in all protocols supported by virtualization management computing device , then in step  the Yes branch is taken to step . If in step  the Yes branch is determined not to be appropriate by the virtualization management computing device , then the No branch is taken to step .","In step , if the operation initiated in step  is from one of the client computing devices ()-() or client computing devices ()-() that is using the protocol for which a name has been generated by the data storage systems ()-() discovered in step , the operation must be restricted. The incoming name for original content in the client computing device's protocol conflicts with a name generated by the data storage systems ()-() for stored content in the client computing device's protocol. In step  this restriction is executed by the virtualization management computing device .","In step , the virtualization management computing device  records on metadata filer system  that the original name for incoming content is not accessible to some protocols. Next, this method proceeds to step .","In step , the virtualization management computing device  provides notification by email to one of the client computing devices ()-() which is acting as an administrator of the restricted access to the content, although other manners of providing notification to other types and numbers of systems can be used as described earlier. Next, this method proceeds back to step .","As described earlier, in step  the virtualization management computing device  restricts the operation initiated in step , as it cannot be correctly performed on data storage systems ()-().","In step , the virtualization management computing device  provides notification by email to one of the client computing devices ()-() which is acting as an administrator of the restricted access to the content, although other manners of providing notification to other types and numbers of systems can be used as described earlier. Next, this method proceeds back to step , where this method ends.","Back in step , the virtualization management computing device  queries the incoming name for original content on data storage systems ()-() to determine if it is accessible to all protocols. The method used is dependent on the protocols, however by way of example, the method is given for NFS and CIFS protocols. First, retrieve the size of the filesystem object associated with the incoming name using both protocols. If the size of the object is different, then the names refer to different objects, and the proper one is inaccessible to CIFS; proceed to step . If the sizes are the same, then the virtualization management computing device  records the last-accessed times available using CIFS and NFS. It uses the NFS protocol to change the last-accessed time of the incoming name to the current, wall-clock time. It then retrieves the last-accessed time of the object using both protocols. If the times match, then the filesystem objects are the same. Allowance must be made for differences in daylight savings time handling between the two protocols. If the times differ, the incoming names refer to different filesystem objects, and the proper one is inaccessible to CIFS clients.","In step , if the comparison from step  discovered that the incoming name for original content is accessible to all protocols supported by virtualization management computing device , then the Yes branch back to step . If the incoming name is not accessible to all protocols, then the No branch is taken back to step .","In step , the virtualization management computing device  notes that, as logically follows from earlier steps, the original name for incoming content matches a generated name pattern used by the virtualization management computing device  for the one or more data storage systems ()-() and the original name for incoming content is not representable in one or more of the protocols used by virtualization management computing device . Next, this method proceeds to step .","In step , the virtualization management computing device  provides notification by email to one of the client computing devices ()-() which is acting as an administrator of the restricted access to the content, although other manners of providing notification to other types and numbers of systems can be used as described earlier. Next, this method proceeds to step .","In step , the virtualization management computing device  has predicted that a collision may occur, as there exist stored names for original content that match the generated name pattern in the same directory as the incoming name, and the incoming name is not representable in one or more supported protocols. The virtualization management computing device  attempts to prevent the impending collision from affecting access to directories contained within the directory for the incoming name. It copies all sub-directory names within the incoming name's directory to all data storage systems ()-(). Thus, the names are allocated by virtualization management computing device , and cannot be chosen later by data storage systems ()-(). Next, this method proceeds back to step .","Accordingly, as illustrated and described herein the present invention provides a more effective method and system for handling a multi-protocol content name in a virtualization environment. With the present invention, potential collisions between similar content names in different shares can be identified and remedial action can be taken. The present invention helps to avoid the accidental overwrite or other loss of content, such as a file or a directory, in a virtualization environment.","Having thus described the basic concept of the invention, it will be rather apparent to those skilled in the art that the foregoing detailed disclosure is intended to be presented by way of example only, and is not limiting. Various alterations, improvements, and modifications will occur and are intended to those skilled in the art, though not expressly stated herein. These alterations, improvements, and modifications are intended to be suggested hereby, and are within the spirit and scope of the invention. Additionally, the recited order of processing elements or sequences, or the use of numbers, letters, or other designations therefore, is not intended to limit the claimed processes to any order except as may be specified in the claims. Accordingly, the invention is limited only by the following claims and equivalents thereto."],"BRFSUM":[{},{}],"heading":["FIELD OF THE INVENTION","BACKGROUND","SUMMARY","DETAILED DESCRIPTION"],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"BRIEF DESCRIPTION OF THE DRAWINGS","p":[{"@attributes":{"id":"p-0012","num":"0011"},"figref":"FIG. 1"},{"@attributes":{"id":"p-0013","num":"0012"},"figref":"FIG. 2"}]},"DETDESC":[{},{}]}
