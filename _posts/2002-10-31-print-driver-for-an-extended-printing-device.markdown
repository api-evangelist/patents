---
title: Print driver for an extended printing device
abstract: A print driver is provided for use in printing a document from a computing device to an extended printing device are provided, the extended printing device being based upon a base printing device. The print driver typically includes a base module configured to process at least one print operation involving printer-specific attributes of the extended printing device that are shared with the base printing device, and an interface module configured to enable an extended module to be added to the print driver to process at least one print operation involving printer-specific attributes of the extended printing device that are not shared with the base printing device.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=07106472&OS=07106472&RS=07106472
owner: Hewlett-Packard Development Company, L.P.
number: 07106472
owner_city: Houston
owner_country: US
publication_date: 20021031
---

{"@attributes":{"id":"description"},"BRFSUM":[{},{}],"heading":["FIELD OF THE INVENTION","BACKGROUND","SUMMARY","DETAILED DESCRIPTION"],"p":["The invention relates generally to printing systems and methods, and more particularly to print drivers used therein.","Most modern computer systems typically employ print drivers to moderate communications between application programs and printers. Each print driver understands a set of specialized, private commands that control the operation of a particular type of printer, as well as a set of generic or public commands that are used to communicate with the application program. Thus, the print driver acts as a translator by converting generic commands received from an application program into specialized commands for its associated printer.","The generic commands of the print driver are typically defined by the operating system. These commands are publicly provided to manufacturers of printers for use in creating print drivers, and also to application developers for use in creating applications compatible with the operating system. The specialized commands are typically developed by the printer manufacturer, and are kept as a trade secret. They are included within the print driver only in binary form, which is incomprehensible to third parties, but which enables the private commands to be exchanged between the print driver and the printer.","One problem with known print drivers is that they are time consuming and costly to develop. Another problem is that the specialized commands are not customizable by third-party vendors and manufacturers because they are only distributed in binary, unrecognizable form. Thus, each time a third-party vendor or manufacturer desires to manufacture a different printing device, it must develop a new print driver, often wasting valuable time and resources.","A print driver is provided for use in printing a document from a computing device to an extended printing device are provided, the extended printing device being based upon a base printing device. The print driver typically includes a base module configured to process at least one print operation involving printer-specific attributes of the extended printing device that are shared with the base printing device, and an interface module configured to enable an extended module to be added to the print driver to process at least one print operation involving printer-specific attributes of the extended printing device that are not shared with the base printing device.","Referring initially to , a base printing system is shown generally at . Base printing system  typically includes a base print driver having a base module containing data and functions configured to process one or more print operations related to a set of base attributes of base printing device . Since the components of system  are typically, but not always, made by a single manufacturer, they alternatively may be referred to as a manufacturer's print driver , manufacturer's module , manufacturer's printing device , etc. In the same way, all other components referred to herein as \u201cbase\u201d components should be understood to encompass manufacturer components, while components referred to below as \u201cextended\u201d components, should be understood to encompass third-party components. Typically, base module is distributed to third parties only in object code form such that the data and functions may be used by third parties, but are kept secret from the third parties by the manufacturer.","Referring now to , an extended printing system according to one embodiment of the present invention is shown generally at . Printing system  typically includes an extended printing device  which is based upon base printing device . The extended printing device  includes printer-specific attributes  including base attributes  shared with the base printing device , and extended attributes  not shared with the base printing device.","Printing system  also typically includes a print driver  having a base module  configured to process one or more print operations involving the base attributes , and an extended module  configured to process one or more print operations involving the extended attributes . Base attributes  may include a wide variety of attributes, such as user-adjustable print resolution settings (300, 600 dpi etc.) and non-user adjustable instructions for rendering graphics on the printer at each of these settings. Extended attributes  typically include attributes particular to those features of the extended printing device  which are not included in base printing device . For example, the extended attributes may include a user-adjustable lamination setting (typically set to on or off), as well as non-user-adjustable instructions for applying the lamination to each printed page. Such a lamination feature may be useful, for example, where extended printing device  is an identification (ID) card printer configured to print and laminate identification cards. Where extended printing device  is a CD printer, an extended attribute may provide for printing directly onto compact discs utilizing a dynamically generated mask that cuts and\/or shapes a print job to be printable on a compact disc.","Extended printing device  may further include dual attributes , which are processed by both base module  and extended module . One example of a dual attribute  for an extended printing device  with a lamination feature is a page PASSTHROUGH indication sent from the printing device to the computer, which indicates that a particular page of a multi-page print job has finished printing. Base module  may include functions controlling bidirectional communication between the printing device and computer, and thus may be able to pause other print operations temporarily while the extended module processes the PASSTHROUGH indication. Extended module  may include specific printer instructions regarding how to interpret the current lamination setting, and how to laminate the page itself. Because both the base and extended modules have roles to play in processing the PASSTHROUGH indication, it may be considered a dual attribute .","Typically, a manufacturer distributes base module  to a third-party manufacturer in object code form, and the third-party manufacturer incorporates base module  into extended print driver . To protect its own industrial secrets, third party manufacturer typically distributes the extended print driver  to users and other third parties with its own extended module  also in object code form, in addition to the base module .","As shown in , print driver  is typically installed on a computing device  of printing system . Computing device  also is configured to execute an application , including accessing features of an operating system via an application programming interface (API) . Print driver  is configured to respond to function calls from application  through API , and in turn process print operations related to printing a document  on extended printing device .","Print driver  and API  are configured to produce a user interface such as print dialog menu , configured to display to the user of computing device  various attributes affecting print job . As shown in , print dialog menu  typically includes a plurality of property sheets , accessible via selectors such as tabs. The property sheets display general attributes  of print job  common to all printing devices, such as the number of copies, or the page range of the document to be printed. The user may adjust values for these attributes via selectors . The property sheets further include user-adjustable printer-specific attributes , such as user-adjustable base attributes , and user-adjustable extended attributes . User-adjustable base attributes  are typically adjustable by a user via selector , while user-adjustable extended attributes  are typically adjustable via selector . It will be understood that user-adjustable base attributes  and user-adjustable extended attributes  are subsets of base attributes  and extended attributes , respectively, since not all of base attributes  and extended attributes  are typically adjustable by a user.","For example, user-adjustable base attributes  may include a user-adjustable resolution setting that may be set to 300 or 600 dots per inch (dpi). Base attributes  may further include associated non-user-adjustable printer instructions regarding how to render graphics at the 300 and 600 dpi settings. In addition, the user-adjustable extended attributes  may include a 1200 dpi setting, and extended attributes  may further include non-user-adjustable printer instructions for rendering graphics at the 1200 dpi setting. User-adjustable base attributes  may further include an \u201cecono-mode\u201d in which the printer may conserves energy, toner, and paper. Base attributes  typically include associated non-user-adjustable print instructions for printing in econo-mode. In addition, user-adjustable extended attributes  may include the lamination setting discussed above, and extended attributes  may include associated non-user-adjustable printer instruction for laminating a printed page. Further, user-adjustable extended attributes  may include a binding setting and the extended attributes may include associated non-user-adjustable instructions used in selectively causing the printing device to bind a document.","Print driver  is typically configured to process a print operation associated with the extended printing device  by selecting either or both of the base module  and\/or the extended module  to perform the print operation. As used herein, the term \u201cprint operation\u201d is used to mean virtually any process involved in printing a document to a printing device. Thus, the term is not limited to actually printing the document, but also includes adjusting settings of the printing device, pre-rendering images for printing, etc.","To select either or both of the base module and\/or the extended module for processing a print operation, the print driver typically includes an interface module  configured to moderate communication between application programming interface , base module , and extended module . The interface module  is configured to select one or both of base module  and extended module  to perform a function related to the print operation. Typically, interface module  includes a decision mechanism , such as a mapping of functions to associated modules assigned to process each function. Within each of the base and extended modules, a plurality of base functions  or extended functions  (respectively) are provided to process the function calls from interface module . Functions ,  are typically organized into function libraries, discussed below.","As shown in , each of base module , extended module , and interface module  typically includes respective function libraries and data structures, including base function libraries , base data structures , extended function libraries , extended data structures , interface function libraries , and interface data structures . As shown in , typically the interface function libraries moderate communication between the API and the base function libraries  and extended function libraries , receiving print-operation related function calls from the API and determining whether one or both of the base and\/or extended function libraries should process the function call. Responses from the base and extended function libraries are typically passed back to the API through the interface libraries.","The interface data structures  may be accessed either by the base and extended function libraries, or by the API directly. Typically, at least one of the interface data structures includes a public portion including a public data structure , as well as a private portion including base data structure  and extended data structure . The base data structure typically defines variables, and contains data useful to accomplish a function related to a base attribute, for example, rendering data at 300 dpi on printing device . The extended data structure typically defines variables and contains data useful to accomplish a function related to an extended attribute, for example, lamination of printed pages. Thus, the extended data structure may define a variable corresponding to the thickness or type of the laminate material, or the temperature or speed at which to run the laminate through a heat element of the extended printing device. According to an embodiment of the present invention in which the extended printing device  is a CD printer, the extended data structure may include data defining size and shape of the printable area of a compact disc, for example.",{"@attributes":{"id":"p-0031","num":"0030"},"figref":"FIG. 9","b":["22","22","32","12","36","22","64","56","60","36","56","46","60","50"],"i":["a ","a ","a ","a","a","a","a ","a "]},"Print driver also typically includes a plurality of printer graphics libraries, which are configured to work in conjunction with API  and perform print operations related to rendering graphics on extended printing device . The printer graphics libraries typically include an interface printer graphics library , a base printer graphics library , and an extended printer graphics library . In response to graphics-related function calls from API , interface library is configured to determine whether the call will be handled by library or , or both. Typically, base printer graphics library is configured to process graphics-related print operations that involve base attributes , while extended printer graphics library  is configured to process graphics-related print operations that involve extended attributes . For example, base printer graphics library may include routines for printing at 600 dpi, while extended printer graphics library may include routines for printing on plastic laminated surfaces, or at 1200 dpi. According to another embodiment in which the extended printing device is a CD printer, the extended printer graphics library may contain a mask function configured to cut and\/or shape a print job to print on the printable area of a compact disc.","Print driver also typically includes a plurality of language monitor libraries, which are configured to receive a data stream directed to the printer from a spooler's print processor, shown in . The language monitor libraries modify the data stream and pass it to the printer's port monitor, which in turn passes it to the port driver for the port to which the extended printing device is connected. One type of language monitor writes printer job language (PJL) commands into the data stream and reads responses out of the data stream, in order to enable bidirectional communication between the extended printing device  and the computing device . To enable the extended printing device  to include its own customized language monitor while at the same time taking advantage of the language monitor associated with base printing device , print driver typically is equipped with a base language monitor library and an extended language monitor library , described in detail below.","Print driver further includes an interface data structure  taking the form of a modified DEVMODE data structure of the Microsoft\u00ae Windows operating system. The DEVMODE data structure contains information about the device initialization and environment of a printing device. The modified DEVMODE data structure includes a public portion  containing public data structure  and a private portion  containing private data structures including base data structure  and extended data structure . Public portion  typically includes a dmSize variable  indicating the size A of the public portion of the modified DEVMODE data structure. Public portion  also includes a dmDriverExtra variable  indicating the size B of the private portion of the modified DEVMODE data structure, which contains both the base and extended data structures , . Private portion  also typically includes a dmExtendedDataSize variable  indicating the size C of the extended data structure . It should be appreciated that the definition of the variables of the base data structure is distributed to the third party manufacturer only in object code, and thus the internal structure of the base data structure  is not known to the third party manufacturer. The third party manufacturer's components access the base data structure and its variables only via base function libraries.","Typically, the base printer interface library is configured to access the public portion  of modified DEVMODE data structure , as well as the base data structure  of the private portion . The extended printer interface library is typically configured to receive modified DEVMODE data structure to determine the size of the extended data structure  from the dmThirdPartyDataSize variable , and to access the extended data structure , which immediately follows the end of the base data structure  within modified DEVMODE structure ",{"@attributes":{"id":"p-0036","num":"0035"},"figref":"FIG. 10","b":["22","34","30","80","30","12","36","66","64","56","60"],"i":["a ","a","a","a","a"]},"Once the device context is obtained from the print dialog menu, the GDI then calls a GDI rendering engine  to render the print job. GDI rendering engine  may render the print job itself, and send the data stream directly to a spooler . Or instead, the GDI rendering engine may utilize printer graphics library components , , , to render the print job and send the output to spooler . As discussed above, interface printer graphics library is configured to read the data stream and detect which commands and data should be processed by base printer graphics library , and which commands should be processed by extended printer graphics library ","Spooler  receives the output of the printer graphics library as a spool file, and performs necessary print processing via print processor . Print processor  includes a function library that is responsible for converting spooled data for a print job into a format that can be sent to port monitor . Print processor  is also responsible, for example, for handling a request from application  to pause, resume and cancel print jobs. Language monitor library components , , , may be used to monitor data streaming through the print processor , and to modify the data stream and pass it to the printer's port monitor , which in turn passes it to the port driver  for the port to which the extended printing device  is connected. These language monitor library components may simply be referred to as \u201clanguage monitors.\u201d","Spooler  typically makes function calls to the interface language monitor , which in turn makes the same function calls to each of the base language monitor and the extended language monitor . As it receives each function call from interface language monitor , extended language monitor typically determines whether the base language monitor's responses should be executed, ignored, or whether an error should be reported, as discussed in the example below, and communicates the same to interface language monitor . If the base language monitor's responses should be executed, the interface language monitor passes the responses back to the API  or otherwise causes the responses to be executed. If the base language monitor's response is to be ignored, then interface language monitor simply ignores the base language monitor's response. If an error is reported, for example, due to a conflict between the operations of the base and extended language monitors, then interface language monitor typically instructs one of the base or extended language monitors (typically base language monitor ) to hold processing temporarily. The output of extended language monitor may be sent to the port monitor . The output of the base language monitor may be sent to the port monitor either via interface monitor , or via extended language monitor ","As discussed above, one type of language monitor writes printer job language (PJL) commands into the data stream and reads responses out of the data stream, in order to enable bi-directional communication between the extended printing device and the computing device. One exemplary function that the language monitor may be used to achieve is the lamination of a page of data after it is printed. At the language monitor level, print jobs do not have information that indicates when a page of a multi-page document is finished printing. This information would be useful where the extended printing device  is configured to treat the page, by lamination, etc.","To overcome this limitation, a PASSTHROUGH command is implemented in the present extended language monitor library . The extended language monitor is configured to recognize the received from printing device  and to send an appropriate command to printing device , instructing the device to begin laminating the page.","The language monitor components interact to write data to the port monitor as follows. First, the spooler calls a WritePort command of interface language monitor library . Next, interface language monitor calls a PreWritePort function of the extended printer interface library , which causes a parser  of the extended printer interface library to parse a buffer that was sent to it by the spooler  so as to check whether a predetermined token exists in the buffer. If the token is found, then the extended printer interface library returns an EXECUTE signal. If an EXECUTE signal is returned, and a decision mechanism in the interface language monitor determines that the data should be processed by the base language monitor , then the base language monitor is instructed to read the data stream and process the language monitor-specific commands and data stored therein. If the extended printer interface library returns either IGNORE or ERROR signals, and the decision mechanism determines that the base language monitor library should process the commands, then the base language monitor will wait to complete the process, because the extended language monitor will assume that the extended language monitor is engaged in performing a conflicting process at the time. In this way, conflict between the base and extended language monitor processes may be avoided.",{"@attributes":{"id":"p-0043","num":"0042"},"figref":"FIG. 11","b":["100","100","102","104"]},{"@attributes":{"id":"p-0044","num":"0043"},"figref":"FIG. 12","b":["200","200","202","204"]},"At , the method includes, if it is determined that the function call should be processed by the base module, processing the function call using the base module. At , the method includes, if it is determined that the function call should be processed by the extended module, processing the function call using the extended module. At , the method includes, if it is determined that the function call should be processed by both the extended module and the base module, processing the function call using the both the extended module and the base module.","The function call may be made to a printer interface library of the print driver, where the printer interface library includes an interface printer interface library, a base printer interface library and an extended printer interface library, as described above. Thus, the method may further include receiving the function call at an interface printer interface library of the print driver, determining whether the function call should be processed by a base printer interface library, an extended printer interface library, or both, and processing the function call using the appropriate library or libraries.","In addition, the function call may be made to a printer graphics library of the print driver, where the printer graphics library includes an interface printer graphics library, a base printer graphics library and an extended printer graphics library, as described above. Thus, the method may further comprise receiving the function call at an interface printer graphics library of the print driver, determining whether the function call should be processed by a base printer graphics library, an extended printer graphics library, or both, and processing the function call using the appropriate library or libraries.","Finally, the print-related function call may be made between a spooler and an interface language monitor library of the print driver, where the interface library is configured to moderate communications between the spooler and the base and extended language monitor libraries. Thus, the method may further include monitoring a data stream directed to the extended printing device from a spooler using a plurality of language monitor libraries, and modifying the data stream, via the language monitor libraries, to include printer-specific commands. The method may further include monitoring the data stream from the spooler at the interface language monitor library, at least in part by parsing the data stream using a parser of a printer interface library of the print driver and detecting predetermined commands and data therein. The method may further include determining whether to process associated function calls for the predetermined commands and data using the base language monitor library, the extended language monitor library, or both. In addition, as described above, the method may additionally include detecting whether there is a conflict between two or more function calls to be processed by the base language monitor library and extended language monitor library, and if so, delaying processing of one of the function calls.","The above described embodiments may be used to provide third parties, such as original equipment manufacturers, with the ability to utilize proprietary portions of a manufacturer's print driver in a customized print driver having custom functionality created by the third party, without disclosing the proprietary secrets of the manufacturer, thereby avoiding the problem of time consuming and costly development of print drivers associated with the prior art.","Although the invention has been disclosed in its preferred forms, the specific embodiments thereof as disclosed and illustrated herein are not to be considered in a limiting sense, because numerous variations are possible. The subject matter of the invention includes all novel and non-obvious combinations and subcombinations of the various elements, features, functions, and\/or properties disclosed herein. Embodiments of the invention may comprise a computer-readable medium containing a print driver stored thereon."],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"BRIEF DESCRIPTION OF THE DRAWINGS","p":[{"@attributes":{"id":"p-0007","num":"0006"},"figref":"FIG. 1"},{"@attributes":{"id":"p-0008","num":"0007"},"figref":"FIG. 2"},{"@attributes":{"id":"p-0009","num":"0008"},"figref":["FIG. 3","FIG. 2"]},{"@attributes":{"id":"p-0010","num":"0009"},"figref":["FIG. 4","FIG. 3"]},{"@attributes":{"id":"p-0011","num":"0010"},"figref":["FIG. 5","FIG. 2"]},{"@attributes":{"id":"p-0012","num":"0011"},"figref":["FIG. 6","FIG. 2"]},{"@attributes":{"id":"p-0013","num":"0012"},"figref":["FIG. 7","FIG. 2"]},{"@attributes":{"id":"p-0014","num":"0013"},"figref":["FIG. 8","FIG. 2"]},{"@attributes":{"id":"p-0015","num":"0014"},"figref":["FIG. 9","FIG. 2"]},{"@attributes":{"id":"p-0016","num":"0015"},"figref":["FIG. 10","FIG. 2"]},{"@attributes":{"id":"p-0017","num":"0016"},"figref":"FIG. 11"},{"@attributes":{"id":"p-0018","num":"0017"},"figref":"FIG. 12"}]},"DETDESC":[{},{}]}
