---
title: Commodities framework
abstract: Various embodiments are directed to methods and systems for presenting an interface to a user. For example, a computer may receive a request for content originating from a browser application executing on a client machine in electronic communication with the at least one server. The request may identify a first commodity and a first event associated with the commodity and may comprise a Universal Resource Locator (URL) identifying the first commodity. The computer may parse a commodity descriptor file to identify a first service associated with the first commodity and the first event. The commodity descriptor file may comprise definitions of a plurality of commodities and wherein the plurality of commodities comprises the first commodity. In addition, the computer may generate a service call requesting the first service, and execute the at least one service associated with the first commodity and the first event. The at least one service may query the data source to retrieve data describing the commodity and construct a model of the commodity according to the data.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08364699&OS=08364699&RS=08364699
owner: Morgan Stanley
number: 08364699
owner_city: New York
owner_country: US
publication_date: 20091113
---

{"@attributes":{"id":"description"},"RELAPP":[{},{}],"heading":["PRIORITY CLAIM","BACKGROUND","SUMMARY","DESCRIPTION"],"p":["This application claims the benefit of U.S. Provisional Application Ser. No. 61\/114,882 filed on Nov. 14, 2008, which is incorporated herein by reference in its entirety.","Modern web applications may be built using a number of different techniques. For example, many web applications are based on a \u201cpage concept\u201d in which a web server renders one web page at a time for viewing via a client browser window. A more flexible approach for presenting content utilizes portals. A portal is a web application that aggregates content from different portlet applications within a single web page. A portlet application, or portlet, is a pluggable user interface software component that produces fragments of markup code and is visibly contained within a portlet window of the portal application. Examples of content provided by portlets include, for example, e-mail, weather reports, discussion forums and news. In addition to content aggregation, portals typically provide a greater degree of personalization and a single sign-on for accessing all of the portal content of a web page.","Portal development and deployment may entail increased complexity and cost, however. In many cases, for example, it is necessary to add one or more separate portal servers to the underlying server infrastructure. Additionally, the need to comply with specialized standards and protocols (e.g., the JSR 168 or JSR 286 Java Portlet Specifications, Web Services for Remote Portlets (WSRP)) generally requires a greater level of development and maintenance expertise and longer development times. The use of specialized standards and protocols may also limit the types of applications able to consume portlet content and the flexibility to present the content in a number of formats. Although browser-based alternatives for providing portal-like features are known (e.g., meshing), such solutions are typically unrefined and may not provide sufficient granularity.","This application is directed generally and in various embodiments to a web-based architecture for developing and deploying standalone pluggable web components that are accessible individually or in the aggregate.","Embodiments of the present application are directed generally to a web-based architecture for developing and deploying logical and self-contained pieces of information, hereinafter referred to as \u201ccommodities.\u201d A commodity is a standalone pluggable web component that is be declaratively defined using XML or a similar language and is accessible via a unique URL. A commodity is thus modular and may be similar in certain respects to a portlet. For example, a commodity may be combinable with one or more other commodities within a template-based container to define a fully integrated web page. Unlike a portlet, however, a commodity need not be associated with a container. For example, a commodity may have a unique URL such that the commodity may be directly accessed and manipulated independently from a container (e.g., as XML data, for example). In this way, depending upon the needs of a particular client, a commodity may be selectively rendered in a graphical form (e.g., HTML or Flex) or as data (e.g., XML). Additionally, accessing and displaying commodities, either individually or in the aggregate via containers, can be performed using conventional Java-based web server technologies without a need for portal servers and associated standards and protocols.","In the present application, aspects of an architectural framework for developing and deploying commodities (the \u201ccommodity framework\u201d) are described by way of example in conjunction with a \u201ctalent directory\u201d application that may be used within a business setting. In one embodiment, for example, the talent directory application may provide a web page profile for each employee in which an employee's talents (e.g., employee skills, attributes, areas of specialization) and inter-organizational relationships are represented as an aggregation of separate commodities. The talent directory application may be searchable based on one or more specified talents, and may respond to a search query with web page profiles of employees having at least one of the queried talents or relationships.",{"@attributes":{"id":"p-0020","num":"0019"},"figref":"FIG. 1","b":["5","5","10","15","15","5","5"]},{"@attributes":{"id":"p-0021","num":"0020"},"figref":"FIG. 2","b":["20","20","25","30","35","25","30","35","25","25","20","20","35","25","30"]},"In certain embodiments, the server  may be configured to communicate with one or more data sources  (e.g., databases) storing data to be accessed by the talent directory application. The data sources  may contain, for example, data describing content for populating container and\/or commodity-based documents. For example, in the context of a talent directory, the data sources  may comprise personal and professional information relating to each employee described by the talent directory Such information may include, for example, employee name, contact details, education, work experience, organizational role, hierarchical position, and e-mail group membership. Accordingly, data requested by the talent directory application may be retrieved from one or more of the data sources  by the server  for incorporation into a commodity , for example. The server  may include any suitable data server product (e.g., DB2) to support such database functionalities. Although database functionalities are described herein as being implemented by the web server , it will be appreciated that in other embodiments such functionalities may instead be implemented using one or more dedicated database servers or any data source such as, for example, one or more Lightweight Directory Access Profile (LDAP) connectors, a search engine, etc. The data source may be in communication with, but, in various embodiments, may be physically separate from, the server .",{"@attributes":{"id":"p-0023","num":"0022"},"figref":["FIG. 2A","FIG. 2","FIG. 2A"],"b":["20","25","206","208","206","208","40","202","206","208","206","208"]},{"@attributes":{"id":"p-0024","num":"0023"},"figref":["FIG. 3","FIG. 2"],"b":["25","45","50","55","60","65","45","50","55","60","65"]},"The user interface layer  may process requests received from clients  (e.g., HTTP requests) and route the requests to the web layer  using the appropriate format. Corresponding responses received from the web layer  are in turn processed by the user interface layer  and returned to the client . In certain embodiments, processing the responses includes conforming responses to browser requirements of a particular client . In one embodiment, for example, if the client's browser language is English and the client is a PC-based device, the response may be rendered in English using HTML. The user interface layer  may be configured to present documents represented by the response in any suitable format, such as, for example, JSP, XML and HTML. The user interface layer  may also be configured to control aspects of document presentation using, for example, cascading style sheets (CCS) and\/or templating framework (e.g., Tiles). Additionally, the user interface layer  may support JavaScript functionality. According to various embodiments, the user interface layer  may be implemented in any suitable building framework including, for example, rich content frameworks such as Flex, MICROSOFT SILVERLIGHT, etc.","The web layer  controls access to the application layer . In one embodiment, for example, the web layer  is implemented using the Spring model-view-controller (MVC) framework. According to such embodiments, and as shown in , the web layer  may comprise a front controller  (e.g., a DispatcherServlet) which may intercept, validate and enrich requests received from the user interface layer . Requests may subsequently be delegated to one or more controllers , which in turn communicate with the application layer  (e.g., with the commodity framework  discussed below in connection with ) and fulfill each request by returning a corresponding model and view to the front controller . In various embodiments, the model and view may be defined in terms of a model-view-controller framework, such as the Spring MVC framework. For example, one commodity may represent a business card. The business card commodity may include data describing details of the subject including, for example, a name, a title, a photograph, a department or cost center, a phone number, an indication of whether the person is present in the office, etc. Constructing a model of the example business card commodity may comprise various tasks including, for example, formatting the data, organizing the data, finding derivative data from the returned data, requesting additional data where necessary, requesting updated time-dependent data, etc. From the front controller , the model and view may be communicated to a view resolver  to render the appropriate view (e.g., a JSP, AJAX, or XML\/XSL view). The rendered view may then be routed by the front controller  to the requesting client  via the user interface layer . In certain embodiments, the Spring MVC framework may include validation functionality to perform server-side validations of requests (e.g., validation of person, group, search strings).","The application layer  includes the commodity framework  () and performs business processing aspects of the talent directory application. Logical components of the commodity framework  are illustrated in  and include a commodity descriptor  and a container descriptor . The commodity descriptor  may comprise one or more XML or similarly coded files that define the various commodities  that may be used for the web page profiles  of the talent directory application (e.g., the commodities of ). For example, the commodity descriptor  may comprise the declarative definitions of one or more commodities .","Each commodity definition may specify events that define various actions (e.g., view, update, add, delete) associated with the commodity , along with the service components that are to process the business data required by or used by the commodity . Each event may also define a view describing the manner in which the commodity will be returned by the commodity framework, . For example, the view may indicate that business data making up the commodity  should be returned in a non-graphical data format such as, for example, XML or XSL. Also, for example, the view may indicate that business data making up the commodity  should be returned according to a graphical format such as, for example, HTML or JSP. In this way, a container or other web application requesting the commodity  may be able to specify whether it will receive the commodity in a pre-formatted graphical form or as raw data that may be used or formatted in any way. In embodiments where the commodity  is to be formatted according to JSP, the commodity descriptor  may further specify the particular JSP to be used for rendering the response, along with its location.","An XML definition of a commodity  entitled \u201cBusinessCard\u201d may be represented as follows:",{"@attributes":{"id":"p-0030","num":"0029"},"tables":{"@attributes":{"id":"TABLE-US-00001","num":"00001"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"thead":{"row":{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"<commodity id=\u201cBusinessCard\u201d>"},{"entry":"\u2003<event name=\u201cview\u201d>"},{"entry":"\u2003\u2003<service name=\u201ctmService\u201d functions=\u201cqueryTmBusinessCard\u201d \/>"},{"entry":"\u2003\u2003<simpleViewSelector>"},{"entry":"\u2003\u2003\u2003<view type=\u201cdefault\u201d"},{"entry":"name=\u201ccommodity\/BusinessCard\/ViewBusinessCard\u201d\/>"},{"entry":"\u2003\u2003<\/simpleViewSelector>"},{"entry":"\u2003<\/event>"},{"entry":"<\/commodity>"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}]}}}},"br":{}},{"@attributes":{"id":"p-0031","num":"0030"},"tables":{"@attributes":{"id":"TABLE-US-00002","num":"00002"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"203pt","align":"left"}}],"thead":{"row":{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"\u2003\u2003\u2002\u2009http:\/\/directory.com\/BFServices\/tm\/webapp\/tm\/BusinessCard\/"]},{"entry":[{},"view.html?personId=268754"]},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}}]}}}},"br":{}},{"@attributes":{"id":"p-0032","num":"0031"},"tables":{"@attributes":{"id":"TABLE-US-00003","num":"00003"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"56pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"161pt","align":"left"}}],"thead":{"row":[{"entry":"TABLE 1"},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}},{"entry":["URL Component","Explanation"]},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}}]},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["\u201cdirectory.com\u201d","The name of a server to which the URL points (e.g.,"]},{"entry":[{},"the web server 25)"]},{"entry":["\u201cBFServices\u201d","A metaproject implemented by the server"]},{"entry":["\u201ctm\u201d","A project implemented by the server (e.g., classified"]},{"entry":[{},"under the metaproject)"]},{"entry":["\u201cwebapp\u201d","An indication that the URL may call a web application"]},{"entry":["\u201ctm\u201d","A context name"]},{"entry":["\u201cBusinessCard\u201d","A name of the commodity referenced by the URL"]},{"entry":["\u201cview\u201d","A name of the event called in conjunction with the"]},{"entry":[{},"commodity"]},{"entry":["\u201cpersonID\u201d","An input parameter identifying the data that should be"]},{"entry":[{},"used to populate the commodity"]},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}}]}}}}},"Another example XML definition of a commodity entitled \u201cCertifications\u201d is provided below:",{"@attributes":{"id":"p-0034","num":"0033"},"tables":{"@attributes":{"id":"TABLE-US-00004","num":"00004"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"thead":{"row":{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"<commodity id=\u201cCertifications\u201d>"},{"entry":"\u2003<event name=\u201cview\u201d>"},{"entry":"\u2003\u2003<service name=\u201ctmService\u201d"},{"entry":"functions=\u201cqueryTmCertifications\u201d\/>"},{"entry":"\u2003\u2003<simpleViewSelector>"},{"entry":"\u2003\u2003\u2002<view type=\u201cdefault\u201d"},{"entry":"\u2003\u2003\u2003\u2003\u2003name=\u201ccommodity\/Qualifications\/ViewCertifications\u201d\/>"},{"entry":"\u2003\u2003<\/simpleViewSelector>"},{"entry":"\u2003<\/event>"},{"entry":"\u2003<event name=\u201cedit\u201d>"},{"entry":"\u2003\u2003<service name=\u201ctmService\u201d functions=\u201cqueryTmCertifications\u201d"},{"entry":"\/>"},{"entry":"\u2003\u2003<simpleViewSelector>"},{"entry":"\u2003\u2003\u2003<view type=\u201cdefault\u201d"},{"entry":"\u2003\u2003\u2003\u2003\u2003name=\u201ccommodity\/Qualifications\/UpdateCertifications\u201d\/>"},{"entry":"\u2003\u2003<\/simpleViewSelector>"},{"entry":"\u2003<\/event>"},{"entry":"\u2003<event name=\u201csuggest\u201d>"},{"entry":"\u2003\u2003<service name=\u201ctmService\u201d method=\u201cexecute\u201d"},{"entry":"\u2003\u2003\u2003\u2003\u2003functions=\u201csearchTmCertifications\u201d \/>"},{"entry":"\u2003\u2003<ajaxViewSelector>"},{"entry":"\u2003\u2003\u2003<ajaxResponseName>"},{"entry":"\u2003\u2003\u2003\u2003<messageFormatter pattern=\u201c{0}\u201d"},{"entry":"directive=\u201ccertifications\u201d"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003columns=\u201ccertificationName\u201d \/>"},{"entry":"\u2003\u2003\u2003<\/ajaxResponseName>"},{"entry":"\u2003\u2003\u2003<ajaxResponseValue>"},{"entry":"\u2003\u2003\u2003\u2003<messageFormatter pattern=\u201c{0}\u201d"},{"entry":"directive=\u201ccertifications\u201d"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2002columns=\u201ccertificationId\u201d \/>"},{"entry":"\u2003\u2003\u2003<\/ajaxResponseValue>"},{"entry":"\u2003\u2003<\/ajaxViewSelector>"},{"entry":"\u2003<\/event>"},{"entry":"<\/commodity>"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}]}}}},"br":{},"b":["15","15","60","60"]},"The \u201cViewSelector\u201d fields under each event may specify the type of view that may be returned when the commodity is called with each particular event. For example, the \u201cViewSelector\u201d fields may specify a JSP or other file defining an output view. It will be appreciated that some events may be configured to result in a static output view, while others may be configured to result in a dynamic output view. For example, the \u201cedit\u201d event results in a static view type, while the \u201csuggest\u201d event results in a dynamic view that may, for example, include calls to one or more asynchronous JavaScript and XML (Ajax) applications. It will be appreciated that commodity definitions may include various other fields. For example, parameter mapping fields may map parameters received in the content request (e.g., the personID parameter from the URL above) to corresponding parameter names used by the services layer . According to various embodiments, parameters may be defined with default values. This may obviate the need to define default parameter values at the page level (e.g., in HTML, JSP, etc.).","Referring back to , the container descriptor  may comprise one or more files defining various containers (e.g., the web page profile  of ) available to the end user to view. Similar to the commodities described above, the containers may be defined in XML or a similar format. According to various embodiments, each container definition may refer to one or more commodities that are constituent parts of the container. For example, the web page profile  may have a container definition that identifies the various commodities  shown in . Container definitions may also describe layout properties for each container. According to various embodiments, each container may be accessible via a unique URL. A URL for an example container entitled \u201cQualification\u201d is given below: http:\/\/directory.com\/BFServices\/tm\/webapp\/tm\/container\/Qualification.html?personID=268754 An explanation of the URL is provided at Table 2 below:",{"@attributes":{"id":"p-0037","num":"0036"},"tables":{"@attributes":{"id":"TABLE-US-00005","num":"00005"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"63pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"154pt","align":"left"}}],"thead":{"row":[{"entry":"TABLE 2"},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}},{"entry":["URL Component","Explanation"]},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}}]},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["\u201cdirectory.com\u201d","The name of a server to which the URL points (e.g.,"]},{"entry":[{},"the web server 25)"]},{"entry":["\u201cBFServices\u201d","A metaproject implemented by the server"]},{"entry":["\u201ctm\u201d","A project implemented by the server (e.g., classified"]},{"entry":[{},"under the metaproject)"]},{"entry":["\u201cwebapp\u201d","An indication that the URL may call a web"]},{"entry":[{},"application"]},{"entry":["\u201ctm\u201d","A context name"]},{"entry":["\u201ccontainer\u201d","Signifies that the URL refers to a container"]},{"entry":["\u201cQualification.html\u201d","The name of the container being called"]},{"entry":["\u201cpersonID\u201d","An input parameter identifying the data that should"]},{"entry":[{},"be used to populate the commodity"]},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}}]}}}}},"Example definitions for the \u201cQualification\u201d container and a parent container entitled \u201cContainerBase\u201d are below:",{"@attributes":{"id":"p-0039","num":"0038"},"tables":{"@attributes":{"id":"TABLE-US-00006","num":"00006"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"203pt","align":"left"}}],"thead":{"row":{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"<container id=\u201cContainerBase\u201d abstract=\u201ctrue\u201d"]},{"entry":[{},"\u2003\u2003\u2002tile-def=\u201c.PersonContainerLayout\u201d\/>"]},{"entry":[{},"<container id=\u201cQualification\u201d"]},{"entry":[{},"\u2003\u2003\u2002titleKey=\u201ctm.container.qualification.title\u201d"]},{"entry":[{},"\u2003\u2003\u2002parent=\u201cContainerBase\u201d>"]},{"entry":[{},"\u2003\u2003\u2002<containerOutput>"]},{"entry":[{},"\u2003\u2003\u2003\u2003\u2003<commodityTarget id=\u201cviewResponsibilities\u201d"]},{"entry":[{},"\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2002commodity=\u201cResponsibilities\u201d"]},{"entry":[{},"\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2002event=\u201cview\u201d\/>"]},{"entry":[{},"\u2003\u2003\u2003\u2003\u2003<commodityTarget id=\u201cviewSME\u201d"]},{"entry":[{},"\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2002commodity=\u201cSkillsExpertise\u201d event=\u201cview\u201d\/>"]},{"entry":[{},"\u2003\u2003\u2003\u2003\u2002<commodityTarget id=\u201cviewEducation\u201d"]},{"entry":[{},"\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2002commodity=\u201cEducation\u201d event=\u201cview\u201d\/>"]},{"entry":[{},"\u2003\u2003\u2003\u2003\u2002<commodityTarget id=\u201cviewCertifications\u201d"]},{"entry":[{},"\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2002commodity=\u201cCertifications\u201d"]},{"entry":[{},"\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2002event=\u201cview\u201d\/>"]},{"entry":[{},"\u2003\u2003\u2003\u2003\u2002<commodityTarget id=\u201cviewLanguages\u201d"]},{"entry":[{},"\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2002commodity=\u201cLanguages\u201d event=\u201cview\u201d\/>"]},{"entry":[{},"\u2003\u2003\u2002<\/containerOutput>"]},{"entry":[{},"<\/container>"]},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}}]}}}},"br":{}},"Another example container definition entitled, \u201cPersonBase\u201d is reproduced below:",{"@attributes":{"id":"p-0041","num":"0040"},"tables":{"@attributes":{"id":"TABLE-US-00007","num":"00007"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"thead":{"row":{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"<container id=\u201cPersonBase\u201d abstract=\u201ctrue\u201d"},{"entry":"parent=\u201cContainerBase\u201d>"},{"entry":"\u2003\u2003\u2002<containerInput>"},{"entry":"\u2003\u2003\u2003\u2003\u2003<parameter name=\u201cpersonId\u201d\/>"},{"entry":"\u2003\u2003\u2002<\/containerInput>"},{"entry":"\u2003\u2003\u2002<containerOutput>"},{"entry":"\u2003\u2003\u2003\u2003\u2003<commodityTarget id=\u201cviewBusinessCard\u201d"},{"entry":"commodity=\u201cBusinessCard\u201d event=\u201cview\u201d\/>"},{"entry":"\u2003\u2003\u2003\u2003\u2003<containerTarget id=\u201cSearch\u201d container=\u201cQuickSearch\u201d>"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2002<parameterMapping from=\u201csearchTerm\u201d"},{"entry":"to=\u201csearchTerm\u201d \/>"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2002<parameterMapping from=\u201csearchType\u201d"},{"entry":"to=\u201csearchType\u201d \/>"},{"entry":"\u2003\u2003\u2003\u2003\u2003<\/containerTarget>"},{"entry":"\u2003\u2003\u2003\u2003\u2003<containerTarget id=\u201cContact\u201d container=\u201cContact\u201d>"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2002<parameterMapping from=\u201cpersonId\u201d to=\u201cpersonId\u201d\/>"},{"entry":"\u2003\u2003\u2003\u2003\u2003<\/containerTarget>"},{"entry":"\u2003\u2003\u2002<\/containerOutput>"},{"entry":"<\/container>"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}]}}}},"br":{}},"As shown in , the logical components of the commodity framework  may further include a definition parser component , a request handling component , a request validation component , a URL handling component , an exception resolution component , a view selection component , and a formatters and helpers component . Functions of each of these components are described below.","The commodity framework  includes defined custom XML authoring for defining and configuring objects to extend the object configuration of the web layer . For example, when JAVA is used, the objects may be JAVABEANS. To enable custom object definitions, the commodity framework  may comprise a definition parser component , which may be configured to parse the custom object definitions, create objects, and to make the created objects available in the application context. In this way, the commodity framework  may have functionality for creating new objects (e.g., commodities, containers, etc.).","The request handlers  and request validators  may comprise functionality for handling and validating requests for commodities or containers. For example, a commodity request received by the commodity framework  may specify the URL of the desired commodity. A request handler  (e.g., a commodity request handler) may parse the request URL to identify the requested commodity and event. A request validator  may then validate the existence of the requested commodity and event. If the requested commodity and\/or event does not exist, an exception is generated. The request handling component  may also assist in connection with fetching the commodity object based on the commodity name. Similar request handling and request validation components may be used to handle containers . In certain embodiments, the URL handler  may assist in connection with URL parsing and may additionally generate URL's identifying target objects specified in the commodity and container descriptors , . For example, when a container comprises a target commodity, the URL handler  may generate a URL for the commodity.","A view selector  may operate to generate the view a requested commodity based on, for example, a \u201cview\u201d parameter included in the definition of a particular commodity and described above. The commodity framework  may include view selection components to support various types of views, such as, for example, a SimpleViewSelector may support static views while an AjaxViewSelector or other selector may support dynamic views. In certain embodiments, for example, the selected view may be processed by the formatters and helpers component , which may define a number of formatter classes to format the selected view prior to being returned to the web layer .","The exception resolver component  may comprise functionality for handling exceptions generated in the commodity framework . For example, when an exception is encountered in response to a content request (e.g., a request for a container or a commodity), the commodity framework  may return a predetermined exception view in place of the requested container or commodity. According to various embodiments, exceptions may be organized into various exception classes, where different exceptions return different exception views. A general exception may be a base exception for other specific exceptions in the framework . A container exception may be specific to container components of the framework . For example, a container exception may be generated when a request handler  and\/or validator  determines that a requested container does not exist. A commodity exception may be specific to commodity components of the framework . For example, a commodity exception may be generated if a request handler  and\/or validator  determines that a requested commodity does not exist, or that the requested commodity does not define the requested event. A service exception may be an exception that originates at a component that is logically below the commodities framework . For example, a service exception may be generated at the services layer  as a service attempts to populate a commodity. In certain embodiments, custom exception handlers and pages may be defined (e.g., by the definition parser ). For example, pages may be defined declaratively as part of a commodity definition using an event type of \u201cexception.\u201d","According to various embodiments, a commodity or container may be defined to be accessible in an alternate or \u201clite\u201d context. When the commodity or container is accessed in the alternate context, the behavior of the commodity or certain features may be modified and\/or unavailable. For example, in one alternate context, a commodity or container may access data through a Lightweight Directory Application Protocol (LDAP) connection instead of from a local data source. This may be useful if the local data source is down. Also, for example, login functionality for certain functions may be disabled when a commodity or container is accessed according to the alternate context. This may be useful, for example, to implement security policy.","Referring again to , the services layer  may separate the application layer  from the data access layer  and contain business components and logic to support the commodity framework . For example, the services layer  may comprise the various services that are specified within the descriptors ,  to implement various commodities and\/or containers. The functionalities of the services layer  to be invoked are determined by, for example, the particular service\/business class and function defined in connection with a particular commodity .","The data source access layer  communicates with the one or more data sources  responsive to functions invoked within the services layer . In certain embodiments the data source access layer  includes a lightweight service framework to build business-focused functions and commodities, and to enable their delivery as open services. The service framework maps business principles with commodities. This may enable building business-focused deliverables quickly and with the ability to extend its usage and principles with quick time to market. The service framework may include one or more of the following core components: a policy\/entitlement check layer, an orchestrator layer, and a data access layer.","In certain embodiments, the orchestrator layer includes one or more orchestrator components. The orchestrator components provide high-level abstraction for loading the data by defined predicates. Additionally, the orchestrator components may hide all the details of communication to external entities. The contract between the service framework and an orchestrator component to be used may be defined, for example, in an XML description of service framework models. In certain embodiments, different types of orchestrator components, such as, for example, a data source orchestrator component, a LDAP orchestrator component, and a Verity components orchestrator component, may be used. Because the orchestrator components define a hand shake, a number of underlying implementations may be provided that, in turn, may be used to communicate with different sources.",{"@attributes":{"id":"p-0051","num":"0050"},"figref":["FIG. 3A","FIG. 3","FIGS. 3 and 4","FIG. 3A","FIG. 3A"],"b":["70","50","307","45","305","75","301","332","334","336","338"]},{"@attributes":{"id":"p-0052","num":"0051"},"figref":"FIG. 3A","b":["65","304","55","306","302","306","302","308","330","308"]},{"@attributes":{"id":"p-0053","num":"0052"},"figref":["FIG. 6","FIG. 3"],"b":["135","140","50","145","75","85","150","85","155","85","160","85","75","50","165","25"]},{"@attributes":{"id":"p-0054","num":"0053"},"figref":["FIG. 7","FIG. 1"],"b":["700","5","702","95","704","90","704","706","60"]},{"@attributes":{"id":"p-0055","num":"0054"},"figref":["FIG. 8","FIG. 2"],"b":["800","800","20","802","804","802","806","808","802","802","804","804"]},"A security application  and policy management application  may implement authorization and authentication functions for ensuring that users  are identified and given access to a proper level of functionality of the engine . For example, employees of the organization may be given a higher level of access than non-employees. Similarly, management employees may be given a higher level of access than non-management employees. A reference data management application  may manage the engine's  access to employee data.",{"@attributes":{"id":"p-0057","num":"0056"},"figref":["FIG. 9","FIGS. 1 and 2"],"b":["900","900","902","902","85","60","60","908","910","906","910","912","912","916","918","920","916","911","914"]},"The framework  may provide web page profiles as outputs to users (e.g., users ) using any suitable mechanism. For example, a publication\/subscription service (Pub\/Sub)  may push web page profiles to pub\/sub subscribers . Also, an interface  may provide web page profiles to various applications. The interface  maybe coded in any suitable format including, for example, simple object access protocol (SOAP), Representation State Transfer (REST). Likewise, a web services for remote portlets (WSRP) may provide an interface for applications supporting this capability.","It will be appreciated that the above-described embodiments are provided by way of example only, and that use of the commodity framework  is not limited to a talent directory application. Rather, it will be understood that the commodity framework  provides an attractive alternative to portal-based web applications generally in terms of complexity, scalability, and functionality. In particular, because the server  of the system  may be implemented using conventional and well-established server infrastructures and technologies, development and deployment costs are reduced relative to portal-based approaches. Additionally, the amount of code required to implement the various server functionalities (e.g., the functionalities of the layers of , for example) may be significantly less than that required for portal-based applications. Accordingly, web applications based on the commodity framework  are lightweight and faster relative to portal-based approaches, thus enhancing scalability. Moreover, the commodities  may not be limited to being exposed through the commodity framework , but may also be rendered by external applications using a number of different technologies. In certain embodiments, the external application may have its own container  and may communicate with the server  to request one or more commodities  in a data-based format (e.g., an XML format). In other embodiments, the external application may communicate to the server  to request presentation of one or more commodities  assembled in a container . Such flexibility is not available using portal-based solutions.","The examples presented herein are intended to illustrate potential and specific implementations of the present invention. It can be appreciated that the examples are intended primarily for purposes of illustration of the invention for those skilled in the art. No particular aspect or aspects of the examples are necessarily intended to limit the scope of the present invention.","It is to be understood that the figures and descriptions of the present invention have been simplified to illustrate elements that are relevant for a clear understanding of the present invention, while eliminating, for purposes of clarity, other elements. Those of ordinary skill in the art will recognize, however, that these sorts of focused discussions would not facilitate a better understanding of the present invention, and, therefore, a more detailed description of such elements is not provided herein.","Any element expressed herein as a means for performing a specified function is intended to encompass any way of performing that function, including, for example, a combination of elements that performs that function. Furthermore, the invention, as defined by such means-plus-function claims, resides in the fact that the functionalities provided by the various recited means are combined and brought together in a manner as defined by the appended claims. Therefore, any means that can provide such functionalities may be considered equivalents to the means shown herein.","In general, it will be apparent to one of ordinary skill in the art that some of the embodiments as described hereinabove may be implemented in many different embodiments of software, firmware, and\/or hardware. The software code or specialized control hardware used to implement some of the present embodiments is not limiting of the present invention. For example, the embodiments described hereinabove may be implemented in computer software using any suitable computer software language. Such software may be stored on any type of suitable computer-readable medium or media such as, for example, a magnetic or optical storage medium. Thus, the operation and behavior of the embodiments are described without specific reference to the actual software code or specialized hardware components. The absence of such specific references is feasible because it is clearly understood that artisans of ordinary skill would be able to design software and control hardware to implement the embodiments of the present invention based on the description herein with only a reasonable effort and without undue experimentation.","Moreover, the processes associated with the present embodiments may be executed by programmable equipment, such as computers. Software that may cause programmable equipment to execute the processes may be stored in any storage device, such as, for example, a computer system (nonvolatile) memory, an optical disk, magnetic tape, or magnetic disk. Furthermore, some of the processes may be programmed when the computer system is manufactured or via a computer-readable medium. Such a medium may include any of the forms listed above with respect to storage devices and may further include, for example, a carrier wave modulated, or otherwise manipulated, to convey instructions that may be read, demodulated\/decoded and executed by a computer.","It can also be appreciated that certain process aspects described herein may be performed using instructions stored on a computer-readable medium or media that direct a computer system to perform process steps. A computer-readable medium may include, for example, memory devices such as diskettes, compact discs of both read-only and read\/write varieties, optical disk drives, and hard disk drives. A computer-readable medium may also include memory storage that may be physical, virtual, permanent, temporary, semi-permanent and\/or semi-temporary. A computer-readable medium may further involve one or more data signals transmitted on one or more propagated computer-readable media.","Computer devices disclosed herein may include memory for storing certain software applications used in obtaining, processing and communicating data. It can be appreciated that such memory may be internal or external to the disclosed embodiments. The memory may also include any means for storing software, including a hard disk, an optical disk, floppy disk, ROM (read only memory), RAM (random access memory), PROM (programmable ROM), EEPROM (electrically erasable PROM), and other computer-readable media. In various embodiments of the present invention disclosed herein, a single component may be replaced by multiple components, and multiple components may be replaced by a single component, to perform a given function or functions. Except where such substitution would not be operative to practice embodiments of the present invention, such substitution is within the scope of the present invention. Any of the servers described herein, for example, may be replaced by a \u201cserver farm\u201d or other grouping of networked servers that are located and configured for cooperative functions. It can be appreciated that a server farm may serve to distribute workload between\/among individual components of the farm and may expedite computing processes by harnessing the collective and cooperative power of multiple servers. Such server farms may employ load-balancing software that accomplishes tasks such as, for example, tracking demand for processing power from different machines, prioritizing and scheduling tasks based on network demand, and\/or providing backup contingency in the event of component failure or reduction in operability.","While various embodiments of the invention have been described herein, it should be apparent, however, that various modifications, alterations and adaptations to those embodiments may occur to persons skilled in the art with the attainment of some or all of the advantages of the present invention. The disclosed embodiments are therefore intended to include all such modifications, alterations and adaptations without departing from the scope and spirit of the present invention as set forth in the appended claims."],"BRFSUM":[{},{}],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"FIGURES","p":["Various embodiments of the present invention are described here by way of example in conjunction with the following figures, wherein:",{"@attributes":{"id":"p-0007","num":"0006"},"figref":"FIG. 1"},{"@attributes":{"id":"p-0008","num":"0007"},"figref":"FIG. 2"},{"@attributes":{"id":"p-0009","num":"0008"},"figref":["FIG. 2A","FIG. 2"]},{"@attributes":{"id":"p-0010","num":"0009"},"figref":["FIG. 3","FIG. 2"]},{"@attributes":{"id":"p-0011","num":"0010"},"figref":["FIG. 3A","FIG. 3"]},{"@attributes":{"id":"p-0012","num":"0011"},"figref":["FIG. 4","FIG. 3"]},{"@attributes":{"id":"p-0013","num":"0012"},"figref":["FIG. 5","FIG. 3"]},{"@attributes":{"id":"p-0014","num":"0013"},"figref":["FIG. 6","FIG. 3"]},{"@attributes":{"id":"p-0015","num":"0014"},"figref":"FIG. 7","b":"700"},{"@attributes":{"id":"p-0016","num":"0015"},"figref":"FIG. 8"},{"@attributes":{"id":"p-0017","num":"0016"},"figref":"FIG. 9"}]},"DETDESC":[{},{}]}
