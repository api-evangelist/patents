---
title: Multiple-path remediation
abstract: A security information management system is described, wherein a database of potential vulnerabilities is maintained, along with data describing remediation techniques (patches, policy settings, and configuration options) available to protect against them. At least one vulnerability is associated in the database with multiple available remediation techniques. In one embodiment, the system presents a user with the list of remediation techniques available to protect against a known vulnerability, accepts the user's selection from the list, and executes the selected technique. In other embodiments, the system uses a predetermined prioritization schedule to automatically select among the available remediation techniques, then automatically executes the selected technique.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08266699&OS=08266699&RS=08266699
owner: SecurityProfiling Inc.
number: 08266699
owner_city: Lafayette
owner_country: US
publication_date: 20040701
---

{"@attributes":{"id":"description"},"RELAPP":[{},{}],"heading":["CROSS-REFERENCE TO RELATED APPLICATIONS","FIELD OF THE INVENTION","BACKGROUND","SUMMARY","DESCRIPTION"],"p":["This application claims the benefit of U.S. Provisional Application No. 60\/484,085 filed Jul. 1, 2003. This application is also related to applications titled REAL-TIME VULNERABILITY MONITORING Ser. No. 10\/882,852, POLICY-PROTECTION PROXY Ser. No. 10\/882,853, VULNERABILITY AND REMEDIATION DATABASE Ser. No. 10\/882,788, AUTOMATED STAGED PATCH AND POLICY MANAGEMENT Ser. No. 10\/884,329, and CLIENT CAPTURE OF VULNERABILITY DATA Ser. No. 10\/883,376, all filed on even date herewith. All of these applications are hereby incorporated herein by reference as if fully set forth.","The present invention relates to computer systems, and more particularly to management of security of computing and network devices that are connected to other such devices.","With the growing popularity of the Internet and the increasing reliance by individuals and businesses on networked computers, network security management has become a critical function for many people. Furthermore, with computing systems themselves becoming more complex, security vulnerabilities in a product are often discovered long after the product is released into general distribution. Improved methods are needed, therefore, for managing updates and patches to software systems, and for managing configurations of those systems.","The security management problem is still more complex, though. Often techniques intended to remediate vulnerabilities (such as configuration changes, changes to policy settings, or application of patches) add additional problems. Sometimes patches to an operating system or application interfere with operation of other applications, and can inadvertently disable mission-critical services and applications of an enterprise. At other times, remediation steps open other vulnerabilities in software. There is, therefore, a need for improved security management techniques.","One form of the present invention is a database of information about a plurality of devices, updated in real-time and used by an application to make a security-related decision. The database stores data indicating the installed operating system(s), installed software, patches that have been applied, system policies that are in place, and configuration information for each device. The database answers queries by one or more devices or applications attached by a network to facilitate security-related decision making. In one form of this embodiment, a firewall or router handles a connection request or maintenance of a connection based on the configuration information stored in the database that relates to one or both of the devices involved in the transmission.","For the purpose of promoting an understanding of the principles of the present invention, reference will now be made to the embodiment illustrated in the drawings and specific language will be used to describe the same. It will, nevertheless, be understood that no limitation of the scope of the invention is thereby intended; any alterations and further modifications of the described or illustrated embodiments, and any further applications of the principles of the invention as illustrated therein are contemplated as would normally occur to one skilled in the art to which the invention relates.","Generally, the present invention in its preferred embodiment operates in the context of a network as shown in . System  includes a vulnerability and remediation database  connected by Internet  to subnet . In this exemplary embodiment, firewall  serves as the gateway between Internet  and the rest of subnet . Router  directs connections between computers  and each other and other devices on Internet . Server  collects certain information and provides certain data services that will be discussed in further detail herein.","In particular, security server  includes processor , and memory  encoded with programming instructions executable by processor  to perform several important security-related functions. For example, security server  collects data from devices , , , and , including the software installed on those devices, their configuration and policy settings, and patches that have been installed. Security server  also obtains from vulnerability and remediation database  a regularly updated list of security vulnerabilities in software for a wide variety of operating systems, and even in the operating systems themselves. Security server  also downloads a regularly updated list of remediation techniques that can be applied to protect a device from damage due to those vulnerabilities. In a preferred embodiment, each vulnerability in remediation database  is identified by a vulnerability identifier, and the vulnerability identifier can be used to retrieve remediation information from database  (and from database , discussed below in relation to ).","In this preferred embodiment, computers  and  each comprise a processor , , memory , , and storage , . Computer  executes a client-side program (stored in storage , loaded into memory , and executed by processor ) that maintains an up-to-date collection of information regarding the operating system, service pack (if applicable), software, and patches installed on computer , and the policies and configuration data (including configuration files, and elements that may be contained in files, such as *.ini and *.conf files and registry information, for example), and communicates that information on a substantially real-time basis to security server . In an alternative embodiment, the collection of information is not retained on computer , but is only communicated once to security server , then is updated in real time as changes to that collection occur.","In these exemplary systems, \u201cconfiguration information\u201d for each device may take the form of initialization files (often named *.ini or *.conf), configuration registry (such as the Windows Registry on Microsoft WINDOWS operating systems), or configuration data held in volatile or non-volatile memory. Such configuration information often determines what and how data is accepted from other devices, sent to other devices, processed, stored, or otherwise handled, and in many cases determines what routines and sub-routines are executed in a particular application or operating system.","Computer  stores, loads, and executes a similar software program that communicates configuration information pertaining to computer  to security server , also substantially in real time. Changes to the configuration registry in computer  are monitored, and selected changes are communicated to security server  so that relevant information is always available. Security server  may connect directly to and request software installation status and configuration information from firewall  and router , for embodiments wherein firewall  and router  do not have a software program executing on them to communicate this information directly.","This collection of information is made available at security server , and combined with the vulnerability and remediation data from source . The advanced functionality of system  is thereby enabled as discussed further herein.","Turning to , one sees additional details and components of the devices in subnet . Computers  and  are traditional client or server machines, each having a processor , , memory , , and storage , . Firewall  and router  also have processors ,  and storage , , respectively, as is known in the art. In this embodiment, devices  and  each execute a client-side program that continuously monitors the software installation and configuration status for that device. Changes to that status are communicated in substantially real time to security server , which continuously maintains the information in database . Security server  connects directly to firewall  and router  to obtain software installation and configuration status for those devices in the absence of a client-side program running thereon.","Processors , ,  may each be comprised of one or more components configured as a single unit. Alternatively, when of a multi-component form, processor , ,  may each have one or more components located remotely relative to the others. One or more components of processor , ,  may be of the electronic variety defining digital circuitry, analog circuitry, or both. In one embodiment, processor , ,  are of a conventional, integrated circuit microprocessor arrangement, such as one or more PENTIUM 4 or XEON processors from INTEL Corporation of 2200 Mission College Boulevard, Santa Clara, Calif., 95052, USA, or ATHLON XP processors from Advanced Micro Devices, One AMD Place, Sunnyvale, Calif., 94088, USA.","Memories , ,  may include one or more types of solid-state electronic memory, magnetic memory, or optical memory, just to name a few. By way of non-limiting example, memory may include solid-state electronic Random Access Memory (RAM), Sequentially Accessible Memory (SAM) (such as the First-In, First-Out (FIFO) variety or the Last-In First-Out (LIFO) variety), Programmable Read Only Memory (PROM), Electrically Programmable Read Only Memory (EPROM), or Electrically Erasable Programmable Read Only Memory (EEPROM); an optical disc memory (such as a DVD or CD ROM); a magnetically encoded hard drive, floppy disk, tape, or cartridge media; or a combination of any of these memory types. Also, memories , ,  may be volatile, nonvolatile, or a hybrid combination of volatile and nonvolatile varieties.","In this exemplary embodiment, storage , ,  comprises one or more of the memory types just given for memories , , , preferably selected from the non-volatile types.","This collection of information is used by system  in a wide variety of ways. With reference to , assume for example that a connection request  arrives at firewall  requesting that data be transferred to computer . The payload of request  is, in this example, a probe request for a worm that takes advantage of a particular security vulnerability in a certain computer operating system. Based on characteristics of the connection request , firewall  sends a query  to security server . Query  includes information that security server  uses to determine (1) the intended destination of connection request , and (2) some characterization of the payload of connection request , such as a vulnerability identifier. Security server  uses this information to determine whether connection request  is attempting to take advantage of a particular known vulnerability of destination machine , and uses information from database  (see ) to determine whether the destination computer  has the vulnerable software installed, and whether the vulnerability has been patched on computer , or whether computer  has been configured so as to be invulnerable to a particular attack.","Security server  sends result signal  back to firewall  with an indication of whether the connection request should be granted or rejected. If it is to be granted, firewall  passes the request to router  as request , and router  relays the request as request  to computer , as is understood in the art. If, on the other hand, signal  indicates that connection request  is to be rejected, firewall  drops or rejects the connection request  as is understood in the art.","Analogous operation can protect computers within subnet  from compromised devices within subnet  as well. For example,  illustrates subnet  with computer  compromised. Under the control of a virus or worm, for example, computer  sends connection attempt  to router  in an attempt to probe or take advantage of a potential vulnerability in computer . On receiving connection request , router  sends relevant information about request  in a query  to security server . Similarly to the operation discussed above in relation to , security server  determines whether connection request  poses any threat, and in particular any threat to software on computer . If so, security server  determines whether the vulnerability has been patched, and if not, it determines whether computer  has been otherwise configured to avoid damage due to that vulnerability. Security server  replies with signal  to query  with that answer. Router  uses response  to determine whether to allow the connection attempt.","In some embodiments, upon a determination by security server  that a connection attempt or other attack has occurred against a computer that is vulnerable (based on its current software, patch, policy, and configuration status), security server  selects one or more remediation techniques from database  that remediate the particular vulnerability. Based on a prioritization previously selected by an administrator or the system designer, the remediation technique(s) are applied (1) to the machine that was attacked, (2) to all devices subject to the same vulnerability (based on their real-time software, patch, policy, and configuration status), or (3) to all devices to which the selected remediation can be applied.","In various embodiments, remediation techniques include the closing of open ports on the device; installation of a patch that is known to correct the vulnerability; changing the device's configuration; stopping, disabling, or removing services; setting or modifying policies; and the like. Furthermore, in various embodiments, events and actions are logged (preferably in a non-volatile medium) for later analysis and review by system administrators. In these embodiments, the log also stores information describing whether the target device was vulnerable to the attack.","A real-time status database according to the present invention has many other applications as well. In some embodiments, the database  is made available to an administrative console running on security server  or other administrative terminal. When a vulnerability is newly discovered in software that exists in subnet , administrators can immediately see whether any devices in subnet  are vulnerable to it, and if so, which ones. If a means of remediation of the vulnerability is known, the remediation can be selectively applied to only those devices subject to the vulnerability.","In some embodiments, the database  is integrated into another device, such as firewall  or router , or an individual device on the network. While some of these embodiments might avoid some failures due to network instability, they substantially increase the complexity of the device itself. For this reason, as well as the complexity of maintaining security database functions when integrated with other functions, the network-attached device embodiment described above in relation to  is preferred.","In a preferred embodiment, a software development kit (SDK) allows programmers to develop security applications that access the data collected in database . The applications developed with the SDK access information using a defined application programming interface (API) to retrieve vulnerability, remediation, and device status information available to the system. The applications then make security-related determinations and are enabled to take certain actions based on the available data.","In the preferred embodiment, database  includes vulnerability and remediation information such that, for at least one vulnerability, multiple methods of remediating the vulnerability are specified. When the system has occasion to implement or offer remediation of a vulnerability, all known alternatives are presented that are relevant to the device or machine's particular configuration or setup. For example, when a vulnerability of a device is presented to an administrator, the administrator is given a choice among the plurality of remediation options to remediate the vulnerability. In some embodiments, the administrator can select a preferred type of remediation that will be applied if available and a fallback type. For example, an administrator may select application of a policy setting over installation of a software patch, so that the risk of disruption of critical business systems is minimized.","In other embodiments, an administrator or other user is presented with a set of user interface elements that identify multiple options for remediating and identifying the vulnerability. The administrator or user selects the method to be used, and that remediation is applied to the vulnerable device(s).","All publications, prior applications, and other documents cited herein are hereby incorporated by reference in their entirety as if each had been individually incorporated by reference and fully set forth.","While the invention has been illustrated and described in detail in the drawings and foregoing description, the same is to be considered as illustrative and not restrictive in character, it being understood that only the preferred embodiments have been shown and described and that all changes and modifications that would occur to one skilled in the relevant art are desired to be protected."],"BRFSUM":[{},{}],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"BRIEF DESCRIPTION OF THE DRAWINGS","p":[{"@attributes":{"id":"p-0007","num":"0006"},"figref":"FIG. 1"},{"@attributes":{"id":"p-0008","num":"0007"},"figref":["FIG. 2","FIG. 1"]},{"@attributes":{"id":"p-0009","num":"0008"},"figref":["FIGS. 3 and 4","FIGS. 1 and 2"]}]},"DETDESC":[{},{}]}
