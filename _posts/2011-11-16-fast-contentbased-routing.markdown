---
title: Fast content-based routing
abstract: Systems and methods for fast, efficient content-based routing that allow a router to perform true content-based routing without having to de-serialize the data and apply a full content-based filter by determining the exact set of consumers to forward the data onto based on packet headers. A system for fast content-based routing may receive a subscription from a receiver machine and may assign a unique ID associated with the subscription in a router table. The system may then place a ID associated with a particular subscription in a message header if the message corresponds to the subscription. The system may then analyze the router table to determine one or more receiver machines associated with the ID in the header of the message. The system may then send, from a sender machine to one or more receiver machines, one or more messages containing the ID in the header of the message.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08732320&OS=08732320&RS=08732320
owner: TIBCO Software Inc.
number: 08732320
owner_city: Palo Alto
owner_country: US
publication_date: 20111116
---

{"@attributes":{"id":"description"},"RELAPP":[{},{}],"heading":["CROSS REFERENCE TO RELATED APPLICATIONS","TECHNICAL FIELD","BACKGROUND","SUMMARY","DETAILED DESCRIPTION"],"p":["This application relates and claims priority to U.S. Provisional Patent Application No. 61\/538,645 entitled \u201cFast content-based routing,\u201d filed on Sep. 23, 2011, and U.S. Provisional Patent Application No. 61\/414,327 entitled \u201cFast matching for content-based addressing,\u201d filed on Nov. 16, 2010, both of which are hereby incorporated by reference in their entirety.","The disclosed embodiments relate generally to content-based routing and, more specifically, relate to processes and systems for efficient content-based routing avoiding repetitive content-based matching by extracting information from a header field of a message in the context of a message-oriented middleware system.","Known content-based routing messages are based on the actual content of the message itself, rather than by a destination specified by the message. Content-based routing works by opening a message and applying a set of routing rules to the message's content to determine its destination. Because the sending machine does not need to know the message's destination, content-based provides a high degree of flexibility and adaptability to change. However, it may be computationally expensive to search the entire content of every message each time a message is to be routed. The need has arisen to provide a system and method to perform fast, efficient content-based routing. Accordingly, systems and methods are desired that allow a router to perform true content-based routing without having to de-serialize the data and apply a full content-based filter by determining the exact set of consumers to forward the data onto based on packet headers.","Disclosed are systems and methods for fast content-based routing. Systems and methods for fast content-based routing may receive a subscription from a receiver machine and may assign a unique subscription ID associated with the subscription in a router table. The systems and methods may then place a subscription ID associated with a particular subscription in a message header if the message corresponds to the subscription. The systems and methods may then analyze the router table to determine one or more receiver machines associated with the subscription ID in the header of the message. The systems and methods may then send, from a sender machine to one or more receiver machines, one or more messages containing the subscription ID in the header of the message.","The present disclosure provides several important technical advantages. The disclosed systems and methods allow a router to perform true content-based routing without having to de-serialize the data and apply a full content-based filter by determining the exact set of consumers to forward the data onto based on message headers. Fast content-based routing may be more efficient than fast matching for content-based addressing because a system for fast content-based routing does not require a matching tree to be built. A system for fast content-based routing may place one or more subscription IDs in a message header, the subscription IDs corresponding to a subscription from a consumer. The system may then route those messages containing a subscription ID corresponding to a subscription request from a sender machine to one or more receiver machines.",{"@attributes":{"id":"p-0025","num":"0024"},"figref":["FIG. 1A","FIG. 1E"],"b":["100","100"]},"Referring now to , system  may include a sender machine , a receiver machine , and message-based middleware servers , . For purposes of example and explanation, the present disclosure describes the type of ordering as canonical, but any appropriate type of ordering may be used to achieve the results of the present disclosure. The queries may be sorted in numerical order, reverse numerical order, alphabetical order, reverse alphabetical order, or any other ordering system that may allow for fields to be searched in the same order.","Sender machine  may include a message application  for generating a message with content-based addressing to be sent to message-based middleware servers , . Message-based middleware servers ,  may evaluate the content-based addressing to determine whether to send the message to receiver machine . Message application  may include a message processing engine  for processing content-based addressing data, content, fields, and formatting information for a message to be sent to receiver machine . Message application  may also include an application programming interface (\u201cAPI\u201d)  as an interface for message-based middleware servers , . While illustrated as a single sender machine  in , system  may comprise more than one sender machine  in communication with message-based middleware servers , . Although described as sender machine  in , sender machine  may receive and process queries in some embodiments. Sender machine  may also include an assignment table , which will be described in more detail in .","Receiver machine  may include a query application  for generating a query to be sent to message-based middleware servers ,  for matching against the content-based addressing messages sent by sender machine . A query may be a request originating from the receiver machine  such as, by way of example, a request to return all content-based addressing messages that include a field node A with a value of 1 and a field node of B with a value of 4. Query application  may further include a query processing engine  for processing query information, data, fields, and formatting information for a given query or set of queries. Query application  may also include an application programming interface (\u201cAPI\u201d)  as an interface to message-based middleware servers , . While illustrated as a single receiver machine  in , system  may comprise more than one receiver machine  in communication with message-based middleware server , . Although described as receiver machine  in , receiver machine  may generate and send messages in some embodiments.","The sender machine  and the receiver machine  may be in communication with message-based middleware servers , . Although  depicts each of message-based middleware servers ,  as a single server, there may be multiple middleware servers , . A first message-based middleware servers  may include router table , while a second message-based middleware server  may include message-based middleware , which will be described in more detail in .","Referring now to , in a second embodiment, sender machine  and receiver machine  may communicate directly with each other through peer-to-peer (P2P) communications over network . In the P2P configuration, sender machine  may comprise a router and router table  located within sender machine . Receiver machine  may also comprise a router located within the receiver machine . While only one sender machine  and one receiver machine  are shown in , system  may comprise any number of sender machines  and any number of receiver machines  in direct communication with each other over the P2P network . Many sender machines  may be in contact with many receiver machines  over the P2P network .","In both  and , network  may represent any form of communication network supporting circuit-switched, packet-based, and\/or any other suitable type of communications between sender machine , receiver machine , and message-based middleware servers , , and any other elements in . Network  may additionally include any other nodes of system  capable of transmitting and\/or receiving information over a communication network. Although shown in  as a single element, network  may represent one or more separate networks (including all or parts of various different networks) that are separated and serve different respective elements illustrated in . Network  may include routers, hubs, switches, firewalls, content switches, gateways, call controllers, and\/or any other suitable components in any suitable form or arrangement. Network  may include, in whole or in part, one or more secured and\/or encrypted Virtual Private Networks (VPNs) operable to couple one or more network elements together by operating or communicating over elements of a public or external communication network. In general, network  may comprise any combination of public or private communication equipment such as elements of the public switched telephone network (PSTN), a global computer network such as the Internet, a local area network (LAN), a wide area network (WAN), or other appropriate communication equipment. In some embodiments, network  may not be used if all of the components are located on the same machine.","System  may comprise sender machine , receiver machine , and in some embodiments, message-based middleware servers , , each of which may be any suitable computing device comprising a processor and a memory to perform the described functionality. Sender machine , receiver machine , and message-based middleware servers ,  may comprise one or more machines, workstations, laptops, blade servers, server farms, and\/or stand-alone servers. Sender machine , receiver machine , and message-based middleware servers ,  may include any hardware and\/or controlling logic used to communicate information to and from one or more elements illustrated in . For example, sender machine , receiver machine , and message-based middleware servers ,  may be operable to receive and process data of different types that may be transmitted via different protocols or formats. Other elements in  may also comprise hardware and\/or controlling logic to communicate information to and from one or more elements illustrated in .","Memory may store any suitable information. Memory may comprise any collection and arrangement of volatile and\/or non-volatile components suitable for storing data. For example, memory may comprise random access memory (RAM) devices, read only memory (ROM) devices, magnetic storage devices, optical storage devices, and\/or any other suitable data storage devices. In particular embodiments, memory may represent, in part, computer-readable storage media on which computer instructions and\/or logic are encoded. Memory may represent any number of memory components within, local to, and\/or accessible by processor. Processor may represent and\/or include any form of processing component, including general purpose computers, dedicated microprocessors, or other processing devices capable of processing electronic information. Examples of processor include digital signal processors (DSPs), application-specific integrated circuits (ASICs), field-programmable gate arrays (FPGAs), and any other suitable specific or general purpose processors.","Fast Content-based Routing","Content based routing routes messages based on the actual content of the message itself, rather than by a destination specified by the message. Content-based routing works by opening a message and applying a set of routing rules to the content of the message to determine its destination. Because the sending machine does not need to know the message's destination, content-based provides a high degree of flexibility and adaptability to change. Advantageously, fast content-based routing may be more efficient than fast matching for content-based addressing because a system for fast content-based routing does not require a matching tree to be built.","A system for fast content-based routing may place one or more subscription IDs in a message header, the subscription IDs associated with a particular subscription from a consumer. The system may then route those messages containing a subscription ID corresponding to a subscription request from a sender machine to one or more receiver machines. In an embodiment, the subscription ID may be an integer, although the subscription ID may also be numeric, alphabetic, or alphanumeric.","System  may be configured to forward messages  from message producers associated with one or more sender machines  to message consumers associated with one or more receiver machines . A consumer may have specific kinds of data that they are interested in receiving and may communicate that interest from receiver machine  to sender machine . The specific data may be a subset of the totality of data published by all producers at every sender machine  associated with the system . Consumers may be able to express interest in specific content by using a filter, which, when applied to one or more messages  originating at sender machines , may select only those messages  that contain such content to send to the consumers associated with receiver machines . Although the illustrated embodiment in  includes only one consumer associated with one receiver machine  and one producer associated with one sender machine , system  may have many producers and consumers. Each consumer may subscribe to many filters and\/or subscriptions.","In order to avoid requiring that all consumers to be directly associated with all producers, one or more intermediaries (e.g., middleware servers , ) may be utilized as one or more routers. The producers and the consumers may associate through the routers in middleware servers ,  in an embodiment, or directly between sender machine  and receiver machine  through one or more internal routers in a separate embodiment. The routers may ensure that content data is forwarded only to interested consumers. To perform their work efficiently, routers are frequently organized in a network such as network . Content messages  may be forwarded throughout the network by the routers, ensuring that as data is forwarded, it may be forwarded to only interested consumers. If there is no matching interest downstream, the routers may not forward the data.","System  may allow for faster, more efficient content-based routing by allowing routing decisions to be made without having to examine the content of message , while still only forwarding those messages  towards consumers who may be interested in the content of messages . System  may allow a router to perform true content-based routing without having to de-serialize the data and may apply a full content-based filter by determining the exact set of consumers to forward the data onto based on packet headers.","For example, each message  may be assigned a unique subscription ID that is associated with a subscription matching the message's content, and the subscription ID may be stored in the header field of message . System  may then quickly and efficiently extract the subscription ID in the header field to determine the content of the message, rather than performing a more complicated and inefficient search of the entire body of the message to determine its content. Thus, system  may be able to perform fast content-based matching of messages in order to more efficiently filter and route the messages to only those consumers associated with a particular receiver machine ID interested in the content of the message. Through a routing protocol, integer headers may be added to each message  corresponding to consumer subscriptions, and sender machines  may only forward those messages to receiver machines  whose content consumers are interested in receiving.","At a high level, a consumer associated with a receiver machine  may only be interested in a subset of messages from a data stream comprising all messages  from all sender machines  and may communicate that interest directly to a sender machine . Logic, located either at sender machine  and, in a non-P2P configuration, at message-based middleware servers , , may be used to assign a subscription ID in router table  to correspond to the particular subset of information that the consumer is interested in receiving. Once the subscription ID corresponding to the particular subset of information has been assigned, sender machine  may place the subscription ID in the message header for all messages originating at the one or more sender machines  comprising that information. Sender machine  may then analyze router table  to determine one or more receiver machines  associated with the subscription ID in the header of message . Sender machine  may then send one or more messages to one or more receiver machines  associated with the subscription ID in the header of message . Advantageously, if no consumers are interested in the content of a message , that message  may not be sent to any receiver machine , freeing valuable bandwidth on system .","System  may conduct fast content-based routing by distributing the interests, subscriptions, or filters from each consumer to the producers through network . In the examples that follow and as described in more detail in association with , C, D, and , two consumers (C, C) may be associated with receiver machines  and one producer (P) may be associated with sender machine . Sender machine  and receiver machine  may be in communication with each other through a router (R) associated with middleware servers ,  or associated with sender machine  in a P2P network configuration.",{"@attributes":{"id":"p-0043","num":"0042"},"figref":["FIG. 14","FIG. 1B","FIG. 1C"],"b":["1400","137","115"]},{"@attributes":{"id":"p-0044","num":"0043"},"figref":"FIG. 1D","b":"136"},"In a first example, consumer C may be interested in data which contains the field \u201cmagazine\u201d with value \u201csports.\u201d One or more fields may be associated with a category of content, while one or more values may be associated with a particular type of content. At action , consumer C may send a subscription for \u2018{magazine=sports} \u2019 to router R. At action , router R may receive the subscription for \u2018{magazine=sports} \u2019 from consumer C and may assign it a unique outbound ID, such as the unique outbound ID of , as shown in the assignment table  of . The router R may then associate unique ID  with consumer C, as shown in router table  of , and may forward the subscription \u2018{magazine=sports} \u2019 to producer P.","At action , producer P may receive the subscription \u2018{magazine=sports} \u2019 from router R and may assign the subscription the unique inbound ID of . Producer P may then send the assignment to router R and may associate the subscription \u2018{magazine=sports} \u2019 with the unique inbound ID of  in router table  of . At action , router R may receive a message from producer P that producer P assigned unique ID  to subscription \u2018{magazine=sports} \u2019 and may record the assignment for P in router table  of . Router R may then match outbound ID of  with the inbound ID of  for all future messages  sent by a producer P.","At action , producer P may send a message  that contains sports content. For example, message  may include a field \u201cmagazine\u201d with a value \u201csports\u201d that consumer C may want to receive. Producer P may place the unique inbound ID of  associated with subscription \u2018{magazine=sports} \u2019 in the routing header of message , as shown in , and forward message  on to router R. At action , router R may receive message  with the inbound ID of  in the routing heading of message , and use the inbound ID of  to determine which consumers to route message  to for certain unique outbound IDs, as listed in router table  of .","System  may perform fast content-based matching of messages in order to more efficiently filter and route the messages to those consumers interested in the content of the message. Using the information from action , router R may route message  with the outbound ID of  to consumer C, as shown in router table  of . At action , router R may forward only the message  associated with the unique outbound ID of  to consumers that have subscribed to this content.","In a second example, consumer C may be interested in data which contains the field \u201cfinance\u201d with the value \u201cstocks.\u201d At action , consumer C may send a subscription for \u2018{finance=stocks} \u2019 to router R. At action , router R may receive the subscription for \u2018{finance=stocks}\u2019 from consumer C and may assign it a unique outbound ID of , as shown in the assignment table  of . The router R may then associate unique ID  with consumer C, as shown in router table  of , and may forward the subscription \u2018{finance=stocks}\u2019 to producer P.","At action , producer P may receive the subscription \u2018{finance=stocks} \u2019 from router R and may assign the subscription the unique inbound ID of . Producer P may then send that assignment to router R and may associate the subscription \u2018{finance=stocks}\u2019 with the unique inbound ID of  in router table  of . At action , router R may receive a message from producer P that producer P assigned unique ID  to subscription \u2018{finance=stocks}\u2019 and may record the assignment for P in router table  of . Router R may then match outbound ID of  with the inbound ID of  for all future messages  sent by a producer P.","At action , producer P may send a message that contains financial stock content for a particular project. For example, the message may include a field \u201cfinance\u201d with a value \u201cstock\u201d that consumer C may want to receive. Producer P may place the unique inbound ID of  associated with subscription \u2018{finance=stocks}\u2019 in the routing header of the message, as shown in , and forward the message on to router R. At action , router R may receive the message with the inbound ID of  in the routing heading, and use the inbound ID of  to determine which consumers to route the message to for certain unique outbound IDs, as listed in router table  of .","System  may perform fast content-based matching of messages in order to more efficiently filter and route the messages to those consumers interested in the content of the message. Using the information from action , router R may route the message with the outbound ID of  to consumer C, as shown in router table  of . At action , router R may forward only the message associated with the unique outbound ID of  to consumers that have subscribed to this content.","Fast Matching for Content-based Addressing","Content-based addressing typically allows receivers in a message-oriented middleware system to specify their interests as a query against the content of a message. For example, a message may include a field named \u201cTicker,\u201d a field type of string, and a field value of \u201cTIBX,\u201d and a receiver might specify interest in any messages in which \u201cTicker=TIBX.\u201d The sender may send the message described above, and the middleware resolves which receivers have specified queries that match the content. Thus, the receiver specifying interest in messages in which \u201cTicker=TIBX\u201d should receive the message described above.","Generalized content-based matching, in which numerous field types (e.g., integer, float, string, Boolean enumerations, etc.) are represented, and in which queries can use wildcards (e.g., an asterisk to match substrings) or regular expressions, are useful but expensive to compute. By limiting the data types and query syntax, more highly efficient content-based matching may be performed.",{"@attributes":{"id":"p-0056","num":"0055"},"figref":["FIG. 2","FIG. 2"],"b":["200","103","133","135","103","135","107","101"]},"In operation, at action , query processing engine  may accept a query from query application  through API . The query may comprise one or more fields and one or more values, wherein the one or more fields are associated with an operand representing a category of content and the one or more values are associated with content.","In order to efficiently match content-based addressing, system  may impose restrictions on queries initiated at receiver machine  to ensure that the queries are properly formatted. For example, the following restrictions are imposed on the data and queries: (1) data fields may only be integers or strings; (2) queries may only use strict equality (e.g., \u201cTicker=TIBX\u201d); (3) queries may only use conjunction (e.g., \u201cTicker=TIBX and Value=32\u201d); and (4) fields may only appear at most once within a data message. In this embodiment, disjunction may be implied by using multiple queries.","At action , system  may generate, at receiver machine , a tree structure ordered by one or more fields of the query, wherein the tree structure comprises one or more tree nodes and the one or more tree nodes comprise one or more query nodes. At action , receiver machine  may receive and analyze a message from sender machine . The message may comprise one or more content fields associated with one or more content values. At action , receiver machine  may search the tree structure using the one or more content fields of the message.","At action , receiver machine  may determine if the content value of the message matches a content value of the query stored in the tree structure. At action , receiver machine  may accept the message from sender machine  if the content value of the message matches one or more content values of the query stored in the tree structure.",{"@attributes":{"id":"p-0061","num":"0060"},"figref":["FIG. 3","FIG. 2"],"b":["300","103","301","301","200"]},"To build a tree, the queries may be processed one-at-a-time, creating tree nodes that contain one or more field nodes, each of which is associated with one or more values. The first query (e.g., A=1) is analyzed at action . For the first query, a linear 1-ary tree is built at action  in which each tree node may represent one operand in the query (and, thus, contains one field node), and the tree nodes are arranged at action  such that the first operand is the root, the last operand is the leaf, and the intermediate operands are arranged from first to last (root to leaf).",{"@attributes":{"id":"p-0063","num":"0062"},"figref":["FIG. 4","FIG. 4"],"b":["400","405","405","407","1","411","413","415","417","419","421"]},"In an embodiment, if a tree node contains queries A=1, A=2, and B=3, then logically separate field nodes for A and B may be present within that tree node. Query A's field node may contain two value entries, 1 and 2, and query B's field node may contain a single value entry, 3. Each field node query value entry (1, 2, and 3 in this example) has an edge pointing at a child tree node.","As depicted in , tree nodes, as represented by the dashed lines, may contain one or more field nodes once other queries are added to the tree. The field nodes, as represented by the solid line and containing an ordered operand (i.e., A, B, C, etc.), may also contain more than one value per field name. The field node combined with the value may together constitute a query node (i.e., A and 1 when the query is \u2018A=1\u2019). To add another query to the tree, the new query's operands are iterated through and existing field nodes may be re-used (adding new value entries as needed) as long as possible. When a tree node does not contain a matching field node, a new field node may be added to continue to build a new sub-tree. Each query node contains logically separate entries for the field name and value, and tree edges may connect the value entry of a query node to leaf (child) tree node.",{"@attributes":{"id":"p-0066","num":"0065"},"figref":"FIG. 5","b":["500","135","501","500","503","505","135","507","505","509"]},"If a matching field node does not exist for the current query at decision , then a new field node is added at action  and a new sub-tree is built at action  based on the new field node. If a matching field node does exist for the current query at decision , the current query is set to the next query in the set of queries at action  and the process starts over at action .","As shown in the following figures, and by way of example only, a set of four queries: A=1 and B=4 and C=3; A=2 and C=3; A=1 and C=6; and B=7 and E=2 are processed and the resulting tree is built in four stages by query processing engine . The tree is built one query at a time (stage by stage), starting with the first query A=1 and B=4 and C=3, as interest is expressed by receiver machine .",{"@attributes":{"id":"p-0069","num":"0068"},"figref":["FIG. 6","FIGS. 3 and 4"],"b":["600","600","601","603","605","602","604","606","607","608","609","601","605","603","601","603","605","602","604","606"]},{"@attributes":{"id":"p-0070","num":"0069"},"figref":["FIG. 7","FIG. 5","FIG. 7"],"b":["700","600","501","503","505","602","702","507","601","607","702","702","703","705","707","605","603"]},{"@attributes":{"id":"p-0071","num":"0070"},"figref":["FIG. 8","FIG. 5","FIG. 8"],"b":["800","600","700","501","503","505","602","603","603","801","604","801","603","604","801","803","603"]},{"@attributes":{"id":"p-0072","num":"0071"},"figref":["FIG. 9","FIG. 5","FIG. 9"],"b":["900","600","700","800","501","503","505","901","903","509","511","901","601","601","901","601","905","907","909"]},"Optimizing a Matching Tree Data Structure","In some embodiments, nodes of a matching tree may be augmented with additional data to improve the performance of the matching phase. The augmenting may take place at the time the matching tree is created. A tree node may include a list of fields in field nodes, a hash list of the tree node's leaf (child) nodes, where each child node may be represented as a combination of its field name and field value, and a list of queries that terminate at this tree node. Having this information stored at each tree node allows a matching process to quickly determine whether incoming data matches a query encoded in the tree, and allows the matching to optimize whether the matching tree is matched to the incoming data or the incoming data is matched to the matching tree. Referring back to , the optimal strategy depends on the size and\/or height of the tree and the length of the incoming data, and can be chosen on-the-fly as data is presented for matching by the query processing engine  with query application  on a node-by-node basis. Having a list of queries that terminate at the tree node allows the tree to represent a query that may be prefix of another query. For example, in the tree of , the query A=1 and B=4 and C=3 may be represented in the tree by virtue of the tree root  being marked as a query leaf in addition to its role in the longer query.","Matching Against the Tree","In some embodiments, after query processing engine  has built the matching tree based on receiver machine's  query, query processing engine  may match an incoming data message to a query if any subset of the fields and values in the message match all of the fields and values in the query. Thus, the message \u201cA=1 and B=4 and F=9\u201d is a match for query \u201cA=1 and B=4,\u201d but message \u201cA=1 and B=4\u201d is not a match for query \u201cA=1 and B=4 and G=12\u201d because the \u2018G=12\u2019 query node of the query is unmatched in the message.","To match an incoming data message, query processing engine  may sort the fields of the message in canonical order and the process either iterates through the fields of the message and walks the matching tree from its root, or walks the matching tree from its root and tracks whether an on-going match within the message is found. Like the queries discussed earlier, the messages may be sorted in numerical order, reverse numerical order, alphabetical order, reverse alphabetical order, or any other ordering system that may allow for fields to be searched in the same order as the matching tree comprising the similarly sorted queries. The details of these methods are discussed below.",{"@attributes":{"id":"p-0078","num":"0077"},"figref":"FIG. 10","b":["1000","1001","1000","1000"]},"Process  recursively walks the tree, attempting at each tree node to find a matching field node. Thus, at action , the process may search for a matching field node in the matching tree for the current message field (for the first iteration, the current message field is the first message field). If a matching field node is found at decision , the search may continue recursively with the node's child at action . At action , the process attempts to match the remainder of the message's data fields. If the remainder of the message's data fields is not matched at decision , then a new current message field may be determined at action  and the process may start over at action . If the remainder of the message's data fields are matched at decision , then a match may be declared at action .","If a matching node is not found at decision , then the current message field is not a match and the process  may repeat with a new message field by determining a new current message field at action  and starting the process over at action . If a matching field node is not found the search may continue by eliminating the current message field and continuing with the tail of the message because a query may match a subset of fields in a message (it is not necessary to match all fields).",{"@attributes":{"id":"p-0081","num":"0080"},"figref":["FIG. 11","FIG. 11"],"b":"1100"},"One embodiment not addressed by the simple pseudo-code of findmatch( )) is an instance in which one query is a prefix of another. The tree data structure may be augmented to mark interior tree nodes that constitute the end of a query. For example, in matching tree  from , adding a query A=1 and B=4, which is a prefix of the existing query A=1 and B=4 and C=3, would not cause any structural changes to the matching tree , but the second-level node representing B=4 should be marked as the terminal of a query, even though it is not a leaf.","The pseudo code from  recognizes a match when it reaches a physical tree leaf, but it may be modified to also recognize matches when the process reaches an internally marked terminal.",{"@attributes":{"id":"p-0084","num":"0083"},"figref":["FIG. 12","FIG. 11","FIG. 10"],"b":["1200","1000","1011","1009"]},"Additional modifications to the matching pseudo code may also be included. In an embodiment, the pseudo code includes a routine for reporting a match found (rather than just reporting an absence of a match). In another embodiment, the pseudo code includes a routine to find all query matches for a particular message input.",{"@attributes":{"id":"p-0086","num":"0085"},"figref":"FIG. 13","b":["1300","103","1300","1301","1302","1302","1304","1302","1310","1302","1308","1306","1306","1310","1302"]},"In an embodiment, the time to match a field node to a query may be optimized in cases where the field node is associated with multiple values, such as the A field node  in , which is associated with the values ,  of 1 and 2, respectively. To optimize performance, the field node's  name may be matched to a query, and, if there is a match, the message's field name and\/or value combination may be matched to the field node. In other embodiments, this latter comparison may be improved through the use of hashing data structures. When the field node has many associated values, this may be significantly faster than simply comparing each field name\/value from the field node to the message.","Depending on the number of field nodes within a tree node and the number of field\/value pairs in the message (or whatever tail thereof remains), it may be more efficient to use one or the other of the above matching processes. A hybrid process may be used to evaluate a balance at each level of recursion and use the more efficient comparison. Referring back to , query processing engine  within query application  of receiver machine  may perform this decision on a node-by-node basis during message matching evaluation. Alternatively, the decision may be performed over network  and may perform this decision on a node-by-node basis during message matching evaluation.","While various embodiments have been described above, it should be understood that they have been presented by way of example only, and not limitation. Thus, the breadth and scope of a preferred embodiment should not be limited by any of the above described exemplary embodiments, but should be defined only in accordance with the claims and their equivalents for any patent that issues claiming priority from the present provisional patent application.","For example, as referred to herein, a machine or engine may be a virtual machine, computer, node, instance, host, or machine in a networked computing environment. Also as referred to herein, a networked computing environment is a collection of machines connected by communication channels that facilitate communications between machines and allow for machines to share resources. Also as referred to herein, a server is a machine deployed to execute a program operating as a socket listener and may include software instances.","Resources may encompass any types of resources for running instances including hardware (such as servers, clients, mainframe computers, networks, network storage, data sources, memory, central processing unit time, scientific instruments, and other computing devices), as well as software, software licenses, available network services, and other non-hardware resources, or a combination thereof.","A networked computing environment may include, but is not limited to, computing grid systems, distributed computing environments, cloud computing environment, etc. Such networked computing environments include hardware and software infrastructures configured to form a virtual organization comprised of multiple resources which may be in geographically disperse locations.","While communication protocols may be described herein, the coverage of the present application and any patents issuing there from may extend to other local-area network, wide-area network, or other network operating using other communications protocols.","Services and applications are described in this application using those alternative terms. Services can be java services or other instances of operating code. A service\/application is a program running on a machine or a cluster of machines in a networked computing environment. Services may be transportable and may be run on multiple machines and\/or migrated from one machine to another.","Various terms used herein have special meanings within the present technical field. Whether a particular term should be construed as such a \u201cterm of art,\u201d depends on the context in which that term is used. \u201cConnected to,\u201d \u201cin communication with,\u201d or other similar terms should generally be construed broadly to include situations both where communications and connections are direct between referenced elements or through one or more intermediaries between the referenced elements, including through the Internet or some other communicating network. \u201cNetwork,\u201d \u201csystem,\u201d \u201cenvironment,\u201d and other similar terms generally refer to networked computing systems that embody one or more aspects of the present disclosure. These and other terms are to be construed in light of the context in which they are used in the present disclosure and as those terms would be understood by one of ordinary skill in the art would understand those terms in the disclosed context. The above definitions are not exclusive of other meanings that might be imparted to those terms based on the disclosed context.","Words of comparison, measurement, and timing such as \u201cat the time,\u201d \u201cequivalent,\u201d \u201cduring,\u201d \u201ccomplete,\u201d and the like should be understood to mean \u201csubstantially at the time,\u201d \u201csubstantially equivalent,\u201d \u201csubstantially during,\u201d \u201csubstantially complete,\u201d etc., where \u201csubstantially\u201d means that such comparisons, measurements, and timings are practicable to accomplish the implicitly or expressly stated desired result.","Additionally, the section headings herein are provided for consistency with the suggestions under 37 CFR 1.77 or otherwise to provide organizational cues. These headings shall not limit or characterize the invention(s) set out in any claims that may issue from this disclosure. Specifically and by way of example, although the headings refer to a \u201cTechnical Field,\u201d such claims should not be limited by the language chosen under this heading to describe the so-called technical field. Further, a description of a technology in the \u201cBackground\u201d is not to be construed as an admission that technology is prior art to any invention(s) in this disclosure. Neither is the \u201cBrief Summary\u201d to be considered as a characterization of the invention(s) set forth in issued claims. Furthermore, any reference in this disclosure to \u201cinvention\u201d in the singular should not be used to argue that there is only a single point of novelty in this disclosure. Multiple inventions may be set forth according to the limitations of the multiple claims issuing from this disclosure, and such claims accordingly define the invention(s), and their equivalents, that are protected thereby. In all instances, the scope of such claims shall be considered on their own merits in light of this disclosure, but should not be constrained by the headings set forth herein."],"BRFSUM":[{},{}],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"BRIEF DESCRIPTION OF THE DRAWINGS","p":[{"@attributes":{"id":"p-0007","num":"0006"},"figref":"FIG. 1A"},{"@attributes":{"id":"p-0008","num":"0007"},"figref":"FIG. 1B"},{"@attributes":{"id":"p-0009","num":"0008"},"figref":"FIG. 1C"},{"@attributes":{"id":"p-0010","num":"0009"},"figref":"FIG. 1D"},{"@attributes":{"id":"p-0011","num":"0010"},"figref":"FIG. 1E"},{"@attributes":{"id":"p-0012","num":"0011"},"figref":"FIG. 2"},{"@attributes":{"id":"p-0013","num":"0012"},"figref":"FIG. 3"},{"@attributes":{"id":"p-0014","num":"0013"},"figref":"FIG. 4"},{"@attributes":{"id":"p-0015","num":"0014"},"figref":"FIG. 5"},{"@attributes":{"id":"p-0016","num":"0015"},"figref":"FIG. 6"},{"@attributes":{"id":"p-0017","num":"0016"},"figref":"FIG. 7"},{"@attributes":{"id":"p-0018","num":"0017"},"figref":"FIG. 8"},{"@attributes":{"id":"p-0019","num":"0018"},"figref":"FIG. 9"},{"@attributes":{"id":"p-0020","num":"0019"},"figref":"FIG. 10"},{"@attributes":{"id":"p-0021","num":"0020"},"figref":"FIG. 11"},{"@attributes":{"id":"p-0022","num":"0021"},"figref":"FIG. 12"},{"@attributes":{"id":"p-0023","num":"0022"},"figref":"FIG. 13"},{"@attributes":{"id":"p-0024","num":"0023"},"figref":"FIG. 14"}]},"DETDESC":[{},{}]}
