---
title: Electronic document delivery system employing distributed document object model (DOM) based transcoding and providing interactive javascript support
abstract: Several different embodiments of an electronic document delivery system are described including a client machine (e.g., a palmtop/handheld computer or wireless communication device) coupled to a transcoder proxy. One embodiment of the system allows a client machine with limited resources to support JAVASCRIPT. The transcoder proxy receives an electronic document in a first digital format (e.g., HTML or XML). A JAVASCRIPT event may be associated with an element of the document including JAVASCRIPT code executed in response to the JAVASCRIPT event. The transcoder proxy assigns a unique identifier to the element, and forms a model of a logical structure of the document (e.g., a document object model or DOM). The transcoder proxy uses the model to produce an “original” script including a portion of the document expressed in a second digital format (e.g., a scripting language), and provides the original script to the client machine. The client machine uses the original script to display/present the document portion. The client machine associates the JAVASCRIPT event with the element identifier, generates the JAVASCRIPT event in response to user input, and provides JAVASCRIPT event information and the associated identifier to the transcoder proxy. The transcoder proxy accesses the element within the model using the identifier, executes the JAVASCRIPT code producing a result, uses the model and the result to produce a “modification” script, and provides the modification script to the client machine. The client machine uses the modification script to modify the displayed/presented portion of the document.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=07054952&OS=07054952&RS=07054952
owner: International Business Machines Corp.
number: 07054952
owner_city: Armonk
owner_country: US
publication_date: 19991209
---

{"@attributes":{"id":"description"},"BRFSUM":[{},{}],"heading":["CROSS-REFERENCE TO RELATED APPLICATION","BACKGROUND OF THE INVENTION","SUMMARY OF THE INVENTION","DETAILED DESCRIPTION OF PREFERRED EMBODIMENTS"],"p":["This application relates to two applications, Ser. Nos. 09\/458,646 and 09\/458,648, now U.S. Pat. Nos. 6,829,746 and 6,725,424 respectively filed on the same day as the present application and entitled \u201cELECTRONIC DOCUMENT DELIVERY SYSTEM EMPLOYING DISTRIBUTED DOCUMENT OBJECT MODEL (DOM) BASED TRANSCODING\u201d and \u201cELECTRONIC DOCUMENT DELIVERY SYSTEM EMPLOYING DISTRIBUTED DOCUMENT OBJECT MODEL (DOM) BASED TRANSCODING AND PROVIDING ASSISTIVE TECHNOLOGY SUPPORT\u201d by Richard S. Schwerdtfeger, Lawrence F. Weiss, and Rabindranath Dutta.","1. Field of the Invention","This invention relates to systems for providing electronic documents, and more particularly to document delivery systems wherein servers transcode documents delivered to client machines.","2. Description of Related Art","The World Wide Web, known simply as the \u201cWeb\u201d, is a network of Internet servers that provide specially formatted electronic documents to various \u201cclient\u201d machines. Web servers currently support documents formatted in a text-based markup language called hypertext markup language (HTML).","In order to provide Web access to client machines with limited capabilities (e.g., palmtop or handheld computers), a \u201ctranscoder proxy\u201d is typically positioned between the client machine and an Internet server. The transcoder proxy may, for example, provide selected portions of a requested Web document to the client machine based upon the capabilities of the client machine. In doing so, the transcoder proxy may translate one or more selected portions of the Web document from one digital format to another.",{"@attributes":{"id":"p-0008","num":"0007"},"figref":"FIG. 1","b":["10","12","14","14","10","16","18","14","16","18","12","14","16","12","12","12"]},"Internet server  fetches document  and provides document  to transcoder proxy . Based upon the capabilities of client machine , transcoder proxy  may translate or \u201ctranscode\u201d one or more selected portions of document  from one digital format to another. For example, transcoder proxy  may transcode a portion of document  from HTML to a script written in a scripting language understood by a Web browser application program running within client machine . The Web browser program may use information conveyed by the script to present the one or more selected portions of document  upon a display device of client machine .","Alternately, client machine  may include a text-to-speech converter, and the information conveyed by the script may be used to output the one or more selected portions of document  as speech through a speaker of client machine . The term \u201cassistive technology\u201d is used herein to describe technology that helps physically challenged individuals access to a computer system (e.g., client machine ). Well known types of assistive technologies include \u201cscreen readers\u201d which convert display information to speech, \u201cscreen magnifiers\u201d which enlarge features of portions of display screen contents, and voice recognition software which converts speech to a digital representation of text or commands.","Computer language code or \u201cscript\u201d which modifies visual presentations of electronic documents in response to user input is increasingly being included within electronic documents. Such interactive aspects of electronic documents are used to provide, for example, Web site navigation information in response to user input. JAVASCRIPT (\u2122 Netscape Comm. Corp., Mountain View, Calif.) is a well known cross-platform, object-based scripting language for client and server applications. JAVASCRIPT is commonly used to add interactive aspects to electronic documents such as Web pages.","The Document Object Model (DOM) is an application programming interface (API) for \u201cdocuments\u201d. The World Wide Web Consortium (W3C) has authored a DOM specification available on the Web at URL http:\/\/www.w3.org\/. The DOM defines the logical structure of documents and the way a document is accessed and manipulated. In the DOM specification, the term \u201cdocument\u201d is used in the broad sense. Increasingly, XML is being used as a way of representing many different kinds of information that may be stored in diverse systems. Much of this information would traditionally be seen as data rather than as documents.","In the DOM, documents have a logical structure which is very much like a tree. To be more precise, the logical structure is like a \u201cforest\u201d or \u201cgrove\u201d, which can contain more than one tree. However, the DOM specification does not require that documents be implemented as a tree or a grove, nor does it specify how the relationships among objects be implemented. The DOM is a logical model that may be implemented in any convenient manner. In the DOM specification, the term \u201cstructure model\u201d is used to describe the tree-like representation of a document. Terms like \u201ctree\u201d or \u201cgrove\u201d are not used to avoid implying a particular implementation. One important property of DOM structure models is structural isomorphism. If any two DOM implementations are used to create a representation of the same document, they will create the same structure model, with precisely the same objects and relationships.","In current document delivery systems, a problem arises in that many client machines do not support interactive aspects of electronic documents such as Web pages due to resource limitations. As a result, transcoding proxy  may be configured to remove any computer language code or script within the one or more selected portions of an electronic document provided to client machine . Web site navigation capability may be lost, and with it the ability to access Web site information. Additionally, a client machine may not have sufficient resources to provide an assistive technology solution for a physically challenged user.","It would thus be desirable to have an electronic document delivery system which allows a client machine with limited resources to provide interactive aspects of electronic documents such as Web pages and\/or an assistive technology solution for a physically challenged user. The desired document delivery system may use the document object model (DOM) to define a logical structure of an electronic document, and to access and manipulate the electronic document.","Several different embodiments of an electronic document delivery system are described including a client machine coupled to (i.e., in wired or wireless communication with) a transcoder proxy. The client machine may be, for example, a palmtop or handheld computer or a wireless communication device with limited memory and\/or processing capability. The transcoder proxy is coupled to receive electronic documents. The electronic documents are expressed in a first digital format (e.g., a text-based markup language such as HTML or XML). Each electronic document includes at least one element.","In one embodiment of the document delivery system, a JAVASCRIPT event is associated with one of the document elements, and the element includes JAVASCRIPT code executed in response to the JAVASCRIPT event. The transcoder proxy assigns a unique identifier to the element, and forms a model of a logical structure of the electronic document. The model may also define methods for accessing and manipulating the document. The model may be, for example, a document object model (DOM).","The transcoder proxy uses the model to produce an \u201coriginal\u201d script. The original script includes at least a portion of the electronic document expressed in a second digital format (e.g., a scripting language). The original script includes the document element and the identifier assigned to the element. The original script may also include a code value associated with the JAVASCRIPT event. The code value may be associated with the element within the original script. The transcoder proxy provides the original script to the client machine.","The client machine receives the original script, and uses the original script to present the portion of the electronic document. The client machine also associates the JAVASCRIPT event with the element (e.g., via the code value). The client machine generates the JAVASCRIPT event in response to user input. The client machine provides JAVASCRIPT event information and the identifier assigned to the element associated with the JAVASCRIPT event to the transcoder proxy. The JAVASCRIPT event information may include the code value associated with the JAVASCRIPT event.","Elements of the electronic document are associated with corresponding identifiers within the model. The transcoder proxy uses the JAVASCRIPT event information and the identifier provided by the client machine to access the element and the JAVASCRIPT code within the model. The transcoder proxy executes the JAVASCRIPT code, thereby producing a result. The transcoder proxy uses the model and the result to produce a \u201cmodification\u201d script, wherein the modification script differs from the original script. The transcoder proxy provides the modification script to the client machine. The client machine receives the modification script, and uses the modification script to modify the presented portion of the electronic document.","One embodiment of the transcoder proxy includes a synchronous document object model (DOM) generator coupled to a transcoder and a JAVASCRIPT engine. The synchronous (DOM) generator is adapted to receive the electronic document, and includes an identifier (ID) generator for assigning the unique identifier to each element of the electronic document. The synchronous DOM generator forms a pre-transcoded DOM representing the logical structure of the electronic document. The pre-transcoded DOM also defines methods for accessing and manipulating the document. Within the pre-transcoded DOM, document elements are associated with corresponding identifiers. The synchronous DOM generator provides a first portion of the electronic document to the transcoder in the first digital format.","The transcoder receives the first portion of the electronic document in the first digital format, and translates the first portion of the electronic document from the first digital format to the original script in the second digital format. The original script includes the element and the identifier assigned to the element. As described above, the original script may also include the code value associated with the JAVASCRIPT event. The code value may be associated with the element within the original script. The transcoder provides the original script (e.g., to a client machine).","The JAVASCRIPT engine is coupled to the synchronous DOM generator and adapted to receive input JAVASCRIPT event information and an input identifier. The JAVASCRIPT engine uses the input identifier to access an element within the pre-transcoded DOM. The JAVASCRIPT engine may use the input JAVASCRIPT event information to access the JAVASCRIPT code of the element. The JAVASCRIPT engine executes the JAVASCRIPT code, thereby producing a result. The JAVASCRIPT engine provides the result to the synchronous DOM generator. The synchronous DOM generator uses the pre-transcoded DOM and the result to produce a second portion of the electronic document, and provides the second portion to the transcoder. The transcoder receives the second portion of the electronic document in the first digital format, translates the second portion from the first digital format to a modification script in the second digital format, and provides the modification script (e.g., to the client machine).","One embodiment of the client machine includes an output device (e.g., a display device or a text-to-speech converter), and a user agent coupled to the output device. The user agent is adapted for coupling to a transcoder proxy. The user agent receives the original script from the transcoder proxy including the element and the identifier assigned to the element. The user agent forms a transcoded DOM in response to the original script, wherein the transcoded DOM is a representation of the portion of the electronic document. The user agent uses the transcoded DOM to produce output commands, and provides the output commands to the output device.","As described above, the original script may also include a code value associated with the JAVASCRIPT event. The code value may be associated with the element within the original script. The user agent may use the code value to associate the JAVASCRIPT event with the identifier assigned to the element.","The user agent generates the JAVASCRIPT event in response to user input, and provides JAVASCRIPT event information and the associated identifier to the transcoder proxy. As described above, the JAVASCRIPT event information may include the code value associated with the JAVASCRIPT event. The user agent receives the modification script from the transcoder proxy, and modifies the transcoded DOM in response to the modification script.","A method for transcoding an electronic document, which may be embodied within the transcoder proxy, includes receiving the electronic document in the first digital format. A unique identifier is assigned to the element. A model of a logical structure of the electronic document is formed, including the element and the identifier assigned to the element. The model may also define methods for accessing and manipulating the document. The model may be, for example, a document object model (DOM). The model is used to produce a script, wherein the script includes at least a portion of the document expressed in the second digital format. The script includes the element and the identifier assigned to the element. The script may also include a code value associated with the JAVASCRIPT event. The code value may be associated with the element within the script. The script is provided (e.g., to a client machine).","A first method for presenting an electronic document, which may be embodied within the transcoder proxy, includes the above transcoding method. The script produced by the transcoding method may be the original script described above. The first method also includes receiving input JAVASCRIPT event information and an input identifier assigned to an element associated with the JAVASCRIPT event. The element corresponding to the input identifier is accessed within the model using the input identifier. The JAVASCRIPT code of the element may be accessed using the input JAVASCRIPT event information. The JAVASCRIPT code is executed, thereby producing a result. The model and the result are used to produce the modification script, wherein the modification script differs from the original script. The modification script is provided (e.g., to the client machine).","A second method for presenting an electronic document, which may be embodied within the client machine, includes receiving the original script including at least a portion of the electronic document expressed in a digital format (e.g., a scripting language). As described above, the original script includes an element of the document and an identifier assigned to the element. The original script may also include a code value associated with the JAVASCRIPT event. The code value may be associated with the element within the original script. The original script is used to present the portion of the electronic document. The JAVASCRIPT event is associated with the identifier (e.g., via the code value). The JAVASCRIPT event is generated in response to user input, and JAVASCRIPT event information and the identifier are provided (e.g., to a transcoder proxy). As described above, the JAVASCRIPT event information may include the code value associated with the JAVASCRIPT event. The modification script is received (e.g., from the transcoder proxy), and used to modify the presented portion of the electronic document.","While the invention is susceptible to various modifications and alternative forms, specific embodiments thereof are shown by way of example in the drawings and will herein be described in detail. It should be understood, however, that the drawings and detailed description thereto are not intended to limit the invention to the particular form disclosed, but on the contrary, the intention is to cover all modifications, equivalents and alternatives falling within the spirit and scope of the present invention as defined by the appended claims.",{"@attributes":{"id":"p-0037","num":"0036"},"figref":["FIG. 2","FIG. 2"],"b":["20","12","22","22","24","24","24","22"]},"In the embodiment of , system  includes internet server  and an interim server  coupled between client machine  and internet server . Interim server  includes a transcoder proxy . Transcoder proxy  forwards electronic document requests from client machine  to internet server . Transcoder proxy  receives electronic documents (e.g., document ) from internet server  in digital format. Well known digital formats include text-based markup language formats such as hypertext markup language (HTML) and extensible markup language (XML). Other common digital formats include POSTSCRIPT (\u2122 Adobe Sys. Inc., San Jose, Calif.), portable document format (PDF), and advanced function printing (AFP). Transcoder proxy  includes a synchronous document object model (DOM) generator  coupled to a transcoder  and a user interface generator . Synchronous DOM generator  receives electronic documents from internet server , and includes an identifier (ID) generator .","In response to electronic document  provided by internet server , synchronous DOM generator produces a pre-transcoded DOM . Electronic document  includes one or more elements representing document structures. Examples of document elements include paragraphs, hypertext links, lists, tables, and images. ID generator  assigns a unique identifier to each element of electronic document . Pre-transcoded DOM  defines a tree-like logical structure of document , and also defines methods for accessing and manipulating document . Within pre-transcoded DOM , elements of electronic document  are associated with their identifiers. As will be described in more detail below, pre-transcoded DOM  facilitates navigation of the logical structure of electronic document . Pre-transcoded DOM  preferably complies with the World Wide Web Consortium (W3C) DOM specification available on the Web at URL http:\/\/www.w3.org\/.","Synchronous DOM generator  provides at least a portion (e.g., a first portion) of document  to be displayed or otherwise presented to the user by client machine  to transcoder . Transcoder  translates the first portion of document  from one digital format to another. For example, transcoder  may translate the first portion of document  from a first digital format (e.g., HTML) to a script expressed in a second digital format (e.g., a scripting language understood by a user agent  within client machine ).","The scripting language may be, for example, a subset of the digital format in which transcoder proxy  receives document  from internet server  (e.g., a subset of HTML, XML, POSTSCRIPT, PDF, or AFP). In producing the script, transcoder proxy  may convert graphics images within electronic document  from one format to another (e.g., from joint photographic experts group\/JPEG format to graphics interchange format\/GIF format, from JPEG and GIF formats to scaled vector graphics\/SVG format, etc.). The script may also include audio data files (e.g., wav files), transcoded Braille, and\/or unformatted text.","Transcoder  provides the produced \u201coriginal\u201d script to user agent  of client machine . The original script includes a description of the elements within the first portion of document . The original script also includes the identifiers assigned to the elements within the first portion of document .","In response to the received original script, user agent  of client machine  produces a transcoded DOM . Transcoded DOM  contains a representation of the elements of the first portion of document  to be displayed or otherwise presented via output device . Within transcoded DOM , elements of the portion of document  are associated with their identifiers. User agent  uses transcoded DOM  to issue output commands to output device . As described above, output device  may include a relatively small display device with limited display capabilities. Output device  may also include a speaker for producing speech.","Client machine  also includes an input device  coupled to user agent . Input device  may be, for example, one or more keys or buttons, a pointing device such as a mouse, or a speech-to-text converter. The speech-to-text converter may, for example, be the input device of choice for a physically challenged user (e.g., a permanently or temporarily disabled user who cannot operate a conventional input device such as a mouse or a keyboard due to a disability). A user input via input device  may cause user agent  to generate an event. User agent  associates an event with an element and the identifier assigned to the element. User agent  provides an event and the identifier assigned to the event to user interface generator  within transcoder proxy .","It is noted that client machine  may include other input, output, and\/or input\/output (I\/O) devices not shown. It is also noted that input device  and output device  may be a combined I\/O device, such as a speech engine which converts digital signals representing text to speech and also converts speech to digital signals representing text, or a touch screen I\/O device which includes a visual display screen and accepts user input via pressure applied to the display screen (e.g., via a stylus).","User interface generator  may use the event and the identifier to produce DOM access commands, and may provide the DOM access commands to synchronous DOM generator . Synchronous DOM generator may use the DOM access commands to access one or more elements within pre-transcoded DOM . Synchronous DOM generator  may modify pre-transcoded DOM  in response to the DOM access commands.","Alternately, user interface generator  may use the identifier to access the one or more elements within pre-transcoded DOM . User interface generator  may modify pre-transcoded DOM  in response to the event and the identifier.","In either case, following any modification of pre-transcoded DOM , synchronous DOM generator  provides a modified portion (e.g., a second portion) of document  to be displayed or otherwise presented to the user by client machine  to transcoder . Transcoder  translates the second portion of document  from the first digital format to the second digital format, thereby producing \u201cmodification\u201d script. The modification script modifies the first portion of document  currently displayed or otherwise presented to the user by client machine . The modification script includes a description of the elements within the second portion of document , and the identifiers assigned to the elements within the second portion of document . In response to the modification script, user agent  of client machine  modifies transcoded DOM  and issues new output commands to output device . As a result, the second portion of document  is displayed or otherwise presented by output device .","For example, input device  may be a mouse, and a user may position a cursor or pointer at an edge of a displayed portion of document  via the mouse indicating a desire to have an adjacent portion (i.e., a second portion) of document  presented. User agent  may generate an event in response to such positioning of the cursor or pointer. User agent  may associate the event with a displayed element, and may provide the event and the identifier assigned to the element associated with the event to user interface generator  within transcoder proxy . User interface generator  may provide the event and the associated identifier to synchronous DOM generator . Synchronous DOM generator  uses the identifier to access pre-transcoded DOM . As described above, synchronous DOM generator  may modify pre-transcoded DOM  in response to the event and the associated identifier. Synchronous DOM generator  provides the second portion of document  to transcoder . Transcoder  generates modification script which includes a description of the elements and the identifier assigned to each of the elements within the second portion of document . In response to the modification script, user agent  of client machine  modifies transcoded DOM  and issues new output commands to output device . As a result, the second portion of document  is displayed or otherwise presented by output device .","It is noted that in the embodiment of , transcoder proxy  also serves as a \u201creverse\u201d proxy. Interaction between transcoder proxy  and client  is facilitated by the HTTP 1.1 standard which allows the transmission control protocol\/internet protocol (TCP\/IP) link to remain operational across multiple requests. As a result, frequent and relatively short client-server exchanges may take place without incurring the overhead of re-establishing a connection between interim server  and client . Interaction between transcoder proxy  and client  may also be conducted using established mechanisms such as cookies, URL re-writing, etc.",{"@attributes":{"id":"p-0051","num":"0050"},"figref":["FIG. 3","FIG. 2"],"b":["50","51","52","54","38","56"]},"The original script is used to present the portion of the document during a step . During a step , an event is generated in response to user input. The event is associated with an element of the document during a step . During a step , the model is accessed using the identifier assigned to the element associated with the event. The model may be modified in response to the event and the identifier. Following any modification, the model is used to produce modification script during a step . During a step , the modification script is used to modify the presented document.","In system  of , steps , , , , , and  of method  may be embodied within transcoder proxy , and steps , , , and  may be embodied within client machine .","It is noted that in step  of method , the portion of the document may be presented in any number of ways, including audible form (e.g., speech) or tactile form via a Braille display.",{"@attributes":{"id":"p-0055","num":"0054"},"figref":["FIG. 4","FIG. 4"],"b":["20","12","22","28","70","34","40","22","30","70","28","22","22"]},"For example, a \u201cmouseover\u201d is a JAVASCRIPT event which may be used to trigger a change in a displayed element (e.g., a graphic) when the cursor or pointer is passed over the displayed element using a mouse. Mouseover events (i.e., mouseovers) are widely used in navigation bars, pop-up boxes, and forms. Document  may include an element with JAVASCRIPT code which displays data when a mouseover event occurs (i.e., \u201conmouseover\u201d data). The JAVASCRIPT mouseover event is thus associated with the element. In the embodiment of , the script produced by transcoder  and provided to user agent  of client machine  includes the element and the identifier assigned to the element.","The script may also include a code value for the mouseover event. The code value may be associated with the element within the script. User agent  may use the code value to associate the mouseover event with the element.","User agent  generates the mouseover event when the user passes the cursor or pointer over the displayed element using the mouse. User agent  associates the mouseover event with the displayed element, and provides mouseover event information and the identifier assigned to the element to user interface generator  and JAVASCRIPT engine  within transcoder proxy . The mouseover event information may include the code value of the mouseover event. User interface generator  may not recognize the mouseover event information, and may not respond to the mouseover event.","On the other hand, JAVASCRIPT engine  may recognize the mouseover event information and respond to the mouseover event by accessing the element associated with the mouseover event within pre-transcoded DOM  using the identifier. JAVASCRIPT engine  may use the code value to access the JAVASCRIPT code of the element. JAVASCRIPT engine  executes the JAVASCRIPT code of the element, thus producing the onmouseover data. JAVASCRIPT engine  may provide the onmouseover data to synchronous DOM generator . Synchronous DOM generator  may use pre-transcoded DOM  and the onmouseover data to produce a modified portion (e.g., a second portion) of document . Synchronous DOM generator  may provide the second portion of document , including the \u201conmouseover\u201d data to transcoder .","Transcoder  translates the second portion of document  from the first digital format to the second digital format, thereby producing modification script including the onmouseover data. The modification script thus includes a description of the elements and the identifier assigned to each of the elements within the second portion of document  to be displayed or otherwise presented by client machine  as a result of the mouseover event. In response to the modification script, user agent  of client machine  modifies transcoded DOM  and issues new output commands to output device . As a result, the second portion of document  is displayed or otherwise presented by output device .",{"@attributes":{"id":"p-0061","num":"0060"},"figref":["FIG. 5","FIG. 5","FIG. 5"],"b":["20","12","22","28","72","34","40","22","30","22","74","40","74","40","40","42","74","74","74"]},"Common Braille displays include a linear array of output cells (e.g., 40, 66, or 80 cells). Each cell has either six pins, arranged two pins wide by three pins high, or eight pins arranged two pins wide by four pins high. Pins of a given cell are raised such that they extend from vertical holes to form patterns representing, for example, letters, numbers, punctuation, and\/or Braille composition signs. Common Braille displays also include keys or buttons for user input which allow a user to navigate through an electronic document (e.g., a Web document).","A Braille display may be coupled to assistive technology . In this case, a user may press a \u201cnext line\u201d button on the Braille display in order for a next line of document  to be presented. Assistive technology  may provide a signal to user agent  indicating that the \u201cnext line\u201d button was pressed. User agent  may generate an \u201cassistive technology\u201d event in response. User agent  may associate the assistive technology event with an element, and may provide assistive technology event information and the identifier assigned to the element associated with the event to user interface generator  and assistive technology interface generator  within transcoder proxy . The assistive technology event information may include a code value assigned to the \u201cnext line\u201d assistive technology event. User interface generator  may not recognize the assistive technology event information, and may not respond to the assistive technology event.","On the other hand, assistive technology interface generator  may recognize the assistive technology event information and respond to the assistive technology event. Assistive technology interface generator  may use the assistive technology event information and the identifier to produce DOM access commands, and may provide the DOM access commands to synchronous DOM generator . Synchronous DOM generator  may use the DOM access commands to access one or more elements within pre-transcoded DOM . Synchronous DOM generator  may modify pre-transcoded DOM  in response to the DOM access commands.","Alternately, assistive technology interface generator  may use the identifier associated with the element to access the one or more elements within pre-transcoded DOM . Assistive technology interface generator  may modify pre-transcoded DOM  in response to the assistive technology event information and the identifier.","In either case, following any modification of pre-transcoded DOM , synchronous DOM generator  provides the requested next line portion of document  to transcoder . Transcoder  translates the next line portion of document  from the first digital format to the second digital format, thereby producing modification script. The modification script thus includes a description of the elements and the identifier assigned to each of the elements within the next line portion of document  to be provided to the Braille display via assistive technology  as a result of the assistive technology event. In response to the modification script, user agent  of client machine  modifies transcoded DOM  and issues new output commands to assistive technology  and\/or output device . Assistive technology  may use the output commands to produce Braille display commands, and provide the Braille display commands to the Braille device. As a result, the next line portion of document  is displayed by the Braille device. The next line portion of document  may also be displayed or otherwise presented by output device .","Where assistive technology  is a screen reader, the user may, for example, press a \u201cnext line\u201d button in order for a \u201cnext line\u201d portion of document  to be presented. Assistive technology may provide one or more signals to user agent  indicating that the \u201cnext line\u201d button was pressed. User agent  may generate an assistive technology event in response, associate the assistive technology event with an element, and provide assistive technology event information and the identifier assigned to the element to user interface generator  and assistive technology interface generator . User interface generator  may not recognize the assistive technology event information, and may not respond to the assistive technology event. On the other hand, assistive technology interface generator  may recognize and respond to the assistive technology event as described above.","Assistive technology  within client machine  may cooperate with assistive technology interface generator  within transcoder proxy . For example, where assistive technology  may be a screen reader, and the user may press a button in order to make the screen reader \u201ctalk faster\u201d. In response, assistive technology  may produce \u201ctalk faster\u201d request signals, and may provide the \u201ctalk faster\u201d request signals to user agent . User agent  may forward the \u201ctalk faster\u201d request signals to assistive technology interface generator . Assistive technology interface generator  may respond to the \u201ctalk faster\u201d request signals by producing one or more commands which, when executed by assistive technology , cause the screen reader to produce speech at a faster rate. Assistive technology interface generator  may provide the commands to assistive technology  via user agent .","In the embodiment of , an assistive technology solution is divided between assistive technology  located within client machine  and assistive technology interface generator  located within interim server . The inclusion of assistive technology interface generator  within interim server  reduces client machine  resource requirements to support the assistive technology solution, thereby allowing the assistive technology solution to include a client machine with limited capabilities that may otherwise preclude the assistive technology solution.","In other embodiments of system , transcoder proxy  may be located within client machine . In such cases, transcoder proxy  may not be technically a \u201cproxy\u201d, but simply a transcoder. For example, client machine  may be a desktop computer system including a transcoder performing the functions of transcoder proxy  as described above.","It will be appreciated by those skilled in the art having the benefit of this disclosure that this invention is believed to be an electronic document delivery system which allows a client machine with limited resources to provide interactive aspects of electronic documents such as Web pages and\/or an assistive technology solution for a physically challenged user. It is intended that the following claims be interpreted to embrace all such modifications and changes and, accordingly, the specification and drawings are to be regarded in an illustrative rather than a restrictive sense."],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"BRIEF DESCRIPTION OF THE DRAWINGS","p":["Other objects and advantages of the invention will become apparent upon reading the following detailed description and upon reference to the accompanying drawings in which:",{"@attributes":{"id":"p-0031","num":"0030"},"figref":"FIG. 1"},{"@attributes":{"id":"p-0032","num":"0031"},"figref":"FIG. 2"},{"@attributes":{"id":"p-0033","num":"0032"},"figref":"FIG. 3"},{"@attributes":{"id":"p-0034","num":"0033"},"figref":["FIG. 4","FIG. 2"]},{"@attributes":{"id":"p-0035","num":"0034"},"figref":["FIG. 5","FIG. 2"]}]},"DETDESC":[{},{}]}
