---
title: System and method for on-line and off-line streaming application isolation
abstract: Providing streaming of applications from streaming servers onto clients. The applications are contained within isolated environments, and the isolated environments are streamed from the servers onto clients. The system may include the option of running both in on-line and off-line. When on-line, the system may include authentication of the streaming servers and authentication of clients and credentialing of the isolated environments and applications the clients are configured to run. The system may further include encrypted communication between the streaming servers and the clients. When off-line, the system may include the ability to run already installed isolated environments without requiring credentialing. The system may further include a management interface where administrators may add, remove and configure isolated environments, configure client policies and credentials, and force upgrades.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09369358&OS=09369358&RS=09369358
owner: Open Invention Network LLC
number: 09369358
owner_city: Durham
owner_country: US
publication_date: 20131002
---

{"@attributes":{"id":"description"},"RELAPP":[{},{}],"heading":["CROSS-REFERENCE TO RELATED APPLICATIONS","STATEMENT REGARDING FEDERALLY SPONSORED RESEARCH OR DEVELOPMENT","INCORPORATION-BY-REFERENCE OF MATERIAL SUBMITTED ON A COMPACT DISC","NOTICE OF MATERIAL SUBJECT TO COPYRIGHT PROTECTION","BACKGROUND OF THE INVENTION","BRIEF SUMMARY OF THE INVENTION","DEFINITIONS","DETAILED DESCRIPTION OF THE INVENTION","0. INTRODUCTION","1. OVERVIEW","2. IE STREAMING SERVER (IESS)","3. CLIENT ARCHITECTURE","4. IE STREAM SERVER CREDENTIALS AND SECURE COMMUNICATION","5. VALIDATING CLIENT CREDENTIALS WITH THE CLIENT POLICY MANAGER","6. CLIENT POLICY MANAGER ARCHITECTURE","7. ONLINE AND OFF-LINE CLIENT OPERATION","8. ADMINISTRATION","9. DEPLOYMENT SCENARIOS","10. CONCLUSION"],"p":["This application is a continuation and claims priority from U.S. application Ser. No. 12\/839,673 filed on Jul. 20, 2010 titled SYSTEM AND METHOD FOR ON-LINE AND OFF-LINE STREAMING APPLICATION ISOLATION now issued U.S. Pat. No. 8,555,360 issued on Oct. 8, 2013, which is a continuation-in part and claims priority from U.S. application Ser. No. 12\/813,593 filed on Jun. 11, 2010 titled SYSTEM AND METHOD FOR APPLICATION ISOLATION WITH LIVE MIGRATION now issued U.S. Pat. No. 8,539,488 issued on Sep. 17, 2013, which is a continuation-in-part of U.S. application Ser. No. 12\/421,691 filed on Apr. 10, 2009 titled SYSTEM AND METHOD FOR APPLICATION ISOLATION now issued U.S. Pat. No. 8,341,631 issued on Dec. 25, 2012, is related to U.S. patent application Ser. No. 12\/813,618 filed on Jun. 11, 2010 titled SYSTEM AND METHOD FOR HIERARCHICAL INTERCEPTION WITH ISOLATED ENVIRONMENTS now issued U.S. Pat. No. 8,464,256 issued on Jun. 11, 2013, is related to U.S. patent application Ser. No. 12\/421,692 filed on Apr. 10, 2009 titled SYSTEM AND METHOD FOR APPLICATION ISOLATION, and is related to U.S. patent application Ser. No. 12\/421,694 filed on Apr. 10, 2009 titled SYSTEM AND METHOD FOR APPLICATION ISOLATION, each of which are incorporated herein by reference in their entirety.","Not Applicable","Not Applicable","A portion of the material in this patent document is subject to copyright protection under the copyright laws of the United States and of other countries. The owner of the copyright rights has no objection to the facsimile reproduction by anyone of the patent document or the patent disclosure, as it appears in the United States Patent and Trademark Office publicly available file or records, but otherwise reserves all copyright rights whatsoever. The copyright owner does not hereby waive any of its rights to have this patent document maintained in secrecy, including without limitation its rights pursuant to 37 C.F.R. \u00a71.14.","1. Field of the Invention","This invention pertains generally to enterprise computer systems, computer networks, embedded computer systems, wireless devices such as cell phones, computer systems, and more particularly to methods, systems and procedures (i.e., programming) for providing application isolation for multiple applications running on a host operating system and for streaming live applications within isolated environments from a central server into isolated environments on a client and for streaming entire isolated environments from a central server onto a client.","2. Description of Related Art","In many environments one of the most important features is to ensure that one running application doesn't affect other running applications, and that the crash of one application doesn't compromise other running applications. In many environments applications share system resources, libraries and hardware, which expose subtle interconnects between seemingly unrelated applications.","Several approaches have been developed addressing this fundamental problem. The first level of application isolation is provided by the operating system. Modern operating systems such as Linux, UNIX, Windows2000, NT, XP and Vista provide some level of application isolation through the use of processes, and the underlying hardware memory management unit. The use of processes generally ensure than one running application process cannot address memory owned by other processes. This first level of isolation does not address the use of shared resources, such as files, file systems, shared memory, and libraries, so other approaches have been developed.","The present invention builds on the teachings in U.S. patent application Ser. Nos. 12\/813,593, 12\/813,618, 12\/421,691, 12\/421,692, and 12\/421,694, where Havemose (\u201cHavemose\u201d) teaches \u201cSYSTEM AND METHOD FOR APPLICATION ISOLATION WITH LIVE MIGRATION\u201d, \u201cSYSTEM AND METHOD FOR HIERARCHICAL INTERCEPTION WITH ISOLATED ENVIRONMENTS\u201d and \u201cSYSTEM AND METHOD FOR APPLICATION ISOLATION\u201d. Havemose discloses system and methods for creating and maintaining isolated environments wherein applications can be installed and run without interfering with any other applications on the host system. Havemose further discloses system and methods for creating isolated environments and for the use of pre-created isolated environment as \u201cinstallation-free\u201d images that can run on a client without requiring direct application installation on the client. Havemose also teaches live migration of isolated environment and the use of hierarchical interception. Havemose teaches an approach that works on commodity operating system using off-the-shelf applications. All of the patent applications were included in their entirety by reference above.","A related challenge is the deployment of applications across a large enterprise or network. By way of example, an enterprise may need to install and keep updated the word processing and spreadsheet applications on thousands of computer systems. With security and software updates being released almost daily, this is a major ongoing undertaking, and one that takes dedicated and highly trained staff. With hardware changing rapidly as well, it's not uncommon for a large enterprise to support hundreds of slightly different platforms with different underlying hardware such as video card, network card, amount of memory and peripherals. A solution would be to store all applications centrally and have the applications automatically installed, upgraded and patched when launched. While this eliminates the manual process of upgrading all applications, it does involve actual installation and upgrading which is fraught with possibilities for mistakes.","A variety of approaches has been created to address these particular challenges. Most require custom applications, custom operating systems or actual installation and updating of all of those thousands of systems.","In U.S. patent application Ser. No. 11\/301,066 Smith et. al, teach \u201cOS mini-boot for running multiple environments\u201d. According to the disclosures each \u201csilo\u201d is mini-booted from the same base operating system and isolated using name spaces. This requires a customized operating system with support for mini-boot. A typical commercial environment running a commodity installation of Microsoft Windows or Linux therefore cannot utilize these teachings.","In U.S. Pat. No. 6,574,618 Eylon et al. teach \u201cMethod and System for executing networked streamed application\u201d. The core teachings rely on a virtual file system installed on the client and mounted as a local file system combined with breaking up the application steaming into streamlets with delivery of the streamlets into the virtual file system. While this addresses one way to deliver applications, it does not address the concerns about application isolation and requires installation of a custom file system on all clients.","In U.S. Pat. No. 7,127,713 Davis et al, teach \u201cJava application framework for use in content delivery networks (CDN)\u201d. The core teachings describe a particular way to divide the server application into a highly distributed edge layer and a core centralized origin layer. While this addresses scalable delivery of content it does so in the context of Java and relies on the Java environment. It is not generally applicable to non-Java applications.","In U.S. Pat. No. 7,370,071 Greschler et al teach \u201cMethod for serving third party software applications from servers to client computers\u201d. The disclosures describe a method for hosting applications on a web server and methods for downloading and upgrading the application to a client computer. The disclosures do not address application isolation and furthermore requires upgrading the client computer application installations every time there's a software update.","Therefore, in many systems, streaming of applications from a central location requires one or more of customized operating systems, custom file systems, customized applications, and proprietary streaming protocols or is limited to specific languages or run-time environments, such as Java. Furthermore, the above-cited references do not include or address application isolation. Hence, there is a need for systems and methods that combine application isolation with streaming of applications from a central server for standard applications running on commodity operating systems such as Windows and Linux","A method, system, apparatus and\/or computer program are disclosed for streaming one or more applications from a central server onto one or more clients. The one or more applications are pre-configured inside one or more isolated environment and the isolated environments are streamed to the clients. The teachings of Havemose work on commodity operating systems, such as Windows and Linux, and work with standard \u201coff the shelf\u201d applications; no customizations of operating system or applications are required, and no virtual machines, virtual file system or any proprietary streaming protocols are needed. The isolated environments with said one of more applications are streamed to the clients and the clients can run said one or more applications without ever performing a local installation. In one embodiment an implementation in the Linux environment is disclosed, in another embodiment an implementation on Windows is disclosed.","Another aspect of the present invention is a caching subsystem, enabling optimized streaming of isolated environments. The caching subsystem ensures that, by way of example, after an isolated environment has been updated with a software patch, that only the necessary changes are streamed to clients using the particular isolated environment.","Yet other aspects of the present invention are a two-way authentication subsystem and encryption of communication data. The streaming server is authenticated by clients before they accepting any streaming data, and clients likewise are authenticated against pre-defined credentials before the streaming servers delivers any isolated environments or updates.","A user of the client computer can run the application without needing to install or configure the application; the user runs the application as pre-configured and provided on the streaming server. The present teachings require no special virtual file systems, proprietary streaming protocols, or any other proprietary protocols.","Another aspect of the present invention relates to a computer readable medium comprising instructions for streaming one or more applications from a central server onto one or more clients. The instructions are for streaming applications within isolated environments from a central server to one or more clients, for clients to run said one or more applications, for a two-way authentication subsystem and encryption of communication data, and the ability to run said one or more applications on clients without performing an installation of said one or more applications on said clients.","The terms \u201cWindows\u201d and \u201cMicrosoft Windows\u201d is utilized herein interchangeably to designate any and all versions of the Microsoft Windows operating systems. By example, and not limitation, this includes Windows XP, Windows Server 2003, Windows NT, Windows Vista, Windows Server 2008, Windows 7, Windows Mobile, and Windows Embedded.","The terms \u201cLinux\u201d and \u201cUNIX\u201d is utilized herein to designate any and all variants of Linux and UNIX. By example, and not limitation, this includes RedHat Linux, Suse Linux, Ubuntu Linux, HPUX (HP UNIX), and Solaris (Sun UNIX).","The term \u201cnode\u201d and \u201chost\u201d are utilized herein interchangeably to designate one or more processors running a single instance of an operating system. A virtual machine, such as VMWare or XEN VM instance, is also considered a \u201cnode\u201d. Using VM technology, it is possible to have multiple nodes on one physical server.","The terms \u201capplication\u201d is utilized to designate a grouping of one or more processes, where each process can consist of one or more threads. Operating systems generally launch an application by creating the application's initial process and letting that initial process run\/execute. In the following teachings we often identify the application at launch time with that initial process.","The term \u201capplication group\u201d is utilized to designate a grouping of one or more applications.","In the following we use commonly known terms including but not limited to \u201cclient\u201d, \u201cserver\u201d, \u201cAPI\u201d, \u201cjava\u201d, \u201cprocess\u201d, \u201cprocess ID (PID)\u201d \u201cthread\u201d, \u201cthread ID (TID)\u201d, \u201cthread local storage (TLS)\u201d, \u201cinstruction pointer\u201d, \u201cstack\u201d, \u201ckernel\u201d, \u201ckernel module\u201d, \u201cloadable kernel module\u201d, \u201cheap\u201d, \u201cstack\u201d, \u201cfiles\u201d, \u201cdisk\u201d, \u201cCPU\u201d, \u201cCPU registers\u201d, \u201cstorage\u201d, \u201cmemory\u201d, \u201cmemory segments\u201d, \u201caddress space\u201d, \u201csemaphore\u201d, \u201cloader\u201d, \u201csystem loader\u201d, \u201csystem path\u201d, \u201csockets\u201d, \u201cTCP\/IP\u201d, \u201chttp\u201d, \u201cftp\u201d, \u201cInter-process communication (IPC), \u201cAsynchronous Procedure Calls (APC)\u201d and \u201csignal\u201d. These terms are well known in the art and thus will not be described in detail herein.","In the following we use commonly known terms from computer security and encryption including, but not limited to \u201ccertificate\u201d, \u201ccertificate authority\u201d, \u201cSecure Socket Layer\u201d, \u201cSSL\u201d, MD-5\u201d, \u201cMD-6\u201d, \u201cMessage Digest\u201d, \u201cSHA\u201d, \u201cSecure Hash Algorithm\u201d, \u201cNSA\u201d, \u201cNIST\u201d, \u201cprivate key\u201d, \u201cpublic key\u201d, \u201ckey pair\u201d, and \u201chash collision\u201d. These terms are well known in the art and thus will not be described in detailed herein.","The term \u201ctransport\u201d is utilized to designate the connection, mechanism and\/or protocols used for communicating across the distributed application. Examples of transport include TCP\/IP, Message Passing Interface (MPI), Myrinet, Fibre Channel, ATM, shared memory, DMA, RDMA, system buses, and custom backplanes. In the following, the term \u201ctransport driver\u201d is utilized to designate the implementation of the transport. By way of example, the transport driver for TCP\/IP would be the local TCP\/IP stack running on the host.","The term \u201cinterception\u201d is used to designate the mechanism by which an application re-directs a system call or library call to a new implementation. On Linux and other UNIX variants interception is generally achieved by a combination of LD_PRELOAD, wrapper functions, identically named functions resolved earlier in the load process, and changes to the kernel sys_call_table. On Windows, interception can be achieved by modifying a process' Import Address Table and creating Trampoline functions, as documented by \u201cDetours: Binary Interception of Win32 Functions\u201d by Galen Hunt and Doug Brubacher, Microsoft Research July 1999\u201d. Throughout the rest of this document we use the term interception to designate the functionality across all operating systems.","The term \u201cfile context\u201d or \u201ccontext\u201d is used in relation with file operations to designate all relevant file information. By way of example, and not limitation, this includes file name, directory, read\/write\/append\/execute attributes, buffers and other relevant data as required by the operating system.","The term \u201ctransparent\u201d is used herein to designate that no modification to the application is required. In other words, the present invention works directly on the application binary without needing any application customization, source code modifications, recompilation, re-linking, special installation, custom agents, or other extensions.","The terms \u201cprivate and isolated environment\u201d and \u201cisolated environment IE)\u201d are used herein interchangeably to designate the private area set aside for application isolation, as described in Havemose. The abbreviation IE is used to designate an isolated environment on the diagrams and throughout the text.","The Term \u201cIsolated Environment Infrastructure (IEI)\u201d is used herein to designate the entire isolated environment infrastructure as disclosed in Havemose. It's comprised of shared libraries, a series of interceptors and other configuration information is described in the cited reference. Details of IEI will not be further described herein.","Further aspects of the invention will be brought out in the following portions of the specification, wherein the detailed description is for the purpose of fully disclosing preferred embodiments of the invention without placing limitations thereon.","Referring more specifically to the drawings, for illustrative purposes the present invention will be disclosed in relation to  through . It will be appreciated that the system and apparatus of the invention may vary as to configuration and as to details of the constituent components, and that the method may vary as to the specific steps and sequence, without departing from the basic concepts as disclosed herein.","The context in which this invention is disclosed is one or more applications installed inside isolated environments and hosted on an \u201cIsolated Environment Streaming Server (IESS)\u201d with the isolated environments being streamed to one or more clients. The Havemose reference cited above, included in its entirety by reference, teaches the creation and maintenance of the isolated environments. Without affecting the general case of multiple applications, the following scenarios often depict and describe one or two applications as applicable. Multiple applications are handled in a similar manner. Similarly the following scenarios often depict one or two clients; multiple clients are handled in a similar manner. Similarly, the following scenarios often depict one isolated environment per client; multiple isolated environments are handled in a similar manner. Similarly, the following scenarios often depict one IESS; multiple IESSes are handled in a similar manner.",{"@attributes":{"id":"p-0052","num":"0051"},"figref":["FIG. 1","FIG. 1"],"b":["1","10","20","30","40","1","10","1","12","13","18","14","16","2","20","2","22","23","28","24","26","3","30","3","32","33","38","34","36"]},"Each client connects to the IESS  via the Client Policy Manager (CPM) . The CPM validates the credentials and maintains an Account for each credentialed client. Associated with each Client Account is an update-cache used to optimize access to isolated environments enabled for the particular client. Each client has one update-cache per credentialed IE. If a client account has access to two IEs, there are thus two update-caches for that particular client.",{"@attributes":{"id":"p-0054","num":"0053"},"figref":"FIG. 1","b":["42","1","44","46","2","48","50","3","52","54","1","1","56","2","58","46","2","2","2","58","3","62"]},"It is readily apparent to someone skilled in the art that the architecture extends to any number of clients, any number of isolated environments on any one client, and to any number of pre-configured isolated environments on the IESS.",{"@attributes":{"id":"p-0056","num":"0055"},"figref":"FIG. 2","b":["80","82","84","86","90","92","100","102","104","90"]},"System resources, such as CPUs , I\/O devices , Network interfaces  and storage ,  are accessed using the operating system . Devices accessing remote resources use some form of transport network . By way of example, system networking  may use TCP\/IP over Ethernet transport, Storage ,  may use Fibre Channel or Ethernet transport, and I\/O may use USB.",{"@attributes":{"id":"p-0058","num":"0057"},"figref":"FIG. 3","b":["120","122","124","130","131","132","133","134"]},"System resources, such as CPUs , I\/O devices , Network interfaces  and storage  are accessed using the operating system . Devices accessing remote resources use some form of transport network . By way of example, system networking  may use TCP\/IP over Ethernet transport, Storage  may use Fibre Channel or Ethernet transport, and I\/O  may use USB.","To ensure secure and private communication the IESS most be properly credentialed. By way of example, if personnel in HR want to interact with the payroll system on the IESS and upload payroll information, the client system used by the HR employee validates the credentials of the IESS before uploading sensitive payroll information. If the IESS credential validation fails, the client system disconnects and stops interacting with the IESS.","A related issue is security; ensuring that no malware of spyware gets downloaded into the clients isolated environments. By requiring a credentialed IESS, there a no risks of connecting to a malware site by mistake as such connections would be refused by the isolated environment infrastructure without establishing any connection beyond the initial attempt to validate credentials.","Full IESS credentials are provided by a standard SSL certificate issued by either a certificate authority or generated in-house. If the IESS is accessed over the internet, a preferred implementation uses a certificate issued by a Certificate Authority. If the IESS only is accessed via a private LAN, WAN or VPN, an in-house generated certificate would suffice, but a certificates issued by a Certificate Authority equally works.","The present invention establishes the initial secure communication using Secure Sockets Layer (SSL), a standardized technology widely available in modern operating systems such as Windows and Linux. Open source implementations of SSL include OpenSSL (www.openssl.org).",{"@attributes":{"id":"p-0064","num":"0063"},"figref":"FIG. 4","b":"160"},"First a certificate for the IESS is generated. Generation of the IESS certificate only is needed when creating a new certificate, or when a certificate has expired. Generally, a certificate is valid for one or more years if generated by a certificate authority. First a private and public key pair is generated . This is accomplished using commonly available tools, such as \u2018makekey\u2019 provided by OpenSSL. In a preferred implementation, the a certificate request is prepared (\u2018certreq\u2019 in OpenSSL) with the public key and transmitted to the Certificate Authority  together with information confirming the senders identity. The Certificate Authority generates a certificate  and delivers it back to the originator  and the certificate is installed on the IESS. In an alternate implementation, the certificate is self-generated using one of the available tools, such as \u2018testreq\u2019 from OpenSSL. The certificate  is used to establish the credentials of the IESS by clients.",{"@attributes":{"id":"p-0066","num":"0065"},"figref":"FIG. 4","b":"170"},"The client initiates communication  with the IESS using SSL. In response to the initial contact, the IESS  accepts the request for the certificate  and delivers the certificate to the client. The client validates the certificate . Validation can take one of two forms: in a preferred implementation the certificate is compared against a local copy provided by the administrator as part of present invention, in an alternate implementation the certificate is validated against known and pre-approved certificate authorities. Modern operating systems, such as Linux and Windows, provide a mechanism to store pre-approved certificates. If the validation fails  the client disconnects  as the IESS is rogue, mis-configured, or has an invalid certificate. If the certificate validates , the client proceeds  and using SSL establishes secure and encrypted communication  with the IESS.","The client is now ready to have its client credentials validated  by the Client Policy Manager (CPM) within the IESS.","With possibly multiple isolated environments hosted on an IESS, proper authentication of clients is important. By way of example, if a particular isolated environment contains a payroll software application, only clients with the proper credentials (generally personnel in human resources) should have access to the payroll application. The Client Policy Manager (CPM) running on the IESS governs which clients have access to which isolated environment. The specific client privileges are set by the system administrator and are implemented by the CPM.","The connection between client and IESS, as describe above, is established using SSL, and is therefore secure and encrypted. The client only needs the client account as its credentials. All IEs available to a particular client are managed by the CPM and the key-pair needed for encryption is managed by SSL.","When a client wishes to use a particular application within an isolated environment; the client makes a request to the Client Policy Manager (CPM) for access to the requested IE. The CPM validates the client credentials at two levels: first the client is validated as having access to the IESS services, followed by validation of the client's credentials for the requested IE.",{"@attributes":{"id":"p-0072","num":"0071"},"figref":"FIG. 5","b":["200","202","204","206","207","208","224","210","212","214","218","224"]},"If the client is credentialed to run the particular IE , the IE needs to be either installed or potentially updated. If the IE is not installed on the client , it is copied to the client environment, and the IESS update-caches are updated to reflect the current state of the client copy. If the IE already is installed on the client , the update-caches on IESS are queried and updates propagated as necessary. The caching and installation are described in more detail below.","When a client starts the present invention he is presented with a list of available IEs based on his credentials.  illustrates by way of example embodiment , a client obtaining the list of credentialed applications and launching a chosen application. First the client is credentialed  as described above. The client requests a list of credentialed IEs  and the CPM  responds with a list of IEs available and credentialed for the particular client. The list is presented to the client . In a preferred embodiment the client is presented with a graphical user interface  allowing the client to choose from a list of credentialed applications  and starting the application directly by clicking either on the application name  or OK . The launch can be cancelled by selecting \u201cCancel\u201d . The client can also force a refresh  of available IEs, thereby updating the IE list . In a preferred embodiment the most recently chosen application is automatically highlighted. By way of example,  illustrates the scenario  with two credentialed applications (\u201cPayroll\u201d and \u201cBenefits\u201d) and one application no longer credentialed (\u201cInvestor Relations\u201d). By selecting \u201cOff-line\u201d  the user indicates no synchronization against the IESS and that the local already-installed IE should be run.","The Client Policy Manager (CPM) within the IESS is the main contact point between clients and the IESS. The functionality of the CPM fall in several broad categories: 1) delivery of certificates to clients and establishment of SSL, 2) general client account access, 3) administration, and 4) management and implementation of the caching subsystem.  illustrates by way of example embodiment , the architectural blocks of the CPM .","6.1 Certificates and SSL:","As disclosed previously, the IESS is credentialed by clients using a SSL certificate. The certificate serves dual roles, as a mechanism for the clients to validate the identity of the IESS and by providing keys for secure encrypted communication over SSL. Referring to  for illustrative purposes, the IESS certificate interface  is responsible for responding to certificate requests and to deliver them. The SSL interface  is responsible for the IESS end of SSL. In modern operating systems SSL is in general pre-defined to use certain ports such as  and  for SSL certificates and https respectively. In a preferred implementation, the present invention uses different ports that the default ports to avoid conflicts with web browsing and to minimize attacks. In an alternate implementation, the standard ports are used.","6.2 General Account Access:","As previously disclosed, the CPM  provides a number of client services. Referring to  for illustrative purposes: The validation of clients  as disclosed in section , the enumeration of available IEs given the clients credentials  (section ), and the general client account and credentials subsystem  containing an account database  with account info for each valid client account","Associated with each client account  is a record in the account database  containing specific information about the account, and subsystems  for cache management  and billing\/logging . Each client account record  in the database  contains at least the following fields:\n\n","The \u201cclient login\u201d is the \u201cuser-id\u201d used to validate the client account, while the \u201caccount holder name\u201d, is the actual name of the person to which the account is assigned. The \u201cstatus of account\u201d indicates if the account is valid and credentialed. Finally, the database maintains a list of isolated environments to which the user is credentialed. This list is presented to the user when requesting Client IE enumeration  as disclosed in section .","Associated with the client account are also the caching subsystem  and the billing and logging subsystem .","6.3 Update-Cache Subsystem for Isolated Environments.","When a client requests access to a credentialed isolated environment, the IE is streamed in its entirety if not already present on the client system, or the client IE is selectively updated with changes as appropriate. In the following, the details on these steps are disclosed.","By way of example, a typical Microsoft Office 2003 installation consists of approximately 1800 files with a combined size of about 315 MB. Some of the largest files are Word at 12 MB, Excel at 10 MB and PowerPoint at 6 MB. On a typical 1 Gbit\/sec corporate network a typical good transmission rate is about 100 MB\/sec, but can be significantly less. A typical ADSL connection runs at 1.5 Mbit\/sec or 150 kB\/sec and can be less.","The one-time installation of the entire environment with Office 2003 therefore typically takes about 3.1 sec or longer over corporate network. Over ADSL the Office IE takes 35 min or longer. While the 3.5 seconds on the office network is acceptable, the 35 minutes for ADSL access is not practical. The present invention includes an update-caching subsystem ensuring that only changed files are streamed to the client, and furthermore, that the streaming is compressed when appropriate.",{"@attributes":{"id":"p-0087","num":"0090"},"figref":["FIG. 7","FIG. 7"],"b":["256","255","260","1","266","264","2","270","268","256"]},"To reduce the need to stream files already present on the client computer an update-cache is employed for each IE. The update-cache contains pre-computed information assisting in quickly indentifying which files have changed since last time the IE was accessed; thereby reducing unnecessary streaming of IE files.","The update-cache for a particular IE is comprised of a list of records, called \u201cCacheLine\u201d, where each record corresponds to one file within the isolated environment. The data structure for \u201cCacheLine\u201d in pseudo code:",{"@attributes":{"id":"p-0090","num":"0093"},"tables":{"@attributes":{"id":"TABLE-US-00001","num":"00001"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"189pt","align":"left"}}],"thead":{"row":{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"Class CacheLine {"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"77pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"112pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"\u2003String","m_FileName;"]},{"entry":[{},"\u2003String","m_Directory;"]},{"entry":[{},"\u2003Time","m_LastChangeTime;"]},{"entry":[{},"\u2003long","m_FileSize;"]},{"entry":[{},"\u2003int [MD_SIZE]","m_MessageDigest;"]},{"entry":[{},"\u2003boolean","m_CompressionOn;"]},{"entry":[{},"\u2003int","m_MessageDigestAlgorithm;"]},{"entry":[{},"\u2003int","m_CompressionAlgorithm;"]},{"entry":[{},"};"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"2","align":"center","rowsep":"1"}}]}]}}]}}},"The field \u201cm_FileName\u201d is the name of the file, and m_Directory the directory location of the file. The combination of \u201cm_FileName\u201d and \u201cm_Directory\u201d uniquely identifies the file. The field \u201cm_LastChangeTime\u201d is the time at which the particular file was most recently changed, updated or created, and \u201cm_FileSize\u201d is the size of the file.","To make the update-cache efficient, the present invention pre-computes a \u201cm_MessageDigest\u201d representing the file. The message digest is a 128 bit or longer integer calculated in a manner to ensure that two different files have different message digests. Message Digests are well known within the art. Commonly deployed digests are MD5 (\u201cMessage-Digest algorithm 5\u201d of size 128 bit), MD6 (Message-Digest algorithm 6 with sizes up to 512 bits), and SHA-n (Secure Hash Algorithm \u2018n\u2019 with sizes up to 1024 bits). The message digest is used as part of the validation to see if a particular file should be streamed to the client. A practical issue is hash collision, where two different files produce the same hash value. SHA-2 has no known hash collisions and is the default in a preferred embodiment. To further reduce the risk of a hash-collision possibly affecting the update-caches, the size of the file (m_FileSize) and the time stamp of the most recent file change (m_LastChangeTime) are also used in the comparing against the update-cache.","All supported Message Digests Algorithms are predefined as integers and the one used encoded in the field \u2018m_MessageDigestAlgorithm\u201d.","Another field \u201cm_CompressionOn\u201d determines if compression is used for the particular file corresponding to the CacheLine. Depending on file size, network bandwidth and available CPU cycles, files may selectively be compressed prior to being streamed to the client. All supported compression algorithms are pre-defined as integers and the one used encoded in the field \u201cm_compressionAlgorithm\u201d. Compression algorithms are provided as part of modern operating systems such as Windows and Linux. In a preferred embodiment, the operating systems default compression algorithm is used. In an alternate embodiment a customized compression algorithm is used. A wide selection of open source and commercial no-loss compression algorithms exists, including but not limited to LZ, LZR, LZX, PKZIP, GZIP and ZIP. In a preferred embodiment, files are automatically compressed if the network operates at less than 1.5 mbit\/sec and the file size is greater than 1 MB. In an alternate embodiment every file is compressed. In another alternate embodiment no files are compressed.","Creating and Updating the Update-Cache:","The Havemose reference cited above and included in its entirety, teach creation and updating of isolated environments. The IE's associated update-cache is generated after install\/update as follows (in pseudo code)",{"@attributes":{"id":"p-0096","num":"0099"},"tables":{"@attributes":{"id":"TABLE-US-00002","num":"00002"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"thead":{"row":{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"For each file in the isolated environment"},{"entry":"{"},{"entry":"\u2003Identify CacheLine corresponding to file"},{"entry":"\u2003or create a new CacheLine"},{"entry":"\u2003Update CacheLine with"},{"entry":"\u2003{"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"63pt","align":"right"}},{"@attributes":{"colname":"2","colwidth":"154pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["\u2003\u2003- ","FileName, m_Directory,"]},{"entry":[{},"m_LastChangeTime, m_FileSize"]},{"entry":["\u2003\u2003- ","Compute message digest:"]},{"entry":[{},"set m_MessageDigest"]},{"entry":[{},"set m_MessageDigestAlgorithm"]},{"entry":["\u2003\u2003- ","Compute if the file should be compressed:"]},{"entry":[{},"\u2003set m_CompressionOn"]},{"entry":[{},"\u2003set m_CompressionAlgorithm"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"\u2003}"},{"entry":"\u2003Remove any CacheLine entries no longer used"},{"entry":"}"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}]}}]}}},"When creating a new Isolated Environment and installing applications within the IE, all CacheLines in the update-cache are new. The above listed set of instructions thus creates the update-cache with all new elements.","By way of example, after applying a software patch, the update-cache needs to be updated. A software patch generally modifies, adds and removes files, and the update-cache is updated to reflect the changes. Referring to the pseudo code above: CacheLines corresponding to new files are added, CacheLines corresponding to modified files are re-computed and updated, and CacheLines corresponding to now-deleted files are removed. Files unaffected by the software patch are left unchanged in the update-cache. Similarly the update-caches are updated after a patch to the operating system.","Client Synchronization with the Update-Cache.\u2014Optimized Streaming","Optimized streaming, where the fewest possible files are streamed from the IESS to a client requesting the use or update of a particular isolated environment, is achieved by using of the update-caches on both the client and the IESS",{"@attributes":{"id":"p-0100","num":"0103"},"figref":"FIG. 8","b":["280","282","284","286","288","290","290","294","296","290","298"]},"To determine which files within the IE  on the IESS have been modified since the client last connected, the Cache Mgr  compares the client's u-cache  with the corresponding update-cache  on the IESS. The entire process is as follows:","Initially, the client and the IE are credentialed against the CPM as previously disclosed . The client  requests an update of the IE and transmits the client's u-cache to the CPMs cache mgr . The CacheMgr's traverses the update-cache one CacheLine at a time  and comparing against the u-cache received from the client . First test  is to see if the current CacheLine is present in the client's u-cache. If the CacheLine is not in the u-cache, it signifies a new file in the IE, and the file corresponding to the CacheLine is prepared to be transmitted to the client . If the CacheLine exists in the u-cache, a second test is performed. The second test  is to see if the CacheLine entry has been updated when compared to the corresponding u-cache CacheLine. If the IESS CacheLine indicates a change has been made, the file corresponding to the CacheLine is prepared to be transmitted  to the client. If the CacheLines are identical in the update cache and u-cache, no further steps on this CacheLine are necessary.","The second test  to see if two CacheLine Entries are identical is performed as follows: The client u-cache and the update-cache CacheLines are considered identical if all of the following are identical: m_FileName, m_Directory, m_LastChangeTime, m_FileSize, and m_MessageDigest. If one or more of said fields are different, the entry is deemed not too match.","The final step after identifying a file for transmittal to the client  is to test if the file should be compressed  per the field in the CacheLine. If the file is to be compressed , it's compressed  and transmitted . If compression is not activated, the file is transmitted .","Upon completing the comparison of the client's u-cache with the update-cache , the update-cache is sent to the client ","On the client, all new files are received  and copied into the environment . Finally, the u-cache is replaced with the update-cache corresponding to the just-completed update . The final step is to synchronize the client's new u-cache against the client's IE and remove files no longer included in the u-cache . If the client immediately reconnected ,  the update process  would detect no new files and the update process would be instantaneous.","In continuation of the example above, a typical Microsoft Office security patch modifies few of the 1800 files in full installation of Office. By way of example, if 50 files are modified only those 50 files need to be streamed to the client, corresponding to less than 3% of the total installation. This reduces the ADLS update from 35 minutes to 1 minute, which is a practical delay to install a patch over a slower network.","The present invention supports two modes of operation: an \u201coff-line\u201d mode of operation where the client runs an already-installed isolated environment without connecting to the IESS, and an \u201con-line\u201d mode where the client is fully validated and updates automatically are streamed.","By way of example, a user connects with the present invention while at the office, retrieves and updates all credentialed IEs and works with the applications within the IE as if they were locally installed. Later the user is travelling and loads the present invention again. This time the user selects the \u201coff line\u201d mode of operation. In stead of getting credentialed by the IESS, the user simply runs the applications within the already installed IEs. No updates are forced and no changes are streamed. The \u201coff-line\u201d mode allows the user to work without needing network access.",{"@attributes":{"id":"p-0110","num":"0113"},"figref":"FIG. 6","b":"257"},{"@attributes":{"id":"p-0111","num":"0114"},"figref":["FIG. 9","FIG. 6"],"b":["340","342","344","346","348","350","351","252","352"]},"If the network is available on-line mode is enabled  and the user can choose to operate in on-line or off-line mode . If the user chooses off-line, the user is presented with the list of already credentialed IEs  available to run . The user chooses an IE  and the IE is run. If the user chooses to proceed in on-line mode, the steps outlined in section  and  are followed , . Upon finishing, the IEI exits the IE ","The present invention provides administration for both clients and the IESS. Administration on the client is a matter of installing the IEI and the user account name; all other administrative options are contained and controlled on the IESS.",{"@attributes":{"id":"p-0114","num":"0117"},"figref":"FIG. 10","b":["380","382","384","386","388","390","392","394"]},"1. add a new client","2. remove an existing client","2. add credentialed IEs for use by the client","3. remove credentialed IEs for use by the client","4. force a rebuild of update-cache for one or more of the clients IEs","5. set client login and account holder name","6. set status of account (active, not active)","The account information govern the client credentialing processed disclosed above","For general IESS administration  the administrative options  include but are not limited to:","1. creation and installation of an isolated environment","2. removal of an isolated environment","3. updated\/patch software within an isolated environment","4. rebuild one or more of the update-caches","5. set the default compression algorithm","6. set the default message digest algorithm","In a preferred embodiment the administration is performed using a graphical user interface. In an alternate embodiment, as software application programming interface (API) is used.",{"@attributes":{"id":"p-0131","num":"0134"},"figref":"FIG. 11","b":["400","402","404","406","402","408","412","408","402","414","416","402","402","410","418","416","412","404","402","402","404","406","410","412","414"]},"The just illustrated example embodiments should not be construed as limiting the scope of the invention but as merely providing illustrations of some of the exemplary embodiments of this invention","In the embodiments described herein, an example programming environment was disclosed for which an embodiment of programming according to the invention was taught. It should be appreciated that the present invention can be implemented by one of ordinary skill in the art using different program organizations and structures, different data structures, and of course any desired naming conventions without departing from the teachings herein. In addition, the invention can be ported, or otherwise configured for, use across a wide-range of operating system environments.","Although the description above contains many details, these should not be construed as limiting the scope of the invention but as merely providing illustrations of some of the exemplary embodiments of this invention. Therefore, it will be appreciated that the scope of the present invention fully encompasses other embodiments which may become obvious to those skilled in the art, and that the scope of the present invention is accordingly to be limited by nothing other than the appended claims, in which reference to an element in the singular is not intended to mean \u201cone and only one\u201d unless explicitly so stated, but rather \u201cone or more.\u201d All structural and functional equivalents to the elements of the above-described preferred embodiment that are known to those of ordinary skill in the art are expressly incorporated herein by reference and are intended to be encompassed by the present claims. Moreover, it is not necessary for a device or method to address each and every problem sought to be solved by the present invention, for it to be encompassed by the present claims. Furthermore, no element, component, or method step in the present disclosure is intended to be dedicated to the public regardless of whether the element, component, or method step is explicitly recited in the claims. No claim element herein is to be construed under the provisions of 35 U.S.C. 112, sixth paragraph, unless the element is expressly recited using the phrase \u201cmeans for.\u201d"],"BRFSUM":[{},{}],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"BRIEF DESCRIPTION OF THE SEVERAL VIEWS OF THE DRAWING(S)","p":["The invention will be more fully understood by reference to the following drawings which are for illustrative purposes only:",{"@attributes":{"id":"p-0039","num":"0038"},"figref":"FIG. 1"},{"@attributes":{"id":"p-0040","num":"0039"},"figref":"FIG. 2"},{"@attributes":{"id":"p-0041","num":"0040"},"figref":"FIG. 3"},{"@attributes":{"id":"p-0042","num":"0041"},"figref":"FIG. 4"},{"@attributes":{"id":"p-0043","num":"0042"},"figref":"FIG. 5"},{"@attributes":{"id":"p-0044","num":"0043"},"figref":"FIG. 6"},{"@attributes":{"id":"p-0045","num":"0044"},"figref":"FIG. 7"},{"@attributes":{"id":"p-0046","num":"0045"},"figref":"FIG. 8"},{"@attributes":{"id":"p-0047","num":"0046"},"figref":"FIG. 9"},{"@attributes":{"id":"p-0048","num":"0047"},"figref":"FIG. 10"},{"@attributes":{"id":"p-0049","num":"0048"},"figref":"FIG. 11"}]},"DETDESC":[{},{}]}
