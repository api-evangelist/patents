---
title: Method and system to print via email
abstract: A system and method that enables users operating originating devices, such as PC's, laptop computers, PDA's, pocket PC's, cell phones, etc., to print documents, images, etc. by sending the content to be printed via an e-mail message. The e-mail message is sent to a virtual printer e-mail address hosted by an e-mail server. The e-mail message is retrieved by a “driverless” print server (DPS) system, separated into a main file and attachment files, and printed on a printer to which the virtual printer e-mail address corresponds. The DPS system utilizes a table driven mechanism to determine appropriate applications to laod and process and handle various printer events generated by various software applications pertaining to the documents desired to be printed by operators of the originating devices. The system and method enable documents and the like to be printed without requiring a printer device driver corresponding to the target printer to be loaded on the originating device.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=06993562&OS=06993562&RS=06993562
owner: Peerless Systems Corporation
number: 06993562
owner_city: El Segundo
owner_country: US
publication_date: 20020321
---

{"@attributes":{"id":"description"},"BRFSUM":[{},{}],"heading":["BACKGROUND OF THE INVENTION","SUMMARY OF THE INVENTION","DETAILED DESCRIPTION OF THE ILLUSTRATED EMBODIMENTS","EXEMPLARY FILE SERVER COMPUTER SYSTEM"],"p":["1. Field of the Invention","The present invention concerns computer printing in general, and in particular concerns a system and method that enables uses to print out documents and the like on a printer through use of e-mail messages.","2. Background Information","Typically, in order to print out a document, it is necessary for an originating device, such as a personal computer (PC), laptop computer, personal digital assistant (PDA), pocket PC, etc., to have a printer device driver loaded prior to being able to print. The printer device driver provides an abstracted interface between the operating system (OS) and a specific printer to enable the operating system (and applications running on the OS) to communicate with any printer supported by the OS using a common set of text, graphic, and layout commands. This enables developers to develop applications without having to be concerned (generally) with the specific operations of the various printers that may be used with the application. These specific operations are handled by the OS in combination with the printer device drivers.","In today's mobile business environments, business people often encounter situations in which they are away from their home office, yet need to be able to print out documents at either a nearby printer or a selected printer proximate to a business contact they wish to provide one or more documents to. Generally, in order to print to either printer, two things need to happen. First, a mobile computing device on which the document files are stored (or through which they may be accessed) must be linked in communication with the destination printer. This may typically be performed by connecting to a network to by which the printer may be accessed, or by directly connecting to the printer via a printer cable (e.g., serial, parallel, or USB cable). In many cases, both of these connection solutions may be impractical or unavailable. For instance, many business printers are designed to be connected to a network and administrators do not want their network connection disrupted by connecting the printer to the originating mobile computing device via a printer cable. Furthermore, the network to which the printer is connected may be a private network that the administrator will not allow \u201cforeign\u201d computers to be connected to.","The second half of the foregoing problem pertains to the printer device driver. As discussed above, in order for the mobile computing device to be able to print via a printer, an appropriate printer device driver must be loaded on mobile computing device. In general, a specific device driver will be required for each unique type of printer (even unique models within a similar line of printers). These drivers take time to load, occupy stored space, and may cause software conflicts with other applications on the mobile computing device. Additionally, the business person may not have access to the needed driver. In some instances, a suitable printer driver may be available via the media from which the OS was originally installed, which people generally don't carry with them when away from the office. Oftentimes, the printer will comprise a model that was made available after the OS was released, whereby the only way to load the appropriate driver is to have a specific device driver that was provided with the printer. Short of being able to download the specific driver via the Internet, the business person will simply be out of luck, having no way to print via the destination printer.","The present invention provides a system and method for allowing communications between various originating devices operating various operating systems across various networks to enable the originating devices to print documents via a \u201cdriverless\u201d print server system without requiring any printing device drivers to be loaded on the originating device. The server system utilizes a table driven mechanism to process and handle various printer events generated by various software applications pertaining to the documents desired to be printed by operators of the originating devices. Output is then directed over various networks to a selected target printer. The server system provides two-way communication between the server and the originating device as well as two-way communication between the server and the target printers.","In a typical implementation, a user operating an originating device, such as a PC, laptop, PDA, pocket PC, cell phone, etc., accesses the Driverless Print Server (DPS) system by sending an e-mail message to a \u201cvirtual\u201d printer e-mail address corresponding to a \u201ctarget\u201d printer the user would like source data contained in or attached to the e-mail message (e.g., a document file) to be printed on. The DPS system retrieves e-mail sent to one or more virtual printer e-mail addresses corresponding to printers hosted by the system, and processes each e-mail to print its source data on the printer corresponding to the virtual printer e-mail address to which that message was sent.","Processing the e-mail includes separating the main body of the e-mail and any attachments into separate files, and submitting a job request for each file. When processing the job request, a file type of the file is determined, and the file is loaded into an appropriate application or browser or directly sent to a printer spooler. A print action is then invoked to cause printer data to be generated via the application or browser in combination with a print subsystem of the operating system on which the application or browser runs. The printer data is then sent to the target printer to be printed.","A system and method for that enables users operating originating devices to print documents, images, and Web pages via a \u201cdriverless\u201d print server (DPS) system by sending source data corresponding to the object(s) to be printed in an e-mail message is described in detail herein. In the following description, numerous specific details are disclosed, to provide a thorough understanding of embodiments of the invention. One skilled in the relevant art will recognize, however, that the invention can be practiced without one or more of the specific details, or with other methods, components, etc. In other instances, well-known structures or operations are not shown or described in detail to avoid obscuring aspects of various embodiments of the invention.","Reference throughout this specification to \u201cone embodiment\u201d or \u201can embodiment\u201d means that a particular feature, structure, or characteristic described in connection with the embodiment is included in at least one embodiment of the present invention. Thus, the appearances of the phrases \u201cin one embodiment\u201d or \u201cin an embodiment\u201d in various places throughout this specification are not necessarily all referring to the same embodiment. Furthermore, the particular features, structures, or characteristics may be combined in any suitable manner in one or more embodiments.","Terminology","The following discussion discloses embodiments in accordance with the invention for implementing driverless print services, whereby originating devices may submit documents to be printed on targeted printers over both private and public networks. In accordance with the disclosed embodiments, the following terms are used:\n\n","An overview of a network infrastructure  corresponding to an exemplary implementation of the invention is shown in . Network infrastructure  depicts four originating devices, including laptop computers  and , a PDA , and a cell phone . It will be understood that an originating device may include any device that may send an e-mail message to an e-mail address, including but not limited to PC's, workstations, laptop computers, PDA's, pocket PC's, cell phones, wireless two-way pagers (e.g., Blackberry devices), and Web TV appliances. Each of the originating devices may access any target printer that is supported by a Driverless Print Server site via a \u201cvirtual\u201d e-mail address for that printer. Such target printers depicted in  include PostScript printers and , an ASCII line printer , Hewlett-Packard (HP) laser printers , , and , IBM laser printers  and , and a plotter . In general, any type of printer or plotter may be used as a target printer. As such, the printers and plotter in  are for illustrative purposes only, and are not meant to limit the types of printers that may be implemented in accordance with the invention.","Each target printer will be connected to a Driverless Print Server computer, as depicted by Driverless Print Server computers , ,  and . A Driverless Print Server computer comprises a set of DPS software modules  (also referred to herein a the Driverless Print Server or the Driverless Print Server software) operating on a computing device, such as a PC, workstation, laptop, or computer server. As described in further detail below, the Driverless Print Server software in combination with an e-mail module  enables a user of an originating device to request to have one or more hard copy output documents produced at a target printer by sending an e-mail message with optional attachments to the virtual address for that target printer, wherein the hard copy output documents pertain to the e-mail message and any attachment that is sent with the message. In general, e-mail messages may be accessed from any e-mail server to which a Driverless Print Server computer may download e-mail messages from, such as enterprise e-mail server , which may typically be accessed via a LAN or wide area network (WAN), or the e-mail server may be hosted by an Internet Service Provider (ISP) that is accessed via the Internet, as depicted by ISP e-mail server . Optionally, e-mail server software may be installed on the Driverless Print Server computer.","As shown by a grouping bracket , laptop computer , Driverless Print Server computer , and printers , , and  are depicted to reside at a common physical location, such as a hotel . In a typical \u201chospitality\u201d implementation, a printing service provider, such as a hotel, airport, copy center, etc., may provide a local area network (LAN) such as LAN  that allows originating devices to directly send e-mail messages over the LAN to an e-mail server, wherein the messages may be retrieved by a Driverless Print Server and printed on any associated printer provided by the hospitality site.","As illustrated in , typical DPS sites also include office and home sites. In instances in which the DSP host computer comprises a mobile computer, the DPS site may be located anywhere there is an appropriate network connection and access to a corresponding e-mail server is available (or such e-mail server services are provided by software operating on the mobile computer).","In the case or wireless devices such as PDA  and cell phone , the wireless device will typically be able to send an receive e-mail messages via a cellular network  that will include a service provider data center  that provides e-mail support services for wireless service subscribers (i.e., users of PDA  and cell phone . The service provider data center is connected to Internet  to enable messages to be delivered from the service provider data center to destination e-mail addresses.","Further details of one embodiment of the software components by which the invention may be implemented are shown in . The software components are logically divided into four groups, including a setup component , an e-mail module , a document processing component , and an administration component . Each of these components further include a plurality of software applications, scripts, components and\/or modules. Setup component  includes a Print Setup module  and an Account Wizard module . E-mail module  includes an e-mail account and configuration module , an e-mail handling component , and an E-mail Trigger Common Gateway Interface (CGI) script . Document processing component  includes DPS CGI scripts , a Driverless Print Server module , a Port Monitor , and a Status Monitor . Administration component  includes a System Monitor , administration web pages , an auto extension module , and an auto update module .","In general, administration web servers will be served via a web server. In one embodiment, the web server comprises a portion of the software running on the Driverless Print Server computer, as depicted by web server component . Optionally, the web server may run on a separate machine that is linked to the DPS computer in an n-tier configuration, as will be recognized by those skilled in the distributed processing art.","In one embodiment, Print Setup module  comprises a Microsoft (MS) Windows application run by a system administrator to change the configuration of a Windows Printer that is used by the system. The application may be used to convert and existing printer, install a new printer, or delete a printer. Conversion of an existing printer comprises taking an existing printer installation and replacing the operations provided by MS Window's port monitor with Port Monitor . The use of Port Monitor  allows the spool file to be manipulated by the DPS system and allows Status Monitor  to send the spool file to a selected target printer.","Print Setup module  may also be used to install a new printer with an appropriate printer device driver. For example, an administrator can set up a postscript printer by installing an Adobe PostScript\u2122 driver for use with the DPS system by using the printer's PostScript Printer Description (PPD) file. If the administrator can provide a PDD, the printer setup module will install the PostScript driver and configure it for use by the DPS system. In other cases, the administrator may provide appropriate printer device driver software for the new printer.","Print Setup module  may also be used to delete a printer. In such an event, the Windows port monitor can be restored as the system's port monitor or a DPS server's support for a selected printer can be completely removed.","Account wizard module  applies security to a set of Administrative Control Panel Web page files so that the administrator's login will determine which set of Web pages are accessible. In one embodiment, the system implements three administrative levels, including monitor, manager, and administrative levels. In one embodiment, the account wizard creates these three groups as MS Windows user groups. Furthermore, the account wizard creates MS Windows user accounts and places them into one of the administrative user groups. In one embodiment, account wizard module  comprises an MS Windows application.","In one embodiment, the operations provided by e-mail account and printer setup component  and e-mail handling component  are implemented by a MS Windows application named MPEmail.exe (MPEmail application ) that is run on the Driverless Print Server computer. MPEmail application  comprises a Win32 application with a dialog box user interface (UI). Menu items on the main window provide entry to various dialog boxes for setting up e-mail accounts and configuring the e-mail module. As described in further detail below, the MPEmail application operates by retrieving the mail from an e-mail account via the Post Office Protocol version  (POP). The retrieved main is then submitted to Driverless Print Server  for printing.","A representation of a main UI  for MPEmail application  is shown in . Main UI  provides a menu bar that includes a File pulldown menu , an Edit pulldown menu , and a Help pulldown menu . The UI further includes a status text box  in which the status of the application is displayed. Since the UI runs on the Driverless Print Server computer, is may be accessed only be an administrator, and is not accessible to consumer users.","To support e-mail printing, the following must be configured for each target printer: 1) an e-mail account, with POP access, to serve as a virtual e-mail address for the printer; 2) a printer configured to print with the Driverless Print Server system; and 3) a configured MPEmail account, which ties the e-mail address to the target printer.","In general, the e-mail account may be any e-mail account that supports e-mail access via the POP protocol. It will be recognized by those skilled in the art that other e-mail protocols may also be used if corresponding modifications are made to e-mail module  to support those protocols. The setup of a specific account is outside the scope of the present invention. The target printer setup may be performed via dialog boxes providing by the MPEmail UI.","To view existing, edit existing, or create new MPEmail accounts, the administrator will activate Edit pulldown menu  and select the accounts option (not shown). This will launch an e-mail accounts dialog box , as shown in . Any existing e-mail accounts will appear in a selectable text box . A new e-mail account may be added via activation of an \u201cAdd\u201d button . An existing e-mail account may be edited by selecting the desired account in selectable text box  (e.g., by clicking on the account entry in the displayed list of accounts) and activating an \u201cEdit\u201d button . Similarly, an existing e-mail account may be removed by selecting the account and activating a \u201cRemove\u201d button .","Activation of either \u201cAdd\u201d button  or \u201cEdit\u201d button  will launch and Add\/Edit dialog box , as shown in . The MPEmail account name is entered in an edit box . This account name is used for display in e-mail accounts dialog box  and used as a reference when debugging is activated. UserID is entered in an edit box . The UserID is the account name used during the POP login process when MPEmail retrieves mail from the e-mail account.","The password for the e-mail account is entered in an edit box . Typically, e-mail that is stored on a given e-mail server may be access by providing appropriate login credentials, which include the UserID and a corresponding password that is selected by the user (in this case, an MPEmail instance) when the e-mail account is initially set up.","The incoming POP server is entered in an edit box . This value comprises a DNS (domain name system) name of the e-mail server used during the POP login process when MPEmail retrieves mail from the email account. The outgoing SMTP (simple mail transport protocol) server is entered in an edit box . This value comprises a DNS name of the email server used when MPEmail sends an e-mail reply for the purpose of providing status back to the consumer user who submits an e-mail print request.","An associate port value may be selected via a dropdown control . The associated port comprises the DNS name or IP address assigned to the target printer. The dropdown list will contain the port names for every configured printer for a given Driverless Print Server installation.","A poll frequency value may be entered via an edit box  or changed via up and down controls that are adjacent to the edit box. The poll frequency comprises a time in seconds between each attempt to retrieve e-mail via the POP protocol. In one embodiment the minimum allowable entry is 30 seconds, while the maximum allowable entry is 3600 seconds.","Selection of a trigger checkbox  turns on an e-mail trigger method provided by the MPEmail application that is used for initiating the retrieval of e-mail. The e-mail trigger method is an alternative to the polling method described above and requires additional setup for proper operation. Further details of the e-mail trigger method is described below. When trigger checkbox  is marked as selected, edit box  and the corresponding up and down controls  will be disabled.","Once desired values for Add\/Edit dialog box  have been entered or selected, the administrator may activate an \u201cOK\u201d button  to save the values. Optionally, the administrator may activate a \u201cCancel\u201d button  to cancel an Add or Edit operation.","E-mail print activities may be logged by activating an optional logging feature provided by the MPEmail application. The application will maintain a log file for each account when logging is enabled. To enable logging, the administrator will activate Edit pulldown menu  and select the Options menu option. This will launch an Options dialog box (not shown) that includes an Enable logging check box. Logging will be enabled for every account when the Enable logging check box is checked.","The log file will be created in the same directory the MPEmail application is installed. The file name will begin with MPEmail, and then have the MPEmail account name, with an appended .log. For example, for an account name CopyRoom@MyCompany.com, the log file for that account will be named MPEmailCopyRoom@MyCompany.com.log. In one embodiment, the log file makes an entry for any failure that might occur and an entry for any successful retrieval of e-mail.","The MPEmail application will send an e-mail response back to the e-mail print service user when the Send reply feature is enabled. This may be enabled by selecting the Send reply check box in the Options dialog box. In one embodiment, checking the Send reply check box will enable the Send reply feature for all accounts.","The e-mail server can implement an event trigger that informs e-mail module  when mail has arrived at the e-mail server. When new mail arrives on the e-mail server (e.g., at enterprise e-mail server  or ISP e-mail server ), the e-mail server calls e-mail trigger CGI script , which is stored on the Driverless Print Server computer. If the CGI call is successful, the MPEmail application immediately retrieves mail from the e-mail server.","The trigger script call is a TCP\/IP connection between any port on the e-mail server and port  on the Driverless Print Server computer. The data is sent in the HTTP\/. protocol using the POST method as defined in the World Wide Web Consortium (WC) request for comments (RFC) . The POST is to the locations of the e-mail trigger script (e.g., cgi-bin\/trigger.cgi) and the data content comprises named value pairs as described in TABLE 1 below. The e-mail trigger CGI script will verify the POST data and return a text string status in the data section reply. The possible return strings are shown in TABLE 1.",{"@attributes":{"id":"p-0062","num":"0073"},"tables":{"@attributes":{"id":"TABLE-US-00001","num":"00001"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"175pt","align":"left"}}],"thead":{"row":[{"entry":"TABLE 1"},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}},{"entry":["Reply String","Description"]},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}}]},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["success","email module successfully received and processed the data."]},{"entry":["failure1","Failed to trigger the email module. Most likely the email"]},{"entry":[{},"module is not running."]},{"entry":["failure2","Memory allocation failure in trigger.cgi. The email module"]},{"entry":[{},"was not triggered."]},{"entry":["failure3","Zero length content sent to trigger.cgi. The email module"]},{"entry":[{},"was not triggered."]},{"entry":["failure4","Failed to get the content length. The email module was not"]},{"entry":[{},"triggered."]},{"entry":["failure10","Invalid email address. The email module was not triggered."]},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}}]}}}}},"The data transmitted in the HTTP POST will be in name value pair format having the form of AccountName=S. The name value fields are defined in TABLE 2 below:",{"@attributes":{"id":"p-0064","num":"0075"},"tables":{"@attributes":{"id":"TABLE-US-00002","num":"00002"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"1","colwidth":"49pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"49pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"119pt","align":"left"}}],"thead":{"row":[{"entry":"TABLE 2"},{"entry":{"@attributes":{"namest":"1","nameend":"3","align":"center","rowsep":"1"}}},{"entry":["Name","Value","Description"]},{"entry":{"@attributes":{"namest":"1","nameend":"3","align":"center","rowsep":"1"}}}]},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["AccountName","Numeric","The email address that is designated for"]},{"entry":[{},"ASCII String","the printer."]},{"entry":{"@attributes":{"namest":"1","nameend":"3","align":"center","rowsep":"1"}}}]}}}}},"An example of a trigger CGI call for the email address printer@magicprint.net is:\n\n","After retrieving an e-mail, the MPEmail application will split the email into document files for submitting to the Driverless Print Server. The main contents of the e-mail will become a main e-mail content file and each of the file attachments to the e-mail (if any) will become an attachment file. If the main email content is in both text and HTML, the HTML content will be used.","The e-mail header information will be added to the top of the main e-mail content before creating the document file. The main e-mail content file and each attachment file will be submitted as a separate print job to the Driverless Print Server. As an example, if an email with attachments that include an MS Word document and an Adobe Acrobat document are e-mailed to an MPEmail account, three print jobs will be queued on the Driverless Print Server, including a print job for the main e-mail content file, and print jobs for each of the MS Word document and the Adobe Acrobat document.","Moving on to Document Processing component , CGI Scripts  provide the Administrative Panel Web pages with advanced functionality. Further details of the CGI scripts are shown in . A cancel print jobs CGI script  is used to remove a print job request from a system. From the Administrative Control Panel Web pages, the script can be called for any print job that has been submitted to the system and has yet to have its spool file sent to the printer.","An automatic extension configuration CGI script  searches the server computer for installed applications, discovers which document types can be supported by the applications found, and configures the system to allow print job requests of the file types discovered. An update system CGI script  is used to compare the installed system components against the latest available components, downloads any new components (when applicable), and installs them on the system.","A Print Request CGI script  takes files provided by the MPEmail application and creates a corresponding print job request to the system. A Job Queue CGI script  reads the queue of print job requests from the system and returns the list to the script's calling Web page.","A Reset CGI script  closes the system applications and starts them again. This script is used as a last resort attempt by the system administrator to clear any program errors that may have occurred. A Status CGI script  provides the Administrative Control Panel Web pages with the progress status of a print job request.","The components implemented by Driverless Print Server  are shown in . The Driverless Print Server is the main software component for the system. It comprises an application that runs on the DPS server computer that accepts job requests, queues the requests and directs the print process for the document, image or URL from request to final printing. The Driverless Print Server includes a File Types Configuration list , a Browser Print component , a Supplemental Application Print component , a Shell Extension Print component , a Job Request Server component , a Job Processing component , a Handle Windows component , and a Job Status component .","File Types Configuration list  is maintained by the Driverless Print Server. The configuration list has, for each file type, the extension, and the method used to print that file type. When the printing method is provided by Supplemental Application Print component , the list contains the path to the application used for printing, the menu commands the application uses to print, and the menu commands the application uses to close the application.","The Browser Print component  comprises one of three methods the Driverless Print Server uses to print. In one embodiment, this component uses the application programming interface (API) provided by the Microsoft Internet Explorer (IE) Web browser. Using the IE API, the component runs the browser within a window on the Driverless Print Server application. Typically, the Browser Print component will be used to print images and PDF (portable document format) documents.","Document and image files can be printed using this method if the IE browser instance on the DPS server computer is configured with a browser plug-in for the type of document or image file requested. For example, consider the IE plug-in for Adobe Acrobat\u2122. Adobe Acrobat document files have a PDF extension. If the Acrobat plug-in is installed on the server, IE's navigate programming interface allows PDF files to be loaded in IE and IE's print programming interface will allow printing of the file.","The Supplemental Application Print component  provides another method used by the Driverless Print Server to print. This component uses File Types Configuration list  to find the application associated with the file extension, load the file into the application, execute the print menu command for the application, and close the application upon completion of the printing operation. With the combination of the File Types Configuration list and the Supplemental application Print method, the system administrator can add support for additional document or image types by installing the application on the server machine and editing the File Types Configuration list.","The Shell Extension Print component  provides a third method used by the Driverless Print Server to print. This component uses the MS Windows Shell Extensions programming interface to print. The MS Windows Shell Extensions interface is an operating system feature that allows a user to print a document type with a command sent to the application that supports the document type. If the application supports the Shell Extension interface, the application will load the document, print it, and close itself. With the combination of the File Types configuration list and the Shell Extension Print method, the system administrator can add support for additional documents or image types by installing the application on the server machine and editing File Types configuration list .","The Job Request Server component  takes print job requests from Print Request CGI script  and queues them for processing.","The Job Processing component  manages print job request from insertion into the job queue until the spool file is sent to the printer. This component reads the queued job requests, determines which one of the three printing methods will be used for printing, submits the document, image, or URL to the determined printing method, handles executing the print command, and submits the spool file to the status monitor for printing. During the stages of the printing process, the status is tracked and made available to any Status CGI script  calls that may be made.","The Handle Windows component  is used to provide reliable printing. Many applications display message boxes and\/or dialogs during the printing process to inform or gather information from the user who is requesting printing services. In order to support automatic processing of print requests, there needs to be a mechanism to respond to any message box or dialog that might appear in the application used to print the request. This mechanism is provided by Handle Windows component . The Driverless Print Server watches the server during the printing process for messages boxes and dialogs that might appear. When a new message box or dialog appears, the Handle Windows component reads the information, compares it with known messages or known statements, and closes the message box or dialog according to its programmed logic. Further details of the Handle Windows component are discussed below with reference to .","The Job Status component  is provided to maintain a memory-mapped file of all of the jobs in each Driverless Print Server queue. At periodic intervals, job status information is written to the memory-mapped file so that the Status CGI script can read the status of job requests.","A Port Monitor comprises a standard component in the MS Windows printing subsystem. The port monitor receives spooled data form the printer driver via the printing subsystem. A traditional port monitor is responsible for taking the spooled data from the printer driver and delivering it to the printer. In the Driverless Print Server system, Port Monitor module  () writes the spooled data to a file. Once the entire spool file has been written to a file, Port Monitor module  messages the Driverless Print Server with the name and location of the spooled file.","Status Monitor  comprises an application that runs on the DPS server computer. It performs a plurality of functions, but it is primarily responsible for sending spool files to printers. After the Driverless Print Server is messaged form Port Monitor  with the location of a spool file, the Driverless Print Server messages Status Monitor  with the location of the spool file, the URL of the printer where the spool file should be send, and protocol information for sending the spool file to the printer. Status Monitor  creates a queue for each requested printer URL. Since the printer can only receive one spool file at a time, it serializes the spool file transmittals. Status Monitor  can create and maintain multiple queues simultaneously.","After the spool file has been successfully sent to the printer, Status Monitor  messages the Driverless Print Server that the job is complete. The job history is updated, and the job is removed from the Driverless Print Server queue. Status Monitor  can be configured to send a message to external systems before or after the spool file has been sent to the printer. An example of an external system might be a hotel billing system, which could use the information to apply a charge to a guest's bill.","Proceeding to Administration component , System Monitor  comprises an application that monitors all the other system components, watching for failures and listening for specific requests. When print job requests arrive from Print Request CGI script , if the Driverless Print Server application is not running, the Print Request CGI script can request that System Monitor  start the Driverless Print Server, thus allowing the print job request. System Monitor  periodically sends messages to the Driverless Print Server to get the status of the program and any print jobs in its queue. If the System Monitor detects a failure, it will clear the problem.","System Monitor  may also be used to download and install newer system components. It collects the version numbers of all components in the system and sends them to a system's Update Web site. If the Update Web site replies with information about the availability of newer components, it will retrieve those components and install them on the system. The System Monitor accepts update requests from its menus or from Update System CGI script .","Administrative (Panel) Web pages  allow remote configuration and monitoring of a system by administrative users. A security feature is used to prevent access of these Web pages by consumer users. An exemplary Administrative Panel Web page  is shown in . Administrative Panel Web page  provides a plurality of top level tabs for navigating to Administrative Web pages corresponding to the tabs, including a print jobs tab , an about tab , a file types tab , a consumer contact tab , a printer management tab , and a configuration tab .","Activation of print jobs tab  causes a lower set of tabs to be rendered, as shown in . These include a view print queue tab , a list by date tab , a list by owner tab , a list by printer tab , an all jobs tab , and an advanced search tab . As shown in , activation of view print queue tab  enables an administrator to view pending print jobs for a printer that is selected via a pulldown control . The pending print jobs are displayed in a text box , and the number of jobs in the queue are displayed in a text box . Activation of a more info button  enables the administrator to see more information for a selected print job.","Activation of list by date tab , list by owner tab , list by printer tab  and all jobs tab  enable the administrator to view a history of print jobs pertaining to the particular tab selected. For example, activation of list by date tab  allows an administrator to view all print jobs for a given Driverless Print Server for a selected date range, as depicted by an Administrative Panel Web page  shown in . The administrator then enters start date and end date values via edit boxes  and  and activates a \u201cgo\u201d button  to request the records for all the print jobs within the date range be retrieved. The number of results per page may be selected via a pulldown control , and navigation between records is enabled by a set of navigation controls . Each record includes information pertaining to a start time, owner, document name, print status, a finish time, number of pages printed, total charges, owner address, and printer address.","Activation of list by owner tab  enables the administrator to view information on all jobs submitted to a particular owner, a depicted by an Administrative Panel Web page  in . Typically, the owner may be the return e-mail address corresponding to the personal e-mail account the consumer user used to send the e-mail print request. If desired, a table mapping e-mail addresses to actual people or business entities may be implemented so that access to owner information may be accomplished by simply entering the name or the person or business entity rather than the e-mail address. The owner information is entered in an edit box . The administrator then activates a \u201cgo\u201d button  to retrieve records corresponding to the owner. As before, the number of results per page can be select via a corresponding control (not shown), and navigation between records is enabled via a navigation control set .","Activation of list by printer tab  enables the administrator to view all of the completed jobs for a selected printer, as depicted by an Administrative Panel Web page  in . The identity of the printer for which the print job history is desired is selected via a pulldown control , whereupon corresponding records will be retrieved in response to activation of a \u201cgo\u201d button . The number of results per page may be selected via a pulldown control , and navigation between records is provided by a navigation control set .","Activation of all jobs tab  enables the administrator to view information pertaining to all jobs printed through a particular Driverless Printer Server, as depicted by an Administrative Panel Web page  in . As before, the number of results per page may be selected via a corresponding control (not shown), and navigation between records is enabled via a set of navigation controls .","Activation of advanced search tab  enables the administrator to view information pertaining to print jobs that are selected based on various input values, as depicted by an Administrative Panel Web page  in . A date range for the search is entered via start and end date edit boxes  and . The printer or printer(s) may be selected via a pulldown control . The owner for the printer may be provided in a block . If no owner is specific, the search will be performed for all owners. A site identification may be selected via a pulldown control . The results per page may be selected via a pulldown control . A pulldown control  is provided to enable the administrator to define a column to sort by. A pair of radio buttons  enable the sort order to be defined as either ascending or descending. Once desired values have been entered and selected, the administrator may initiate the search via a \u201cgo\u201d button . A previous set of search parameters may be retrieved via activation of a \u201cprevious\u201d button , while the values for the various search parameters may be reset to default values via activation of a \u201creset\u201d button .","Activation of file types tab  enables the administrator to view and\/or edit the file types for documents and image files that may be printed by the Driverless Print Server, as depicted by a Web page  in . Navigation of the various file type records is provided via an edit control set  and an edit control set . The number of records per page may be selected via a pull-down control . If it is desired to edit values for a particular file type, the administrator may activate an \u201cedit\u201d button  in the appropriate row, which will enable the values in the value columns to be edited. These columns include an \u201cExtension\u201d column, an \u201cApplication\u201d column, and \u201cEnabled\u201d column, a \u201cMethod\u201d column, a \u201cToLaunch\u201d column, a \u201cToPrint\u201d column, a \u201cToClose\u201d column, and a \u201cStatic\u201d column. The extension for the file type is entered in the \u201cExtension\u201d column. The name of the corresponding application or type of application (e.g., imaging) is entered in the \u201cApplication\u201d column. The file path to launch the application is entered in the \u201cToLaunch\u201d column. Internal commands for printing from and closing an application may be entered in the \u201cToPrint\u201d column and the \u201cToClose\u201d column, respectively. File type mapping information corresponding to a given row can be deleted by marking appropriate check boxes in a delete column and activating a delete button .","Activation of configuration tab  enable the administrator to update and configure the operation of a Driverless Print Server installation. As shown in , activation of the configuration tab loads a Web page  that provides three additional tabs, including an update tab , an extensions tab , and a job accounting server tab . Activation of extensions tab  launches an Extensions Web page corresponding to Web page .","When a file is submitted for printing, the Driverless Print Server opens an application corresponding to the file's file type. For example, if the file has a .doc extension an MS Word application will generally be opened. The application then opens the file, and through its built-in print commands, sends the submitted file to a selected printer. The extensions Web page (i.e., Web page ) displays rows (entries) that list file type information (in an \u201cExtension\u201d column) and the software application corresponding to the file type (in an \u201cApplication Name\u201d column). Each of the entries also displays a priority level for the extension (to define an order in which file types with the same extension are evaluated to determine the appropriate application for the submitted file), a Registry Location that identifies where in the OS registry information pertaining to the application is stored, a Default Path for the application, an Executable Name for the application, and internal codes to print and close the application. An administrator can add a new file type via activation of an \u201cadd new entry\u201d button , which will render a Web page with corresponding edit controls for each of the columns in Web page  (not shown). A similar Web page is rendered in response to activation of an \u201cupdate file types\u201d button , only in this instance the edit controls will be filled in with values pertaining to a selected file type to be updated. Updating of a file type can also be initiated by activation of an \u201cedit\u201d button . As before, navigating between records is enabled by a set of navigation controls .","The Driverless Print Server uses an Extensions Table corresponding to the file type values to determine which applications installed on the server computer to use for printing files of each file type listed in the Extensions Table. The information in the table is also used to determine the location of the executable files on the server computer. In one embodiment, the Extensions Table and various other configuration and print job data is maintained in a database. Typically, the database will be hosted on the same machine as hosts the DPS software, although a separate machine may also be used to host the database, as will be recognized by those skilled in the art.","Processing a Print Request","A data flow diagram that illustrates data flows and operations performed by the e-mail module and DPS system software components in response to an e-mail print request is shown in . Initially, the user of an originating device  will send an e-mail message  to a virtual printer e-mail address corresponding to an e-mail address account that is hosted by an e-mail server . Generally, the e-mail message will be sent from the originating device to the e-mail server via a computer network , such as a LAN, WAN or the Internet. As discussed above, the e-mail server may be provided by an ISP, may be an enterprise e-mail server, or may be provided by e-mail server software running on a Driverless Print Server computer . Both ISP and enterprise e-mail servers generally support multiple e-mail accounts, with the e-mail server storing zero or more messages for each account. These messages are depicted as e-mail messages , and will include e-mail message .","As discussed above, all of the software components shown in  are running on Driverless Print Server, including e-mail module  and document processing component , the former of which includes MPEmail application the latter of which includes Driverless Print Server software . Based on the e-mail notification method selected via Add\/Edit dialog box , e-mail module  will either employ a polling method  to poll e-mail server  to see if any messages have been received corresponding to the virtual printer address of a target printer  in the manner discussed above. Optionally, if trigger checkbox  is checked, e-mail server  will call e-mail trigger CGI script  that is stored on Driverless Print Server computer  via an appropriate call mechanism when e-mail is received that has been addressed to the virtual printer e-mail address. The e-mail trigger CGI script will then be run in the manner described above.","Generally, a Driverless Print Server installation or \u201csite\u201d will provide support for one or more printers. As shown in , the DPS site corresponding to the present example include a PostScript printer , an HP Laser printer , a plotter , as well as target printer . A separate set of configuration parameters will be set up for each printer, and stored in a DPS database . In accordance with a site that has multiple printers available, either polling method  and\/or the e-mail trigger CGI script calling mechanism may need to be configured to support the multiple printers. For example, in one embodiment polling method  may check for e-mail corresponding to the virtual printer e-mail address for each of the printers at the DPS site. In another embodiment, the polling method may be called separately for each printer. Similarly, the e-mail trigger call mechanism may be set up on the e-mail server such that e-mail trigger CGI script  is called anytime mail is received in an e-mail account corresponding to any of the printers at the DPS site.","Once it is determined that e-mail has been received corresponding to one of the virtual printer e-mail addresses, the e-mail is retrieved from the e-mail server. Typically, this will comprises logging into the e-mail server using an appropriate login method (e.g., providing a POP3 host address, UserID and password for a POP e-mail server). This logic method is depicted as login method  in .","Upon receiving the e-mail, each e-mail message will be handled individually by MPEmail application . As discussed above, the content of the e-mail will be divided into separate main e-mail and attachment files, and Print Request CGI script  will be called to generate a print job request . In one embodiment, the print job request comprises a document named Tmpdoc.dpsn (n representing a number) that is sent via the Print Request CGI script to a job queue . In one embodiment, the job queue comprises a first-in first-out (FIFO) type of job queue. Optionally, other types of job queues may also be used, as will be recognized by those skilled in the art. As discussed above, job queue operations are performed by job processing component .","The job queue submits job requests to be processed by the system. Each request is processed by a block  in which the tmpdoc.dpsn file is parsed to retrieve print job parameters corresponding to the print request, which are stored in a document file . For example, parsed information may include a printer selection, number of copies, identity of consumer user, document name, etc. A portion of the print job parameters are then stored in DPS database .","In a decision block , a determination is made to what type of file corresponds to a current print job, e.g., a text file, an application file, an image file or a printer file. If the document pertains to a browsable document, image, PDF file, or other type of object that can be rendered on a browser, the logic flows to a block , wherein the image or PDF document is loaded via the Driverless Print Server's browser. Otherwise, the logic flows to a block  in which the document and an appropriate supplemental application that can be used to print the document is loaded. For example, if the document comprises a MS Excel spreadsheet, an instance of the MS Excel application is loaded, along with the Excel document.","In a block , an internal command is generated to invoke a print operation that will cause the browser or supplemental application to print the source data. For example, most applications provide a File->Print menu option that initiates a printing process for the application. In this instance, the DPS software will generate an event corresponding to a print command, which will be handled by the application as if a user selected the File->Print menu option. Optionally, as discussed above, the DPS software may employ Shell Extension Print component  to make an appropriate operating system API call to invoke a printing operation to cause the source data to be printed.","In response to an internal application or browser print request, various printing and document information is passed internally to operating system components that handle printer operations. As discussed above, in one embodiment the Driverless Print Server is operated in an MS Windows OS environment. Accordingly, this environment provides an OS print subsystem  including a Graphical Device Interface (GDI) component  that interacts with a printer device driver  corresponding to the target printer to generate appropriate printer (i.e., output device) data that will be sent to the target printer to produce an output document. The printer data is internally handled by an MS Windows print spooler component  that outputs a print spool file containing the printer data that is received by Port Monitor .","In the illustrated example, it is assumed that target printer  comprises a PostScript printer. Accordingly, Windows Print Spooler sends printer data comprising a PostScript file  to Port Monitor , which then starts Status Monitor  and submits the PostScript file to the Status monitor. Status Monitor  then submits PostScript file  to target printer . In conjunction with this event, job history information is updated in a DPS database .","In one embodiment, the Driverless Print Server supports direct printing of printer files. For instance, if the print job file comprises a printer file, it can be directly printed if it corresponds to a printer file type of the target printer. For example, PostScript files may be printed on PostScript printers. Similarly, printer files for other types of printers may have been previously created by selecting a \u201csave to file\u201d option during a print process. If the file is determined to be a printer file in decision block , the logic proceeds to a block , wherein the printer file (depicted by a printer file ) is directly sent to Windows print spooler .","As discussed above, the system may be configured to automatically send a reply message back to the e-mail account from which the original e-mail print request was sent. Accordingly, a determination is made in a decision block  to whether the reply option is selected, and if it is, an e-mail reply message  containing the status for the print request is generated and sent to the e-mail account address of the user who submitted e-mail message . In one embodiment, MPEmail application  calls Status CGI script  to retrieve the status of the print job corresponding to the print request, appends the status to the e-mail reply message, parses the header of the original e-mail print request message (e.g., e-mail message ) to extract the sender's e-mail address, and sends the e-mail reply message to that address.","Further details of the internal operations of Driverless Print Server software  are shown in . As before, e-mail  is retrieved and processed by e-mail module , which calls Print Request CGI script  for each main e-mail or attachment file. In response, Print Request CGI script  creates a print job document (i.e., tmpdoc.dpsn document ) for each file. The Print Request CGI script also pipes a message containing a print request to a New Job Pipe Server , which stores the messages in a message queue . For each print request message, a Message Queue Handler  starts a corresponding thread that parses the corresponding print job document, thereby generating document file  and submitting a print job to job queue .","As depicted by a start job queue loop block  and end job queue loop block , the following operations and logic displayed between these loop ends is performed for each print job. First, in a block , the next job is retrieved from job queue . In a decision block  in which a determination is made to what type of file type printing method should be used. If the file requires a supplemental application (e.g., MS Word, MS Excel, AutoCad, etc.), the logic proceeds to block  where the document and appropriate supplemental application is loaded in the manner discussed above. Once the file is loaded in the supplemental application, a file printing command is internally generated in block  to submit the file for printing by the OS, as before.","Next, in a decision block  a determination is made to whether a \u201cCompleted\u201d message is received from Port Monitor . This determination is made on a periodic basis or through a software interrupt mechanism until the \u201cCompleted\u201d message has been received. Status Monitor  is then started in a block , which sends print document  to target printer  and updates the job history data in DPS database , as before.","Returning to decision block , if the document type is a file type that can be printed directly by the Driverless Print Server computer without requiring a supplemental application (e.g., a PDF document or various types of image files), the logic proceeds to block , wherein the DPS computer's browser loads the image or document to render an corresponding image or document. Once rendered, the remaining print operations are performed in the manner discussed above, beginning with block . As discussed above, if the document type is a printer file, the document is directly sent to Windows Print Spooler .","A flowchart detailing the logic and operations provided by Handle Windows component  is shown in . As shown by start blocks  in , a Handle Windows thread is launched at the start of decision block  and immediately after the print action has been invoked in block . As discussed above, the Handle Windows component is used to handle various dialog and messaged boxes that may be launched when an application is loaded, when a document is loaded into an application, when a print action is initiated, during the printing process, etc.","Returning to the flowchart of , upon being launched, the Handle Window thread makes a determination to whether there are any more desktop windows to examine in a block . Such windows will generally include dialog boxes and message boxes. If there are no more windows to examine, the thread is ended, as depicted by and end thread end block . If there are more windows to examine, the logic proceeds to a block  in which window information for a window is obtained. Under MS Windows operating systems, window information may be obtained by making an appropriate Windows API call.","Next, in a decision block  a determination is made to whether the window is a child window of a rendering application (i.e., was it produced by a supplemental application or a browser). If the decision is no, the window does not correspond to the rendering application, and the logic proceeds to decision block  to evaluate the next window. If the answer to decision block  is Yes (TRUE), the logic proceeds to a block  in which text and control buttons for the window are examined.","As determined by a decision block , if the text matches a standard message string the logic proceeds to a block  in which a window close command is internally provided to emulate a user activating either a close button on the window or the window close icon in the window's frame. The logic then returns to decision block  to process the next window.","If the text does not match a standard message string, the answer to decision block  is No (FALSE), and the logic proceeds to a decision block  in which a determination is made to whether the text matches a corresponding an entry list MessageText value stored in a Handle Windows Table  in DPS database . If there is a matching value, the logic proceeds to a block  in which the table command is executed by retrieving the data in the row of the matching MessageText value and issuing a corresponding message to the Windows API based on the parameters provided by the data. For example, a typical entry list row  is shown at the top of . The row contains information pertinent to the Windows API, including a MessageID, Wparam, and Lparam value. These parameters are used to make a corresponding API call to effectuate the desired operation for handling the window. Once the table command is executed, or if the answer to decision block  is No (FALSE), the logic returns to decision block  to begin processing the next window.","In the foregoing description and accompanying drawings, embodiments of the invention that implement software operations provided by MS Windows operating system components were disclosed. This is not meant to be limiting, as the principles and teaching of the invention may be applied to implementation in which other operating systems are used, such as UNIX-based operating systems and LINUX-based operating systems. For example, various UNIX and LINUX operating systems provide graphical user interfaces, application API's and printing capabilities that are supported by OS kernel components that provide similar operations to the MS Windows printing support components discussed above (e.g., Windows GDI, print spooler, printer drivers, etc.)","With reference to , a generally conventional computer server  is illustrated, which is suitable for use in connection with practicing the present invention, and may be used for the DPS server computer and Web server computer where a separate computer is used for performing Web server operating. . Examples of computer systems that may be suitable for these purposes include computer servers operating Microsoft Windows, UNIX-based, and LINUX-based operating systems.","Computer server  includes a chassis  in which is mounted a motherboard (not shown) populated with appropriate integrated circuits, including one or more processors  and memory (e.g., DIMMs or SIMMs) , as is generally well known to those of ordinary skill in the art. A monitor  is included for displaying graphics and text generated by software programs and program modules that are run by the computer server. A mouse  (or other pointing device) may be connected to a serial port (or to a bus port or USB port) on the rear of chassis , and signals from mouse  are conveyed to the motherboard to control a cursor on the display and to select text, menu options, and graphic components displayed on monitor  by software programs and modules executing on the computer. In addition, a keyboard  is coupled to the motherboard for user entry of text and commands that affect the running of software programs executing on the computer. Computer server  also includes a network interface card (NIC) , or equivalent circuitry built into the motherboard to enable the server to send and receive data via a network .","File system storage corresponding to the invention may be implemented via a plurality of hard disks  that are stored internally within chassis , and\/or via a plurality of hard disks that are stored in an external disk array  that may be accessed via a SCSI card  or equivalent SCSI circuitry built into the motherboard. Optionally, disk array  may be accessed using a Fibre Channel link using an appropriate Fibre Channel interface card (not shown) or built-in circuitry.","Computer server  generally may include a compact disk-read only memory (CD-ROM) drive  into which a CD-ROM disk may be inserted so that executable files and data on the disk can be read for transfer into memory  and\/or into storage on hard disk . Similarly, a floppy drive  may be provided for such purposes. Other mass memory storage devices such as an optical recorded medium or DVD drive may also be included. The machine instructions comprising the software programs, components, and modules that causes processor(s)  to implement the operations of the present invention that have been discussed above will typically be distributed on floppy disks  or CD-ROMs  (or other memory media) and stored on one or more hard disks  until loaded into memory  for execution by processor(s) . Optionally, the machine instructions may be loaded via network  as a carrier wave file.","Although the present invention has been described in connection with a preferred form of practicing it and modifications thereto, those of ordinary skill in the art will understand that many other modifications can be made to the invention within the scope of the claims that follow. Accordingly, it is not intended that the scope of the invention in any way be limited by the above description, but instead be determined entirely by reference to the claims that follow."],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"BRIEF DESCRIPTION OF THE DRAWINGS","p":["The foregoing aspects and many of the attendant advantages of this invention will become more readily appreciated as the same becomes better understood by reference to the following detailed description, when taken in conjunction with the accompanying drawings, wherein:",{"@attributes":{"id":"p-0012","num":"0011"},"figref":"FIG. 1"},{"@attributes":{"id":"p-0013","num":"0012"},"figref":"FIG. 2"},{"@attributes":{"id":"p-0014","num":"0013"},"figref":"FIG. 3"},{"@attributes":{"id":"p-0015","num":"0014"},"figref":"FIG. 4"},{"@attributes":{"id":"p-0016","num":"0015"},"figref":"FIG. 5"},{"@attributes":{"id":"p-0017","num":"0016"},"figref":"FIG. 6"},{"@attributes":{"id":"p-0018","num":"0017"},"figref":"FIG. 7"},{"@attributes":{"id":"p-0019","num":"0018"},"figref":"FIG. 8"},{"@attributes":{"id":"p-0020","num":"0019"},"figref":"FIG. 9"},{"@attributes":{"id":"p-0021","num":"0020"},"figref":"FIG. 10"},{"@attributes":{"id":"p-0022","num":"0021"},"figref":"FIG. 11"},{"@attributes":{"id":"p-0023","num":"0022"},"figref":"FIG. 12"},{"@attributes":{"id":"p-0024","num":"0023"},"figref":"FIG. 13"},{"@attributes":{"id":"p-0025","num":"0024"},"figref":"FIG. 14"},{"@attributes":{"id":"p-0026","num":"0025"},"figref":"FIG. 15"},{"@attributes":{"id":"p-0027","num":"0026"},"figref":"FIG. 16"},{"@attributes":{"id":"p-0028","num":"0027"},"figref":"FIG. 17"},{"@attributes":{"id":"p-0029","num":"0028"},"figref":"FIG. 18"},{"@attributes":{"id":"p-0030","num":"0029"},"figref":"FIG. 19"}]},"DETDESC":[{},{}]}
