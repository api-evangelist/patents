---
title: Simulation of shallow viscoelastic flows
abstract: A method, system, and computer-readable storage medium are disclosed for simulating shallow viscoelastic flows. In one embodiment, input representing a deposition of a fluid in a shallow bed may be received. The fluid may have a set of fluid properties including a viscoelastic property. In one embodiment, a motion of the fluid in the shallow bed may be simulated. The motion may be simulated based on the set of fluid properties including the viscoelastic property. The simulation of the motion may comprise determining a viscoelastic force acting on the fluid based on the viscoelastic property.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08219370&OS=08219370&RS=08219370
owner: Adobe Systems Incorporated
number: 08219370
owner_city: San Jose
owner_country: US
publication_date: 20090520
---

{"@attributes":{"id":"description"},"BRFSUM":[{},{}],"heading":["BACKGROUND","Description of Related Art","SUMMARY","DETAILED DESCRIPTION OF EMBODIMENTS"],"p":["Digital image editing is the process of creating and\/or modifying digital images using a computer system. Using specialized software programs, users may manipulate and transform images in a variety of ways. These digital image editors may include programs of differing complexity such as limited-purpose programs associated with acquisition devices (e.g., digital cameras and scanners with bundled or built-in programs for managing brightness and contrast); limited editors suitable for relatively simple operations such as rotating and cropping images; and professional-grade programs with large and complex feature sets.","Digital images may include raster graphics, vector graphics, or a combination thereof. Raster graphics data (also referred to herein as bitmaps) may be stored and manipulated as a grid of individual picture elements called pixels. A bitmap may be characterized by its width and height in pixels and also by the number of bits per pixel. Commonly, a color bitmap defined in the RGB (red, green blue) color space may comprise between one and eight bits per pixel for each of the red, green, and blue channels. An alpha channel may be used to store additional data such as per-pixel transparency values. Vector graphics data may be stored and manipulated as one or more geometric objects built with geometric primitives. The geometric primitives (e.g., points, lines, paths, polygons, B\u00e9zier curves, and text characters) may be based upon mathematical equations to represent parts of vector graphics data in digital images. The geometric objects may typically be located in two-dimensional or three-dimensional space. A three-dimensional object may be represented in two-dimensional space for the purposes of displaying or editing the object.","An operation often provided by a digital image editor is the deposition of virtual \u201cpaint\u201d onto a virtual \u201ccanvas.\u201d Paint is a fluid, and the deposition of virtual paint may involve fluid simulation techniques. Fluid simulation techniques in computer graphics are often concerned with solving the Navier-Stokes equations for inviscid, incompressible fluid flow. The fluid domain may be treated as an n-D (e.g., 2D or 3D) grid of density values. The fluid may be evolved by computing forces applied on each cell, advecting the quantity of fluid in each cell based on its velocity, diffusing each cell, and projecting the result to be divergence-free. The projection step typically requires simultaneously solving a sparse system of equations over the entire fluid domain. Thus, the projection step is a global computation using a sparse solver. However, sparse solvers may be inappropriate for parallelization, including highly parallel hardware such as graphical processing units (GPUs). Furthermore, the stable simulation of both inviscid and viscous fluids may require an expensive implicit solver. The use of such an expensive solver may be undesirable for high resolution, real-time simulations.","Various embodiments of systems, methods, and computer-readable storage media for simulating shallow viscoelastic flows are disclosed. In one embodiment, input representing a deposition of a fluid in a shallow bed may be received. The fluid may have a set of fluid properties including a viscoelastic property. In one embodiment, a motion of the fluid in the shallow bed may be simulated. The motion may be simulated based on the set of fluid properties including the viscoelastic property. The simulation of the motion may comprise determining a viscoelastic force acting on the fluid based on the viscoelastic property.","The fluid may comprise a paint, and the shallow bed may comprise a canvas. In one embodiment, an effect of the deposition of the fluid (e.g., paint) on the shallow bed (e.g., canvas) may be determined. The determined effect may be dependent on the motion simulation. In one embodiment, an image representing the effect of the deposition of the fluid (e.g., paint) on the shallow bed (e.g., canvas) may be displayed.","In one embodiment, the motion of the fluid in the shallow bed may be simulated using a shallow fluid simulation technique based on two spatial dimensions and a height field. In one embodiment, the fluid simulation technique may comprise an implementation of the lattice Boltzmann method (LBM). In one embodiment, the viscoelastic force may be determined by determining a strain on the fluid using parameters representative of a shear displacement of the fluid and a rest height of the fluid, wherein the parameters representative of the shear displacement of the fluid comprise parameters representative of a movement of the fluid away from a rest position in the xy plane, and then by determining the viscoelastic force based on the strain.","While the invention is susceptible to various modifications and alternative forms, specific embodiments are shown by way of example in the drawings and are herein described in detail. It should be understood, however, that drawings and detailed description thereto are not intended to limit the invention to the particular form disclosed, but on the contrary, the invention is to cover all modifications, equivalents and alternatives falling within the spirit and scope of the present invention as defined by the appended claims.","In the following detailed description, numerous specific details are set forth to provide a thorough understanding of claimed subject matter. However, it will be understood by those skilled in the art that claimed subject matter may be practiced without these specific details. In other instances, methods, apparatuses or systems that would be known by one of ordinary skill have not been described in detail so as not to obscure claimed subject matter.","Some portions of the detailed description which follow are presented in terms of algorithms or symbolic representations of operations on binary digital signals stored within a memory of a specific apparatus or special purpose computing device or platform. In the context of this particular specification, the term specific apparatus or the like includes a general purpose computer once it is programmed to perform particular functions pursuant to instructions from program software. Algorithmic descriptions or symbolic representations are examples of techniques used by those of ordinary skill in the signal processing or related arts to convey the substance of their work to others skilled in the art. An algorithm is here, and is generally, considered to be a self-consistent sequence of operations or similar signal processing leading to a desired result. In this context, operations or processing involve physical manipulation of physical quantities. Typically, although not necessarily, such quantities may take the form of electrical or magnetic signals capable of being stored, transferred, combined, compared or otherwise manipulated. It has proven convenient at times, principally for reasons of common usage, to refer to such signals as bits, data, values, elements, symbols, characters, terms, numbers, numerals or the like. It should be understood, however, that all of these or similar terms are to be associated with appropriate physical quantities and are merely convenient labels. Unless specifically stated otherwise, as apparent from the following discussion, it is appreciated that throughout this specification discussions utilizing terms such as \u201cprocessing,\u201d \u201ccomputing,\u201d \u201ccalculating,\u201d \u201cdetermining\u201d or the like refer to actions or processes of a specific apparatus, such as a special purpose computer or a similar special purpose electronic computing device. In the context of this specification, therefore, a special purpose computer or a similar special purpose electronic computing device is capable of manipulating or transforming signals, typically represented as physical electronic or magnetic quantities within memories, registers, or other information storage devices, transmission devices, or display devices of the special purpose computer or similar special purpose electronic computing device.","Using embodiments of the systems and methods described herein, realistic behavior of paint may be simulated on a computer system. In one embodiment, the behavior of a wide range of natural paint media may be simulated realistically. In one embodiment, the behavior of the natural paint media may be simulated in real-time (e.g., in response to user input to deposit the paint onto a virtual canvas in a painting application). In one embodiment, the behavior of the natural paint media may be simulated at a high resolution.",{"@attributes":{"id":"p-0022","num":"0021"},"figref":"FIG. 1","b":["100","100","100","110","110","100","120","120","110","110","110","100"]},"Using the image editor , a user may seek to apply paint  (e.g., represented by pixel colors and transparency values) to the digital image . The digital image  may also be referred to herein as a \u201ccanvas.\u201d For example, the user may desire to paint portions of the image  using a paintbrush provided by the editing operations  of the image editor . In one embodiment, the digital image editing program  may comprise a brush model that is used to model such a paintbrush. The digital image editing program  may also comprise instructions to simulate brush behavior. The behavior of the paint  applied to the digital image (e.g., deposited using the brush model and the simulated brush behavior) may be simulated using paint behavior simulation functionality  (also referred to herein as paint simulation functionality ).","The paint simulation functionality  may comprise program instructions executable on a computer system adapted for paint simulation. The program instructions may be executable using a central processing unit (CPU) and\/or graphics processing unit (GPU). In one embodiment, the output of the paint simulation functionality  may be based, in part, on user input. The user input may be used to selected parameters such as the location of the paint  within the digital image , the color(s) of the paint , and the natural media type of the paint  (e.g., watercolor, oil paint, etc.). Various parameters used in the paint simulation functionality  may also be selected automatically or by retrieving default values.","As will be described in greater detail below, the paint simulation functionality  may comprise a fluid simulation. In one embodiment, the fluid simulation may be computed using the lattice Boltzmann method (LBM) with shallow water wave equations and amended to account for viscoelasticity. In one embodiment, use of the LBM may allow for acceleration of the simulation using a graphics processing unit (GPU). Acceleration using the GPU may enable real-time performance on screen-resolution (e.g., 1 megapixel) grids. The shallow water wave equations may be used to simulate a thickness of paint at each pixel, e.g., to capture 3D effects across the paint surface. The addition of a viscoelastic force term may allow elastic properties (i.e., shape retention) to be incorporated in the simulation. In one embodiment, a wide range of types of natural media, from watercolors to oil paints, may be simulated interactively and at high resolution. Flow across the surface of the canvas and flow through the canvas media may both be simulated, thereby further extending the variety of natural media effects that can be simulated in a single unified framework.","The process of painting with natural media may comprise a series of stages. Each stage may be simulated independently to result in a realistic digital reproduction of the real-world painting experience. A first stage may involve the changing shape of the brush tip during a stroke, thereby determining where paint is deposited. A second stage may involve the exchange of paint between the brush tip and the canvas. A third stage may involve the motion of paint that has been deposited on the canvas. Systems and methods for simulating the third stage are described herein.","In one embodiment, the behavior of a wide range of natural paint media, including watercolors and oil paints, may be simulated realistically. As used herein, the term \u201ccanvas\u201d may refer to any painting surface, regardless of its material. Watercolors comprise a pigment suspended in regular water; the fluid is thin and inviscid. When watercolors are deposited on a fibrous canvas, the water is absorbed by the canvas and disperses over a larger area gradually due to capillary action. This type of fluid flow that occurs in the medium of the canvas is referred to as \u201cmedia flow.\u201d Alternately, a hard non-porous canvas typically will not absorb the fluid, and droplets of water may therefore coalesce on the surface due to surface tension. This flow is referred to as \u201csurface flow.\u201d Media flow is responsible for most of the characteristic traits of watercolor, such as the branching patterns and feathering of edges. In contrast to watercolors, oil paints comprise a pigment suspended in a medium such as linseed oil, which is thick and viscous. Oil paint deposited onto a canvas is not absorbed by the canvas, but remains on the surface; that is, oil paints exhibit surface flow but not media flow. Therefore, all of the characteristic traits of oil paint may result from the surface flow of the paint.","The important characteristics of media flow may include capillary action (i.e., the tendency of fluid to diffuse throughout media) and variable permeation (i.e., the fluid does not flow with uniform speed in all directions because the fibers of the media create pockets and barriers). In contrast, the important characteristics of surface flow may include diffusion due to gravity (i.e., bubbles tend to thin and spread out), surface tension (i.e., droplets form bubbles rather than becoming infinitely thin), and viscoelasticity (i.e., some fluids retain surface texture). Capillary action and gravity diffusion may often be modeled the same way, as the fluid's natural tendency to diffuse. Variable permeation, surface tension, and viscoelasticity are discussed further below.","Watercolors are an example of a totally plastic material. As used herein, the term \u201cplastic\u201d describes the behavior that the material deforms when forces are applied, and the material maintain the deformed shape after the force is gone; that is, the deformation is essentially permanent. A plastic material can be viscous, like honey, or inviscid, like water. In either case, forces such as gravity may gradually change the shape of the material, though at different speeds. For example, for both a cube of water and a cube of honey, the force of gravity will cause the cubes to flatten and spread over time until surface tension and gravity reach an equilibrium and they achieve roughly the same shape, though at very different speeds.","The opposite of plastic is elastic. An elastic material (e.g., rubber) may deform when forces are applied, but once the forces are gone, the original shape may be restored automatically; that is, the deformation is temporary. As used herein, the term \u201celastic flow\u201d describes this temporary deformation, and the term \u201cplastic flow\u201d describes a permanent deformation.","As used herein, the term \u201cviscoelastic\u201d describes a material that exhibits both plastic and elastic properties. Under small forces, a viscoelastic material flows elastically (i.e., deformation is temporary). Under larger forces, the flow is plastic (i.e., deformation is permanent). Oil paint is an example of a viscoelastic material. Unlike viscous fluids such as honey, oil paint will retain its surface texture after the brush has finished stroking it. This effect is often important for the creation of the expected texture and paint-buildup features of oil paintings. Because oil paint is viscoelastic, it will retain its surface shape indefinitely under normal forces such as gravity.","The Boltzmann equation describes probabilistically the motion of individual particles. The lattice Boltzmann equation discretizes the Boltzmann equation onto a lattice or regular grid. The lattice Boltzmann method (LBM) is an algorithm for simulating the motion of a fluid that works by repeatedly evaluating the Boltzmann equation on a regular grid. In contrast to other fluid simulation approaches, each grid cell of the fluid is considered in isolation using the LBM; that is, the calculations are entirely local, without the need for a global solve step. Therefore, the LBM approach may be parallelizable with only local information and suitable for GPU acceleration.","In one embodiment, the LBM tracks the probabilistic distribution of fluid among a set of velocities. In a two-dimensional (2D) simulation, for each cell, 9 bins may be stored. Each bin may represent the amount of fluid traveling in one of 8 cardinal directions (i.e., N, NE, E, SE, S, SW, W, NW) or stationary. The total amount of fluid in the cell is the sum of the 9 bins. The total amount of fluid may be represented using Equation 1:\n\n\u03b8(x,t)\u2003\u2003(1)\n\nwhere x is a grid cell, t is a moment in time, and \u0192(x, t) is the portion of fluid in bin i in cell x at time t. Equations 2 and 3 follow:\n",{"@attributes":{"id":"p-0034","num":"0033"},"maths":{"@attributes":{"id":"MATH-US-00001","num":"00001"},"math":{"@attributes":{"overflow":"scroll"},"mtable":{"mtr":[{"mtd":[{"mrow":{"mi":"\u03c1","mo":"=","mrow":{"munder":{"mo":"\u2211","mi":"i"},"mo":"\u2062","msub":{"mi":["f","i"]}}}},{"mrow":{"mo":["(",")"],"mn":"2"}}]},{"mtd":[{"mrow":{"mi":"u","mo":"=","mrow":{"munder":{"mo":"\u2211","mi":"i"},"mo":"\u2062","mrow":{"msub":[{"mi":["e","i"]},{"mi":["f","i"]}],"mo":"\u00b7"}}}},{"mrow":{"mo":["(",")"],"mn":"3"}}]}]}}},"br":{},"sub":"i "},"In one embodiment, the LBM may proceed in two steps. The first step may be referred to as streaming and may be represented as Equation 4:\n\n\u0192*()=\u0192()+()\u2003\u2003(4)\n\nwhere dt is a timestep and Fis the component of an external force applied to the fluid along the direction of the i-th bin. The streaming step simulates the unimpeded motion of particles of the fluid over time. Without obstruction, they will move in the direction of their velocity.\n","However, other particles typically get in the way, resulting in collisions. The simulation of the collisions is the second step of LBM and may be represented by Equation 5:\n\n\u0192=\u0192*+\u03a9\u2003\u2003(5)\n\nwhere \u03a9(x, t) is the collision operator that computes the change in distribution of the grid cell. The value \u03a9 may be computed locally, using only the values at the grid cell to compute an equilibrium distribution, and then gradually relax towards that distribution.\n","In various embodiments, different collision operators may be used. For example, a common collision operator is Bhatnagar-Gross-Krook (BGK) for Newtonian fluids, which may be defined as Equation 6:",{"@attributes":{"id":"p-0038","num":"0037"},"maths":{"@attributes":{"id":"MATH-US-00002","num":"00002"},"math":{"@attributes":{"overflow":"scroll"},"mtable":{"mtr":{"mtd":[{"mrow":{"msub":{"mi":["\u03a9","i"]},"mo":"=","mrow":{"mrow":[{"mo":"-","mfrac":{"mn":"1","mi":"\u03c4"}},{"mo":["(",")"],"mrow":{"msubsup":{"mi":["f","i"],"mo":"*"},"mo":"-","mrow":{"msubsup":{"mi":["f","i","eq"]},"mo":"\u2061","mrow":{"mo":["(",")"],"mrow":{"mi":["\u03c1","u"],"mo":","}}}}}],"mo":"\u2062"}}},{"mrow":{"mo":["(",")"],"mn":"6"}}]}}}},"br":{},"sup":["eq","eq ","eq ","eq "]},{"@attributes":{"id":"p-0039","num":"0038"},"maths":{"@attributes":{"id":"MATH-US-00003","num":"00003"},"math":{"@attributes":{"overflow":"scroll"},"mtable":{"mtr":{"mtd":[{"mtable":{"mtr":[{"mtd":[{"mrow":{"msubsup":{"mi":["f","i","eq"]},"mo":"\u2061","mrow":{"mo":["(",")"],"mrow":{"mi":["\u03c1","u"],"mo":","}}}},{"mrow":{"mrow":{"mo":"=","mrow":{"mfrac":{"mn":["4","9"]},"mo":"\u2062","mrow":{"mi":"\u03c1","mo":"\u2061","mrow":{"mo":["(",")"],"mrow":{"mn":"1","mo":"-","mrow":{"mfrac":{"mn":["3","2"]},"mo":"\u2062","mrow":{"mi":["u","u"],"mo":"\u00b7"}}}}}}},"mo":","}},{"mrow":{"mi":"i","mo":"=","mn":"0"}}]},{"mtd":[{"mstyle":{"mspace":{"@attributes":{"width":"0.3em","height":"0.3ex"}}}},{"mrow":{"mrow":{"mo":"=","mrow":{"mfrac":{"mn":["1","9"]},"mo":"\u2062","mrow":{"mi":"\u03c1","mo":"\u2061","mrow":{"mo":["(",")"],"mrow":{"mn":"1","mo":["+","+","-"],"mrow":[{"mn":"3","mo":"\u2062","mrow":{"msub":{"mi":["e","i"]},"mo":"\u00b7","mi":"u"}},{"mfrac":{"mn":["9","2"]},"mo":"\u2062","msup":{"mrow":{"mo":["(",")"],"mrow":{"msub":{"mi":["e","i"]},"mo":"\u00b7","mi":"u"}},"mn":"2"}},{"mfrac":{"mn":["3","2"]},"mo":"\u2062","mrow":{"mi":["u","u"],"mo":"\u00b7"}}]}}}}},"mo":","}},{"mrow":{"mi":"i","mo":"\u2208","mrow":{"mo":["{","}"],"mrow":{"mn":["1","2","3","4"],"mo":[",",",",","]}}}}]},{"mtd":[{"mstyle":{"mspace":{"@attributes":{"width":"0.3em","height":"0.3ex"}}}},{"mrow":{"mrow":{"mo":"=","mrow":{"mfrac":{"mn":["1","36"]},"mo":"\u2062","mrow":{"mi":"\u03c1","mo":"\u2061","mrow":{"mo":["(",")"],"mrow":{"mn":"1","mo":["+","+","-"],"mrow":[{"mn":"3","mo":"\u2062","mrow":{"msub":{"mi":["e","i"]},"mo":"\u00b7","mi":"u"}},{"mfrac":{"mn":["9","2"]},"mo":"\u2062","msup":{"mrow":{"mo":["(",")"],"mrow":{"msub":{"mi":["e","i"]},"mo":"\u00b7","mi":"u"}},"mn":"2"}},{"mfrac":{"mn":["3","2"]},"mo":"\u2062","mrow":{"mi":["u","u"],"mo":"\u00b7"}}]}}}}},"mo":","}},{"mrow":{"mi":"i","mo":"\u2208","mrow":{"mo":["{","}"],"mrow":{"mn":["5","6","7","8"],"mo":[",",",",","]}}}}]}]}},{"mrow":{"mo":["(",")"],"mn":"7"}}]}}}},"br":{}},"Typically, fluid simulations solve for a density value per cell in an entire area (2D) or volume (3D), such as by using the conventional Navier-Stokes equations. To create the three-dimensional (3D) surface of a painting, a full 3D simulation may be necessary using the conventional Navier-Stokes approach. However, a reasonable simplification of the paint surface may represent the surface as 2.5D. In this approach, the representation of the paint surface may include a height field that may be represented as a 2D array of height values. A limited set of 3D shapes may be represented by a height field. In one embodiment, for example, the surface cannot overlap itself because there cannot be multiple heights per cell. This limitation is sufficient to represent almost all paintings, and even in cases where the 2.5D approach cannot exactly reproduce a painting surface, the error will be small.","The conventional Navier-Stokes formulation of the LBM for incompressible fluids includes a standard set of equations for computing \u0192(i.e., Equation 7). In order to simulate the shallow water wave equations instead, the \u0192equations may be slightly modified. Instead of tracking the density (\u03c1) of each cell, the height (h) of each cell may instead be used. Therefore, \u0192may be defined as Equation 8:",{"@attributes":{"id":"p-0042","num":"0041"},"maths":{"@attributes":{"id":"MATH-US-00004","num":"00004"},"math":{"@attributes":{"overflow":"scroll"},"mtable":{"mtr":{"mtd":[{"mtable":{"mtr":[{"mtd":[{"mrow":{"msubsup":{"mi":["f","i","eq"]},"mo":"\u2061","mrow":{"mo":["(",")"],"mrow":{"mi":["h","u"],"mo":","}}}},{"mrow":{"mrow":{"mo":"=","mrow":{"mi":"h","mo":"\u2061","mrow":{"mo":["(",")"],"mrow":{"mn":"1","mo":["-","-"],"mrow":[{"mfrac":{"mn":["5","6"]},"mo":"\u2062","mi":"gh"},{"mfrac":{"mn":["2","3"]},"mo":"\u2062","mrow":{"mi":["u","u"],"mo":"\u00b7"}}]}}}},"mo":","}},{"mrow":{"mi":"i","mo":"=","mn":"0"}}]},{"mtd":[{"mstyle":{"mspace":{"@attributes":{"width":"0.3em","height":"0.3ex"}}}},{"mrow":{"mrow":{"mo":"=","mrow":{"mfrac":{"mn":["1","6"]},"mo":"\u2062","mrow":{"mi":"h","mo":"\u2061","mrow":{"mo":["(",")"],"mrow":{"mi":"gh","mo":["+","+","-"],"mrow":[{"mn":"2","mo":"\u2062","mrow":{"msub":{"mi":["e","i"]},"mo":"\u00b7","mi":"u"}},{"mn":"3","mo":"\u2062","msup":{"mrow":{"mo":["(",")"],"mrow":{"msub":{"mi":["e","i"]},"mo":"\u00b7","mi":"u"}},"mn":"2"}},{"mi":["u","u"],"mo":"\u00b7"}]}}}}},"mo":","}},{"mrow":{"mi":"i","mo":"\u2208","mrow":{"mo":["{","}"],"mrow":{"mn":["1","2","3","4"],"mo":[",",",",","]}}}}]},{"mtd":[{"mstyle":{"mspace":{"@attributes":{"width":"0.3em","height":"0.3ex"}}}},{"mrow":{"mrow":{"mo":"=","mrow":{"mfrac":{"mn":["1","24"]},"mo":"\u2062","mrow":{"mi":"h","mo":"\u2061","mrow":{"mo":["(",")"],"mrow":{"mi":"gh","mo":["+","+","-"],"mrow":[{"mn":"2","mo":"\u2062","mrow":{"msub":{"mi":["e","i"]},"mo":"\u00b7","mi":"u"}},{"mn":"3","mo":"\u2062","msup":{"mrow":{"mo":["(",")"],"mrow":{"msub":{"mi":["e","i"]},"mo":"\u00b7","mi":"u"}},"mn":"2"}},{"mi":["u","u"],"mo":"\u00b7"}]}}}}},"mo":","}},{"mrow":{"mi":"i","mo":"\u2208","mrow":{"mo":["{","}"],"mrow":{"mn":["5","6","7","8"],"mo":[",",",",","]}}}}]}]}},{"mrow":{"mo":["(",")"],"mn":"8"}}]}}}},"br":{}},"In one embodiment, the streaming step of the LBM may assume that the fluid flows equally in all directions (except for boundaries where it is reflected). However, flow through an inhomogeneous media such as paper is not uniform; that is, variations in the orientation and density of paper fibers may create pockets and barriers that encourage or impede the flow in different directions. In one embodiment, this effect may be simulated within the LBM by adding a \u201cpermeability\u201d term that modulates the streaming step. The streaming equation modified with the permeability term may be represented as Equation 9:\n\n\u0192*()=()+(1)\u0192()+()\u2003\u2003(9)\n\nwhere k is the average of the blocking coefficient at x and x+e. As surface flow is unimpeded, it can be achieved by setting k=0.\n","In one embodiment, surface tension may be an important component of surface flow in the simulation of paint. Surface tension is a property of the surface of fluids that may cause droplets to bead up or form spheres on some surfaces. The pressure due to surface tension may be computed as Equation 10:\n\n\u2003\u2003(10)\n\nwhere p(x, t) is the pressure, \u03b3 is the surface tension of the fluid, \u03ba(x, t) is the mean curvature of the surface, and n(x, t) is the normal of the surface. In one embodiment, \u03ba may be computed as Equation 11:\n",{"@attributes":{"id":"p-0045","num":"0044"},"maths":{"@attributes":{"id":"MATH-US-00005","num":"00005"},"math":{"@attributes":{"overflow":"scroll"},"mtable":{"mtr":{"mtd":[{"mrow":{"mi":"\u03ba","mo":"=","mrow":{"mfrac":{"mn":"1","mrow":{"mn":"2","mo":["\u2062","\u2062"],"mstyle":{"mspace":{"@attributes":{"width":"0.3em","height":"0.3ex"}}},"mi":"A"}},"mo":"\u2062","mi":"\u0394"}}},{"mrow":{"mo":["(",")"],"mn":"11"}}]}}}},"br":[{},{}],"sub":["s","s","s"],"in-line-formulae":[{},{}]},"In one embodiment, viscoelasticity may be an important component of surface flow in the simulation of paint. For example, viscoelasticity may allow oil paints to retain their texture. Therefore, viscoelastic forces may be computed and explicitly added to the LBM in one embodiment. The viscoelastic force may be the result of strain on the fluid. Strain may be computed by tracking three parameters during the evolution of the fluid, \u03b4, \u03b4, and h. Two parameters \u03b4and \u03b4may represent the shear deformation of the fluid, and hmay represent the rest height of the fluid. The shear deformation may be determined by how much the fluid has moved away from its rest position, in the xy plane. For each grid cell, the strain \u03b5 may be computed as Equation 13:",{"@attributes":{"id":"p-0047","num":"0046"},"maths":{"@attributes":{"id":"MATH-US-00006","num":"00006"},"math":{"@attributes":{"overflow":"scroll"},"mtable":{"mtr":{"mtd":[{"mrow":{"mi":"\u03b5","mo":"=","msqrt":{"mrow":{"mfrac":{"mn":"1","mi":"h"},"mo":"\u2062","mrow":{"mo":["(",")"],"mrow":{"mrow":[{"mn":"3","mo":["\u2062","\u2062"],"mstyle":{"mspace":{"@attributes":{"width":"0.3em","height":"0.3ex"}}},"msubsup":{"mi":["\u03b4","x"],"mn":"2"}},{"mn":"3","mo":["\u2062","\u2062"],"mstyle":{"mspace":{"@attributes":{"width":"0.3em","height":"0.3ex"}}},"msubsup":{"mi":["\u03b4","y"],"mn":"2"}}],"mo":["+","+"],"msup":{"mrow":{"mo":["(",")"],"mrow":{"mi":"h","mo":"-","msub":{"mi":"h","mn":"0"}}},"mn":"2"}}}}}}},{"mrow":{"mo":["(",")"],"mn":"13"}}]}}}}},"The deformation may be updated as Equations 14 and 15:",{"@attributes":{"id":"p-0049","num":"0048"},"maths":{"@attributes":{"id":"MATH-US-00007","num":"00007"},"math":{"@attributes":{"overflow":"scroll"},"mtable":{"mtr":[{"mtd":[{"mrow":{"mi":"s","mo":"=","mrow":{"mo":"{","mtable":{"mtr":[{"mtd":[{"mrow":{"mi":["y","\u03b5"],"mo":"\/"}},{"mrow":{"mi":["y","\u03b5"],"mo":"<"}}]},{"mtd":[{"mn":"1"},{"mi":"otherwise"}]}]}}}},{"mstyle":{"mspace":{"@attributes":{"width":"0.3em","height":"0.3ex"}}}}]},{"mtd":[{"mrow":{"mrow":[{"mi":"\u03b4","mo":"\u2061","mrow":{"mo":["(",")"],"mrow":{"mi":"x","mo":",","mrow":{"mi":["t","dt"],"mo":"+"}}}},{"mi":"s","mo":"\u2061","mrow":{"mo":["(",")"],"mrow":{"mrow":[{"mi":"\u03b4","mo":"\u2061","mrow":{"mo":["(",")"],"mrow":{"mi":["x","t"],"mo":","}}},{"mi":"u","mo":"\u2061","mrow":{"mo":["(",")"],"mrow":{"mi":["x","t"],"mo":","}}}],"mo":"+"}}}],"mo":"="}},{"mrow":{"mo":["(",")"],"mn":"14"}}]}]}}},"br":{},"in-line-formulae":[{},{}],"i":["h","x,t+dt","h","x,t","s","h","x,t","h","x,t"],"sub":["0","0"]},"As shown in Equations 14 and 15, if the strain (\u03b5) is less than the yield (y), then the deformation may be integrated normally, but if \u03b5 is greater than y, then the deformation may be scaled down to reduce the strain. Thus, for large deformations, the fluid may still flow in a plastic manner, but for small deformations, the fluid may maintain its original shape. The resulting force from the deformation parameters may be computed as Equation 16:",{"@attributes":{"id":"p-0051","num":"0050"},"maths":{"@attributes":{"id":"MATH-US-00008","num":"00008"},"math":{"@attributes":{"overflow":"scroll"},"mtable":{"mtr":{"mtd":[{"mrow":{"msub":{"mi":["F","v"]},"mo":"=","mrow":{"mrow":[{"mo":"-","mfrac":{"mi":["G","h"]}},{"mo":["\u2329","\u232a"],"mrow":{"msub":[{"mi":["\u03b4","x"]},{"mi":["\u03b4","y"]}],"mo":[",",","],"mrow":{"msub":{"mi":"h","mn":"0"},"mo":"-","mi":"h"}}}],"mo":"\u2062"}}},{"mrow":{"mo":["(",")"],"mn":"16"}}]}}}},"br":{}},"As will be described in greater detail below, the paint simulation techniques discussed above may be augmented in various embodiments. In one embodiment, a free surface boundary may be included in the shallow water LBM. In one embodiment, surface tension and viscoelasticity may be incorporated as body forces. In one embodiment, a viscous drag term may be included in the LBM, e.g., to create high viscosity flows without requiring more iterations per second. In one embodiment, the simulation may include the simultaneous simulation of both surface flow and media flow on the same canvas using the same solver. In one embodiment, the simulation may include the simultaneous simulation of various paint types such as watercolor paint and oil paint on the same canvas using the same solver. In one embodiment, the shallow water, viscoelastic LBM may be implemented on the GPU for real-time performance at high resolution.","In one embodiment, a free surface boundary may be included in the shallow water LBM. The simulation of portions of the canvas with and without paint may be permitted by the simulation of a free surface boundary. In 2D or 3D simulations, a free boundary is the isocontour (2D) or isosurface (3D) that represents the interface between fluid and air, along which boundary conditions must be applied. In the 2.5D simulation described herein, the free boundary may comprise an isocontour that represents the boundary of wet canvas to dry canvas. Propagation of this boundary may be performed in an ad-hoc manner by allowing a cell with a height of fluid greater than a threshold to spill-over into neighboring cells, thereby wetting them. Therefore, in addition to the other parameters of the LBM, a separate state of wetness of each cell may also be tracked as part of the simulation.","In one embodiment, surface tension and viscoelasticity may be incorporated in the paint simulation. In one embodiment, the surface tension and viscoelasticity may be incorporated into the LBM as body forces. Body forces may be incorporated into the LBM in two ways. First, the body forces may be incorporated by computing a new fluid velocity after the streaming step as represented in Equation 17:",{"@attributes":{"id":"p-0055","num":"0054"},"maths":{"@attributes":{"id":"MATH-US-00009","num":"00009"},"math":{"@attributes":{"overflow":"scroll"},"mtable":{"mtr":{"mtd":[{"mrow":{"msup":{"mi":["u","\u2032"]},"mo":"=","mrow":{"mi":"u","mo":"+","mrow":{"mfrac":{"mn":"1","mrow":{"mn":"2","mo":["\u2062","\u2062"],"mstyle":{"mspace":{"@attributes":{"width":"0.3em","height":"0.3ex"}}},"mi":"h"}},"mo":"\u2062","mi":"F"}}}},{"mrow":{"mo":["(",")"],"mn":"17"}}]}}}},"br":{}},{"@attributes":{"id":"p-0056","num":"0055"},"maths":{"@attributes":{"id":"MATH-US-00010","num":"00010"},"math":{"@attributes":{"overflow":"scroll"},"mtable":{"mtr":{"mtd":[{"mrow":{"msubsup":{"mi":["\u03a9","i","\u2032"]},"mo":"=","mrow":{"mrow":{"mrow":[{"mo":"-","mfrac":{"mn":"1","mi":"\u03c4"}},{"mo":["(",")"],"mrow":{"msubsup":[{"mi":["f","i"],"mo":"*"},{"mi":["f","i","eq"]}],"mo":"-"}}],"mo":"\u2062"},"mo":"+","msub":{"mi":["CF","i"]}}}},{"mrow":{"mo":["(",")"],"mn":"18"}}]}}}},"br":{},"sub":"i "},{"@attributes":{"id":"p-0057","num":"0056"},"maths":{"@attributes":{"id":"MATH-US-00011","num":"00011"},"math":{"@attributes":{"overflow":"scroll"},"mtable":{"mtr":[{"mtd":[{"mrow":{"mrow":[{"msubsup":{"mi":["F","i"],"mo":"*"},"mo":"\u2061","mrow":{"mo":["(",")"],"mrow":{"mi":["x","t"],"mo":","}}},{"mfrac":{"mn":["1","2"]},"mo":"\u2062","mrow":{"mo":["(",")"],"mrow":{"mrow":[{"msub":{"mi":["F","i"]},"mo":"\u2061","mrow":{"mo":["(",")"],"mrow":{"mi":["x","t"],"mo":","}}},{"msub":{"mi":["F","i"]},"mo":"\u2061","mrow":{"mo":["(",")"],"mrow":{"mrow":{"mi":"x","mo":"+","msub":{"mi":["e","i"]}},"mo":",","mi":"t"}}}],"mo":"+"}}}],"mo":"="}},{"mrow":{"mo":["(",")"],"mn":"19"}}]},{"mtd":[{"mrow":{"msubsup":{"mi":["\u03a9","i","\u2032"]},"mo":"=","mrow":{"mrow":{"mrow":[{"mo":"-","mfrac":{"mn":"1","mi":"\u03c4"}},{"mo":["(",")"],"mrow":{"msubsup":[{"mi":["f","i"],"mo":"*"},{"mi":["f","i","eq"]}],"mo":"-"}}],"mo":"\u2062"},"mo":"+","msubsup":{"mi":["CF","i"],"mo":"*"}}}},{"mrow":{"mo":["(",")"],"mn":"20"}}]}]}}},"br":{}},"In one embodiment, instead of modifying the LBM to include the effects of surface tension and viscoelasticity at the fluid particle level, surface tension and viscoelasticity may be incorporated into the simulation as body forces. This manner of incorporation may allow for simpler implementation and integration of these forces while generating plausible results.  illustrates the simulation of a viscoelastic force  and a surface tension force  on paint  in the same canvas according to one embodiment. Although the viscoelastic force  and the surface tension force  are shown as separate forces for purposes of illustration, the effects of both the viscoelastic force  and the surface tension force  may be determined using a single framework as shown in Equations 17-20.","In one embodiment, a viscous drag term may be included in the LBM. The viscous drag term may be used to create high viscosity flows without requiring more iterations per second. In the LBM, fluid viscosity may be controlled by adjusting the relaxation parameter (\u03c4) in the collision operator. However, modifying the relaxation parameter to increase viscosity may also reduce the necessary timestep for the simulation, thereby increasing the number of LBM iterations needed to simulate the same amount of time as for lower viscosity fluids. To avoid this penalty, the relaxation parameter may be kept constant throughout the simulation, and the viscosity may be adjusted by incorporating a variable viscous drag term into the fluid velocity as shown in Equation 21:",{"@attributes":{"id":"p-0060","num":"0059"},"maths":{"@attributes":{"id":"MATH-US-00012","num":"00012"},"math":{"@attributes":{"overflow":"scroll"},"mtable":{"mtr":{"mtd":[{"mrow":{"msup":{"mi":["u","\u2033"]},"mo":"=","mrow":{"mrow":{"mo":["(",")"],"mrow":{"mn":"1","mo":"-","mfrac":{"mi":["v","h"]}}},"mo":"\u2062","msup":{"mi":["u","\u2032"]}}}},{"mrow":{"mo":["(",")"],"mn":"21"}}]}}}},"br":{}},"In one embodiment, the simulation may include the simultaneous simulation of various paint types such as watercolor paint and oil paint on the same canvas using the same solver. In one embodiment, the simulation may include the simultaneous simulation of both surface flow and media flow on the same canvas using the same solver.  illustrates the simulation of surface flow  and media flow  for paint  in the same canvas according to one embodiment. In one embodiment, the simulation may support different fluid properties across the domain at the same time.","To support different fluid properties across the domain, the fluid properties that define the motion of the fluid may be tracked. The fluid properties to be tracked may include viscosity, surface tension, yield, and shear modulus. These four values may be stored per-cell of the simulation. Instead of using global constants for the fluid properties, the four values may be read per-cell in the LBM iteration. So that the fluid properties track the motion of the fluid, these values may then be advected by the velocity field.","In one embodiment, it is uncommon for paint fluids to exhibit both surface flow and media flow as the same position and time. In other words, a droplet of watercolor paint may first sit on the surface of the canvas media, during which time it exhibits surface flow; as it is absorbed by the canvas, it will switch to exhibiting media flow. Therefore, the flow state of the fluid (as surface flow or media flow) may be tracked per-cell. Different parameters of the LBM may be used for simulating either surface flow or media flow. To support continuous combinations (\u03c8) of surface flow and media flow rather than a binary selection, the surface and media LBM flows may both be computed for a cell. The final results may be interpolated between the two using \u03c8.","As discussed above, the LBM fluid simulation technique may be amended to solve the shallow water wave equations with a free surface boundary and the incorporation of surface tension and viscoelastic forces.  is a flowchart illustrating a method for simulating paint behavior according to one embodiment. As shown in , user input may be received to modify an image by applying paint. For example, the user input may comprise a selection of a simulated paint type (e.g., watercolor, oil paint, etc.). The user input may further comprise a selection of a paint color using any suitable techniques for selecting a color (e.g., a color wheel, manual entry of color values, etc.). The color may comprise a mix of colors or a pattern rather than a single homogeneous color. The user input may additionally comprise one or more locations (e.g., pixels) within the canvas that is desired to be painted. For example, the user may stroke the canvas with a particular brush to indicate the desired locations of the canvas.","The behavior of the paint on the canvas may be simulated as shown in  through . The image may be modified based on the results of the paint behavior simulation operations shown in  through . As shown in , for those pixels selected in , the contribution of the brush deposition to the fluid layer may be determined. As shown in , the free surface boundary may be evolved, and body forces may be computed for the entire canvas. As shown in , the LBM may be iterated to evolve the fluid one timestep. As shown in , the computed fluid velocity may be used to advect the pigment layer. The operations shown in , , and  may be iterated continuously as shown in . In one embodiment, the operations shown in , , and  may be iterated continuously even when no brush stroke is occurring to allow the fluid to continue to evolve realistically in real-time. For example, after the user has made a stroke with a wet brush, the water and pigment will continue to be absorbed and diffused by the canvas even though the brush is no longer depositing. In one embodiment, the operation shown in  may also be iterated while additional user input (e.g., further application of paint using a brush) continues to be received.","In one embodiment, the shallow water (2.5D) and viscoelastic LBM may be implemented on the GPU for real-time performance at high resolution. A suitable GPU  is illustrated in . To take advantage of GPU acceleration, the paint behavior simulation may be implemented as a series of rendering passes (e.g., in OpenGL) over textures that store the variables in the fluid simulation state. Each rendering pass may be performed by binding to the input textures, attaching to a frame buffer object (FBO) with output textures bound as targets, binding to a fragment shader  that implements the computations, and then rendering a single quad that covers the simulation area with a one-to-one mapping of grid cells to pixels. In this manner, the fragment shader  may be viewed as a function that is called to process an individual cell.","In one embodiment, fluid simulation data may be stored in textures on the GPU as follows. A texture named \u201cbins0\u201d which stores the horizontal and vertical bins may include the values \u0192, \u0192, \u0192, \u0192. A texture named \u201cbins1\u201d which stores the diagonal bins may include the values \u0192, \u0192, \u0192, \u0192. A texture named \u201cmacro\u201d which stores the height, velocity, and flow type may include the values h, u, u, \u03c8. A texture named \u201cdeform\u201d which stores the viscoelastic deformation may include the values \u03b4, \u03b4, h, \u2212. A texture named \u201cforce\u201d which stores the sum of external forces may include the values F, F, F, \u2212. A texture named \u201cprops\u201d which stores the fluid properties may include the values v, \u03b3, y, G. A texture named \u201cpigment\u201d which stores the paint color at a pixel may include the values C, C, C, \u2212.","The brush deposition as shown in  may be performed as follows in one embodiment. During timesteps when the brush strokes the canvas, the contribution of the brush's fluid to the fluid layer may be computed for each pixel the brush touches. Some amount of brush liquid is deposited, and the brush's motion may have an associated velocity. The new fluid state may be computed as indicated in Equation 22:\n\n\u0192\u2032=(1\u2212\u03b1)\u0192+\u03b1\u0192()\u2003\u2003(22)\n\nwhere bis the amount of fluid added by the brush, bis the velocity of the brush (which is assumed to override the inertial velocity of the fluid), and \u03b1 is a user-parameter that determines how much the brush's deposition influences the fluid simulation, to allow for brushes that have variable effect across the stroke (e.g. a Gaussian blob brush, where center pixels have \u03b1 of 1, which falls off radially to 0 at the perimeter). The deformation parameters may be initialized to 0, and the pigment may be updated to include a mix of the newly added color, weighted by h and b, as indicated in Equation 23:\n",{"@attributes":{"id":"p-0069","num":"0068"},"maths":{"@attributes":{"id":"MATH-US-00013","num":"00013"},"math":{"@attributes":{"overflow":"scroll"},"mtable":{"mtr":{"mtd":[{"mrow":{"msup":{"mi":["C","\u2032"]},"mo":"=","mrow":{"mrow":[{"mrow":{"mo":["(",")"],"mrow":{"mn":"1","mo":"-","mi":"\u03b1"}},"mo":"\u2062","mi":"C"},{"mi":"\u03b1","mo":["\u2062","\u2062"],"mstyle":{"mspace":{"@attributes":{"width":"0.3em","height":"0.3ex"}}},"mfrac":{"mrow":[{"mi":"hC","mo":"+","mrow":{"msub":[{"mi":["b","h"]},{"mi":["b","C"]}],"mo":"\u2062"}},{"mi":"h","mo":"+","msub":{"mi":["b","h"]}}]}}],"mo":"+"}}},{"mrow":{"mo":["(",")"],"mn":"23"}}]}}}},"br":{},"sub":"C "},"The free surface evolution as shown in  may be performed as follows in one embodiment. The free surface may be defined implicitly as the edge between grid cells that have some fluid and grid cells that have no fluid. In one embodiment, cells can be one of three states: dry, moist, and wet. A dry cell contains no fluid and fluid cannot flow into it; they are marked by setting h to \u22121. A moist cell contains some fluid (e.g., between 0 and a threshold); fluid can flow into and out of moist cells. Wet cells are those with h greater than the threshold; fluid can flow into and out of them, and they make adjacent dry cells moist. In this manner, cells become moist during deposition, and as fluid flows into them, they become wet. In turn, these cells moisten the neighboring dry cells, which fluid then flows into. This process may repeat until the fluid levels are below the threshold everywhere. In this step, for each cell, the neighboring cells are examined; if any are above the threshold, or if the current cell is already moist, then the current cell is set to moist, or else it is dry (e.g., all bins set to \u22121). In one embodiment, the updated bins0 and bins1 textures are then written.","The force computation as shown in  may be performed as follows in one embodiment. The sum of forces per cell may be as initialized as zero. Surface tension may be computed via Equation 12. The h of neighboring cells may be sampled to compute the Laplacian and normal, and the force may be added to the force accumulator. Viscoelastic shear forces may be computed via Equation 16 by sampling the deformation parameters of the current cell. These forces are also added to the force accumulator, and the sum may be output in the force texture.","The LBM iteration as shown in  may be performed as follows in one embodiment. The streaming and collision steps of the LBM may both be done in a single shader. In the streaming step, for each cell, the neighbors may be sampled to determine what is streamed into each bin of the current cell. If the neighbor in any direction is a dry cell, then that direction is a boundary and the no-slip boundary condition is used; that is, the bin is filled with the reflection of the cell's original state. Once the streaming is done, the macroscopic properties of the fluid, h and u, may be computed. The value u may be updated by body forces and viscous drag, as shown in Equations 17 and 21 respectively.","The collision step may be computed as described in connection with Equation 8, with the incorporation of body forces as described in connection with Equations 17-20. The accumulated body forces for a cell may be sampled from the force texture. Once the collision step is done, the viscoelastic deformation parameters may be sampled and updated according to the fluid velocity.","If the cell was originally dry (e.g., as determined at the beginning of the step), then its outputs may all be set to 0 because no fluid flow occurs in dry cells. Otherwise, the updated bins, macroscopic properties, and viscoelastic deformation parameters may be written out to the bins1, bins2, macro, and deform textures, respectively.","In one embodiment, cell dryness may be handled in this manner because the LBM iteration process is typically memory bound rather than compute bound. Therefore, reducing the number of passes through all the data may be desirable in comparison to reducing the number of computations done per cell. By doing the same computations for all cells and then writing results only for dry cells, the number of passes through the data may be reduced. On the other hand, for a GPU having memory bandwidth that is improved relative to its computational power, additional passes may be desirable. For example, to avoid computing dry cells, a separate step may measure which cells were dry or not, and the results of that step may be used to control subsequent steps.","The advection as shown in  may be performed as follows in one embodiment. Once the new fluid macroscopic parameters are output as shown in , the parameters may be used to update the pigment layer. For each cell, the velocity may be sampled from the macro texture. This velocity may be added in to the cell's texture coordinates, and the new coordinates may be used to sample the four nearest cells in the pigment texture. The height values for these cells may be sampled from the macro texture. The height values may be used to compute the weighted sum of the pigment samples, which may be output as the new color for the current cell.",{"@attributes":{"id":"p-0077","num":"0076"},"figref":"FIG. 5","b":["510","520"]},"As shown in , a motion of the first type of paint and a motion of the second type of paint on the canvas may be simulated. The motion of the first type of paint on the canvas is dependent on the first set of fluid properties, and the motion of the second type of paint on the canvas is dependent on the second set of fluid properties. The motion of the second type of paint may differ from the motion of the first type of paint due to the differences in the respective fluid properties. For example, simulating the motion of the first type of paint may comprise simulating a motion of a watercolor, and simulating the motion of the second type of paint may comprise simulating a motion of an oil paint. In one embodiment, the motion of the first type of paint and the motion of the second type of paint may be simulated simultaneously on the same canvas. In one embodiment, simulating the motion may comprise simulating a surface flow and a media flow on the canvas. Both the surface flow and the media flow may be simulated for at least one of the types of paint.","As shown in , an effect of the deposition of the first type of paint and the second type of paint on the canvas may be determined. The determined effect may be dependent on the simulated motion of the first type of paint and the simulated motion of the second type of paint on the canvas. As shown in , an image representing the effect of the deposition of the first type of paint and the second type of paint may be displayed (e.g., on a display device).","The receiving function used in the operation shown in  may be performed by a receiving module implemented by program instructions stored in a computer-readable storage medium and executable by one or more processors (e.g., one or more CPUs or GPUs). The receiving function used in the operation shown in  may be performed by a receiving module implemented by program instructions stored in a computer-readable storage medium and executable by one or more processors (e.g., one or more CPUs or GPUs). The simulating function used in the operation shown in  may be performed by a simulating module implemented by program instructions stored in a computer-readable storage medium and executable by one or more processors (e.g., one or more CPUs or GPUs). The determining function used in the operation shown in  may be performed by a determining module implemented by program instructions stored in a computer-readable storage medium and executable by one or more processors (e.g., one or more CPUs or GPUs). The displaying function used in the operation shown in  may be performed by a displaying module implemented by program instructions stored in a computer-readable storage medium and executable by one or more processors (e.g., one or more CPUs or GPUs).","As discussed above, viscoelasticity is a property of materials (i.e., viscoelastic materials) that exhibit both viscous or plastic characteristics and elastic characteristics while undergoing deformation. In some embodiments, the effects of viscoelasticity may be included in a fluid simulation to simulate, for example, the effects of deposition of viscoelastic paint on a canvas. In some embodiments, the fluid simulation may comprise an implementation of the lattice Boltzmann method (LBM) as discussed above. In other embodiments, the fluid simulation may be implemented using any suitable fluid simulation technique for simulating a movement of a fluid in a shallow bed (i.e., a technique referred to as a \u201cshallow water simulation\u201d or a \u201cshallow fluid simulation\u201d).  illustrates the simulation of a viscoelastic force  acting on a fluid B in a shallow bed B according to one embodiment.","In one embodiment, viscoelastic forces may be added to the fluid simulation (e.g., the LBM) as body forces. In another embodiment, viscoelastic forces may be computed as follows. The elastic stress \u03c3 at any point in a body may be characterized as a rank 2 tensor (with units of pressure) which characterizes the internal restoring forces in the body. Assuming linear elasticity, the stress may be considered proportional to the elastic strain \u03b5, which is a dimensionless tensor characterizing deformation. For a purely elastic body, \u03b5 may be thought of as the differential deformation from the body's rest shape. Of course, a viscoelastic fluid may also flow and lose its shape.","Because the elastic strain \u03b5 is symmetric, it has six independent components, as shown in Equation 24:",{"@attributes":{"id":"p-0084","num":"0083"},"maths":{"@attributes":{"id":"MATH-US-00014","num":"00014"},"math":{"@attributes":{"overflow":"scroll"},"mtable":{"mtr":{"mtd":[{"mrow":{"mi":"\u03b5","mo":"=","mrow":{"mo":["[","]"],"mtable":{"mtr":[{"mtd":[{"msub":{"mi":["\u03b5","xx"]}},{"msub":{"mi":["\u03b5","xy"]}},{"msub":{"mi":["\u03b5","xz"]}}]},{"mtd":[{"msub":{"mi":["\u03b5","xy"]}},{"msub":{"mi":["\u03b5","yy"]}},{"msub":{"mi":["\u03b5","yz"]}}]},{"mtd":[{"msub":{"mi":["\u03b5","xz"]}},{"msub":{"mi":["\u03b5","yz"]}},{"msub":{"mi":["\u03b5","zz"]}}]}]}}}},{"mrow":{"mo":["(",")"],"mn":"24"}}]}}}}},"The longitudinal stretch components are \u03b5, \u03b5, and \u03b5, and the shear components are \u03b5, \u03b5, and \u03b5. If the material is assumed to be incompressible, then Equation 25 is the case:\n\n\u03b5+\u03b5+\u03b5=0\u2003\u2003(25)\n\nIn other words, \u03b5 is a traceless tensor. However, the stress \u03c3 is not necessarily traceless, and so the general relation is indicated by Equation 26:\n\n\u03c3=\u2003\u2003(26)\n\nwhere p is a pressure component and G is the shear modulus of the material. The pressure p may depend on external or non-bulk forces such as gravity and surface tension, and the pressure p is independent of \u03b5 itself.\n","In one embodiment, the value of the elastic strain tensor \u03b5 may be computed by integrating the strain rate over time. The total strain rate which the material undergoes is given directly by the velocity field, as indicated by Equation 27:",{"@attributes":{"id":"p-0087","num":"0086"},"maths":{"@attributes":{"id":"MATH-US-00015","num":"00015"},"math":{"@attributes":{"overflow":"scroll"},"mtable":{"mtr":{"mtd":[{"mrow":{"msup":{"mi":["\u03b5","\u2032"]},"mo":"=","mrow":{"mfrac":{"mn":["1","2"]},"mo":"\u2062","mrow":{"mo":["(",")"],"mrow":{"mrow":{"mo":"\u2207","msup":{"mi":["u","T"]}},"mo":"+","msup":{"mrow":{"mo":["(",")"],"mrow":{"mo":"\u2207","msup":{"mi":["u","T"]}}},"mi":"T"}}}}}},{"mrow":{"mo":["(",")"],"mn":"27"}}]}}}},"br":{},"sup":"T "},{"@attributes":{"id":"p-0088","num":"0087"},"maths":{"@attributes":{"id":"MATH-US-00016","num":"00016"},"math":{"@attributes":{"overflow":"scroll"},"mtable":{"mtr":{"mtd":[{"mrow":{"mfrac":{"mrow":[{"mo":"\u2146","mi":"\u03b5"},{"mo":"\u2146","mi":"t"}]},"mo":"=","mrow":{"mrow":[{"mfrac":{"mn":["1","2"]},"mo":"\u2062","mrow":{"mo":["(",")"],"mrow":{"mrow":{"mo":"\u2207","msup":{"mi":["u","T"]}},"mo":"+","msup":{"mrow":{"mo":["(",")"],"mrow":{"mo":"\u2207","msup":{"mi":["u","T"]}}},"mi":"T"}}}},{"mrow":[{"mi":"\u03b1","mo":"\u2061","mrow":{"mo":["(",")"],"mfrac":{"mi":"\u03b5","mrow":{"mo":["\uf605","\uf606"],"mi":"\u03b5"}}}},{"mi":"max","mo":"\u2061","mrow":{"mo":["(",")"],"mrow":{"mn":"0","mo":",","mrow":{"mrow":{"mo":["\uf605","\uf606"],"mi":"\u03b5"},"mo":"-","mi":"\u03b3"}}}}],"mo":"\u2062"}],"mo":"-"}}},{"mrow":{"mo":["(",")"],"mn":"28"}}]}}}},"br":{}},"In the shallow fluid model, at each grid cell is a column of fluid of known height h and velocity u. Because this model already relies on some simplifying assumptions on the motion of the fluid, these assumptions may be used to define a simplified model of the elastic strain in some embodiments.","A first assumption may be made that, since the bottom of the fluid layer is anchored to the bed, there is much greater variation of velocity in the normal (z) direction than tangentially. Therefore, in one embodiment, three components of the strain tensor which do not involve z may be ignored in determining the viscoelastic force: the tangential stretching \u03b5and \u03b5, and the in-plane shear \u03b5.","A second assumption may be made that the fluid velocity varies linearly with height from 0 at the bed to u at the top. Therefore, the shear strain rate may be given by Equations 29 and 30:\n\n\u03b5\u2032\u2003\u2003(29)\n\n\u03b5\u2032\u2003\u2003(30)\n","Change in \u03b5may be due to the vertical motion of the fluid, which only occurs due to changes in the height. Equation 31 may follow:\n\n\u03b5\u2032\u2003\u2003(31)\n","Furthermore, assuming that h\u2032 is small compared to |u|, Equations 32 and 33 follow:",{"@attributes":{"id":"p-0094","num":"0093"},"maths":{"@attributes":{"id":"MATH-US-00017","num":"00017"},"math":{"@attributes":{"overflow":"scroll"},"mtable":{"mtr":[{"mtd":[{"mrow":{"mrow":[{"mfrac":{"mo":"\u2146","mrow":{"mo":"\u2146","mi":"t"}},"mo":"\u2062","mrow":{"mo":["(",")"],"mrow":{"mi":"h","mo":["\u2062","\u2062"],"mstyle":{"mspace":{"@attributes":{"width":"0.3em","height":"0.3ex"}}},"msub":{"mi":["\u03b5","xz"]}}}},{"mrow":{"msub":{"mi":["u","x"]},"mo":"-","mrow":{"msub":{"mi":["\u03b5","xz"]},"mo":"\u2062","msup":{"mi":["h","\u2032"]}}},"mo":"\u2248","msub":{"mi":["u","x"]}}],"mo":"="}},{"mrow":{"mo":["(",")"],"mn":"32"}}]},{"mtd":[{"mrow":{"mrow":[{"mfrac":{"mo":"\u2146","mrow":{"mo":"\u2146","mi":"t"}},"mo":"\u2062","mrow":{"mo":["(",")"],"mrow":{"mi":"h","mo":["\u2062","\u2062"],"mstyle":{"mspace":{"@attributes":{"width":"0.3em","height":"0.3ex"}}},"msub":{"mi":["\u03b5","yz"]}}}},{"mrow":{"msub":{"mi":["u","y"]},"mo":"-","mrow":{"msub":{"mi":["\u03b5","yz"]},"mo":"\u2062","msup":{"mi":["h","\u2032"]}}},"mo":"\u2248","msub":{"mi":["u","y"]}}],"mo":"="}},{"mrow":{"mo":["(",")"],"mn":"33"}}]}]}}},"br":[{},{},{}],"in-line-formulae":[{},{}],"sub":["zz","0","0","0","0"],"i":["h\/h","h\u2212h","h"]},"In one embodiment, the quantities \u03b4=h\u2032, \u03b4=h\u2032, and hmay have simple physical interpretations. The quantities \u03b4and \u03b4represent the shear displacement of the top of the fluid column, and the quantity hrepresents the column's rest height. In embodiments of the fluid simulation system and method described herein, it may be simpler to track these quantities than to track the strain tensor itself. The quantities \u03b4and \u03b4may be found by integrating uand uover time, while his constant for a given fluid column. The values may be advected at each timestep to account for the motion of the fluid.","Given these values, the strain \u03b5 may be determined. The strain \u03b5 may be used to apply additional forces to a fluid model (e.g., the LBM) to account for the elastic behavior of the fluid. The additional stress in 3D caused by the shear strain may be determined using Equation 35, using incompressibility and the assumption that the effect of \u03b5, \u03b5, and \u03b5is negligible:",{"@attributes":{"id":"p-0097","num":"0096"},"maths":{"@attributes":{"id":"MATH-US-00018","num":"00018"},"math":{"@attributes":{"overflow":"scroll"},"mtable":{"mtr":{"mtd":[{"mrow":{"mi":"\u03c3","mo":"=","mrow":{"mo":["[","]"],"mtable":{"mtr":[{"mtd":[{"mrow":{"mfrac":{"mn":["1","2"]},"mo":["\u2062","\u2062","\u2062"],"mi":"G","mstyle":{"mspace":{"@attributes":{"width":"0.3em","height":"0.3ex"}}},"msub":{"mi":["\u03b5","zz"]}}},{"mn":"0"},{"mrow":{"mrow":{"mo":"-","mi":"G"},"mo":["\u2062","\u2062"],"mstyle":{"mspace":{"@attributes":{"width":"0.3em","height":"0.3ex"}}},"msub":{"mi":["\u03b5","xz"]}}}]},{"mtd":[{"mn":"0"},{"mrow":{"mfrac":{"mn":["1","2"]},"mo":["\u2062","\u2062","\u2062"],"mi":"G","mstyle":{"mspace":{"@attributes":{"width":"0.3em","height":"0.3ex"}}},"msub":{"mi":["\u03b5","zz"]}}},{"mrow":{"mrow":{"mo":"-","mi":"G"},"mo":["\u2062","\u2062"],"mstyle":{"mspace":{"@attributes":{"width":"0.3em","height":"0.3ex"}}},"msub":{"mi":["\u03b5","yz"]}}}]},{"mtd":[{"mrow":{"mrow":{"mo":"-","mi":"G"},"mo":["\u2062","\u2062"],"mstyle":{"mspace":{"@attributes":{"width":"0.3em","height":"0.3ex"}}},"msub":{"mi":["\u03b5","xz"]}}},{"mrow":{"mrow":{"mo":"-","mi":"G"},"mo":["\u2062","\u2062"],"mstyle":{"mspace":{"@attributes":{"width":"0.3em","height":"0.3ex"}}},"msub":{"mi":["\u03b5","yz"]}}},{"mrow":{"mrow":{"mo":"-","mi":"G"},"mo":["\u2062","\u2062"],"mstyle":{"mspace":{"@attributes":{"width":"0.3em","height":"0.3ex"}}},"msub":{"mi":["\u03b5","zz"]}}}]}]}}}},{"mrow":{"mo":["(",")"],"mn":"35"}}]}}}},"br":{},"sub":["xx ","yy ","zz","xx ","yy ","xz ","yz ","xz","yz"],"sup":["el","el","T"]},"For each grid cell in a fluid model such as the LBM, the values of the elastic variables \u03b4and \u03b4as well as hmay be tracked. The values of \u03b4and \u03b4are initially zero, and hmay be initialized to the fluid height. In the beginning of each iteration, yielding may be accounted for by computing \u2225\u03b5\u2225. If \u2225\u03b5\u2225 exceeds \u03b3, the values of the elastic variables may be updated so that \u03b5\u2190(\u03b3\/\u2225\u03b5\u2225)\u03b5. In the collision step of the LBM, the elastic pressure pmay be computed and incorporated as an additional pressure along with the gravitational pressure. The vertical component of the surface tension force may also be included in the collision step. In the streaming step, the elastic shear stress Fand the horizontal component of the surface tension may be included as external forces. As the LBM bins are updated from neighboring cells in the streaming step, the elastic variables may be updated by advection at the same time.",{"@attributes":{"id":"p-0099","num":"0098"},"figref":"FIG. 7","b":"560"},"As shown in , a motion of the fluid in the shallow bed may be simulated. In one embodiment, the motion may be simulated based on the set of fluid properties including the viscoelastic property. The simulation of the motion may comprise determining a viscoelastic force acting on the fluid based on the viscoelastic property. In one embodiment, the motion of the fluid in the shallow bed may be simulated using a shallow fluid simulation technique based on two spatial dimensions and a height field. In various embodiments, the fluid simulation technique may comprise an implementation of the lattice Boltzmann method (LBM) or any other suitable fluid simulation technique. In one embodiment, the viscoelastic force may be added to the LBM as a body force. In one embodiment, the viscoelastic force may be determined by determining a strain on the fluid using parameters representative of a shear displacement of the fluid and a rest height of the fluid, wherein the parameters representative of the shear displacement of the fluid comprise parameters representative of a movement of the fluid away from a rest position in the xy plane, and then by determining the viscoelastic force based on the strain.","The fluid may comprise a paint, and the shallow bed may comprise a canvas.  is a flowchart illustrating further aspects of a method for simulating shallow viscoelastic flows according to one embodiment. As shown in , an effect of the deposition of the fluid (e.g., paint) on the shallow bed (e.g., canvas) may be determined. The determined effect may be dependent on the motion simulation. As shown in , an image representing the effect of the deposition of the fluid (e.g., paint) on the shallow bed (e.g., canvas) may be displayed. Additional fluids having differing fluid properties (e.g., differing properties of viscoelasticity) may be simulated at the same time as the original fluid as shown in -.","The receiving function used in the operation shown in  may be performed by a receiving module implemented by program instructions stored in a computer-readable storage medium and executable by one or more processors (e.g., one or more CPUs or GPUs). The simulating function used in the operation shown in  may be performed by a simulating module implemented by program instructions stored in a computer-readable storage medium and executable by one or more processors (e.g., one or more CPUs or GPUs). The determining function used in the operation shown in  may be performed by a determining module implemented by program instructions stored in a computer-readable storage medium and executable by one or more processors (e.g., one or more CPUs or GPUs). The displaying function used in the operation shown in  may be performed by a displaying module implemented by program instructions stored in a computer-readable storage medium and executable by one or more processors (e.g., one or more CPUs or GPUs).",{"@attributes":{"id":"p-0103","num":"0102"},"figref":"FIG. 9","b":["900","900","910","900","910","920"]},"In one embodiment, a specialized graphics card or other graphics component  may be coupled to the processor(s) . The graphics component  may include a graphics processing unit (GPU) . Additionally, the computer system  may include one or more imaging devices . The one or more imaging devices  may include various types of raster-based imaging devices such as monitors and printers. In one embodiment, one or more display devices  may be coupled to the graphics component  for display of data provided by the graphics component .","In one embodiment, program instructions  that may be executable by the processor(s)  to implement aspects of the techniques described herein may be partly or fully resident within the memory  at the computer system  at any point in time. For example, portions of the digital image editing program  and its constituent elements and data (e.g., the paint simulation functionality ) may be stored in the memory . The memory  may be implemented using any appropriate medium such as any of various types of ROM or RAM (e.g., DRAM, SDRAM, RDRAM, SRAM, etc.), or combinations thereof. The program instructions may also be stored on a storage device  accessible from the processor(s) . Any of a variety of storage devices  may be used to store the program instructions  in different embodiments, including any desired type of persistent and\/or volatile storage devices, such as individual disks, disk arrays, optical devices (e.g., CD-ROMs, CD-RW drives, DVD-ROMs, DVD-RW drives), flash memory devices, various types of RAM, holographic storage, etc. The storage  may be coupled to the processor(s)  through one or more storage or I\/O interfaces. In some embodiments, the program instructions  may be provided to the computer system  via any suitable computer-readable storage medium including the memory  and storage devices  described above.","The computer system  may also include one or more additional I\/O interfaces, such as interfaces for one or more user input devices . In addition, the computer system  may include one or more network interfaces  providing access to a network. It should be noted that one or more components of the computer system  may be located remotely and accessed via the network. The program instructions may be implemented in various embodiments using any desired programming language, scripting language, or combination of programming languages and\/or scripting languages, e.g., C, C++, C#, Java\u2122, Perl, etc. The computer system  may also include numerous elements not shown in , as illustrated by the ellipsis.",{"@attributes":{"id":"p-0107","num":"0106"},"figref":["FIG. 10","FIG. 9","FIG. 10","FIG. 10","FIG. 10"],"b":["800","800","900","800","800","800","800"]},"The GPU  may include a host interface  configured to communicate with a data source  (e.g., a communications bus and\/or processor(s)  of a host computer system ). For example, the data source  may provide image input data  and\/or executable program code to the GPU . In some embodiments, the host interface  may permit the movement of data in both directions between the GPU  and the data source . The GPU  may also include a display interface  for providing output data to a data target . The data target  may comprise an imaging device  such as a display or printer. For example, if data target  comprises a display device , the GPU  (along with other graphics components and\/or interfaces ) may \u201cdrive\u201d the display  by providing graphics data at a particular rate from a screen buffer (e.g., the buffer ).","In one embodiment, the GPU  may include internal memory . The GPU memory , also referred to herein as \u201cvideo memory\u201d or \u201cVRAM,\u201d may comprise random-access memory (RAM) which is accessible to other GPU components. As will be described in greater detail below, the GPU memory  may be used in some embodiments to store various types of data and instructions such as input data, output data, intermediate data, program instructions for performing various tasks, etc. In one embodiment, the GPU  may also be configured to access a memory  of a host computer system  via the host interface .","In one embodiment, the GPU  may include GPU program code  that is executable by the GPU  to perform aspects of techniques discussed herein. Elements of the image input  may be rasterized to pixels during a rendering process including execution of the GPU program code  on the GPU . Elements of the GPU program code  may be provided to the GPU  by a host computer system (e.g., the data source ) and\/or may be native to the GPU . The GPU program code  may comprise a vertex shader  and\/or a pixel shader . A vertex shader  comprises program instructions that are executable by the GPU  to determine properties (e.g., position) of a particular vertex. A vertex shader  may expect input such as uniform variables (e.g., constant values for each invocation of the vertex shader) and vertex attributes (e.g., per-vertex data). A pixel shader  comprises program instructions that are executable by the GPU  to determine properties (e.g., color) of a particular pixel. A pixel shader  may also be referred to as a fragment shader. A pixel shader  may expect input such as uniform variables (e.g., constant values for each invocation of the pixel shader) and pixel attributes (e.g., per-pixel data). In generating the image output , the vertex shader  and\/or the pixel shader  may be executed at various points in the graphics pipeline.","The GPU memory  may comprise one or more buffers . Each buffer  may comprise a two-dimensional array of pixel data (e.g., color values) and\/or pixel metadata (e.g., depth values, stencil values, etc.). For example, the GPU memory  may comprise an image buffer  that stores intermediate or final pixel values generated in the rendering process. In one embodiment, the image buffer  may comprise a single-sampling buffer wherein each pixel in the buffer is represented by a single set of color and alpha values (e.g., one color value for a red channel, one color value for a green channel, one color value for a blue channel, and appropriate values for a one or more alpha channels). In one embodiment, the image buffer  may comprise a multi-sampling buffer usable for anti-aliasing.","In various embodiments, the elements shown in , , , and  may be performed in a different order than the illustrated order. In , , , and , any of the operations described in the elements may be performed programmatically (i.e., by a computer according to a computer program). In , , , and , any of the operations described in the elements may be performed automatically (i.e., without user intervention).","Although the embodiments above have been described in detail, numerous variations and modifications will become apparent to those skilled in the art once the above disclosure is fully appreciated. It is intended that the following claims be interpreted to embrace all such variations and modifications."],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"BRIEF DESCRIPTION OF THE DRAWINGS","p":[{"@attributes":{"id":"p-0008","num":"0007"},"figref":"FIG. 1"},{"@attributes":{"id":"p-0009","num":"0008"},"figref":"FIG. 2"},{"@attributes":{"id":"p-0010","num":"0009"},"figref":"FIG. 3"},{"@attributes":{"id":"p-0011","num":"0010"},"figref":"FIG. 4"},{"@attributes":{"id":"p-0012","num":"0011"},"figref":"FIG. 5"},{"@attributes":{"id":"p-0013","num":"0012"},"figref":"FIG. 6"},{"@attributes":{"id":"p-0014","num":"0013"},"figref":"FIG. 7"},{"@attributes":{"id":"p-0015","num":"0014"},"figref":"FIG. 8"},{"@attributes":{"id":"p-0016","num":"0015"},"figref":"FIG. 9"},{"@attributes":{"id":"p-0017","num":"0016"},"figref":"FIG. 10"}]},"DETDESC":[{},{}]}
