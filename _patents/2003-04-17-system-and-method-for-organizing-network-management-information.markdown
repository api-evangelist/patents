---
title: System and method for organizing network management information
abstract: A Simple Network Management Protocol (SNMP) agent includes logic configured to add a first object ID to a first MIB corresponding to a first software entity responsive to a request from the first software entity, and configured to add a second object ID to a second MIB corresponding to a second software entity responsive to a request from the second software entity, and logic configured to delete the first object ID from the first MIB responsive to a request from the first software entity, and configured to delete the second object ID from the second MIB responsive to a request from the second software entity.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=07548965&OS=07548965&RS=07548965
owner: Scientific-Atlanta, Inc.
number: 07548965
owner_city: Lawrenceville
owner_country: US
publication_date: 20030417
---

{"@attributes":{"id":"description"},"BRFSUM":[{},{}],"heading":["FIELD OF THE INVENTION","DESCRIPTION OF THE RELATED ART","DETAILED DESCRIPTION OF THE PREFERRED EMBODIMENTS"],"p":["The invention relates to the field of Network management. More specifically the invention relates to systems and methods for organizing network management information.","The Simple Network Management Protocol (SNMP) defines a method by which a remote user can view or change management information for a networked device (a host, gateway, server, etc.). A monitoring or management application on the remote user's system uses the protocol to communicate with an SNMP agent on the networked device to access the management data.","The SNMP agent on each device can provide information about the device's network configuration and operations, such as the device's network interfaces, routing tables, IP packets sent and received, and IP packets lost. This information, which is configured as SNMP objects, is stored in a Management Information Base (MIB) format. An MIB defines the SNMP objects that can be managed and the format for each object. The SNMP protocol, together with the MIB, provide a standard way to view and change network management information on devices from different vendors. An application that implements SNMP can access MIB data on a specified device.","Several standards have been established for MIB Organization. A branch with the object identifier (object ID) 1.3.6.1.4.1, which stands for \u201ciso. org. dod. internet. private. enterprises\u201d has been established for maintaining private enterprise information. An enterprise may obtain an Enterprise ID under this branch and organize enterprise specific information under the Enterprise-ID branch.","In one approach, an application that maintains MIB information registers itself as an extended agent, and then performs as an SNMP agent for requests that are routed to it. Applications that perform as SNMP agents need to incorporate SNMP agent functionality, such as, for example, message processing, protocol data unit (PDU) creation, etc. Such an approach is inefficient and cannot be used by certain lower level software.","Another approach involves organizing an enterprise tree to have a branch for each of the possible vendors in a software stack. Under this approach, every future enhancement of vendor-specific information requires a vendor to obtain the approval from the owner of the enterprise agent, and requires modifying the enterprise agent. Therefore, there exists a need for improved systems and methods for maintaining MIB information.","According to one embodiment of the invention, a method is provided for distributed development and maintenance of management information bases (MIBs) in a multi-layer and multi-vendor software stack environment. Below is a detailed description of the accompanying figures, which illustrate preferred embodiments of the present invention:  will provide examples of systems that may be used to modify MIBs, and  will provide examples of methods for modifying MIBs. Note, however, that the invention may be embodied in many different forms and should not be construed as limited to the embodiments set forth herein. Furthermore, all examples given herein are intended to be non-limiting, and are provided in order to help clarify the description of the invention.",{"@attributes":{"id":"p-0014","num":"0013"},"figref":"FIG. 1","b":["100","100","110","200","200","110","101","102","200","113","114"]},"According to one embodiment of the invention, software entities  and , which were developed by different software vendors, help develop and maintain the MIBs  and , respectively. The SNMP agent  provides an interface through which the software entities  and  can respectively add object identifiers (object IDs) to the MIBs  and  under respective enterprise IDs.","As a non-limiting example, among others, the first software entity  may be developed by a first company (e.g., Company ABC) having an enterprise ID 1. 3. 6. 1. 4. 1. 9998 (iso. org. dod. internet. private. enterprises. abc), and the second software entity  may be developed by a second company (e.g., Company DEF) having an enterprise ID 1. 3. 6. 1. 4. 1. 9999 (iso. org. dod. internet. private. enterprises. def). The object IDs corresponding to the first software entity  may then be maintained under 1. 3. 6. 1. 4. 1. 9998 and the object IDs corresponding to the second software entity  may be maintained under 1. 3. 6. 1. 4. 1. 9998. An object ID corresponding to the first software entity  may be, for example, among others, 1. 3. 6. 1. 4. 1. 9998. 1. 1. 2 (iso. org. dod. internet. private. enterprises. abc. software. software type. version). Similarly, an object ID corresponding to the second software entity  may be, for example, among others, 1. 3. 6. 1. 4. 1. 9999. 1. 1. 2 (iso. org. dod. internet. private. enterprises. def. software. software type. version).",{"@attributes":{"id":"p-0017","num":"0016"},"figref":["FIG. 2","FIG. 2"],"b":["200","200","202","204","206","202","204","206","220","220"]},"The I\/O interfaces  may be used to communicate with one or more peripheral devices including, for example, among others, a printer, a copier, a keyboard, a mouse, and\/or a monitor, etc. The I\/O interfaces  may include, for example, among others, a serial port, a parallel port, a Small Computer System Interface (SCSI), an IR interface, an RF interface, and\/or a universal serial bus (USB) interface.","When the network device  is in operation, the processor  is configured to execute software stored within the memory , to communicate data to and from the memory , and to generally control operations of the network device  pursuant to the software. The memory  may include one or more volatile and\/or non-volatile memory devices now known or later developed.","The software applications in memory  include an operating system (OS) , an SNMP agent , and software entities  and . These software applications may additionally or alternatively be embodied in any computer-readable medium (e.g., magnetic, optical, or semiconductor based, among others). The OS  controls the execution of other applications, and provides scheduling, input-output control, file and data management, memory management, and\/or communication control, among other functionality.","The SNMP agent  provides application programming interfaces (APIs) for adding and deleting object IDs to\/from the MIBs  and . A first API  is provided for adding object IDs to the MIBs  and . This first API  performs some basic checks on object ID parameters prior to adding an object ID to MIB  or MIB  in a manner that keeps the MIBs  and  lexicographically ordered. Furthermore, the first API  does not enable additions under the Enterprise ID of the SNMP agent , so as to prevent unintentional or unauthorized additions of object IDs.","Under certain circumstances, the API  may return an error message to a software entity  or  in response a request for adding an object ID to an MIB  or , respectively. For example, among others, the API  may return an error message under one or more of the following circumstances:\n\n","A second API  is provided for deleting object IDs from the MIBs  and . This second API  performs a basic set of checks object ID parameters prior to deleting an object ID from MIB  or MIB . The second API  does not enable deleting object IDs under the Enterprise ID of the SNMP agent  so as to prevent unintentional or unauthorized deletions of such object IDs. Furthermore, the MIBs  and  include a set of static object IDs that are not to be deleted and that are listed in a data structure designated as read-only.","Under certain circumstances, the API  may return an error message to a software entity  or  in response a request for deleting an object ID from an MIB  or , respectively. For example, among others, the API  may return an error message under one or more of the following circumstances:\n\n","An object ID may be dynamically added and removed by the SNMP agent  at the request of the software entities  and . The software entities  and  may develop their own object IDs which may be added at run-time by the first API  to the MIBs  and , respectively. A dynamically added object ID may be used, for example, among others, for debugging or diagnosing a problem with a respective software entity  or . Before a software entity  or  quits running, it may cause respective object IDs to be deleted by the second API  from a respective MIB  or . Furthermore, a specialized application (not shown) may be used to clean-up (i.e., delete) unused object IDs.",{"@attributes":{"id":"p-0026","num":"0038"},"figref":"FIG. 3","b":["300","301","103","102","113","103","102","113","103","302","104","102","114","303","104","102","114","104","304"]},"When an object ID is added to an MIB  or , the corresponding software entity  or  registers with the OS  a callback function for such object ID. The SNMP agent  can then use this callback function to return an appropriate value to a user that requests the corresponding object ID. As a non-limiting example, among others, if the object ID 1. 3. 6. 1. 4. 1. 9998. 2. 3. 4. 1. 0 having the name \u201csystemName\u201d is added to the MIB , then a callback function get_systemName( . . . ) for returning a value corresponding to the object ID can be registered with the OS  by the software entity .",{"@attributes":{"id":"p-0028","num":"0040"},"figref":"FIG. 4","b":["400","103","102","113","401","103","102","113","402","104","102","114","403","104","102","114","404"]},"The blocks shown in  represent modules, segments, or portions of code which include one or more executable instructions for implementing specific logical functions or steps in a process. In an alternative embodiment, functions or steps depicted in  may be executed out of order from that shown or discussed, including substantially concurrently or in reverse order, depending on the functionality involved, as would be understood by those of ordinary skill in the art.","The functionality provided by the methods illustrated in  can be embodied in any computer-readable medium for use by or in connection with a computer-related system (e.g., an embedded system such as a modem) or method. In the context of this document, a computer-readable medium is an electronic, magnetic, optical, semiconductor, or other physical device or means that can contain or store a computer program or data for use by or in connection with a computer-related system or method. Furthermore, the functionality provided by the methods illustrated in  can be implemented through hardware (e.g., an application specific integrated circuit (ASIC) and supporting circuitry) or a combination of software and hardware.","It should be emphasized that the above-described embodiments of the present invention are merely possible examples, among others, of the implementations, setting forth a clear understanding of the principles of the invention. Many variations and modifications may be made to the above-described embodiments of the invention without departing substantially from the principles of the invention. All such modifications and variations are intended to be included herein within the scope of the disclosure and present invention and protected by the following claims. In addition, the scope of the present invention includes embodying the functionality of the preferred embodiments of the present invention in logic embodied in hardware and\/or software-configured mediums."],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"BRIEF DESCRIPTION OF THE DRAWINGS","p":["Systems and methods for maintaining MIB information are illustrated by way of example and not limited by the implementations illustrated in the following drawings. The components in the drawings are not necessarily to scale, emphasis instead is placed upon clearly illustrating the principles of the present invention. Moreover, in the drawings, like reference numerals designate corresponding parts throughout the several views.",{"@attributes":{"id":"p-0009","num":"0008"},"figref":"FIG. 1"},{"@attributes":{"id":"p-0010","num":"0009"},"figref":["FIG. 2","FIG. 1"]},{"@attributes":{"id":"p-0011","num":"0010"},"figref":"FIG. 3"},{"@attributes":{"id":"p-0012","num":"0011"},"figref":"FIG. 4"}]},"DETDESC":[{},{}]}
