---
title: Platform for learning based recognition research
abstract: A method for researching and developing a recognition model in a computing environment, including gathering one or more data samples from one or more users in the computing environment into a training data set used for creating the recognition model, receiving one or more training parameters defining a feature extraction algorithm configured to analyze one or more features of the training data set, a classifier algorithm configured to associate the features to a template set, a selection of a subset of the training data set, a type of the data samples, or combinations thereof, creating the recognition model based on the training parameters, and evaluating the recognition model.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08266078&OS=08266078&RS=08266078
owner: Microsoft Corporation
number: 08266078
owner_city: Redmond
owner_country: US
publication_date: 20090206
---

{"@attributes":{"id":"description"},"BRFSUM":[{},{}],"heading":["BACKGROUND","SUMMARY","DETAILED DESCRIPTION"],"p":["Researchers use pattern recognition technology to identify templates that may be represented by data samples such as letters from an alphabet, words from a specific language, faces from a group of people, fingerprints from a database, and the like. Certain pattern recognition technology may create or train a recognition model to determine the template of a given data sample. Training robust recognition models, however, may require large amounts of data samples to achieve a high recognition accuracy rate in identifying patterns. Typically, a recognition model may increase in accuracy as more high-quality data samples are provided in training the model. Researchers from different organizations, however, currently collect their own data samples and may not have the ability to share their data samples with each other which may limit the overall accuracy of their recognition models. Furthermore, since each researcher provides his own recognition algorithms and uses his own data samples, comparing recognition models against one another may be infeasible due to lack of commonly shared data sets.","Most recognition algorithms may be computationally complex and intensive. Therefore, when trained on a large data set, the computations may take up to several weeks to conduct a single training experiment on a single machine. As a result, the overall computation process for training a recognition model may be very expensive and time consuming.","Described herein are implementations of various techniques for creating and evaluating pattern recognition models in a computing environment. In one implementation, a computer application may provide a web-based open research platform for one or more users on the environment to create and evaluate recognition models. The computer application may provide a uniform workflow in building the recognition model such that any user may build a new recognition model within the platform. Through computer application, the new recognition model may be created using the computational resources of one or more backend Central Processing Unit (CPU) resources in communication with the computer application. In one implementation, the computer application may be stored on a server that may be connected to one or more computing systems capable of creating and evaluating recognition models.","In one implementation, the computer application may use four modules to create and evaluate recognition models. The modules may include a data module, a training module, an evaluation module, and a plug-in module.","The data module may be used to collect one or more data samples for one or more templates. These data samples may then be used to create a recognition model for identifying future data samples that may correspond to a specific template. In one implementation, the data samples may include characters written and entered into the computing system  by a user using a tablet PC, a writing pad, or any other similar device. The data sample may include the image of the character written by the user along with information pertaining to how the character was written. For instance, if a user writes the letter \u201ci\u201d using a stylus on the tablet PC, the user's writing sample of the letter \u201ci\u201d may be considered to be the data sample. The data sample may include information pertaining to the motion or stroke in which the user moved the stylus on the tablet PC to write the letter \u201ci\u201d along with the image of the sample. The template may define what a data sample may represent. A collection of templates may be defined as a template set. For instance, if the template set in the data module is English alphabet, then the collected samples in the data module should be written instances of English letters, and each English letter is a template. Similarly, if the template set is Arabic numbers (0 to 9), then the collected data samples may be written instances of Arabic numbers 0 to 9, and each Arabic number may be considered to be a template.","In one implementation, the data module may receive data samples from one or more users in the environment. The data module may then allow one or more users to browse through all of the data samples that may have been collected from all the users on the environment. The users may define a training set or a testing set of data samples from the data samples that may be available on the data module. In one implementation, the training set of data samples may be used to create a recognition model in the training module, and the testing set of data samples may be used to evaluate a recognition model in the evaluation module.","The training module may develop a recognition model that may be used to identify what each data sample may represent. In one implementation, the training module may provide a uniform end-to-end workflow for training or creating a recognition model for any user on the environment. In one implementation, the workflow may include five steps: feature extraction, feature analysis, feature selection, classifier training and evaluation. In one implementation, the uniform workflow in the training module may provide a user an infrastructure to create recognition models so that he may not need to repeat the same workflow himself. Furthermore, creating a recognition model may be computationally expensive because the computing cost increases as the number of data samples used in creating a recognition model increases. Therefore, the computer application may create the recognition model using the computational resources of one or more backend Central Processing Unit (CPU) resources in order to conduct efficient training on a large amount data samples. The CPU resources may perform all of the recognition model training in parallel manner using one or more computing systems that may be part of the CPU resources.","The evaluation module may provide the user with the ability to evaluate a recognition model with a separate data sample set from which the training module used to create the recognition model. In one implementation, a user may evaluate any recognition model that may be available to the computer application. In addition to evaluating any available recognition model, a user may evaluate a recognition model with a set of data samples that he may have been defined by himself or any other user on the environment. After the evaluation module evaluates the recognition model, it may provide statistics and performance results of the recognition along with the statistics and performance results of other recognition models previously created or evaluated by the computer application","The plug-in module may be used to upload a new algorithm to the research platform application . The new algorithm may be used by the training module to create a recognition model. After the recognition model is created with the new algorithm, the recognition model may be evaluated along with other recognition models available in the research platform application .","The above referenced summary section is provided to introduce a selection of concepts in a simplified form that are further described below in the detailed description section. The summary is not intended to identify key features or essential features of the claimed subject matter, nor is it intended to be used to limit the scope of the claimed subject matter. Furthermore, the claimed subject matter is not limited to implementations that solve any or all disadvantages noted in any part of this disclosure.","In general, one or more implementations described herein are directed to creating and evaluating recognition models in a computing environment. One or more implementations of various techniques for creating and evaluating recognition models in a computing environment will now be described in more detail with reference to  in the following paragraphs.","Implementations of various technologies described herein may be operational with numerous general purpose or special purpose computing system environments or configurations. Examples of well known computing systems, environments, and\/or configurations that may be suitable for use with the various technologies described herein include, but are not limited to, personal computers, server computers, hand-held or laptop devices, multiprocessor systems, microprocessor-based systems, set top boxes, programmable consumer electronics, network PCs, minicomputers, mainframe computers, distributed computing environments that include any of the above systems or devices, and the like.","The various technologies described herein may be implemented in the general context of computer-executable instructions, such as program modules, being executed by a computer. Generally, program modules include routines, programs, objects, components, data structures, etc. that performs particular tasks or implement particular abstract data types. The various technologies described herein may also be implemented in distributed computing environments where tasks are performed by remote processing devices that are linked through a communications network, e.g., by hardwired links, wireless links, or combinations thereof. In a distributed computing environment, program modules may be located in both local and remote computer storage media including memory storage devices.",{"@attributes":{"id":"p-0019","num":"0018"},"figref":"FIG. 1","b":["100","100"]},"The computing system  may include a central processing unit (CPU) , a system memory  and a system bus  that couples various system components including the system memory  to the CPU . Although only one CPU is illustrated in , it should be understood that in some implementations the computing system  may include more than one CPU. The system bus  may be any of several types of bus structures, including a memory bus or memory controller, a peripheral bus, and a local bus using any of a variety of bus architectures. By way of example, and not limitation, such architectures include Industry Standard Architecture (ISA) bus, Micro Channel Architecture (MCA) bus, Enhanced ISA (EISA) bus, Video Electronics Standards Association (VESA) local bus, and Peripheral Component Interconnect (PCI) bus also known as Mezzanine bus. The system memory  may include a read only memory (ROM)  and a random access memory (RAM) . A basic input\/output system (BIOS) , containing the basic routines that help transfer information between elements within the computing system , such as during start-up, may be stored in the ROM .","The computing system  may further include a hard disk drive  for reading from and writing to a hard disk, a magnetic disk drive  for reading from and writing to a removable magnetic disk , and an optical disk drive  for reading from and writing to a removable optical disk , such as a CD ROM or other optical media. The hard disk drive , the magnetic disk drive , and the optical disk drive  may be connected to the system bus  by a hard disk drive interface , a magnetic disk drive interface , and an optical drive interface , respectively. The drives and their associated computer-readable media may provide nonvolatile storage of computer-readable instructions, data structures, program modules and other data for the computing system .","Although the computing system  is described herein as having a hard disk, a removable magnetic disk  and a removable optical disk , it should be appreciated by those skilled in the art that the computing system  may also include other types of computer-readable media that may be accessed by a computer. For example, such computer-readable media may include computer storage media and communication media. Computer storage media may include volatile and non-volatile, and removable and non-removable media implemented in any method or technology for storage of information, such as computer-readable instructions, data structures, program modules or other data. Computer storage media may further include RAM, ROM, erasable programmable read-only memory (EPROM), electrically erasable programmable read-only memory (EEPROM), flash memory or other solid state memory technology, CD-ROM, digital versatile disks (DVD), or other optical storage, magnetic cassettes, magnetic tape, magnetic disk storage or other magnetic storage devices, or any other medium which can be used to store the desired information and which can be accessed by the computing system . Communication media may embody computer readable instructions, data structures, program modules or other data in a modulated data signal, such as a carrier wave or other transport mechanism and may include any information delivery media. The term \u201cmodulated data signal\u201d may mean a signal that has one or more of its characteristics set or changed in such a manner as to encode information in the signal. By way of example, and not limitation, communication media may include wired media such as a wired network or direct-wired connection, and wireless media such as acoustic, RF, infrared and other wireless media. Combinations of any of the above may also be included within the scope of computer readable media.","A number of program modules may be stored on the hard disk , magnetic disk , optical disk , ROM  or RAM , including an operating system , one or more application programs , program data , and a database system . The operating system  may be any suitable operating system that may control the operation of a networked personal or server computer, such as Windows\u00ae XP, Mac OS\u00ae X, Unix-variants (e.g., Linux\u00ae and BSD\u00ae), and the like.","A user may enter commands and information into the computing system  through input devices such as a keyboard  and pointing device . Other input devices may include a microphone, joystick, game pad, satellite dish, scanner, or the like. These and other input devices may be connected to the CPU  through a serial port interface  coupled to system bus , but may be connected by other interfaces, such as a parallel port, game port or a universal serial bus (USB). A monitor  or other type of display device may also be connected to system bus  via an interface, such as a video adapter . In addition to the monitor , the computing system  may further include other peripheral output devices such as speakers and printers.","Further, the computing system  may operate in a networked environment using logical connections to one or more remote computers The logical connections may be any connection that is commonplace in offices, enterprise-wide computer networks, intranets, and the Internet, such as local area network (LAN)  and a wide area network (WAN) .","When using a LAN networking environment, the computing system  may be connected to the local network  through a network interface or adapter . When used in a WAN networking environment, the computing system  may include a modem , wireless router or other means for establishing communication over a wide area network , such as the Internet. The modem , which may be internal or external, may be connected to the system bus  via the serial port interface . In a networked environment, program modules depicted relative to the computing system , or portions thereof, may be stored in a remote memory storage device  of a remote computer . The remote computer  may include similar properties as those indicated in the computing system . It will be appreciated that the network connections shown are exemplary and other means of establishing a communications link between the computers may be used.","In one implementation, the remote memory storage device  may include the research platform application . The research platform application  may be an open web-based application that may be utilized by one or more users to collect data, create recognition models, or evaluate recognition models. In one implementation, the research recognition application  may include four modules: data, training, evaluation, and plug-in. Each module of the research platform application  may perform a different function in creating and evaluating recognition models. In one implementation, the modules may be represented on the user interface of the research platform application  as tabs, where each tab may pertain to a different module. The research platform application  and its modules may be described in more detail in .","It should be understood that the various technologies described herein may be implemented in connection with hardware, software or a combination of both. Thus, various technologies, or certain aspects or portions thereof, may take the form of program code (i.e., instructions) embodied in tangible media, such as floppy diskettes, CD-ROMs, hard drives, or any other machine-readable storage medium wherein, when the program code is loaded into and executed by a machine, such as a computer, the machine becomes an apparatus for practicing the various technologies. In the case of program code execution on programmable computers, the computing device may include a processor, a storage medium readable by the processor (including volatile and non-volatile memory and\/or storage elements), at least one input device, and at least one output device. One or more programs that may implement or utilize the various technologies described herein may use an application programming interface (API), reusable controls, and the like. Such programs may be implemented in a high level procedural or object oriented programming language to communicate with a computer system. However, the program(s) may be implemented in assembly or machine language, if desired. In any case, the language may be a compiled or interpreted language, and combined with hardware implementations.",{"@attributes":{"id":"p-0029","num":"0028"},"figref":["FIG. 2","FIG. 1"],"b":["200","200","100","200","210","220","230"]},"In one implementation, the end users' PCs  may be configured like the computing system  described in . The server  may be connected to each end user's PC  through the LAN  or the WAN . The server  may correspond to the remote computer  in the computing system  and may include the research platform application . The server  may provide an interface between the end users' PCs  and the computer cluster  through the research platform application . The server  may also communicate with the computer cluster  to search for data samples, search for other recognition models, submit a request to train a recognition model, submit a request to evaluate a recognition model, search the evaluation data, or the like.","The computer cluster  may include one or more computing systems  that may be capable of storing data and applications that may be used by the research platform application . The computer cluster  may provide large scale data storage and computational capabilities for the research platform application . In one implementation, each computing system  in the computer cluster  may communicate with each other through a network protocol to save data or perform one or more analysis for the research platform application . In one implementation, the research platform application  may include one or more training applications that may analyze and interpret data that may be stored in the computer cluster . Two or more computing systems  of the computer cluster  may execute the training applications in parallel to efficiently interpret the provided data. In one implementation, the computer cluster  may store data, recognition models, evaluations of the recognition models, and the like, in its system memory  or hard drive .",{"@attributes":{"id":"p-0032","num":"0031"},"figref":["FIG. 3","FIG. 2"],"b":["300","300","200","300","60"]},"At step , the research platform application  may receive data information from one or more users in the computing environment. In one implementation, the computing environment may include one or more users that may be connected to the research platform application  via the Internet, Intranet, LAN , WAN , or any other similar methods. In one implementation, the data may be received in the data module of the research platform application . Here, the one or more users on the computing environment may provide data samples to the research platform application  by uploading the data samples to the server .","In one implementation, if the research platform application  may be designed to recognize handwritten letters in the English alphabet, users on the computing environment may upload samples of one or more letters to the research platform application . The user may upload the data sample using a tablet PC, writing pad, or any other similar device. The data sample may be stored as an \u201cink\u201d file in the computer cluster . Although the data samples have been described to include letters of the English alphabet, it should be understood that in some implementations the data samples may include, but are not limited to symbol data, number data, speech data, human face data, fingerprint data, and other similar types of data. The \u201cink\u201d file may store an image of the data sample along with other data describing the data sample such as the writer's writing strokes as obtained from the tablet PC or other similar data. Although the research platform application  may have been used in letter recognition, it should be noted that in other implementations the research platform application  may be used in number recognition, speech recognition, symbol recognition, facial recognition, fingerprint recognition, and the like.","In one implementation, a user may use the research platform application  to browse the data samples stored in the computer cluster . Since the research platform application  may be accessed by multiple users on the computing environment, the data supplied by each user on the computing environment may be viewed by any other user on the environment as well. This feature may allow users (e.g. researchers) to access many more data samples without having to obtain all of the samples themselves.","In yet another implementation, a user may use the data module of the research platform application  to define a subset or portion of data samples from all of the data samples stored on the computer cluster  to use for the training module in subsequent steps of the method . In one implementation, the set of data samples may be used as a training data set for the training module described at step .","At step , the research platform application  may receive one or more training parameters from a user to create a recognition model. In one implementation, the training parameters may be received in the training module of the research platform application . Each of the training parameters may be displayed to the user, and the research platform application  may receive a selection of one or more training parameters to use for creating the recognition model. The training parameters may define a template, a data sample set, a feature extraction algorithm, a classifier algorithm, and other similar items that may be used in training the recognition model. In one implementation, each training parameter may be accessible and customizable to any user in the computing environment.","The feature extraction algorithm may be used to obtain one or more features of a data sample, and the classifier algorithm may determine what template the data sample may represent using the features of the data sample. The template may define the type of data sample of the data sample set. For instance, templates may include characters in different languages, mathematical symbols, fingerprints, human faces, and the like. A template may represent the meaning of a data sample. For example, the English alphabet contains  letters, and each letter may be a template while the English alphabet, as a whole, is a template set. A user's actual writing sample of a template may be the data sample in accordance with one or more implementations on various techniques described herein.","The data sample set may include the data samples selected by the user at step . Each of the training parameters may be used by the training module to create the recognition model. In one implementation, the research platform application  may provide default algorithms for the feature extraction algorithm or the classifier algorithm so that the user may build a recognition model even if he knows only a few details about the algorithm.","In one implementation, a user may upload a feature extraction algorithm or a classifier algorithm to be used as a training parameter. The algorithms may be uploaded in the plug-in module of the research platform application . The plug-in module may provide users an opportunity to do experiments with their own algorithms and compare the results of the recognition algorithms with the results of other users on the computing environment.","At step , the research platform application  may create the recognition model using the training parameters received at step . In one implementation, the recognition model may be created using a general workflow process. In one implementation, the workflow process may include five steps including: feature extraction, feature analysis, feature reduction, classifier training, and recognition evaluation. Due to the amount of computational power used to create the recognition model, the research platform application  may send the training parameters to the computing systems of the computer cluster  to create the recognition model. In one implementation, the computing systems of the computer cluster , alone or in combination, may perform the workflow process steps. These five steps are also described in more detail with reference to  in the paragraphs below.","In one implementation, the feature extraction step may transform each data sample in the data set selected at step  into a set of feature vectors that represents the characteristics of the data sample. The feature vectors may have one or more dimensions (n). The feature analysis step may then use the n-dimensional feature vectors of data samples in the training data set to produce a feature selection matrix M. In one implementation, the feature analysis step may be performed using a Linear Discriminant Analysis (LDA). Next, at the feature reduction step, smaller m-dimensional feature vectors may be generated based on the original n-dimensional feature vectors and the feature selection matrix M. The classifier training step then creates a recognition model using the classifier algorithm received at step .","After completing the workflow process, the research platform application  may store the newly trained recognition model in the computer cluster  so that it may be accessible by any user using the research platform application . In one implementation, a user may download the recognition model from the computer cluster  using the research platform application  to perform evaluations or use it in recognition tasks on a local machine.","While the research platform application  may labor through each of the workflow process steps, the progress of the training of the recognition model may be displayed on the user interface of the research platform application . In one implementation, the progress may be indicated by displaying a total completion percentage. The workflow process may be applicable to many statistical recognition algorithms such as the nearest neighboring classifier, Gaussian classifier, and the like. Although one set of steps has been described for the workflow process, it should be understood that the research platform application  may support a variety of workflow processes.","In one implementation, the training of the recognition model may be created in one or more iterations until the recognition accuracy meets a predetermined threshold. For example, the parameters of a classifier model may continuously be adjusted until the model identifies any data sample in the training set accurately 90% of the time on its first attempt. In one implementation, the classifier model may be used to classify data samples to its respective template. The parameters of the classifier model may continuously be adjusted until the difference between the accuracy rates of two subsequent rounds\/iterations of training is smaller than a predetermined percentage. For example, if the accuracy rate of the recognition model for one training iteration is 92.2%, the accuracy rate of the next training iteration is 92.4%, and the predetermined difference percentage is 0.1%, the research platform application  may continue training the recognition model until the difference between two subsequent training iterations is equal to or less that 0.1%.","At step , the research platform application  may display statistics pertaining to the accuracy of the recognition model during its training. In one implementation, the training statistics may include the total number of samples used to train the recognition model. The research platform application  may also display one or more accuracy statistics for the training of the recognition model. For instance, the accuracy statistics may include the percentage in which the recognition model accurately identified a character after its first attempt during the training process. The accuracy results may also display the percentage in which the recognition model accurately identified the character after its second, third, fourth, (etc.) attempts during the training process. Further, the recognition platform application  may also display statistics describing the data sample with the worst accuracy after the first attempt and the data sample with the worst accuracy after the first ten attempts. Although the research platform application  has been described to display accuracy statistics, it should be understood that in other implementations additional statistics may also be displayed.","At step , the research platform application  may evaluate the recognition model created at step . In one implementation, the evaluation of the recognition model may take place in the evaluation module of the research platform application . In order to evaluate a recognition model, the research platform application  may receive inputs from a user, such as the recognition model to be evaluated, a subset of an evaluation dataset to use for testing or evaluating the recognition model. In one implementation, the recognition model, the subset of the evaluation dataset, and the training parameters may be uploaded to the research platform application  and may be accessible and customizable to any user on the computing environment. The evaluation dataset may include one or more data samples that may be part of a group of datasets that are distinct from the data sample set described in step . In one implementation, the user may select a subset of the evaluation dataset to be used for evaluating the recognition model.","The research platform application  may proceed through a similar workflow process as detailed in step  in order to evaluate the recognition model, except with the testing dataset defined at step  and without training the recognition model. In one implementation, the research platform application  may only use one attempt in trying to identify the data sample in the evaluation module in order to test the recognition model's accuracy in identifying characters.","At step , the research platform application  may display statistics pertaining to the evaluation of the recognition model. In one implementation, the evaluation statistics may include the same statistics as described in step .",{"@attributes":{"id":"p-0050","num":"0049"},"figref":["FIG. 4","FIG. 1","FIG. 3"],"b":["400","400","100","400","300","400","60"]},"At step , the research platform application  may extract features from a data sample. In one implementation, the research platform application  may transform each data sample into a set of feature vectors that represents the characteristics of the data sample. The feature vectors may use one or more dimensions (n) to represent the data sample.","At step , in one implementation, the research platform application  may perform a feature analysis on the feature vectors obtained at step . In one implementation, the feature analysis may use a Linear Discriminant Analysis to produce a feature selection matrix M from the n-dimensional feature vectors of a data sample.","At step , the research platform application  may reduce the features obtained from the data sample. In one implementation, the n-dimensional feature vectors obtained from step  may be reduced to smaller m-dimensional feature vectors based on the feature selection matrix M obtained from step .","At step , the research platform application  may create a recognition model via training a classifier model. In one implementation, the parameters of the classifier model may continuously be adjusted until the model identifies any data sample in the training set accurately at a predefined accuracy threshold of the time on its first attempt. The recognition model may then be capable of identifying the meaning or content of a data sample.","Although the subject matter has been described in language specific to structural features and\/or methodological acts, it is to be understood that the subject matter defined in the appended claims is not necessarily limited to the specific features or acts described above. Rather, the specific features and acts described above are disclosed as example forms of implementing the claims."],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"BRIEF DESCRIPTION OF THE DRAWINGS","p":[{"@attributes":{"id":"p-0012","num":"0011"},"figref":"FIG. 1"},{"@attributes":{"id":"p-0013","num":"0012"},"figref":"FIG. 2"},{"@attributes":{"id":"p-0014","num":"0013"},"figref":"FIG. 3"},{"@attributes":{"id":"p-0015","num":"0014"},"figref":"FIG. 4"}]},"DETDESC":[{},{}]}
