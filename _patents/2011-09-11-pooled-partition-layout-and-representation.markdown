---
title: Pooled partition layout and representation
abstract: A set of storage devices may interoperate to share a pool of storage space, such as in a Redundant Array of Inexpensive Disks (RAID) scheme. However, the details of the representation of the pool and the allocation of capacity to the pool may enable advantages and/or impose limitations on the storage set. Presented herein are techniques for generating a representing a pooled partition on one or more storage devices featuring a pool configuration representing the pool as a set of spaces manifested by the pool; a set of storage devices sharing the pool; and a set of extents that map physical areas of the storage devices to logical areas of the spaces. The flexibility of these pooling techniques may enable such features as flexible capacity allocation, delayed binding, thin provisioning, and the participation of a storage device in two or more distinct pools shared with different sets of storage devices.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09069468&OS=09069468&RS=09069468
owner: Microsoft Technology Licensing, LLC
number: 09069468
owner_city: Redmond
owner_country: US
publication_date: 20110911
---

{"@attributes":{"id":"description"},"BRFSUM":[{},{}],"heading":["BACKGROUND","SUMMARY","DETAILED DESCRIPTION"],"p":["Within the field of computing, many scenarios involve a set of one or more storage devices (e.g., platter-based magnetic and\/or optical hard disk drives, solid-state storage devices, and nonvolatile memory circuits) that may be allocated in various ways. As a first example, the storage space provided by a storage device may be grouped into one or more partitions, each of which may store data associated with one or more logical drives reflected in an operating environment. As a second example, the capacity of two or more storage devices may be combined in many ways to provide additional storage features, e.g., various Redundant Array of Inexpensive Disks (RAID) schemes that provide features such as improved throughput, automatic mirroring, and automatic parity computations. As a third example, the storage space may be accessible to one or more computers (e.g., a network-attached storage device that is concurrently accessible to several computers on a network). More complex techniques may also be provided by such devices, such as journaled spaces and thin provisioning.","The design choices involved in such scenarios result in metadata indicating the number, types, capacities, allocations, and features provided by the storage devices of the storage set, as well as the pooling arrangements of one or more storage devices. This metadata may be stored in many ways, such as in the memory of a storage controller (e.g., a RAID controller configured to store information about a RAID scheme applied to the storage devices), or in standardized locations on one or more storage disks of the storage set. For example, a storage device may comprise, at the beginning of the storage space, a master boot record (MBR) listing the numbers, locations, sizes, and types of partitions stored on the storage device, and, at the end of the storage space, a logical disk model (LDM) database indicating the logical drives exposed by the partitions.","This Summary is provided to introduce a selection of concepts in a simplified form that are further described below in the Detailed Description. This Summary is not intended to identify key factors or essential features of the claimed subject matter, nor is it intended to be used to limit the scope of the claimed subject matter.","The manner of persisting metadata describing a storage set may present various advantages and\/or disadvantages. As a first example, metadata stored in the memory of a storage controller may be rapidly accessible, but may complicate the migration of a storage device to a different storage controller or computer (e.g., if a storage device is relocated to a different machine or array, the data on the storage device may be inaccessible if the partition information is not stored on the same storage device). As a second example, storing metadata for an array on only one storage device that subsequently fails may result in loss of data on several or all of the storage devices of the storage set. As a third example, sharing a storage device concurrently with two or more computers, where each may update the metadata, may result in race conditions and\/or versioning conflicts among mirrored versions of the metadata. As a fourth example, storing the metadata on a storage device in a new manner may reduce the compatibility and\/or accessibility of the storage device with other storage devices and\/or computers (e.g., the metadata may not be readable and\/or usable by devices that are not accordingly configured), and may result in an overwriting of the metadata and a loss of data and\/or functionality. As a fifth example, some representations may not permit a storage device to participate in multiple storage pools that are distributed across different sets of storage devices (e.g., a first pooled partition shared with a first set of storage devices and a second pooled partition shared with a second, different set of storage devices), or to participate in the same storage pool in different roles (e.g., a single storage device featuring a pooled partition including first partition for user data, and a second partition allocated on the same storage device for parity data for the user data).","Presented herein are techniques for storing the metadata identifying the storage devices and storage spaces, as well as the provisions and pooling arrangements, of the storage devices in a storage set. In accordance with these techniques, one or more storage devices may share a pooled partition comprising a pool configuration and a set of extents. The pool configuration may represent the pooled partition as a pool record (identifying the pool); a set of space records representing various spaces manifested by the pooled partition (e.g., volumes for user data, maintenance spaces, and journal spaces storing a journal for the user data); a set of storage device records representing the storage devices participating in the pool; and a set of extent records that map allocations of a physical location within the pooled partition on a storage device to a logical location within a space of the pooled partition. The pool configuration may be stored at the top of the pooled partition of each storage device in a mirrored fashion to provide access to a consistent metadata representation of the pooled partition on any storage device. A request to manifest a space within a pooled partition may be fulfilled by generating a space record representing the space, possibly including a provisioned capacity of the space. Extents may also be allocated and bound to the space in order to allocate physical capacity to the space. This binding may be performed promptly upon creating the space, or may be delayed until the capacity of the space is utilized. Additionally, among the computers accessing the pooled partition, a pool configuration owner may be identified that is exclusively permitted to update the pool configuration, and any requests to alter the pool configuration (e.g., adding a space or allocating an extent to a space) may be forwarded to the pool configuration owner.","This representation of a pooled partition may enable several advantages over other representations of a pooled partition. As a first example, the data within the pooled partition of a storage device may remain accessible if the storage device is relocated (e.g., to a different machine or a different storage array), or if another storage device sharing the pooled partition crashes or becomes unavailable, because the pool configuration is mirrored on each storage device sharing the pooled partition. As a second example, this representation differentiates the provisioning of a space from the allocation of extents, which may be performed in a delayed manner, such as on a just-in-time basis. This differentiation may enable various types of flexibility of the storage set, such as an easy manner of reallocating extents to resize the spaces, a rapid provisioning technique that does not involve the allocation of capacity on the storage devices, and the capability of thin provisioning (e.g., provisioning a space with capacity exceeding the available physical capacity of the storage devices, with the option of fulfilling the provisioned capacity by adding physical storage capacity in the form of additional storage devices as the capacity of the space is exhausted). As a third example, a pooled partition represented in this manner may span two or more partitions on the same storage device. As a fourth example, a first pooled partition may coexist with non-pooled partitions (which may be accessible on storage systems that do not recognize the pooled partition). As a fifth example, a storage device may store two or more pooled partitions that are respectively shared with different sets of other storage devices. As a sixth example, the selection of a pool configuration owner among the computers or devices that may access the storage devices may reduce race conditions that may result in asynchrony of the pool configuration that may otherwise occur in the event that two or more devices concurrently update the pool configuration. These and other advantages may be achievable through the representation of a pooled partition according to the techniques presented herein.","To the accomplishment of the foregoing and related ends, the following description and annexed drawings set forth certain illustrative aspects and implementations. These are indicative of but a few of the various ways in which one or more aspects may be employed. Other aspects, advantages, and novel features of the disclosure will become apparent from the following detailed description when considered in conjunction with the annexed drawings.","The claimed subject matter is now described with reference to the drawings, wherein like reference numerals are used to refer to like elements throughout. In the following description, for purposes of explanation, numerous specific details are set forth in order to provide a thorough understanding of the claimed subject matter. It may be evident, however, that the claimed subject matter may be practiced without these specific details. In other instances, structures and devices are shown in block diagram form in order to facilitate describing the claimed subject matter.","A. Introduction","Within the field of computing, many scenarios involve a storage device (e.g., a hard disk drive, a solid state storage device, or a volatile or nonvolatile memory circuit) configured to store data on behalf of one or more computers or other devices. The data stored may comprise many types of objects (e.g., files, media objects, media objects, data sets, or database records) and may be organized in various ways (e.g., as a collection of named objects, as a hierarchy, or in a relational manner). However, at a lower level, the storage device is often configured according to a layout that is usable by the device; e.g., regardless of the type and organization of data to be stored, the storage device is often organized (e.g., organized) in a particular manner that computers and other devices are capable of reading. As one such example, the available capacity of the storage device is often organized as a set of partitions, and a partition table generated at the beginning of the storage device indicates the locations, sizes, and types of the partitions. The segregation of the capacity of the storage device into volumes may provide various advantages (e.g., different partitions may isolate different groups of data; may be used to manifest different volumes; or may be differently organized to store different types of data, and\/or to store data for access on different computers or devices that utilize different types of partitions).",{"@attributes":{"id":"p-0023","num":"0022"},"figref":"FIG. 1","b":["100","102","104","100","104","114","106","102","104","106","108","112","106","102","106","106","106","106","106","106","106","104","110","102","104","104","104","104","104","104","104","108","108","102","104","106","102","106"]},"While the exemplary format of partitions  in the exemplary scenario  of  may satisfy some scenarios, it may be desirable to design the format in a manner that enables some additional features. As a first example, it may be desirable to establish a relationship between two or more partitions , such as a mirrored relationship (where an identical data set is stored in each partition , and where changes to the data within one partition  are automatically propagated to other partitions ). Such mirroring may promote the durability of the data set in the event of data corruption; e.g., in the event of a corruption of a partition , or a failure of a storage device  comprising a partition , the data set may remain intact and accessible if mirrored in a second partition  (possibly on a different storage device ). Mirroring may also improve performance; e.g., a first storage device  may be limited to a set of performance characteristics (e.g., a minimum latency involved in initiating an access request, or a maximum sustainable throughput while accessing the data), and mirroring a data set across two or more storage devices  may enable performance characteristics representing the sum of all of the storage devices . A second feature that may be enabled by some formats of storage devices  is the spanning of a data set across the partitions  of two or more storage devices . For example, in the exemplary scenario  of , the size of a logical volume  is limited to the size of the partition  comprising the logical partition , which in turn is limited to the available capacity of the storage device . However, other formats may be enable a pooling of two or more partitions of one or more storage devices , thereby exceeding the size limitations of any one partition  or storage devices . The formatting of storage devices  may also be devised to promote error detection and error correction (e.g., for respective data sets, a storage device  may automatically generate and store a set of verifiers, such as checksums, that may be compared with the contents of the data sets to detect and possibly incorrectly written data) and shared access to the data set (e.g., a storage set  may enable multiple computers or other devices without exposing the data set to write-based race conditions, which may result in inconsistent or non-deterministic updates to the data set).","Accordingly, the basic format exhibited in the exemplary scenario  of  may be extended to enable features such as mirroring, concurrent access, fault tolerance, and error detection and correction. For example, a set of storage devices  may be organized according to a Redundant Array of Inexpensive Disks (RAID) scheme, which may be implemented in hardware and\/or software to implement such features. As a first example, in a RAID 0 scheme, data stored in several partitions  of several storage devices  is presented as a single logical volume . As a second example, in a RAID 1 scheme, data stored is automatically mirrored across several partitions  on one or more storage devices , thereby enabling faster access to the data set and\/or fault tolerance in the event that a storage device  or partition  becomes unreliable or inaccessible. As a third example, in a RAID 4 scheme, checksums are computed for respective portions of a data set that may be used to verify the integrity of the data set (e.g., that data written to the data set is consistently read from the data set, and is not inadvertently changed during storage), and\/or to recover from a failure of a partition  and\/or storage device  (e.g., if a partition  of a storage device  becomes corrupted, or if the storage device  is removed, the data contained in the partition  may be recoverable using the checksums of the missing data and other portions of the data set represented by the checksum). RAID schemes, as well as other format specifications, thereby enable these and other features through the particular organization and accessing of data on the storage devices .",{"@attributes":{"id":"p-0026","num":"0025"},"figref":"FIG. 2","b":["200","102","202","200","102","114","106","104","204","114","102","102","110","102","104","102","102","104","104","102","202","106","112","114","102","202","204","102","104","102","104","102","102","202","106","102"]},"However, the layout in the exemplary scenario  of  may present some limitations. As a first example, a RAID 4 schema may only be capable of pooling storage devices  having matching characteristics; e.g., it may not be possible to apply this schema with storage devices  of varying capacities (e.g., a one-terabyte storage device  and a two-terabyte storage device). This limitation may arise from the computation of checksums on the fourth storage device  for corresponding physical addresses of the data sets on the first three storage devices ; e.g., the algorithm may be unable to adapt these computations (without diminished performance) to storage devices  of different sizes. As a second example, a RAID 4 schema may exhibit diminished consistency, reliability, and\/or performance for storage sets comprising storage devices  with different performance characteristics (e.g., even if the storage devices  are identically sized, differences in the latency and throughput characteristics of storage devices  of different makes and\/or models may result in problems or diminished performance of the storage set). As a third example, the interdependence of the storage devices  may diminish the portability of any one storage device . For example, it may not be possible to access the contents of a storage device  if transferred to a different array, because the metadata describing the contents of the storage device  may be interrelated with the other storage devices  and\/or the controller thereof (e.g., the metadata describing the pool  may be stored on a separate memory component of a RAID controller, and transferring one or more storage devices  to a different RAID controller may fail to transfer the metadata, resulting in an inaccessibility of the data set). As a fourth example, the formatting of these storage devices  may only be usable by systems (e.g., storage controllers and software) that are configured to support a RAID 4 scheme. As a fifth example, this scheme may utilize all of the capacity of all of the storage devices . Therefore, it may not be possible to allocate some capacity on these storage devices  for use outside of the pool , e.g., as a second partition  outside of the pool , or as a partition  participating in another pool  with the same or other storage devices . Moreover, it is difficult to implement different RAID schemes on a set of storage devices ; e.g., a RAID controller may be configured to apply one RAID scheme to the entire capacity of all of the storage devices  at its disposal.",{"@attributes":{"id":"p-0028","num":"0027"},"figref":["FIG. 3","FIG. 2"],"b":["300","102","200","300","102","110","302","304","106","106","102","202","302","102","302","102","304","302","102","304","302","102","102","304","202","306","102","304","102","106","300","306","102","304","102","304","304","102","106","304","102","304","102","106","306","102","102","302"]},"The formatting of the storage devices  with a logical disk manager database  may present some advantages. As a first example, as compared with the exemplary scenario  illustrated in , the logical disk manager database  enables the representation of a pool  of subdisks  on multiple storage devices . Also, as compared with the exemplary scenario  of , the formatting illustrated in the exemplary scenario  of  may be implemented on storage devices  of different sizes and\/or different performance characteristics (e.g., the first and second storage devices  in  may have different total capacities generated by different manufacturers with different storage controllers). Additionally, as further compared with the exemplary scenario  illustrated in , the logical disk manager database  may enable the coexistence of a pool  with other partitions  that are not included in the pool  (e.g., the first partition  on the first storage device ), and that may be accessible to and usable by systems (e.g., storage controllers and software) that are not capable of using the logical disk manager database .","However, the use of a logical disk manager database  to represent a pool  of subdisks  may also present some limitations. As a first example, many logical disk manager databases  are only capable of representing one pool , and it may be difficult to extend the logical disk manager database  to represent multiple pools  of subdisks . As a second example, the location of the logical disk manager database  at the end of the storage device  may limit the size of the logical disk manager database , and expanding the logical disk manager database  may involve rewriting the entire logical disk manager database  at a different location on each storage device . As a third example, it may be difficult to represent the manifestation of a logical volume  comprising only a portion of a partition . For example, and as similarly illustrated in the exemplary scenario  of , each partition  is entirely allocated to one logical volume . Because of this correspondence, it may be difficult to allocate partitions  in a flexible manner (e.g., distributing the capacity of a partition  across two or more logical volumes ), and resizing a logical volume  (including a subdisk  contained therein) may involve significantly altering the partitions  of the storage device  (e.g., resizing a logical volume  may involve reallocating the partitions , possibly involving a complete rewriting of the data stored in the partition ).","B. Presented Techniques","Presented herein are techniques for formatting storage devices  that may address some of the limitations of other formatting techniques, including those exhibited by the logical disk manager (LDM) database  in the exemplary scenario in . In accordance with these techniques, a format may be devised that organizes the available capacity of a storage device  in a manner that facilitates the implementation of various storage features (e.g., the generation of one or more pools  of storage capacity shared by multiple storage devices ; the specification and automated application of various coordinated storage features, such as mirroring in a RAID 1 array or checksumming in a RAID 4 array; and concurrent access by multiple computers or devices). Such techniques may also promote the robustness of the storage set stored on the storage devices  (e.g., the preservation of the metadata for a storage device  if relocated to a different storage controller); the flexibility of the organization (e.g., facilitating the resizing of partitions , the allocation and reallocation of the available capacity of the storage device , and the compatibility of the organization with other organizational techniques (e.g., enabling a storage device to include both more complex organizational structures, such as a pool  of storage synchronized with other storage devices , and standardized structures, such as basic partitions ).","Therefore, in accordance with these and other considerations, the techniques presented herein involve organizing a storage device  to include one or more pooled partitions that, respectively, may be shared with other storage devices  and may implement various storage features (e.g., different RAID schemes or other features). In a coarse-granularity view of the storage device , a pooled partition is allocated in a similar manner as other partitions , e.g., as a block of available capacity set aside and indexed in the partition table . Thus, a pooled partition may coexist with other partitions  of different types. However, the capacity of the pooled partition is utilized in a different manner. As a first example, the metadata describing the pooled partition is stored not in a separate structure (e.g., a logical disk manager database ), but within the pooled partition, thereby enabling multiple pooled partitions to be stored on the same storage device  of arbitrarily different types (e.g., shared with different sets of other storage devices , and\/or implementing different RAID schemes or other storage features). As a second example, the pooled partition may define a set of spaces, which may represent different constructs (e.g., logical volumes  storing user data; maintenance metadata for the spaces, such as staleness suggesting a resynchronization or failure suggesting the replacement of a storage device ; or a journal configured a as a temporary store of writes to the storage set). Moreover, rather than allocating the capacity of a partition  entirely to one logical volume , or in a small number of large, contiguous blocks to a small number of logical volumes , the capacity of the pooled partition may be allocated in small blocks (referred to herein as \u201cextents\u201d) that may be mapped to respective spaces. These associations may be stored in the pooled partition configuration. Moreover, the associations may facilitate the resizing of spaces (e.g., by allocating or deallocating extents), as well as other features, such as delaying the provisioning and\/or binding of extents for the spaces, thereby enabling features such as thin provisioning. These and other features may be achievable through the formatting and organization of storage devices  according to the techniques presented herein.",{"@attributes":{"id":"p-0034","num":"0033"},"figref":["FIG. 4","FIG. 3"],"b":["400","102","300","306","102","106","102","304","302","400","404","404","404","404","406","404","406","406","406","406","406","406","404","106","410","406","404","412","406","406","406","102","102","408","102","406","102","406","402","102","404","408","406","404"]},{"@attributes":{"id":"p-0035","num":"0034"},"figref":["FIG. 5","FIG. 4","FIG. 4","FIG. 4"],"b":["500","102","400","500","102","404","404","102","404","102","102","110","404","404","102","404","402","102","402","406","104","408","404","102","406","404","102","408","410","408","408","408","406","404","408","406","408","102","406","102","408","102","402","408","504","102","404","102","404","102","102","404","102","102","104"]},"The organization of the storage devices  in the exemplary scenarios ,  of , in accordance with the techniques presented herein, may enable some advantages with respect to other organizations (including those presented in ). As a first example, the pool configuration  enables the specification of different types of spaces  (e.g., a maintenance space, a user data space, and a journal space), as well as the specification of storage features to be applied to each space  (which enables the use of different storage features, such as different RAID schemes, for different spaces ). As a second example, the pool configuration  may define a set of spaces  manifested by the pool , but may present some flexibility in the allocation of extents  comprising the physical capacity of the storage devices  to the spaces  of the pool . For example, by allocating a series of small extents  instead of a large block such as a subdisk , this organization enables a fine-grain resizing of spaces  through the reassignment of extents . Additionally, the spaces  may be provisioned with a particular size, but an embodiment may allocate extents  and bind the physical addresses of the extents  to the logical addresses of the spaces  at a later moment, e.g., when a write is received to a location within a space  that is not yet bound to an extent . These concepts of delayed allocation and delayed binding may enable a rapid completion of the formatting of the storage devices  (e.g., not having to allocate and initialize all of the extents  upon receiving a request to create a space ) and overprovisioning (e.g., creating a space  with a defined capacity exceeding the available capacity  of the storage devices , and when the used capacity of the space  exhausts the available capacity , prompting a user to add capacity to the storage set). These and other features may be achievable through the organization of the storage devices  as illustrated in the exemplary scenarios ,  of  and in accordance with the techniques presented herein.","C. Exemplary Embodiments",{"@attributes":{"id":"p-0038","num":"0037"},"figref":"FIG. 6","b":["600","102","600","600","602","604","102","606","502","402","402","608","610","102","402","406","402","612","408","406","614","408","406","402","616","408","406","402","102","600","618"]},"Another embodiment involves a computer-readable medium comprising processor-executable instructions configured to apply the techniques presented herein. Such computer-readable media may include, e.g., computer-readable storage media involving a tangible device, such as a memory semiconductor (e.g., a semiconductor utilizing static random access memory (SRAM), dynamic random access memory (DRAM), and\/or synchronous dynamic random access memory (SDRAM) technologies), a platter of a hard disk drive, a flash memory device, or a magnetic or optical disc (such as a CD-R, DVD-R, or floppy disc), encoding a set of computer-readable instructions that, when executed by a processor of a device, cause the device to implement the techniques presented herein. Such computer-readable media may also include (as a class of technologies that are distinct from computer-readable storage media) various types of communications media, such as a signal that may be propagated through various physical phenomena (e.g., an electromagnetic signal, a sound wave signal, or an optical signal) and in various wired scenarios (e.g., via an Ethernet or fiber optic cable) and\/or wireless scenarios (e.g., a wireless local area network (WLAN) such as WiFi, a personal area network (PAN) such as Bluetooth, or a cellular or radio network), and which encodes a set of computer-readable instructions that, when executed by a processor of a device, cause the device to implement the techniques presented herein.","An exemplary computer-readable medium that may be devised in these ways is illustrated in , wherein the implementation  comprises a computer-readable medium  (e.g., a CD-R, DVD-R, or a platter of a hard disk drive), on which is encoded computer-readable data . This computer-readable data  in turn comprises a set of computer instructions  configured to operate according to the principles set forth herein. In one such embodiment, the processor-executable instructions  may, when executed by a processor  of a device , cause the device  to perform a method of organizing the capacities of storage devices , such as the exemplary method  of . Some embodiments of this computer-readable medium may comprise a nontransitory computer-readable storage medium (e.g., a hard disk drive, an optical disc, or a flash memory device) that is configured to store processor-executable instructions configured in this manner. Many such computer-readable media may be devised by those of ordinary skill in the art that are configured to operate in accordance with the techniques presented herein.","D. Variations","The techniques discussed herein may be devised with variations in many aspects, and some variations may present additional advantages and\/or reduce disadvantages with respect to other variations of these and other techniques. Moreover, some variations may be implemented in combination, and some combinations may feature additional advantages and\/or reduced disadvantages through synergistic cooperation. The variations may be incorporated in various embodiments to confer individual and\/or synergistic advantages upon such embodiments.","D1. Scenarios","A first aspect that may vary among embodiments of these techniques relates to the scenarios wherein such techniques may be utilized. As a first variation of this first aspect, these techniques may be used with many types of storage devices , including hard disk drives, solid-state storage devices, nonvolatile memory circuits, tape-based storage devices, and magnetic and optical discs. Such storage devices  may also be directly connected to a device  (such as a computer) implementing these techniques; may be accessible through a wired or wireless local area network (e.g., an 802.11 WiFi network or ad-hoc connection, or an infrared connection); and\/or may be accessible through a wired or wireless wide-area network (e.g., a cellular network or the internet). Moreover, these techniques may be used with two or more storage devices  operating independently (e.g., storage devices  that are accessed independently through a software process); operating with loose interoperation (e.g., storage devices  that operate independently but that are informed of and may communicate with the other storage devices  sharing the storage set); or operating with tight interoperation (e.g., a Redundant Array of Inexpensive Disks (RAID) controller managing several storage devices  as components of a storage system). As a second variation of this first aspect, these techniques may be used in conjunction with many types of storage sets comprising various types of data sets, including binary storage systems storing various types of binary objects; file systems storing files; media libraries storing media objects; object systems storing many types of objects; databases storing records; and email systems storing email messages. As a third variation of this first aspect, portions or all of these techniques may be implemented within one or more components within the computing environment, such as a set of software instructions stored in a volatile or nonvolatile of a computer or device having access to the storage devices  (e.g., an operating system process or a hardware driver); by a storage system configured to interface with the storage devices  (e.g., a RAID controller); or in respective storage devices  of the storage set.","As a fourth variation of this first aspect, these techniques for organizing the capacities of storage devices  may achieve some results that may be difficult to achieve with other techniques (such as those illustrated in ). As a first example, these techniques may enable the generation of a pooled partition  spanning and aggregating at least two partitions  on the first storage device . As a second example, these techniques may enable the generation of a space  comprising at least two extents  stored in the pooled partition  on a first storage device , as well as at least one extent  stored in the pooled partition  on a second storage device . As a third example, among a set of three storage devices , these techniques may enable a first storage device  to share a first pool  with the second storage device  and not the third storage device , and to share a second storage pool  with the third storage device  and not the second storage device . This type of sharing may not be achievable through the use of other techniques, such as a logical disk manager database , and in particular may not have enabled the storage devices  sharing a first pool  to update the pool configuration  in a manner that is isolated from updating the pool configuration  of a second pool  shared with a different set of storage devices . Many such storage scenarios may be achieved through the organization of the storage devices  in accordance with the techniques presented herein.","D2. Pool Configuration","A second aspect that may vary among embodiments of these techniques relates to the nature and use of the pool configuration  to represent the pool  shared by the storage devices . As a first variation of this second aspect, the pool configuration  may be stored on one storage device , or may be mirrored on the storage devices  storing the pool . As a second variation of this second aspect, a pooled partition  may be identified on a storage device  in many ways. For example, the storage device  may comprise a partition table  specifying the locations, sizes, and partition type identifiers of respective partitions , and the pooled partition  may be identified in the partition table with a pooled partition type identifier, which may be understandable and usable by devices  configured to utilize pooled partitions , and may be ignored (and therefore not misused) by other types of devices .","As a third variation of this second aspect, the pool configuration  may be stored in many areas of the pooled partition , including at the beginning of the pooled partition , at the end of the pooled partition , or at a defined or identifiable location in the pooled partition . It may be advantageous to position the pool configuration  at the beginning of the pooled partition  for easy access and\/or to enable the growth of the pool configuration  (in contrast with positioning the pool configuration  at the end of the pooled partition , where growth may be difficult to achieve without rewriting the pool configuration  at a different location in the pool pooled partition ). As a fourth variation of this second aspect, the pool configuration  may be structured in many ways, such as a relational database, a hierarchically structured document (e.g., an Extensible Markup Language (XML) document), or a table. As a fifth variation of this second aspect, the pool configuration  may contain various types of metadata describing the respective entities (e.g., the pool , the spaces , the extents , and the storage devices ), including names, manufacturers, models, capacities, performance characteristics, and uses. In particular, the pool configuration  may specify a space type identifier to identify the types of respective spaces , such as a user space type identifier for a space  storing user data; a checksum space identifier for a space  storing the checksums (or other types of verifiers) of other spaces ; and a journal space type identifier for a space  used as a journal for storing writes to be applied to other spaces . Additionally, spaces  may identify a parent space  to identify a sequential or nesting relationship (e.g., a second user data space  that is contiguous with a first user data space , or a journal space identifying a parent space for which the journal space stores journal updates to be applied to the parent space).","As a sixth variation of this second aspect, the extents  may be specified as a block of physical addresses within the pooled partition , either using a fixed physical location on the storage device  (e.g., track and sector), a physical address within the sequence of physical addresses on the storage device  (e.g., a physical address range), or an offset within the pooled partition  (e.g., the offset from the starting physical address of the pooled partition ); and may also associate the address range with a logical address range within a space  (e.g., specifying a starting logical address and a length or an ending logical address).","As a seventh variation of this second aspect, the allocation and binding of extents  to spaces  may be achieved in various ways.  present some alternative scenarios for achieving this binding. (Each of these figures presents the state of a storage device  at two time points, illustrated respectively as the left and right portions of the figure.) In the exemplary scenario  of , at a first time point , the storage device  comprises a pooled partition  storing a pool configuration  for a pool , as well as a record of the storage device  storing the pool , in addition to a large amount of available capacity . At a second time point , when a space allocation request  to generate a space  to store user data is received, the pool configuration  may be updated to add a record for the space , including its type and provisioned capacity. Additionally, at this second time point , two extents  may be created from the available capacity  of the pooled partition , and the pool configuration  may be updated to add records for the extents  that bind the extents  to logical locations of the space . In this manner, the extents  for a space  may be promptly allocated and available for use.","Alternatively, the binding of extents  for a space  may be delayed, and may be performed on a just-in-time basis. For example, as illustrated in the exemplary scenario  of , at a first time point , a space allocation request may be received to create a space , and a record for the space  may be created within the pool configuration . However, the capacity of the space  may not be fully allocated at the first time point ; for example, at the first time point , only one extent  may be allocated, but other portions of the space  (e.g., other address blocks). However, at a second time point , when a request is received to write to a particular address of the space  for which an extent  has not yet been allocated, a second extent  may be allocated from the available capacity  of the pooled partition  and bound to the space  in the extent record  within the pool configuration . This delayed allocation may enable a faster fulfillment of the request to create the space  (since fewer than all extents  have to be allocated at the first time point ), and\/or may enable thin provisioning, wherein space  may be provisioned with a provisioned size that is greater than a sum of the extent sizes of the extents  bound to the space  and an available capacity  of the storage devices  sharing the pool .",{"@attributes":{"id":"p-0052","num":"0051"},"figref":"FIG. 10","b":["1000","406","408","406","408","406","1000","1002","102","502","406","408","408","406","406","406","406","406","1004","406","408","408","406","406","408","406","408","406","408"]},"D3. Pool Configuration Owner","A third aspect that may vary among embodiments of these techniques relates to the identification of a pool owner of the pool . For example, among the computers or other devices  having access to the storage devices  comprising a pool, a pool configuration owner may be elected that has exclusively write access among the computers to the pool configuration . Upon receiving a request to update the pool configuration  (e.g., a request to create a space  or bind an extent  to a space ), a computer may determine whether it is the pool configuration owner, and if not, may forward the request to the pool configuration owner. Moreover, if the pool configuration owner becomes unresponsive or unavailable, then the other computers may, upon detecting the failure of the pool configuration owner, identify a substitute pool configuration owner among the computers (e.g., electing a new pool configuration owner). This election may enable updates to the pool configuration  to be performed in a manner that avoids conflicting updates arising from race conditions, which may leave the pool configuration  in an inconsistent state. Those of ordinary skill in the art may envision and utilize many variations may be identified in the manner of updating the pool configuration  to protect the integrity of the pool configuration  and the pool  from such conditions.","E. Computing Environment",{"@attributes":{"id":"p-0056","num":"0055"},"figref":"FIG. 11","b":"1102"},{"@attributes":{"id":"p-0057","num":"0056"},"figref":["FIG. 11","FIG. 11"],"b":["1100","1102","1102","1106","1108","1108","1104"]},"In some embodiments, device  may include additional features and\/or functionality. For example, device  may include one or more additional storage components , including, but not limited to, a hard disk drive, a solid-state storage device, and\/or other removable or non-removable magnetic or optical media. In one embodiment, computer-readable and processor-executable instructions implementing one or more embodiments provided herein are stored in the storage component . The storage component  may also store other data objects, such as components of an operating system, executable binaries comprising one or more applications, programming libraries (e.g., application programming interfaces (APIs), media objects, and documentation. The computer-readable instructions may be loaded in the memory component  for execution by the processor .","The computing device  may also include one or more communication components  that allows the computing device  to communicate with other devices. The one or more communication components  may comprise (e.g.) a modem, a Network Interface Card (NIC), a radiofrequency transmitter\/receiver, an infrared port, and a universal serial bus (USB) USB connection. Such communication components  may comprise a wired connection (connecting to a network through a physical cord, cable, or wire) or a wireless connection (communicating wirelessly with a networking device, such as through visible light, infrared, or one or more radiofrequencies.","The computing device  may include one or more input components , such as keyboard, mouse, pen, voice input device, touch input device, infrared cameras, or video input devices, and\/or one or more output components , such as one or more displays, speakers, and printers. The input components  and\/or output components  may be connected to the computing device  via a wired connection, a wireless connection, or any combination thereof. In one embodiment, an input component  or an output component  from another computing device may be used as input components  and\/or output components  for the computing device .","The components of the computing device  may be connected by various interconnects, such as a bus. Such interconnects may include a Peripheral Component Interconnect (PCI), such as PCI Express, a Universal Serial Bus (USB), firewire (IEEE 1394), an optical bus structure, and the like. In another embodiment, components of the computing device  may be interconnected by a network. For example, the memory component  may be comprised of multiple physical memory units located in different physical locations interconnected by a network.","Those skilled in the art will realize that storage devices utilized to store computer readable instructions may be distributed across a network. For example, a computing device  accessible via a network  may store computer readable instructions to implement one or more embodiments provided herein. The computing device  may access the computing device  and download a part or all of the computer readable instructions for execution. Alternatively, the computing device  may download pieces of the computer readable instructions, as needed, or some instructions may be executed at the computing device  and some at computing device .","F. Usage of Terms","As used in this application, the terms \u201ccomponent,\u201d \u201cmodule,\u201d \u201csystem\u201d, \u201cinterface\u201d, and the like are generally intended to refer to a computer-related entity, either hardware, a combination of hardware and software, software, or software in execution. For example, a component may be, but is not limited to being, a process running on a processor, a processor, an object, an executable, a thread of execution, a program, and\/or a computer. By way of illustration, both an application running on a controller and the controller can be a component. One or more components may reside within a process and\/or thread of execution and a component may be localized on one computer and\/or distributed between two or more computers.","Furthermore, the claimed subject matter may be implemented as a method, apparatus, or article of manufacture using standard programming and\/or engineering techniques to produce software, firmware, hardware, or any combination thereof to control a computer to implement the disclosed subject matter. The term \u201carticle of manufacture\u201d as used herein is intended to encompass a computer program accessible from any computer-readable device, carrier, or media. Of course, those skilled in the art will recognize many modifications may be made to this configuration without departing from the scope or spirit of the claimed subject matter.","Various operations of embodiments are provided herein. In one embodiment, one or more of the operations described may constitute computer readable instructions stored on one or more computer readable media, which if executed by a computing device, will cause the computing device to perform the operations described. The order in which some or all of the operations are described should not be construed as to imply that these operations are necessarily order dependent. Alternative ordering will be appreciated by one skilled in the art having the benefit of this description. Further, it will be understood that not all operations are necessarily present in each embodiment provided herein.","Moreover, the word \u201cexemplary\u201d is used herein to mean serving as an example, instance, or illustration. Any aspect or design described herein as \u201cexemplary\u201d is not necessarily to be construed as advantageous over other aspects or designs. Rather, use of the word exemplary is intended to present concepts in a concrete fashion. As used in this application, the term \u201cor\u201d is intended to mean an inclusive \u201cor\u201d rather than an exclusive \u201cor\u201d. That is, unless specified otherwise, or clear from context, \u201cX employs A or B\u201d is intended to mean any of the natural inclusive permutations. That is, if X employs A; X employs B; or X employs both A and B, then \u201cX employs A or B\u201d is satisfied under any of the foregoing instances. In addition, the articles \u201ca\u201d and \u201can\u201d as used in this application and the appended claims may generally be construed to mean \u201cone or more\u201d unless specified otherwise or clear from context to be directed to a singular form.","Also, although the disclosure has been shown and described with respect to one or more implementations, equivalent alterations and modifications will occur to others skilled in the art based upon a reading and understanding of this specification and the annexed drawings. The disclosure includes all such modifications and alterations and is limited only by the scope of the following claims. In particular regard to the various functions performed by the above described components (e.g., elements, resources, etc.), the terms used to describe such components are intended to correspond, unless otherwise indicated, to any component which performs the specified function of the described component (e.g., that is functionally equivalent), even though not structurally equivalent to the disclosed structure which performs the function in the herein illustrated exemplary implementations of the disclosure. In addition, while a particular feature of the disclosure may have been disclosed with respect to only one of several implementations, such feature may be combined with one or more other features of the other implementations as may be desired and advantageous for any given or particular application. Furthermore, to the extent that the terms \u201cincludes\u201d, \u201chaving\u201d, \u201chas\u201d, \u201cwith\u201d, or variants thereof are used in either the detailed description or the claims, such terms are intended to be inclusive in a manner similar to the term \u201ccomprising.\u201d"],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"DESCRIPTION OF THE DRAWINGS","p":[{"@attributes":{"id":"p-0009","num":"0008"},"figref":"FIG. 1"},{"@attributes":{"id":"p-0010","num":"0009"},"figref":"FIG. 2","b":"5"},{"@attributes":{"id":"p-0011","num":"0010"},"figref":"FIG. 3"},{"@attributes":{"id":"p-0012","num":"0011"},"figref":"FIG. 4"},{"@attributes":{"id":"p-0013","num":"0012"},"figref":"FIG. 5"},{"@attributes":{"id":"p-0014","num":"0013"},"figref":"FIG. 6"},{"@attributes":{"id":"p-0015","num":"0014"},"figref":"FIG. 7"},{"@attributes":{"id":"p-0016","num":"0015"},"figref":"FIG. 8"},{"@attributes":{"id":"p-0017","num":"0016"},"figref":"FIG. 9"},{"@attributes":{"id":"p-0018","num":"0017"},"figref":"FIG. 10"},{"@attributes":{"id":"p-0019","num":"0018"},"figref":"FIG. 11"}]},"DETDESC":[{},{}]}
