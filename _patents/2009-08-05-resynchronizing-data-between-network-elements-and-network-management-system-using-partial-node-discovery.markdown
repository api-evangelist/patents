---
title: Re-synchronizing data between network elements and network management system using partial node discovery
abstract: An apparatus and method for improving network efficiency for data transfer utilizing partial node discovery a during system recovery are disclosed. Upon retrieving a saved last sequence number associated with a network element (“NE”) from a database in a network management system (“NMS”), a process of the partial node discovery obtains a current last sequence number associated with the NE from the NE. After identifying missing sequence numbers associated with the NE, sequence events associated with the NE in the database are updated in accordance with the missing sequence numbers.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08275869&OS=08275869&RS=08275869
owner: Tellabs Operations, Inc.
number: 08275869
owner_city: Naperville
owner_country: US
publication_date: 20090805
---

{"@attributes":{"id":"description"},"BRFSUM":[{},{}],"heading":["FIELD","BACKGROUND","SUMMARY","DETAILED DESCRIPTION"],"p":["The exemplary embodiment(s) of the present invention relates to network systems. More specifically, the exemplary embodiment(s) of the present invention relates to information transfer between network device and management system.","A high-speed network environment typically includes network devices such as routers and switches used for facilitating delivery of information packets and\/or data traffic from source devices to destination devices via communication networks such as IP and\/or packet-based networks. Information pertaining to the transfer of data packet(s) and\/or frame(s) through the network(s) is usually embedded within the packet and\/or frame itself. Each packet, for instance, traveling through multiple nodes via one or more communication networks such as Internet and\/or Ethernet can typically be handled independently from other packets in a packet stream or traffic. Each node which may include routing, switching, and\/or bridging engines processes incoming packet(s) or frame(s) and determines where the packet(s) or frame(s) should be forwarded.","A typical modern communications network usually includes various network devices such as network elements (\u201cNEs\u201d) as well as Network Management systems (\u201cNMSs\u201d). An NE, for instance, is a managed logical entity including one or more physical devices. An NMS, on the other hand, is a managing logic entity capable of managing one or more NEs via a network management protocol, for example, simple network management protocol (\u201cSNMP\u201d).","In order to establish a high-speed computing network, NMS of a network is typically required to identify and\/or initialize each and every attached NE via a network protocol such as a process of node discovery. When an NMS discovers one or more NEs, a large amount of data relating to the discovery information including various circuit data and node status need to be transferred from the NE to the NMS. For example, to obtain circuit data, NMS typically has to send large number of SNMP bulk requests, and subsequently, receives large number of independent responses back from each NE.","A problem associated with a conventional NMS is that a process of full node discovery is required when an NMS is restarted or recovered wherein a full node discovery is typically time consuming. Depending on the number of NEs attached, a full node discovery for a typical NMS can take hours to complete. High volume of request-response management transactions of a full node discovery can slow down and\/or clog network management traffic, and consequently, degrade overall network performance.","An apparatus and method improve the efficiency of data transfer utilizing partial node discovery during a system recovery. Upon retrieving a saved last sequence number associated with a network element (\u201cNE\u201d) from a database in a network management system (\u201cNMS\u201d), a process of the partial node discovery obtains a current last sequence number associated with the NE from the NE. After identifying missing sequence numbers associated with the NE, sequence events associated with the NE in the database are updated in accordance with the missing sequence numbers.","Additional features and benefits of the exemplary embodiment(s) of the present invention will become apparent from the detailed description, figures and claims set forth below.","Exemplary embodiment(s) of the present invention is described herein in the context of a method, device, and apparatus of enhancing network performance using a partial node discovery during a system recovery.","Those of ordinary skills in the art will realize that the following detailed description of the exemplary embodiment(s) is illustrative only and is not intended to be in any way limiting. Other embodiments will readily suggest themselves to such skilled persons having the benefit of this disclosure. Reference will now be made in detail to implementations of the exemplary embodiment(s) as illustrated in the accompanying drawings. The same reference indicators will be used throughout the drawings and description to refer to the same or like parts.","In the interest of clarity, not all of the routine features of the implementations described herein are shown and described. It will, of course, be understood that in the development of any such actual implementation, numerous implementation-specific decisions may be made in order to achieve the developer's specific goals, such as compliance with application- and business-related constraints, and that these specific goals will vary from one implementation to another and from one developer to another. It, however, will be understood that such a development effort might be complex and time-consuming, but would nevertheless be a routine undertaking of engineering for those of ordinary skills in the art having the benefit of embodiment(s) of this disclosure.","Various embodiments of the present invention illustrated in the drawings may not be drawn to scale. Rather, the dimensions of the various features may be expanded or reduced for clarity. In addition, some of the drawings may be simplified for clarity. Thus, the drawings may not depict all of the components of a given apparatus (e.g., device) or method.","Unless otherwise defined, all terms (including technical and scientific terms) used herein have the same meaning as commonly understood by one of ordinary skills in the art to which the exemplary embodiment(s) belongs. It will be further understood that terms, such as those defined in commonly used dictionaries, should be interpreted as having a meaning that is consistent with their meaning in the context of the relevant art and this exemplary embodiment(s) of the disclosure unless otherwise defined.","As used herein, the singular forms of article \u201ca\u201d, \u201can\u201d and \u201cthe\u201d are intended to include the plural forms as well, unless the context clearly indicates otherwise. Also, the terms \u201ccomprises\u201d and\/or \u201ccomprising,\u201d when used in this specification, specify the presence of stated features, integers, steps, operations, elements, and\/or components, but do not preclude the presence or addition of one or more other features, integers, steps, operations, elements, components, and\/or groups thereof. The term \u201cand\/or\u201d includes any and all combinations of one or more of the associated listed items","A process of partial node discovery can improve network efficiency of data transfer between a network management system (\u201cNMS\u201d) and network elements (\u201cNEs\u201d) during a system recovery. Upon retrieving a saved last sequence number associated with an NE from a database in an NMS, a process of the partial node discovery obtains a current last sequence number associated with the NE from the NE. After identifying missing sequence numbers associated with the NE, sequence events associated with the NE in the database are updated in accordance with the missing sequence numbers.",{"@attributes":{"id":"p-0022","num":"0021"},"figref":"FIG. 1","b":["100","100","102","104","106","110","108","100"]},"NMS  further includes a server , a northbound interface (\u201cNBI\u201d) , an NMS database (\u201cDB\u201d) , a partial discovery module , data storage , and southbound interface (\u201cSBI\u201d) -. NMS  includes various hardware devices and software agents\/modules to monitor and manage various attached NEs. The term \u201cNMS\u201d is also known as \u201celement management system,\u201d \u201celement management server,\u201d \u201cnetwork management station,\u201d \u201cnetwork management console,\u201d \u201cnetwork control system,\u201d \u201cnetwork manager,\u201d et cetera. Partial node discovery module , in one embodiment, includes a controller or agent capable of activating and managing the partial node discovery during NMS , for example, is in a recovery phase.","Server or NMS server , in one embodiment, includes a fault manager , a managed object module , a discovery manager , a configuration manager , a provisioning manager , and a security manager . While provisioning manager  facilitates network services such as circuit connections, security manager  provides network security including, but not limited to, user authentications. For example, server  is operable to interface with NEs  via SBI to collect FCAPS (Fault, Configuration, Accounting, Performance, and Security) information.","In one example, SBI is coupled to NEs  via a packet-based network  capable of facilitating network communications between NEs  and NMS . Depending on the nature of the data, some are retrieved during discovery time (like inventory data) and kept synchronized during the lifetime of the server. Other types of data are retrieved on-demand such as statistics. It should be noted that the concept of functionality relating to NMS  would not alter if server  is replaced by other types of digital processing system, such as a personal computer, a work station, a mainframe computer, a microcontroller, and the like.","NMS server  is also capable of interfacing with OSS  to facilitate monitoring capabilities, analyzing capacities, and\/or billing purpose. For example, data can be forwarded between various components with different network control protocols and\/or formats, such as simple network management protocol (\u201cSNMP\u201d) or common object request broker architecture (\u201cCORBA\u201d) for NBI. Alternatively, data can also be formatted in accordance with extensible markup language (\u201cXML\u201d) for NBI.","NMS  also includes a data collection module (\u201cDCM\u201d)  which runs as a separate application collecting performance and\/or billing related data via server . The data is collected in files with the format of ASCII and\/or binary and can be analyzed via Java\u2122 API\u2122. Data stored in DB  can be accessed by client, NBI, or APIs (Application Programming Interfaces). Report APIs is a set of Java\u2122 API that can be used to query the database wherein the data output can be formed with various formats or files.","NBI , in one embodiment, includes a GUI component, an XML component, a CORBA component, and an SNMP component. While the GUI component provides GUI object model to a client or an administrator via block , the XML, CORBA, and SNMP components can communicate with OSS  independently. OSS , in one example, is capable of providing service management, flow-thru provisioning, customer network management, reporting, and\/or OSS integration. The GUI component may include multiple modules, such as topology, services, equipment, performance, security, help, et cetera. For example, the GUI component provides various user interfaces such as viewing, statistic data, login, access management, and\/or help page management.","Client tool  can be a third (3) party tool including a traffic unit , a reporting unit , a billing unit , a data management , and a performance management . Client tool  coupled with NMS  is capable of obtaining various data from NMS  such as usage data and billing data and subsequently processing the data for various purposes. For example, billing unit  mediates the billing data and forwards the mediated billing data, for example, to reporting unit  for invoicing the end users.","During an operation, server  initiates a recovery signal after it is restarted from a disabled condition, partial node discover module  initiates a process of re-synchronizing the data between NEs and NMS. It should be noted that the recovery signal will be initiated if a full node discovery was successfully completed before server  went down. The partial node discover, which is also known as the Smart Discovery, reduces discovery time and resources to achieve the same result as synchronized data between the NE and the NMS. An advantage of using the Smart Discovery or partial node discovery is to reduce full node discoveries while the data between the NEs and NMS is still synchronized.",{"@attributes":{"id":"p-0031","num":"0030"},"figref":"FIG. 2","b":["200","202","203","204","204","206","208","222","226","210","214","202","203","206","208","200"]},"NEs -, also known as managed devices, are hardware devices which may include routers, connections, switches, bridges, computers, terminal servers, and\/or a combination of routers, connections, switches, bridges, computers, and\/or terminal servers connected in network environment . While each NE may be connected to its neighboring NE(s), the NE is generally connected to at least one NMS. For example, NE  is coupled to both NMSs - via links - and may be managed by one or both NMSs. The NE can also be considered as a facility or equipment used to facilitate provisioning of telecommunications services. In one example, an NE further includes an agent  which can be a software module(s) responsible for network management transactions.","NMS  is a computer, workstation, a server, and\/or a cluster of computers capable of executing various network management applications. Various NEs and nodes are constantly being managed and monitored by a NMS(s) in a managed network environment. In each managed environment, at least one NMS should be present. Depending on the applications, multiple NMSs may be used to manage and\/or monitor one or more NEs in a network. A network can either be a circuit-based network or a packet-based network.","NMSs - are coupled with NEs - via links - wherein links - can be wires, cables, coax connections, wireless connections, and the like. For example, NMS  may issue a message  using a management protocol. NE , subsequently, sends a response  to reply to message . The network protocol can be the Simple Network Management Protocol (\u201cSNMP\u201d). It should be noted that depending on the applications, a different type of network protocol may be used in place of SNMP.","SNMP is a network managing and surveillance protocol used in network management systems for monitoring NEs and\/or network devices attached to the network environment. For example, SNMP includes an application layer protocol which is able to process management data to control various managed systems or NEs. NMS employs SNMP to manage a number of attached NEs and\/or managed systems. Each attached NE or managed system is configured to report status and\/or information to and from at least one managing system or NMS.","For a circuit switching network, a link or a channel can be established between multiple nodes and\/or terminals to facilitate network communication. It should be noted that a link or a circuit or a channel acts as an electrical circuit physically connecting two nodes, two NEs, or two network devices. For example, during a network discovery process, every NE as well as network circuit needs to be discovered and\/or initialized by NMS or NMSs before each NE can access the network. Network discovery process can take time and resources for each NMS to complete a network configuration and\/or a network discovery process. In another example, a network element discovery may be required when a primary router switches over to a backup router or vice verse.","During an operation of partial node discovery, NMS , for instance, issues a get-message  of missing sequence number(s) (\u201cSN\u201d) to NE  via connection  and NE  subsequently sends a reply-message  carrying the missing SN to NMS  via connection .","An advantage of using partial node discovery is to reduce full node discoveries for system recoveries whereby the overall network performance can be improved. Note that the system recovery indicates a system or server or NMS is restarted after it is disabled or down. It should be further noted that in order for the partial node discovery to be effective, the NMS should complete its full node discovery before it is disabled. Since the NMS persists the information and\/or data obtained during the previous full node discovery, the NMS only needs to reload missing information (or sequence events) from NEs after it is restarted.",{"@attributes":{"id":"p-0039","num":"0038"},"figref":"FIG. 3","b":["300","300","302","308","304","306","304","306","302","350","356","308","300"]},"NMS  further includes an initiating recovery module , a fetch module , a database , a comparator , and a synch module . In one embodiment, NMS  includes a get-SN module  and a partial discovery module , wherein get-SN module  and partial discovery module  can be integrated into the same device. In one embodiment, get-SN module  and partial discovery module  includes transmitters (\u201cTXs\u201d) and receivers (\u201cRVs\u201d). Note that TXs and RVs are used to transmit and\/or receive information between NMS  and NEs -.","Database  is a storage location containing various NE related objects - and a selector . For example, object  records a last sequence number (\u201cLSN\u201d) associated to NE_  and object  stores a LSN relating to NE_, not shown in . Dotted-circle  pointed by an arrow is an exemplary storage layout storing various objects -. In one embodiment, database  saves LSNs for all attached and\/or connected network devices or NEs. In one example, a management server or NMS maintains the last sequence number from each NE. During sync-up time, NMS compares the last sequence number read from the NE and the last sequence number stored in the management system to determine whether subsequent event(s) has occurred. It should be noted that database  can include additional information.","NE  includes an event history table , a selector , and a pair of TX and RV, wherein the TX and RV are used to communicate between NMS  and NE . Event history table  records a sequence of events or alarms used to track events over a period of time. Event, for example, includes node creations, logins, circuit creations, enabling, disabling, and the like. Depending on the applications, event history table  could have thousands entries and it is being continuously updated. In one embodiment, event history table  is dynamically and instantaneously updated as soon as an event occurs. Alternatively, event history table  is updated on a periodic fixed time frame. It should be noted that while an NMS is disabled or down, some attached NEs continue to operate and continue to update its event history table.","During an NMS recovery process or sync-up (or re-synchronizing) time, partial node discovery module  is able to synchronize the data between NMS and NEs by loading the missing sequence events instead of reloading the entire event history table. Since database  persists the LSNs for attached NEs, loading the missing sequence events from event history tables  of NEs can improve loading efficiency. Transferring a few hundreds event entries instead of transferring a few thousand event entries for every NE or node can enhance overall network performance. Upon detecting the missing sequence number, NMS or management system processes each missing number one at a time until the event status are synchronized. For example, when the management system sends a resent trap (identified by sequence #) request to NE, NE subsequently sends the trap requested to the management system. Depending on the content of an event, the trap is processed by, for example, updating corresponding data, discarding the event, and so on.","Initiating recovery module , in one embodiment, receives a restart or recovery signal from a processor, not shown in . Upon verifying that a full node discovery has been completed before NMS  is disabled, initiating recovery module  generates a re-synchronizing signal and forwards the re-synchronizing signal to fetch module . After acknowledging the re-synchronizing signal, fetch module  generates a load command and a fetch command, wherein the fetch command obtains the saved last sequence number (\u201cLSN\u201d) from object  of database  for NE_ via connection . The load command loads the current LSN from event history table  from NE_  via connections  and . Get-SN  sends a get-message requesting the current LSN to NE_  via TX and subsequently receives reply message carrying the current LSN from NE  via RV. Note that the current LSN is also known as the last-send event sequence number and it indicates the latest event occurred for the particular NE.","Upon arrival of the current LSN from connection  and the saved LSN from selector  of database  via connection , comparator  subtracts or compares the current LSN with the saved LSN and generates a missing SN . Synch module  analyzes missing SN  and activates partial node discovery process. During the recovery process, partial discovery module  is capable of loading single missing event or multiple missing sequence events from NE  via network . Upon receipt of the missing sequence events via RV of partial discovery module , object , for example, is updated in view of the missing sequence events through selector  via connection . It should be noted that NMS  is capable of conducting multiple partial node discoveries simultaneously to obtain missing sequence events from multiple NEs.","In one embodiment, a network system includes an NE and an NMS, wherein the NE stores each sequence number and\/or event indicating network activities in an event history table. During a process of partial node discovery, comparator module  compares a saved last sequence number and a current last sequence number. The synchronizing module subsequently synchronizes the sequence numbers in the database of the NMS in response to the result of comparison.","The exemplary aspect of the present invention includes various processing steps, which will be described below. The steps of the aspect may be embodied in machine or computer executable instructions. The instructions can be used to cause a general purpose or special purpose system, which is programmed with the instructions, to perform the steps of the exemplary aspect of the present invention. Alternatively, the steps of the exemplary aspect of the present invention may be performed by specific hardware components that contain hard-wired logic for performing the steps, or by any combination of programmed computer components and custom hardware components.",{"@attributes":{"id":"p-0048","num":"0047"},"figref":"FIG. 4","b":["400","402"]},"At block , in addition to activate a fault manager, registering a trap client and discovering active alarms are also performed and processed. After reading the current last sequence number (\u201cCLSN\u201d), which is also known as last-send event sequence number from an NE at block , comparator compares SLSN and CLSN at block . If SLSN minus CLSN is equal or greater than zero, the process proceeds to activate a status check at block  because the node or NE could have been rebooted. Note that if a node or NE is rebooted during the recovery period, full node discovery for the node may be necessary. If, however, SLSN minus CLSN is less than zero, the process moves to block .","At block , the process reads the entries of the event history table from the NE using SLSN as index to synchronize the data or events between NMS and NE(s). After filtering and subscribing event parameters or indications at block , the process sends a reply message for the next event request while the SN is added to an event list at block .","At block , the process checks periodically to determine whether an event has arrived or received. If the event has not been received, maximum retry count is examined at block . If the maximum retry count is reached, a full node discovery is activated at block . Otherwise, reply message for the next event request is resent at block .","Once an event is received, the process loops back to block  if more event(s) to reply message is expected at block . Otherwise, the reply message request is finished at block . At block , the process evaluates the sequence number against last-send event sequence number from NE. The event is stored at block  if the sequence number is greater than last-send event sequence number.","The sequence number and\/or event are discarded at block , if the sequence number is a duplicated sequence number at block . Otherwise, the sequence event is marked, received, and the information relating to the sequence event is persistent in an event table at block . After processing the event at block , the process waits for the next event at block  if the event list is not empty. If the event list is empty at block , the process ends.",{"@attributes":{"id":"p-0054","num":"0053"},"figref":"FIG. 5","b":["500","502"]},"At block , a current last sequence number associated with the first NE is obtained from the first NE. The process, for instance, is capable of issuing a network command indicating to get a last sequence number associated with the first NE from the first NE at the present time. Upon reading the last-send event sequence number from an entry of the event history table at the first NE, the process forwards the last-send event sequence number from the first NE to the NMS.","At block , the process identifies the missing sequence numbers associated with the first NE in response to the saved last sequence number and the current last sequence number. For example, upon comparing the saved last sequence number with the current last sequence number, the process determines a difference between the saved last sequence number and the current last sequence number, wherein the difference is the missing sequence events.","At block , sequence numbers associated with the first NE in the database is synchronized in accordance with the missing sequence numbers. Upon obtaining the missing sequence numbers from the first NE to the NMS, the process loads the missing sequence events from the first NE to the NMS in bulk at a time. In one embodiment, after retrieving a saved last sequence number associated with a second NE from the database in a NMS, the process obtains a current last sequence number associated with the second NE from the second NE. Once the missing sequence numbers associated with the second NE is identified in response to the saved last sequence number and the current last sequence number, the process synchronizes sequence numbers associated with the second NE in the database in accordance with the missing sequence numbers.","While particular embodiments of the present invention have been shown and described, it will be obvious to those of skills in the art that based upon the teachings herein, changes and modifications may be made without departing from this exemplary embodiment(s) of the present invention and its broader aspects. Therefore, the appended claims are intended to encompass within their scope all such changes and modifications as are within the true spirit and scope of this exemplary embodiment(s) of the present invention."],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"BRIEF DESCRIPTION OF THE DRAWINGS","p":["The exemplary embodiment(s) of the present invention will be understood more fully from the detailed description given below and from the accompanying drawings of various embodiments of the invention, which, however, should not be taken to limit the invention to the specific embodiments, but are for explanation and understanding only.",{"@attributes":{"id":"p-0010","num":"0009"},"figref":"FIG. 1"},{"@attributes":{"id":"p-0011","num":"0010"},"figref":"FIG. 2"},{"@attributes":{"id":"p-0012","num":"0011"},"figref":"FIG. 3"},{"@attributes":{"id":"p-0013","num":"0012"},"figref":"FIG. 4"},{"@attributes":{"id":"p-0014","num":"0013"},"figref":"FIG. 5"}]},"DETDESC":[{},{}]}
