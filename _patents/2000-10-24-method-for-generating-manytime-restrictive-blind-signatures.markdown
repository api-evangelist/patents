---
title: Method for generating many-time restrictive blind signatures
abstract: A multiple use ticket generating method is disclosed which enables a recipient to obtain signatures for arbitrarily many (correctly formed) messages after only one interaction with the signer. The method provides a blind signature in a ticket, the signature having a multiple use with a built-in expiration. Then, the method develops a blinding value for the signature in a reproducible computation using a seed key substantially known only to the issuer of the ticket. The method implements a new class of signature schemes almost as efficiently as do previous one-time restrictive blind signature methods.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=06959388&OS=06959388&RS=06959388
owner: AT&T Corp.
number: 06959388
owner_city: Bedminster
owner_country: US
publication_date: 20001024
---

{"@attributes":{"id":"description"},"RELAPP":[{},{}],"heading":["RELATED APPLICATIONS","BACKGROUND OF THE INVENTION","SUMMARY OF THE INVENTION","DESCRIPTION OF THE PREFERRED EMBODIMENTS","REFERENCES"],"p":["This application is based on U.S. Provisional Ser. No. 60\/161,062, filed Oct. 25, 1999.","1. Field of the Invention","The invention disclosed broadly relates to cryptography and more particularly relates to digital signature methods.","In contrast to conventional digital signature schemes, blind signature schemes allow the recipient to obtain signatures for messages that the signer does not learn. If the recipient can get only one signed message from each execution of the signing operation by the signer, then the blind signature scheme is called one-time, otherwise it is called many-time. Many-time blind signatures have been used to build untraceable tickets, called credentials. Such tickets can be issued by one organization and verified by another. Each customer uses different pseudonyms with each organization and a ticket is simply a blind signature for a customer pseudonym. The blinding property allows one to use different pseudonyms for issuing and showing a ticket. Even if all organizations collude, they cannot trace which tickets belong to which customers. One-time blind signatures have been used to build practical offline and online untraceable electronic cash schemes, where the issuing organizations are banks, the recipients are merchants and the tickets can be used only once. Most electronic cash schemes based on blind signatures use the one-time form, mainly to avoid the problem of multiple copies of the same electronic coin.","For offline untraceable electronic cash, double spending of coins should be detectable after the fact, so that double spenders are identifiable if and only if they use a coin more than once. This problem has been addressed by using restrictive one-time blind signatures. The customer's identity is embedded into her pseudonyms in such a way that it is revealed if and only if she double spends. A general blind signature scheme would allow a customer to also obtain coins for pseudonyms of other customers or for pseudonyms that are not assigned to anyone. In contrast, restrictive blind signature schemes guarantee that customers form their pseudonyms in a way that preserves the customer's identity, which the signer has encoded into each issued pseudonym.","A related application area is untraceable membership cards, which can be stored in palmtops, smartcards, etc. Owners may use their membership cards online or offline, arbitrarily often, and in an untraceable way, i.e., several uses of the same card cannot be linked by the respective verifiers. However, issuers of membership cards require that membership cards can be used only by their owners, not by other individuals, even if the owners wish to lend their membership cards away. Purely cryptographic solutions to this problem cannot exist because whether a membership card is actually used by its owner or someone else, is not distinguishable by cryptographic means. It has been suggested to use a wallet-with-observer architecture, where every user has a personal device (wallet) that is in part controlled by an implanted tamper resistant security module (observer). The observers can be equipped with a biometric sensor which is a sufficiently powerful hardware basis for the problem at hand. The prior art relies heavily on the tamper resistance of observers, because if an attacker breaks his observer he can not only lend his own membership cards to other individuals, but he can also forge new membership cards. Another approach relies on the tamper resistance of only observers with respect to transferability of membership cards. Attackers who break their observers can at most pool all the membership cards they already have, but cannot produce new ones. The approach includes a \u201ccascade\u201d signature scheme which has not been implemented.","What is needed in the prior art is a restrictive blind signature scheme that allows a recipient to obtain signatures for arbitrarily many (correctly formed) messages after only one interaction with the signer.","A multiple use ticket generating method is disclosed which enables a recipient to obtain signatures for arbitrarily many (correctly formed) messages after only one interaction with the signer. The method provides a blind signature in a ticket, the signature having a multiple use with a built-in expiration. Then, the method develops a blinding value for the signature in a reproducible computation using a seed key substantially known only to the issuer of the ticket. The method implements a new class of man-time restrictive blind signature schemes almost as efficiently as do previous one-time restrictive blind signature methods.","The resulting ticket can be in the form of an electronic personal ticket, such as a season ticket for sporting events. Other forms for the ticket can include a personal license, such as a personal driver's license. The ticket has the property of being untraceable and has the advantage that the signature does not require an interactive signing protocol.","An efficient implementation of a many-time restrictive blind signature scheme is disclosed. It uses no hash function, is about as efficient as previous one-time restrictive blind signature methods, and its security rests on a similar assumption as that of the ElGamal signature scheme. Applications for the new signature scheme are untraceable offline personal tickets, e.g., monthly season tickets, driver's licenses, or coupons that can be used multiple times until they expire. A computer system for carrying out the method of the invention is a standard general purpose data processor that includes a random access memory to store the program embodiment of the invention and a central processor to execute the instructions in the program embodiment. The computer system is connected to a network to generate and circulate untraceable tickets, licenses, or coupons that can be used multiple times until they expire.","Definitions","A definition follows of many-time restrictive blind signatures. The formalization of restrictiveness follows ideas of Brands [B93], Franklin and Yung [FY93] and Pfitzmann and Sadeghi [PS99].","Definition 1 (Many-time Restrictive Blind Signature).","A many-time restrictive blind signature scheme consists of a security parameter k\u2208IN, a signing key space X, a verifying key space Y, a message space M, a signature space \u03a3, a blinder space \u03a9, a witness space W, and a relation make \u2282M\u00d7W. Also included is an equivalence relation on W (equivalent witnesses v, w\u2208W are denoted v\u2261w), more precisely, there are families of all these domains indexed by the security parameter k. If (w, m) \u2208 make then we say that witness w makes message m. At system setup time, a particular security parameter is chosen and from then on, only one instance of each domain is used. Also included are two probabilistic protocol algorithms gen, sign, a probabilistic protocol trans of two participants Bob and Verifier, and a deterministic algorithm verify, which are declared as follows:\n\n(x, y)\u2190gen() \u03c3\u2190sign(x, m) (m\u2032, \u03c3\u2032)\u2190trans(y, m, \u03c3, w) acc\u2190verify(y, m, \u03c3).\n","All of them are efficiently computable. Given a security parameter k, the key generating algorithm gen returns a pair of a private signing key x\u2208X and a public verification key y\u2208Y. The algorithm sign takes as input a signing key x\u2208X and a message m\u2208M. It returns a signature \u03c3\u2208\u03a3E The protocol trans takes as input for both Bob and the Verifier a verification key y, and only for Bob a message m, a signature \u03c3 and a blinder \u03c9. After the protocol, both Bob and the Verifier return the same message m\u2032 and signature \u03c3\u2032. The algorithm verify takes as input a public key y, a message m\u2208M and a signature \u03c3\u2208\u03a3 and returns a Boolean value acc. If verify (y, m, \u03c3) returns True then the signature \u03c3 is called valid for m with respect to public key y, or the pair (m, \u03c3) is valid for y.","EFFECTIVENESS: For every security parameter k, every key pair (x, y)\u2190gen(k), and every message m\u2208M the algorithm sign (x, m) produces a valid signature \u03c3 for m. For all inputs as above, every blinder \u03c9\u2208\u03a9 and every signature \u03c3\u2208\u03a3 valid for m the algorithm trans (y, m, \u03c3, \u03c9) returns a valid signature \u03c3\u2032 for m\u2032.","RESTRICTIVENESS with respect to make and \u2261: Every polynomial-time attacker who (i) obtains valid signatures \u03c3(i=0 . . . . n) from the signer for respective messages mof his (adaptive) choice. The choice of each message he asks to be signed may depend on all messages previously chosen and the corresponding responses by the signer. The attacker also (ii) comes up with a new message m\u2032 and signature \u03c3\u2032 and (iii) delivers n+1 witnesses \u03c9, \u03c9, . . . , \u03c9, \u03c9\u2032 has only a negligible chance of achieving the following event: The signature \u03c3\u2032 as valid for m\u2032, the witnesses \u03c9, \u03c9\u2032 each match their messages m, m\u2032 and the witness \u03c9\u2032 is not equivalent to any of the witnesses \u03c9if any.","UNLINKABILITY: Let (m, \u03c3), (m\u2032, \u03c3\u2032) be two pairs valid with respect toy. Then for each internal choice rof the Verifier in trans, there is a unique blinder \u03c9\u2208\u03a9 and a unique internal choice, (i.e., a sequence of random bits used by a probabilistic algorithm) rfor Bob in algorithm trans, such that the execution of trans (y, m, \u03c3, \u03c9) with internal choices r, rreturns (m\u2032, \u03c3\u2032).","Note that previous one-time blind signature schemes use an interactive signing protocol from which the recipient gets a message and signature that he can later show to a verifier without interaction. Many-time blind schemes use a non-interactive signing protocol from which the recipient gets a message and signature that he can later transform and thereby show to many verifiers.","3 The Rust Signature Scheme","The proposed many-time blind signature scheme is referred to herien as \u201cRUST\u201d. The standard discrete log setting is adopted. Let p be a large prime, q be a large prime divisor of p\u22121. Typically, p and q will be chosen about 1024 bit and 160 bit long, respectively [O99]. Then Z* has a unique subgroup Gof order q and since Z* is cyclic, so is G. Let g, gbe generators of Gthat are chosen uniformly at random.","The private and public key spaces are ZZand G, respectively. The message space is M=G*\\{1}, where G* is Gexcept all members that disappear modulo q. The signature space is \u03a3=G*\u00d7zz\u00d7ZZ*, the space of blinders is \u03a9=ZZ*, the witness space is W=ZZq, the making relation is\n\nmake={(,\u03c9)\u2208 mod \n\n","A signature(r, s, t)\u2208\u03a3(thus the name of the scheme)is valid for message m\u2208M with respect to public key y if the following holds:\n\nverify ()=mod \u2003\u2003(1)\n\nA pair (m, \u03c3) is called terminated if t=\u2212m mod q, otherwise it is called fresh.\n\n3.1 Producing Signatures\n","Let the generator g, and a key pair (x, y) be setup as above. A signature for a given message m\u2208M is constructed as shown in :","One chooses a, b \u2208ZZuniformly at random such that a+bm\u2260\u22121 (mod q) in step () and computes the signature component r in step (). If any of the values r, r\u2212mx or (a+bm) rmx disappears modulo q, then the execution needs to be repeated from step (). In step (), the remaining signature values s, t are computed.","3.2 Transforming Signatures","Given a verification key y and a blinder \u03c9\u2208\u03a9, a fresh pair (m, (r, s, t))\u2208M\u00d7\u03a3 of a message and a signature is transformed into another pair (m\u2032, (r\u2032, s\u2032, t\u2032)). The blinder \u03c9 is required such that m mod p\u22600 (mod q) (see ): In step () through () Bob forms the new message m\u2032 and the signature component r\u2032=mrgysuch that:\n\n","In detail, Bob chooses uniformly at random an auxiliary value \u03b1\u2208ZZq, and the Verifier chooses d\u2208ZZq (step ()). Then Bob computes the output message m\u2032=m mod p in step (). Bob further computes the auxiliary values (\u03b2, \u03b3) and the preliminary signature component r* in step (). After sending m\u2032, r* to the Verifier, he obtains in return the Verifier's choice d in order to compute the signature component r\u2032 in step (). So does the Verifier. Only in the case if d or r\u2032 disappears modulo q must the protocol be repeated from step (). Next, Bob computes the exponents a, b according to step () and the signature components s\u2032, t\u2032 according to step (). He finally sends the signature components s\u2032, t\u2032 to the Verifier.  illustrates transforming a signature.","Remark . The RUST signature scheme ensures that signers always produce fresh pairs of messages and signatures and that only fresh pairs can be transformed. Note that if t=\u2212m mod q some quotients in trans were undefined. However, transformed pairs are always terminated, so that a Verifier cannot transform a pair further. This feature of RUST is not implied by restrictiveness (Definition 1).","The protocol trans can be made non-interactive if one is willing to rely on the obscurity of some hash function H as in the standard Fiat-Shamir technique [FS87]: Instead of sending m\u2032, r* after step () and obtaining the Verifiers choice d in return, Bob can compute d=H(y, m\u2032, r*) after step () by himself. After step (), Bob then sends m\u2032, r*, s\u2032, t\u2032 to the Verifier. Finally, the Verifier checks in addition to the verification equation (1) whether r\u2032=(r*y)g.","The witness equivalence used for the RUST signature scheme is degenerate in the sense that any two witnesses are equivalent. This is no weakness of the RUST signature scheme, but allows producing and transforming signatures quite efficiently. Note that Brands suggests to use his one-time restrictive blind signature scheme for offline e-cash [B93] with the same degenerate witness equivalence (and function make). In offline e-cash, the price for the increased performance is computational instead of unconditional non-frameability. For many-time restrictive blind signatures, like the RUST scheme, signer identification by (more than one) signatures is no issue, and thus framing of signers is no issue either.","4. Main Result","In order to analyze the security of a proposed many-time restrictive blind signature scheme, refer to here as RUST, one needs the following two assumptions. These assumptions are not among the intensely investigated complexity theoretic assumptions like the discrete logarithm assumption [MOV97]. Nevertheless, they also underlie for example the ElGamal signature scheme and its derivatives without having been made explicit in previous work.","Assumption 1.","For some natural number n\u2208IN, let g(i\u2208[1, n]) be generators of G, and define the function \n\n\nthat takes arguments x=(x, x, . . . , x)\u2208ZZ|{(0, 0, . . . , 0)}. Then the function\n\nF(x) mod q\n\nis an implementation of a random oracle [BR93]. (Note the difference of the moduli p and q!)\n\nAssumption 2.\n","If at all, a polynomial-time attacker A can compute valid pairs of messages and signatures with respect to a given verification key y, but then only as follows:\n\n","A similar assumption has been used to reason about the security of ElGamal signatures [EG85], but those assumptions were left implicit.","Theorem 3. Under Assumptions A1 and A2, RUST is a Many-time Restrictive Blind Signature Scheme.",{"@attributes":{"id":"p-0035","num":"0000"},"ul":{"@attributes":{"id":"ul0006","list-style":"none"},"li":"Proof. Check effectiveness, restrictiveness and blindness in turn.\n\nEffectiveness of sign: Under Assumption A1, the probability to make a choice a, b\u2208ZZsuch that any of the values r, r\u2212mx or D\u2212(a+bm)r+mx disappears modulo q is negligible and so is the probability to repeat step () of algorithm sign. In order to verify algorithm sign (see ), insert its output into the right hand side of verification equation (1): \n\n\nThe signer produces fresh signatures because he chooses \n\n\naccording to the condition a\u2260bm+1 mod q in step () of . The signature components r and t do not disappear modulo q because of the loop condition in step ().\n"}},"Effectiveness of trans: The following verification is prepared by expressing Bob's signature components r\u2032 and s\u2032 in terms of Bobs input and his internal choices \u03b1, d and by using the definitions of \u03b2 and \u03b3 according to step () of : \n\n\nUnder Assumption A1, the probability of choosing \u03b1\u2208ZZ*, d\u2208ZZ*, such that r\u2032=0 mod q is negligible, and so is the probability of repeating after step (). Next, insert the output m\u2032, (r\u2032, s\u2032, t\u2032) of algorithm trans into the verification equation (1) and by inserting the expressions for m\u2032=m and r\u2032 according to equation (2): \n\n\nFor the final rewriting use the expression (3) for s\u2032. According to step () of , Bob produces terminated pairs because t\u2032=\u2212m\u2032. This guarantees t\u2032\u22600 mod q because m\u2032 is presumed not to disappear modulo q. The signature component r\u2032 does not disappear modulo q because of the loop condition in step ().\n","Restrictiveness: First consider private key related attacks. Consider a polynomial-time attacker who has obtained n\u2208IN valid pairs (m, (r, s, t)) of messages and signatures for i=1, . . . , n from the signer. The signer has chosen r=mgmod p, and has computed the signature components s, taccording to . The signature components rrelease no information about the choices a, bto a polynomial-time attacker, so we need to look only at sand t. According to , \n\n\nwhich reveals the signer's choices a. From the t, the attacker learns the following system () of n linear equations over ZZq in n+1 variables, namely b, x for i=1, . . . , n:\n\n()=() ()=.\u2003\u2003(4)\n\nThe values x and bare undetermined because t, m\u22600, and therefore valid signatures release no more information about x=logy to a polynomial-time attacker, than y itself.\n","Next, show that an attacker who has not received any valid RUST signature with respect to a public key y cannot feasibly fabricate a valid signature for any message on his own (Case 0). An attacker who has got valid signatures for one or more messages mis considered afterwards (Case 1).","Case 0: By contradiction to restrictiveness (Definition 1), assume an attacker who has no valid pairs of messages and signatures in the first place (n=0 in Definition 1), but succeeds to come up with a message m for which he has a witness \u03c9\u2208\u03a9 that makes m, i.e., m=g, and a valid signature \u03c3. (For lack of input pairs to trans, plain identifiers are used for the outputs, i.e., no primes.) According to Assumption A2, the attacker uses 3 parameters a, c, d\u2208ZZin order to build the signature component:\n\nr=mgy mod p\n","Because m must be chosen to be g, the only elements of Gan attacker might use successfully to build r are those occurring in the verification equation (1), namely m, g, y. Would he use any other independently chosen element h\u2208Gand succeed to find a valid signature, then the verification equation would reveal a representation of h with respect to m, g, y, which contradicts the discrete logarithm assumption.","Inserting the expression for r into the verification equation (1) yields:\n\n()(),\n\nwhich can be rewritten as:\n\n().\n","Since the bases g, y and gare chosen independently, the only feasible way for the attacker to solve (5) is by letting the exponents of g, y and gdisappear.","This leads to the following linear system (6) of 3 equations in 2 variables s and t, over ZZq:\n\n\u03c9=0\n\n\n\n+(+1)\u2003\u2003(6)\n","This system can be solvable only if the corresponding 3\u00d73 determinant disappears: \n\n","Since neither o nor m nor r may disappear modulo q, this condition (7) can be met only if (1+a\u2032+c\u2032m)+d\u2032r=0. Here, the factors m and r are determined only after co respective a\u2032, c\u2032, d\u2032 have been chosen, and by Assumption A1, neither m nor r can be predicted or coerced to any particular value. Hence the only way to let the determinant () disappear is to let 1+a\u2032+c\u2032m=d\u2032=0 (mod q). However, protocol trans ensures with overwhelming probability that a dishonest Bob ends up with a representation of r whose exponent d\u2032 of y is not disappearing regardless of how Bob chooses r*. Note that Bob must provide r* before the Verifier sends his d and forms the signature component r=(r*y)gin step ().","Case 1: Due to the degenerate equivalence\u2261of witnesses, i.e., any two witnesses are equivalent, restrictiveness is satisfied whenever the attacker has obtained at least one valid pair (m, \u03c3) and comes up with a new pair (m\u2032, \u03c3\u2032) and a witness making m\u2032. Restrictiveness requires no more, and thus nothing needs to be shown.","Blindness: Show that for each fresh valid pair (m, \u03c3), where t\u2260\u2212m (mod q), and each terminated valid pair (m\u2032, \u03c3\u2032), where t\u2032=\u2212m\u2032 (mod q), of messages and RUST signatures, and each choice d\u2208ZZ* of the verifier in trans, there is exactly one input \u03c9\u2208ZZ* and one value \u03b1\u2208ZZ* such that trans maps (m, \u03c3) to (m\u2032, \u03c3\u2032). (Note that the value r* of the verifier's view on Bob in trans is a one-to-one map of the other elements d, m\u2032, r\u2032 of his view, and thus from an information theoretic viewpoint, it suffices to consider d, m\u2032, \u03c3\u2032 as the verifier's view.) In the following, all steps refer to protocol trans in .","First show there is at most one pair (\u03b1, \u03c9): It is immediate from step () that the blinder \u03c9=logm\u2032 is uniquely determined. Furthermore, for each d\u2208ZZ* is obtained from steps (), () and () in turn the following expression for s\u2032: \n\n","Since all r, t, d, r\u2032, (m+t) are presumed not to disappear modulo q, the internal choice \u03b1 of Bob is uniquely determined as follows: \n\n","Next show that the uniquely determined pair (\u03b1, \u03c9) from above transforms a fresh valid pair (m, \u03c3) of message and signature into a terminated valid pair (m\u2032, \u03c3\u2032). Since (m, \u03c3)=(m, (r, s, t)) is presumed a fresh valid pair, we can rewrite the verification equation (1) for (m, (r, s, t)) as follows:\n\n, where (mod ).\u2003\u2003(9)\n\nFurthermore, the unique \u03b1 in equation (8) also determines a unique \u03b3 in step (), namely: \n\n","Next, evaluate r\u2032 according to step () by inserting rfrom equation (9), \u03b1 from equation (8), \u03b2=rt\/(m+t) from step () and \u03b3 from equation (10): \n\n","Finally, check that the values m\u2032, r\u2032, s\u2032, t\u2032 satisfy the verification equation (1) if r\u2032 is inserted from (11) and use t\u2032=\u2212m\u2032 mod q from step (): \n\n","This concludes the proof.","A restrictive blind signature scheme has been presented that allows a recipient to obtain signatures for arbitrarily many (correctly formed) messages after only one interaction with the signer. Signing, transforming and verifying costs two, six, and six full length modular exponentiations, respectively. For transforming and verifying, count the exponentiations of Bob and of the Verifier in trans, respectively. This compares to two, five and four modular exponentiations of the signer and recipient during the signing protocol and verification of the one-time restrictive blind signature protocol proposed by Chaum, Pedersen [CP92] and later by Brands [B93].","Various illustrative examples of the invention have been described in detail. In addition, however, many modifications and changes can be made to these examples without departing from the nature and spirit of the invention.",{"@attributes":{"id":"p-0056","num":"0000"},"ul":{"@attributes":{"id":"ul0007","list-style":"none"},"li":["[BBS98] Matt Blaze, Gerrit Bleumer, Martin Strauss: Divertible Protocols and Atomic Proxy Cryptography; Eurocrypt '98, LNCS 1403, Springer-Verlag, Berlin 1998, 127\u2013144.","[B98] Gerrit Bleumer: Biometric yet Privacy Protecting Person Authentication; Information Hiding Workshop '98, LNCS 1525, Springer-Verlag, Berlin 1998, 101\u2013112.","[B99] Gerrit Bleumer: Biometric Authentication and Multilateral Security; in G\u00fcinter M\u00fcller, Kai Rannenberg (Eds.): Multilateral Security for Global Communication.","[BR93] Mihir Bellare, Phillip Rogaway: Random Oracles are Practical: A Paradigm for Designing Efficient Protocols; 1st ACM Conference on Computer and Communications Security, Proceedings, Fairfax, November 1993, ACM Press, New York 1993, 62\u201373.","[B93] Stefan Brands: An Efficient Off-line Electronic Cash System Based On The Representation Problem; Centrum voor Wiskunde en Informatica, Computer Science\/Departement of Algorithmics and Architecture, Report CS-R9323, March 1993.","[B94] Stefan Brands: Untraceable Off-line Cash in Wallet with Observers; Crypto '93, LNCS 773, Springer-Verlag, Berlin 1994, 302\u2013318.","[BGK95] Ernest Brickell, Peter Gemmell, David Kravitz: Trustee-based racing Extensions to Anonymous Cash and the Making of Anonymous Change; 6ACM-SIAM Symposium on Discrete Algorithms (SODA)1995, ACM Press, New York 1995, 457\u2013466.","[BS96] Eric Bach, Jeffrey Shallit: Algorithmic Number Theory, Vol. 1; MI Press, Cambridge Mass. 1996.","[C83] David Chaum: Blind Signature System; Crypto '83, Plenum Press, New York 1984, 153.","[C84] David Chaum: A New Paradigm for Individuals in the Information Age; 1984 IEEE Symposium on Security and Privacy, IEEE Computer Society Press, Washington 1984, 99\u2013103.","[C85] David Chaum: Security without Identification: Transaction Systems to make Big Brother Obsolete; Communications of the ACM 28\/10 (1985)1030\u20131044.","[C88] David Chaum: Card-Computer Moderated Systems; United States Patent, U.S. Pat. No. 4,926,480, Date of Patent 15.05.1990.","[C90] David Chaum: Showing credentials without identification: Transferring signatures between unconditionally unlinkable pseudonyms; Auscrypt '90, LNCS 453, Springer-Verlag, Berlin 1990, 246\u2013264.","[CFN90] David Chaum, Amos Fiat, Moni Naor: Untraceable Electronic Cash; Crypto '88, LNCS 403, Springer-Verlag, Berlin 1990, 319\u2013327.","[CP92] David Chaum, Torben Pryds Pedersen: Wallet Databases with Observers. Crypto '92, LNCS 740, Springer-Verlag, Berlin 1993, 89\u2013105.","[CPS94] Jan L. Camenisch, Jean-Marc Piveteau, Markus A. Stadler: An Efficient Electronic Payment System Protecting Privacy; ESORICS 94 (Third European Symposium on Research in Computer Security), Brighton, LNCS 875, Springer-Verlag, Berlin 1994, 207\u2013215.","[CPS95] Jan L. Camenisch, Jean-Marc Piveteau, Markus A. Stadler: Blind Signatures Based on the Discrete Logarithm Problem; Eurocrypt '94, LNCS 950, Springer-Verlag, Berlin 1995, 428\u2013432.","[CPS96] Jan L. Camenisch, Jean-Marc Piveteau, Markus A. Stadler: An Efficient Fair Payment System; 3rd ACM Conference on Computer and Communications Security, New Delhi, India, March 1996, ACM Press, New York 1996, 88\u201394.","[EG85] Taher ElGamal: A Public Key Cryptosystem and a Signature Scheme Based on Discrete Logarithms; IEEE Transactions on Information Theory 31\/4 (1985)469\u2013472.","[F94] Niels Ferguson: Single Term Off-Line Coins; Eurocrypt '93, LNCS 765, Springer-Verlag, Berlin 1994, 318\u2013328.","[FS87] Amos Fiat, Adi Shamir: How to Prove Yourself: Practical Solutions to Identification and Signature Problems; Crypto 86, LNCS 263, Springer-Verlag, Berlin 1987, 186\u2013194.","[FY96] Yair Frankel, Yiannis Tsiounis, Moti Yung: \u201cIndirect Discourse Proofs\u201d: Achieving Efficient Fair Off-Line E-cash; Asia crypt '96, LNCS 1163, Springer-Verlag, Berlin 1996, 286\u2013300.","[FY93] Matthew Franklin, Moti Yung: Secure and Efficient Off-Line Digital Money; 20th International Colloquium on Automata, Languages and Programming (ICALP), LNCS 700, Springer-Verlag, Berlin 1993, 265\u2013276.","[GMR88] Shafi Goldwasser, Silvio Micali, Ronald L. Rivest: A Digital Signature Scheme Secure Against Adaptive Chosen-Message Attacks; SIAM Journal on Computing 17\/2 (1988)281\u2013308.","[MOV97] Alfred J. Menezes, Paul C. van Oorschot, Scott A. Vanstone: Handbook of Applied Cryptography; CRC Press, Boca Raton 1997.","[NIS 93] National Institute of Standards and Technology: Digital Signature Standard; Federal Information Processing Standards Publication (FIPS PUB xx), Feb. 1, 1993.","[O99] Andrew M. Odlyzko: Designs, Codes, and Cryptography (1999). To appear. http:\/\/www.research.att.com\/amo\/doc\/complete.html","[PS97] David Pointcheval, Jacques Stern: Provably Secure Blind Signature Schemes; Asiacrypt '96, LNCS 1163, Springer-Verlag, Berlin 1996, 252\u2013265.","[PS97a] David Pointcheval, Jacques Stern: New Blind Signatures Equivalent to Factorization; 4th ACM Conference on Computer and Communications Security, ACM-Press, New York 1997, 92\u201399.","[PS99] Birgit Pfitzmann, Ahmad-Reza Sadeghi: Coin-Based Anonymous Finger-printing; To appear at Eurocrypt '99, Springer-Verlag, Berlin 1999.","[RGV97] Cristian Radu, Ren Govaerts, Joos Vandewalle: Efficient electronic cash with restricted privacy; Financial Cryptography '97, Springer-Verlag, Berlin, 57\u201369.","[RGV96] C. Radu, R. Govaerts, J. Vandewalle: A Restrictive Blind Signature Scheme with Applications to Electronic Cash; 2nd IFIP Communications and Multimedia Security, Chapman & Hall, London 1996, 196\u2013207.","[SPC95] Markus Stadler, Jean-Marc Piveteau, Jan Camenisch: Fair Blind Signatures; Eurocrypt '95, LNCS 921, Springer-Verlag, Berlin 1995, 209\u2013219."]}}],"BRFSUM":[{},{}],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"DESCRIPTION OF THE FIGURES","p":[{"@attributes":{"id":"p-0011","num":"0010"},"figref":"FIG. 1"},{"@attributes":{"id":"p-0012","num":"0011"},"figref":"FIG. 2"}]},"DETDESC":[{},{}]}
