---
title: Providing a directory of frequently used hyperlinks on a remote server
abstract: Access to hypermedia servers connected to networks such as the Internet can be provided through mobile devices such as wireless telephones. Hypermedia links such as Uniform Resource Locators (URL) are used to identify and control access to resources on the network. These links are usually very long, are difficult to remember, and are difficult to enter into many mobile devices. These difficulties could be overcome by storing lists of frequently used links or “bookmarks” in the mobile device but limited memory in the device generally prevents this. This limitation is overcome by storing designated hypermedia links on a bookmark server. In one embodiment, the URL of the bookmark server is sent to the mobile device during initialization of the device. By allowing a user can to save, retrieve and maintain lists of frequently used links on the bookmark server, access to favorite resources on a network is greatly simplified.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=07031964&OS=07031964&RS=07031964
owner: Openwave Systems Inc.
number: 07031964
owner_city: Redwood City
owner_country: US
publication_date: 19990224
---

{"@attributes":{"id":"description"},"RELAPP":[{},{}],"heading":["CROSS-REFERENCE TO A RELATED APPLICATION","MICROFICHE APPENDIX","AUTHORIZATION WITH RESPECT TO COPYRIGHTS","TECHNICAL FIELD","BACKGROUND ART","DISCLOSURE OF INVENTION","MODES FOR CARRYING OUT THE INVENTION","Overview","Remote Device","Intermediate Computer","Basic Exchange of Messages","Get Request","Variations on the Get Request","Additional Functions and Features","Remote Device Initialization","Reducing Perceived Latency","Saving Lists of Bookmarks","Annex and Incorporated Documents"],"p":["The present application is a continuation of U.S. patent application Ser. No. 08\/996,379 filed Dec. 22, 1997, now U.S. Pat. No. 5,895,471, entitled \u201cProviding a Directory of Frequently Used Hyperlinks on a Remote Server\u201d, which claims the benefit of U.S. Provisional Patent application No. 60\/052,394, filed on Jul. 11, 1997.","A listing of particular embodiments of computer programs incorporating features of the present invention is provided in a microfiche appendix to this disclosure and is incorporated herein by reference. This appendix consists of 17 microfiche having a total of 1641 frames.","A portion of the disclosure of this patent document, including but not limited to the microfiche appendix, contains material which is subject to copyright protection. The copyright owner has no objection to the facsimile reproduction by anyone of the patent document or the patent disclosure, as it appears in the Patent and Trademark Office patent file or records, but otherwise reserves all copyright rights whatsoever.","The present invention relates generally to devices and methods for interacting with hypermedia servers connected to networks. More particularly, the present invention pertains to structures and methods of system interactions arranged such that practical access to hypermedia servers is available to a wider range of devices such as wireless telephones.","Although networks like the Internet have been in existence for years, they have not been a popular medium of information exchange until very recently. The recent explosive growth in usage of the Internet, for example, is due in large part to the development of devices and methods that simplify the actions a user must take to access multimedia information stored by network servers.","One significant development is the use of hyperlinks which allows disparate pieces of information to be organized in nonsequential ways and which allows a user to easily navigate among the linked information. By assigning a unique identifier to each distinct piece of multimedia information available throughout a network, information can be readily accessed without regard to where it is stored. Network clients and servers participating in such a \u201chypermedia\u201d network are referred to herein as hypermedia clients and hypermedia servers, respectively.","The Hypertext Transfer Protocol (HTTP) is one example of a method that implements hyperlinks and is probably the most widely used method for accessing the Internet today. A unique identifier, known as a Uniform Resource Locator (URL), specifies the location of a resource that can be accessed from the network.","HTTP clients and HTTP servers typically communicate with one another using any one of a family of communication protocols known collectively as Transmission Control Protocol\/Internet Protocol (TCP\/IP). One commonly used member of the family, known as Transmission Control Protocol (TCP), provides for a very reliable delivery of an information stream. According to the TCP, a sender establishes a \u201cconnection\u201d with a receiver, transmits an information stream in basic units known as packets, and retransmits any packets that are either lost or corrupted during transmission. One advantage of the TCP is that it guarantees the receiver will receive the bits and bytes in the information stream in the correct order. Unfortunately, the TCP requires considerable computing and network bandwidth resources. The establishment of a connection, for example, may require an exchange of more than ten packets between sender and receiver.","In addition to the resources required to implement the TCP, the HTTP itself also requires considerable resources to format, process and display information. This is not a significant disadvantage in many situations because personal computers and other workstations with sufficient computing power, memory and display capabilities are readily available to implement the HTTP client function.","There is, however, a growing interest to provide access to hypermedia servers connected to networks such as the Internet through mobile devices, particularly handheld devices like wireless telephones. These devices are characterized by severe limitations in processing power, memory space, display size, and buttons or keys by which a user can request, view and manipulate information obtained from a hypermedia server. Furthermore, the bandwidth of the communication channels connecting the mobile devices to the rest of the network is also severely limited.","A wireless telephone has only a small fraction of the resources provided by a typical desktop or portable computer. Typically, the processing power is less than one percent of the processing power in many computers, the memory space is generally much less than 150 kilobytes (kB), and the display is perhaps four lines high and twelve or twenty characters wide. Graphics capabilities are very limited or nonexistent. The communication path is often in the range of 400 to 19,200 bits per sec. and the cost using that communication path is measured in terms of United States dollars per 100 kB or more.","Attempts to implement HTTP client functions in portable devices have not been very successful. Attempts that have used mobile devices providing facilities which are comparable to conventional computers are unattractive because the cost of the device is very high. Other attempts using less expensive devices are also unattractive because the client functions are severely limited. In either case, the communication delays and costs in exchanging packets with the network just to establish a connection, for example, are intolerable. The delays are particularly annoying in situations where a user is notified that electronic mail or other information has been received in the user's \u201cmail box\u201d somewhere on the network and the user must wait during the roundtrip delay required to request and receive that mail from the mail box. The usability of the device is further impaired because there is insufficient memory space to store lists of frequently used hyperlinks. For HTTP clients, these hyperlink identifiers are URLs that are often difficult to remember and difficult to enter into the device due to limited data entry capabilities. Two popular software products used in conventional computers refer to these stored hyperlinks as \u201cbookmarks\u201d and \u201cfavorites.\u201d","It is an object of the present invention to provide structures and methods required by devices to interact with hypermedia servers connected to networks so that practical access to such servers is available to a wider range of devices such as wireless telephones.","According to the teachings of the present invention in one embodiment of a system that comprises a remote device coupled to a directory server, the remote device is remotely located with respect to the directory server, comprises first storage, a display and a button, and executes a first program that causes the remote device to receive a unit of information from a hypermedia network, the unit of information having an identifier, and to present on the display a representation of the unit of information, to receive an input signal in response to the button being activated and, in response, to send an add request to the directory server that conveys the identifier, and the directory server comprises second storage that stores a directory associated with the remote device and executes a second program that causes the directory server to receive the add request and, in response, to add an entry to the directory representing the identifier.","The various features of the present invention and its preferred embodiments may be better understood by referring to the following discussion and the accompanying drawing. The contents of the following discussion and the drawing are set forth as examples only and should not be understood to represent limitations upon the scope of the present invention.","The FIGURE illustrates a system in which various aspects of the present invention may be practiced. As will be explained below, some of the components illustrated in the FIGURE may be omitted in various embodiments. As shown, client  uses network  to access resources provided by server  and server . Although it is contemplated that server  and server  are hypermedia servers, perhaps operating in conformity with the Hypertext Transfer Protocol (HTTP), this is not necessary to practice the present invention.","Client  comprises computer  and device , which is remotely located with respect to computer . Remote device  and computer  perform functions that implement client . Remote device  provides a user interface through which information can be presented to a user and input can be received from a user. Computer  exchanges information with network  in a manner that is consistent with a conventional network client.","Computer  stores parameters and information in storage  that typically is a combination of random access memory (RAM), read-only memory (ROM) and long-term storage devices such as magnetic and optical disk drives. Computer  communicates with remote device  through receiver  and transmitter . Information that is sent by computer  through transmitter  is received by remote device  through receiver . Information that is sent by remote device  through transmitter  is received by computer  through receiver .","In the embodiment shown in the FIGURE, remote device  comprises display , one or more buttons , storage , transmitter  and receiver . For example, device  may be a wireless telephone such as a MobileAccess\u2122 telephone by Mitsubishi Wireless Communications, Inc., or a Duette telephone by Samsung Electronics Corporation. In typical wireless telephones, the display  is a liquid crystal display (LCD) panel. Buttons  represent one or more data entry devices such as switches, keys or buttons. Storage  represents memory circuits or other devices that are capable of storing digital information. Preferably, at least part of storage  is persistent storage, meaning that information is retained when device  is turned off. In some embodiments, a portion of storage  is organized into a unified push\/pull cache. It is also contemplated that a portion of storage  will store program instructions, either in persistent memory or in ROM, and that device  will comprise a microprocessor or other type of processing circuitry capable of executing the program instructions.","The nature of the communication paths shown between computer , server  server , receiver  and transmitter  are not critical to the practice of the present invention. Such paths may be implemented as switched and\/or non-switched paths using private and\/or public facilities. Similarly, the topology of network  is not critical and may be implemented in a variety of ways including hierarchical and peer-to-peer networks. Computer  and server , for example, may be locally located with respect to one another and may be implemented on the same hardware.","In concept, the nature of the communication paths between computer  and device  is also not critical to the practice of the present invention; however, in many applications device  is a wireless device that uses a communication technology such as electromagnetic transmission in the radio-frequency to infrared portions of the spectrum. In applications where device  is a wireless telephone, a cellular telephone for example, transmitter , receiver , receiver  and transmitter  represent communication facilities used for normal telephone calls.","Examples of devices and methods that may be used to practice various aspects of the present invention are discussed below. The following discussion describes variations of a preferred embodiment that implements client  according to the HTTP; however, it should be understood that the present invention is not so limited.","In applications where client  is implemented as a HTTP client, device  provides at least three basic functions. A navigation function allows a user to navigate or traverse HTTP Uniform Resource Locator (URL) hyperlinks. A communication function exchanges information with computer . An interface function provides a user interface through which information may be presented to the user and through which input may be received from the user.","Preferably, these functions are implemented by a software-controlled process using an event-driven architecture. Events may be initiated by a user through buttons , for example, or may be initiated by signals received through receiver . The navigation function operates in either of two states. In the \u201cready\u201d state the device awaits user input specifying a hyperlink to traverse. In the \u201cpending\u201d state the communication function has submitted a request to computer  and the device is waiting for a reply from computer . In terms of the HTTP, the ready state waits for user input specifying the URL of a hypermedia entity to display or process and the pending state waits for computer  to provide a requested hypermedia entity.","In one embodiment, hypermedia information is exchanged with computer  according to the Handheld Device Transfer Protocol (HDTP). A specification for a version of this protocol, sometimes referred to as Secure UPLink Gateway Protocol (SUGP), is provided in an Annex. The HDTP resembles the HTTP but is optimized for use with remote devices like wireless telephones and preferably is conveyed using the User Datagram Protocol\/IP (UDP\/IP). The UDP\/IP is generally regarded as being less reliable than UDP\/EP, for example, because it does not guarantee that packets will be received, nor does it guarantee that packets will be received in the same order that they are sent. Datagram protocols like the UDP\/IP are attractive in practicing the present invention, however, because it does not require a \u201cconnection\u201d to be established between a sender and a receiver before information can be exchanged. This eliminates the need to exchange a large number of packets during session creation.","In a preferred embodiment, hypermedia information is organized according to a Handheld Device Markup Language (HDML) into cards and decks. Multiple decks and other types of message entities can be organized into information structures called digests. A specification for a version of HDML is provided in the Annex.","A \u201cdeck\u201d is the smallest unit of HDML information that can be exchanged with computer . Each deck has a unique identifier or URL. A user may navigate from one deck to another by traversing hyperlinks that reference the desired deck. If remote device  has a cache for received decks, the device first consults the cache to determine if the requested deck is available. Remote device  may also be implemented to determine if a desired deck found in cache is also current, that is, not out of date. If so, that deck is accessed without requiring any communication with computer . If the requested deck is not in the cache or is out of date, however, a request for that deck is sent to computer . This is discussed in more detail below.","Because the display on remote device may be too small to show all the information in a deck at one time, each deck may be organized into one or more cards. A \u201ccard\u201d is a unit of information that can be displayed and\/or can define how a user may interact with the device.","There are several types of cards. A \u201cdisplay\u201d card conveys information that is to be displayed. An \u201centry\u201d card conveys a method that permits a user to enter information and typically also conveys information to display. A \u201cchoice\u201d card presents alternatives for selection by a user. Entry and choice cards also convey methods to be performed by device  that carry out functions necessary to receive input or recognize the chosen alternative. Typically, entry and choice cards cause one or more state variables to be set according to the information that is entered or the alternative that is chosen. A display card can also set one or more variables. A special form of the display card does not cause any visible display but can be used to set one or more variables.","A \u201cdigest\u201d is an optional information structure that may be used to facilitate the transmission and processing of multiple message entities including HDML decks. In particular, each message entity in a digest is processed in sequence according to entity type. In one embodiment, message entity types include HDML decks, images and alerts. One important use of the digest and the alert entity is discussed below.","The current state of the three basic functions, navigation, communication and interface, can be expressed in terms of the deck and card in that deck that is currently displayed and one or more variables needed to process the card. By saving this information in persistent storage, remote device  can restore the current state at a fixture time. A cache of decks, a navigation history of hyperlink traversals and a history of user activity can also be used to improve performance, provide additional functions to the user, and provide additional facilities for use by system developers.","Handheld devices like telephones have severely limited facilities for entering information. The input facilities of these devices are often limited to the familiar twelve keys of a pushbutton telephone. One common method for entering text is to assign letters to various numeric keys according to normal telephone conventions. For example, the letters ABC are assigned to the \u201c2\u201d key and the letters DEF are assigned to the \u201c3\u201d key. The letters Q and Z could be assigned to the \u201c0\u201d key, for example. According to this method, the letter A is entered by pressing the \u201c2\u201d key once and the letter B is entered by pressing the key twice. In preferred embodiments of remote device , a form of letter prediction is used to make text entry more efficient.","This prediction can be based on the statistics of letter combinations. For example, after entering the letters T and H, it is much more likely that a user will enter the letter E than the letters D or F. Accordingly, after entering T and H, in response to a user pressing the \u201c3\u201d key, remote device  will present the letter E first rather than the letter D. The prediction can be based on a table of probabilities for various three-letter combinations stored in storage .","Computer , together with remote device , provides the functions of a conventional hypermedia client. In the embodiment discussed above, computer  receives information from remote device  according to the HDTP, translates the HDTP information into corresponding HTTP information as necessary, and sends the result to server . Similarly, computer  receives information from server  according to the HTTP, translates the HTTP information into corresponding HDTP information as necessary, and sends the result to remote device . Preferably, HDTP information exchanged with remote device  is compiled from a textual form into a binary form that reduces the bandwidth requirements of the communication channel and reduces the processing required by remote device  to parse and interpret the information. Alternatively or in addition, the information may be subjected to other types of data compression to reduce bandwidth requirements.","By using the UDP\/IP, a session can be created more efficiently than is possible using the more common TCP\/IP. The exchange of information needed to create a session is similar to the exchange carried out for other types of requests. An exchange can be initiated by remote device  sending a request to computer . Subsequently, computer  returns a reply to the request and remote device  acknowledges receipt of the reply. The reply may either be expected results of the request or it may be an indication of some error encountered while attempting to service the request. If remote device  does not receive a reply within some timeout interval, it will send the request to computer  again. Remote device  will send the request repeatedly until either it receives a reply message, or a standby or \u201cHoldOn\u201d message from computer . The length of the timeout interval can be user configurable or it can be established by information previously received from computer . Similarly, computer  will send the reply repeatedly until it receives the acknowledgement from remote device .","For example, remote device  may initiate the creation of a session by sending a session-creation request to computer . The request includes any necessary authentication information, one or more session parameters, and information describing the device and version of software in use. Computer  receives the request, validates the authentication information, checks that the user is entitled to initiate a session, assigns an identifier to the new session, builds a message containing the session identifier and any information that computer  wishes to pass to remote device , and sends the message to remote device . Preferably, this message also includes the URL of a \u201chome page\u201d associated with the device. Remote device  acknowledges receipt of the message and the session is established.","As another example, when a user traverses a hyperlink, remote device  consults its cache, if any, and determines if the cache already has the requested hypermedia entity (HDTP deck). If it does and the deck in the cache is not out of date, remote device  can process the requested deck and no further action is required. If the requested deck is not available or is out of date, however, remote device  builds a message including a HDTP \u201cService Request\u201d and the URL of the requested deck and sends the message to computer . According to the HDTP, the message also includes a header with information that is unique to the request. Remote device  then waits for a reply from computer . The reply may be the requested deck or it may be an indication that an error occurred while attempting to service the request.","Computer  receives the request, checks its validity and attempts to establish a connection with the appropriate network server, say server . If the connection fails, remote device  is notified. Otherwise, computer  builds a message that includes a HTTP \u201cGET\u201d method and the URL of the desired hypermedia entity. In one embodiment, the header of the message is constructed from \u201ccommon\u201d parameters that are common to all users, from \u201csession\u201d parameters that are unique to the session with remote device  and any \u201crequest\u201d parameters that were passed in the header of the HDTP request. Preferably, any conflicts in the three sets of parameters are resolved in favor of request parameters first, session parameters second, and common parameters last. Alternatively, the HTTP header may be constructed from just common parameters, just session parameters, just request parameters, or any combination of these parameters.","After constructing the HTTP get request, computer  sends it through the established connection to server . Server  attempts to service the HTTP \u201cGET\u201d request and sends the result to computer  in a HTTP response. Computer  checks a result code contained in the header of the HTTP response. If the result code indicates an error occurred, computer  may take any of several possible actions explained below. If the result code indicates the request was serviced successfully, computer  builds an appropriate HDTP response containing the results of the get request and sends the HDTP response to remote device . Computer  may compress, encrypt or convert the result as desired. If server  does not respond with a complete result within a reasonable period of time, the connection is dropped and an error indication is returned to remote device .","Remote device  acknowledges receipt of the HDTP response and displays and\/or processes message entities included in the response. If computer  does not receive an acknowledgement within a reasonable period of time, it sends the HDTP response again. Computer  may repeat the transmission one or more times until an acknowledgment is received. If an acknowledgement is not received after a desired number of attempts, computer  may discard the result and abandon the attempt to send it, save the result in storage  for a future attempt, or save a message for future transmission indicating the result was discarded.","Computer  may respond with error indications for a variety of circumstances. For example, computer  may notify remote device  that the requested URL is for a scheme or protocol that is not supported, or that the requested URL designates a network server that cannot be resolved using the Domain Name Service (DNS).","HTTP result codes are numerical codes of the form XXX. If the result code in a HTTP response is  or , a \u201credirection error,\u201d it indicates the requested resource has been moved. The new URL may be returned to remote device . Alternatively, computer  may respond to the redirection error by using the new URL to establish a connection with the new server, say server , construct a new HTTP get request and submit it to server . The response from server  and the new URL are returned to remote device .","If the result code in a HTTP response is , it indicates the user is not authorized access to a particular \u201crealm.\u201d Computer  may check storage  to determine if there is a user name and password for the realm that generated the error. If an appropriate user name and password are available, computer  can resubmit the request with the authorizing information. If a user name and password are nor available, or if the resubmitted request results in a another unauthorized error, computer  may construct a HDTP deck with an entry card by which the user can enter the correct user name and password for the realm generating the error.","Generally, client errors (4xx), server errors (5xx) and other types of errors may be handled by computer  returning a deck with one or more display cards explaining the nature of the error and what course of action the user may consider taking.","Remote device  can use a post request to send data to a server. In one embodiment, remote device  builds a HDTP \u201cPost\u201d request including the URL of the intended network server and a block of data. Computer  constructs and sends a corresponding HTTP \u201cPOST\u201d method in a manner similar to that described above for the get request.","Although many client functions do not need to be implemented to realize the benefits of the present invention, some client functions are important in many applications. These functions include creating and managing sessions with a hypermedia server, handling a variety of error conditions like those discussed above, authenticating a user to the server, establishing a private session and managing user certificates and encryption keys, managing a first level cache, handling redirection errors and validating hypermedia content.","The operational characteristics of client  are affected by parameters and other information stored in storage . Examples of operational characteristics include a list of authorized subscribers or users, resources that are available to each respective user, and timeout values for respective remote devices  and computer . In preferred embodiments, these parameters and information are maintained by a facility on computer  that operates as a network server, perhaps a HTTP server. In this manner, the operational characteristics of client  can be administered locally or remotely by an authorized network client.","The headers for each HTTP request can include a parameter that specifies what type of content for the response is acceptable. As mentioned above, in some embodiments this parameter can be obtained from common parameters, session parameters or request parameters. Computer  can check the content of any reply from a server and determine whether the content is acceptable to remote device . If the content is not acceptable, computer  may notify remote device  of the error. For example, content types such as applets, movies and certain types of images may not be acceptable. Alternatively, when possible, computer  may convert the content into a form that is acceptable. For example, computer  may be able to convert one type of image, say JPEG, into an acceptable form, say GIF.","An HDTP session can have a very long life, extending beyond the time remote device  is turned off. A session can also be interrupted by some other function remote device  is required to perform such as, for example, a wireless telephone initiating or receiving a voice telephone call. Remote device  can resume a suspended session with computer  by preserving session-related information in persistent storage. This information includes the session identifier and any information required to identify computer . In addition, if encryption has been in use for this session, the saved information can include encryption keys, flags indicating the type of encryption method, block-chaining values, or other information needed to resume encryption. Alternatively, encryption can be initiated anew as is done at time of session creation.","In an embodiment allowing resumption of a suspended session, remote device , when turned on, determines whether a session was suspended. If it was, remote device  sends a request to computer  using the session-related information stored in persistent storage. Computer  receives the request, validates the session and determines whether the session has expired. If the session is valid, computer  services the request. If the session is not valid, computer  returns an error indication to remote device  which can then initiate a request to create a new session.","At the time of session creation, remote device  establishes session parameters used to construct HDTP headers. These parameters can be set according to values provided by remote device  and\/or computer . These parameters may include HTTP related values such as Accept, Accept-Charset and Accept-Language, and they may include values not related to the HTTP such as a timeout interval between sending retries, maximum packet length remote device  can accept and the encryption algorithm to use. Preferably, in subsequent exchanges between remote device  and computer  after these parameters are established, headers include only parameters that the receiving device does not already know.","Preferably, headers are formed in a manner that simplifies the processing required to parse and interpret the embedded information. Headers for the HDTP contain pairs of ASCII text strings, each string terminated by a null or zero-valued byte. The first string in each pair specifies a key or parameter name and the second string provides the key's value. Most headers contain a single byte that specifies the header type. Frequently used keys and values can be encoded into single bytes having a value from 128 to 255.","In preferred embodiments, remote device  also checks during initialization for anything relevant that is pending in computer . For example, responses or message entities may have queued up in computer  while the session with remote device  was suspended.","Most practical implementations of remote device  do not maintain accurate time. In preferred embodiments, during initialization or at any time thereafter, remote device  can obtain the current time from computer  by a request.","Various network services including electronic mail have the ability to notify a user when some asynchronous or unsolicited event has occurred or is about to occur. In this context, the term \u201cunsolicited\u201d refers to an event that is not a direct result of some user request. A notification of the arrival of one or more pieces of electronic mail or data from other users or from services providing periodic stock price quotations are examples of unsolicited events. In response to the notification, a user can request delivery of the mail, the data, or some other message from the network server that provided the notification. Referring to the Figure, the network service providing the notification may reside on server , for example, or it may reside on computer .","The time required to obtain the unsolicited information is at least as great as the total time it takes to convey the request to the server and to convey the reply from the server to the user's terminal or workstation. In conventional systems, the communication time is usually not a factor; however, as mentioned above, signal propagation time between remote device  and computer  can be significant in systems where the communication path has a low bandwidth. For example, data communication via wireless telephones is sometimes restricted to as little as a few hundred bits per sec.","Significantly, the primary source of user dissatisfaction in such applications is how much time is spent waiting for return of the reply, not when the reply actually arrives. For example, if electronic mail were to arrive in a user mail box at 3:00 p.m. most users would not be concerned whether the mail reached their terminal at 3.02 p.m. or 3:05 p.m. What is of concern, however, is the perceived delay, the time spent waiting for requested information to arrive. The perceived delay can be greatly reduced by delivering at least a portion of the unsolicited information to remote device  before notifying the user.","In one embodiment, a network service receives messages representing one or more instances of unsolicited information for remote device . That network service causes computer  to generate one or more message entities representing at least a portion of the unsolicited information and to send those message entities to remote device . Preferably, the message entities are assembled into one or more HDML decks that are contained in a digest. Also included in the digest is a message entity that specifies an operation, or type of operation, that remote device  is to perform to notify the user. The notification may be a visual presentation on screen , or it may be an aural or tactile presentation by some other suitable transducer. The notification may also be accompanied by text, presented on display , explaining the nature of the notification. The message entity specifying the notification can also contain the URL of any related hypermedia entity such as the fulltext of electronic mail, embedded files, an \u201centry\u201d card for preparing an immediate reply, etc.","In electronic mail applications, the digest preferably includes cards representing a portion of each piece of mail, say the first 100 characters, one or more cards containing a list of all mail in the user's mail box, and a card with one or more URLs that causes the network service to deliver the text of one or more messages. Remote device  should process the cards, decks and other message entities included in the digest in strict order. Significantly, the notification or alert message entity should be processed after the preceding message entities have been stored in storage  and are available for display or other processing.","In practice, notification or alert message entities are often used with \u201cprefetch notifications.\u201d Prefetch notifications specify a deck or digest which an application executing in remote device  requests and stores in storage  before notifying a user.","In preferred embodiments of remote device , notification or alert message entities are stored in persistent storage and a card is provided that displays a list of alert message entities that have been sent to remote device . An indication of whether a user has acted on a notification is stored and displayed for each respective alert message entity. When a new alert message entity arrives, remote device  determines if a duplicate entity is already stored. If a duplicate entity is stored, the older entity is deleted and the new entity is stored, clearing any indication that the user has acted on the corresponding notification.","In devices like wireless telephones, there is usually insufficient storage to save lists of frequently used hypermedia links, e.g., URLs. This limitation reduces the usefulness of these devices because hypermedia links are usually difficult to remember and especially difficult to enter into the device. Software products for conventional computers provide facilities to save lists of these links. Two popular products refer to these stored links as \u201cbookmarks\u201d and \u201cfavorites.\u201d","This limitation is overcome by storing designated hypermedia links or bookmarks on a network server, referred to herein as a bookmark server. In one embodiment, the URL of this server is sent to remote device  during initialization of the device.","In response to the activation of a particular button , remote device  uses the bookmark server URL to construct a request to save the bookmark of the deck containing the currently displayed card. This may be done by appending the bookmark server URL with an argument specifying the deck bookmark and submitting the request to computer . Computer  passes the request to the bookmark server. The bookmark server services the request by saving the bookmark specified in the argument in a list uniquely associated with remote device . In addition, an entry card can be used to prompt the user for a name or description of the bookmark. The name and bookmark URL are sent to the bookmark server which saves the bookmark and accompanying name in the list. Preferably) the bookmark server can also store one or more state variables used by remote device  to display or process the associated deck. For example, a state variable may be used to save information that a user entered through an entry card. These state variables can be conveyed to the bookmark server by additional arguments appended to the server URL.","In preferred embodiments, decks and specified cards within decks may contain indications that they cannot be bookmarked. If a user attempts to save a bookmark for such a card or for any card with such a deck, remote device  is caused to display an appropriate message informing the user that the current card cannot be marked.","Remote device  can request all or part of the stored list by sending an appropriate request to the bookmark server. In one embodiment, the request comprises the URL of the bookmark server appended with an argument specifying the first entry in the list to send. For example, an initial request would specify the first entry in the list. In reply, the bookmark server would build a response representing entries one through N and a value referencing entry number N+1. A subsequent retrieval request from remote device  would include the URL of the bookmark server appended with an argument specifying the N+1 entry. By continuing in this manner, the user is able to retrieve and display all entries in the stored list of bookmarks.","The deck and cards in the reply received from the bookmark server can also contain methods for modifying or deleting bookmarks in the stored list. A request to modify a bookmark can be made by appending the bookmark server URL with arguments specifying a change to the selected bookmark and the desired change. Similarly, a request to delete a bookmark can be made by appending the bookmark server URL with arguments specifying a deletion of the selected bookmark.","By implementing the bookmark server as a standard HTTP server, the bookmark list for a user cat be accessed and maintained by any standard HTTP client. This feature allows a user to setup and maintain the list more easily using a conventional computer.","Documents in an Annex to this main disclosure, computer listings in the microfiche appendix, and documents incorporated herein by reference, include specifications, proposals, specific implementations and features of particular products that describe and embody various aspects of the present invention. Terms such as \u201crequired,\u201d \u201cmust,\u201d \u201csignificant,\u201d \u201cnecessary,\u201d \u201cminimum\u201d and \u201cmaximum\u201d refer to particular embodiments disclosed therein and do not represent limitations on the scope of the present invention. Because these documents describe several versions of specific products, specifications and proposals, some features and terminology may differ among the several documents and this main disclosure. Not all features described therein are required to practice the present invention; the various features may be used in essentially any combination. These documents describe some features that are either omitted or are not discussed in as much detail in this main disclosure. To this extent, these documents augment the main disclosure. To the extent that these documents disclose or suggest limitations that are not described in the main disclosure, those inconsistencies are to be resolved in favor of the main disclosure."],"BRFSUM":[{},{}],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"BRIEF DESCRIPTION OF DRAWING","p":"The FIGURE illustrates in schematic form the major components of a system in which a device such as a wireless telephone can access the resources provided by a hypermedia server connected to a network"},"DETDESC":[{},{}]}
