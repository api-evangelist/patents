---
title: Security element commanding method and mobile terminal
abstract: The invention relates to a method for commanding a security element of a mobile terminal, and to a mobile terminal. An installed application of the mobile terminal issues a command to a platform library of the mobile terminal. Then the platform library reads information from an access control file of the security element. After this, the platform library obtains an access code for the security element from a user according to the access control file information, and inputs the obtained access code and the command to the security element. An action is performed according to the command in the security element, if the access code is approved by the security element.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=07395049&OS=07395049&RS=07395049
owner: Nokia Corporation
number: 07395049
owner_city: Espoo
owner_country: FI
publication_date: 20040302
---

{"@attributes":{"id":"description"},"BRFSUM":[{},{}],"heading":["FIELD","BACKGROUND","BRIEF DESCRIPTION","DESCRIPTION OF EMBODIMENTS"],"p":["The invention relates to a method for commanding a security element of a mobile terminal, and to a mobile terminal.","With the opening of the software environment of the mobile terminal and with the 3G (Third Generation) specifications, it is becoming possible for third parties (including cellular operators and mobile terminal manufacturers) to make applications for mobile terminals that handle the security element, usually a smart card, in the terminal. An application that is installed in the mobile terminal by the user can be called an installed application. The applications that reside more permanently in the mobile terminal are usually installed into the mobile terminal by the manufacturer when the device is manufactured, and are called a platform library. Throughout this application, we use these two terms: the installed application and the platform library. Usually, the user installs the installed application in the mobile terminal after s\/he has acquired the mobile terminal, whereas the manufacturer installs the platform library or part thereof in the mobile terminal before the sale of the mobile terminal to the end-customer.","The Java\u2122 Community Process (JCP) expert group defines a Java\u2122 programming environment for mobile terminals and security elements in a specification called JSR-177 (Java\u2122 Specification Request 177). Because installed applications, such as Java\u2122 midlets, can be loaded into a terminal from multiple sources, and the security environment for those applications differs from the security environment of the security element, there needs to be a mechanism with which the security element application can define the installed applications that can invoke commands on the security element application.","The installed application can be signed, and the mobile terminal will verify the signature and thus the origin of the installed application. The mobile terminal can have separate restrictions on applications coming from cellular operators, manufacturers and others. So the issuer of the application signs the midlet, the mobile terminal verifies the signature and if the signature is that of the cellular operator, the midlet gets the rights specified for that security domain (for example can make a phone call, can access the security element, but cannot write to the mobile terminal operating system area).","The mobile terminal security element, such as a SIM (Subscriber Identity Module) or USIM (UMTS SIM) card, a security element of the terminal itself or a security element in an accessory of the terminal, is needed for secure storage and processing of data. Digital signature creation, for example, requires a very secure element in which to do the operation, because a private key cannot be compromised, and thus the private key cannot leave the security element. Other usages for security elements are access authentication to networks, storing electronic cash values or tickets, or processing financial transactions. So there is a need for installed applications to access the security element for these advanced features.","The basic problem is that the application running in the security element cannot itself verify that the installed application accessing it has the appropriate rights and is a valid application. The cellular operators want to limit SIM access to applications coming from the operators themselves. An attacking application can fake a security code for access granting, and it is not possible to transfer the whole installed application to the security element for verification (indeed it might be so that a valid application is given for verification but the attacking application uses the element after access granting).","An object of the invention is to provide an improved method for commanding a security element of a mobile terminal.","According to an aspect of the invention, there is provided a method for commanding a security element of a mobile terminal, the method comprising: issuing a command to a platform library of the mobile terminal by an installed application of the mobile terminal; reading information from an access control file of the security element by the platform library; obtaining an access code for the security element from a user according to the access control file information by the platform library; inputting the obtained access code and the command to the security element by the platform library; and performing an action according to the command in the security element, if the access code is approved by the security element.","Another object of the invention is to provide an improved mobile terminal.","According to another aspect of the invention, there is provided a mobile terminal, comprising a platform library; an installed application; a user interface; and a security element; the installed application being configured to issue a command to the platform library; the platform library being configured to read information from an access control file of the security element, to obtain an access code for the security element from a user via the user interface according to the access control file information, and to input the obtained access code and the command to the security element; and the security element being configured to perform an action according to the command, if the security element approves the access code.","The invention provides several advantages. The mobile terminal does not need to know the properties of a particular security element, thus one mobile terminal can use a variety of different security elements as long as they include an access control file with the information used for the access code obtainment. The security of the mobile terminal is increased as the installed applications cannot directly handle the security element and the access code. The invention allows the security element to define its own security perimeter.","With reference to , an example of the structure of a mobile terminal  is described. The mobile terminal  can be a portable device relating to ubiquitous computing, for instance a subscriber terminal in a radio system, such as a mobile system, a PDA (Personal Digital Assistant) device, or another electronic device incorporating a security element  to its operation. The device may also combine various roles, i.e. it may for example be a combination of a subscriber terminal and a PDA device, the Nokia\u00ae Communicator\u00ae being one example of such devices.","In our example, the mobile terminal  is a subscriber terminal in a radio system, the mobile terminal  comprising an antenna  and a radio transceiver . The mobile terminal  is capable of establishing a two-way radio connection  with the network part  of the radio system. The radio transceiver  is for example a prior-art mobile station transceiver, which operates for example in the GSM (Global System for Mobile Communications) system, GPRS (General Packet Radio Service) system or UMTS (Universal Mobile Telecommunications System).","A typical mobile terminal  comprises as its user interface , which a user  of the mobile terminal  used for interaction with it, the following components: a keypad, display, microphone and loudspeaker. The power source of the mobile terminal  is generally a rechargeable battery.","The mobile terminal  comprises a control unit , which controls and monitors the operation of the terminal and the various parts thereof. Currently, the control unit  is generally implemented as a processor with software, but different hardware implementations are also possible, such as a circuit made of separate logic components, or one or more application-specific integrated circuits (ASIC). A combination of these different implementations is also possible. When selecting an implementation, a person skilled in the art considers, for example, the requirements set for the size and power consumption of the device, necessary processing performance, manufacturing costs and production volumes.","Next, with reference to , the structures of the control unit  and the security element  are illustrated. The control unit  comprises installed applications ,  and a platform library . The security element  comprises security element applications , , and access control files , , .","The user  of the mobile terminal  can install one or more installed applications ,  in the mobile terminal, after s\/he has acquired the mobile terminal . The user  can, for example, download the installed application from a server  via the Internet  and the network part  of the radio system, as illustrated in . The server  can be a WWW-server (World-Wide Web), for example. The installed application ,  is written in a programming language. One example of such a language is the Java\u2122 programming language. JCP has developed the MIDP (Mobile Information Device Profile) architecture especially for mobile terminals. The programming environment is called J2ME\u2122 (Java\u2122 2 Platform MicroEdition). In the MIDP architecture, the lowest level is the hardware of the mobile terminal . On top of the hardware is the native system software that comprises an operating system and a Java\u2122 virtual machine. The operating system can be the Symbian\u2122 operating system, for example. The manufacturer or operator installs the platform library  or part thereof in the mobile terminal  before the sale of the mobile terminal  to the end-customer. Thus in the MIDP architecture, the platform library  provides an interface, also known as API (Application Programming Interface), to the services provided by the native system software. In the MIDP architecture, the installed applications ,  can be written in the Java\u2122 programming language and they can be called midlets (cf. an applet in Java\u2122).","The security element  is used for the secure storage and processing of data. The data in the security element  can be accessed and\/or processed by issuing commands to the security element . Some commands can be such that they do not need an access code in order to be performed. Usually, due to the confidential nature of the data stored in the security element , the command must be accompanied with an access code provided by the user . The access code is usually a secret code or password. The access code is sometimes called a PIN (Personal Identification Number) code.","Commands to the security element  needing the access code are, for example: digital signature creation, access authentication to a network, storage of electronic cash values or a tickets, financial transaction processing. The installed application  is configured to issue a command to the platform library . The platform library  is configured to read information from an access control file  of the security element . Access control file information comprises access code usage instructions. Each application ,  in the security element  has an access control file ,  of its own, or an application in the security element  can also use a common access control file  of the security element . If the access control file  of the A1 application  of the security element  defines that an access code is needed in order to perform the command issued to the platform library, then the platform library  is configured to obtain the access code for the security element  from the user via the user interface  according to the access control file  information. Having received the access code, the platform library  is configured to input the obtained access code and the command to the security element . The input of the obtained access code and the command can be combined in one message or method call or another suitable mechanism to pass the information between the platform library  and the security element , or the input can be done separately by first giving one of the two and then giving the other.","The security element  is configured to perform an action according to the command, if the security element  approves the access code. In our example, this can be implemented so that the A1 application  receives the access code, checks that the access code matches the access code known by the application  or known by the security element , and performs the action according to the command, if the match is confirmed.","In an embodiment, the user interface  is configured to prompt the user for the access code with prompt information stored in the access control file . This embodiment enables the platform library  to handle the access code obtainment in a general way, without knowing the details. Another advantage is that the general appearance of the access code query always looks the same, so that the user  easily identifies that now confidential information is asked for.","In an embodiment, the user interface  is configured to display usage information on the access code usage stored in the access control file . This embodiment informs the user  why the access code is needed. If the displayed information is not consistent with the user's mental image of the usage, then s\/he can identify a possibly malicious installed application that s\/he can destroy from the memory of the mobile terminal .","In an embodiment, the user interface  is configured to display help information stored in the access control file . If the user  is uncertain, the help information can give confidence in the use of sensitive information and also aid in understanding which commands are possible at a certain stage.","In an embodiment, the platform library  is configured to download information complementary to the access control file  information from a server  identified by a network address stored in the access control file . Usually this server  is the same as where the installed application  was downloaded from, but naturally it can also be another server. The platform library  can be configured to validate the complementary information with a security certificate stored in the access control file . This is done for security reasons, so that the complementary information would not contain any harmful or malicious parts, such as viruses. The platform library  can also be configured to store the complementary information in the security element  and\/or in the mobile terminal , so that if the same complementary information is needed in the future, it need not be downloaded again.","In an embodiment, the complementary information is in a different language than the information stored in the access control file . This embodiment makes it possible to adjust the needed memory capacity of the security element, as perhaps only some language versions are stored in the access control file , and other language versions are downloaded only as needed.","In an embodiment, the access control file information, i.e. prompt text information, usage text information and help text information, comprises a code, and the actual information item such as the text corresponding to the code is stored in the platform library  and\/or in a server  identified by a network address stored in the access control file . This embodiment saves the memory of the security element , as different applications may use the same information item which is only stored once in the platform library .","With reference to , a method for commanding a security element of a mobile terminal is explained. The method starts by issuing  a command to a platform library  of the mobile terminal by an installed application  of the mobile terminal. According to the above-mentioned JSR-177, the platform library can support two types of connections: an APDU (Application Protocol Data Unit) connection and a Java\u2122 Card RMI (Remote Method Invocation) connection. If APDU is used, then the installed application  can use a command that is as follows, for instance:","PerformSecurityElementCommand(command, command data) {","Library internal operation for application access rights verification;","Library internal operation for user prompting;","Library internal operation for command parsing;","Library internal operation for making command call to security element;","Library internal operation for reading security element response;","Library internal operation for giving response to installed application;","}.","RMI could offer to the installed application  a method, such as deduct_account(int amount), that would then be sent to the security element  with the described APDU command, for example.","These are, however, only examples of the command structure, and other kinds of commands can also be used, and besides a method call also a message interface can be used.","Next, in a optional operation, the platform library  checks  the access rights of the installed application to the security element by verifying if the installed application has the right to call the security element application . The platform library  reads the certificate for installed application verification from the access control file . The digital signature of the installed application  is verified  with the certificate. In our example, the verification succeeds and the installed application is thus authenticated.","Then the platform library  reads  information from an access control file  of the security element. In our example, the access control file information defines that an access code is needed in order to carry out the command . So for example PIN is used with command 0x02 (transaction authorization). The access control file information can also indicate how the access code is given in the command (for example, is it a parameter , parameter , or data part of the command, or is it a separate command 0x01 issued before command 0x02). The access control file information thus comprises access code usage instructions. As shown, the access control file  can be read two times by the platform library , in  and . An embodiment is also possible, wherein the access control file  is read only once, before the verification  and the access code obtainment .","In an embodiment, information complementary to the access control file information is downloaded  from a server  identified by a network address stored in the access control file. The complementary information can be validated with a security certificate stored in the access control file. The complementary information can be stored in the security element and\/or in the mobile terminal. In an embodiment, the complementary information is in a different language than the access control file information. In an embodiment, the access control file information comprises a code, and the actual information item corresponding to the code is stored in the platform library and\/or in a server identified by a network address stored in the access control file.","Next, the platform library  obtains  an access code for the security element from the user  according to the access control file information. Depending on the technology used, the access code can be realized according to the prior-art ways: a PIN code, password, acceptance indication (such as pressing an OK key for low security level items, such as a phonebook stored in the security element), or biometric authentication (such as fingerprint reading, protein scan, heat and\/or pressure characteristics of finger or palm pressure, etc.).","In an embodiment, the access code is obtained by prompting the user for the access code with prompt information stored in the access control file. The prompt information can define that a prompt text \u201cFor network authentication\u201d is displayed to the user. The obtaining  can also comprise displaying usage information on the access code usage and\/or help information, stored in the access control file.","The platform library  inputs  the obtained access code and the command to the security element; in our example to the application  in the security element. The platform library  can include the access code into the data part of the command that is issued to the security element application , but two separate commands can also be used.","Then, in the security element, in our example in the application , an action is performed according to the command, if the access code is approved by the security element.","The security element, or application , returns a response  to the platform library . The response  can include feedback (or status) information and\/or user information. Finally, the platform library  returns the response  to the installed application .","It is to be noted that the access code can be input to the security element already when the installed application starts in . In such a case, the user authentication can be in force until the installed application  is closed. The access code can also be such that it needs to be input again for each command. In both cases, the input access code may remain valid for a predetermined time period. The access code can be specific for each security element application, or several security element applications can share a common access code. The access code can also be command-specific.","The access control file  reading can also be performed when the installed application starts in . In such a case, the access control file  need not be accessed for individual commands issued to the security element , but the platform library  knows the access conditions and performs the user authentication  for the appropriate commands, for example.","It is possible that the access control file , or a reference to it, is returned after the security element application  is selected. In the security element , the application ,  must be selected, as there can be many applications , . After the selection, the selected application  processes the commands given to the security element .","In some cases, the platform library  does not know that the access code is needed, and therefore issues a command to the security element  without it. Then, the security element application  can return an error message containing the access control file  or a reference to it, whereupon the platform library  can re-issue the command after it has examined the contents of the access control file  and the access code has been obtained according to the access control file  information.","Even though the invention is described above with reference to an example according to the accompanying drawings, it is clear that the invention is not restricted thereto but it can be modified in several ways within the scope of the appended claims."],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"LIST OF DRAWINGS","p":["In the following, the invention will be described in greater detail with reference to the preferred embodiments and the accompanying drawings, in which",{"@attributes":{"id":"p-0014","num":"0013"},"figref":"FIG. 1"},{"@attributes":{"id":"p-0015","num":"0014"},"figref":"FIG. 2"},{"@attributes":{"id":"p-0016","num":"0015"},"figref":"FIG. 3"}]},"DETDESC":[{},{}]}
