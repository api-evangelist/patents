---
title: Convexification method of training neural networks and estimating regression models
abstract: A method of training neural systems and estimating regression coefficients of regression models with respect to an error criterion is disclosed. If the error criterion is a risk-averting error criterion, the invented method performs the training/estimation by starting with a small value of the risk-sensitivity index of the risk-averting error criterion and gradually increasing it to ensure numerical feasibility. If the error criterion is a risk-neutral error criterion such as a standard sum-of-squares error criterion, the invented method performs the training/estimation first with respect to a risk-averting error criterion associated with the risk-neutral error criterion. If the result is not satisfactory for the risk-neutral error criterion, further training/estimation is performed either by continuing risk-averting training/estimation with decreasing values of the associated risk-averting error criterion or by training/estimation with respect to the given risk-neutral error criterion or by both.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=07082420&OS=07082420&RS=07082420
owner: 
number: 07082420
owner_city: 
owner_country: 
publication_date: 20020713
---

{"@attributes":{"id":"description"},"GOVINT":[{},{}],"heading":["STATEMENT OF GOVERNMENT INTEREST","CROSS-REFERENCE TO RELATED APPLICATION","BACKGROUND OF THE INVENTION","SUMMARY","DESCRIPTION OF PREFERRED EMBODIMENTS"],"p":["This invention was made in part with United States Government support. The Government has certain rights in this invention.","This provisional application is related to U.S. Pat. No. 5,987,444 entitled \u201cRobust Neural Systems\u201d granted on 16 Nov. 1999.","This invention is concerned with training neural systems and estimating regression models. The invention is applicable to neural systems comprising either a neural network or a neural network and a preprocessor and\/or a postprocessor and to regression models that are either mathematical functions or dynamical systems, whose input and output variables are either continuous or discrete or both. Neural systems, neural networks and regression models are hereinafter referred to as NSs, NNs and RMs respectively. \u201cEstimating regression models\u201d means estimating regression coefficients of regression models, which is also called \u201ctraining regression models\u201d and \u201cestimating regression models.\u201d Neural systems and neural networks herein considered are artificial neural systems and artificial neural networks respectively. Neural networks and nonlinear regression models have been applied to control, communication, robotics, geophysics, sonar, radar, economics, financial markets, signal\/speech\/image processing, etc.","Neural networks are trained and nonlinear regression models are estimated usually through the minimization of an error criterion. The error criterion used is usually a nonconvex function of weights of the neural network under training or regression coefficients of the nonlinear regression model under estimation. The nonconvexity of the error criterion may cause a local-search optimization procedure to produce a poor local minimizer of the error criterion. Since a good global optimization method does not exist in the prior art and a local-search optimization method is usually used, avoiding poor local minima of the nonconvex error criterion has been a major concern with training neural networks and estimating nonlinear regression models.","A common practice for avoiding poor local minima of the error criterion is to repeat a local-search optimization procedure a certain number of times with different initial guesses of the weights or regression coefficients and selecting the neural network or nonlinear regression model that has a smallest value of the error criterion. This involves a large amount of computation, and the selected neural network or nonlinear regression model may still be far from being optimal with respect to the error criterion. Therefore, a method of training neural networks and estimating nonlinear regression models that is able to avoid poor local minima is highly desirable.","In a recent U.S. Pat. No. 5,987,444 entitled \u201cRobust Neural Systems\u201d granted 16 Nov. 1999, a robust neural system for robust processing was disclosed for averting unacceptably large or disastrous processing errors. The training methods described in U.S. Pat. No. 5,987,444 are often numerically infeasible, especially if the value of the risk-sensitivity index of the risk-averting error criterion used is large. A method of training neural networks and estimating nonlinear regression models into robust neural systems and regression models, that is numerically feasible and effective, is also highly desirable.","A new method of training neural networks and estimating nonlinear regression models and its variants are herein disclosed, that have the ability to avoid poor local minima and\/or produce robust neural systems.","A method of training a neural system, either comprising a neural network or comprising a neural network and a preprocessor or a postprocessor, is disclosed. The method comprises steps of evaluating a risk-averting error criterion; adjusting at least one weight of said neural system to reduce a value of said risk-averting error criterion; and adjusting a risk-sensitivity index of said risk-averting error criterion. A risk-averting error criterion is an error criterion that comprises an exponential function of an output of said neural system. The disclosed method usually starts with a relatively small value of the risk-sensitivity index and gradually increases it whenever necessary in the training process. The risk-sensitivity index can also be adjusted by centering and bounding the exponents in the risk-averting error criterion.","Another disclosed method of training a neural system comprises a step of training a neural system with respect to a risk-averting error criterion and a step of training said neural system with respect to a risk-neutral error criterion such as a sum-of-squares error criterion. The method usually completes the former step first and then continue with the latter step using the weights of the neural system obtained from the former step as an initial guess in a local-search optimization procedure. The former step is usually performed by steps of evaluating a risk-averting error criterion; adjusting at least one weight of said neural system to reduce a value of said risk-averting error criterion; and adjusting a risk-sensitivity index of said risk-averting error criterion. Here the step of adjusting a risk-sensitivity index of said risk-averting error criterion is usually performed by starting with a relatively small value of the risk-sensitivity index and gradually increases it whenever necessary in the training process. The risk-sensitivity index can also be adjusted by centering and bounding the exponents in the risk-averting error criterion.","Furthermore, a method of estimating a regression model is disclosed. The method comprises steps of evaluating a risk-averting error criterion; adjusting at least one regression coefficient of said regression model to reduce a value of said risk-averting error criterion; and adjusting a risk-sensitivity index of said risk-averting error criterion. A risk-averting error criterion is an error criterion that comprises an exponential function of an output of said regression model. The disclosed method usually starts with a relatively small value of the risk-sensitivity index and gradually increases it whenever necessary in the training process. The risk-sensitivity index can also be adjusted by centering and bounding the exponents in the risk-averting error criterion.","Another disclosed method of estimating a regression model comprises a step of estimating said regression model with respect to a risk-averting error criterion and a step of estimating said regression model with respect to a risk-neutral error criterion such as a sum-of-squares error criterion. The method usually completes the former step first and then continue with the latter step using the regression coefficients of said regression model obtained from the former step as an initial guess in a local-search optimization procedure. The former step is usually performed by steps of evaluating a risk-averting error criterion; adjusting at least one regression coefficient of said regression model to reduce a value of said risk-averting error criterion; and adjusting a risk-sensitivity index of said risk-averting error criterion. Here the step of adjusting a risk-sensitivity index of said risk-averting error criterion is usually performed by starting with a relatively small value of the risk-sensitivity index and gradually increases it whenever necessary in the training process. The risk-sensitivity index can also be adjusted by centering and bounding the exponents in the risk-averting error criterion.","U.S. Pat. No. 5,987,444 is hereby incorporated by reference and made a part of this disclosure. Terminologies defined in U.S. Pat. No. 5,987,444 are valid in this disclosure. However, if a terminology is herein redefined, the new definition of terminology supersedes the old from U.S. Pat. No. 5,987,444.","A noun in its plural form is sometimes used to encompass both the singular and plural forms of the same noun for brevity. The symbol \u201c:=\u201d means \u201cis defined to be.\u201d A vector is an n-tuple of real numbers, where n is a positive integer. A scalar is a one-dimensional vector. A vector-valued variable is a single-dimensional or a multiple-dimensional variable. A process is an ordered sequence of vector-valued variables with the same dimension. A sequence index is called time and denoted by t and takes on nonnegative integer values 1, 2, . . . T, where T is a finite positive integer or infinity. There may or may not be a mathematical\/statistical model for the process, which governs the evolution of the process. There may or may not be any knowledge about the relationship among the components of each vector-valued variable of the process or among the vector-valued variables at different times. A realization of a process is a sequence of the consecutive vector values of the process. If two processes denoted by x(t) and y(t), for t=1, 2, . . . , T, respectively, are related by a known and fixed function \u0192 such that y(t)=\u0192(x(t)) for t=1, 2, . . . , T, then the function \u0192 is called a static transformer of the x process. If y(t) at a current time t depends not only on x(t) but also on a preceding value, say x(t\u22121), of the x process, and\/or on the current and\/or preceding value(s) of another process, then the mapping, transversal or recursive, that effects this transformation from the x process to the y process is called a dynamic transformer of the x process.","Descriptions of neural networks and their elements and structures; example neural network paradigms; robust neural systems with only nonadaptively adjustable weights; environmental parameters and robust adaptive neural systems; and robust adaptive neural systems can be found in U.S. Pat. No. 5,987,444.","A regression model is a mathematical\/statistical model (or description) of an input-output relationship, which model is completely specified except at least one parameter, which is called a regression coefficient. Regression coefficients of a regression model are also called parameters or weights of the regression model. Input variables and output variables of a regression model are also called regressor variables and response variables respectively of the same. Values of regressor variables and response variables of a regression model are also called inputs and outputs respectively of the same. Usually, regressor variables and response variables are continuous. In this invention disclosure, regressor variables and response variables can be either continuous or discrete or partly continuous and partly discrete. Regression data is also called training data. The phrase \u201cestimating regression coefficients of a regression model\u201d is sometimes replaced with the phrase \u201ctraining a regression model,\u201d and sometimes with the phrase \u201cestimating a regression model.\u201d \u201cFitting a regression model to a regression data set\u201d is also expressed as \u201ctraining a regression model on a training data set.\u201d","In the literature, regression and classification problems are usually treated separately. However, we note that using the foregoing definition of a regression model, both the regression and classification problems are problems of estimating the regression coefficients of a regression model. Therefore, there is no distinction between classification and regression in this disclosure.","To unify our disclosure of and discussion on both training neural networks and estimating parameters of regression models, training criteria are hereinafter called error criteria. To distinguish risk-sensitive error criteria with a positive risk-sensitivity index and those with a negative risk-sensitivity index, which de-emphasize large errors instead, the former are hereinafter called risk-averting error criteria. A risk-averting error criterion is an error criterion that comprises an exponential function of the output of the neural network or regression model under training.","A neural system either comprises a neural network or comprises a neural network and a preprocessor or a postprocessor of the neural network. Training a neural system fits it to the training data. In training a neural system, its weights are determined through minimizing or reducing a training criterion, which is actually a data-fitting error criterion. Since a neural system can be viewed as a non-parametric nonlinear regression model, training a neural system can be viewed as estimating the regression coefficients of a nonparametric nonlinear regression model. To simplify the descriptions in this invention disclosure, we often discuss only neural network training. However, anyone with ordinary skill in the art will recognize that the discussions and descriptions for neural system training are equally valid for regression model estimation, regression models including linear and nonlinear models, parametric and non-parametric models, static (i.e. functional) and dynamical models, classification models and combinations thereof.","The invention disclosed is a method of training neural networks and estimating regression models, which can avoid poor local minima of a nonconvex error criterion used for said training and estimating and\/or induce robust performance. To motivate the disclosed method for avoid poor local minima of a nonconvex error criterion, two cases of training a neural network, say a multilayer perceptron, on a training data set are first discussed in the following. Note that when a feedforward neural network such as a multilayer perceptron is trained on a training data set consisting of pairs of an input value and a target output value, it is assumed that there is a functional relation between the input variable and the output variable, of which the pairs in the training data are the values (i.e. realizations) of the input and output variables. Training the multilayer perceptron on the training data is to fit the multilayer perceptron to the data and can be viewed as approximating the function represented by the training data. The two cases, which show why global minima are usually missed by a local-search optimization procedure with respect to a nonconvex error criterion, follow:\n\n","A dynamical system may have a fine feature or an under-represented segment as well. Most of the difficulties associated with training neural networks with such commonly used error criteria as the sum-of-squares (i.e. least-squares) error criterion seem to be caused by insufficient emphasis on large deviations of outputs of the neural networks from the corresponding target outputs. Then how can we, in the process of training a neural network, single out infrequent but large deviations of the neural network outputs from the corresponding target outputs and squeeze them?","In U.S. Pat. No. 5,987,444, entitled \u201cRobust Neural Systems\u201d granted on 16 Nov. 1999, risk-averting error criteria are proposed for training neural networks into robust processor. A risk-averting error criterion is either an error criterion that comprises an exponential function of some type of the distance between a target output (e.g. an output measurement) and a corresponding output of a neural system or regression model multiplied by a positive parameter denoted by \u03bb, or an error criterion that comprises an exponential function of some function of at least an output of a neural system or a regression model multiplied by a positive parameter denoted by \u03bb. The positive parameter is called the risk-sensitivity index of the risk-averting error criterion. By emphasizing large values of the error function or the deviations in an exponential manner, training a neural network with respect to a risk-averting error criterion averts such large values and thereby avoids poor local minima caused by a fine feature or an under-represented segment discussed in the foregoing cases. In fact, it has recently been proven mathematically that as the risk-sensitivity index increases, the region in the weight vector space, in which the risk-averting error criterion, is convex expands monotonically to the entire weight vector space except a subset of the union of a finite number of manifolds of a dimension less than that of the weight vector space.","To facilitate the specification and claims of this invention disclosure, all error criteria that are not a risk-averting error criterion are called risk-neutral error criteria. In other words, a risk-neutral error criterion is an error criterion that does not involve an exponential function of the deviation of a neural network output from a corresponding target output. The foregoing discussion shows that risk-averting error criteria can be used not only to induce robust performance of a neural network as disclosed in U.S. Pat. No. 5,987,444, but also help avoid poor local minima in training a neural network or a regression model. Nevertheless, the training methods described in U.S. Pat. No. 5,987,444 are often numerically infeasible, especially if the value of the risk-sensitivity index of the risk-averting error criterion used is large. The invention disclosed herein is a numerically feasible and effective method of training neural networks and estimating regression models using risk-averting error criteria. The disclosed method and its variants can produce neural networks and regression models that are optimal or nearly optimal with respect to a given risk-neutral error criterion or a given risk-averting error criterion.","Before we describe some preferred embodiments of the invented training method, let us first examine some exemplary risk-neutral error criteria and some exemplary risk-averting error criteria and describe a method of training neural systems and estimating regression models that makes use of a risk-averting error criterion with the value of its risk-sensitivity index \u03bb adjusted adaptively to avoid local minima of the given original error criterion. It has been proven that the domain, on which a risk-averting error criterion with p=2, is strictly convex, expands as the risk-sensitivity index \u03bb increases. This can be looked upon as \u201cconvexification\u201d of the original error criterion. Therefore, the method is called convexification method. Because, the risk-averting error criterion is used and its risk-sensitivity index is adaptively selected in the process of convexification, the convexification method is also called risk-averting method and adaptive risk-averting method. We note that none of the prior-art methods of training neural networks or estimating regression models changes the original error criterion. Convexifying the original error criterion is a distinct characteristic that sets the convexification method apart from the prior art.","Risk-Neutral and Risk-Averting Error Criteria","For approximating an underlying m-vector-valued function \u0192(x), let us denote the output of a neural system or the response variable of a regression model, with a weight vector w, that has just received and processed an n-vector-valued input or independent variable x by {circumflex over (\u0192)}(x, w). {circumflex over (\u0192)}(x, w) denotes also the neural network with the weight vector w or the regression model with the regression coefficient vector w. A risk-neutral error criterion, called an Lerror criterion, is",{"@attributes":{"id":"p-0038","num":"0039"},"maths":{"@attributes":{"id":"MATH-US-00001","num":"00001"},"math":{"@attributes":{"overflow":"scroll"},"mtable":{"mtr":{"mtd":[{"mrow":{"mrow":[{"msub":{"mi":["L","p"]},"mo":"\u2061","mrow":{"mo":["(",")"],"mi":"w"}},{"mfrac":{"mn":"1","mi":"K"},"mo":"\u2062","mrow":{"munderover":{"mo":"\u2211","mrow":{"mi":"k","mo":"=","mn":"1"},"mi":"K"},"mo":["\u2062","\u2062"],"mstyle":{"mspace":{"@attributes":{"width":"0.3em","height":"0.3ex"}}},"msubsup":{"mrow":{"mo":["\uf605","\uf606"],"mrow":{"msub":{"mi":["y","k"]},"mo":"-","mrow":{"mover":{"mi":"f","mo":"^"},"mo":"\u2061","mrow":{"mo":["(",")"],"mrow":{"msub":{"mi":"x","mrow":{"mi":"k","mo":","}},"mo":"\u2062","mi":"w"}}}}},"mi":["p","p"]}}}],"mo":"-"}},{"mrow":{"mo":["(",")"],"mn":"1"}}]}}}},"br":{}},{"@attributes":{"id":"p-0039","num":"0040"},"maths":{"@attributes":{"id":"MATH-US-00002","num":"00002"},"math":{"@attributes":{"overflow":"scroll"},"mtable":{"mtr":{"mtd":[{"mrow":{"mrow":[{"msub":{"mi":"J","mrow":{"mi":["\u03bb","p"],"mo":","}},"mo":"\u2061","mrow":{"mo":["(",")"],"mi":"w"}},{"mfrac":{"mn":"1","mi":"K"},"mo":"\u2062","mrow":{"munderover":{"mo":"\u2211","mrow":{"mi":"k","mo":"=","mn":"1"},"mi":"K"},"mo":"\u2062","mrow":{"mi":"exp","mo":"\u2061","mrow":{"mo":["[","]"],"mrow":{"mi":"\u03bb","mo":"\u2062","msubsup":{"mrow":{"mo":["\uf605","\uf606"],"mrow":{"msub":{"mi":["y","k"]},"mo":"-","mrow":{"mover":{"mi":"f","mo":"^"},"mo":"\u2061","mrow":{"mo":["(",")"],"mrow":{"msub":{"mi":"x","mrow":{"mi":"k","mo":","}},"mo":"\u2062","mi":"w"}}}}},"mi":["p","p"]}}}}}}],"mo":"="}},{"mrow":{"mo":["(",")"],"mn":"2"}}]}}}},"br":{},"sub":["p ","p ","k","k","k ","k","k ","k ","k","k","k","k ","k ","k","k","\u03bb,2","k","k","k","k","k","k","2 ","k","k","p ","k","k","p "],"sup":["m","m "]},"Notice that J(w) is obtained from L(w) by simply exponentiating each Lnorm \u2225y\u2212{circumflex over (\u0192)}(x, w)\u2225in L(w). L(w) is called the associated risk-neutral error criterion of the risk-averting error criterion J(w), and J(w) is called the associated risk-averting error criterion of the risk-neutral error criterion L(w).","Note that the Lerror criterion L(w) is a standard sum-of-squares error criterion. The deviation y\u2212{circumflex over (\u0192)}(x, w) of the output {circumflex over (\u0192)}(x, w) of the neural system or the regression model with weight vector w from the corresponding output measurement y(is sometimes denoted by e(k, w). Using this notation, an important alternative to J(w)",{"@attributes":{"id":"p-0042","num":"0043"},"maths":{"@attributes":{"id":"MATH-US-00003","num":"00003"},"math":{"@attributes":{"overflow":"scroll"},"mtable":{"mtr":{"mtd":[{"mrow":{"mrow":[{"msub":{"mi":["J","\u03bb"]},"mo":"\u2061","mrow":{"mo":["(",")"],"mi":"w"}},{"mfrac":{"mn":"1","mi":"K"},"mo":"\u2062","mrow":{"munderover":{"mo":"\u2211","mrow":{"mi":"k","mo":"=","mn":"1"},"mi":"K"},"mo":"\u2062","mrow":{"mi":"exp","mo":"\u2061","mrow":{"mo":["[","]"],"mrow":{"mi":["\u03bb","Q"],"mo":["\u2062","\u2062","\u2062","\u2062","\u2062"],"mstyle":[{"mspace":{"@attributes":{"width":"0.3em","height":"0.3ex"}}},{"mspace":{"@attributes":{"width":"0.3em","height":"0.3ex"}}}],"mrow":[{"msup":{"mi":["\u2147","T"]},"mo":"\u2061","mrow":{"mo":["(",")"],"mrow":{"mi":["k","w"],"mo":","}}},{"mi":"e","mo":"\u2061","mrow":{"mo":["(",")"],"mrow":{"mi":["k","w"],"mo":","}}}]}}}}}],"mo":"="}},{"mrow":{"mo":["(",")"],"mn":"3"}}]}}}},"br":{},"sub":["k","k","k","k","\u03bb","\u03bb,2"],"sup":["1\/2","1\/2","1\/2"]},"In some applications, the cost of a deviation y\u2212{circumflex over (\u0192)}(x, w) depends on the output measurement yinvolved. In such a case, an exemplary risk-averting error criterion is",{"@attributes":{"id":"p-0044","num":"0045"},"maths":{"@attributes":{"id":"MATH-US-00004","num":"00004"},"math":{"@attributes":{"overflow":"scroll"},"mtable":{"mtr":{"mtd":[{"mrow":{"mrow":[{"msub":{"mi":["J","\u03bb"]},"mo":"\u2061","mrow":{"mo":["(",")"],"mi":"w"}},{"mfrac":{"mn":"1","mi":"K"},"mo":"\u2062","mrow":{"munderover":{"mo":"\u2211","mrow":{"mi":"k","mo":"=","mn":"1"},"mi":"K"},"mo":"\u2062","mrow":{"mi":"exp","mo":"\u2061","mrow":{"mo":["[","]"],"mrow":{"mrow":[{"mi":"\u03bb\u03c6","mo":"\u2061","mrow":{"mo":["(",")"],"msub":{"mi":["y","k"]}}},{"msup":{"mi":["e","T"]},"mo":"\u2061","mrow":{"mo":["(",")"],"mrow":{"mi":["k","w"],"mo":","}}},{"mi":"e","mo":"\u2061","mrow":{"mo":["(",")"],"mrow":{"mi":["k","w"],"mo":","}}}],"mo":["\u2062","\u2062","\u2062","\u2062"],"mi":"Q","mstyle":{"mspace":{"@attributes":{"width":"0.3em","height":"0.3ex"}}}}}}}}],"mo":"="}},{"mrow":{"mo":["(",")"],"mn":"4"}}]}}}},"br":{},"sub":["k","k"]},"If the error that the neural system or the regression model causes for an application for the input xis a function \u03c1(z, {circumflex over (\u0192)}(x, w)) of {circumflex over (\u0192)}(x, w) and z, that is an effect of the input xon the operating environment of the neural system or the regression model, then a risk-neutral error criterion is",{"@attributes":{"id":"p-0046","num":"0047"},"maths":{"@attributes":{"id":"MATH-US-00005","num":"00005"},"math":{"@attributes":{"overflow":"scroll"},"mtable":{"mtr":{"mtd":[{"mrow":{"mrow":[{"mi":"L","mo":"\u2061","mrow":{"mo":["(",")"],"mi":"w"}},{"mfrac":{"mn":"1","mi":"K"},"mo":"\u2062","mrow":{"munderover":{"mo":"\u2211","mrow":{"mi":"k","mo":"=","mn":"1"},"mi":"K"},"mo":"\u2062","mrow":{"mi":"\u03c1","mo":"\u2061","mrow":{"mo":["(",")"],"mrow":{"msub":{"mi":["z","k"]},"mo":",","mrow":{"mover":{"mi":"f","mo":"^"},"mo":"\u2061","mrow":{"mo":["(",")"],"mrow":{"msub":{"mi":["x","k"]},"mo":",","mi":"w"}}}}}}}}],"mo":"="}},{"mrow":{"mo":["(",")"],"mn":"5"}}]}}}},"br":{}},{"@attributes":{"id":"p-0047","num":"0048"},"maths":{"@attributes":{"id":"MATH-US-00006","num":"00006"},"math":{"@attributes":{"overflow":"scroll"},"mtable":{"mtr":{"mtd":[{"mrow":{"mrow":[{"msub":{"mi":["J","\u03bb"]},"mo":"\u2061","mrow":{"mo":["(",")"],"mi":"w"}},{"mfrac":{"mn":"1","mi":"K"},"mo":"\u2062","mrow":{"munderover":{"mo":"\u2211","mrow":{"mi":"k","mo":"=","mn":"1"},"mi":"K"},"mo":"\u2062","mrow":{"mi":"exp","mo":"\u2061","mrow":{"mo":["[","]"],"mrow":{"mi":"\u03bb\u03c1","mo":"\u2061","mrow":{"mo":["(",")"],"mrow":{"msub":{"mi":["z","k"]},"mo":",","mrow":{"mover":{"mi":"f","mo":"^"},"mo":"\u2061","mrow":{"mo":["(",")"],"mrow":{"msub":{"mi":["x","k"]},"mo":",","mi":"w"}}}}}}}}}}],"mo":"="}},{"mrow":{"mo":["(",")"],"mn":"6"}}]}}}},"br":{},"sub":["k","k"]},"For approximating an underlying dynamical system,\n\n=\u0192(, \u03be)\u2003\u2003(7)\n\nwhere xand zare the n-vector-valued input process and m-vector-valued output process of the dynamical system; s and q are two positive integers; and \u03bedenotes a random driver process, we denote the output of the recurrent neural system with a weight vector w or the response of a dynamical regression model with a parameter vector w (i.e. vector of regression coefficients), that has been initialized (i.e. with the initial dynamical state of the neural system or regression model set properly) for time  and has received the input sequence,\n",{"@attributes":{"id":"p-0049","num":"0050"},"maths":{"@attributes":{"id":"MATH-US-00007","num":"00007"},"math":{"@attributes":{"overflow":"scroll"},"mrow":{"mrow":{"mrow":{"msup":{"mi":["x","i"]},"mo":"\u2062","mstyle":{"mtext":":"}},"mo":"=","msup":{"mrow":{"mo":["[","]"],"mrow":{"msubsup":[{"mi":["x","i","T"]},{"mi":["x","T"],"mrow":{"mi":["i","r"],"mo":"-"}}],"mo":[",","\u2062",","],"mi":"\u2026","mstyle":{"mspace":{"@attributes":{"width":"0.6em","height":"0.6ex"}}}}},"mi":"T"}},"mo":","}}},"br":{},"sup":["k","k","i "],"sub":["k ","p "]},{"@attributes":{"id":"p-0050","num":"0051"},"maths":{"@attributes":{"id":"MATH-US-00008","num":"00008"},"math":{"@attributes":{"overflow":"scroll"},"mtable":{"mtr":{"mtd":[{"mrow":{"mrow":[{"msub":{"mi":["L","p"]},"mo":"\u2061","mrow":{"mo":["(",")"],"mi":"w"}},{"munder":{"mo":"\u2211","mrow":{"mi":["\u03c9","S"],"mo":"\u2208"}},"mo":"\u2062","mrow":{"munderover":{"mo":"\u2211","mrow":{"mi":"k","mo":"=","mn":"1"},"mi":"K"},"mo":["\u2062","\u2062"],"mstyle":{"mspace":{"@attributes":{"width":"0.3em","height":"0.3ex"}}},"msubsup":{"mrow":{"mo":["\uf605","\uf606"],"mrow":{"mrow":[{"msub":{"mi":["y","k"]},"mo":"\u2061","mrow":{"mo":["(",")"],"mi":"\u03c9"}},{"mover":{"mi":"f","mo":"^"},"mo":"\u2061","mrow":{"mo":["(",")"],"mrow":{"mrow":{"msup":{"mi":["x","k"]},"mo":"\u2061","mrow":{"mo":["(",")"],"mi":"\u03c9"}},"mo":",","mi":"w"}}}],"mo":"-"}},"mi":["p","p"]}}}],"mo":["\u2062","\u2062"],"mfrac":{"mn":"1","mrow":{"mi":"K","mo":"\u2062","mrow":{"mo":["\uf603","\uf604"],"mi":"S"}}}}},{"mrow":{"mo":["(",")"],"mn":"8"}}]}}}},"br":{}},{"@attributes":{"id":"p-0051","num":"0052"},"maths":{"@attributes":{"id":"MATH-US-00009","num":"00009"},"math":{"@attributes":{"overflow":"scroll"},"mtable":{"mtr":{"mtd":[{"mrow":{"mrow":[{"msub":{"mi":"J","mrow":{"mi":["\u03bb","p"],"mo":","}},"mo":"\u2061","mrow":{"mo":["(",")"],"mi":"w"}},{"mfrac":{"mn":"1","mrow":{"mi":"K","mo":"\u2062","mrow":{"mo":["\uf603","\uf604"],"mi":"S"}}},"mo":"\u2062","mrow":{"munder":{"mo":"\u2211","mrow":{"mi":["\u03c9","S"],"mo":"\u2208"}},"mo":"\u2062","mrow":{"munderover":{"mo":"\u2211","mrow":{"mi":"k","mo":"=","mn":"1"},"mi":"K"},"mo":"\u2062","mrow":{"mi":"exp","mo":"\u2061","mrow":{"mo":["[","]"],"mrow":{"mi":"\u03bb","mo":["\u2062","\u2062"],"mstyle":{"mspace":{"@attributes":{"width":"0.3em","height":"0.3ex"}}},"msubsup":{"mrow":{"mo":["\uf605","\uf606"],"mrow":{"mrow":[{"msub":{"mi":["y","k"]},"mo":"\u2061","mrow":{"mo":["(",")"],"mi":"\u03c9"}},{"mover":{"mi":"f","mo":"^"},"mo":"\u2061","mrow":{"mo":["(",")"],"mrow":{"mrow":{"msup":{"mi":["x","k"]},"mo":"\u2061","mrow":{"mo":["(",")"],"mi":"\u03c9"}},"mo":",","mi":"w"}}}],"mo":"-"}},"mi":["p","p"]}}}}}}}],"mo":"="}},{"mrow":{"mo":["(",")"],"mn":"9"}}]}}}},"br":{},"sup":["k","k","k","k"],"sub":["k","k","k","k ","k","k","k","k ","k","k","k ","k","k ","\u03bb,2"]},"If the cost of a deviation y(\u03c9)\u2212{circumflex over (\u0192)}(x(\u03c9), w) depends on the output measurement y(\u03c9) involved, an exemplary risk-averting error criterion is",{"@attributes":{"id":"p-0053","num":"0054"},"maths":{"@attributes":{"id":"MATH-US-00010","num":"00010"},"math":{"@attributes":{"overflow":"scroll"},"mtable":{"mtr":{"mtd":[{"mrow":{"mrow":[{"msub":{"mi":"J","mrow":{"mi":["\u03bb","p"],"mo":","}},"mo":"\u2061","mrow":{"mo":["(",")"],"mi":"w"}},{"mfrac":{"mn":"1","mrow":{"mi":"K","mo":"\u2062","mrow":{"mo":["\uf603","\uf604"],"mi":"S"}}},"mo":"\u2062","mrow":{"munder":{"mo":"\u2211","mrow":{"mi":["\u03c9","S"],"mo":"\u2208"}},"mo":"\u2062","mrow":{"munderover":{"mo":"\u2211","mrow":{"mi":"k","mo":"=","mn":"1"},"mi":"K"},"mo":"\u2062","mrow":{"mi":"exp","mo":"\u2061","mrow":{"mo":["[","]"],"mrow":{"mi":"\u03bb\u03c6","mo":["\u2062","\u2062","\u2062"],"mstyle":{"mspace":{"@attributes":{"width":"0.3em","height":"0.3ex"}}},"mrow":{"mo":["(",")"],"mrow":{"msub":{"mi":["y","k"]},"mo":"\u2061","mrow":{"mo":["(",")"],"mi":"\u03c9"}}},"msubsup":{"mrow":{"mo":["\uf605","\uf606"],"mrow":{"mrow":[{"msub":{"mi":["y","k"]},"mo":"\u2061","mrow":{"mo":["(",")"],"mi":"\u03c9"}},{"mover":{"mi":"f","mo":"^"},"mo":"\u2061","mrow":{"mo":["(",")"],"mrow":{"mrow":{"msup":{"mi":["x","k"]},"mo":"\u2061","mrow":{"mo":["(",")"],"mi":"\u03c9"}},"mo":",","mi":"w"}}}],"mo":"-"}},"mi":["p","p"]}}}}}}}],"mo":"="}},{"mrow":{"mo":["(",")"],"mn":"10"}}]}}}},"br":{},"sub":["k","k"]},"An alternative to J(w) in (9) is",{"@attributes":{"id":"p-0055","num":"0056"},"maths":{"@attributes":{"id":"MATH-US-00011","num":"00011"},"math":{"@attributes":{"overflow":"scroll"},"mtable":{"mtr":{"mtd":[{"mrow":{"mrow":[{"msub":{"mi":"J","mrow":{"mi":["\u03bb","p"],"mo":","}},"mo":"\u2061","mrow":{"mo":["(",")"],"mi":"w"}},{"mfrac":{"mn":"1","mrow":{"mi":"K","mo":"\u2062","mrow":{"mo":["\uf603","\uf604"],"mi":"S"}}},"mo":"\u2062","mrow":{"munder":{"mo":"\u2211","mrow":{"mi":["\u03c9","S"],"mo":"\u2208"}},"mo":["\u2062","\u2062"],"mstyle":{"mspace":{"@attributes":{"width":"0.3em","height":"0.3ex"}}},"mrow":{"mi":"exp","mo":"\u2062","mrow":{"munderover":{"mo":"\u2211","mrow":{"mi":"k","mo":"=","mn":"1"},"mi":"K"},"mo":"\u2062","mrow":{"mo":["[","]"],"mrow":{"mi":"\u03bb","mo":"\u2062","msubsup":{"mrow":{"mo":["\uf605","\uf606"],"mrow":{"mrow":[{"msub":{"mi":["y","k"]},"mo":"\u2061","mrow":{"mo":["(",")"],"mi":"\u03c9"}},{"mover":{"mi":"f","mo":"^"},"mo":"\u2061","mrow":{"mo":["(",")"],"mrow":{"mrow":{"msup":{"mi":["x","k"]},"mo":"\u2061","mrow":{"mo":["(",")"],"mi":"\u03c9"}},"mo":",","mi":"w"}}}],"mo":"-"}},"mi":["p","p"]}}}}}}}],"mo":"="}},{"mrow":{"mo":["(",")"],"mn":"11"}}]}}}}},"If the error that the neural system or the regression model causes for an application for the input xis a function \u03c1(z, {circumflex over (\u0192)}(x, w)) of {circumflex over (\u0192)}(x, w) and z, that is an effect of the input sequence xon the operating environment of the neural system or the regression model, then a risk-neutral error criterion is",{"@attributes":{"id":"p-0057","num":"0058"},"maths":{"@attributes":{"id":"MATH-US-00012","num":"00012"},"math":{"@attributes":{"overflow":"scroll"},"mtable":{"mtr":{"mtd":[{"mrow":{"mrow":[{"mi":"L","mo":"\u2061","mrow":{"mo":["(",")"],"mi":"w"}},{"mfrac":{"mn":"1","mrow":{"mi":"K","mo":"\u2062","mrow":{"mo":["\uf603","\uf604"],"mi":"S"}}},"mo":"\u2062","mrow":{"munder":{"mo":"\u2211","mrow":{"mi":["\u03c9","S"],"mo":"\u2208"}},"mo":"\u2062","mrow":{"munderover":{"mo":"\u2211","mrow":{"mi":"k","mo":"=","mn":"1"},"mi":"K"},"mo":"\u2062","mrow":{"mi":"\u03c1","mo":"\u2061","mrow":{"mo":["(",")"],"mrow":{"mrow":[{"msub":{"mi":["z","k"]},"mo":"\u2061","mrow":{"mo":["(",")"],"mi":"\u03c9"}},{"mover":{"mi":"f","mo":"^"},"mo":"\u2061","mrow":{"mo":["(",")"],"mrow":{"mrow":{"msup":{"mi":["x","k"]},"mo":"\u2061","mrow":{"mo":["(",")"],"mi":"\u03c9"}},"mo":",","mi":"w"}}}],"mo":","}}}}}}],"mo":"="}},{"mrow":{"mo":["(",")"],"mn":"12"}}]}}}},"br":{}},{"@attributes":{"id":"p-0058","num":"0059"},"maths":{"@attributes":{"id":"MATH-US-00013","num":"00013"},"math":{"@attributes":{"overflow":"scroll"},"mtable":{"mtr":{"mtd":[{"mrow":{"mrow":[{"msub":{"mi":["J","\u03bb"]},"mo":"\u2061","mrow":{"mo":["(",")"],"mi":"w"}},{"mfrac":{"mn":"1","mrow":{"mi":"K","mo":"\u2062","mrow":{"mo":["\uf603","\uf604"],"mi":"S"}}},"mo":"\u2062","mrow":{"munder":{"mo":"\u2211","mrow":{"mi":["\u03c9","S"],"mo":"\u2208"}},"mo":"\u2062","mrow":{"munderover":{"mo":"\u2211","mrow":{"mi":"k","mo":"=","mn":"1"},"mi":"K"},"mo":"\u2062","mrow":{"mi":"exp","mo":"\u2061","mrow":{"mo":["[","]"],"mrow":{"mi":"\u03bb\u03c1","mo":"\u2061","mrow":{"mo":["(",")"],"mrow":{"mrow":[{"msub":{"mi":["z","k"]},"mo":"\u2061","mrow":{"mo":["(",")"],"mi":"\u03c9"}},{"mover":{"mi":"f","mo":"^"},"mo":"\u2061","mrow":{"mo":["(",")"],"mrow":{"mrow":{"msup":{"mi":["x","k"]},"mo":"\u2061","mrow":{"mo":["(",")"],"mi":"\u03c9"}},"mo":",","mi":"w"}}}],"mo":","}}}}}}}}],"mo":"="}},{"mrow":{"mo":["(",")"],"mn":"13"}}]}}}},"br":{},"sup":"k","sub":["k","k","k"]},"An example of the function or distance is the squared deviation",{"@attributes":{"id":"p-0060","num":"0061"},"maths":{"@attributes":{"id":"MATH-US-00014","num":"00014"},"math":{"@attributes":{"overflow":"scroll"},"msubsup":{"mrow":{"mo":["\uf605","\uf606"],"mrow":{"mrow":[{"msub":{"mi":["y","k"]},"mo":"\u2061","mrow":{"mo":["(",")"],"mi":"\u03c9"}},{"mover":{"mi":"f","mo":"^"},"mo":"\u2061","mrow":{"mo":["(",")"],"mrow":{"mrow":{"msup":{"mi":["x","k"]},"mo":"\u2061","mrow":{"mo":["(",")"],"mi":"\u03c9"}},"mo":",","mi":"w"}}}],"mo":"-"}},"mn":["2","2"]}}},"br":{}},"It is understood that many equivalent forms of the order-(\u03bb, p) risk-averting error criteria exist. For instance,",{"@attributes":{"id":"p-0062","num":"0063"},"maths":{"@attributes":{"id":"MATH-US-00015","num":"00015"},"math":{"@attributes":{"overflow":"scroll"},"mtable":{"mtr":{"mtd":[{"mrow":{"mrow":[{"msub":{"mi":"q","mrow":{"mi":"\u03bb","mo":",","mn":"2"}},"mo":"\u2061","mrow":{"mo":["(",")"],"mi":"w"}},{"mfrac":{"mn":"1","mi":"K"},"mo":"\u2062","mrow":{"munderover":{"mo":"\u2211","mrow":{"mi":"k","mo":"=","mn":"1"},"mi":"K"},"mo":["\u2062","\u2062"],"mstyle":{"mspace":{"@attributes":{"width":"0.3em","height":"0.3ex"}}},"msup":{"mi":"c","mrow":{"mo":["[","]"],"mrow":{"mi":"\u03bb","mo":"\u2062","msubsup":{"mrow":{"mo":["\uf605","\uf606"],"mrow":{"msub":{"mi":["y","k"]},"mo":"-","mrow":{"mover":{"mi":"f","mo":"^"},"mo":"\u2061","mrow":{"mo":["(",")"],"mrow":{"msub":{"mi":["x","k"]},"mo":",","mi":"\u03c9"}}}}},"mn":["2","2"]}}}}}}],"mo":"="}},{"mrow":{"mo":["(",")"],"mn":"14"}}]}}}},"br":{}},{"@attributes":{"id":"p-0063","num":"0064"},"maths":{"@attributes":{"id":"MATH-US-00016","num":"00016"},"math":{"@attributes":{"overflow":"scroll"},"mrow":{"msub":{"mstyle":{"mspace":{"@attributes":{"width":"0.3em","height":"0.3ex"}}},"mi":"c"},"mo":"\u2062","mrow":{"mo":["[","]"],"mrow":{"mi":"\u03bb","mo":"\u2062","msubsup":{"mrow":{"mo":["\uf605","\uf606"],"mrow":{"mrow":{"msub":{"mi":["y","k"]},"mo":"-","mrow":{"mover":{"mi":"f","mo":"^"},"mo":"\u2061","mrow":{"mo":["(",")"],"mrow":{"msub":{"mi":["x","k"]},"mo":",","mi":"\u03c9"}}}},"mo":",","mi":"w"}},"mn":["2","2"]}}}}}},"br":{}},{"@attributes":{"id":"p-0064","num":"0065"},"maths":{"@attributes":{"id":"MATH-US-00017","num":"00017"},"math":{"@attributes":{"overflow":"scroll"},"msubsup":{"mrow":{"mo":["\uf605","\uf606"],"mrow":{"mrow":{"msub":{"mi":["y","k"]},"mo":"-","mrow":{"mover":{"mi":"f","mo":"^"},"mo":"\u2061","mrow":{"mo":["(",")"],"mrow":{"msub":{"mi":["x","k"]},"mo":",","mi":"\u03c9"}}}},"mo":",","mi":"w"}},"mn":["2","2"]}}},"br":{},"sub":["k","k","\u03bb,2"]},"Multiplying a risk-averting error criterion by a normalizing constant or any constant yields another risk-averting error criterion. In fact, anyone with an ordinary skill in the art can use the definition of a risk-averting error criterion to construct or identify innumerable variants of risk-averting error criteria.","Training\/Estimating wrt Risk-Averting Error Criteria","A risk-averting error criterion emphasizes large deviations of outputs of a neural system or a regression model from corresponding output measurements in an exponential manner, and whereby avert unacceptable or disastrous deviations and whereby induces robust performance of the neural system or the regression model. Obviously, the larger the risk-sensitivity index \u03bb is, the more the large deviations are emphasized.","It has recently been proven that the domain, on which a risk-averting error criterion, (3) or (9) with p=2, is strictly convex, expands as the risk-sensitivity index \u03bb increases. It has also been proven that increasing the risk-sensitivity index during training a neural network or estimating the regression coefficients of a regression model reduces the maximum absolute deviations of the outputs of the neural network or the regression model from the corresponding target outputs.","Therefore, using risk-averting error criteria in training a neural network or estimating a regression model has the dual benefits of avoiding poor local minima and inducing robust performance. However, the methods described in U.S. Pat. No. 5,987,444 for training neural networks with respect to a risk-averting error criterion with a fixed value of the risk-sensitivity index are often numerically infeasible, especially if the value of the risk-sensitivity index of the risk-averting error criterion used is large. The numerical infeasibility is caused by the excessively large numbers involved in evaluating the risk-averting error criterion, which is usually a sum of exponential functions.","If a neural network is to be trained (or a regression model is to be estimated) with respect to a risk-averting error criterion with a given value of the risk-sensitivity index \u03bb, we train, in an embodiment of the invention herein disclosed, the neural network (or estimate a regression model) with respect to the risk-averting error criterion by starting with a small value of \u03bb and gradually increasing the value of \u03bb to the given value. At the beginning of the training, the squared errors are large, the value of \u03bb is set so small that the squared errors multiplied by \u03bb are so small that their exponentiated values are still small enough for the computer to handle. In the process of training, the squared errors decrease, and the value of \u03bb is allowed to be gradually increased without causing a value of an exponential function in the risk-averting error criterion to be so large that cannot be handled by the computer. The centering and bounding techniques discussed in the sequel can also be used to keep the exponents in the risk-averting error criterion manageable by the computer.","If a neural network is to be trained with respect to a risk-neutral error criterion, we train, in another embodiment of the invention herein disclosed, the neural network (or estimate a regression model) by employing the risk-averting error criterion associated with the given risk-neutral error criterion. The risk-sensitivity index \u03bb of the associated risk-neutral error criterion is set to be a small value at the beginning of the training and gradually increased to a selected value suitable for the training data. A convexification method that adaptively selects the value of \u03bb will be described momentarily. If a neural network is to be trained with respect to a risk-averting error criterion without a given value of the risk-sensitivity index \u03bb, the convexification method can also be applied.","After the training by the convexification method is completed, if the exponents in the associated risk-averting error criterion (e.g. products of the risk-sensitivity index and the squared errors",{"@attributes":{"id":"p-0072","num":"0073"},"maths":{"@attributes":{"id":"MATH-US-00018","num":"00018"},"math":{"@attributes":{"overflow":"scroll"},"mrow":{"mrow":{"mi":"\u03bb","mo":"\u2062","msubsup":{"mrow":{"mo":["\uf605","\uf606"],"mrow":{"msub":{"mi":["y","k"]},"mo":"-","mrow":{"mover":{"mi":"f","mo":"^"},"mo":"\u2061","mrow":{"mo":["(",")"],"mrow":{"msub":{"mi":["x","k"]},"mo":",","mi":"\u03c9"}}}}},"mn":["2","2"]}},"mo":","}}},"br":{}},{"@attributes":{"id":"p-0073","num":"0074"},"maths":{"@attributes":{"id":"MATH-US-00019","num":"00019"},"math":{"@attributes":{"overflow":"scroll"},"mrow":{"mo":["(",")"],"mrow":{"mi":["e","g"],"mo":[".",".","\u2062"],"mstyle":{"mspace":{"@attributes":{"width":"0.8em","height":"0.8ex"}}},"mrow":{"mi":"exp","mo":"\u2061","mrow":{"mo":["[","]"],"mrow":{"mi":"\u03bb","mo":"\u2062","msubsup":{"mrow":{"mo":["\uf605","\uf606"],"mrow":{"msub":{"mi":["y","k"]},"mo":"-","mrow":{"mover":{"mi":"f","mo":"^"},"mo":"\u2061","mrow":{"mo":["(",")"],"mrow":{"msub":{"mi":["x","k"]},"mo":",","mi":"\u03c9"}}}}},"mn":["2","2"]}}}}}}}},"br":{}},{"@attributes":{"id":"p-0074","num":"0075"},"maths":{"@attributes":{"id":"MATH-US-00020","num":"00020"},"math":{"@attributes":{"overflow":"scroll"},"mrow":{"mrow":{"mo":["(",")"],"mrow":{"mrow":[{"mi":["e","g"],"mo":[".",".","\u2062"],"mstyle":{"mspace":{"@attributes":{"width":"0.8em","height":"0.8ex"}}},"mn":"1"},{"mi":"\u03bb","mo":"\u2062","msubsup":{"mrow":{"mo":["\uf605","\uf606"],"mrow":{"msub":{"mi":["y","k"]},"mo":"-","mrow":{"mover":{"mi":"f","mo":"^"},"mo":"\u2061","mrow":{"mo":["(",")"],"mrow":{"msub":{"mi":["x","k"]},"mo":",","mi":"\u03c9"}}}}},"mn":["2","2"]}}],"mo":"+"}},"mo":","}}},"br":{}},{"@attributes":{"id":"p-0075","num":"0076"},"maths":{"@attributes":{"id":"MATH-US-00021","num":"00021"},"math":{"@attributes":{"overflow":"scroll"},"mrow":{"mrow":{"mo":["(",")"],"mrow":{"mstyle":[{"mtext":"e.g. "},{"mspace":{"@attributes":{"width":"0.3em","height":"0.3ex"}}}],"mo":["\u2062","\u2062","\u2062"],"mfrac":{"mn":"1","mi":"K"},"mrow":{"munderover":{"mo":"\u2211","mrow":{"mi":"k","mo":"=","mn":"1"},"mi":"K"},"mo":"\u2062","msubsup":{"mrow":{"mo":["\uf605","\uf606"],"mrow":{"msub":{"mi":["y","k"]},"mo":"-","mrow":{"mover":{"mi":"f","mo":"^"},"mo":"\u2061","mrow":{"mo":["(",")"],"mrow":{"msub":{"mi":["x","k"]},"mo":",","mi":"\u03c9"}}}}},"mn":["2","2"]}}}},"mo":"."}}}},"However, if the exponents in the associated risk-averting error criterion are not small, and the associated risk-averting error criterion is not very close to the associated risk-neutral error criterion plus 1, then the neural network obtained from training with respect to the associated risk-averting error criterion is usually not good enough for the original risk-neutral error criterion. Further training with respect to the original risk-neutral error criterion is necessary and discussed in the sequel.","We now describe the foregoing convexification method:","If there are output measurement noises \u03b5\u22600 in the training data, too large a risk-sensitivity index may over-emphasize large output measurement noises and distort the neural system or regression model under training. Moreover, too large a risk-sensitivity index may cause numerical problems, when the deviations of outputs of a neural system or a regression model from corresponding output measurements are large.","Therefore, the value of the risk-sensitivity index \u03bb must be small enough not to cause much of these noise-fitting and numerical problems, but large enough to induce robust performance of the neural system or regression model under training. Then how should the value of \u03bb in a risk-averting training criterion be chosen for a training data set?","The disclosed convexification method of training neural networks and estimating regression models selects the value of the risk-sensitivity index \u03bb adaptively and determines the weight vector of the neural network under training or the regression model under estimation that is optimal or nearly optimal with respect to the risk-averting error criterion with the selected value of \u03bb.","At the beginning of a training (or estimation) session, the neural network under training or the regression model under estimation has not experienced much training, and the deviations (e.g. e(k, w) in (2) and e(k, w, \u03c9) in (9)) are usually very large in absolute value. A large initial value of \u03bb often causes numerical problem in the training. Besides, we do not want to start with a value of \u03bb that is already larger than necessary for the purpose of using a risk-averting error criterion. From these two points of view, we should start the training with a small value of \u03bb.","After an initial value of \u03bb is selected and then after a certain number, say 100, of training epochs, an epoch being an adjustment of all the weights of the neural system or the regression model for the entire training data set, if there is still an absolute deviation d(e.g. d:=|y\u2212{circumflex over (\u0192)}(x, w)| in (2) and d:=|y(\u03c9)\u2212{circumflex over (\u0192)}(x(\u03c9), w) in (9)) that is unacceptably large, then the value of \u03bb is increase by a small percentage, say 10% to 20%.","Thereafter, we start and repeat the cycle of the four steps:\n\n","Throughout the training, a cross validation procedure is used to monitor the training status. As soon as the cross validation procedure detects over-fitting, the training is stopped. A measure of the status is the maximum of absolute deviations over all the input\/output pairs in the cross validation data set V. Another measure is the value of the risk-averting criterion for the cross validation data V. Whenever it becomes clear that a chosen measure starts to increase monotonically, the training is stopped to prevent noise-fitting or data-overfitting. This stopping rule based on cross validation is expected to enable the training method to handle training data with larger unbiased measurement noises.","Of course, the training is also stopped, when J(w) and the standard Lerror criterion decrease at an extremely slow rate or when the required approximation accuracy is achieved.","How do we decide if an absolute deviation d(e.g. d:=|y\u2212{circumflex over (\u0192)}(x, w) | in (2) and d:=|y(\u03c9)\u2212{circumflex over (\u0192)}(x(\u03c9), w) | in (9)) is \u201cunacceptably large?\u201d Note that if a neural system of an adequate size or a regression model is properly trained to approximate \u0192, it is reasonable to assume that the deviations, comprising the function approximation errors (e.g. \u0192(x)\u2212{circumflex over (\u0192)}(x, w) in (2) and y(\u03c9)\u2212{circumflex over (\u0192)}(x(\u03c9), w) in (9)) and the measurement noises Ek, have an approximately normal distribution. Without knowing if the training is completed and successful, we use the 68 percentile pof the absolute deviations d, k=1, . . . , K, as an estimate of the standard deviation of the deviations excluding those \u201cunacceptably large\u201d deviations. Here it is assumed that the number of training i\/o pairs corresponding to the \u201cunacceptably large\u201d deviations do not exceed 32% of the training data. Under the normal distribution assumption, the probability of an absolute deviation dexceeding 3pis 0.0026. This probability is so small that an absolute deviation dexceeding 3pis regarded as \u201cunacceptably large.\u201d Of course, 68 percentile and the threshold 3pcan be changed to suit special applications.","As mentioned above, every time the value of \u03bb is increased, it is increased by a small amount. The amount must be small to avoid \u03bb leaping to an unnecessarily large value, which may cause numerical infeasibility or improper emphasis on the largest measurement noises. However, because each increment in the value of \u03bb is small, its effect on the training may not show until after more than a couple of increments. Therefore, we do not stop incrementing the value of \u03bb unless increasing the value of \u03bb does not bring about at least a 5 to 10% change in either the value of",{"@attributes":{"id":"p-0088","num":"0093"},"maths":{"@attributes":{"id":"MATH-US-00022","num":"00022"},"math":{"@attributes":{"overflow":"scroll"},"mrow":{"mrow":{"mrow":{"msub":{"mi":"C","mrow":{"mi":["\u03bb","p"],"mo":","}},"mo":"\u2061","mrow":{"mo":["(",")"],"mi":"w"}},"mo":"\u2062","mstyle":{"mtext":":"}},"mo":"=","msup":{"mrow":{"mo":["[","]"],"mrow":{"mfrac":{"mn":"1","mi":"\u03bb"},"mo":["\u2062","\u2062","\u2062"],"mi":"ln","mstyle":{"mspace":{"@attributes":{"width":"0.3em","height":"0.3ex"}}},"mrow":{"msub":{"mi":"J","mrow":{"mi":["\u03bb","p"],"mo":","}},"mo":"\u2061","mrow":{"mo":["(",")"],"mi":"w"}}}},"mfrac":{"mn":"1","mi":"p"}}}}},"br":{},"sub":["\u03bb,p","\u03bb,p","\u03bb,p","\u03bb,p"]},"For a given value of the parameter \u03bb in the training process, each of the consecutive epochs consists of the standard backpropagation or backpropagation through time to compute the derivatives of the risk-averting error criterion with respect to the weights and a BFGS step to update the estimate of the Hessian matrix and adjust the weights. The cross validation procedure mentioned above monitors the maximum absolute deviation of a cross validation data set V, whose intersection with the training data set S is empty, to avoid noise-fitting or data-overfitting.","To summarize the above description of the preferred embodiment of the disclosed convexification method, a training algorithm for training a neural system or a regression model is described in a pseudo computer program below:",{"@attributes":{"id":"p-0091","num":"0096"},"tables":{"@attributes":{"id":"TABLE-US-00001","num":"00001"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0","pgwide":"1"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"266pt","align":"left"}},"thead":{"row":{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":"1. \/\/Initialization:\/\/"}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"252pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"epoch \u2190 0."]},{"entry":[{},"Set the initial weights w (0) at random."]},{"entry":[{},"cyclelength \u2190 100."]},{"entry":[{},"\u03bb \u2190 5."]},{"entry":[{},"flag2 \u2190 0."]},{"entry":[{},"flag3 \u2190 0."]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"266pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":"2. \/\/Step 1 of a cycle:\/\/"}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"252pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"For t = 1, . . . , cyclelength, do."]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"238pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"Compute the gradient of J(w) wrt w at w = w (epoch + t \u2212 1) with backprop;"]},{"entry":[{},"Update w (epoch + t \u2212 1) to w (epoch + t) with BFGS;"]},{"entry":[{},"Apply cross validation and if data-overfitting is detected, go to 7;"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"252pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"end."]},{"entry":[{},"If the required approximation accuracy is achieved, go to 7."]},{"entry":[{},"If J(w) and J(w) change little for cycles, go to 7."]},{"entry":[{},"epoch \u2190 epoch + cyclelength."]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"266pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":"3. \/\/ Step 2 of the cycle:\/\/"}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"252pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"flag1 \u2190 flag2."]},{"entry":[{},"flag2 \u2190 flag3."]},{"entry":[{},"flag3 \u2190 0."]},{"entry":[{},"If C(w(epoch)) < 0.95C(w(epoch \u2212 cyclelength + 1))"]},{"entry":[{},{}]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"238pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},{"maths":{"@attributes":{"id":"MATH-US-00023","num":"00023"},"math":{"@attributes":{"overflow":"scroll"},"mrow":{"mrow":[{"mi":"or","mo":["\u2062","\u2062"],"mstyle":{"mspace":{"@attributes":{"width":"0.8em","height":"0.8ex"}}},"mrow":{"munder":{"mi":"max","mrow":{"mi":"k","mo":"\u2208","mrow":{"mo":["{","}"],"mrow":{"mn":"1","mo":[",",","],"mi":["\u2026","K"]}}}},"mo":"\u2062","mrow":{"msub":{"mi":["d","k"]},"mo":"\u2061","mrow":{"mo":["(",")"],"mi":"epoch"}}}},{"mn":"0.95","mo":["\u2062","\u2062"],"mstyle":{"mspace":{"@attributes":{"width":"0.8em","height":"0.8ex"}}},"mrow":{"munder":{"mi":"max","mrow":{"mi":"k","mo":"\u2208","mrow":{"mo":["{","}"],"mrow":{"mn":"1","mo":[",",","],"mi":["\u2026","K"]}}}},"mo":"\u2062","mrow":{"mrow":{"msub":{"mi":["d","k"]},"mo":"\u2061","mrow":{"mo":["(",")"],"mrow":{"mi":["epoch","cyclelength"],"mo":["-","+"],"mn":"1"}}},"mo":["\u2062","\u2062"],"mstyle":{"mspace":{"@attributes":{"width":"0.8em","height":"0.8ex"}}},"mi":"then"}}}],"mo":"<"}}}}]},{"entry":[{},{}]},{"entry":[{},"flag3 \u2190 1."]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"266pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":"4. \/\/Step 3 of the cycle:\/\/"}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"252pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"flag4 \u2190 0."]},{"entry":[{},{}]},{"entry":[{},{"maths":{"@attributes":{"id":"MATH-US-00024","num":"00024"},"math":{"@attributes":{"overflow":"scroll"},"mrow":{"mrow":[{"mi":"If","mo":["\u2062","\u2062"],"mstyle":{"mspace":{"@attributes":{"width":"0.8em","height":"0.8ex"}}},"mrow":{"munder":{"mi":"max","mrow":{"mi":"k","mo":"\u2208","mrow":{"mo":["{","}"],"mrow":{"mn":"1","mo":[",",","],"mi":["\u2026","K"]}}}},"mo":"\u2062","mrow":{"msub":{"mi":["d","k"]},"mo":"\u2061","mrow":{"mo":["(",")"],"mi":"epoch"}}}},{"mn":"3","mo":["\u2062","\u2062","\u2062"],"msub":{"mi":"p","mrow":{"mn":"68","mo":"\u2062","mi":"%"}},"mstyle":{"mspace":{"@attributes":{"width":"0.8em","height":"0.8ex"}}},"mi":"then"}],"mo":">"}}}}]},{"entry":[{},{}]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"238pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"flag4 \u2190 1."]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"266pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":"5. \/\/Step 4 of the cycle:\/\/"}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"252pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"If flag1 = 1 or flag2 = 1 or flag3 = 1 or flag4 = 1 then"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"238pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"\u03bb \u2190 1.1\u03bb."]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"266pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":"6. \/\/Start another cycle\/\/"}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"252pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"Go to 2."]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"266pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":"7. \/\/Exit the program\/\/"}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"252pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"Stop."]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}]}}]}}},"It is appropriate to remark here that the above training algorithm is most effective for training data with both inputs and outputs normalized to have the range [\u22121, 1], and that there are other factors than convexity in selecting the value of \u03bb. The statistics of the measurement noises in the training data, the requirements of the application, and the numerical feasibility are among these factors.","It is noted earlier on that the greater \u03bb is, the larger the domain on which the risk-averting error criterion is convex is. In the following, we determine the maximum \u03bb value that can be properly handled by a given computer without considering other factors. Let the exponents,",{"@attributes":{"id":"p-0094","num":"0099"},"maths":{"@attributes":{"id":"MATH-US-00025","num":"00025"},"math":{"@attributes":{"overflow":"scroll"},"mrow":{"mi":"\u03bb","mo":"\u2062","msubsup":{"mrow":{"mo":["\uf605","\uf606"],"mrow":{"msub":{"mi":["y","k"]},"mo":"-","mrow":{"mover":{"mi":"f","mo":"^"},"mo":"\u2061","mrow":{"mo":["(",")"],"mrow":{"msub":{"mi":["x","k"]},"mo":",","mi":"\u03c9"}}}}},"mi":["p","p"]}}}},"br":{},"sup":"T","sub":["k","k"]},{"@attributes":{"id":"p-0095","num":"0100"},"maths":{"@attributes":{"id":"MATH-US-00026","num":"00026"},"math":{"@attributes":{"overflow":"scroll"},"mrow":{"mi":"\u03bb","mo":"\u2062","msubsup":{"mrow":{"mo":["\uf605","\uf606"],"mrow":{"mrow":[{"msub":{"mi":["y","k"]},"mo":"\u2061","mrow":{"mo":["(",")"],"mi":"\u03c9"}},{"mover":{"mi":"f","mo":"^"},"mo":"\u2061","mrow":{"mo":["(",")"],"mrow":{"mrow":{"msup":{"mi":["x","k"]},"mo":"\u2061","mrow":{"mo":["(",")"],"mi":"\u03c9"}},"mo":",","mi":"w"}}}],"mo":"-"}},"mi":["p","p"]}}}},"br":{},"sub":["k","2 ","1 ","1 ","2 ","1","2","1","2"],"sup":"k"},"Obviously, to keep exp[\u03bb(g(k, w, \u03c9)\u2212b)] within the range [exp\u03b6, exp\u03b6], we need \u03bb(g(k, w, \u03c9)\u2212b)\u2266\u03b6and \u03bb(g(k, w, \u03c9)\u2212b)\u2267\u03b6, or equivalently, q\u2212\u03b6\/\u03bb\u2266b\u2266q\u2212\u03b6\/\u03bb, where q:=max{g(k, w, \u03c9)} and q:=min{g (k, w, \u03c9)}. From q\u2212\u03b6\/\u03bb\u2266q\u2212\u03b6\/\u03bb, it follows that \u03bb<(\u03b6\u2212\u03b6)\/(q\u2212q), which is the maximum value of \u03bb allowed for the computer. Notice that the range of b for a selected \u03bb is [q\u2212\u03b6\/\u03bb, q\u2212\u03b6\/\u03bb]. A reasonable choice for b is the middle point (q\u2212\u03b6\/\u03bb+q\u2212\u03b6\/\u03bb)\/2 of this range, which places \u03bb(q\u2212b) and \u03bb(q\u2212b) equidistant from (\u03b6+\u03b6)\/2 and makes a good use of the range [exp\u03b6, exp\u03b6].","In the process of training a neural network or estimating a regression model with a Pentium PC or any computer with \u03b6+\u03b6=0, we may want to set b=(q+q)\/2 and select \u03bb\u226626\/(q\u2212q) in consideration of all factors involved and fix them for a certain number of iterations in an iterative algorithm of minimizing",{"@attributes":{"id":"p-0098","num":"0103"},"maths":{"@attributes":{"id":"MATH-US-00027","num":"00027"},"math":{"@attributes":{"overflow":"scroll"},"mrow":{"mrow":{"mrow":[{"mo":["(",")"],"mfrac":{"mn":"1","mrow":{"mi":"K","mo":"\u2062","mrow":{"mo":["\uf603","\uf604"],"mi":"S"}}}},{"munder":{"mo":"\u2211","mi":"\u03c9"},"mo":"\u2062","mrow":{"munder":{"mo":"\u2211","mi":"k"},"mo":"\u2062","mrow":{"mi":"exp","mo":"\u2061","mrow":{"mo":["[","]"],"mrow":{"mi":"\u03bb","mo":"\u2061","mrow":{"mo":["(",")"],"mrow":{"mrow":{"mi":"g","mo":"\u2061","mrow":{"mo":["(",")"],"mrow":{"mi":["k","w","\u03c9"],"mo":[",",","]}}},"mo":"-","mi":"b"}}}}}}}],"mo":"\u2062"},"mo":","}}},"br":{},"sub":["max","min "]},"Either centering or bounding the exponents or both can be integrated into the foregoing training algorithm described by a pseudo computer program. For instance, an initial value of \u03bb can be selected by setting \u03bb=0.9\u00b726\/(q\u2212q), and at the same time, we set b=(q+q)\/2. If minimizing the maximum absolute deviations of the outputs of a neural system or a regression model from the corresponding output measurements is the main goal, centering and bounding the exponents of the risk-averting error criterion can be performed to have as large a risk-sensitivity index as feasible in the training process.","Numerical examples reported in James T. Lo and Devasis Bassu, \u201cAn Adaptive Method of Training Multilayer Perceptrons\u201d and \u201cRobust Identification of Dynamical Systems By Neurocomputing,\u201d in Proceedings of the 2001 International Joint Conference on Neural Networks numerically confirm that the foregoing adaptive training method is effective in selecting a suitable risk-sensitivity index and avoiding poor local minima of the risk-averting error criterion adaptively selected by the method.","The convexification method described above can easily be extended to those of estimating regression coefficients of regression models by a person with ordinary skill in the art.","Further Training\/Estimating wrt Risk-Neutral Error Criteria","As discussed earlier on, if a neural network is to be trained with respect to a given risk-averting error criterion, training the neural network with respect to a risk-averting error criterion associated with the given risk-averting error criterion has the benefit of avoiding poor local minima. It was also discussed earlier on that after such a training with respect to an associated risk-averting error criterion is completed, if the exponents in the associated risk-averting error criterion (e.g. products of the risk-sensitivity index and the squared errors",{"@attributes":{"id":"p-0103","num":"0108"},"maths":{"@attributes":{"id":"MATH-US-00028","num":"00028"},"math":{"@attributes":{"overflow":"scroll"},"mrow":{"mrow":{"mi":"\u03bb","mo":"\u2062","msubsup":{"mrow":{"mo":["\uf605","\uf606"],"mrow":{"msub":{"mi":["y","k"]},"mo":"-","mrow":{"mover":{"mi":"f","mo":"^"},"mo":"\u2061","mrow":{"mo":["(",")"],"mrow":{"msub":{"mi":["x","k"]},"mo":",","mi":"\u03c9"}}}}},"mn":["2","2"]}},"mo":","}}},"br":{}},{"@attributes":{"id":"p-0104","num":"0109"},"maths":{"@attributes":{"id":"MATH-US-00029","num":"00029"},"math":{"@attributes":{"overflow":"scroll"},"mrow":{"mo":["(",")"],"mrow":{"mi":["e","g"],"mo":[".",".","\u2062"],"mstyle":{"mspace":{"@attributes":{"width":"0.8em","height":"0.8ex"}}},"mrow":{"mi":"exp","mo":"\u2061","mrow":{"mo":["[","]"],"mrow":{"mi":"\u03bb","mo":"\u2062","msubsup":{"mrow":{"mo":["\uf605","\uf606"],"mrow":{"msub":{"mi":["y","k"]},"mo":"-","mrow":{"mover":{"mi":"f","mo":"^"},"mo":"\u2061","mrow":{"mo":["(",")"],"mrow":{"msub":{"mi":["x","k"]},"mo":",","mi":"\u03c9"}}}}},"mn":["2","2"]}}}}}}}},"br":{}},{"@attributes":{"id":"p-0105","num":"0110"},"maths":{"@attributes":{"id":"MATH-US-00030","num":"00030"},"math":{"@attributes":{"overflow":"scroll"},"mrow":{"mrow":{"mo":["(",")"],"mrow":{"mrow":[{"mi":["e","g"],"mo":[".",".","\u2062"],"mstyle":{"mspace":{"@attributes":{"width":"0.8em","height":"0.8ex"}}},"mn":"1"},{"mi":"\u03bb","mo":"\u2062","msubsup":{"mrow":{"mo":["\uf605","\uf606"],"mrow":{"msub":{"mi":["y","k"]},"mo":"-","mrow":{"mover":{"mi":"f","mo":"^"},"mo":"\u2061","mrow":{"mo":["(",")"],"mrow":{"msub":{"mi":["x","k"]},"mo":",","mi":"\u03c9"}}}}},"mn":["2","2"]}}],"mo":"+"}},"mo":","}}},"br":{}},"In an embodiment of the invented method of training neural systems with respect to a given risk-neutral error criterion, we first train a number of neural systems with respect to a risk-averting error criterion with different values of the risk-sensitivity index \u03bb to obtain the same number of risk-averting neural systems, the risk-averting error criterion being that associated with the given risk-neutral error criterion. Then we evaluate the value of the given risk-neutral error criterion for each risk-averting neural system just obtained. A risk-averting neural system that has a smallest value of the risk-neutral error criterion is then selected as our product of training. Obviously, if the training product is not satisfactory with respect to the given risk-neutral error criterion, more neural systems can be trained with respect to the associated risk-averting error criterion with different values of the risk-sensitivity index \u03bb, until a satisfactory neural system is produced. The selection of different values of the risk-sensitivity index \u03bb for training with respect to the risk-averting error criteria with these values of the risk-sensitivity index \u03bb can be either programmed in the training software or done manually or both.","In another embodiment of the invented method of training neural systems with respect to a given risk-neutral error criterion, we first train at least one neural system with respect to risk-averting error criterion with different values of the risk-sensitivity index \u03bb to obtain at least one risk-averting neural system, the risk-averting error criterion being that associated with the given risk-neutral error criterion. Then we evaluate the value of the given risk-neutral error criterion for each risk-averting neural system just obtained. A risk-averting neural system that has a smallest value of the risk-neutral error criterion is selected. If it is not satisfactory for the given risk-neutral error criterion, further training of the selected neural system is needed. There are two ways for the further training. First, we train this selected neural system further with respect to the given risk-neutral error criterion using a local-search optimization method. In other words, the selected neural system is further trained by a local-search optimization method to minimize the given risk-neutral error criterion, using the weights of the selected neural system as the \u201cinitial guess.\u201d Second, we continue training the neural system with respect to the associated risk-averting error criterion but with gradually decreasing values of the risk-sensitivity index \u03bb, and eventually we train the neural system with respect to the risk-neutral error criterion. In this process of further training, the weights obtained at each stage are used as the initial guess for the next stage.","In a third embodiment of the invented method of training neural systems with respect to a risk-neutral error criterion, we first use the adaptive risk-averting method described earlier on to train a neural system with respect to a risk-averting error criterion. In the process of training, we evaluate the given risk-neutral error criterion for each weight vector obtained after each iteration in the process, and stop the adaptive risk-averting method whenever a satisfactory value of the risk-neutral error criterion is obtained or the adaptive risk-averting method is completed. If the resultant neural system is not satisfactory for the given risk-neutral error criterion, further training of the resultant neural system is needed. There are two ways for the further training. First, we train this resultant neural system further with respect to the given risk-neutral error criterion using a local-search optimization method. In other words, the resultant neural system is further trained by a local-search optimization method to minimize the given risk-neutral error criterion, using the weights of the selected neural system as the \u201cinitial guess.\u201d Second, we continue training the resultant neural system with respect to the associated risk-averting error criterion but with gradually decreasing values of the risk-sensitivity index \u03bb, and eventually we train the neural system with respect to the risk-neutral error criterion. In this process of further training, the weights obtained at each stage are used as the initial guess for the next stage.","As stressed many times, all the discussions on and embodiments of the disclosed invention for training neural systems can easily be extended for estimating regression models.","Conclusion, Ramification, and Scope of Invention","A method of training neural systems and estimating regression coefficients of regression models is disclosed. The disclosed method employs risk-averting error criteria judiciously. If a neural system or regression model is to be respectively trained or estimated with respect to a risk-averting error criterion, the disclosed method is numerically feasible and effective. If a neural system or regression model is to be respectively trained or estimated with respect to a risk-neutral criterion such as a standard sum-of-squares error criterion, the method can avoid poor local minima of the risk-neutral criterion.","While our descriptions hereinabove contain many specificities, these should not be construed as limitations on the scope of the invention, but rather as an exemplification of preferred embodiments. In addition to these embodiments, those skilled in the art will recognize that other embodiments are possible within the teachings of the present invention. Accordingly, the scope of the present invention should be limited only by the appended claims and their appropriately construed legal equivalents."],"BRFSUM":[{},{}],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"DESCRIPTION OF THE DRAWINGS","p":["These and other features, aspects and advantages of the present invention will become better understood with regard to the following description, appended claims, and accompanying drawings where:",{"@attributes":{"id":"p-0014","num":"0013"},"figref":"FIG. 1","b":["8","4"]},{"@attributes":{"id":"p-0015","num":"0014"},"figref":"FIG. 2","b":["8","4","2","6"]},{"@attributes":{"id":"p-0016","num":"0015"},"figref":"FIG. 3","b":"10"},"Clarification of some terminologies is necessary here: Regression data is also called training data. The phrase \u201cestimating regression coefficients of a regression model\u201d is sometimes replaced with the phrase \u201ctraining a regression model,\u201d and sometimes with the phrase \u201cestimating a regression model.\u201d \u201cFitting a regression model to a regression data set\u201d is also expressed as \u201ctraining a regression model on a training data set.\u201d",{"@attributes":{"id":"p-0018","num":"0017"},"figref":"FIG. 4","b":["12","14","16","18","30"]},"Otherwise, the weights (or coefficients) of the neural network or regression model under training are adjusted  to reduce the RAEC (risk-averting error criterion) by an optimization method. If it is found that the RAEC has improved sufficiently over a preset number of the last cycles  or that there is an excessively large maximum absolute deviation at the end of the last cycle , the risk-sensitivity index is adjusted . Otherwise, the risk-sensitivity index is not changed. This completes one epoch, and a new epoch is started by the evaluation of the RAEC .",{"@attributes":{"id":"p-0020","num":"0019"},"figref":["FIG. 5","FIG. 4"],"b":["26","32"]},{"@attributes":{"id":"p-0021","num":"0020"},"figref":["FIG. 6","FIG. 4","FIG. 4","FIG. 4"],"b":["26","34","30","36","14"]},{"@attributes":{"id":"p-0022","num":"0021"},"figref":["FIG. 7","FIG. 4"],"b":["26","38","40"]},{"@attributes":{"id":"p-0023","num":"0022"},"figref":"FIG. 8","b":["42","44","42","42","44"]},{"@attributes":{"id":"p-0024","num":"0023"},"figref":["FIG. 9","FIG. 8"],"b":["44","42"]}]},"DETDESC":[{},{}]}
