---
title: Displaying graphical objects
abstract: Aspects of the present invention relate to a method of controlling the appearance of a graphical object in a graphical user interface. In an embodiment of an aspect of the invention, an object, such as a widget, in a graphical user interface comprises an instance of a widget class in which arr defined properties and/or methods which control operation of the object; and an associated instance of a look object class in which are defined properties and/or methods which control the look of the object.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=07030890&OS=07030890&RS=07030890
owner: Thomson Licensing S.A.
number: 07030890
owner_city: Boulogne-Billancourt
owner_country: FR
publication_date: 20001101
---

{"@attributes":{"id":"description"},"BRFSUM":[{},{}],"p":["The present invention relates to graphical user interfaces. Aspects of the present invention relate to a method of controlling the appearance of a graphical object in a graphical user interface. Aspects of the invention relate to a receiver\/decoder, a television system, a computer program product, a computer readable medium and a signal. Aspects of the invention have a particular, but not exclusive, application in providing a graphical user interface for appliances such as receiver\/decoders for digital television signals. However, aspects of the invention also have application to general purpose computers and other appliances.","Most graphical user interfaces (GUIs) include a similar set of basic components that can be manipulated by a user. These include such objects as push-buttons, sliders, list boxes, and so forth. Such components are referred to generically as \u201cwidgets\u201d. Although the basic function of widgets is common amongst many GUIs, the appearance of the widgets differs from one GUI to another.","Some graphical operating systems, the X window system for example, impose few constraints upon the appearance of widgets that can be displayed in the GUI. This allows programmers to develop applications using a number of different widget sets, each of which has its own distinctive appearance. Moreover, a large number of window managers run under X which influence the overall appearance of windows created by applications. Normally, it is possible to exercise some control over the appearance of an application as displayed on the GUI both during development of the application and to some extent at run time. However, the appearance is, in both cases, determined by hard coded parts of the widget set or the window manager. It is not possible for a user to change significantly the look of an application without re-coding the widget set, the window manager, or both. Either of these options requires a large amount of re-coding work and a large amount of new code to be installed on a host system.","One proposal to reduce the amount of re-coding work that must be done in order to update a look is to build elements (for example, corners, borders, and so forth) of a window in a GUI display from pixel maps stored in memory of a host system. This may be provided as an independent aspect of the invention. However, the pixel maps can occupy a significant amount of memory when in use, and represent a large amount of data to be transferred when the look is to be updated. This can be a significant disadvantage if the GUI must operate with limited resources and must be updated over a link of limited bandwidth. One example of such a situation arises when an application is executed on a receiver\/decoder for digital television signals. Such a decoder has a limited amount of memory as compared with a general purpose computer, and the software (including the look of the GUI) is updated by downloading data from a channel which forms part of the received television signal.","An aim of this invention is to provide an application developer with the ability to control the appearance of an application in a consistent and readily controllable manner, with a minimum of re-coding being necessary, and with a minimum of data required to be transferred to an execution environment.","In a first aspect of the present invention there is provided a method of controlling the appearance of a graphical object in a graphical user interface, comprising\n\n","By explicitly defining a look object, rather than embedding code which controls appearance in an application, the invention may allow greater flexibility than hitherto in the way in which the appearance of a graphical object is controlled.","Preferably the look object includes code or parameters determining how the graphical object is displayed, such code or parameters preferably being stored in memory. For example, the look object may be defined by object-oriented program code.","The look object may be defined by instantiating a look object class. A look object which is defined in this way may contain a pointer to another look object class (other than that from which it is derived). This can allow the look object to access attributes and\/or methods of that other look class. In this way, a look object can take its characteristics from two or more other looks, which can allow a look to be created which is the union of two different looks, or allow extra characteristics to be added to the look.","In order to associate the graphical object with the look object, the graphical object may include an attribute identifying the look object associated with the graphical object.","Preferably, the look object defines actual colours which are assigned to specific named colours. For example, the look object may define the actual colours which are assigned to at least one of black, white and one or several shades of grey. In this way, the look can define a certain colour scheme, for example, by giving a certain hue to graphical objects associated with that look. The look object may also define a colour map which sets the actual colour values which are to be used when displaying any particular colour.","In order to change the appearance of the graphical object, either the look object may be re-defined or modified (for example by changing the code or parameters at compile time, or the parameters at run time), or a different look object may be associated with the graphical object. The method may therefore further comprise modifying the appearance of the graphical object by re-defining or modifying the look object or by associating a different look object with the graphical object.","If a look object is re-defined or modified, then it may be necessary to update the appearance of graphical objects which are associated with that look object. In order to achieve this, the look object may include an update counter whose value is updated when the look object is re-defined or modified.","Preferably, graphical objects store the value of the update counter of the look object which they have affected. Each time a graphical object is to be redisplayed, the value stored by the graphical object is compared with the value of the update counter of the look object. If the two are different, the graphical object takes into account the modifications in the look object, and stores the new value of the update counter.","The look object may include a validation mask which indicates methods that can be called by the look object, so that methods which are not implemented by the look object are not called. The graphical object can access the validation mask of the look object to optimise the drawing of the graphical object. In this way, calls to methods which are not implemented can be avoided, which can speed up the drawing of the graphical object.","In some circumstances, for example when a look object is first created, the look object may be associated with a single graphical object. However, in preferred embodiments, the look object is associated with a plurality of graphical objects. By associating the look object with a plurality of graphical objects, a uniform appearance for those objects may be achieved, and the amount of data required for defining the look object may be reduced, in comparison to the case where each graphical object has its appearance defined independently.","Thus, the method may be a method of controlling the appearance of a plurality of graphical objects in a graphical user interface, and may comprise associating the look object with the plurality of graphical objects.","In certain situations, such as where no graphical objects are associated with a look object, it may be desirable to delete the look object, for example to enable the memory space used by the look object to be re-allocated. This may be particularly important in devices such as receiver\/decoders where memory may be limited. For this purpose (amongst others) the look object may include a counter which indicates the number of graphical objects which are associated with that look object. Preferably, each time a graphical object is associated with the look object, the counter is incremented, and each time a graphical object is disassociated with the look object, the counter is decremented. If the counter is at zero, then it may be assumed that the look object can be safely deleted.","In another method aspect of the invention, there is provided a method of defining a graphical object in a graphical user interface, comprising providing a look object which controls the appearance of the graphical object (for example, by defining properties and\/or methods which control the appearance of the graphical object), and providing a widget object which controls operation of the graphical object (for example, by defining properties and\/or methods which control the operation of the graphical object). Any of the features mentioned above may be provided in combination with this aspect.","Any of the methods described above preferably further comprise displaying the graphical object, for example on a screen such as a computer screen or a television screen.","Any of the methods described above may be carried out by a receiver\/decoder, such as a digital or analogue television receiver\/decoder.","The term \u201creceiver\/decoder\u201d used herein may connote a receiver for receiving either encoded or non-encoded signals, for example, television and\/or radio signals, which may be broadcast or transmitted by some other means. The term may also connote a decoder for decoding received signals. Embodiments of such receiver\/decoders may include a decoder integral with the receiver for decoding the received signals, for example, in a \u201cset-top box\u201d, such a decoder functioning in combination with a physically separate receiver, or such a decoder including additional functions, such as a web browser, a video recorder, or a television. In an apparatus aspect of the invention there is provided apparatus for controlling the appearance of a graphical object in a graphical user interface, comprising:\n\n","Preferably the apparatus includes a suitably programmed processor for defining the look object and for associating the look object with the graphical object, and memory for storing the look object and the graphical object. The look object may be defined by object-oriented program code. The look object may be defined by instantiating a look object class. The look object may contain a pointer to another look object class.","The apparatus may be adapted to modify the appearance of the graphical object, by re-defining or modifying the look object, or by associating a different look object with the graphical object. The look object may include an update counter (such as a location in memory) whose value is updated when the look object is re-defined or modified.","The look object may include a validation mask (for example, stored in memory) which indicates methods that can be called by the look object.","The apparatus may be apparatus for controlling the appearance of a plurality of graphical objects in a graphical user interface, and may be adapted to associate the look object with a plurality of graphical objects. The look object may include a counter (such as a location in memory) which indicates the number of graphical objects which are associated with that look object.","The apparatus may further comprise means, such as a screen (for example a computer screen or a television screen) for displaying the graphical object.","In one embodiment, the apparatus is a receiver\/decoder, such as a digital or analogue television receiver\/decoder.","In a further aspect, the invention provides an object in a graphical user interface, comprising an instance of a widget class which controls operation of the object, and an instance of a look object class which controls the appearance of the object.","The invention also provides a widget set for creating objects as described above, the widget set comprising a plurality of widget classes and one or more look object classes. Most typically, the widget set comprises a plurality of look object classes including a base class and a class derived from the base class.","In order to amend the appearance of the object, the look object class can be changed. This does not change the function of the object since function is controlled by the widget class. Moreover, it is possible for one instance of the look object class to be used by many instances of the widget class, thereby minimising the amount of memory used.","The look object class can be contained in a library linked into an application at run time. A user can therefore select a preferred look for the object by selecting which one of a range of libraries should be linked. Because the look object class is changed independently of the other items, re-coding is simplified to the minimum necessary to implement the new look.","Alternatively, the look object class can be contained in a library linked into an application at compile time. This allows an application developer to have full control of the appearance of the object.","The look object class may export drawing methods that can be invoked to draw part of a component on a GUI display. The widget class typically contains code which invokes drawing methods of the look object class. The look object class may also export properties which provide data relating to elements of a component.","The look object class may be a default class which provides a default look for widgets in a GUI display. Alternatively, the look object class may be a class derived from a default class, the derived class overriding one or more methods and\/or properties of the default class. By this arrangement, a user or a developer can make changes to just a limited number of elements within the look of a GUI without having to re-work any parts which are to remain unchanged.","The look object class instance may be a property of the widget class instance. Typically, a pointer to an instance of the look object class is assigned to a property of the widget class instance. Such a pointer may be passed as an argument to a constructor of the widget class.","The invention also provides a method of creating an object in a graphical user interface in which a look object class is instantiated in which is defined properties and\/or methods which control the look object of the object; and a widget class is instantiated which is defined properties and\/or methods which control operation of the object.","In a method according to the last-preceding paragraph, a pointer to the look object class is typically stored in instance memory of the widget class instance.","By controlling operation, it is not necessarily meant that the object is functional; whereas sliders and buttons and the like may be capable of performing actions, some graphical objects may simply be decorative, such as symbols or parts of composite objects. Thus the properties and\/or methods which control operation of the object may do little more than determine the basic function of the object (for example to appear as a pointer), with the precise appearance being controlled by the look object.","In another aspect, the invention provides a method of creating a plurality of objects in a graphical user interface in which a look object class is instantiated in which look object class is defined properties and\/or methods which control the look of the objects; and a widget class is instantiated a plurality of times in which is defined properties and\/or methods which control operation of the object.","In another aspect, the invention provides a method of implementing a graphical user interface display for an application execution device (for example, a computer, a receiver\/decoder for a digital television signal, or another device) comprising loading a widget set as described above into memory of the appliance, creating a plurality of objects in the graphical user interface by a method as described above, and displaying the objects on the display.","In such a method applied to a receiver\/decoder, the widget set may be loaded into memory of the receiver\/decoder by being downloaded in a channel within a digital television signal.","In another aspect, the invention provides a method of updating the appearance of a graphical user interface display for an application execution device, which display includes a widget set as described above, in which at least one look object class is replaced by another look object class.","In another aspect, the invention provides a method of updating the appearance of a graphical user interface display of a receiver\/decoder for a digital television signal, which display includes a widget set as described above stored in memory of the receiver\/decoder in which at least one replacement look object class is transmitted to the receiver\/decoder in a channel being part of a digital television signal to replace a stored look object class.","The invention extends to corresponding apparatus. In particular, the invention extends to a receiver\/decoder arranged to perform a method of any preceding aspect.","In another aspect, the invention provides an application execution device (for example, a computer, a receiver\/decoder for a digital television signal, or another device) for implementing a graphical user interface, comprising a processor, memory, and an output port for outputting a signal to a display, the memory having stored therein a program for carrying out any of the methods described above, or any of the objects described above, or any of the widget sets described above.","In any of the above cases, the look object or look object class preferably defines how at least one of the following properties (if present) of a graphical object are displayed:\u2014\n\n","The invention also extends to a computer program for carrying out any of the above methods, and to a computer readable medium having stored thereon a program for carrying out any of the above methods. The invention also extends to an application for a receiver\/decoder arranged to perform a method of any preceding aspect. The invention also extends to a method or apparatus substantially as described herein with reference to the accompanying drawings.","Design of Displayed Graphical Objects","Most graphical user interfaces (GUIs) display various graphical objects, some of which can be manipulated by a user (\u201cactive\u201d objects) and some which cannot (\u201cstatic\u201d objects). Preferably, as is described above, the displayed graphical objects are preferably designed to complement each other to produce a coherent design scheme. For example, the displayed graphical objects preferably share a main colour and texture and font, where appropriate. A design scheme is called herein a \u201clook\u201d of the graphical objects.","In some cases, only the look of the active graphical objects can be altered by the user. According to an aspect of the present invention, preferably the look of static graphical objects is alterable. According to an aspect of the invention, preferably the look of a group of graphical objects is alterable. Thus a coherent design of the displayed graphical objects can be obtained.","With reference to other aspects of the invention, where graphical objects and link elements are displayed, preferably both the look of the graphical objects and of the link elements are changeable. Preferably the look of both the graphical objects and the link elements are the same in the look selectable by the user. In this way a coherent look for displayed chains of graphical objects can be achieved.","In preferred aspect of the invention, the look of the chain is selectable independently of the look of other graphical objects displayed.","An aspect of the invention comprises a method of controlling the appearance of a plurality of graphical objects in a graphical user interface, the method comprising associating a look object with a plurality of graphical objects.","In a preferred embodiment of the invention, the plurality of graphical objects comprises a linked chain. Thus preferably, a particular look or design can be applied to the chain or linked list as a whole. Preferably, the look or design can be applied to the chain, linked list or graphical object independently of any look or design applied to other chains, linked lists or graphical objects.","An aspect of the invention provides a method of displaying a group of graphical objects, the method including the step of providing means for defining a plurality of different displayable groups of graphical objects and for selecting a group of graphical objects from the plurality of displayable groups.","Preferably the method comprises defining a displayable group of graphical objects and associating a look object with the group of graphical objects.","According to the invention there is provided a method of controlling the appearance of a group of graphical objects, the method including defining a displayable group of graphical objects.","Also provided is an apparatus for controlling the appearance of a group of graphical objects, the apparatus including means for defining a displayable group of graphical objects.","Preferably the representation of graphical objects from a group differ from the representation of graphical objects of another group, for example in one or more of colour, shape, size, texture or pattern.","Preferably the group of graphical objects comprises elements for displaying a linked chain of graphical objects.","Preferably the group of graphical objects comprises static objects and active objects. Thus the apparatus may comprise a library of groups of graphical objects, preferably having different looks or designs.","Preferably, displayed graphical objects from a first group differ from displayed graphical objects of another group in one or more of colour, shape, size, texture or pattern. The arrangement of the graphical objects in the first group may differ from the arrangement of the graphical objects in another group.","In accordance with a preferred embodiment of the invention, the group of graphical objects comprises a linked chain of graphical objects. Preferably, the linked chain is displayable as a linked chain in the GUI.","Other preferred features of this aspect of the invention are described above under the heading Displaying Graphical Objects.","Building Graphical Objects","Most graphical user interfaces (GUIs) include various graphical objects, some of which can be manipulated by a user. Such graphical objects include windows, dialog boxes and push-buttons. The GUI generally includes several different types of each graphical object, for example the GUI may be arranged for the display of a large variety of dialog boxes having different sizes and\/or aspect ratios.","Where a GUI has, for example, two types of dialog box, one being half the size of the other, each type of box is formulated and saved in the system as a separate object. Where the GUI includes a large number of different types of dialog box and\/or different types of other graphical objects, that can lead to inefficient use of system resources.","An aspect of the invention provides a method of controlling the appearance of a graphical object in a graphical user interface, the method comprising defining a plurality of graphical object elements of the graphical object for use in displaying a representation of the graphical object.","An aspect of the invention provides a graphical object element being adapted for combination with other graphical object elements to form the graphical object.","Where the GUI includes a number of different types of the same graphical object, the different types will often have features in common with other types of the object. For example, windows and boxes of different sizes will often have the same corners as each other, the difference between the different types of boxes being only in the length of the edges of the box. By providing object elements for building the graphical objects, advantage can be taken of the common features of the various objects so that a few building blocks (the object elements) can be used to create a large number of different types of the graphical object.","The graphical object may comprise, for example, a window, a dialog box, a push-button, a scroll-bar, an icon or other on-screen object. The graphical object may be \u201cactive\u201d in that the user can interact with it or \u201cstatic\u201d, for example features of the background.","An aspect of the invention provides a graphical object comprising a plurality of graphical object elements.","An aspect of the invention provides a method of displaying a representation of a graphical object in a graphical user interface, the method comprising assembling a plurality of graphical object elements to form the graphical object.","An aspect of the invention provides apparatus for forming a graphical object in a graphical user interface, the apparatus comprising means for assembling a plurality of graphical object elements to form the graphical object.","An aspect of the invention provides an application execution device for implementing a graphical user interface, comprising a processor, memory, and an output port for outputting a signal to a display, the memory having stored therein a program for carrying out an aspect of the invention.","Preferably the application execution device comprises a receiver\/decoder of a digital television.","An aspect of the invention provides a computer program for carrying out a method of the invention.","The graphical object elements of a graphical object may all be the same, the size and shape of the graphical object being determined by the number and configuration of the elements.","Preferably, the graphical object includes a plurality of different sets of graphical object elements. Preferably, the method aspect includes defining a plurality of different sets of graphical object elements of the graphical object.","A set of graphical object elements may comprise, for example, corner, side or edge portions of the graphical object. For example, where the graphical object is a dialog box, the sets of graphical objects used to make up the box may comprise corner elements and edge elements. For example, a rectangular box may comprise four corner elements and four edge elements which link together the corner elements.","Within each set of elements, there may be different types of elements, for example having a different size, shape, orientation and\/or colour. Thus the example of the box may comprise four types of corner elements and two types of edge elements.","A push-button may comprise two side elements and a centre element which is chosen depending on the type of push-button the graphical object is to be. For example a PLAY button may have a centre element including an arrow symbol, a STOP button may have a centre element including a square symbol. The side elements of the PLAY button may be the same as the side elements of the STOP button.","A library of object elements can also be used to form graphical objects having relatively complex shapes. For example a variety of complex matrices of dialog boxes could easily be formed from a selection of object elements comprising box edges, corners and intersection points.","In a preferred embodiment of the invention, the graphical object includes at least two \u201ccorner\u201d elements which define the \u201ccorners\u201d or \u201csides\u201d of the graphical object and a plurality of filler elements, the number of which can be varied to vary the size and\/or shape of the graphical object. Thus, a text box preferably has four corner elements and a plurality of filler elements are used to fill the box between the corner elements to create the box of the desired size. The filler elements may all be the same. In the embodiments below, different types of filler elements are used, for example centre elements and four types of edge elements, to build boxes and windows.","Preferably the filler elements are repeated to build up the required size and shape of the graphical object.","The method preferably includes defining a set of fixed elements and a set of repeatable elements.","The invention also provides a method of forming a graphical object, the method comprising providing a set of fixed elements and a set of repeatable elements.","For example, for a window or box, the set of fixed elements may comprise the corners and any ornamentation for the box, those fixed elements being fixed for all boxes or windows of that sort, of whatever size; the set of repeatable elements are used to build up the required size and shape of the object. Preferably, only one of each fixed element is required for each instance of the graphical object. Thus the set of repeatable elements may include edge segments and centre pieces which are used to fill in between the corners.","The size of the repeatable elements are preferably chosen so that the number of types of repeatable elements for a particular object is minimised. For example, the size of the repeatable elements are preferably chosen having regard to the smallest size of the graphical object required. Thus the memory taken up in the storage of the \u201cskit\u201d required to build each graphical object can be reduced.","The invention also provides a kit of elements for a graphical object, the kit comprising a set of fixed elements and a set of repeatable elements.","The invention also provides a method of producing a kit of elements for a graphical object, the method comprising defining a set of fixed elements common to instances of the graphical object and further defining a set of repeatable elements.","The size of an object element may be adjustable. Thus fewer types of object elements are required to create a wide range of objects. For the example of the dialog box, the length of the edge elements may be adjustable. In this way, a large number of different box shapes could be created using just the four corner elements and two types of edge elements (in this case vertical edge elements of adjustable length and horizontal edge elements of adjustable length).","The invention further provides a method of displaying a representation of a graphical object in a graphical user interface, the method comprising assembling a plurality of graphical object elements.","Preferably the method comprises displaying a set of fixed elements and displaying a plurality of repeatable elements.","The invention further provides apparatus for controlling the appearance of a graphical object in a graphical user interface, the apparatus comprising means for defining a plurality of graphical object elements of the graphical object for use in displaying a representation of the graphical object.","Further provided by the invention is a kit of elements for use in displaying a graphical object, comprising a set of fixed elements common to instances of the graphical object and a set of repeatable elements.","The invention further provides apparatus for displaying a representation of a graphical object in a graphical user interface, the apparatus comprising means for assembling a plurality of graphical object elements.","The invention is of particular advantage in the application of the invention to wide-screen television; the aspect ratio of the graphical objects can be easily adjusted by changing the number or size of the graphical object elements compared with the graphical object for a standard television.","The invention also allows variations in the graphical objects to be made easily, for example embellishments and ornamentations. An object element may comprise an ornamentation to be included on dialog boxes. A huge variety of different objects having different or the same ornamentation can be created using the present invention.","Tool Tips and Menu Chains","Graphical user interfaces (GUIs) generally include various graphical objects, some of which can be manipulated by the user (\u201cactive\u201d objects), and others which cannot (\u201cstatic\u201d objects). The graphical objects, in particular active objects, are often identified to the user by icons which may comprise pictures or diagrams illustrating what the graphical object is. For example, a button for carrying out a PLAY function may include an icon comprising an arrow. Such icons can improve the visual appearance of the graphical objects as well as assisting in easy navigation of the display.","In particular, where screen space is as a premium, icons are particularly useful. An example is a GUI used for a receiver\/decoder for a digital television in which the icons are on-screen icons for use in the operation of the television and\/or for other on-screen functions, for example web browsing. The resolution of a standard television screen is relatively low and, for legibility, any data appearing on the screen is required to be relatively large. Also, users of a television set generally sit further from the screen when using the television than they would when using, for example, a personal computer. Thus any icons and text appearing on the screen are required to be relatively large.","This imposes restraints on the amount of information that can be displayed on the screen at once. Thus the use of icons is particularly advantageous.","Effort is made to choose icons which clearly depict what the graphical object does. However, some users may be unfamiliar with the icon used and may be unsure what the feature represents. However, it would be undesirable to have the graphical objects being identified on the screen by a text explanation, because the screen may become too cluttered.","An aspect of the invention provides a method of controlling the appearance of a graphical object in a GUI, the method comprising defining a first displayable representation of a graphical object and further defining a second displayable representation of the graphical object, the second representation being displayable adjacent the first representation.","An aspect of the invention provides a method of displaying a graphical object on a GUI, the method comprising displaying a first representation of a graphical object and displaying a second representation of the graphical object adjacent the first representation.","The first representation preferably comprises an icon. Preferably the second representation is selectively displayed.","Preferably, the first representation is active, so that activating or selecting the first representation carries out an action of the graphical object. For example the first representation may be a push-button. Preferably, the second representation is a text description of the graphical object, for example a word indicating the function of the object. The second representation may or may not be active.","The second representation is preferably only selectively displayable. Thus, preferably, the second representation of the graphical object does not appear on the screen all the time, only when of assistance to the user.","Preferably the second representation displayable by focussing on the first representation. For example the second representation may only be displayed when the user has focussed on the first representation, for example by moving a focus to it using cursor keys, or by moving a mouse pointer to point to it.","Preferably the text representation of the graphical object is displayed within a frame, for example in a box or in a window. Preferably the design of the frame complements or is matched to the design of other graphical objects displayed, especially other representations of the same graphical object. Thus a coherent design scheme can be obtained. Preferably the second representation is linked to the first representation, for example by linking the box or window to the first representation. Thus the user can see more clearly exactly to what the text description applies.","Preferably the method includes defining a link element for linking the first representation and the second representation. Preferably the method includes associating a look object with the first representation, the second representation, and preferably the link element. Thus preferably the first and second representations and the link element share features of, for example, colour, texture, and shape to give a coordinated look. The look object may comprise a plurality of separate look objects, so that a coordinated look can be obtained for the various representations and link elements.","The invention further provides a method of displaying a graphical object, the method comprising displaying a first representation of the graphical object, displaying a second representation of the graphical object, and displaying a link element linking the first representation and the second representation.","The invention provides apparatus for controlling the appearance of a graphical object in a GUI, the apparatus comprising means for defining a first displayable representation of a graphical object and means for defining a second displayable representation of the graphical object, and means for displaying the second representation being adjacent the first representation.","Preferably the apparatus includes means for selectively displaying the second representation, preferably when detecting a focus on the first representation.","According to the invention, there is also provided apparatus for displaying a graphical object, the apparatus comprising means for displaying a first representation of the graphical object, means for displaying a second representation of the graphical object, and means for displaying a link element linking the first representation and the second representation.","Where the graphical object is in a chain or linked list as described below, preferably the second representation is a part of the displayed chain or linked list. Preferably the method includes defining a linked chain of graphical object, the first and second representations being displayable as links of a chain of representations of graphical objects.","Preferably the second representation is in a sub-chain. Preferably the sub-chain branches from the first representation.","An aspect of the invention provides a display including a graphical object, the graphical object comprising a first representation of the graphical object and, preferably selectively displayable, a second representation of the graphical object adjacent the first representation of the graphical object.","An aspect of the invention provides apparatus for controlling the appearance of a graphical object in a graphical user interface, comprising means for defining a first representation of the graphical object and means for defining a second representation of the graphical object, the second representation being displayable adjacent the first representation.","An aspect of the invention provides an application execution device for implementing a graphical user interface, comprising a processor, a memory and an output port for outputting a signal to a display, the memory having stored therein a program for carrying out an aspect of the invention.","Preferably the application execution device comprises a receiver\/decoder of a digital television.","Also provided is a computer program for carrying out a method of the invention.","For GUIs of computers and other apparatus, the user is usually provided with a mouse or other pointer device for navigating around the display and manipulating the displayed graphical objects. However, in some applications, for example television receiver\/decoder apparatus and mobile telephones and personal organisers, the user might not have a pointer device. For example, the user might use a cursor keypad to navigate around the display. Such cursor keypads usually include up, down, left and right keys. It can be confusing for the user to navigate around the display using only those keys, in particular where displayed graphical objects on the screen are not arranged in obvious lines and\/or columns.","An aspect of the present invention provides a method of controlling the appearance of graphical objects in a graphical user interface, the method comprising defining a linked chain of graphical objects.","An aspect of the present invention provides a method of controlling the appearance of a graphical object in a graphical user interface, the method comprising defining a first graphical object, defining a second graphical object and defining a link element for linking the graphical objects.","An aspect of the present invention provides apparatus for displaying graphical objects in a GUI, the apparatus comprising means for displaying a plurality of graphical objects and means for displaying link elements between graphical objects.","An aspect of the invention provides a graphical object and a link element associated with the graphical object.","An aspect of the invention provides a method of displaying representations of graphical objects in a graphical user interface (GUI), the method comprising displaying representations of graphical objects and displaying a representation of a link element for illustrating a link between graphical objects.","Preferably, the displayed link element extends from one graphical object to another. Preferably, the method includes displaying a linked chain of representations of graphical objects.","Preferably the method further includes defining a sub-chain of graphical objects, the sub-chain comprising a branch from a linked chain, preferably the sub-chain being selectively displayable.","Preferably, the method further includes displaying graphical objects in a sub-chain, the sub-chain preferably comprising a branch of the linked chain, and preferably the sub-chain is displayable by focussing on a graphical object in the linked chain. Thus the sub-chain might only be displayed when of interest to the user, thus reducing cluttering of the display.","An aspect of the invention provides a method of displaying graphical objects in a GUI, the method comprising displaying a plurality of graphical objects as a linked list. Thus, an aspect of the invention provides graphical objects which can be navigated using a cursor keypad. Preferably, the displayed graphical objects comprise icons. Preferably the links between the graphical objects are displayable.","The displayed link element may extend from one graphical object to another to indicate a path between them. This is of particular advantage where the user is using cursor keys to navigate the display rather than a mouse. In some cases, however, the link element might not extend across the whole distance between graphical objects, while still providing an indication to the user of a path between the graphical objects. For example, the link element might comprise an arrow on an icon pointing to the next icon in the path.","An aspect of the invention provides a chain of graphical objects. More than one link element may be provided for each graphical object, indicating a choice of navigation paths from that object. Thus a branched network or tree structure of graphical objects and link elements can be formed, the network being easily navigable by the user, even without the use of a mouse. Also provided by an aspect of the invention is a network of graphical objects.","An aspect of the invention provides a main chain of graphical objects and a sub-chain of graphical objects branched from the main chain. Preferably, the representations of the graphical objects are buttons. (As used herein the term \u201cbutton\u201d is preferably to be interpreted broadly to refer to any graphical object which carries out a function when selected.)","Preferably, a plurality of sub-chains are displayable. Preferably a sub-chain is displayable by selecting a graphical object of the main chain.","Preferably the sub-chain extends substantially perpendicular to the main chain.","Where, in accordance with another aspect of the invention, a second representation of the graphical object is displayable adjacent the graphical object, preferably the second representation of the graphical object is displayable as a part of the sub-chain of the first representation of the graphical object. Thus, where the second representation of the graphical object is a text box including a description of the graphical object, the sub-chain will preferably include the text box and description in the sub-chain. This can be of assistance to the user.","According to an aspect of the invention there is provided an apparatus for displaying a graphical object, the apparatus comprising means for displaying a first representation of the graphical object, means for displaying a second representation of the graphical object, and means for displaying a link element linking the first representation and the second representation.","Also provided is an apparatus for controlling the appearance of graphical objects in a graphical user interface, the apparatus comprising means for defining a linked chain of graphical objects.","Also provided is apparatus for controlling the appearance of a graphical object in a graphical user interface, the apparatus comprising means for defining a first graphical object, defining a second graphical object and defining a link element for linking graphical objects.","The invention also provides apparatus for displaying representations of graphical objects in a graphical user interface, the apparatus comprising means for displaying representations of graphical objects and means for displaying a representation of a link element for illustrating a link between graphical objects.","Also provided by the invention is an object in a graphical user interface comprising a first representation of a graphical object and a second representation of a graphical object, and a link element linking the first and second representations; an object in a graphical user interface comprising a linked chain of graphical objects; and an object in a graphical user interface comprising a first graphical object, a second graphical object and a link element linking the first and second graphical objects. Preferably the object further includes a sub-chain of graphical objects, the sub-chain comprising a branch from a linked chain, preferably the sub-chain being selectively displayable.","An aspect of the invention includes an application execution device for implementing a graphical user interface, the device comprising a processor, memory and an output port for outputting a signal to a display, the memory having stored therein a program for carrying out an aspect of the invention.","The aspect of the invention also includes a computer program for carrying out a method of the invention.","Head to Tail Flipflop","Most graphical user interfaces (GUIs) include various graphical objects, some of which can be manipulated by a user. Such graphical objects are often displayed as icons which normally comprise pictures or diagrams illustrating what the graphical object is. For example, an object for carrying out a PLAY function may be displayed as an icon including an arrow. An object for effecting printing may comprise a diagram of a printer. Such icons can improve the visual appearance of the displayed graphical objects as well as assisting in easy navigation of the GUI.","Effort is made to choose icons which clearly depict what the graphical object does. Many \u201cstandard\u201d icons are used and are generally recognisable as being icons depicting \u201cforward\u201d, \u201cgo back\u201d, \u201cplay\u201d and \u201cstop\u201d. However, some users may be unfamiliar with the icon used and will be unsure what the feature represents.","An aspect of the invention provides a graphical object having a feature displayed, wherein the feature is displayable in a plurality of forms, and means for changing the form in which the feature is displayed.","Preferably, one form of in which the feature is displayed is an icon. For example a PLAY button may be in the shape of an arrow.","An aspect of the invention comprises a method of controlling the appearance of a graphical object in a GUI, the method comprising defining a first representation of the graphical object and a second representation of the graphical object, the first and second representations being selectively displayable, preferably cyclically displayable.","An aspect of the invention provides a method of displaying a graphical object in a GUI, the method comprising displaying a first representation of the graphical object and subsequently displaying a second representation of the graphical object.","Preferably, the first representation of the graphical object includes an icon. Preferably, the second representation of the graphical object includes a text description of the graphical object. Preferably, the display of the graphical object cycles between the first representation and the second representation.","An aspect of the invention provides apparatus for controlling the appearance of a graphical object in a GUI, the apparatus comprising means for defining a first representation of the graphical object and means for defining a second representation of the graphical object.","An aspect of the invention provides application execution device for implementing a graphical user interface, the device comprising a processor, memory and an output port for outputting a signal to display, the memory having stored therein a program for carrying out an aspect of the invention.","Preferably the application execution device comprises a receiver\/decoder of a digital television.","Also provided is a computer program for performing a method of the invention.","The different representations which may be displayed include, for example, an icon and a text description of the feature. Thus a PLAY icon (for example a illustration of an arrow) may also be displayable as the word \u201cplay\u201d. Thus the visual and other benefits of the use of the icon can be obtained while ensuring that the user knows the meaning of the icon from the text description. By providing the different representations of the graphical object, the visual appearance of the GUI can be improved and the different displays do not clutter the user's viewable area.","In a first embodiment of the invention, the representation of the graphical object to be displayed can be set by the user. For example, the user might be familiar with the icons used and not require a text explanation of the icons. In this case he may select that only the icons be displayed.","In a second embodiment of the invention, the representation displayed can be changed by the user by selecting or focussing on (for example highlighting) the displayed representation. For example, if the representation is set to the graphical object as the \u201cPLAY\u201d icon, the user can change the \u201cPLAY\u201d icon to the text \u201cplay\u201d by focussing on, for example highlighting or selecting, the first representation.","In a third embodiment of the invention, the display of the graphical object switches between the different representations without intervention by the user. For example, the preferences can be set so that the displayed graphical object cycles between two types of representation. In a preferred embodiment, the display cycles between the icon and the text description. The cycle time may be adjustable. An example of a cycle time is about 2 seconds.","In an embodiment of the invention, a timer is started when a representation is displayed; when the timer reaches a predetermined value, the representation changes. The change of representation may be directly from one representation to another, for example from the icon to the text description, or may comprise a sequence of representations. For example, the sequence of representations may show a progressive change from one representation to another. In an embodiment, the sequence of representations gives the effect that the two representations are on opposite faces of a spinning coin.","The invention further provides apparatus for controlling the appearance of a graphical object in a GUI, the apparatus comprising means for defining a first representation of the graphical object and a second representation of the graphical object, and means for selectively displaying the first and second representations, and preferably means for cyclically displaying the first and second representations.","Also provided is apparatus for displaying a representation of a graphical object in a GUI, the apparatus comprising means for displaying a first representation of the graphical object, and means for subsequently displaying a second representation of the graphical object.","Preferably the apparatus further comprises means for displaying a sequence of representations between the displaying the first and second representations.","The invention further provides an object in a GUI comprising a first representation of the graphical object and a second representation of the graphical object, the first and second representations being selectively displayable, preferably cyclically displayable.","On-Screen Keyboard","Devices having numeric keypads are being used more and more to carry out tasks which involve writing data including text using the keypad. For example, mobile telephones are used to enter information into the telephone memory, for example names into telephone books in the phone, or the sending of text messages. Other examples include television remote controls used to enter text onto a television screen, for example when accessing the Internet using a television having a receiver\/decoder.","Such devices normally have only numeric keypads having a key for each of the numbers 0 to 9 and possibly a few other keys, for example # and *. In order to be able to enter text, at least 26 additional key functions are required for the letters of the alphabet, with still further key functions required where both upper and lower case letters, punctuation and symbols as well as accented letters are required.","In known keypads used for text entry, each key of the keypad is assigned a number of functions, and the user cycles through the available functions by pressing the key several times, the different functions usually being viewable on a display. When the user reaches the desired function for the key, the function is selected, usually by pressing a \u201cselect\u201d key or by moving the display cursor. It will be seen that, where a full set of functions is to be made available, each key of the keypad necessarily relates to several different functions. For example, the \u201c2\u201d key of a keypad may include the following functions:\n\n","A solution which is used for some models of mobile phones is to include a QWERTY keyboard, but clearly that is not ideal where a small keypad is desirable; the keys must remain large enough for use.","An aspect of the invention provides, a keypad having keys for performing functions, each key including a function option, wherein the function option of the key is changeable.","In an embodiment of the invention, each key has only one function option at a time, so that the key need only be pressed once to carry out that function. By providing that the functions options of the keys are changeable, it is still possible to use the keypad to carry out more functions than there are keys, but the efficiency of use can be improved.","Preferably, a set of options is arranged as a template for the keypad, the template being changeable. For example, if the keypad is to be used in one task for typing only numbers, it would be inefficient if, for each number to be typed, the user had to scroll through 3 or more letters. By changing the options of all the keys of the keypad to \u201cnumbers\u201d, a key need only be pressed once by the user to type the required number. Similarly, if the user wishes to type in capitals, the \u201ccapitals\u201d template can be applied to the keypad. Thus only capital letters will be included in the options for the key functions, reducing the number of functions through which the user must scroll to find the desired one.","Preferably, the key options are changed for the keypad as a whole but, alternatively, the options for only some of the keys might be changed.","An aspect of the invention provides a method aiding entry of data into a graphical user interface (GUI) using a keypad, the method comprising defining a plurality of templates, each template comprising a set of functions for the keypad.","An aspect of the invention provides apparatus for use in entering data into a graphical user interface using a keypad, the apparatus comprising a plurality of templates, each template comprising a set of functions for the keypad.","Preferably the templates are displayable on a display.","Preferably, a number of different templates are provided, and the method includes the step of selecting a template for use. Preferably the apparatus further comprises means for selecting a template. The different templates preferably provide different function sets for the keypad. For example, a template may provide the capital letters A to J for the number keys of the keypad. A different template may provide the capital letters K to T, and so on.","In embodiments of the invention described herein, the templates each include only 10 functions, for use with ten keys of the keypad. In a different embodiment, the keypad may include more keys and it may be possible to represent the whole alphabet on the template. For example, the keypad may comprise a keyboard. Different templates may be provided corresponding to different types of keyboard, for example different language variants, different numbers and arrangement of keys, and symbols and other characters. All the required functions might be included on each template, the different templates being provided corresponding to different key layout of different types of keypad or keyboard.","The term keypad used herein is preferably to be interpreted broadly to include all devices having an array of keys or buttons or the like. Thus the term preferably includes remote controllers, telephones and computer keyboards as well as other devices.","Preferably the method includes the step of displaying the template, for example on the screen of a computer or television. Preferably a plurality of available templates are displayed and preferably the user is able to choose one of the displayed templates for use.","In a preferred embodiment, the available templates are displayed as a grid, and preferably the user selects the desired template using the cursor keys of the keypad. The user may alternatively use a different device, for example a pointer device, for example a mouse.","Preferably, the display shows the functions of the template in a configuration corresponding to the arrangement of the relevant keys of the keypad. Preferably, the method includes displaying an image of a keypad. Preferably the step of selecting the template includes moving the image of the keypad relative to the templates on the screen.","Preferably the apparatus further includes a displayable keypad image, the apparatus preferably providing means for moving the keypad image relative to a display of the templates.","Preferably, the displaying of the image of the keypad on the screen includes the step of selecting the image of the keypad to be displayed. The layout of keys on a keypad can vary from one type of keypad to another and thus it is advantageous for the layout of keys on the template shown to correspond to the keypad layout.","Preferably the user moves the image of the keypad relative to the templates using cursor keys on the keypad.","The functions of the templates may be set out as QWERTY keyboards, the keyboard being split into various zones for the image of the keypad. For example, in one position, the keypad may be used to enter the letters q, w, e, a, s, d, z, x, c and SPACE.","In other embodiments, the functions of the templates are set out in other ways. Preferably, functions used often by the user are arranged so that they appear on more than one template. Preferably, the templates may be customised by the user.","The functions provided by a key of the template keyboard may comprise more than one letter, number or symbol. For example, where the keypad is used for a web browser, a key may be used to enter a text string, for example \u201chttp:\\\u201d or \u201cwww\u201d.","Preferably, the keypad template is displayed on the screen while the user enters the data.","An aspect of the invention provides a template for a keypad. Preferably the template is displayable in a GUI.","An aspect of the invention provides a method of entering data using a keypad, the method including selecting a template comprising a set of functions for the keypad.","The aspect of the invention further provides apparatus for entering data using a keypad, the apparatus including means for displaying a keypad template. Preferably the apparatus includes means for displaying a plurality of keypad templates and means for selecting a template.","Preferably the display of the keypad templates for data entry is separate from any other application that the apparatus may be running. For example, if the apparatus is running a web browser application and data needs to be entered in a dialog box, the user calls up the keypad templates which runs parallel to the browser application. Preferably, the keypad template application can be called from a plurality of applications in the apparatus.","The aspect of the invention also provides an application execution device for implementing a graphical user interface, comprising a processor, memory and an output port for outputting a signal to a display, memory having stored therein a program for carrying out an aspect of the invention. Preferably, the memory further has stored therein a library of keypad templates and preferably further has stored therein a library of keypad images.","The aspect of the invention further provides a library of keypad templates and\/or keypad images.","An aspect of the invention provides a computer program for carrying out a method of the invention.","General","Where reference is made herein to graphical and other objects, such term is to be interpreted broadly. In particular, it should not be interpreted as implying that the objects are defined by object-oriented program code.","The methods described herein are preferably carried out using an application execution device having a suitably programmed processor.","Preferably the inventions relate to the broadcasting and receiving of transmissions.","Any of the methods above may be carried out by a receiver\/decoder, such as a digital or analogue television receiver\/decoder. Alternatively, the methods may be carried out by a mobile telephone, a computer, or another device.","The inventions described herein also extend to a computer program for carrying out any of the described methods, and to a computer readable medium having stored thereon a program for carrying out any of the above methods. The invention also extends to an application for a receiver\/decoder arranged to perform a method of any aspect of the invention.","The inventions also extend to computer program products, for example comprising computer software and\/or computer software upgrades. Such computer program products may be, for example, transmitted to a user from a broadcast centre by, for example cable or satellite broadcast. The computer program products may be provided on a disc, for example a CD ROM. The computer program product may be tangibly embodied for example as software stored on a storage medium such as a hard disk or volatile or non-volatile memory, or as a signal.","Thus aspects of the invention further provide: a computer program product comprising code for:","defining a look object; and","associating the look object with the graphical object; a computer program product for use in defining a graphical object in a graphical user interface comprising:","code for providing a look object which controls the appearance of the graphical object; and","code for providing a widget object which controls operation of the graphical object; a computer program product for use in a method of controlling the appearance of a group of graphical objects, including code for defining a plurality of different displayable groups of graphical objects and for selecting a group of graphical objects from the plurality of displayable groups; a computer program product for use in a method of controlling the appearance of a group of graphical objects, comprising code for defining a displayable group of graphical objects; a computer program product for use in a method of controlling the appearance of a graphical object in a graphical user interface, comprising code for defining a plurality of graphical object elements of the graphical object for use in displaying a representation of the graphical object; a computer program product for use in a method of producing a kit of elements for a graphical object, comprising code for defining a set of fixed elements common to instances of the graphical object and for defining a set of repeatable elements; a computer program product for use in a method of displaying a representation of a graphical object in a graphical user interface, comprising code for assembling a plurality of graphical object elements; a computer program product for use in a method of controlling the appearance of a graphical object in a GUI, comprising code for defining a first displayable representation of a graphical object and for defining a second displayable representation of the graphical object, and code for displaying the second representation adjacent the first representation; a computer program product for use in a method of displaying a graphical object, comprising code for displaying a first representation of the graphical object, displaying a second representation of the graphical object, and displaying a link element linking the first representation and the second representation; a computer program product for use in a method of controlling the appearance of graphical objects in a graphical user interface, comprising code for defining a linked chain of graphical objects; a computer program product for use in a method of controlling the appearance of a graphical object in a graphical user interface, comprising code for defining a first graphical object, defining a second graphical object and defining a link element for linking graphical objects; a computer program product for use in a method of displaying representations of graphical objects in a graphical user interface, comprising code for displaying representations of graphical objects and for displaying a representation of a link element for illustrating a link between graphical objects; a computer program product for use in a method of controlling the appearance of a graphical object in a GUI, comprising code for defining a first representation of the graphical object and a second representation of the graphical object, and code for selectively displaying the first and second representations, preferably cyclically displaying the representations; a computer program product for use in a method of displaying a representation of a graphical object in a GUI, comprising code for displaying a first representation of the graphical object, and for subsequently displaying a second representation of the graphical object; and a computer program product as herein described for use with a receiver\/decoder.","Also provided is a computer program product comprising a memory and processor, the memory having stored therein an application, and the processor (under the control of the application) being adapted to carry out the any of the methods described herein; a computer program product comprising a program for carrying out any of the methods described herein; and a computer program for carrying out any of the methods described herein.","Also provided by the invention is a computer readable medium having stored thereon a program for carrying out any of the methods as described herein and a computer readable medium having stored thereon a computer program product as described herein.","Also provided is a signal tangibly embodying a computer program product as described herein.","The invention further provides a method substantially as herein described with reference to and illustrated in the accompanying drawings and apparatus substantially as herein described with reference to and as illustrated in the accompanying drawings.","Where aspects of the invention relate to graphical objects, the invention provides a method of defining the graphical objects, of controlling the appearance of the graphical objects and also to displaying representations of the graphical objects on a suitable display, for example a television screen or LCD of a mobile telephone, and to the graphical objects themselves. The invention also provides apparatus for carrying out the invention, and the methods of the invention, preferably using a suitably programmed processor.","Preferably the invention finds application for digital television, and preferably a web browser for a television. The invention may be embodied in a receiver\/decoder for example for a digital television. Features of the aspects of the inventions described above are preferably provided by a processor and\/or memory, for example a processor and memory of the receiver\/decoder.","Any of the methods described herein may be carried out by the receiver\/decoder, such as a digital or analogue television receiver\/decoder.","The term \u201creceiver\/decoder\u201d used herein may connote a receiver for receiving either encoded or non-encoded signals, for example, television and\/or radio signals, which may be broadcast or transmitted by some other means. The term any also connote a decoder for decoding received signals. Embodiments of such receiver\/decoders may include a decoder integral with the receiver for decoding the received signals, for example, in a \u201cset-top box\u201d, such a decoder functioning in combination with a physically separate receiver, or such a decoder including additional functions, such as a web browser, a video recorder, or a television.","It will be understood that the present invention has been described herein purely by way of example, and modifications of detail can be made within the scope of the invention.","Each feature disclosed in the description, and (where appropriate) the claims and drawings may be provided independently or in any appropriate combination.","Where features of the apparatus are described herein as \u201cmeans for\u201d a particular function, it is intended that those terms be interpreted broadly and are preferably not interpreted to be limited to any particular embodiment of the invention described herein. Features of the apparatus are, in preferred embodiments provided by a suitably programmed computer or computers, and thus features of the apparatus are preferably provided by the relevant features of a computer or product comprising a computer program. For example, features of the apparatus may be provided by a processor, or other part of a computer, for example a memory or data store.","Features of one aspect may be applied to any other aspect; method features may be applied to apparatus aspects and vice versa.","An overview of a digital television system  is shown in . The invention includes a mostly conventional digital television system  that uses the known MPEG-2 compression system to transmit compressed digital signals. In more detail, MPEG-2 compressor  in a broadcast centre receives a digital signal stream (typically a stream of video signals). The compressor  is connected to a multiplexer and scrambler  by linkage .","The multiplexer  receives a plurality of further input signals, assembles the transport stream and transmits compressed digital signals to a transmitter  of the broadcast centre via linkage , which can of course take a wide variety of forms including telecommunications links. The transmitter  transmits electromagnetic signals via uplink  towards a satellite transponder , where they are electronically processed and broadcast via notional downlink  to earth receiver , conventionally in the form of a dish owned or rented by the end user. Other transport channels for transmission of the data are of course possible, such as terrestrial broadcast, cable transmission, combined satellite\/cable links, telephone networks etc.","The signals received by receiver  are transmitted to an integrated receiver\/decoder  owned or rented by the end user and connected to the end user's television set . The receiver\/decoder  decodes the compressed MPEG-2 signal into a television signal for the television set . Although a separate receiver\/decoder is shown in , the receiver\/decoder may also be part of an integrated digital television. As used herein, the term \u201creceiver\/decoder\u201d includes a separate receiver\/decoder, such as a set-top box, and a television having a receiver\/decoder integrated therewith.","In a multichannel system, the multiplexer  handles audio and video information received from a number of parallel sources and interacts with the transmitter  to broadcast the information along a corresponding number of channels. In addition to audiovisual information, messages or applications or any other sort of digital data may be introduced in some or all of these channels interlaced with the transmitted digital audio and video information.","A conditional access system  is connected to the multiplexer  and the receiver\/decoder , and is located partly in the broadcast centre and partly in the receiver\/decoder. It enables the end user to access digital television broadcasts from one or more broadcast suppliers. A smartcard, capable of deciphering messages relating to commercial offers (that is, one or several television programmes sold by the broadcast supplier), can be inserted into the receiver\/decoder . Using the receiver\/decoder  and smartcard, the end user may purchase commercial offers in either a subscription mode or a pay-per-view mode. As used herein, the term \u201csmartcard\u201d includes, but not exclusively so, any chip-based card device, or object of similar function and performance, possessing, for example, microprocessor and\/or memory storage. Included in this term are devices having alternative physical forms to a card, for example key-shaped devices such as are often used in TV decoder systems.","As mentioned above, programmes transmitted by the system are scrambled at the multiplexer , the conditions and encryption keys applied to a given transmission being determined by the access control system . Transmission of scrambled data in this way is well known in the field of pay TV systems. Typically, scrambled data is transmitted together with a control word for descrambling of the data, the control word itself being encrypted by a so-called exploitation key and transmitted in encrypted form.","The scrambled data and encrypted control word are then received by the decoder  having access to an equivalent to the exploitation key stored on a smart card inserted in the decoder to decrypt the encrypted control word and thereafter descramble the transmitted data. A paid-up subscriber will receive, for example, in a broadcast monthly ECM (Entitlement Control Message) the exploitation key necessary to decrypt the encrypted control word so as to permit viewing of the transmission.","Interactive System","An interactive system , also connected to the multiplexer  and the receiver\/decoder  and again located partly in the broadcast centre and partly in the receiver\/decoder, enables the end user to interact with various applications via a modemmed back channel . The modemmed back channel may also be used for communications used in the conditional access system .",{"@attributes":{"id":"p-0277","num":"0289"},"figref":"FIG. 1","i":"b ","b":["16","1"]},"For example, the interactive system  allows an end user to buy items from on-screen catalogues, consult local news and weather maps on demand and play games through their television set.","The interactive system  comprises in overview four main elements:\u2014\n\n","The interactive television system operates using \u201capplications\u201d which control the functions of the receiver\/decoder and various devices contained therein. Applications are represented in the engine  as \u201cresource files\u201d. A \u201cmodule\u201d is a set of resource files and data. A \u201cmemory volume\u201d of the receiver\/decoder is a storage space for modules. Modules may be downloaded into the receiver\/decoder  from the MPEG-2 transport stream.","Receiver\/Decoder","Referring to , the various elements of receiver\/decoder  will now be described in terms of functional blocks.","The receiver\/decoder , which may be, for example, a digital set-top box (DSTB), comprises a central processor  including associated memory elements and adapted to receive input data from a serial interface , a parallel interface , a modem  (connected to the modem back channel  of ), and switch contacts  on the front panel of the decoder.","The receiver\/decoder is additionally adapted to receive inputs from an infra-red remote control  via a control unit  and also possesses two smartcard readers ,  adapted to read bank and subscription smartcards , respectively. The subscription smartcard reader  engages with an inserted subscription card  and with a conditional access unit  to supply the necessary control word to a demultiplexer\/descrambler  to enable the encrypted broadcast signal to be descrambled. The decoder also includes a conventional tuner  and demodulator  to receive and demodulate the satellite transmission before being filtered and demultiplexed by the unit .","Processing of data within the receiver\/decoder is generally handled by the central processor . illustrates the software architecture of the central processor  of the receiver\/decoder. With reference to , the software architecture comprises a Run-Time-Engine , a Device Manager  and a plurality of Devices  and Device Drivers  for running one or more applications .","As used in this description, an application is preferably a piece of computer code for controlling high level functions of preferably the receiver\/decoder . For example, when the end user positions the focus of remote control  on a button object seen on the screen of the television set  and presses a validation key, the instruction sequence associated with the button is run.","An interactive application proposes menus and executes commands at the request of the end user and provides data related to the purpose of the application. Applications may be either resident applications, that is, stored in the ROM (or FLASH or other non-volatile memory) of the receiver\/decoder , or broadcast and downloaded into the RAM or FLASH memory of the receiver\/decoder .","Applications are stored in memory locations in the receiver\/decoder  and represented as resource files. The resource files comprise graphic object description unit files, variables block unit files, instruction sequence files, application files and data files, as described in more detail in the above-mentioned patent specifications.","The receiver\/decoder contains memory divided into a RAM volume, a FLASH volume and a ROM volume, but this physical organization is distinct from the logical organization. The memory may further be divided into memory volumes associated with the various interfaces. From one point of view, the memory can be regarded as part of the hardware; from another point of view, the memory can be regarded as supporting or containing the whole of the system shown apart from the hardware.","Software Architecture","The central processor  can be regarded as centred on a run time engine  forming part of a virtual machine . This is coupled to applications on one side (the \u201chigh level\u201d side), and, on the other side (the \u201clow level\u201d side), via various intermediate logical units discussed below, to the receiver\/decoder hardware , comprising the various ports as discussed above (that is, for example, the serial interface , the parallel interface , modem , and control unit ).","With specific reference to , various applications  are coupled to the virtual machine ; some of the more commonly used applications may be more or less permanently resident in the system, as indicated at , while others will be downloaded into the system, eg from the MPEG data stream or from other ports as required.","The virtual machine  includes, in addition to the run time engine , some resident library functions  which include a toolbox . The library contains miscellaneous functions in C language used by the engine . These include data manipulation such as compression, expansion or comparison of data structures, line drawing, etc. The library  also includes information about firmware in the receiver\/decoder , such as hardware and software version numbers and available RAM space, and a function used when downloading a new device . Functions can be downloaded into the library, being stored in FLASH or RAM memory.","The run time engine  is coupled to a device manager  which is coupled to a set of devices  which are coupled to device drivers  which are in turn coupled to the ports or interfaces. In broad terms, a device driver can be regarded as defining a logical interface, so that two different device drivers may be coupled to a common physical port. A device will normally be coupled to more than one device driver; if a device is coupled to a single device driver, the device will normally be designed to incorporate the full functionality required for communication, so that the need for a separate device driver is obviated. Certain devices may communicate among themselves.","Each function of the receiver\/decoder  is represented as a device  in the software architecture of the receiver\/decoder . Devices can be either local or remote. Local devices  include smartcards, SCART connector signals, modems, serial and parallel interfaces, a MPEG video and audio player and an MPEG section and table extractor. Remote devices , executed in a remote location, differ from local devices in that a port and procedure must be defined by the system authority or designer, rather than by a device and device driver provided and designed by the receiver\/decoder manufacturer.","The run time engine  runs under the control of a microprocessor and a common application programming interface (API). They are installed in every receiver\/decoder  so that all receiver\/decoders  are identical from the application point of view.","The engine  runs applications  on the receiver\/decoder . It executes interactive applications  and receives events from outside the receiver\/decoder , displays graphics and text, calls devices for services and uses functions of the library  connected to the engine  for specific computation.","The run time engine  is an executable code installed in each receiver\/decoder , and includes an interpreter for interpreting and running applications. The engine  is adaptable to any operating system, including a single task operating system (such as MS-DOS). The engine  is based on process sequencer units (which take various events such as a key press, to carry out various actions), and contains its own scheduler to manage event queues from the different hardware interfaces. It also handles the display of graphics and text A process sequencer unit comprises a set of action-groups. Each event causes the process sequencer unit to move from its current action-group to another action-group in dependence on the character of the event, and to execute the actions of the new action-group.","The engine  comprises a code loader to load and download applications  into the receiver\/decoder memory. Only the necessary code is loaded into the RAM or FLASH memory, in order to ensure optimal use. The downloaded data is verified by an authentication mechanism to prevent any modification of an application  or the execution of any unauthorized application. The engine  further comprises a decompressor. As the application code (a form of intermediate code) is compressed for space saving and fast downloading from the MPEG stream or via a built-in receiver\/decoder mode, the code must be decompressed before loading it into the RAM. The engine  also comprises an interpreter to interpret the application code to update various variable values and determine status changes, and an error checker.","Architecture of Receiver\/Decoder","The receiver\/decoder contains five software layers, organized so that the software can be implemented in any receiver\/decoder and with any operating system. Referring to , the various software layers are Application Layer , Application Programming Interface (API) layer , Virtual Machine Layer , Device Layer  and System Software\/Hardware Layer .","The Application Layer  encompasses applications that are either resident in or downloaded to the receiver\/decoder. They may be interactive applications used by customers, written in, for example, Java, HTML, MHEG-5 or other languages, or they may be applications used by the receiver\/decoder to run such applications. This layer is based on a set of open Application Programming Interfaces (APIs) provided by the Virtual Machine layer. This system allows applications to be downloaded to flash or RAM memory in the receiver\/decoder on-the-fly or on demand. The application code can be transmitted in compressed or uncompressed format using protocols such as Data Storage Media Command and Control (DSMCC), Network File Server (NFS) or other protocols.","Interactive applications are applications that the user interacts with, for example, to obtain products and services, such as electronic program guides, telebanking applications and games.","Various security features are provided for these downloaded applications and data, as follows:\n\n","The following resident applications are used to manage interactive applications:\n\n","The API layer  provides high-level utilities for interactive application development. It includes several packages that make up this high-level API. The packages provide all the functionality necessary to run interactive applications. The packages are accessible by the applications.","In a preferred embodiment the API is adapted to run applications written in the Java programming language. Furthermore, it can interpret HTML and other formats, such as MHEG-5. Besides these interpreters, it also includes other packages and service modules that are detachable and extensible as requirements dictate.","The Virtual Machine layer  is composed of language interpreters and various modules and systems. It consists of everything necessary to receive and execute interactive applications in the receiver\/decoder, including the following:\n\n","Furthermore, the DAVIC resource notification model is supported so that client resources are efficiently managed.","The Device Interface layer  includes a Device Manager and devices. Devices are software modules which consist of the logical resources necessary for management of external events and physical interfaces. The Device Layer manages communication channels between drivers and applications and provides enhanced error exception checking. Some examples of managed devices are: card readers, modems, network, PCMCIA (Personal Computer Memory Card International Association), LED display and so on. Programmers do not have to deal with this layer directly, since the API layer controls the devices from above.","The System Software\/Hardware layer  is provided by the manufacturer of the receiver\/decoder. Because of the modularity of the system and because services supplied by the OS (such as event scheduling and memory management) are part of the Virtual Machine, the higher layers are not tied to a particular real-time operating system (RTOS) or to a particular processor.","Widget Sets","In a preferred embodiment, a widget set is provided for use in applications to run in a graphical user interface (GUI). One particular application of such a widget set is to provide widgets in a GUI display of a receiver\/decoder for digital television. Each widget is implemented as an object-oriented module such that, for each widget, there is a corresponding widget class. Thus, any widget may be built up from simpler component widgets by inheriting or aggregating classes of other widgets.",{"@attributes":{"id":"p-0310","num":"0345"},"figref":"FIG. 3","b":["410","420","430"]},"Each of the widget classes implements methods and event handlers to control operation of the widget. The widget classes may also contain methods for drawing some parts of the widget. However, in order to provide a particular appearance or \u201clook\u201d for the widget, the widget classes invoke drawing methods of a look object class with which the widget class is associated. This will be described in further detail below.","Look Class Public Methods and API","In order that the look object classes and widget classes can interact, it is necessary for the look object classes to have a consistent set of public methods that are guaranteed to be available for use by the widget class. In particular, the look object class must provide a standard API, which contains methods that the widget class can invoke in order to draw itself on a GUI display.","The API used by widgets is defined in a base class, from which all looks are derived. The API comprises the following elements:","1. General display methods","2. Particular display methods","3. Control of the creation and destructions of instances","4. Control of borders","5. Control of modifications","General display methods are those which are available to all widgets while particular display methods are particular to certain types of widget.","Looks are constructed using a hierarchical architecture. A new look class is created by inheriting the attributes, methods and default values of the class from which it is derived, and then adding new attributes, methods and default values, or overriding some or all of those inherited.","A look class is organised as a table containing pointers to public methods. A look class which is derived from another look class may therefore redefine a method by changing the relevant pointer so that it points to another method. Typically, a look class only implements some of the available public methods.","In one implementation, public methods, known as dummy methods, are provided, which do nothing other than return the call. If a method not implemented by the look class is called by the widget, a dummy method is called. This is done in order to ensure error free functioning of method calls even when the method is in fact not implemented. A disadvantage of calling dummy methods is that time may be wasted in calling a method which does nothing.","In another implementation, look classes are provided with validation masks. A validation mask defines which methods can be called by the look class, so that methods which are not implemented are not called. A widget can access the validation mask of a look class to optimise the drawing of the widget. In this case, the widget is aware of methods which are not implemented, so the widget will avoid generating calls to such methods. In this way, it is possible to prevent time from being wasted in calling dummy methods.","A look class may be derived from two or more other classes (multi-heritage). This can enable a look class to be created that is an union of two or more other looks. As mentioned above, when a look class is created, it adopts the attributes, methods and default values of the look class from which it is derived. In order to implement multi-heritage, the look also contains one or more pointers to the additional classes from which it derives attributes, methods and default values. The look can then access those attributes, methods and default values, without having to copy or create them itself.","In another embodiment, when a look class is created, it adopts the attributes, methods and default values of all of the look classes from which it is derived.","The principle of multi-heritage is also useful in situations where non-standard widgets are designed, which may require the look to implement non-standard methods. A pointer in the look can point to a second look class which contains the non-standard methods that are required to display the widget.","It is important to ensure that the various look classes from which a look is derived do not conflict with each other. This can be done by ensuring that the additional look classes only contain methods which are not in the main look class from which the look is derived, or by giving an order of precedence to the various classes.","An example of the public methods of a look object class is set forth below.","\/* Initialisation of instances *\/","MhwWgtLookInitDefault (MhwWgtLookclass* MhwWgtLookAtts*);","MhwWgtLookInitClass (Void);","MhwWgtLookResetDefault (MhwWgtLookclass*);","MhwWgtLookAttsGetDefault (MhwWgtLookClass*, MhwWgtLookAtts*);","MhwWgtLookAttsInit (MhwWgtLookAtts *);","\/* Retrieve and set border dimensions *\/","MhwWgtLookAttsGetBorderwidthBottotm (MhwWgtLookAtts *, Card8*);","MhwWgtLookAttsGetBorderWidthLeft (MhwWgtLookAtts *, Card8*);","MhwWgtLookAttsGetBorderWidthRight (MhwWgtLookAtts *, Card8*);","MhwWgtLookAttsGetBorderWidthTop (MhwWgtLookAtts *, Card8*);","MhwWgtLookAttsSetBorderwidthBottom (MhwWgtLookAtts *, Card8);","MhwWgtLookAttsSetBorderWidthLeft (MhwWgtLookAtts *, Card8);","MhwWgtLookAttsSetBorderwidthRight (MhwWgtLookAtts *, Card8);","MhwWgtLookAttsSetBorderWidthTop (MhwWgtLookAtts *, Card8);","\/* Retrieve and Set Colours*\/","MhwWgtLookAttsGetColorBackground (MhwWgtLookAtts*, MhwWgtColor*);","MhwWgtLookAttsGetColorBlack (MhwWgtLookAtts*, MhwWgtColor*);","MhwWgtLookAttsGetColorDarkGray (MhwWgtLookAtts*, MhwWgtColor*);","MhwWgtLookAttsGetColorForeground (MhwWgtLookAtts*, MhwWgtColor*);","MhwWgtLookAttsGetColorHighlight (MhwWgtLookAtts*, MhwWgtColor*);","MhwWgtLookAttsGetColorLightGray (MhwWgtLookAtts*, MhwWgtColor*);","MhwWgtLookAttsGetColorMapAndVisual (MhwWgtLookAtts*, MhwWgtColorMapId*, MhwWgtVisual*);","MhwWgtLookAttsGetColorMiddleGray (MhwWgtLookAtts*, MhwWgtColor*);","MhwWgtLookAttsGetColorTransparent (MhwWgtLookAtts*, MhwWgtColor*);","MhwWgtLookAttsGetColorVeryLightGray (MhwWgtLookAtts*, MhwWgtColor*);","MhwWgtLookAttsGetColorWhite (MhwWgtLookAtts*, MhwWgtColor*);","MhwWgtLookAttsSetColorBackground (MhwWgtLookAtts*, MhwWgtColor*);","MhwWgtLookAttsSetColorBlack (MhwWgtLookAtts*, MhwWgtColor*);","MhwWgtLookAttsSetColorDarkGray (MhwWgtLookAtts*, MhwWgtColor*);","MhwWgtLookAttsSetColorForeground (MhwWgtLookAtts*, MhwWgtColor*);","MhwWgtLookAttsSetColorHighlight (MhwWgtLookAtts*, MhwWgtColor*);","MhwWgtLookAttsSetColorLightGray (MhwWgtLookAtts*, MhwWgtColor*);","MhwWgtLookAttsSetColorMapAndVisual (MhwWgtLookAtts*, MhwWgtColorMapId, MhwWgtVisual);","MhwWgtLookAttsSetColorMiddleGray (MhwWgtLookAtts*, MhwWgtColor);","MhwWgtLookAttsSetColorTransparent (MhwWgtLookAtts*, MhwWgtColor);","MhwWgtLookAttsSetColorVeryLightGray (MhwWgtLookAtts*, MhwWgtColor);","MhwWgtLookAttsSetColorWhite (MhwWgtLookAtts*, MhwWgtColor);","\/* Retrieve and Set Heritage Data *\/","MhwWgtLookAttsGetHeritageData1 (MhwWgtLookAtts*, Void**);","MhwWgtLookAttsSetHeritageData1 (MhwWgtLookAtts*, Void*);","\/* Constructor *\/","MhwWgtLookNew (MhwWgtLookAtts*);","\/* Destructor *\/","MhwWgtLookDelete (anObject)","\/* Standard API *\/","MhwWgtLookDrawAnchor (anObject, aWidget, aX, aY, aW, aH, aText, aLength, anAscent, aState)","MhwWgtLookDrawBackground (anObject, aWidget, aX, aY, aW, aH)","MhwWgtLookDrawCheckSymbol (anObject, aWidget, aX, aY, aW, aH, aState, aSymbol)","MhwWgtLookDrawChoiceSymbol (anObject, aWidget, aX, aY, aW, aH)","MhwWgtLookDrawCross (anObject, aWidget, aX, aY, aW, aH)","MhwWgtLookDrawCursor (anObject, aWidget, aX, aY, anAscent, aH)","MhwWgtLookDrawForeground (anObject, aWidget, ax1 aY1 aW, aH)","MhwWgtLookDrawFocus (anObject, aWidget, aX, aY, aW, aH)","MhwWgtLookDrawHighlight (anObject, aWidget, aX, aY, aW, aH)","MhwWgtLookDrawInset (anObject, aWidget1 aX, aY, aW, aH)","MhwWgtLookDrawIterm (anObject, aWidget, aX, aY, aW, aH, aText, aTextLength, anAscent, aState)","MhwWgtLookDrawOutset (anObject, aWidget, aX, aY, aW, aH)","MhwWgtLookDrawRelief (anObject, aWidget, aX, aY, aW, aH, aRelief)","MhwWgtLookDrawSelectedBG (anObject, aWidget, aX, aY, aW, aH)","MhwWgtLookDrawSlidArrow (anObject, aWidget, aX, aY, aW, aH, aDirection)","MhwWgtLookDrawSlidLift (anObject, aWidget, aX, aY, aW, aH)","MhwWgtLookDrawString (anObject, aWidget, aX, aY, aText, aLength, anAscent)","MhwWgtLookGetBorderWidth (anObject, aBorder)","MhwWgtLookGetClassId (anObject)","MhwWgtLookGetClassName (anObject)","MhwWgtLookGetItemBorderWidth (anObject)","MhwWgtLookGetMethodMask (anObject)","MhwWgtLookGetPreferredSizeArrow (anObject)","MhwWgtLookGetPreferredSizeCheck (anObject)","MhwWgtLookGetPreferredSizeChoice (anObject)","MhwWgtLookGetPreferredSizeCross (anObject)","MhwWgtLookGetUpdateCounter (anObject)","MhwWgtLookIsInstanceOf (anObject, aClassId)","MhwWgtLookReDrawItem (anObject, aWidget, aX1 aY, aW, aH, aText, aLength, anAscent, aState)","MhwWgtLookRef (anObject)","MhwWgtLookSetBorderWidth (anObject, aBorder, aWidth)","MhwWgtLockUnDrawCross (anObject, aWidget, aX, aY, aW, aH)","MhwWgtLookUnDrawCursor (anObject, aWidget, aX, aY anAscent, aH)","MhwWgtLookunDrawFocus (anObject, aWidget, aX, aY, aW, aH)","MhwWgtLookunDrawHighlight (anObject, aWidget, aX, aY, aW, aH)","MhwWgtLookunDrawRelief (anObject, aWidget, aX, aY, aW, aH)","MhwWgtLookunRef (anObject)","MhwWgtLookGetBackground (anObject)","MhwWgtLookGetColorBlack (anObject)","MhwWgtLookGetColorDarkGray (anObject)","MhwWgtLookGetColorHighlight (anObject)","MhwWgtLookGetColorLightGray (anObject)","MhwWgtLookGetColorMap (anObject)","MhwWgtLookGetColorMiddleGray (anObject)","MhwWgtLookGetColorTransparent (anObject)","MhwWgtLookGetColorVeryLightGray (anObject)","MhwWgtLookGetColorWhite (anObject)","MhwWgtLookGetColorForeground (anObject)","MhwWgtLookGetColorHeritageData1 (anObject)","MhwWgtLookGetColorHeritageLink1 (anObject)","Creating and Displaying a Widget","When an application requires a widget to appear on the display of a GUI, the first task it must perform is to construct an instance of the widget class. During creation of the widget instance, a look class instance becomes associated with the widget class instance. The particular look is chosen as follows:\n\n","Once the widget class has been instantiated, the application can invoke an appropriate one of its public methods to display it.","The widget class also preferably provides a public method that can be called with a pointer to a look class instance, and that look class instance then becomes associated with the widget class instance. This causes the appearance of the widget to change in accordance with the newly associated look class instance. It should be understood that \u201cassociation\u201d is, in reality, nothing more than setting the value of a field within the widget class instance. To associate the widget with a different look class can, in the simplest of embodiments, be done simply by making an assignment to the field. (However, see the comments below relating to memory management and the method MhwWgtXxxSetLook.) Moreover, many widget class instances may be associated with one look class instance. This is illustrated diagrammatically in .","When a widget class method is called to draw the widget on a GUI display, it builds the image of the widget in the following order:","1. The background of the widget (for example, a background colour or an image).","2. Background overlay (for example, a logo)","3. Foreground of the widget","4. Foreground overlay (for example, a logo)","5. The widget border.","6. Highlighting","7. Input focus.","For a given widget, certain parts may be absent. The presence or absence of a part of the widget depends on the following criteria.\n\n","In a typical example, the following steps are carried out.","Firstly the background of the widget is drawn by the widget class method itself, for example, by painting a background colour, a background pattern or an image. The background overlay is then drawn by invoking the public method of the associated look instance MhwWgtLookDrawBackground specifying appropriate arguments for the height, width and position of the widget on the display. The appearance of the background is thus modified by the look, for example, by overlaying a logo.","The widget class method must then build up the foreground of the widget; that is to say, it creates the visual objects that actually are manipulated by a user or display information when the widget is in use. For example, the widget might implement a check box, in which case it invokes the look class method MhwWgtLookDrawCheckSymbol. The look may then modify the foreground, for example by overlaying a logo.","The border region of the widget is then drawn, as will be described below.","If the widget class determines that one of the objects within the widget has input focus, it invokes the look class method MhwWgtLookDrawFocus to indicate this in the displayed widget. Similarly, if part of the widget is to be highlighted, the widget class invokes the look class method MhwWgtLookDrawHighlight.","Widget Border Management","One specific example of the way in which the look controls the appearance of the widget on a GUI display is in the management of borders. The appearance of a widget with borders in its most general form on a GUI display is shown in . The widget  occupies a rectangular area in the display of a GUI. The area occupied by the widget includes two regions: an inner operative region  surrounded by a border region.","The border region typically does not contribute to the function of the widget (although it may, in some cases, by used by a user to move and\/or re-size the widget). Therefore, there is considerable scope for variation of the appearance of the border region in accordance with a user's wishes. For example, the colour, width, background pattern can all be selected to appeal to a user or to provide a consistent appearance. Therefore, responsibility for drawing the border is given to the look class.","The look maintains four dimensions to specify the width of the border. These specify the distance from the left, right, top and bottom of the operative region  to the edge of the widget. These dimensions are indicated respectively at L, R, T, and B in . Values for these dimensions are specified in the default look. An application may define a class derived from the default look class in which the values are overridden to create a look that creates a widget with a border of non-standard width. An application (for example, a look manager) can also change the values at run time by invoking the look methods MhwWgtLookAttsSetBorderwidthBottom, MhwWgtLookAttsSetBorderWidthLeft, MhwWgtLookAttsSetBorderwidthRight, or MhwWgtLookAttaSetBorderWidthTop.","Within the look class there is code that controls the detailed layout of a border according to values passed to the look class by the widget class.","Widget Colour Management","A look also includes a definition of colours, so that any widget instance which is associated with a particular look instance will use the colours defined in that look instance. In one embodiment, a look defines the following colours:\n\n","The colour definitions in the look are used when drawing a widget. For example, if a black line is to be drawn when displaying a widget, the colour which has been defined as \u201cblack\u201d will be used. For example, if the look is to have a red hue, then \u201cblack\u201d may be defined to be dark red, and \u201cwhite\u201d may be defined to be light pink, with various shades of red being defined in between. In this example, a drawing operation which would normally draw a black line will instead draw a dark red line, and so on.","In addition, the look defines a colour map which sets the actual colour values which are to be used when displaying any particular colour on the display of a GUI.","Creating a Modified Widget","Suppose that the default look method MhwWgtLookDrawCheckSymbol draws a rectangular box which is either empty or which contains a small tick symbol depending on its state, and that this defines the look of a normal check box in a GUI. Now suppose that another widget is required in which either a tick or a cross is displayed. The appearance is entirely controlled by the look class, so only the look class need be altered. Moreover, a new look class to implement this behaviour can be derived from the existing look class, and provide only one method MhwWgtLookDrawCheckSymbol to override the method of the same name in the base look class. Moreover, when the method MhwWgtLookDrawCheckSymbol is invoked with the argument aState set to true, the method MhwWgtLookDrawCheckSymbol of the base class can be called to draw a tick. New code need be written only to handle the case where a cross is to be drawn. Thus, a new widget can be created with a minimum of programming effort.","It should be understood that this procedure does not alter the appearance of the original check box widget; this widget uses the base look class which has not been amended. In order to effect a change to the appearance of the original check box widgets in an application, the method MhwWgtLookDrawCheckSymbol in the base look class must be amended. All check box widgets derived from that class will then change their appearance following the next occasion (at compile time, or run time, as the case may be) upon which the look class is linked with the application.","The widget class will, in principle, co-operate to create a widget with any class having an appropriate set of public methods and properties as a look class. However, there is advantage in deriving all look classes from as small as possible a number of common base classes, and ideally just one base class. Those familiar with object-oriented programming will understand that this minimises the use of memory and other resources by the look classes. A derived class has a pointer to its base class so that it can access method code and static data of the base class without duplication of such code or data in memory.","Version Control","It may be that some widget instances have a very long life. For example, the root window of a window manager, a taskbar widget in a workstation display, and so forth. In such cases, there is a strong possibility that the look classes might be updated during the life of the widget. The widget class must be caused to re-draw itself when this happens.","One a way to achieve this is to give each look class an update counter which is exported as a public property or is accessible though a public method. When a widget class is instantiated, the widget class instance queries the update counter of the associated look, and stores the value of the update counter in memory local to the widget class instance. If the instance of the look class is subsequently updated, the widget class instance can detect this change by comparing the value that is stored in its local memory with the value of the update counter in the look class instance. If the look class instance has been updated, the widget can then redraw itself using the methods of the look class.","Construction and Destruction of Look Class Instances","In general, there will be fewer instances of each look class than of each widget class. In some cases, there may be just one instance of a look base class referred to by all widget class instances in an application. There may also be instances of derived look classes referred to by some of the widget class instances of an application. However, a widget class cannot assume that there will always be a look class instance in existence at the time that the widget class is being instantiated; the widget instance might be the first to require association with a particular look class.","Therefore, it is proposed that during instantiation of each widget class, the widget class constructor invokes the associated look class constructor MhwWgtLookNew. If no instance of the look class exists, then a new instance is created. A value of 1 is then stored in a reference counter held in the local memory of the look class instance. If an instance of the look class already exists, the look class constructor returns a pointer to it, and increments the reference counter.","During destruction of each widget class instance, the destructor of the widget class invokes the destructor MhwWgtLookDelete for the associated look class instance. The destructor MhwWgtLookDelete decrements the reference counter. If the counter remains greater than zero, the destructor simply returns. However, if the destructor reaches zero, then no widget class instances (other that the one undergoing destruction) are associated with that look class instance, in which case the look class destructor proceeds to remove the look class instance from memory.","The widget class method MhwWgtXxxSetLook can be called to change the look with which a particular widget class instance is associated. Within this method, a call is first made to the destructor of the outgoing look class instance, and a call is then made to the reference function of the new look class to obtain a pointer to a class instance. This ensures that the reference counters of the look classes are properly updated.","There must also provision for a new instance of a look class to be created even if an instance already exists. This allows an application to have more than one instance of any given look class, and to set different attributes in the different instances. For example, there may be two instances of the same look class identical in all respects other than one has all attributes remaining in accordance with their defaults, and the other having different values assigned to one or more of its attributes (border width, colour, and so forth).","Look Managers","As will be understood, the system of look classes and instances allows very detailed control over the overall look of an application. For instance, just one attribute of any look class can be changed to effect a minor change to the look of an application. Accordingly, a look manager application may be provided to enable a user to alter these attributes as required.","Such an application typically includes a GUI display including widgets embodying the invention in order that the user can immediately see the effect of changing the attributes of the look upon the appearance of the widget.","Web Browser","The internet navigator interface will now be described with reference to the accompanying drawings.",{"@attributes":{"id":"p-0367","num":"0417"},"figref":"FIG. 6","i":"a "},"The main screen shows a vertical chain  which includes the main menu which includes various buttons as a linked list. The buttons are linked by link elements of the chain. The buttons shown in the chain  of include the RELOAD\/STOP button , the PREVIOUS button , NEXT button , HISTORY button , BOOKMARK button , SETTINGS button  and the QUIT button .","The main menu chain  is arranged to be superimposed on the hyper-text markup language (HTML) document to be displayed on the screen . In , no HTML document is displayed and the screen  is blank apart from the main menu chain .","The web browser includes several preferences which can be set by the user. The browser includes a facility for setting several user profiles.","The user has a controller with which he can navigate between objects on the screen , highlight objects and select objects. In the present example, the controller used is a television remote control . The number keys  are used to enter data; the cursor keypad  is used to navigate around the screen. The cursor keypad  includes an UP key , a DOWN key , a LEFT key  and a RIGHT key . The cursor keypad  also incudes a SELECT key  which is used for selecting objects on the screen.","The UP key  and the DOWN key  are used to move a focus, in this example a highlight up and down the chain  to selectively highlight the buttons , , , , ,  and . When a button is highlighted, it can be selected using the select key .","When an HTML page is displayed, any button of the remote control calls the chain  (toolbar). The chain  can also be turned on and off by the user. In one settings option the chain  automatically is hidden when a new HTML page is displayed, the user calling up the chain  when he wants to move to another HTML page.",{"@attributes":{"id":"p-0374","num":"0424"},"figref":["FIG. 7","FIG. 6"],"i":"a ","b":["1112","1110","1114"]},{"@attributes":{"id":"p-0375","num":"0425"},"figref":["FIG. 6","FIG. 7"],"i":"a ","b":"1186"},"The user moves the highlight down the chain  using the DOWN key . In , the PREVIOUS button  is now highlighted.  shows how, when the highlight is on the PREVIOUS button  a \u201ctooltip\u201d comprising a text box  appears on the screen. In the present example, the tooltip appears as soon as the relevant icon is highlighted. The preferences could be set so that the tooltip appears after a delay when the button is highlighted. The text box  includes the word \u201cprevious\u201d to indicate the function of the PREVIOUS button . By activating the PREVIOUS button, by pressing the SELECT key , the browser moves to the previous page viewed.","In , the highlighting is moved down to the NEXT button  and, after a short time, a tooltip comprising a text box  including the word \u201cnext\u201d appears to assist the user.","In , the HISTORY button  is highlighted and its associated tooltip  appears with the word \u201chistory\u201d. The HISTORY button  has more than one function and so, activating the button by pressing the SELECT key  on the control keypad causes a sub-chain  to appear giving further options relating to the history function. The sub-chain  is shown in . The sub-chain  includes additional buttons including a VIEW button  and an ADD button . The user moves along the sub-chain  using the RIGHT and LEFT keys , . In the screen display of , the VIEW button is highlighted and a tooltip  appears to tell the user that the button highlighted is VIEW. It will be noted that the tooltips attached to the main chain  appeared on the right hand side of the chain ; the tooltips for the subchain appear above the sub-chain.","The size of the box for the tooltip is matched to the length of the word or words to be displayed. Where different language preferences can be set, the size of the box for the tooltip is preferably matched to the length of the word in the language selected.",{"@attributes":{"id":"p-0380","num":"0430"},"figref":"FIG. 12","b":["1141","1143","1145","1145","1186","1149","1149"]},{"@attributes":{"id":"p-0381","num":"0431"},"figref":"FIG. 13","b":["1148","1148","1145"]},{"@attributes":{"id":"p-0382","num":"0432"},"figref":["FIG. 14","FIG. 15","FIG. 15","FIG. 16"],"b":["1150","1151","1150","1152","1151","1153","1154","1155","1156","1153","1153","1157","1152","1157","1157","1182"]},"In , the ADD button  is highlighted and its tooltip is displayed. If the ADD button is selected, the ADD window is displayed (see ). The ADD window  includes two boxes for text entry to enter the URL of the bookmark and its title. Data is entered into the window using the number keys  (for example using the on-screen keyboard described herein). The window also includes OK and CANCEL keys as described above. The user navigates between the text entry boxes and the OK and CANCEL keys using the cursors .",{"@attributes":{"id":"p-0384","num":"0434"},"figref":"FIG. 19","b":["1155","1155"]},{"@attributes":{"id":"p-0385","num":"0435"},"figref":"FIG. 20","b":["1156","1156"]},{"@attributes":{"id":"p-0386","num":"0436"},"figref":"FIG. 21","b":["1152","1151"]},{"@attributes":{"id":"p-0387","num":"0437"},"figref":["FIG. 22","FIG. 22","FIG. 24"],"b":["1160","1161","1165","1165","1181","1165","1162"]},"The settings sub-chain  includes the MODEM button  and the BROWSER button .  shows the MODEM button  highlighted and its associated tooltip. By selecting the MODEM button , the settings of the modem may be changed.  shows the BROWSER button  highlighted and its associated tooltip. When the BROWSER button  is selected, the browser window  is displayed, see . Again, the user navigates around the objects in the window using the cursor keys . The objects in the browser window include a COLOUR drop-down list . By highlighting the list head and selecting it using the cursor keys , the items of the list appear and the user can move up and down the list and select a new browser colour using the cursors. Similarly, the text language of the browser can be changed using the drop-down list . By moving the highlight to the tooltip select  and pressing the select button , the tooltips can be turned on and off. The window includes, as before, OK and CANCEL buttons.",{"@attributes":{"id":"p-0389","num":"0439"},"figref":["FIG. 27","FIG. 28","FIG. 28","FIG. 29"],"b":["1170","1171","1170","1172","1173","1173","1174"]},"Alternative designs of the main menu chain  may be used, whereby the shape of the individual buttons and the texture can been changed preferably without changing the overall shape of the chains. The colour may also be changed. These changes can be made available as options in the settings menu, the shape and texture of the chain being changed as a whole to give a coherent design (skin) for the browser.","For example, the buttons might have square, circular, diamond or other shapes, with a texture preferably designed to give a three-dimensional appearance. The appearance of the links between the buttons may be designed to match the appearance of the buttons, or alternatively to complement it. The appearance of the links may also be chosen so as to give the appearance of structural solidity, to enhance the user's perception that the buttons are meaningfully interlinked.","The arc shape of the chain shown in  is chosen by the developer, and is preferably not alterable by the user. Other configurations of the button chain and sub-chains are possible, such as a straight chain or a semi-circular chain. In other embodiments, the button order and configuration of the button chain and sub-chains may be modified by the user.","The receiver\/decoder provides internet navigation and email-reading capabilities.","The graphical studio for modelling a navigator is now discussed.","The graphical studio for modelling a navigator is an ensemble or collection of elementary graphical objects. Each graphical object is the pictorial representation on a television screen of one of the functions of the navigator. Each function of the navigator can be represented by a graphical object, or by a sequence of images of a graphical object (an animated image), or a collection of graphical objects (for example, an image in the background of the screen or an image in the background of a dialog box to which other graphical objects can be attached). There are two internal formats for images: MPEG2 and PIXMAP-GRL.","The PNG format is used for elementary graphical objects representing the \u201cnavigation system\u201d functionality: load, connect, previous document, next document, exit, etc.","To imprint a non-rectangular image on the graphical plane, it is necessary to use a clipping mask which defines the visible (significant) zones. This mask must be provided by the designer in the form of a bitmap: this mask is not calculated by the program owing to performance constraints.","The two stages for adding a clipping mask are first displaying an image and then, in the graphical plane, filling in a rectangle of the same dimension and position of the image with the transparency colour while applying the clipping mask to render visible the useful part of the image.","The PIXMAP-GRL image format is used for graphical objects representing the navigator resources or the user interface: vertical scrollbar, tables, simple choice, multiple choice, etc.","The PIXMAP type objects are of variable dimension (each graphical object or model is decomposed into simple elementary objects) and colourable (changing colour).","The PIXMAP-GRL image format may be obtained by converting any other graphical formats (such as BMP, JPEG, GIF, PNG, etc.) using well-known methods.","The decomposition of a graphical object into graphical elements is effected according to a matrix (e.g. 3\u00d73, 4\u00d74 or 1\u00d74) which depends on the type of object being displayed.","The palette contains 256 colours. This palette is applied to graphical objects of type PIXMAP and PNG. In a palette, there are two parts. The first part consists of 26 colours which are reserved to facilitate the display and the design of the application. The second part consists of 230 non-modifiable colours which are available for use by applications.","The maximum size of the screen is 720 pixels wide by 576 high. To guarantee the visibility of the screen on every low-end television set, it is necessary to restrict the size to 592 pixels wide and 480 high. To exploit high-end television sets, the user will have the option to adjust the size of the screen. For an internet navigator, sites have in general designed their pages 600 pixels wide and 400 high.","The generic attributes of a graphical object are now discussed in detail.","A graphical object (according to what it represents) has a precise size. The exact size is defined by the designer and serves as a guide for the display.","Each graphical object is resizeable. According to the type of graphical object, it is possible to resize the width and\/or height. The method of resizing of a PIXMAP-GRL graphical object follows the recommendations of the decomposition of a graphical object. The method of drawing variable size graphical objects is discussed further later on.","The image of the graphical object on the screen is represented by a multicoloured shape; the background image should have a range of colours if possible (fluid, the effect of modelling clay).","The image of the graphical object does not have to be drawn according to its position (coordinates), or according to the order of the following or preceding object on the screen: the notion of a floating position of the object. Each object is by definition independent of the other objects (except for a background image).","The text is printed by the program according to the chosen language. This implies that no image should contain text. The design of an object is left in the hands of the designer. The general look can follow a particular theme (e.g. Startrek, 007, the Simpsons).","The aspect of focus can be represented by several means: a rectangular focus on the graphical object; a focus highlighting (with another colour) the background of the graphical object, or a focus colouring in the shape of the graphical object.","The normal state (without focus, active, not depressed) is the basic one of the graphical object.","The inhibited state of a graphical object can be represented by several means: the shape of the object in grey (or vignetted); the overlaying of a distinctive prohibitive sign on the graphical object in question; setting the background of the object to monocolour, or making the object invisible.","The depressed state of a graphical object is the graphical representation of an object having the focus following a click on it but before the button is released. This representation can be an inverse display of the object or it can be the same as the focussed state.","With regard to the flip-flop (head to tail) display effect, an image or icon may comprise two visual aspects: one representing the text (the reverse, or \u2018tails\u2019 side of a Euro coin, for example), the other representing a symbol (the face, or \u2018heads\u2019 side). This visual effect is animated by a program running on a timer, a timer is started at the display of a first icon, and as soon as the timer reaches a predetermined value, the change of icon takes place: either a second icon is displayed, or a sequence of icons showing a progressive change is displayed.","The decomposition of a graphical object of PIXMAP-GRL type is now described, with reference to . These figures show examples of the elementary graphical objects used in the matrix decomposition method (\u2013, \u2013, etc.), and the corresponding graphical object formed when the elementary objects are combined in the appropriate fashion (, , etc.). The figures have been enlarged approximately by a factor of four.","To be able to resize a graphical object (increase or decrease), each graphical object (a design created by the graphic artist) is split into the form of a matrix of graphical elements like the pieces of a puzzle. Each element is then referenced according to the four cardinal corners and the centre (north, south, east, west, centre, north-east, north-west, south-east, south-west, centre of the centre). The width and height of the matrix depends on the type of object.","Certain graphical elements (pieces of the puzzle) are printed only once (the corners). To make the object wider or taller, certain elements are printed in a repetitive fashion (n times the width or height of the element, respectively).","Graphical objects which are formed by, or form part of, the matrix decomposition (or tiling) method are now listed. These graphical objects are drawn in the HTML document area.\n\n","A summary of all of the graphical objects in the web browser interface and their associated functions is now given.","What follows is a non-exhaustive list of the graphical objects which are necessary for the construction of a navigator model in the decoder. The table given here lists the objects element-by-element and the list of objects composed of several graphical elements.",{"@attributes":{"id":"p-0422","num":"0487"},"tables":{"@attributes":{"id":"TABLE-US-00001","num":"00001"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0","pgwide":"1"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"4"},"colspec":[{"@attributes":{"colname":"1","colwidth":"91pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"63pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"56pt","align":"left"}},{"@attributes":{"colname":"4","colwidth":"98pt","align":"left"}}],"thead":{"row":[{"entry":{"@attributes":{"namest":"1","nameend":"4","align":"center","rowsep":"1"}}},{"entry":["Elementary graphical",{},{},{}]},{"entry":["object","Functionality","Type","Comments"]},{"entry":{"@attributes":{"namest":"1","nameend":"4","align":"center","rowsep":"1"}}}]},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["BTN_Connecter","Connect\/disconnect","Clickable PNG","Initiates the modem connection"]},{"entry":[{},"the modem line","image","with the defined profile"]},{"entry":[{},{},{},"information"]},{"entry":["BTN_D\u00e9connecter","Connect\/disconnect","Clickable PNG","Disconnects the modem"]},{"entry":[{},"the modem line","image"]},{"entry":["BTN_Information_Profil","Access to the","Clickable PNG","Displays a dialog box for"]},{"entry":[{},"authentication","image","configuring the subscriber"]},{"entry":[{},"information for the",{},"profile: login, password and"]},{"entry":[{},"connection profile",{},"telephone number"]},{"entry":["BTN_Information_Serveur","Rapid access to the","Clickable PNG","Displays a dialog box for"]},{"entry":[{},"proxy server","image","configuring the parameters of"]},{"entry":[{},"information",{},"the proxy servers"]},{"entry":["BTN_Configuration","Rapid access to the","Clickable PNG","Displays a dialog box for"]},{"entry":["navigateur","navigator options","image","configuring the navigator"]},{"entry":[{},{},{},"options"]},{"entry":["BTN_Acc\u00e9s_Email","Rapid access to the","Clickable PNG","Starts the email client"]},{"entry":[{},"email application","image"]},{"entry":["BTN_Document_Pr\u00e9c\u00e9dent","Previous page","Clickable PNG","Displays the immediately"]},{"entry":[{},{},"image","preceding HTML page"]},{"entry":["BTN_Document_Suivant","Next page","Clickable PNG","Displays the immediately"]},{"entry":[{},{},"image","following HTML page"]},{"entry":["BTN_Stop_Chargement","Stop the current","Clickable PNG","Stops the current document from"]},{"entry":[{},"document loading","image","loading"]},{"entry":["BTN_Annuaire","Rapid access to","Clickable PNG","Displays a dialog box containing"]},{"entry":[{},"bookmarks","image","the bookmark list"]},{"entry":["BTN_Quitter","Leaves the","Clickable PNG","Leaves the application"]},{"entry":[{},"application and","image"]},{"entry":[{},"returns to TV"]},{"entry":["BTN_Saisie_Adresse","Rapid access to the","Clickable PNG","Opens the dialog box from"]},{"entry":[{},"selection of a link","image","which one can access a site"]},{"entry":[{},{},{},"address (URL) or from which"]},{"entry":[{},{},{},"one selects an established URL"]},{"entry":["IMG_Logo_Navigateur","Logo","Clickable PNG","Circular sequence of images to"]},{"entry":[{},{},"image","display the current loading"]},{"entry":[{},{},{},"activity"]},{"entry":["IMG_Logo_Op\u00e9rateur","Logo","Clickable PNG"]},{"entry":[{},{},"image"]},{"entry":["IMG_Diode","Status or activity","Non-clickable","Coloured diodes (LEDs): red,"]},{"entry":[{},"indicator","PNG image","green, blue, black, yellow"]},{"entry":["BTN_Fl\u00e9che_haut","Move up one row","Clickable and","Clickable images indicating:"]},{"entry":[{},{},"non-clickable","depressed state, non-depressed"]},{"entry":[{},{},"PNG image","state and inhibited state"]},{"entry":[{},{},{},"Non-clickable images"]},{"entry":[{},{},{},"indicating: inhibited and normal"]},{"entry":[{},{},{},"status"]},{"entry":["BTN_Fl\u00e9che_bas","Move down one","Clickable and","Clickable images indicating:"]},{"entry":[{},"row","non-clickable","depressed state, non-depressed"]},{"entry":[{},{},"PNG image","state and inhibited state"]},{"entry":[{},{},{},"Non-clickable images"]},{"entry":[{},{},{},"indicating: inhibited and normal"]},{"entry":[{},{},{},"status"]},{"entry":["BTN_Fl\u00e9che_droite","Move cursor","Clickable and","Clickable images indicating:"]},{"entry":[{},"forward","non-clickable","depressed state, non-depressed"]},{"entry":[{},{},"PNG image","state and inhibited state"]},{"entry":[{},{},{},"Non-clickable images"]},{"entry":[{},{},{},"indicating: inhibited and normal"]},{"entry":[{},{},{},"status"]},{"entry":["BTN_Fleche_gauche","Move cursor","Clickable and","3 clickable images: depressed"]},{"entry":[{},"backward","non-clickable","state, non-depressed state and"]},{"entry":[{},{},"PNG image","inhibited state"]},{"entry":[{},{},{},"2 non-clickable images:"]},{"entry":[{},{},{},"inhibited and normal status"]},{"entry":["BTN_Page_haut","Move cursor up","Clickable and","3 clickable images: depressed"]},{"entry":[{},"several rows (half a","non-clickable","state, non-depressed state and"]},{"entry":[{},"page or previous","PNG image","inhibited state"]},{"entry":[{},"page)",{},"2 non-clickable images:"]},{"entry":[{},{},{},"inhibited and normal status"]},{"entry":["BTN_Page_bas","Move cursor down","Clickable and","3 clickable images: depressed"]},{"entry":[{},"several rows (half a","non-clickable","state, non-depressed state and"]},{"entry":[{},"page or following","PNG image","inhibited state"]},{"entry":[{},"page)",{},"2 non-clickable images:"]},{"entry":[{},{},{},"inhibited and normal status"]},{"entry":["BTN_Frame_Suivante","Go to next frame","Clickable PNG","3 clickable images: depressed"]},{"entry":[{},{},"image","state, non-depressed state and"]},{"entry":[{},{},{},"inhibited state."]},{"entry":[{},{},{},"This image is visible if there is a"]},{"entry":[{},{},{},"frame following; otherwise the"]},{"entry":[{},{},{},"image is not displayed to avoid"]},{"entry":[{},{},{},"overloading the screen"]},{"entry":["BTN_Frame_Pr\u00e9c\u00e9dente","Go to previous","Clickable PNG","3 clickable images: depressed"]},{"entry":[{},"frame","image","state, non-depressed state and"]},{"entry":[{},{},{},"inhibited state."]},{"entry":[{},{},{},"This image is visible if there is a"]},{"entry":[{},{},{},"frame following; otherwise the"]},{"entry":[{},{},{},"image is not displayed to avoid"]},{"entry":[{},{},{},"overloading the screen"]},{"entry":["BTN_Choix_Croix","Indicator of","Clickable and","Like a box for insertion of a"]},{"entry":[{},"whether an option","non-editable","cross. Multiple choice possible."]},{"entry":[{},"within a list is","PNG image","Hence there are 2 images:"]},{"entry":[{},"checked or not",{},"checked and non-checked"]},{"entry":["BTN_Choix_Simple","Indicator of","Clickable and","Like a box for insertion of a"]},{"entry":[{},"whether an option","non-editable","cross. Only one choice from a"]},{"entry":[{},"within a list is","PNG image","list. Hence there are 2 images:"]},{"entry":[{},"checked or not",{},"checked and non-checked"]},{"entry":["BTN_Ok","Validates a","Clickable and","Generic validation image"]},{"entry":[{},"question or","non-editable","(without text). To be used in a"]},{"entry":[{},"information","PNG image","dialog box. . ."]},{"entry":["BTN_Annuler","Deletes a question","Clickable and","Generic deletion image (without"]},{"entry":[{},"or information","non-editable","text). To be used in a dialog"]},{"entry":[{},{},"PNG image","box. . ."]},{"entry":["BTN_Oui","Positive answer to a","Clickable and","Generic validation image"]},{"entry":[{},"question","non-editable","(without text). To be used in a"]},{"entry":[{},{},"PNG image","dialog box. . ."]},{"entry":["BTN_Non","Negative answer to","Clickable and","Generic negation image"]},{"entry":[{},"a question","non-editable","(without text). To be used in a"]},{"entry":[{},{},"PNG image","dialog box. . ."]},{"entry":["IMG_Curseur_Normal","Pointer\/graphics","Normal graphics","Like an arrow with a hotspot"]},{"entry":["Souris","cursor","cursor indicator"]},{"entry":[{},{},"image"]},{"entry":["IMG_Curseur_Attente","Pointer in busy","Busy indicator","Like an egg timer or"]},{"entry":["Souris","mode",{},"chronometer"]},{"entry":["IMG_Curseur_Texte","Position of the","Indicator"]},{"entry":[{},"graphics cursor in a"]},{"entry":[{},"text during access"]},{"entry":["IMG_Statusline","Display of a text in","Background","Image without text. The text will"]},{"entry":[{},"one row of 4\/5 of","image for","be displayed in truncated"]},{"entry":[{},"the size of the","displaying non-","format. The text has no more"]},{"entry":[{},"screen","editable text","than 40 characters"]},{"entry":["IMG_Ind\u00e9finie","Generic display of","Clickable and","Image representing an image in"]},{"entry":[{},"an image not yet","non-clickable","an HTML document which has"]},{"entry":[{},"loaded","image","not yet been loaded into the"]},{"entry":[{},{},{},"memory, or whose loading was"]},{"entry":[{},{},{},"interrupted"]},{"entry":["BDG_Login_Password","Generic dialog box","Screen","Background image delimiting an"]},{"entry":[{},"for displaying or","background","area of informational text, login"]},{"entry":[{},"entering the login","image with","field or password field. This"]},{"entry":[{},"and the password","graphic border","dialog box is required to access"]},{"entry":[{},"for accessing a",{},"a secure site. The program"]},{"entry":[{},"secure site",{},"masks the password"]},{"entry":["BDG_Information_Profil","Generic dialog box","Screen","Background image delimiting an"]},{"entry":[{},"for displaying or","background","area of informational text, login"]},{"entry":[{},"entering the login,","image with","field, password field or"]},{"entry":[{},"password and","graphic border","telephone number field. This"]},{"entry":[{},"telephone number",{},"dialog box is required before"]},{"entry":[{},"of a distance access",{},"dialling the access server. The"]},{"entry":[{},"server.",{},"program masks the password,"]},{"entry":[{},{},{},"and confirmation of the"]},{"entry":[{},{},{},"password will be requested."]},{"entry":["BDG_Confirmation","For confirming the","Dialog box","Background image delimiting an"]},{"entry":["Password","entry of a","having a","area of informational text and a"]},{"entry":[{},"password.","background","password field. This dialog box"]},{"entry":[{},{},"image with","is required when the user"]},{"entry":[{},{},"graphic border","modifies or enters a new"]},{"entry":[{},{},{},"password. The program masks"]},{"entry":[{},{},{},"the password"]},{"entry":["IMG_Telecommande","Filigree (outline of","Outline","The outline of the remote"]},{"entry":["filigrane","the keys) of the",{},"control is overlaid on the image"]},{"entry":[{},"remote control for",{},"of the virtual keyboard to make"]},{"entry":[{},"advanced entry",{},"the keys of the remote control"]},{"entry":[{},"using the virtual",{},"correspond visually to the layout"]},{"entry":[{},"keyboard",{},"of keys of the virtual keyboard."]},{"entry":[{},{},{},"Rapid access by visual memory"]},{"entry":[{},{},{},"and not by documentary"]},{"entry":[{},{},{},"memory. The outline of the"]},{"entry":[{},{},{},"remote control keys does not"]},{"entry":[{},{},{},"consist of any letters or symbols."]},{"entry":["BKG_Clavier_virtuel","Virtual keyboard","Background","The virtual keyboard is"]},{"entry":[{},"for advanced entry","image of a","represented on the screen like"]},{"entry":[{},"using a remote","keyboard","that of a PC but without"]},{"entry":[{},"control",{},"displaying letters or figures on"]},{"entry":[{},{},{},"the keys. Putting letters on each"]},{"entry":[{},{},{},"key is handled by the program:"]},{"entry":[{},{},{},"this allows the definition of a"]},{"entry":[{},{},{},"generic international language"]},{"entry":[{},{},{},"keyboard (azerty, qwerty or"]},{"entry":[{},{},{},"others). The outline image of"]},{"entry":[{},{},{},"the remote control is overlaid on"]},{"entry":[{},{},{},"the keyboard and follows the"]},{"entry":[{},{},{},"focus: this achieves the aim of"]},{"entry":[{},{},{},"showing visually that pressing a"]},{"entry":[{},{},{},"remote control button"]},{"entry":[{},{},{},"corresponds to a key press on"]},{"entry":[{},{},{},"the keyboard without having to"]},{"entry":[{},{},{},"memorize the translation in"]},{"entry":[{},{},{},"advance. The ESCape key"]},{"entry":[{},{},{},"dismisses the virtual keyboard."]},{"entry":[{},{},{},"Certain keys serve as function"]},{"entry":[{},{},{},"keys: \u201chttp:\/\/www\u201d, \u201c.fr\u201d,"]},{"entry":[{},{},{},"\u201c.com\u201d, \u201c.org\u201d, etc., and others"]},{"entry":[{},{},{},"have certain functions: \u201cEnter\u201d,"]},{"entry":[{},{},{},"\u201cBackspace\u201d, \u201cDel\u201d, etc."]},{"entry":["BKG_Toolbar_Navigation","Displayed in the","Background"]},{"entry":[{},"toolbar background","image"]},{"entry":["BKG_Toolbar_Systeme","Displayed in the","Background"]},{"entry":["Configuration","toolbar background","image"]},{"entry":["BKG_Annuaire","Displayed in the","Background"]},{"entry":[{},"background of the","image"]},{"entry":[{},"bookmark dialog"]},{"entry":[{},"box"]},{"entry":["BKG_Information_Profil","Displayed in the","Background"]},{"entry":[{},"background of the","image"]},{"entry":[{},"subscriber profile"]},{"entry":[{},"configuration"]},{"entry":[{},"dialog box"]},{"entry":["BKG_Information_Serveur","Displayed in the"]},{"entry":[{},"background of the"]},{"entry":[{},"proxy server"]},{"entry":[{},"configuration"]},{"entry":[{},"dialog box"]},{"entry":{"@attributes":{"namest":"1","nameend":"4","align":"center","rowsep":"1"}}}]}}}}},"The following table describes the different elementary graphical objects which form a graphic object which can have a variable size in the graphical representation. The juxtaposition of elementary objects to make a complex object is effected by the program (reconstituting the puzzle). These objects are of PIXMAP format.",{"@attributes":{"id":"p-0424","num":"0489"},"tables":{"@attributes":{"id":"TABLE-US-00002","num":"00002"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0","pgwide":"1"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"4"},"colspec":[{"@attributes":{"colname":"1","colwidth":"91pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"63pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"49pt","align":"left"}},{"@attributes":{"colname":"4","colwidth":"98pt","align":"left"}}],"thead":{"row":[{"entry":{"@attributes":{"namest":"1","nameend":"4","align":"center","rowsep":"1"}}},{"entry":["Elementary graphical",{},{},{}]},{"entry":["object","Functionality","Type","Comments"]},{"entry":{"@attributes":{"namest":"1","nameend":"4","align":"center","rowsep":"1"}}}]},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["TBL_Vertical_Gauche","To represent the","Image","To draw a border on a table of"]},{"entry":[{},"border of a variable",{},"variable size. This object"]},{"entry":[{},"size table",{},"represents a vertical stretch of"]},{"entry":[{},{},{},"the left side of the border"]},{"entry":["TBL_Vertical_Droite","To represent the","Image","To draw a border on a table of"]},{"entry":[{},"border of a table",{},"variable size. This object"]},{"entry":[{},{},{},"represents a vertical stretch of"]},{"entry":[{},{},{},"the right side of the border"]},{"entry":["TBL_Horizontal_Haut","To represent the","Image","To draw a border on a table of"]},{"entry":[{},"border of a table",{},"variable size. This object"]},{"entry":[{},{},{},"represents a horizontal stretch of"]},{"entry":[{},{},{},"the top side of the border"]},{"entry":["TBL_Horizontal_Bas","To represent the","Image","To draw a border on a table of"]},{"entry":[{},"border of a table",{},"variable size. This object"]},{"entry":[{},{},{},"represents a horizontal stretch of"]},{"entry":[{},{},{},"the bottom side of the border"]},{"entry":["TBL_Angle_Haut","To represent the","Image","To draw the top left corner of a"]},{"entry":["Gauche","corner of the border",{},"table border."]},{"entry":[{},"of a table"]},{"entry":["TBL_Angle_Haut","To represent the","Image","To draw the top right corner of a"]},{"entry":["Droite","corner of the border",{},"table border."]},{"entry":[{},"of a table"]},{"entry":["TBL_Angle_Bas","To represent the","Image","To draw the bottom left corner"]},{"entry":["Gauche","corner of the border",{},"of a table border."]},{"entry":[{},"of a table"]},{"entry":["TBL_Angle_Bas_Droite","To represent the","Image","To draw the bottom right corner"]},{"entry":[{},"corner of the border",{},"of a table border."]},{"entry":[{},"of a table"]},{"entry":["CEL_Vertical_Gauche","To represent the","Image","To draw the border of a cell."]},{"entry":[{},"border of a cell",{},"This object represents a vertical"]},{"entry":[{},{},{},"stretch of the left side of the"]},{"entry":[{},{},{},"border. A cell is one"]},{"entry":[{},{},{},"compartment in a table. . ."]},{"entry":[{},{},{},"The thickness of a cell border"]},{"entry":[{},{},{},"should be smaller than that of"]},{"entry":[{},{},{},"the table"]},{"entry":["CEL_Vertical_Droite","To represent the","Image","To draw the border of a cell."]},{"entry":[{},"border of a cell",{},"This object represents a vertical"]},{"entry":[{},{},{},"stretch of the right side of the"]},{"entry":[{},{},{},"border."]},{"entry":["CEL_Horizontal_Haut","To represent the","Image","To draw the border of a cell."]},{"entry":[{},"border of a cell",{},"This object represents a"]},{"entry":[{},{},{},"horizontal stretch of the top side"]},{"entry":[{},{},{},"of the border."]},{"entry":["CEL_Horizontal_Bas","To represent the","Image","To draw the border of a cell."]},{"entry":[{},"border of a cell",{},"This object represents a"]},{"entry":[{},{},{},"horizontal stretch of the bottom"]},{"entry":[{},{},{},"side of the border."]},{"entry":["CEL_Image","To represent the","Generic image","Generic image representing the"]},{"entry":[{},"border of a non-",{},"placement of a non-loaded"]},{"entry":[{},"loaded image in a",{},"image in a cell"]},{"entry":[{},"cell"]},{"entry":["BDG_Vertical_Gauche","To represent the","Generic image","To draw the border of a"]},{"entry":[{},"border of a dialog",{},"variable-size dialog box. This"]},{"entry":[{},"box",{},"object represents a vertical"]},{"entry":[{},{},{},"stretch of the left side of the"]},{"entry":[{},{},{},"border."]},{"entry":["BDG_Vertical_Droite","To represent the","Generic image","To draw the border of a"]},{"entry":[{},"border of a dialog",{},"variable-size dialog box. This"]},{"entry":[{},"box",{},"object represents a vertical"]},{"entry":[{},{},{},"stretch of the right side of the"]},{"entry":[{},{},{},"border."]},{"entry":["BDG_Horizontal_Haut","To represent the","Generic image","To draw the border of a"]},{"entry":[{},"border of a dialog",{},"variable-size dialog box. This"]},{"entry":[{},"box",{},"object represents a horizontal"]},{"entry":[{},{},{},"stretch of the top side of the"]},{"entry":[{},{},{},"border."]},{"entry":["BDG_Horizontal_Bas","To represent the","Generic image","To draw the border of a"]},{"entry":[{},"border of a dialog",{},"variable-size dialog box. This"]},{"entry":[{},"box",{},"object represents a horizontal"]},{"entry":[{},{},{},"stretch of the bottom side of the"]},{"entry":[{},{},{},"border."]},{"entry":["BDG_Angle_Haut","To represent the","Generic image","To draw the top left corner of"]},{"entry":["Gauche","border of a dialog",{},"the border of a variable size"]},{"entry":[{},"box",{},"dialog box."]},{"entry":["BDG_Angle_Haut_Droite","To represent the","Generic image","To draw the top right corner of"]},{"entry":[{},"border of a dialog",{},"the border of a variable size"]},{"entry":[{},"box",{},"dialog box."]},{"entry":["BDG_Angle_Bas_Gauche","To represent the","Generic image","To draw the bottom left corner"]},{"entry":[{},"border of a dialog",{},"of the border of a variable size"]},{"entry":[{},"box",{},"dialog box."]},{"entry":["BDG_Angle_Bas_Droite","To represent the","Generic image","To draw the bottom right corner"]},{"entry":[{},"border of a dialog",{},"of the border of a variable size"]},{"entry":[{},"box",{},"dialog box."]},{"entry":["LST_Vertical_Gauche","To represent the","Image","To draw the border of a variable"]},{"entry":[{},"border of a vertical",{},"size vertical list. This object"]},{"entry":[{},"list of selectable",{},"represents a vertical stretch of"]},{"entry":[{},"options",{},"the left side of the border."]},{"entry":["LST_Vertical_Droite","To represent the","Image","To draw the border of a variable"]},{"entry":[{},"border of a vertical",{},"size vertical list. This object"]},{"entry":[{},"list of selectable",{},"represents a vertical stretch of"]},{"entry":[{},"options",{},"the right side of the border."]},{"entry":["LST_Bas_Gauche","To represent the","Image","To draw the border of a variable"]},{"entry":[{},"border of a vertical",{},"size vertical list. This object"]},{"entry":[{},"options",{},"represents a horizontal stretch of"]},{"entry":[{},{},{},"the top side of the border."]},{"entry":["LST_Bas_Droite","To represent the","Image","To draw the border of a variable"]},{"entry":[{},"border of a vertical",{},"size vertical list. This object"]},{"entry":[{},"list of selectable",{},"represents a horizontal stretch of"]},{"entry":[{},"options",{},"the bottom side of the border."]},{"entry":["LST_Angle_Haut_Gauche","To represent the","Image","To draw the top left corner of"]},{"entry":[{},"corner of the border",{},"the border of a variable size"]},{"entry":[{},"of a variable size",{},"vertical list."]},{"entry":[{},"vertical list of"]},{"entry":[{},"selectable options"]},{"entry":["LST_Angle_Haut_Droite","To represent the","Image","To draw the top right corner of"]},{"entry":[{},"corner of the border",{},"the border of a variable size"]},{"entry":[{},"of a variable size",{},"vertical list."]},{"entry":[{},"vertical list of"]},{"entry":[{},"selectable options"]},{"entry":["LST_Angle_Bas_Gauche","To represent the","Image","To draw the bottom left corner"]},{"entry":[{},"corner of the border",{},"of the border of a variable size"]},{"entry":[{},"of a variable size",{},"vertical list."]},{"entry":[{},"vertical list of"]},{"entry":[{},"selectable options"]},{"entry":["LST_Angle_Bas_Droite","To represent the","Image","To draw the bottom right corner"]},{"entry":[{},"corner of the border",{},"of the border of a variable size"]},{"entry":[{},"of a variable size",{},"vertical list."]},{"entry":[{},"vertical list of"]},{"entry":[{},"selectable options"]},{"entry":["ASC_Haut","To represent a","Clickable and","To draw the top end of a vertical"]},{"entry":[{},"vertical scroll bar","non-clickable","scroll bar (\u2018elevator\u2019)"]},{"entry":[{},"(\u2018elevator\u2019)","image"]},{"entry":["ASC_Bas","To represent a","Clickable and","To draw the bottom end of a"]},{"entry":[{},"vertical scroll bar","non-clickable","vertical scroll bar"]},{"entry":[{},{},"image"]},{"entry":["ASC_Cage","To represent a","Clickable and","To draw one step (\u2018floor\u2019) of a"]},{"entry":[{},"vertical scroll bar","non-clickable","vertical scroll bar"]},{"entry":[{},{},"image"]},{"entry":["ASC_Ascenseur","To represent a","Clickable and","To indicate the position of the"]},{"entry":[{},"vertical scroll bar","non-clickable","vertical scroll bar"]},{"entry":[{},{},"image"]},{"entry":["SCR_Gauche","To represent a","Clickable and","To draw the left end of a"]},{"entry":[{},"horizontal scroll bar","non-clickable","horizontal scroll bar of a"]},{"entry":[{},{},"image","window, text area, frame, etc."]},{"entry":["SCR_Droite","To represent a","Clickable and","To draw the right end of a"]},{"entry":[{},"horizontal scroll bar","non-clickable","horizontal scroll bar of a"]},{"entry":[{},{},"image","window, text area, frame, etc."]},{"entry":["SCR_Cage","To represent a","Clickable and","To draw one compartment (step)"]},{"entry":[{},"horizontal scroll bar","non-clickable","of a horizontal scroll bar of a"]},{"entry":[{},{},"image","window, text area, frame, etc."]},{"entry":["SCR_Position","To represent a","Clickable and","To indicate the position of the"]},{"entry":[{},"horizontal scroll bar","non-clickable","cursor in the horizontal scroll"]},{"entry":[{},{},"image","bar of a window, text area,"]},{"entry":[{},{},{},"frame, etc."]},{"entry":["IMG_Texte_Gauche","To represent a line","Non-clickable","This is the image at the left side"]},{"entry":[{},"of text to display","image","of the non-editable displayed"]},{"entry":[{},{},{},"text. The chosen size must"]},{"entry":[{},{},{},"match that of the chosen"]},{"entry":[{},{},{},"character set"]},{"entry":["IMG_Texte_Droite","To represent a line","Non-clickable","This is the image at the right"]},{"entry":[{},"of text to display","image","side of the non-editable"]},{"entry":[{},{},{},"displayed text. The chosen size"]},{"entry":[{},{},{},"must match that of the chosen"]},{"entry":[{},{},{},"character set"]},{"entry":["IMG_Texte_Caractere","To represent a line","Non-clickable","This is the background image on"]},{"entry":[{},"of text to display","image","which a non-editable character"]},{"entry":[{},{},{},"is printed. The chosen size must"]},{"entry":[{},{},{},"match that of the chosen"]},{"entry":[{},{},{},"character set,"]},{"entry":["IMG_Edition_Gauche","To represent a line","Editable and","This is the image at the left side"]},{"entry":[{},"of text to edit","clickable image","of an editable or selectable text"]},{"entry":[{},{},{},"zone. The chosen size must"]},{"entry":[{},{},{},"match that of the chosen"]},{"entry":[{},{},{},"character set."]},{"entry":["IMG_Edition_Droite","To represent a line","Editable and","This is the image at the right"]},{"entry":[{},"of text to edit","clickable image","side of an editable or selectable"]},{"entry":[{},{},{},"text zone. The chosen size must"]},{"entry":[{},{},{},"match that of the chosen"]},{"entry":[{},{},{},"character set."]},{"entry":["IMG_Edition_Caractere","To represent a line","Editable and","This is the background image on"]},{"entry":[{},"of text to edit","clickable image","which a character of an editable"]},{"entry":[{},{},{},"or selectable text zone is printed."]},{"entry":[{},{},{},"The chosen size must match that"]},{"entry":[{},{},{},"of the chosen character set."]},{"entry":["IMG_Multi_Edition","To represent the","Editable and","This is the image at the left side"]},{"entry":["Gauche","editing of multi-line","clickable image","of an editable or selectable text"]},{"entry":[{},"text",{},"zone. The chosen size must"]},{"entry":[{},{},{},"match that of the chosen"]},{"entry":[{},{},{},"character set."]},{"entry":["IMG_Multi_Edition","To represent the","Editable and","This is the image at the right"]},{"entry":["Droite","editing of multi-line","clickable image","side of an editable or selectable"]},{"entry":[{},"text",{},"text zone. The chosen size must"]},{"entry":[{},{},{},"match that of the chosen"]},{"entry":[{},{},{},"character set."]},{"entry":["IMG_Multi_Edition","To represent the","Editable and","This is the background image on"]},{"entry":["Caractere","editing of multi-line","clickable image","which a character of an editable"]},{"entry":[{},"text",{},"or selectable text zone is printed."]},{"entry":[{},{},{},"The chosen size must match that"]},{"entry":[{},{},{},"of the chosen character set."]},{"entry":{"@attributes":{"namest":"1","nameend":"4","align":"center","rowsep":"1"}}}]}}}},"br":{}},{"@attributes":{"id":"p-0425","num":"0490"},"tables":{"@attributes":{"id":"TABLE-US-00003","num":"00003"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0","pgwide":"1"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"5"},"colspec":[{"@attributes":{"colname":"1","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"63pt","align":"left"}},{"@attributes":{"colname":"4","colwidth":"70pt","align":"left"}},{"@attributes":{"colname":"5","colwidth":"91pt","align":"left"}}],"thead":{"row":[{"entry":{"@attributes":{"namest":"1","nameend":"5","align":"center","rowsep":"1"}}},{"entry":[{},{},{},"Graphical",{}]},{"entry":["Function","Description","Activated by","Objects","Comments"]},{"entry":{"@attributes":{"namest":"1","nameend":"5","align":"center","rowsep":"1"}}}]},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["Connect\/","Initiate the","BTN_Connecter",{},"Start the modem"]},{"entry":["disconnect","modem","BTN_D\u00e9connecter",{},"connection if it is off-line,"]},{"entry":[{},"connection",{},{},"if the connection profile"]},{"entry":[{},"with the",{},{},"information is filled in, if"]},{"entry":[{},"defined",{},{},"a URL is clicked."]},{"entry":[{},"profile\/"]},{"entry":[{},"disconnect"]},{"entry":[{},"the modem"]},{"entry":["Configure-","Displays a","BTN_Information","BDG_Information","Enter, modify, validate,"]},{"entry":["modify the","dialog box to","Profil","Profil","store in flash memory the"]},{"entry":["authen-","configure the",{},{},"login, password and"]},{"entry":["tification","subscriber",{},{},"telephone number of the"]},{"entry":["information","profile:",{},{},"access server"]},{"entry":["of the","login,",{},{},"Cancel the access"]},{"entry":["connection","password,"]},{"entry":["profile","telephone"]},{"entry":["Confirm the","Request the","After a password","BDG_Confir-","Enter, validate, cancel"]},{"entry":["entry of a","password to","has been changed","mation_Password","Each entered character is"]},{"entry":["password","be re-entered",{},{},"replaced by a masking"]},{"entry":[{},{},{},{},"character (asterisk) when"]},{"entry":[{},{},{},{},"printed"]},{"entry":[{},{},{},{},"Compare the entry with"]},{"entry":[{},{},{},{},"the modified password"]},{"entry":["Print or enter","Request","Following an","BDG_Login","Enter, validate, cancel,"]},{"entry":["the login and","authen-","attempt to access","Password","sending information to the"]},{"entry":["password to","tification","a secure site",{},"site"]},{"entry":["access a","from the",{},{},"Each character of the"]},{"entry":["secure site","remote site",{},{},"password is replaced by a"]},{"entry":[{},{},{},{},"masking character"]},{"entry":[{},{},{},{},"(asterisk) when printed"]},{"entry":["Managing a","Virtual","When the focus","BKG_Clavier","The virtual keyboard is"]},{"entry":["virtual","keyboard for","is on an editable","Virtuel","represented on the screen like"]},{"entry":["keyboard","advance","object","IMG_Tele-","that of a PC but without"]},{"entry":[{},"entry with a",{},"commande_filigrane","displaying letters or figures on"]},{"entry":[{},"remote",{},{},"the keys. Putting letters on"]},{"entry":[{},"control",{},{},"each key is handled by the"]},{"entry":[{},{},{},{},"program: this allows the"]},{"entry":[{},{},{},{},"definition of a generic"]},{"entry":[{},{},{},{},"international language"]},{"entry":[{},{},{},{},"keyboard (azerty, qwerty or"]},{"entry":[{},{},{},{},"others). The outline image of"]},{"entry":[{},{},{},{},"the remote control is overlaid"]},{"entry":[{},{},{},{},"on the keyboard and follows"]},{"entry":[{},{},{},{},"the focus: this achieves the"]},{"entry":[{},{},{},{},"aim of showing visually that"]},{"entry":[{},{},{},{},"pressing a remote control"]},{"entry":[{},{},{},{},"button corresponds to a key"]},{"entry":[{},{},{},{},"press on the keyboard without"]},{"entry":[{},{},{},{},"having to memorize the"]},{"entry":[{},{},{},{},"translation in advance. The"]},{"entry":[{},{},{},{},"ESCape key dismisses the"]},{"entry":[{},{},{},{},"virtual keyboard. Certain"]},{"entry":[{},{},{},{},"keys serve as function keys:"]},{"entry":[{},{},{},{},"\u201chttp:\/\/www\u201d,\u201c.fr\u201d,\u201c.com\u201d,"]},{"entry":[{},{},{},{},"\u201c.org\u201d, etc., and others have"]},{"entry":[{},{},{},{},"certain functions: \u201cEnter\u201d,"]},{"entry":[{},{},{},{},"\u201cBackspace\u201d,\u201cDel\u201d, etc."]},{"entry":{"@attributes":{"namest":"1","nameend":"5","align":"center","rowsep":"1"}}}]}}}}},"The Java API for the web browser is now described.","There follows the list of the JAVA packages which are used at the level of the navigator application in the decoder. This list is divided into two parts: the AWT (Abstract Window Toolkit) classes of the JDK 1.1 and the JAVA interface classes of the different services written in native C code.",{"@attributes":{"id":"p-0428","num":"0493"},"tables":{"@attributes":{"id":"TABLE-US-00004","num":"00004"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"112pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"105pt","align":"left"}}],"thead":{"row":[{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}},{"entry":["Classes","Methods"]},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}}]},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["java.awt.Choice","Add(String)"]},{"entry":[{},"GetItemCount( )"]},{"entry":[{},"GetSelectedIndex( )"]},{"entry":[{},"Remove(String)"]},{"entry":[{},"SetSelectedIndex(int)"]},{"entry":["java.awt.Component","AddKeyListener(KeyListener)"]},{"entry":[{},"AddFocusListener(FocusListener)"]},{"entry":[{},"AddMouseListener(MouseListener)"]},{"entry":[{},"Contains(int,int)"]},{"entry":[{},"enableEvents(long)"]},{"entry":[{},"getLocation( )"]},{"entry":[{},"getSize( )"]},{"entry":[{},"setBackground(Color)"]},{"entry":[{},"setBackground(ImageMask)"]},{"entry":[{},"setBackground(int)"]},{"entry":[{},"setLocation(int)"]},{"entry":[{},"setSize(int,int)"]},{"entry":["java.awt.Graphics","drawImage"]},{"entry":[{},"getSize"]},{"entry":[{},"setLocation"]},{"entry":["java.awt.Image","createImage(String)"]},{"entry":[{},"getHeight( )"]},{"entry":[{},"getWidth( )"]},{"entry":["java.awt.ImageMask extends java.","setMask(bitmap)"]},{"entry":"awt.Image"},{"entry":["java.awt.List","List(int)"]},{"entry":[{},"add(String)"]},{"entry":[{},"getItem(num)"]},{"entry":[{},"getItemCount( )"]},{"entry":[{},"getSelectedItem( )"]},{"entry":[{},"remove(String)"]},{"entry":[{},"replace( )"]},{"entry":[{},"setMultipleMode(boolean)"]},{"entry":["java.awt.Panel","setLayout(layout)"]},{"entry":"java.awt.Point"},{"entry":["java.awt.Toolkit","loadLut(String)"]},{"entry":[{},"getDefaultToolkit( )"]},{"entry":["java.awt.TextField","addActionListener(ActionListener)"]},{"entry":[{},"setEchoChar(char)"]},{"entry":[{},"setSecretMode( )"]},{"entry":["java.awt.Window","setModal(boolean)"]},{"entry":"java.awt.event.FocusEvent"},{"entry":["java.awt.event.FocusListener","void focusGained(FocusEvent)"]},{"entry":["(interface)","void focusLost(FocusEvent)"]},{"entry":"java.awt.event.KeyEvent"},{"entry":["java.awt.event.KeyListener(interface)","void keyPressed(KeyEvent)"]},{"entry":[{},"void keyReleased(KeyEvent)"]},{"entry":[{},"void keyTyped(KeyEvent)"]},{"entry":"java.awt.event.MouseEvent"},{"entry":["java.awt.event.MouseListener","void mouseClicked(MouseEvent)"]},{"entry":["(interface)","void mouseEntered(MouseEvent)"]},{"entry":[{},"void mouseExited(MouseEvent)"]},{"entry":[{},"void mousePressed(MouseEvent)"]},{"entry":[{},"void mouseReleased(MouseEvent)"]},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}}]}}}}},"The navigator package, called the browser package, groups together different packages: the browser.drawer package, which offers services allowing an HTML document to be fetched, and navigation within the document browser; and the mediawebtv package, which allows the establishment of an internet connection with the users authentification.","The structure of the browser.drawer.MhwBookmark class is now described.","A bookmark list is associated with a user. There is no hierarchy within the bookmark list.","Constructor: MhwBookmark(subscriberId): opens an existing bookmark list","Constructor: MhwBookmark(subscriberId): creates a new bookmark list","deleteBookmark( ): destroys a bookmark list","add (URL, name): adds an entry","remove (itemNumber): deletes an entry","modify (itemNumber, URL, name): modifies an existing entry","getList ( ): returns a list of the entries in the bookmark list (no hierarchy)","getItemCount ( ): returns the number of entries in the bookmark list","is Full ( ): boolean\u2014list is full?","is Empty ( ): boolean\u2014list is empty?","setHomePage (itemNumber)","getHomePage ( ): itemNumber","goToURL (sessionNumber): loads the document corresponding to the selected entry","In the event of failure, an error message is returned by the methods add( ), remove( ), modify( ), getList( ), setHomePage( ) (or an event if the occurrence is asynchronous).","The browser.drawer.MhwHistory class permits the navigation from one document to another within a list of previously displayed documents. There is no hierarchy in the history list. The details of the class are now given.","Constructor: MhwHistory (sessionNumber)","getList ( ): returns the history list (no hierarchy)","getCurrent ( ): gets the current URL","setCurrent(indexNumber): change the current URL","getNext ( ): gets the URL of the next entry","getPrevious ( ): gets the URL of the previous entry","getItemCount ( ): returns the number of entries in the history","addEventsRegister ( ): subscribes to the error events of the history list","removeEventsRegister ( )","In the event of failure, an error message is returned by the methods getList( ), getNext( ), getPrevious( ), setCurrent( ) (or an event if the occurrence is asynchronous).","The events are: addEventsRegister(sessionNumber): [subscribes to the history list error events]; and removeEventsRegister(sessionNumber) [unsubscribes].","The browser.drawer.MhwDocument class allows the loading and displaying of an HTML document in the decoder. The details of the class are now given.","Constructor: MhwDocument (sessionNumber)","freeze ( ): halts the display of the current document (loading of the document continues)","unfreeze ( ): restarts the display of the current document","is Pending ( ): whether the document is currently loading","stop ( ): halts the loading of the current document","reload ( ): reloads the document","getDocumentInfo ( ): returns the title and the URL of the document","addStatusRegister ( ): subscribes to information on the state and end of loading","goToURL (url): loads a web page","submit (login, password, URL): submits authentication for loading a web page","getStatisticsDocument ( ): returns the number of requests in progress and the URL of the document currently being loaded","The browser.mediawebtv.MhwConnection class groups together the user connection and authentification functionality. The details of the class are now given.\n\n","The events are: loss of connection; current connection; established connection; connection confirmation request; connection error, modem status: on\/off; initialisation in progress; dialling in progress; error but modem is on; server status: invalid port, invalid URL; login error: unknown login; and invalid password.\n\n","The browser.mediawebtv.MhwConfiguration class manages the profile of each user and his or her preferences. The details of the class are now given.","Constructor: MhwConfiguration( )","readProfile(subscriberId): read the profile","writeProfile(subscriberId, profile): write the profile","readDefaultProfile( ): read the default profile","writeDefaultProfile(profile): modify the default profile","getUserCount( ): number of users","newUser(profile): identifying for a new user","getLastConnect( ): the last connected user","The maximum number of profiles is currently fixed at 5, but this does not represent a strict limit; higher numbers of profiles may be stored if need be.","In the case of failure, an error message is returned by the WriteProfile( ) and writeDefaultProfile( ) methods (or an event if the occurrence is asynchronous)","The browser.mediawebtv.MhwMultiSession class allows a navigator session to be selected. A session is an instance of the navigator which was automatically initiated by another instance. When the navigator starts, a session is created following the establishment of an authenticated connection. The details of the class are now given.","Constructor: MhwMultiSession","getCurrentSessionNumber( )","setCurrentSessionNumber(int number)","getPreviousSession( )","addSession( ): returns the number of the session created","removeSession(int numSession)","The navigator model for the decoder is now described in more detail, with reference to and \u2013.","The model presented here is a simple example of a navigator, and gives a general idea of the principal functionality. It gives total freedom at the level of graphical representation. The only important features are the zones or screens within which functions of the same type are grouped and the general user interface.","The navigator employs all of the available graphics (MPEG, PIXMAP) of the graphical studio. The screens of this model are organised in tree form and each one groups together a collection of essential functions. Each function or option in a screen is accessed by moving a focus with the aid of arrow buttons (on the remote control) or by using a keypad with a cursor\/pointer. The selection of an action is achieved by a controller click or by a predefined button (e.g. \u201cOK\u201d).","In the absence of a physical keyboard, to enter text with the remote control, it is necessary to provide a virtual keyboard. This is achieved by moving the focus with a possibility of tapping quickly, by mapping the buttons of the remote control onto the virtual keyboard; in other words the image of the buttons on the remote control is visible (in traced form) in outline, or slightly opaque, on the picture of the virtual keyboard. The virtual keyboard is discussed in more depth later in this document.",{"@attributes":{"id":"p-0494","num":"0587"},"figref":"FIG. 30","b":["1410","1411"]},"The main navigator screen is now described, with specific reference to .","The navigator functions are grouped in several layers. The main screen displays a vertical bar (main menu) () which is composed of a series of buttons: Reload\/Stop (), previous page (), next page (), history of recently visited sites, bookmarks, connect\/disconnect, configuration, exit navigator ().","The navigator GUI (main screen) () is displayed when a function key is pressed (either on the remote control or on the keyboard). When the GUI is visible on the TV screen, the HTML document () (which the GUI covers over) continues to be loaded into memory, but the refresh of the document is suspended so as not to affect the display performance of the GUI. The HTML document is redisplayed when the navigator GUI is dismissed. This restriction will be lifted if the performances are eventually satisfactory, thereby allowing the simultaneous display of the HTML document and the GUI.","The GUI is dismissed from the TV screen by pressing a function key (on the remote control or the keyboard), or by clicking outside the GUI button zones. The display of the HTML document currently being loaded or stored in the cache memory is then started or recommenced.","A button is effectively a rectangular or square zone (for example, 32\u00d732 pixels). When the graphics cursor enters a zone, that zone (window) receives the focus (cf. the EnterNotify(WindowId) function).","If the button graphic is a tyre, for example, it has to be detected whether the actual position of the graphics cursor effectively covers the pixels of the tyre. To this end, it is necessary to find the value of the pixel at the hotspot of the mouse pointer in the clipping mask of the button (by calculation of the relative position, getpixel( ) in the clipping mask, then testing the pixel value). This detection method allows the test to be improved for whether or not a click was effected before starting the function of the button.","When the mouse pointer leaves the button's rectangular or square zone, the zone loses the focus (cf. LeaveNotify(WindowId)).","The descriptive button summaries are now described in more detail.","When the mouse pointer or the rectangular focus coincides with a button representing a function, a short phrase (tooltip) is displayed either horizontally or vertically, describing the function of that button. When the button is selected, either by a mouse click or by a function key, a list of buttons appears containing sub-menu options. The system of short descriptive phrases (tooltips) is also used for the sub-menu buttons.","Navigation of the menu options is achieved with the arrow keys either on the remote control or on the keyboard. The last button on the main screen to have had the focus is remembered for the next time the main screen is displayed.","The virtual keyboard is now discussed in more detail, with reference to .",{"@attributes":{"id":"p-0506","num":"0599"},"figref":"FIG. 42","b":["1501","1501","1506"]},{"@attributes":{"id":"p-0507","num":"0600"},"figref":"FIG. 43"},{"@attributes":{"id":"p-0508","num":"0601"},"figref":"FIG. 44","b":["1545","1546","1542","1543"]},{"@attributes":{"id":"p-0509","num":"0602"},"figref":"FIG. 45"},"Firstly, the virtual keyboard is conceived as an tool which is independent of the application in which it is used. This, it can be used within the \u201cWebBrowser\u201d application and equally within the \u201cMail\u201d application. Moreover, its \u2018look\u2019 is completely independent of the \u2018look\u2019 of the application concerned.","The virtual keyboard is displayed from the moment that the user, not possessing a physical keyboard or a remote control with keyboard, selects an editable area of the screen. The focus is positioned at the end of the text in the editable area. Pressing \u201cOK\u201d (on the remote control or virtual keyboard) or \u201cCancel\u201d (on the virtual keyboard) dismisses it.","The virtual keyboard which is visible on the screen () is composed of three blocks of ten keys (representing three number blocks of the remote control) side by side (, , ). The user can pass the focus () from one block to another using the arrow keys on the remote control. After a block is selected, pressing a button on the number block of the remote control enters the corresponding character printed on the virtual keyboard.","The user can also use the up and down arrow keys. This brings the same virtual keyboard on the screen but with different characters on the keys (). Thus, flipping between a set of 5 virtual keyboards, one can display all of the characters on the keyboard of a western computer. There is also the possibility of adding other keyboards as the need arises.","With reference to , to allow an immediate association to be made between the number block of the remote control and the focus on the virtual keyboard, a superimposed image of the remote control indicates the focus (, ). Thus the user can easily visualise that only one part of the keyboard has the focus, and that the rest of the characters can be reached by moving the focus with the arrow keys. The keyboard is designed with the latter points in mind.","The virtual keyboard solution takes up little screen height, and allows for easy extension of the number of characters available. By default, it is the virtual keyboard with the miniature alphabet which is displayed.","Certain buttons have important special functions:\u2014\n\n","The keyboard is always in \u2018insert\u2019 mode.","An example of a keyboard is given in , and is discussed further below.","With the 5 keyboards (5\u00d73) shown in , and the two fonts installed for the WebBrowser application (Arialweb and Courier), all of the characters of a traditional keyboard can be covered. The dimensions of the keyboard on screen are 272 pixels wide by 184 pixels high.","The virtual keyboard and the functional connections with regard to its use in the various applications are developed within the \u201ccanalplus.virtualkbd\u201d package.","The classes comprised within the package include \u201cMhwVirtualKbd\u201d (the virtual keyboard graphical description and behavioural class), \u201cMhwVkTextField\u201d (the class derived from \u2018java.awt.TextField\u2019 which allows a virtual keyboard defined within the global application sharing the TextField to control events) and \u201cMhwTextArea\u201d (a class inherited from the \u2018java.awt.TextArea\u2019 which allows a virtual keyboard defined within the global application using the TextArea class to control events).","The MhwVirtualKbd class is now described in more detail.","The constructor of the \u201cMhwVirtualKbd\u201d class is defined as \u2018private\u2019. Thus only one unique virtual keyboard can be constructed, when the main application which may need to use it is started (in the absence of a physical keyboard, for example). The aim is therefore to present a keyboard configured especially for the current application, and which appears when the user enters a text field (single- or multi-line).","When the keyboard is created, the four main (static) variables which can be configured will have been set:\u2014\n\n","Once the keyboard is created, it can be decided whether or not to use it by using the \u201cgetInstance\u201d method, which finds the keyboard of the current application, if it exists (if the virtual keyboard of the application does not yet exist, and if the application uses it, the \u201cgetInstance\u201d method creates one, using for it the variables [the four previously described] which one would have set).","Event management is now described.","According to the preceding descriptions, the virtual keyboard functions, once displayed, solely by interpreting the events sent to it by: the number block, the \u201cOK\u201d button, and the four arrow direction keys on the remote control. These buttons will have specific roles for the keyboard in use.","The \u201cOK\u201d button has an important role, because it allows the user to do two things: \u2018return\u2019 to the text field to enter information, and then display and start the operation of the virtual keyboard; and \u2018leave\u2019 the text field, saving the changes.","Arrow Keys","The \u2018right\u2019 and \u2018left\u2019 arrows allow the image of the remote control (indicating the number block which has the \u2018focus\u2019) to be moved on the three number blocks which are represented on the virtual keyboard. The keys of the number block on the remote control are thus \u2018bound\u2019, depending on the \u2018keyboard\u2019 having the focus, to the display of various characters.","In the most common case, \u2018tapping\u2019 on of these buttons when the virtual keyboard is active causes the automatic insertion of the character shown on that key, in the current text field at the position indicated by the cursor.","Of the characters, six can be considered as \u2018special\u2019 characters, and do not directly cause the character displayed on the key to be displayed in the text field:","BackSpace: \u2018<\u2019 (): when the button on the remote control corresponding to this character is pressed, the character immediately to the left of the cursor position in the current text field is erased.","Tab: \u2018>>\u2019 (): when the button on the remote control corresponding to this character is pressed, a configurable number of spaces (\u2018 \u2019), 4 by default, is inserted at the current cursor position.","Enter: \u2018\u00b6\u2019 (): when the button on the remote control corresponding to this character is pressed, a \u2018line feed\u2019 is inserted at the cursor position. In fact, if the current text field is an instance of the \u2018MhwVkTextField\u2019 class, i.e. one which only has one editable line, tapping this button will either have no effect or cause validation of the field. If, on the contrary, this text field is an instance of the \u2018MhwVkTextArea\u2019 class, it consists of several editable lines and this character causes a \u2018line feed\u2019 (if the cursor is positioned on the last editable line, tapping this button will have no effect).","Cancel: \u2018\u00a2\u2019 (): when the button on the remote control corresponding to this character is pressed, all of the modifications made to the current text field subsequent to the opening of the virtual keyboard are undone. In other words, its content is returned to the value it had before the modifications were made, and the virtual keyboard is \u2018exited\u2019.","Left arrow: when the button on the remote control corresponding to this character is pressed, the cursor in the current text field is moved one place to the left. If the cursor is already in the \u2018zero\u2019 position (no further movement to the left is possible), this button has no effect. Right arrow: when the button on the remote control corresponding to this character is pressed, the cursor in the current text field is moved one place to the right. If the cursor is already positioned after the last character in the text field (and cannot move any further right), this button has no effect.","Up arrow: when the button on the remote control corresponding to this character is pressed, the cursor in the current text field is moved one place upwards. If the cursor is already in the first line of the text field (or if the current text field only has one line: MhwVkTextField), this button has no effect.","Down arrow: when the button on the remote control corresponding to this character is pressed, the cursor in the current text field is moved one place downwards. If the cursor is already in the last line of the text field (or if the current text field only has one line: MhwVkTextField), this button has no effect.","The \u201cfindLocation\u201d method determines the placement of the virtual keyboard on the screen, seeking to minimise the \u201ccropped\u201d surface.","The MhwVkTextField class is simply a specialisation of the \u201cTextField\u201d class in the \u201cjava.awt\u201d package. It additionally manages a boolean value which specifies the use (or not) of the virtual keyboard.","The constructors are exactly the same as those of the \u201cTextField\u201d class in the \u201cjava.awt\u201d package, with a simple additional argument: a boolean specifying the use of the virtual keyboard.","If the boolean is \u201ctrue\u201d, a \u2018base\u2019 instance of the \u201cTextField\u201d class is created, and a virtual keyboard listener, available within the current application, is also added at the same time, using the \u201caddKeyListener\u201d method. If not, a \u2018normal\u2019 TextField is created.","When the TextField has the focus, if the user presses \u2018OK\u2019 and the boolean specifies the use of the virtual keyboard, the virtual keyboard is displayed and gains the focus. It manages all of the events and is able to fill the text field. If the user presses \u2018OK\u2019 again, its text is validated, and the keyboard returns the focus. If the use of the virtual keyboard is not envisaged (boolean=false), the \u201cTextField\u201d has the same \u2018behaviour\u2019 as a standard TextField in \u201cjava.awt\u201d.","The MhwVkTextArea class is simply a specialisation of the \u201cTextArea\u201d class in the \u201cjava.awt\u201d package. It additionally manages a boolean value which specifies the use (or not) of the virtual keyboard.","The constructors are exactly the same as those of the \u201cTextArea\u201d class in the \u201cjava.awt\u201d package, with a simple additional argument: a boolean specifying the use of the virtual keyboard.","If the boolean is \u201ctrue\u201d, a \u2018base\u2019 instance of the \u201cTextArea\u201d class is created, and a virtual keyboard listener, available within the current application, is also added at the same time, using the \u201caddKeyListener\u201d method. If not, a \u2018normal\u2019 TextArea is created.","When the TextArea has the focus, if the user presses \u2018OK\u2019 and the boolean specifies the use of the virtual keyboard, the virtual keyboard is displayed and gains the focus. It manages all of the events and is able to fill the text field. If the user presses \u2018OK\u2019 again, its text is validated, and the keyboard returns the focus. If the use of the virtual keyboard is not envisaged (boolean=false), the \u201cTextArea\u201d has the same \u2018behaviour\u2019 as a standard TextArea in \u201cjava.awt\u201d.","The following section describes further the implementation of features described above, and in particular the reconstruction of graphical objects (for example text fields, buttons, sliders, lists, checkboxes, choices etc.) from a set of graphical elements.",{"@attributes":{"id":"p-0549","num":"0651"},"figref":"FIG. 39","b":["2100","2101","2102","2103","2104","2105","2106","2107","2108"]},"Typically, but not necessarily, each of these 9 elements is square (4\u00d74 pixels, 8\u00d78 pixels, 16\u00d716 pixels). The blocks of N, E, W, S and C elements are tiled within the area required (defined by the size of the component together with the border defined by the look). This area does not have to be a multiple of the size of the element. Currently, the tiling goes from left to right or top to bottom, so any incompletely drawn elements appear at the bottom and right hand sides. It could be envisaged to add \u201ccentered\u201d and \u201cright\u201d justified tiling rules if this was felt to be useful. In general, the NW, NE, SW and SE elements are the same size as the border and so tiling is not necessary. If, however, they are smaller than required, the tiling is performed automatically.","A brief description follows of how this is implemented. The work is divided into three areas: the mechanism built into the native WGT module allowing the creation and assignment of different looks to different WGT widgets; the development of the native \u201cLookPixmap\u201d module, in which the functions for painting the different graphical features of components are included; and the development of the mhw.awt Java package for interfacing with the native code.","These three areas of development are described in the following sections.","The WGT module look mechanism will now be described, with references to .","The aim of this section is to describe how the WGT module has been modified so as to be able to control the \u2018look\u2019 of the various graphic objects managed. New looks can be defined in new classes which can be added as and when necessary, leaving the WGT module untouched. A standard WGT look (LookWgt) is provided, instantiated and attributed to widgets by default so that applications not wishing to use this facility do not need to use it.","The following features are required: a number of different looks can be defined for each object type; a different look can be given to each object independently; and by default, the look defined by the current WGT is applied to objects.","Two different techniques for drawing the look of an object must be possible: bitmap and vectorial.","In the bitmap technique, the object is drawn by combining a number of predefined bitmap elements to create a single bitmap which is then drawn. To create objects of variable size, elements can be repeated, along the sides for example, in order to build an object of the required size.","Neither the size nor the precise arrangement of each of these elements is defined. The idea is to leave this as free as possible so that the creation of new looks is not overly restricted by WGT. The look class must define the bitmap elements and the rules for fitting them together as a function of the object size required.","The LookPixmap (native) and the PixmapLook (Java) classes described later use this method exclusively. There is nothing to stop developers creating their own look, derived or not from LookPixmap, which uses vectorial methods.","In the vectorial technique, the object is drawn using a series of basic draw operations such as DrawRectancle( ), DrawArc( ). The look class must define the rules for drawing the object as a function of the object size required.","It is perfectly possible to envisage a look class combining both Bitmap and Vectorial techniques. For example, the bitmap approach could be used for the basic form of a button, while the vectorial approach could provide the highlighting.","The WGT Module Look Mechanism are now discussed in more detail.","The following mechanisms have been incorporated:\n\n","These aspects are presented in the following sections, beginning with the methods for painting.","Each paint function now calls the following methods when it is called: DrawBackground( ); MhwWgtLookDrawBackground( ); DrawForeground( ); MhwWgtLookDrawForeground( ); MhwWgtLookDrawRelief( ); MhwWgtLookDrawFocus( ); and MhwWgtLookHighlight( ).","The two methods DrawBackground( ) and DrawForeground( ) are part of WGT and are called regardless of the look. The others are, in fact, pointers to the corresponding functions in the Look class associated with the widget in question. In this way, the look class implements the paint functions for these parts.",{"@attributes":{"id":"p-0567","num":"0675"},"tables":{"@attributes":{"id":"TABLE-US-00005","num":"00005"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"175pt","align":"left"}}],"thead":{"row":{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["Background","This allows the look to draw behind the entire widget."]},{"entry":["Foreground","This can be used to draw an image of other graphic over the"]},{"entry":[{},"central part of the widget (excluding the border)."]},{"entry":["Relief","This is called if the widget's relief flag is set and is used"]},{"entry":[{},"to draw a border or relief for the widget."]},{"entry":["Focus","This is called if the widget has the focus. It can be used to"]},{"entry":[{},"indicate this graphically."]},{"entry":["Highlight","This is called if the widget is highlighted. It can be used to"]},{"entry":[{},"indicate this graphically."]},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}}]}}}}},"The abstract class MhwWgtLook is defined and contains the following: WgtCoreLookClassMethod; WgtCoreLookClassField; WgtCoreLookClass; WgtCoreLookPart; and WgtCoreLookObject.","These are described below.",{"@attributes":{"id":"p-0570","num":"0678"},"tables":{"@attributes":{"id":"TABLE-US-00006","num":"00006"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0","pgwide":"1"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"1","colwidth":"70pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"84pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"126pt","align":"left"}}],"thead":{"row":{"entry":{"@attributes":{"namest":"1","nameend":"3","align":"center","rowsep":"1"}}}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["FIELDS:",{},{}]},{"entry":["MhwWgtLookClass","*extends;"]},{"entry":["Int32","classId;"]},{"entry":["String","ClassName;"]},{"entry":["Card16","mask;"]},{"entry":["Card8","borderwidthTop;"]},{"entry":["Card8","borderwidthBottom:"]},{"entry":["Card8","borderwidthLeft;"]},{"entry":["Card8","borderwidthRight;"]},{"entry":["MhwWgtColorMapId","Colormap:"]},{"entry":["MhwWgtVisual","visual;"]},{"entry":["Card32","blackPixel;"]},{"entry":["Card32","whitePixel;"]},{"entry":["Card32","transparentPixel;"]},{"entry":["MhwWgtColor","verylightGray;"]},{"entry":["MhwWgtColor","lightGray;"]},{"entry":["MhwWgtColor","middleGray;"]},{"entry":["MhwWgtColor","darkGray;"]},{"entry":["MhwWgtColor","highlight;"]},{"entry":["MhwWgtColor","blackColor;"]},{"entry":["MhwWgtColor","whiteColor;"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"280pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":"METHOD TABLE (set to point to the overloaded methods in derived classes):"}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"1","colwidth":"70pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"84pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"126pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["MhwWgtError","(*delete)","(MhwWgtLook);"]},{"entry":["MhwWgtErrox","(*free)","(MhwWgtLook);"]},{"entry":["MhwWgtError","(*reference)","(MhwWgtLook);"]},{"entry":["Card8","(*getBorderWidth)","(MhwWgtLook, MhwWgtWidget,"]},{"entry":[{},{},"MhwWgtLookBorder);"]},{"entry":["MhwWgtError","(*getBorderWidth)","(MhwWgtLook, MhwWgtLookBorder,"]},{"entry":[{},{},"Card8);"]},{"entry":["Bool","(*isInstanceOf)","(MhwWgtLook, Int32);"]},{"entry":["MhwWgtError","(*drawBackground)","(MhwWgtLook, MhwWgtWidget, Int16,"]},{"entry":[{},{},"Int16, Card16, Card16);"]},{"entry":["MhwWgtError","(*drawForeground)","(MhwWgtLook, MhwWgtWidget, Int16,"]},{"entry":[{},{},"Int16, Card16, Card16);"]},{"entry":["MhwWgtError","(*drawRelief)","(MhwWgtLook, MhwWgtWidget, Int16,"]},{"entry":[{},{},"Int16, Card16, Card16,"]},{"entry":[{},{},"MhwWgtLookRelief);"]},{"entry":["MhwWgtError","(*unDrawRelief)","(MhwWgtLook, MhwWgtWidget, Int16,"]},{"entry":[{},{},"Int16, Card16, Card16);"]},{"entry":["MhwWgtError","(*drawFocus)","(MhwWgtLook, MhwWgtWidget, Int16,"]},{"entry":[{},{},"Int16, Card16, Card16);"]},{"entry":["MhwWgtError","(*unDrawFocus)","(MhwWgtLook, MhwWgtWidget, Int16,"]},{"entry":[{},{},"Int16, Card16, Card16);"]},{"entry":["MhwWgtError","(*drawHighlight)","(MhwWgtLook, MhwWgtWidget, Int16,"]},{"entry":[{},{},"Int16, Card16, Card16);"]},{"entry":["MhwWgtError","(*unDrawHighlight)","(MhwWgtLook, MhwWgtWidget, Int16,"]},{"entry":[{},{},"Int16, Card16, Card16);"]},{"entry":["MhwWgtError","(*drawInset)","(MhwWgtLook, MhwWgtWidget, Int16,"]},{"entry":[{},{},"Int16, Card16, Card16);"]},{"entry":["MhwWgtError","(*drawOutset)","(MhwWgtLook, MhwWgtWidget, Int16,"]},{"entry":[{},{},"Int16, Card16, Card16)."]},{"entry":["MhwWgtError","(*drawSelectedBG)","(MhwWgtLook, MhwWgtWidget, Int16,"]},{"entry":[{},{},"Int16, Card16, Card16);"]},{"entry":["MhwWgtError","(*drawCheckSymbol)","(MhwWgtLook, MhwWgtWidget, Int16,"]},{"entry":[{},{},"Int16, Card16, Card16, Bool,"]},{"entry":[{},{},"MhwWgtCheckStyle):"]},{"entry":["MhwWgtError","(*drawChoiceSymbol)","(MhwWgtLook, MhwWgtWidget, Int16,"]},{"entry":[{},{},"Int16, Card16, Card16);"]},{"entry":["MhwWgtError","(*drawAnchor)","(MhwWgtLook, MhwWgtWidget, Int16,"]},{"entry":[{},{},"Int16, Card16, Card16, String,"]},{"entry":[{},{},"Card32, Int8, MhwWgtLookItemFlag,"]},{"entry":[{},{},"MhwWgtColor);"]},{"entry":["MhwWgtError","(*drawCross)","(MhwWgtLook, MhwWgtWidget, Int16,"]},{"entry":[{},{},"Int16, Card16, Card16);"]},{"entry":["MhwWgtError","(*unDrawCross)","(MhwWgtLook, MhwWgtWidget, Int16,"]},{"entry":[{},{},"Int16, Card16, Card16);"]},{"entry":["MhwWgtError","(*drawItem)","(MhwWgtLook, MhwWgtWidget, Int16,"]},{"entry":[{},{},"Int16, Card16, Card16, String."]},{"entry":[{},{},"Card32, Int8, MhwWgtLookItemFlag);"]},{"entry":["MhwWgtError","(*reDrawItem)","(MhwWgtLook, MhwWgtWidget, Int16,"]},{"entry":[{},{},"Int16, Card16, Card16, String,"]},{"entry":[{},{},"Card32, Int8, MhwWgtLookItemFlag,"]},{"entry":[{},{},"Bool);"]},{"entry":["MhwWgtError","(*drawSlidArrow)","(MhwWgtLook, MhwWgtWidget, Int16,"]},{"entry":[{},{},"Int16, Card16, Card16,"]},{"entry":[{},{},"MhwWgtSlidDirection);"]},{"entry":["MhwWgtError","(*drawSlidLift)","(MhwWgtLook. MhwWgtWidget. Int16,"]},{"entry":[{},{},"Int16, Card16, Card16);"]},{"entry":["MhwWgtError","(*drawCursor)","(MhwWgtLook, MhwWgtWidget, Int16."]},{"entry":[{},{},"Int16, Card16, Card16);"]},{"entry":["MhwWgtError","(unDrawCursor)","(MhwWgtLook, MhwWgtWidget, Int16,"]},{"entry":[{},{},"Int16, Card16, Card16);"]},{"entry":["MhwWgtError","(*drawString)","(MhwWgtLook, MhwWgtWidget, Int16,"]},{"entry":[{},{},"Int16, String, Card32, Int8);"]},{"entry":["MhwWgtDimension","(*getPreferredSizeArrow)","(MhwWgtLook);"]},{"entry":["MhwWgtDimension","(*getPreferredSizeCheck)","(MhwWgtLook);"]},{"entry":["MhwWgtDimension","(*getPreferredSizeChoice)","(MhwWgtLook);"]},{"entry":["MhwWgtDimension","(*getPreferredSizeCross)","(MhwWgtLook);"]},{"entry":["Card8","(*getItemBorderwidth)","(MhwWgtLook);"]},{"entry":{"@attributes":{"namest":"1","nameend":"3","align":"center","rowsep":"1"}}}]}}]}}},"(The Card8, Card16, etc. data types are aliases for number types having the indicated number of bits, e.g. Card8 is equivalent to a \u2018char\u2019, Card16 is equivalent to a \u2018short\u2019, etc.)","Each draw method is identical for each object type. For looks which require a different method for each method, or at least for certain methods, the method in the look class must identify the widget type and act accordingly.","Note the purpose of the DrawNothing( ) method. It simply returns OK if called. Certain features are not necessarily implemented in a given look. So that WGT does not necessarily have to test the existence of a given function, any unimplemented functions should point to this method.","Note also Mask. This is a private, read-only Boolean array where each element corresponds to one of the above methods. If an element is set to 1, then the corresponding method is redefined. Otherwise, the method is not redefined. In this way, if it wants to, WGT can find out in a single operation which methods it has to call.","The look class is used to define the interface between any look definition and WGT. WGT uses only these methods to display the required look. If additional functionality is required of a look, it can be incorporated in an extended look structure, but it is up to the application and not WGT to take these methods\/parameters into account. In this way, additional attributes and methods can be added.","A derived look structure must contain all these methods and attributes, and it can also add its own. However. WGT will only take those methods defined in the MhwWgtLook structure into account.","The MhwWgtLookWgt class is now discussed.","So that existing applications do not have to be modified to remain compatible with the modified version of WGT, a basic look class, defining the look that WGT objects currently have, is created and instantiated by WGT.","It is a sub-class of MhwWgtLook and is called MhwWgtLookWgt. When this class is initialised, the values of all of the pointers in the structure are set to point at the WGT-defined methods.","This basic class contains nothing else\u2014it simply defines the look that WGT currently provides.",{"@attributes":{"id":"p-0581","num":"0689"},"tables":{"@attributes":{"id":"TABLE-US-00007","num":"00007"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0","pgwide":"1"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"1","colwidth":"70pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"91pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"105pt","align":"left"}}],"thead":{"row":{"entry":{"@attributes":{"namest":"1","nameend":"3","align":"center","rowsep":"1"}}}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["FIELDS:",{},{}]},{"entry":["Card8","reliefWidth"]},{"entry":["MhwWgtColor","reliefColorWhite;"]},{"entry":["MhwWgtColor","reliefColorBlack;"]},{"entry":["Card8","focusWidth;"]},{"entry":["MhwWgtColor","focusColor;"]},{"entry":["Card8","highlightWidth;"]},{"entry":["MhwWgtColor","highlightColor;"]},{"entry":["MhwWgtColor","anchorColorBGNormal;"]},{"entry":["MhwWgtColor","anchorColorFGVisited:"]},{"entry":["MhwWgtColor","anchorColorBGCurrent:"]},{"entry":["Card16","mask;"]},{"entry":["Card8","reliefWidth;"]},{"entry":["MhwWgtColor","reliefColorWhite;"]},{"entry":["MhwWgtColor","reliefColorBlack;"]},{"entry":["Card8","focusWidth;"]},{"entry":["MhwWgtColor","focusColor;"]},{"entry":["Card8","highlightWidth;"]},{"entry":["MhwWgtColor","highlightColor;"]},{"entry":["MhwWgtColor","anchorColorBGNormal;"]},{"entry":["MhwWgtColor","anchorColorFGVisited;"]},{"entry":["MhwWgtColor","anchorColorBGCurrent;"]},{"entry":["MhwWgtColorMapId","colorMap;"]},{"entry":["Card32","blackPixel;"]},{"entry":["Card32","whitePixel;"]},{"entry":["Card32","transparentPixel;"]},{"entry":["MhwWgtColor","verylightGray;"]},{"entry":["MhwWgtColor","lightGray;"]},{"entry":["MhwWgtColor","middleGray;"]},{"entry":["MhwWgtColor","darkGray:"]},{"entry":["MhwWgtColor","highlight;"]},{"entry":["MhwWgtColor","blackColor;"]},{"entry":["MhwWgtColor","whiteColor;"]},{"entry":"METHOD TABLE:"},{"entry":["MhwWgtError","(*setReliefWidth)","(MhwWgtLkWgt, Card8);"]},{"entry":["MhwWgtError","(*setReliefColorBlack)","(MhwWgtLkWgt, MhwWgtColor);"]},{"entry":["MhwWgtError","(*setReliefColorWhite)","(MhwWgtLkWgt, MhwWgtColor);"]},{"entry":["MhwWgtError","(*setFocusWidth)","(MhwWgtLkWgt, Card8);"]},{"entry":["MhwWgtError","(*setFocusColor)","(MhwWgtLkWgt, MhwWgtColor);"]},{"entry":["MhwWgtError","(*setHighlightWidth)","(MhwWgtLkWgt, Card8);"]},{"entry":["MhwWgtError","(*setHighlightColor)","(MhwWgtLkWgt, MhwWgtColor);"]},{"entry":["MhwWgtError","(*setAnchorColorBGNormal)","(MhwWgtLkWgt, MhwWgtColor);"]},{"entry":["MhwWgtError","(*setAnchorColorFGVisited)","(MhwWgtLkWgt, MhwWgtColor);"]},{"entry":["MhwWgtError","(*setAnchorColorBGCurrent)","(MhwWgtLkWgt, MhwWgtColor);"]},{"entry":{"@attributes":{"namest":"1","nameend":"3","align":"center","rowsep":"1"}}}]}}}}},"With regard to the WGT initialisation, an instance of the MhwWgtLookwgt class must be created when the WGT is started. WGT will thus have access to these methods if the application does not specify a different look. The g_TheDefaultLook global variable (described below) must initially be set to point at this look.","The processes of defining new Looks and setting default Looks are now described.","WGT is not responsible for defining or instantiating new look objects. Applications must do this themselves. All look objects created must be castable in an MhwWgtLook structure. C.f the management of Looks below.","With regard to default looks, a field:","MhwWgtLook *DefaultLook","must be added to the MhwWgtContext object pointing to the instance of MhwWgtLook to be applied to any new objects created from this context. When a new WGT context is created, this field must be set to point at WgtBasicLook.","With regard to setting the default Look for a Context, a public method:","MgwWgtSetDefaultLook(MhwWgtContext, aContext, MhwWqtLook aLook)","is provided to set the DefaultLook field in aContext to point at aLook.","For associating a Look with an Object, the following attribute is added to the coreAtts structure in the core class:","MhwWgtLook *Look","This attribute is thus created for each object created. Whenever a object is instantiated, Look is set to point at the DefaultLook global variable.","Two new public methods MhwWgtSetXXXAttsLook(MhwWgtWidget anObject, MhWWgtLook aLook) and MhwWgtGeXXXAttsLook(MhwWgtWidget anObject, MhwWgtLook *aLook) should be added to the core class to allow the look instance associated with the object to be changed.","The management of Looks is now discussed.","WGT does not provide any look management. In order to use a look other than the default, an application must first ensure that one or more look classes are instantiated and initialised, and then each time that it creates a new WGT object, use the MhwWgtSetCoreAttsLook( ) method to associate the object with the desired look. If it wishes to use a given look for all future widgets, it can use the MhwWgtSetDefaultLook( ) method described above.","An application wishing to use any look other than the one defined by default is responsible for creating and instantiating the look. In another embodiment of the invention, an application may download looks remotely. In this case, however, the application itself must supply the required classes, derived from MhwWgtLook.","A look must not be destroyed by the application that created it until all the widgets which use it have been destroyed. This requires the addition of a refCounter field to count the number of \u201cclients\u201d.","look=MhwNewLook( )","MhwLookRef(look);",".",".",".","MhwLookUnref(look);","Look=0;","This replaces free (look). The look will actually be destroyed when its refCounter field equals 0.","SetXxxLook(widget, look) {","if(widget->core.look)\n\n","widget->core.look=look;","if(look)\n\n","}","The WGT Module List of APIs for implementing Looks is given here:",{"@attributes":{"id":"p-0611","num":"0721"},"tables":{"@attributes":{"id":"TABLE-US-00008","num":"00008"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0","pgwide":"1"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"189pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"77pt","align":"left"}}],"thead":{"row":{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":["extern MhwWgtError MhwWgtLookInitDefault","(MhwWgtLookClass*,"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"175pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"91pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"MhwWgtLookAtts*);"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"189pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"77pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":["extern MhwWgtError MhwWgtLookinitClass","(Void);"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"175pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"91pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":["extern MhwWgtError MhwWgtLookResetDefault","(MhwWgtLookClass*);"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"189pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"77pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":["extern MhwWgtError MhwWgtLookAttsGetBorderWidthBTLR","(MhwWgtLookAtts*,"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"147pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"119pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"Card8*, Card8*, Card8*, Card8*);"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"266pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":"extern MhwWgtError MhwWgtLookAttsGetBorderWidthBottom"}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"147pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"119pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"(MhwWgtLookAtts*, Card8*);"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"189pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"77pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":["extern MhwWgtError MhwWgtLookAttsGetBorderWidthLeft","(MhwWgtLookAtts*,"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"147pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"119pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"Card8*);"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"189pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"77pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":["extern MhwWgtError MhwWgtLookAttsGetaorderWidthRight","(MhwWgtLookAtts*,"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"147pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"119pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"Card8*);"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"189pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"77pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":["extern MhwWgtError MhwWgtLookAttsGetBorderWidthTop","(MhwWgtLookAtts*,"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"147pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"119pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"Card8*);"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"189pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"77pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":["extern MhwWgtError MhwWgtLookAttsGetDefault","(MhwWgtLookClass*,"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"147pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"119pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"MhwWgtLookAtts*)"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"189pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"77pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["extern MhwWgtError MhwWgtLookAttsInit","(MhwWgtLookAtts*);"]},{"entry":["extern MhwWgtError MhwWgtLookAttsSetBorderWidthBTLR","(MhwWgtLookAtts*,"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"147pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"119pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"Card8, Card8, Card8, Card8);"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"266pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":"extern MhwWgtError MhwWgtLookAttsSetBorderWidthBottom"}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"147pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"119pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"(MhwWgtLookAtts*, Card8);"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"189pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"77pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":["extern MhwWgtError MhwWgtLookAttsSetBorderWidthLeft","(MhwWgtLookAtts*,"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"147pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"119pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"Card8);"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"189pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"77pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":["extern MhwWgtError MhwWgtLookAttsSetBorderWidthRight","(MhwWgtLookAtts*,"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"147pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"119pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"Card8);"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"189pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"77pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":["extern MhwWgtError MhwWgtLookAttsSetBorderWidthTop","(MhwWgtLookAtts*,"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"147pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"119pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"Card8);"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}]}}]}}},"The Look\/LookPixmap module will now be described in more detail.","The MhwWgtLookPixmap class is derived from the MhwWgtLook class described above. Essentially it works by reconstructing the various elements of each component to create a graphical image of the required size, as described above.","These images are used for the following: backgrounds for buttons; relief (that is the border around the active zone of text areas, for example); a symbol for the Choice component; checkboxes; sliders; and slider lifts.","With reference to , to reduce initialization time, the images are not compressed, but are stored in a special format designed to minimize as far as possible the space occupied. The colour of each pixel () is described in a single byte, which is the index number () of the colour in the current colourmap.  shows an example buffer, image, containing an 4\u00d74 image ().","The image () in  would be stored as follows:",{"@attributes":{"id":"p-0617","num":"0727"},"tables":{"@attributes":{"id":"TABLE-US-00009","num":"00009"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"56pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"161pt","align":"left"}}],"thead":{"row":{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"Card8 slidLiftSeVrImage4 [4] [4] ="]},{"entry":[{},"{"]},{"entry":[{},"\u2003{ 0, 0, 0, 1},"]},{"entry":[{},"\u2003{ 0, 0, 1, 2},"]},{"entry":[{},"\u2003{ 0, 1, 2, 3},"]},{"entry":[{},"\u2003{ 1, 2, 3, 4}"]},{"entry":[{},"};"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}]}}}}},"The LookPixMap Image structure will now be described.","In order to identify the size of an image buffer, a structure, LookPixmapImage, is defined including the image buffer described above, together with the width and height of the image. This structure, defined below, is used to contain the data for each graphical element.",{"@attributes":{"id":"p-0620","num":"0730"},"tables":{"@attributes":{"id":"TABLE-US-00010","num":"00010"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"thead":{"row":{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"typedef struct"},{"entry":"{"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"4"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"133pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"Card8","*imageData;","Buffer containing the image. It is a two"]},{"entry":[{},{},{},"dimensional array of Card8, each element"]},{"entry":[{},{},{},"of which contains the index number in the"]},{"entry":[{},{},{},"palette of the colour to be displayed at the"]},{"entry":[{},{},{},"position in the array."]},{"entry":[{},"Card8","*maskData;","Buffer containing the mask. It is a one"]},{"entry":[{},{},{},"dimensional array of Card8, with one bit"]},{"entry":[{},{},{},"per pixel. (Format as returned by the"]},{"entry":[{},{},{},"Image module)."]},{"entry":[{},"Card16","width;","Width of the image."]},{"entry":[{},"Card16","height;","Height of the image."]},{"entry":[{},"Card8","isOpaque;","0 if image contains any transparent"]},{"entry":[{},{},{},"elements,"]},{"entry":[{},{},{},"1 if entirely opaque."]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"}"},{"entry":"LookPixmapImage;"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}]}}]}}},"Images can be of different sizes, although for a given type of element they will generally be the same. The central element (xxxxxC), however, is often of size 1\u00d71. The MhwWgtLookPixmapAllImages structure groups together all the picture elements as shown below:",{"@attributes":{"id":"p-0622","num":"0732"},"tables":{"@attributes":{"id":"TABLE-US-00011","num":"00011"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"1","colwidth":"63pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"49pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"105pt","align":"left"}}],"thead":{"row":{"entry":{"@attributes":{"namest":"1","nameend":"3","align":"center","rowsep":"1"}}}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["typedef struct",{},{}]},{"entry":"{"},{"entry":["LookPixmapImage","*relnoNW;","NorthWest corner of relief - state"]},{"entry":[{},{},"Normal"]},{"entry":["LookPixmapImage","*relnoSW;","SouthWest corner of relief - state"]},{"entry":[{},{},"Normal"]},{"entry":["LookPixmapImage","*relnoNE;","NorthEast corner of relief - state"]},{"entry":[{},{},"Normal"]},{"entry":["LookPixmapImage","*relnoSE;","SouthEast corner of relief - state"]},{"entry":[{},{},"Normal"]},{"entry":["LookPixmapImage","*relnoN;","North edge of relief - state Normal"]},{"entry":["LookPixmapImage","*relnoW;","West edge of relief - state Normal"]},{"entry":["LookPixmapImage","*relnoE;","East edge of relief - state Normal"]},{"entry":["LookPixmapImage","*relnoS:","South edge of relief - state Normal"]},{"entry":["LookPixmapImage","*relnoC;","Central area of relief - state"]},{"entry":[{},{},"Normal"]},{"entry":["LookPixmapImage","*relfoNW;","State - Focus only"]},{"entry":["LookPixmapImage","*relfoSW;"]},{"entry":["LookPixmapImage","*relfcNW;"]},{"entry":["LookPixmapImage","*relfoSE;"]},{"entry":["LookPixmapImage","*relfoN;"]},{"entry":["LookPixmapImage","*relfoW;"]},{"entry":["LookPixmapImage","*relfoE;"]},{"entry":["LookPixmapImage","*relfoS;"]},{"entry":["LookPixmapImage","*relfoC;"]},{"entry":["LookPixmapImage","*relhiNW;","State - Highlight only"]},{"entry":["LookPixmapImage","*relhiSW;"]},{"entry":["LookPixmapImage","*relhiNE;"]},{"entry":["LookPixmapImage","*relhiSE;"]},{"entry":["LookPixmapImage","*relhiN;"]},{"entry":["LookPixmapImage","*relhiW;"]},{"entry":["LookPixmapImage","*relhiE;"]},{"entry":["LookPixmapImage","*relhiS;"]},{"entry":["LookPixmapImage","*relhiC;"]},{"entry":["LookPixmapImage","*relfhNW;","State - Focus and Highlight"]},{"entry":["LookPixmapImage","*relfhSW;"]},{"entry":["LookPixmapImage","*rolfhNE;"]},{"entry":["LookPixmapImage","*relfhSE;"]},{"entry":["LookPixmapImage","*relfhN;"]},{"entry":["LookPixmapImage","*relfhW;"]},{"entry":["LookPixmapImage","*relfhE;"]},{"entry":["LookPixmapImage","*relfhS:"]},{"entry":["LookPixmapImage","*relfhC;"]},{"entry":["LookPixmapImage","*butnoNW;","Button elements"]},{"entry":["LookPixmapImage","*butnoSW:"]},{"entry":["LookPixmapImage","*butnoNE;"]},{"entry":["LookPixmapImage","*butnoSE;"]},{"entry":["LookPixmapImage","*butnoN;"]},{"entry":["LookPixmapImage","*butnoW:"]},{"entry":["LookPixmapImage","*butnoE:"]},{"entry":["LookPixmapImage","*butnoS;"]},{"entry":["LookPixmapImage","*butnoC;"]},{"entry":["LookPixmapImage","*butfoNW;"]},{"entry":["LookPixmapImage","*butfoSW;"]},{"entry":["LookPixmapImage","*butfoNE;"]},{"entry":["LookPixmapImage","*butfoSE;"]},{"entry":["LookPixmapImage","*butfoN;"]},{"entry":["LookPixmapImage","*butfoW;"]},{"entry":["LookPixmapImage","*butfoE;"]},{"entry":["LookPixmapImage","*butfoS;"]},{"entry":["LookPixmapImage","*butfoC;"]},{"entry":["LookPixmapImage","*buthiNW;"]},{"entry":["LookPixmapImage","*buthiSW;"]},{"entry":["LookPixmapImage","*buthiNE;"]},{"entry":["LookPixmapImage","*buthiSE;"]},{"entry":["LookPixmapImage","*buthiN;"]},{"entry":["LookPixmapImage","*buthiW;"]},{"entry":["LookPixmapImage","*buthiE;"]},{"entry":["LookPixmapImage","*buthiS;"]},{"entry":["LookPixmapImage","*buthiC;"]},{"entry":["LookPixmapImage","*butfhNW;"]},{"entry":["LookPixmapImage","*butfhSW;"]},{"entry":["LookPixmapImage","*butfhNE;"]},{"entry":["LookPixmapImage","*butfhSE;"]},{"entry":["LookPixmapImage","*butfhN;"]},{"entry":["LookPixmapImage","*butfhW;"]},{"entry":["LookPixmapImage","*butfhE;"]},{"entry":["LookPixmapImage","*butfhS;"]},{"entry":["LookPixmapImage","*butfhC;"]},{"entry":["LookPixmapImage","*choice;","Choice Symbol"]},{"entry":["LookPixmapImage","*chck1na,","Checkbox symbol - Type 1 not"]},{"entry":[{},{},"selected no focus"]},{"entry":["LookPixmapImage","*chck1a;","Checkbox symbol - Type 1"]},{"entry":[{},{},"selected no focus"]},{"entry":["LookPixmapImage","*chckf1na;","Checkbox symbol - Type 1 not"]},{"entry":[{},{},"selected focus"]},{"entry":["LookPixmapImage","*chckf1a:","Checkbox symbol - Type 1"]},{"entry":[{},{},"selected focus"]},{"entry":["LookPixmapImage","*chck2na;","Checkbox symbol - Type 2 not"]},{"entry":[{},{},"selected no focus"]},{"entry":["LookPixmapImage","*chck2a;","Checkbox symbol - Type 2"]},{"entry":[{},{},"selected no focus"]},{"entry":["LookPixmapImage","*chckf2na;","Checkbox symbol - Type 2"]},{"entry":[{},{},"not selected focus"]},{"entry":["LookPixmapImage","*chckf2a;","Checkbox symbol - Type 2"]},{"entry":[{},{},"selected focus"]},{"entry":["LookPixmapImage","*slidNeVr;","Slider background elements"]},{"entry":["LookPixmapImage","*slidEVr;"]},{"entry":["LookPixmapImage","*slidSeVr:"]},{"entry":["LookPixmapImage","*slidSwHr:"]},{"entry":["LookPixmapImage","*slidSHr;"]},{"entry":["LookPixmapImage","*slidSeHr;"]},{"entry":["LookPixmapImage","*slidSeVrHr;"]},{"entry":["LookPixmapImage","*slidLiftNeVr;","Slider lift elements"]},{"entry":["LookPixmapImage","*slidLiftEVr;"]},{"entry":["LookPixmapImage","*slidLiftSeVr,"]},{"entry":["LookPixmapImage","*slidliftSwHr;"]},{"entry":["LookPixmapImage","*slidLiftSHr;"]},{"entry":["LookPixmapImage","*slidLiftSeHr;"]},{"entry":"}"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"MhwWgtLookPixmapAllImages;"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}]}}]}}},"This section describes the LookPixmap module, including the LookPixmap class, which has been created to allow a set of different looks to be applied to the Web Browser.","This module contains the following source files: MhwWgtLookPixmap.h;","MhwWgtLookPixmapStruct.h; WgtLookPixmapClass.c; WgtLookPixmapPrivate.c;","MhwWgtLookPixmalImages.h; MhwWgtLookPixmapImages2.h;","MhwWgtLookPixmapImages3.h; MhwWgtLookPixmapImages4.h;","MhwWgtLookPixmapImages5.h; and MhwWgtLookPixmapImages6.h.","The LookPixmap Module will now be described, including details of the preferred method of creating and using LookPixmap Objects.","Any software using WGT for the creation and management of Widgets can use the LookPixmap module to provide alternative looks to the WGT widgets. For an application to use the LookPixmap look, a LookPixmap object must be created. This can be done using the following code:",{"@attributes":{"id":"p-0631","num":"0741"},"tables":{"@attributes":{"id":"TABLE-US-00012","num":"00012"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"98pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"91pt","align":"left"}}],"thead":{"row":{"entry":[{},{"@attributes":{"namest":"offset","nameend":"2","align":"center","rowsep":"1"}}]}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"MhwWgtLkWebClass","PixmapLook;"]},{"entry":[{},"MhwWgtLkWeb","PixmapLookObject;"]},{"entry":[{},"MhwWgtLkWebAtts","LookPixmapValues;"]},{"entry":[{},"MhwWgtError","WgtErr;"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"2","align":"center","rowsep":"1"}}]}]}}}}},"WgtErr = MhwWgtLkWebInitClass ( );","WgtErr = MhwWgtLkWebAttsInit (&LookPixmapValues);","WgtErr = MhwWgtLkWebInitDefault (&PixmapLook, &LookPixmapValues);","PixmapLookObject = MhwWgtLkWebNew (&LookPixMapValues);","A method for setting the default look is now described.","An application can use a given look object by default. By default. the default look is the LookWgt object created by WGT. In order to set another default look, on condition that it has already been created as described above. the following function can be used:","MhwWgtSetDefaultLook ((MhwWgtLook) PixmapLookObject);","All subsequent WGT widgets created will be associated with the LookPixmap look class and not the WGT default LookWgt","An application can choose or set a look for a given type of widget, or a given widget, as will now be described.","An application can set the look for a given widget when the object is created by calling the following function just before the widget is created:","MhwWgtXXXAttsSetLook (MhwWgtXXXAtts*, MhwWgtLook);","It can also set the look of an object after creation using the following function:","MhwWgtXXXsetLook (MhwWgtXXXWidget *, MhwWgtLook);","(where xxx is the type of widget\u2014eg LIST).","The method of using LookPixmap Images is now described.","A single LookPixmap object uses a single set of images. You can obviously change the look dramatically, simply by changing the images.","You can change the images used for a given LookPixmap object by calling the following functions:","MhwWgtLookPixmapSetImages (MhwWgtLookPixmap *, MhwWgtLookPixmapAllImages*);","Sets the images used for all widgets using the specified LookPixmap object to the specified image set.","MhwWgtLookPixmapSetDefaultImages (MhwWgtLookPixmap*);","Sets the images used for all widgets using the specified LookPixmap object to the default image set.","If you wish to use different images for different widgets, you must create a LookPixmap object for each set of images required. You then assign each image set to the appropriate look, and then associate each look to the appropriate widget.","The API of the LookPixmap module will now be described, with reference to .","The following public APIs are available:","MhwWptLookPixmapSetImages( )","Prototype:",{"@attributes":{"id":"p-0656","num":"0766"},"tables":{"@attributes":{"id":"TABLE-US-00013","num":"00013"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"112pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"105pt","align":"left"}}],"thead":{"row":{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["MhwWgtError MhwWgtLookPixmap","(MhwWgtLkWeb aLook,"]},{"entry":["SetImages","MhwWgtLookPixmapAllImages*"]},{"entry":[{},"someImages);"]},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}}]}}}}},"Description","Sets the set of images used by aLook to the set of images pointed to by someImages.",{"@attributes":{"id":"p-0659","num":"0769"},"tables":{"@attributes":{"id":"TABLE-US-00014","num":"00014"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"thead":{"row":{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":"Parameters:"}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"161pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"aLook","The MhwWgtLkWeb object to which to associate"]},{"entry":[{},{},"the images, someImages"]},{"entry":[{},"someImages","The set of images to associate with aLook."]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":"Returns:"}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"MHW_WGT_SUCCESS"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}]}}]}},"br":{}},"Prototype:",{"@attributes":{"id":"p-0661","num":"0771"},"tables":{"@attributes":{"id":"TABLE-US-00015","num":"00015"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"112pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"105pt","align":"left"}}],"thead":{"row":{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["MhwWgtError","(MhwWgtLkWeb aLook, Card8"]},{"entry":["MhwWgtLookPixmapSetImagesID","anImageID);"]},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}}]}}}}},"Description","Sets the set of images used by aLook to the set of images hard-programmed in MhwWgtLookPixMap and identified by anImageID.",{"@attributes":{"id":"p-0664","num":"0774"},"tables":{"@attributes":{"id":"TABLE-US-00016","num":"00016"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"thead":{"row":{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":"Parameters:"}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"161pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"aLook","The MhwWgtLkWeb object to which to associate"]},{"entry":[{},{},"the images identified by anImageID."]},{"entry":[{},"anImageID","The identifier of the set of images, hard-"]},{"entry":[{},{},"programmed in MhwWgtLookPixmap, to associate"]},{"entry":[{},{},"with aLook."]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":"Returns:"}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"MHW_WGT_SUCCESS"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}]}}]}},"br":{}},"Prototype:",{"@attributes":{"id":"p-0666","num":"0776"},"tables":{"@attributes":{"id":"TABLE-US-00017","num":"00017"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"126pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"91pt","align":"left"}}],"thead":{"row":{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["MhwWgtError","(MhwWgtLkWeb aLook);"]},{"entry":"MhwWgtLookPixmapSetDefaultImages"},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}}]}}}}},"Description","Sets the set of images used by aLook to the set of images hard-programmed in MhwWgtLookPixmap and identified by the identifier 1.",{"@attributes":{"id":"p-0669","num":"0779"},"tables":{"@attributes":{"id":"TABLE-US-00018","num":"00018"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"thead":{"row":{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":"Parameters:"}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"175pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"aLook","The MhwWgtLkWeb object to which to associate the"]},{"entry":[{},{},"images identified by anImageID."]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":"Returns:"}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"MHW_WGT_SUCCESS"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}]}}]}},"br":{}},"Prototype:",{"@attributes":{"id":"p-0671","num":"0781"},"tables":{"@attributes":{"id":"TABLE-US-00019","num":"00019"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"112pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"105pt","align":"left"}}],"thead":{"row":{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["MhwWgtError","(MhwWgtLkWeb aLook, Int32"]},{"entry":["MhwWgtLookPixmapLoadImage","anElementID, Int32 aWidth, Int32"]},{"entry":[{},"aHeight, Card8* anImageBuffer);"]},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}}]}}}}},"Description:","Used to change a single image pointed to by the current MhwWgtLookPixmapAllImages structure to point at the specified image. Creates an LookPixmapImage structure and sets the current MhwWgtLookPimapAllImages structure pointed to by aLook to point at this LookPixmapImage for the element specified by anElementID.",{"@attributes":{"id":"p-0674","num":"0784"},"tables":{"@attributes":{"id":"TABLE-US-00020","num":"00020"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"thead":{"row":{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":"Parameters:"}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"49pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"154pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"aLook","The MhwWgtLkWeb object to which to associate"]},{"entry":[{},{},"the images identified by anImageID."]},{"entry":[{},"anElementID","The identifier of the element to change."]},{"entry":[{},"aWidth","The width, in pixels, of the new image."]},{"entry":[{},"aHeight","The height, in pixels, of the new image."]},{"entry":[{},"anImageBuffer","The buffer containing the new image data."]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":"Returns:"}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"MHW_WGT_SUCCESS"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}]}}]}},"br":{}},"Prototype:",{"@attributes":{"id":"p-0676","num":"0786"},"tables":{"@attributes":{"id":"TABLE-US-00021","num":"00021"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"119pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"98pt","align":"left"}}],"thead":{"row":{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["MhwWgtError","(LookPixmapImage* elemN,"]},{"entry":["LookPixmapMakeImageFromElements","LookPixmapImage* elemE,"]},{"entry":[{},"LookPixmapImage* elemW,"]},{"entry":[{},"LookPixmapImage* elemS,"]},{"entry":[{},"LookPixmapImage* elemNW,"]},{"entry":[{},"LookPixmapImage* elemE,"]},{"entry":[{},"LookPixmapImage* elemSW,"]},{"entry":[{},"LookPixmapImage* elemSE,"]},{"entry":[{},"LookPixmapImage* elemC,"]},{"entry":[{},"Card16 anX, Card16 aY, Card16"]},{"entry":[{},"aWidth, Card16 aHeight,"]},{"entry":[{},"MHWWindowID aWindow,"]},{"entry":[{},"LookPixmapDrawMode"]},{"entry":[{},"aDrawMode);"]},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}}]}}}}},"Description:","Takes the nine images of elemX and draws them in the specified MHW window. The rules for constructing the image are specified by aDrawMode (currently only MHW_WGT_LIKWEB_DRAW_NORMAL exists). The final image is drawn in the window with the top left corner positioned at (anX, aY) and of size aWidth\u00d7aHeight.","If one or more of the elements have zero size (either elemXX.width or elemXX.height is zero) this element is not drawn.",{"@attributes":{"id":"p-0680","num":"0790"},"tables":{"@attributes":{"id":"TABLE-US-00022","num":"00022"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"thead":{"row":{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":"Parameters:"}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"elemN, elemE, elemW, elemS, elemNW, elemNE, elemSW,"]},{"entry":[{},"elemSE, elemC: the"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"161pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},{},"image to draw at the top, right, left, bottom, top left"]},{"entry":[{},{},"corner, top right corner, bottom left corner, bottom"]},{"entry":[{},{},"right corner and middle, respectively."]},{"entry":[{},"\u03b1nX","The x-position in the window, aWindow, to draw"]},{"entry":[{},{},"the final image."]},{"entry":[{},"\u03b1Y","The y-position in the window, aWindow, to draw"]},{"entry":[{},{},"the final image."]},{"entry":[{},"\u03b1Width","The width, in pixels, of the new image."]},{"entry":[{},"\u03b1Height","The height, in pixels, of the new image."]},{"entry":[{},"\u03b1Window","The window in which to draw the constructed"]},{"entry":[{},{},"image."]},{"entry":[{},"\u03b1DrawMode","The mode in which to construct the image."]},{"entry":[{},{},"MHW_WGT_LKWEB_DRAW_NORMAL: Puts"]},{"entry":[{},{},"the NW (2100), NE (2101), SW (2102) and SE"]},{"entry":[{},{},"(2103) elements in the four corners (2200, 2201,"]},{"entry":[{},{},"2202, 2203) with no tiling. Horizontally tiles the N"]},{"entry":[{},{},"and S elements. Vertically tiles the W and E"]},{"entry":[{},{},"elements. Tiles both horizontally and vertically the"]},{"entry":[{},{},"C element. Although it will work for any image"]},{"entry":[{},{},"sizes, it is only guaranteed to correctly tile the area"]},{"entry":[{},{},"provided that the central area (2208) is rectangular."]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":"Returns:"}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"56pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"161pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"MHW_WGT_SUCCESS"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}]}}]}}},"The Mhw.awt Java Interface Package will now be described.","Three Java classes have been developed so that the Look mechanism defined in WGT can be exploited by java applications. These are: mhw.awt.Look; mhw.awt.WgtLook; and mhw.awt.PixmapLook.","The Look class is the abstract class corresponding to the class MhwWgtLook described above.","The WgtLook class is used to create and handle instances of the WGT class MhwWgtLookWgt.","The PixmapLook class is used to store the images used by the WgtLook class.","The Mhw.awt.PixmapLook API will now be described, beginning with details of the constructors.","PixmapLook","public PixmapLook( )","Creates a new instance of a PixmapLook object, with the images initialised to the default images (ID=1).","PixmapLook","public PixmapLook (int imageID)","Creates a new instance of a PixmapLook object, with the images initialised to the images specified by imageID.","The methods will now be described.","SetImages",{"@attributes":{"id":"p-0692","num":"0802"},"tables":{"@attributes":{"id":"TABLE-US-00023","num":"00023"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"91pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"84pt","align":"left"}}],"thead":{"row":{"entry":[{},{"@attributes":{"namest":"offset","nameend":"2","align":"center","rowsep":"1"}}]}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"public void","SetImages( )"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"2","align":"center","rowsep":"1"}}]}]}}}}},"Set the current images for this PixmapLook object to the default (ID=I)","SetImages",{"@attributes":{"id":"p-0694","num":"0804"},"tables":{"@attributes":{"id":"TABLE-US-00024","num":"00024"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"4"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"21pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"70pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"56pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"70pt","align":"left"}}],"thead":{"row":{"entry":[{},{"@attributes":{"namest":"offset","nameend":"3","align":"center","rowsep":"1"}}]}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"public void","SetImages","(int imageID)"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"3","align":"center","rowsep":"1"}}]}]}}}}},"Set the current Images for this PixmapLook object to the images specified by imageID.","LoadImage",{"@attributes":{"id":"p-0696","num":"0806"},"tables":{"@attributes":{"id":"TABLE-US-00025","num":"00025"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"4"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"21pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"63pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"63pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"70pt","align":"left"}}],"thead":{"row":{"entry":[{},{"@attributes":{"namest":"offset","nameend":"3","align":"center","rowsep":"1"}}]}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"public void","LoadImage","(int elementID,"]},{"entry":[{},{},{},"int width,"]},{"entry":[{},{},{},"int height,"]},{"entry":[{},{},{},"byte[ ] buffer)"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"3","align":"center","rowsep":"1"}}]}]}}}}},"Loads a specified image element. Each PixmapLook object has a set of (94) images associated with it. These images represent the graphic component elements as follows: 0 relnoNW; 1 relnoSW; 2 relnoNE; 3 relnoSE; 4 relnoN; 5 relnoW; 6 relnoE; 7 relnoS; 8 relnoC; 9 relfoNW; 10 relfoSW; 11 relfoNE; 12 relfoSE, 13 relfoN; 14 relfoW; 15 relfoE; 16 relfoS; 17 relfoC; 18 relhiNW; 19 relhiSW; 20 relhiNE; 21 relhiSE; 22 relhiN; 23 relhiW; 24 relhiE; 25 relhiS; 26 relhiC; 27 relfhNW; 28 relfhSW; 29 relfhNE; 30 relfhSE; 31 relfhN; 32 relfhW; 33 relfhE; 34 relfhS; 35 relfh C; 36 butnoNW; 37 butnoSW; 38 butnoNE; 39 butnoSE; 40 butnoN; 41 butnoW; 42 butnoE; 43 butnoS; 44 butnoC; 45 butfoNW; 46 butfoSW; 47 butfoNE; 48 butfoSE; 49 butfoN; 50 butfoW; 51 butfoE; 52 butfoS; 53 butfoC; 54 buthiNW; 55 buthiSW; 56 buthiNE; 57 buthiSE; 58 buthiN; 59 buthiW; 60 buthiE; 61 buthiS; 62 buthiC; 63 butfhNW; 64 butfhSW; 65 butfhNE; 66 butfhSE; 67 butfhN; 68 butfhW; 69 butfhE; 70 butfhS; 71 butfhC; 72 choice; 73 chcklno; 74 chcklse; 75 chcklfo; 76 chcklfs; 77 chck2no; 78 chck2se; 79 chck2fo; 80 chck2fs; 81 slidNeVr, 82 slidEVr, 83 slidSeVr; 84 slidSwHr, 85 slidSHr; 86 slidSeHr; 87 slidSeVrHr; 88 slidLiftNeVr, 89 slidLiftEVr, 90 slidLiftSeVr; 91 slidLiftSwHr; 92 slidLiftSHr, 93 slidLiftSeHr.","width specifies the width of the image passed.","height specifies the height of the image passed.","buffer contains the image data. This is in the form of a byte array, each byte giving the colormap index to be used for each pixel. The index used for pixel (x,y) is buffer[(y*width)+x].","MakeImageFromElements",{"@attributes":{"id":"p-0701","num":"0811"},"tables":{"@attributes":{"id":"TABLE-US-00026","num":"00026"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"1","colwidth":"56pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"91pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"70pt","align":"left"}}],"thead":{"row":{"entry":{"@attributes":{"namest":"1","nameend":"3","align":"center","rowsep":"1"}}}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["public void","MakeImageFromElements","(int[ ] widths,"]},{"entry":[{},{},"int[ ] heights,"]},{"entry":[{},{},"byte[ ][ ] buffers,"]},{"entry":[{},{},"int anX,"]},{"entry":[{},{},"int aY,"]},{"entry":[{},{},"int aWidth,"]},{"entry":[{},{},"int aHeight,"]},{"entry":[{},{},"java.awt.Component"]},{"entry":[{},{},"aComponent)"]},{"entry":{"@attributes":{"namest":"1","nameend":"3","align":"center","rowsep":"1"}}}]}}}}},"Constructs an image based on 9 elements (N, E, W, S, NW, NE, SW, SE, C) and draw it on the window associated with the component aComponent with the top left corner at (anX, aY) and with size aWidth\u00d7aHeight. The image buffers are passed as a two dimensional array, one dimension giving the image number (0\u20138 corresponding to N, E, W, S, NW, NE, SW, SE, C) and the other containing the data. The widths and heights of each buffer are given in the arrays widths and heights.","DownloadLookDir","public java.lang.String DownloadLookDir( )","Downloads a \u201clook\u201d directory from the MPEG stream. Returns a string containing information on each set of look images which can be downloaded separated by newlines. The line number of a title (0 to n\u22121) corresponds to the identifier (ImageSet) to be used with the function DownLoadLookImages(int ImageSet).","The directory is in fact a simple text file containing the string that is returned. The file path is hard coded in the source\u2014currently \/home\/users\/mstoddar\/mhplus\/util\/looks\/images.dir. This can be changed as appropriate. This can thus be used in the decoder to automatically download from the MPEG stream.","The format of the file is:","<Image Set Title 1>\\t<>Image Set Descriptions><\\t><URL Resoucrce><\\t><URL Preview><\\n>","<Image Set Title 2><\\t<Image Set Description><\\t><URL Resource><\\t><URL Preview><\\n>","<Image Set Title 3><\\t><Image Set Description><\\t><URL Resource><\\t><URL Preview><\\n>","<Image Set Title 4><\\n><Image Set Description><URL Resource><\\t><URL Preview><\\n>","Returns \u201c \u201d if unsuccessful.","DownloadLookImages","public void DownloadLookImages (int ImageSet)","Downloads a new set of images from the MPEG stream, identified by the line number (0 to n\u22121) of one of the entries returned in DownLoadLookDir( ), and attributes them to this look.","The file containing the data is in the following format:","WWWWHHHHWWWWHHHH . . . a series of four byte strings (leading spaces) containing the decimal values of the widths and heights of all 94 images (in the same order as in the method LoadImage( )). The data buffers for each image follow, again in the same format as LoadImage( ). No alignment is made between images, the beginning of the next image starting at the byte following the previous one.","The file path is hard coded in the source\u2014currently \/home\/users\/mstoddar\/mhplus\/util\/looks\/images.<ImageSet>. This can be changed as appropriate. This can thus be used in the decoder to automatically download from the MPEG stream.","public void DownloadLookImages (string ImageURL)","Downloads a new set of images from the MPEG stream, identified by the URL specified, and attributes them to this look.","The file containing the data is in the format given above.","The structure of the file is given below in C syntax for clarity:\n\n","For Example:",{"@attributes":{"id":"p-0722","num":"1114"},"tables":{"@attributes":{"id":"TABLE-US-00027","num":"00027"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"5"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"63pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"28pt","align":"center"}},{"@attributes":{"colname":"2","colwidth":"49pt","align":"center"}},{"@attributes":{"colname":"3","colwidth":"28pt","align":"center"}},{"@attributes":{"colname":"4","colwidth":"49pt","align":"center"}}],"thead":{"row":[{"entry":[{},{"@attributes":{"namest":"offset","nameend":"4","align":"center","rowsep":"1"}}]},{"entry":[{},"Width","Height","Width","Height"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"4","align":"center","rowsep":"1"}}]}]},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":{}}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"5"},"colspec":[{"@attributes":{"colname":"1","colwidth":"63pt","align":"center"}},{"@attributes":{"colname":"2","colwidth":"28pt","align":"char","char":"."}},{"@attributes":{"colname":"3","colwidth":"49pt","align":"char","char":"."}},{"@attributes":{"colname":"4","colwidth":"28pt","align":"char","char":"."}},{"@attributes":{"colname":"5","colwidth":"49pt","align":"char","char":"."}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["0000000","8","8","8","8"]},{"entry":["0000020","8","8","8","8"]},{"entry":["0000040","8","8","8","8"]},{"entry":["0000060","8","8","8","8"]},{"entry":["0000100","8","8","8","8"]},{"entry":["0000120","8","8","8","8"]},{"entry":["0000140","8","8","8","8"]},{"entry":["0000160","8","8","8","8"]},{"entry":["0000200","8","8","1","1"]},{"entry":["0000220","8","8","8","8"]},{"entry":["0000240","8","8","8","8"]},{"entry":["0000260","8","8","8","8"]},{"entry":["0000300","8","8","8","8"]},{"entry":["0000320","1","1","8","8"]},{"entry":["0000340","8","8","8","8"]},{"entry":["0000360","8","8","8","8"]},{"entry":["0000400","8","8","8","8"]},{"entry":["0000420","8","8","1","1"]},{"entry":["0000440","8","8","8","8"]},{"entry":["0000460","8","8","8","8"]},{"entry":["0000500","8","8","8","8"]},{"entry":["0000520","8","8","8","8"]},{"entry":["0000540","1","1","8","8"]},{"entry":["0000560","8","8","8","8"]},{"entry":["0000600","8","8","8","8"]},{"entry":["0000620","8","8","8","8"]},{"entry":["0000640","8","8","1","1"]},{"entry":["0000660","8","8","8","8"]},{"entry":["0000700","8","8","8","8"]},{"entry":["0000720","8","8","8","8"]},{"entry":["0000740","8","8","8","8"]},{"entry":["0000760","1","1","8","8"]},{"entry":["0001000","8","8","8","8"]},{"entry":["0001020","8","8","8","8"]},{"entry":["0001040","8","8","8","8"]},{"entry":["0001060","8","8","1","1"]},{"entry":["0001100","1 6","1 6","1 6","1 6"]},{"entry":["0001120","1 6","1 6","1 6","1 6"]},{"entry":["0001140","1 6","1 6","1 6","1 6"]},{"entry":["0001160","1 6","1 6","1 6","1 6"]},{"entry":["0001200","1 6","1 6","8","8"]},{"entry":["0001220","8","8","8","8"]},{"entry":["0001240","8","8","8","8"]},{"entry":["0001260","8","8","1","1"]},{"entry":["0001300","2","2","2","2"]},{"entry":["0001320","2","2","2","2"]},{"entry":["0001340","2","2","2","2"]},{"entry":{"@attributes":{"namest":"1","nameend":"5","align":"center","rowsep":"1"}}}]}}]}}},{"@attributes":{"id":"p-0723","num":"1115"},"tables":{"@attributes":{"id":"TABLE-US-00028","num":"00028"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0","pgwide":"1"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"371pt","align":"left"}},"thead":{"row":{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":"Start of buffer 1 data. (relnoNW) (8 \u00d7 8 bytes)"}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"17"},"colspec":[{"@attributes":{"colname":"1","colwidth":"35pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"21pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"21pt","align":"left"}},{"@attributes":{"colname":"4","colwidth":"21pt","align":"left"}},{"@attributes":{"colname":"5","colwidth":"21pt","align":"left"}},{"@attributes":{"colname":"6","colwidth":"21pt","align":"left"}},{"@attributes":{"colname":"7","colwidth":"21pt","align":"left"}},{"@attributes":{"colname":"8","colwidth":"21pt","align":"left"}},{"@attributes":{"colname":"9","colwidth":"21pt","align":"left"}},{"@attributes":{"colname":"10","colwidth":"21pt","align":"left"}},{"@attributes":{"colname":"11","colwidth":"21pt","align":"left"}},{"@attributes":{"colname":"12","colwidth":"21pt","align":"left"}},{"@attributes":{"colname":"13","colwidth":"21pt","align":"left"}},{"@attributes":{"colname":"14","colwidth":"21pt","align":"left"}},{"@attributes":{"colname":"15","colwidth":"21pt","align":"left"}},{"@attributes":{"colname":"16","colwidth":"21pt","align":"left"}},{"@attributes":{"colname":"17","colwidth":"21pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["0001360","\\0","\\0","\\0","\\0","\\0","266","004","004","\\0","\\0","\\0","266","\\n","\\r","\\r","\\r"]},{"entry":["0001400","\\0","\\0","\\n","\\r","017","\\r","\\v","001","\\0","266","\\r","017","\\r","001","001","001"]},{"entry":["0001420","\\0","\\n","017","\\r","001","001","001","001","265","\\r","\\r","001","001","001","001","001"]},{"entry":["0001440","004","\\r","\\v","001","001","001","001","001","004","\\v","001","001","001","001","001","006"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"371pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":"Start of buffer 2 data. (relnoSW) (8 \u00d7 8 bytes)"}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"17"},"colspec":[{"@attributes":{"colname":"1","colwidth":"35pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"21pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"21pt","align":"left"}},{"@attributes":{"colname":"4","colwidth":"21pt","align":"left"}},{"@attributes":{"colname":"5","colwidth":"21pt","align":"left"}},{"@attributes":{"colname":"6","colwidth":"21pt","align":"left"}},{"@attributes":{"colname":"7","colwidth":"21pt","align":"left"}},{"@attributes":{"colname":"8","colwidth":"21pt","align":"left"}},{"@attributes":{"colname":"9","colwidth":"21pt","align":"left"}},{"@attributes":{"colname":"10","colwidth":"21pt","align":"left"}},{"@attributes":{"colname":"11","colwidth":"21pt","align":"left"}},{"@attributes":{"colname":"12","colwidth":"21pt","align":"left"}},{"@attributes":{"colname":"13","colwidth":"21pt","align":"left"}},{"@attributes":{"colname":"14","colwidth":"21pt","align":"left"}},{"@attributes":{"colname":"15","colwidth":"21pt","align":"left"}},{"@attributes":{"colname":"16","colwidth":"21pt","align":"left"}},{"@attributes":{"colname":"17","colwidth":"21pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["0001460","004","004","263","\\0","\\0","\\0","\\0","\\0","\\r","\\r","\\v","004","\\a","\\0","\\0","\\0"]},{"entry":["0001500","001","001","001","270","004","262","\\0","\\0","001","001","001","001","\\n","004","004","\\0"]},{"entry":["0001520","001","001","001","001","001","\\n","\\a","\\0","001","001","001","001","001","270","\\L","265"]},{"entry":["0001540","001","001","001","001","001","270","\\t","\\a","006","001","001","001","001","270","\\C","006"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"371pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":"Start of buffer 3 data. (relnoNE) (8 \u00d7 8 bytes)"}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"17"},"colspec":[{"@attributes":{"colname":"1","colwidth":"35pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"21pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"21pt","align":"left"}},{"@attributes":{"colname":"4","colwidth":"21pt","align":"left"}},{"@attributes":{"colname":"5","colwidth":"21pt","align":"left"}},{"@attributes":{"colname":"6","colwidth":"21pt","align":"left"}},{"@attributes":{"colname":"7","colwidth":"21pt","align":"left"}},{"@attributes":{"colname":"8","colwidth":"21pt","align":"left"}},{"@attributes":{"colname":"9","colwidth":"21pt","align":"left"}},{"@attributes":{"colname":"10","colwidth":"21pt","align":"left"}},{"@attributes":{"colname":"11","colwidth":"21pt","align":"left"}},{"@attributes":{"colname":"12","colwidth":"21pt","align":"left"}},{"@attributes":{"colname":"13","colwidth":"21pt","align":"left"}},{"@attributes":{"colname":"14","colwidth":"21pt","align":"left"}},{"@attributes":{"colname":"15","colwidth":"21pt","align":"left"}},{"@attributes":{"colname":"16","colwidth":"21pt","align":"left"}},{"@attributes":{"colname":"17","colwidth":"21pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["0001560","004","\\v","001","001","001","001","001","006","\\b","001","001","001","001","001","001","001"]},{"entry":["0001600","006","\\n","001","001","001","001","001","001","\\0","265","\\n","001","001","001","001","001"]},{"entry":["0001620","\\0","006","\\t","\\rL","001","001","001","001","\\0","\\0","261","\\t","\\n","\\n","\\n","\\n"]},{"entry":["0001640","\\0","\\0","\\0","006","022","265","265","\\t","\\0","\\0","\\0","\\0","\\0","\\a","006","006"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"371pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":"Start of buffer 4 data. (relnoSE) (8 \u00d7 8 bytes)"}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"17"},"colspec":[{"@attributes":{"colname":"1","colwidth":"35pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"21pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"21pt","align":"left"}},{"@attributes":{"colname":"4","colwidth":"21pt","align":"left"}},{"@attributes":{"colname":"5","colwidth":"21pt","align":"left"}},{"@attributes":{"colname":"6","colwidth":"21pt","align":"left"}},{"@attributes":{"colname":"7","colwidth":"21pt","align":"left"}},{"@attributes":{"colname":"8","colwidth":"21pt","align":"left"}},{"@attributes":{"colname":"9","colwidth":"21pt","align":"left"}},{"@attributes":{"colname":"10","colwidth":"21pt","align":"left"}},{"@attributes":{"colname":"11","colwidth":"21pt","align":"left"}},{"@attributes":{"colname":"12","colwidth":"21pt","align":"left"}},{"@attributes":{"colname":"13","colwidth":"21pt","align":"left"}},{"@attributes":{"colname":"14","colwidth":"21pt","align":"left"}},{"@attributes":{"colname":"15","colwidth":"21pt","align":"left"}},{"@attributes":{"colname":"16","colwidth":"21pt","align":"left"}},{"@attributes":{"colname":"17","colwidth":"21pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["0001660","\\r","001","001","001","001","270","\\t","006","001","001","001","001","001","270","\\t","006"]},{"entry":["0001700","001","001","001","001","001","\\n","265","261","001","001","001","001","\\n","266","261","\\0"]},{"entry":["0001720","001","001","001","\\n","266","\\b","261","\\0","270","270","004","266","\\b","261","\\0","\\0"]},{"entry":["0001740","\\t","\\t","\\b","261","261","\\0","\\0","\\0","006","006","261","\\0","\\0","\\0","\\0","\\0"]},{"entry":{"@attributes":{"namest":"1","nameend":"17","align":"center","rowsep":"1"}}}]}}]}},"br":[{},{}]},"public void reDrawAll( )","Finds the widget with the focus, then the parents until no more. Top window then set to invisible and visible again. Then the whole window should be redrawn.","The various methods described above for displaying one or more graphical objects, for navigating between a plurality of such objects, or for receiving input from the user may equally be applied to other areas primarily, but not exclusively, within the context of the reception of broadcasts from a broadcast supplier. In general, any functionality of a set-top box involving visual interaction with a user may employ such methods.","For example, a navigable chain of icons, possibly with subchains attached, could be employed in a home shopping application, to allow the user to display articles, view prices, place orders and otherwise interact with the application. The graphical object used to place an order might, when highlighted, automatically \u2018flip\u2019 in the manner described above between the symbol to buy (for example, a dollar sign, $) and text representing the amount spent so far, or the word \u201cbuy\u201d in the language of the subscriber. Alternatively, or in addition, a graphical object containing the word \u2018buy\u2019 in the subscriber's language, could appear whenever the \u2018buy\u2019 icon is selected, and provide a branch for any sub-chains to \u2018hang off\u2019.","The \u2018buy\u2019 icon in the above example might be placed next to an icon which, when clicked, views the list of purchases made so far, and another icon which, when clicked, sets delivery options for the products just bought, so as to provide a logical sequence of icons in the chain which the user can navigate. When the \u2018buy\u2019 icon is selected, a sub-chain could appear with various subsidiary options, which might include different credit plans in the case of more expensive items. Any text information required from the user, such as a street address for delivery, could be entered with the virtual keyboard.","In an electronic programme guide, similar methods could be employed, for interactively browsing and displaying different channels, themes and times and dates. Further customisation might be possible for re-arranging the graphic options in the chain according to the user's preferences; in the case of a chain of channels, the user's preferred channels could be grouped at the head of the chain. Such a preference could be indicated by the user, or deduced by the programme.","Other applications for the methods described above include on-line catalogues, news and weather services on demand, games, and general administration of the set-top box (managing its configuration, etc.). In the case of games, the head\/tail flip-flop effect could be used to provide in-game animations without necessarily requiring additional methods to be written, and the virtual keyboard could be used as an alternative form of controller for more advanced types of game.","It should also be appreciated that all methods of interaction using a remote control, as described herein, may be substituted or supplemented by the use of a mouse (or other directional controller, such as a rollerball or joystick) and\/or keyboard (or other device having a plurality of keys), either by simulating the buttons of a remote control (for example using the numbers 0\u20139; the arrow keys, and the return key on a keyboard) or directly (for example using the mouse to click on buttons, and the keyboard to enter text directly instead of using the virtual keyboard).","The Virtual Keyboard described above may be implemented on any device having a plurality of keys, such as a games machine or a mobile telephone, for example. In the latter case, the virtual keyboard could be displayed substantially as described on the screen of the telephone (on phones with a sufficiently large display), or in a compressed form (on phone with smaller displays). Such compression of the virtual keyboard might entail showing only one number block of characters at a time, preferably with a suggestion of the characters or types of characters which might be accessed by pressing the left, right, up and\/or down keys (or their equivalents, for example in the case of roller-type directional controllers). The compressed virtual keyboard may be used in other applications, particularly where there is little space available to display the keyboard.","The term \u2018check box\u2019 may refer to a graphical object of any shape, for example circular, which is able to display different states, preferably two states corresponding to \u2018checked\u2019 and \u2018unchecked\u2019, but possibly more than two states, and which may alter its state in a consistent fashion when clicked or selected by the user. The \u2018checked\u2019 state may be indicated by a tick, cross or other embellishment on the box.","For ease of reference, the terms below used herein have the following preferred meanings:\u2014","HTML: HyperText Markup Language, a language describing the documents which are interchanged on the Internet. The document may include references to sites, formatting information, sound and pictures, etc.","HTTP: HyperText Transport Protocol, a protocol for communicating between Internet servers holding HTML documents and a navigation application, which displays the HTML documents.","MPEG-2: Motion Picture Expert Group, a method of coding animated images and sound in realtime.","PPP: Point-to-Point Protocol, a distance access communications protocol allowing two computers to be networked via a modem.","PROXY SERVER: An application located on the server which allows secure Internet connections, and which also buffers HTTP and FTP requests.","SESSION: An instance of a type of connection or of an application in memory at a given point in time.","URL: Uniform Resource Locator, an address used to locate a file or resources on the Internet. A link to a site designates the address of the resource contained in the web page.","WWW: World Wide Web, Internet network using local or remote documents. A web document is a web page, and the links in the page allow navigation between different pages and between different subjects, regardless of whether situated on a local or remote network.","GUI: Graphical User Interface.","WGT: Widget Toolkit.","It will be understood that the present invention has been described above purely by way of example, and modifications of detail can be made within the scope of the invention.","Each feature disclosed in the description, and (where appropriate) the claims and drawings may be provided independently or in any appropriate combination.","In any or all of the aforementioned, certain features of the present invention have been implemented using computer software. However, it will of course be clear to the skilled man that any of these features may be implemented using hardware or a combination of hardware and software. Furthermore, it will be readily understood that the functions performed by the hardware, the computer software, and such like are performed on or using electrical and like signals.","Features which relate to the storage of information may be implemented by suitable memory locations or stores. Features which relate to the processing of information may be implemented by a suitable processor or control means, either in software or in hardware or in a combination of the two.","In any or all of the aforementioned, the invention may be embodied in any, some or all of the following forms: it may be embodied in a method of operating a computer system; it may be embodied in the computer system itself; it may be embodied in a computer system when programmed with or adapted or arranged to execute the method of operating that system; and\/or it may be embodied in a computer-readable storage medium having a program recorded thereon which is adapted to operate according to the method of operating the system.","As used herein throughout the term \u201ccomputer system\u201d may be interchanged for \u201ccomputer\u201d, \u201csystem\u201d, \u201cequipment\u201d, \u201capparatus\u201d, \u201cmachine\u201d and like terms.","Reference numerals appearing in the claims are by way of illustration only and shall have no limiting effect on the scope of the claims.","The Applicant hereby declares, for the avoidance of doubt that he claims copyright in the attached drawings."],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"p":["Preferred features of the present invention will now be described, purely by way of example, with reference to the accompanying drawings, in which:",{"@attributes":{"id":"p-0221","num":"0233"},"figref":"FIG. 1","i":"a "},{"@attributes":{"id":"p-0222","num":"0234"},"figref":"FIG. 1","i":"b "},{"@attributes":{"id":"p-0223","num":"0235"},"figref":"FIG. 2","i":"a "},{"@attributes":{"id":"p-0224","num":"0236"},"figref":"FIG. 2","i":"b "},{"@attributes":{"id":"p-0225","num":"0237"},"figref":"FIG. 2","i":"c "},{"@attributes":{"id":"p-0226","num":"0238"},"figref":"FIG. 3"},{"@attributes":{"id":"p-0227","num":"0239"},"figref":"FIG. 4"},{"@attributes":{"id":"p-0228","num":"0240"},"figref":["FIG. 5","FIG. 6"],"i":"a "},{"@attributes":{"id":"p-0229","num":"0241"},"figref":"FIG. 6","i":"b "},{"@attributes":{"id":"p-0230","num":"0242"},"figref":"FIG. 7"},{"@attributes":{"id":"p-0231","num":"0243"},"figref":"FIG. 8"},{"@attributes":{"id":"p-0232","num":"0244"},"figref":"FIG. 9"},{"@attributes":{"id":"p-0233","num":"0245"},"figref":"FIG. 10"},{"@attributes":{"id":"p-0234","num":"0246"},"figref":"FIG. 11"},{"@attributes":{"id":"p-0235","num":"0247"},"figref":"FIG. 12"},{"@attributes":{"id":"p-0236","num":"0248"},"figref":"FIG. 13"},{"@attributes":{"id":"p-0237","num":"0249"},"figref":"FIG. 14"},{"@attributes":{"id":"p-0238","num":"0250"},"figref":"FIG. 15"},{"@attributes":{"id":"p-0239","num":"0251"},"figref":"FIG. 16"},{"@attributes":{"id":"p-0240","num":"0252"},"figref":"FIG. 17"},{"@attributes":{"id":"p-0241","num":"0253"},"figref":"FIG. 18"},{"@attributes":{"id":"p-0242","num":"0254"},"figref":"FIG. 19"},{"@attributes":{"id":"p-0243","num":"0255"},"figref":"FIG. 20"},{"@attributes":{"id":"p-0244","num":"0256"},"figref":"FIG. 21"},{"@attributes":{"id":"p-0245","num":"0257"},"figref":"FIG. 22"},{"@attributes":{"id":"p-0246","num":"0258"},"figref":"FIG. 23"},{"@attributes":{"id":"p-0247","num":"0259"},"figref":"FIG. 24"},{"@attributes":{"id":"p-0248","num":"0260"},"figref":"FIG. 25"},{"@attributes":{"id":"p-0249","num":"0261"},"figref":"FIG. 26"},{"@attributes":{"id":"p-0250","num":"0262"},"figref":"FIG. 27"},{"@attributes":{"id":"p-0251","num":"0263"},"figref":"FIG. 28"},{"@attributes":{"id":"p-0252","num":"0264"},"figref":"FIG. 29"},{"@attributes":{"id":"p-0253","num":"0265"},"figref":"FIG. 30"},{"@attributes":{"id":"p-0254","num":"0266"},"figref":"FIG. 31"},{"@attributes":{"id":"p-0255","num":"0267"},"figref":"FIG. 32"},{"@attributes":{"id":"p-0256","num":"0268"},"figref":"FIG. 33"},{"@attributes":{"id":"p-0257","num":"0269"},"figref":"FIG. 34"},{"@attributes":{"id":"p-0258","num":"0270"},"figref":"FIG. 35"},{"@attributes":{"id":"p-0259","num":"0271"},"figref":"FIG. 36"},{"@attributes":{"id":"p-0260","num":"0272"},"figref":"FIG. 37"},{"@attributes":{"id":"p-0261","num":"0273"},"figref":"FIG. 38"},{"@attributes":{"id":"p-0262","num":"0274"},"figref":"FIG. 39"},{"@attributes":{"id":"p-0263","num":"0275"},"figref":"FIG. 40"},{"@attributes":{"id":"p-0264","num":"0276"},"figref":"FIG. 41"},{"@attributes":{"id":"p-0265","num":"0277"},"figref":"FIG. 42"},{"@attributes":{"id":"p-0266","num":"0278"},"figref":"FIG. 43"},{"@attributes":{"id":"p-0267","num":"0279"},"figref":"FIG. 44"},{"@attributes":{"id":"p-0268","num":"0280"},"figref":"FIG. 45"}]},"DETDESC":[{},{}],"heading":"OVERVIEW OF A DIGITAL TELEVISION SYSTEM"}
