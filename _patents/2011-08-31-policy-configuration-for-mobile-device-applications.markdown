---
title: Policy configuration for mobile device applications
abstract: Methods, articles of manufacture, and apparatus to perform policy configuration for mobile device applications are disclosed. A disclosed example method includes determining whether a digital certificate associated with a application executable on a mobile device has been signed by a first trusted certificate authority, the first trusted certificate authority being included in a list of trusted certificate authorities hard-coded in the mobile device, and when the digital certificate is determined to have been signed by the first trusted certificate authority, configuring the application for execution on the mobile device based on an access privilege indicating a physical interface of the mobile device the application is permitted to access, and execution configuration information associated with the application.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08898459&OS=08898459&RS=08898459
owner: AT&T Intellectual Property I, L.P.
number: 08898459
owner_city: Atlanta
owner_country: US
publication_date: 20110831
---

{"@attributes":{"id":"description"},"BRFSUM":[{},{}],"heading":["FIELD OF THE DISCLOSURE","BACKGROUND","DETAILED DESCRIPTION"],"p":["This disclosure relates generally to mobile devices and, more particularly, to policy configuration for mobile device applications.","Mobile device security is becoming increasingly important with increases in the spread of malicious applications or other fraudulent code (e.g., malware) targeted towards mobile devices. Many mobile devices also include functionality that enables the mobile devices to connect to more than one type of wireless network. For example, a mobile device with cellular functionality and WiFi functionality may connect to a cellular wireless network and\/or a WiFi wireless network. In this example, some applications on the mobile device (e.g., voice communications, global positioning system (GPS)-related applications, service provider-related functions) may connect to the cellular network while other applications (e.g., web browsing, text messaging, media streaming) may connect to the WiFi network. In at least some prior mobile devices, the applications on the mobile device may access a wireless network without a user knowing which wireless network the applications are utilizing. Moreover, in at least some prior mobile devices, applications may have uncontrolled access to the network and\/or other physical interfaces of the mobile device.","Example methods, articles of manufacture, and apparatus to perform policy configuration for mobile device applications are disclosed. A disclosed example method includes determining (e.g., using a processor) whether a digital certificate associated with an application executable on a mobile device has been signed by a first trusted certificate authority. For example, the first trusted certificate authority can be included in a list of trusted certificate authorities hard-coded in the mobile device. When the digital certificate is determined to have been signed by the first trusted certificate authority, the example method also includes configuring the application for execution on the mobile device based on an access privilege indicating a physical interface of the mobile device the application is permitted to access, and execution configuration information associated with the application. The access privilege can indicate, for example, whether the application is permitted to access a network interface of the mobile device, whether the application is permitted to access a microphone interface of the mobile device, and whether the application is permitted to access a camera interface of the mobile device. The execution configuration information can include, for example, data to at least one or activate a portion of the application, deactivate a portion of the application or change a behavior of the application. In some examples, the access privilege and the execution configuration information associated with the application are hard-coded in the mobile device. In some examples, the access privilege and the execution configuration information associated with the application are updateable via a network in communication with the mobile device if, for example, the access privilege and the execution configuration information are signed by the first trusted certificate authority or another trusted certificate authority included in the list of trusted certificate authorities.","A disclosed example mobile device includes a set of physical interfaces, and an example policy engine (e.g., an example app policy engine or application policy engine) to determine from a digital certificate a set of access privileges that indicate which of the set of physical interfaces of the mobile device an application executing on a mobile device is permitted to access. The policy engine is configured with a list of trusted certificate authorities authorized to sign digital certificates associated with applications executing on the mobile device. The mobile device further includes a removable memory device, such as a subscriber identity module card, to store a first trusted certificate authority for inclusion in the list of trusted certificate authorities.","Mobile device security is becoming important as software worms, viruses, and other malicious code are designed to target mobile devices. Mobile devices include, for example, any laptop, smartphone, cellular phone, computing pad, personal digital assistant, tablet personal computer, personal communicator, etc. Because many mobile devices have relatively small memories, these mobile devices typically do not include anti-malware protection. However, many mobile devices are primarily used to access data and\/or communications from servers via a wireless network. In some instances, malicious code may be embedded within data, which then penetrates an operating system of a mobile device. In many instances, malicious code can expose sensitive information stored on a mobile device. In other instances, malicious code can use the mobile device as a launching pad to propagate to other mobile devices. In yet other instances, the malicious code may use the mobile device as a host to perform denial of service attacks on web servers and\/or wireless networks.","To prevent and\/or limit a mobile device from receiving malicious code, some mobile devices include a VPN client that encrypts, keys, and\/or authenticates data and\/or communication transmissions through a wireless network. In many instances, a mobile device uses a VPN client to create a secure connection to a host server located in a private enterprise network or a carrier network (e.g., a wireless network). The VPN client establishes a relatively secure virtual tunnel and\/or virtual circuit from a mobile device to a host server and\/or network.","However, some issues with existing VPN clients can expose mobile devices to malicious code. In some instances, malicious code can bypass a VPN client on a mobile device. For example, some mobile devices are configured to connect to more than one wireless network. These mobile devices grant applications access to connect (e.g., communicatively couple) to the wireless networks via corresponding wireless hardware interfaces. In many of these instances, the mobile devices may enable any application to connect to a wireless network without prompting a user for permission. In these instances, a malicious application may bypass a VPN connecting to a first wireless network and connect to a second wireless network instead. In this way, the malicious application can bypass the VPN and any corresponding firewalls on the mobile device by, for example, accessing the second wireless network at the link layer of the mobile device (e.g., an application programming interface (API) for processing network traffic).","In other instances, user installed applications may not be configured to access a wireless network through a VPN client. A malicious application may use the connections of these applications to bypass the VPN. Additionally, some mobile device users may disable and\/or uninstall VPN clients, thereby exposing the mobile devices to potentially malicious code. In yet other instances, malicious applications and\/or code can utilize tools and\/or components that are used by VPN clients to protect a mobile device. The malicious applications can utilize the tools and\/or components to connect to a wireless network in parallel with the VPN client, thereby bypassing the security of the VPN client.","Example methods, apparatus, and articles of manufacture described herein integrate an app (e.g., application) policy engine with a kernel of an operating system of a mobile device to control which application on the mobile device can be executed and\/or to control which of the applications are authorized to access device interfaces and\/or network interfaces of the mobile device. These example methods, apparatus, and articles of manufacture described herein interact with an application execution manager of an operating system, a certificate validation processor, and\/or a mandatory access control (MAC) module to enforce execution of device and\/or network interface access policies. Thus, the example methods, apparatus, and articles of manufacture described herein block applications and\/or services that are not authorized and\/or certified from accessing security sensitive interfaces including, for example, a wireless network, a VPN, and\/or host service platform.","Example methods, apparatus, and articles of manufacture described herein restrict application execution and\/or restrict application access to device and\/or network interfaces by assigning a process identifier to each application and\/or service on a mobile device. These example methods, apparatus, and articles of manufacture use the process identifiers to determine if each of the applications is authorized to be executed on the mobile device and\/or to access requested device interfaces and\/or network interfaces. The example methods, apparatus, and articles of manufacture described herein can determine which applications and\/or services are authorized to be executed on the device by checking a digital application certificate provided by a certificate authority.","A certificate authority may provide a digital certificate for each application or, alternatively, provide a digital certificate for more than one of the authorized applications on a mobile device. A list of certificate authorities that are recognized by a mobile device as valid authorities to sign applications may be preconfigured and\/or hard coded into an example app policy engine (also referred to as an application policy engine). Alternatively, the list of certificate authorities may be provided through a network via a local memory module of the mobile device such as, for example, a subscriber identity module (SIM) card. In examples where a digital certificate is assigned to each application, the example methods, apparatus and articles of manufacture described herein can use the digital certificate to identify that the corresponding application is authorized to be executed on the mobile device. The digital certificate may also indicate which device interfaces and\/or network interfaces of the mobile device the application is authorized to access.","An application, service, and\/or function on a mobile device includes any software and\/or firmware routine and\/or algorithm that performs a function within a mobile device. An application and\/or a service includes, for example, a messaging application, an e-mail service, a social network application, a gaming application, a web browsing application, a word processing application, a database management application, etc. In some disclosed examples, when an authorized application is executed on a mobile device, the app policy engine configures the example MAC module to grant only the application access to device interface(s) and\/or network interface(s) on the mobile device. In this manner, the example app policy engine manages which applications with process identifiers are granted permission to interfaces of the mobile device. The example MAC module may then enable authorized applications and\/or services to access the device and\/or network interfaces and block and\/or restrict unauthorized applications from accessing those interfaces.","A MAC module provides access control between an operating system layer and device interfaces (e.g., an interface to a camera, a microphone, a memory card, etc.) and\/or network interfaces (e.g., network interface cards (NICs)) of a mobile device. Network interfaces may be communicatively coupled to a network and\/or server. By providing access control, a MAC module determines which applications and\/or services may transmit and\/or receive data from networks and\/or servers via the network interfaces. By providing a MAC module with a list of authorized applications for a network that identifies which device and\/or network interfaces the applications are authorized to access, example methods, apparatus, and articles of manufacture described herein can create a controlled environment for application execution and\/or application access to device and\/or network interfaces, thereby preventing unauthorized applications from being executed on a mobile device and\/or from applications improperly accessing the device and\/or network interfaces. In this manner, example methods, apparatus, and articles of manufacture described herein ensure that application execution and\/or device and\/or network interface access privileges correspond to specified polices of a certificate authority.","Example methods, apparatus, and articles of manufacture described herein also enable applications and\/or services that are authorized and\/or certified (e.g., signed) in a digital certificate by a host service platform (e.g., a certificate authority) to access physical network interfaces of a network, thereby blocking malicious and\/or unauthorized applications from executing on a mobile device. Further, some example methods, apparatus, and articles of manufacture described herein permit exclusive privileges to be granted to a specific application (e.g., a VPN client). By granting relative higher privileges to, for example, a VPN client, other applications with relatively lower privileges have to abide by the privileges granted to the VPN client. For example, a VPN client may have exclusive authorized access to a wireless network interface. Other certified and\/or authorized applications on the mobile device with relatively lower privileges are forced to go through the VPN to obtain access to the wireless network.","In the interest of brevity and clarity, throughout the following disclosure, reference will be made to an example wireless environment  of . However, the methods, articles of manufacture, and apparatus described herein to control mobile device application access to wireless networks are applicable to other types of networks constructed using other network technologies, topologies and\/or protocols.",{"@attributes":{"id":"p-0028","num":"0027"},"figref":["FIG. 1","FIG. 1","FIG. 1"],"b":["100","102","104","102","102","102"]},"In the illustrated example, the mobile device  is capable of communicatively coupling to a cellular network  and a WiFi network . The example networks  and  include any number and\/or types of routers, switches, servers, etc. to enable communications (e.g., packet-based data) between the mobile device  and a packet switched network (e.g., the Internet). Further, the networks  and  may utilize and\/or conform to any routing and\/or communication protocols. For example, the cellular network  may include components, network elements, and\/or controllers that conform to the 3Generation Partnership Project (3GPP) Long Term Evolution (LTE) wireless communication standard, the General Packet Radio Service (GPRS) for second generation (2G) protocol, the Wideband-Code Division Multiple Access (W-CDMA)-based third generation (3G) protocol, the Universal Mobile Telecommunication System (UMTS) protocol, and\/or the Global System for Mobile Communications (GSM) protocol. In other examples, the wireless environment  may include other wireless protocols compatible with the mobile device  including, for example, Bluetooth IP and\/or IEEE 802.11 wireless local area network (WLAN).","In the example of , the example mobile device  is within a coverage area  of the cellular network  and a coverage area  of the WiFi network . By being within the coverage areas  and , applications within the mobile device  may communicatively couple to either of the wireless networks  and . To manage which of the wireless networks  and  the applications may access, the example mobile device  includes the app policy engine .","A prior mobile device without the app policy engine  may establish a VPN link to a VPN within, for example, the cellular network . In such a prior mobile device, applications that are configured to connect to the VPN on the mobile device may transfer data with the VPN. However, other applications (including malicious code) may bypass the VPN and access the WiFi network . By being able to bypass the VPN, applications may transfer data through the WiFi network  to known and\/or unknown destinations without a user of the mobile device  knowing of the connection to the WiFi network .","The example app policy engine  establishes a VPN tunnel within the mobile device  so that application access to the cellular network  is restricted at the device interface and\/or the network interface (e.g., NIC) level. By restricting application access to the hardware interface level (e.g., locking a physical interface of the mobile device ), a MAC module within the mobile device  can determine which applications are to be granted access to a VPN within the cellular network  and which applications are to be blocked and\/or not granted access to the VPN. In this manner, the example app policy engine  ensures that only authorized applications are able to connect to a network while preventing unauthorized applications from transmitting and\/or receiving data.",{"@attributes":{"id":"p-0033","num":"0032"},"figref":["FIG. 2","FIG. 1","FIG. 1"],"b":["102","104","202","202","204","206","01","03","102","102","202","202"]},"The application layer  includes software and\/or firmware routines, algorithms, and\/or programs that are configured to perform at least one predetermined function. In the illustrated example, the application layer  includes the applications APP -. In this example, APP  is a VPN client  and the applications APP - may include any type of software application.","The example VPN client  within the application layer  enables the applications APP - to securely communicatively couple to a VPN within, for example, the cellular network . Through the exchange of encrypted registration messages with a VPN, the example VPN client  establishes a virtual connection (e.g., a virtual circuit) through a public network (e.g., the wireless network ). The VPN client  uses this virtual connection to relatively securely transmit and receive data from servers, processors, and\/or computers within a private network of a host service platform connected to the VPN. In this manner, the applications APP - may transmit and\/or receive data securely with a VPN via the VPN client  and a MAC module .","In the example of , the mobile device  includes a user interface  for displaying the applications APP - including the VPN client . A user of the mobile device  may connect to a VPN by selecting the VPN client  (or an icon representing the VPN client ) displayed within the user interface . A user may execute the certified applications APP - to transmit and\/or receive data from a VPN by selecting the applications APP - (or an icon representing the applications APP -) displayed within the user interface .","To connect to a VPN, each of the applications APP - includes respective digital certificates - (e.g., an application, and\/or electronic certificate). The example digital certificates - certify that the certificates - belong to a user, organization, server, and\/or other entity. The digital certificates - may also be used to establish an encryption scheme and\/or security protocol with a VPN. The VPN client  connects to a VPN by transmitting the certificate  to a VPN authorization agent that grants access to a VPN. The VPN authorization agent verifies the credentials within the certificate  and provides the VPN client  access to a VPN. After establishing a connection to a VPN, the VPN client  encrypts data from the applications APP - to transmit to the VPN and decrypts data from the VPN for the applications APP -. In many instances, the digital certificates - are provided by a certificate authority and\/or a service administrator (e.g., such as an administrator of a VPN).","In the example of , the digital certificates - includes a list of device interfaces and\/or network interfaces that are authorized to be accessed by the applications APP -. In some examples, a service administrator or the like may only allow certain applications and\/or certain types of applications to access device and\/or network interfaces. For example, a service administrator may only allow certain applications that have trusted security properties, applications that are business appropriate, and\/or applications that are relevant to the purpose of a VPN. As an illustrative example, a service administrator may specify in the certificates  and  that the application APP  and the VPN client  are authorized to access a VPN via a network interface. Further, the service administrator may specify within the digital certificate  that the VPN client  is to have relatively greater privileges to access network interfaces and specify within the certificates  and  that the applications APP - are to have relatively fewer privileges to access network interfaces. The relatively fewer privileges may cause the applications APP - to go through the VPN client  to access the network interfaces.","In other examples, a user of the mobile device  may request from a service administrator that certain applications are to have access to a VPN. For example, a user may request to have a digital certificate (e.g., the digital certificate ) assigned to the application APP  by sending a request to a certificate authority. The service administrator and\/or a certificate authority may respond by providing the digital certificate  to reflect that the application APP  is authorized to access a VPN. Alternatively, the service administrator and\/or the certificate authority may assign a single digital certificate that specifies which of the applications APP - may be executed on the mobile device  and\/or specify which interfaces of the applications APP - may access.","The example operating system (OS) kernel layer  provides services to execute the applications APP - and the VPN client  within the application layer . For many hardware functions (e.g., input functions, output functions, memory allocation, and\/or wireless communication functions) of the mobile device , the OS kernel layer  functions as an interface so that the hardware functions are interpreted properly by the applications APP - and the VPN client . The example OS kernel layer  includes the app policy engine  for interfacing between the VPN client  and the MAC module .","The example OS kernel layer  may also bridge (e.g., interface) the application layer  with a hardware layer (not shown) for processing data from the applications APP -. The hardware level includes device interface(s) and network interface(s) of the mobile device . The example OS kernel layer  in the illustrated example manages data from the application layer  for transmission to the networks  and  via, for example NICs (e.g., wireless network cards). The example OS kernel layer  also propagates data received from the networks  and  to the appropriate applications APP -.","In addition to the MAC module , the example OS kernel layer  includes a network tunnel  and a network tap . Together, the example MAC module , the example network tunnel , and the example network tap  operate at the OS kernel level  to provide security prior to data reaching the applications APP - within the application layer . While the example OS kernel layer  includes the MAC module , the network tunnel , and the network tap , the OS kernel layer  may include additional or fewer components to establish and\/or manage VPN security.","The example network tunnel (TUN)  creates a VPN tunnel through the device OS platform  and\/or the mobile device  by encapsulating data within a packet data payload conforming to a protocol of a packet switched network. In this manner, the network tunnel  enables communications to propagate securely from, for example, the VPN client  to a destination via a VPN within, for example, the cellular network . The example network tunnel  may create a virtual circuit and\/or a VPN tunnel upon the VPN client  receiving permission to connect to a VPN.","The example network tap  monitors data propagating within a VPN tunnel to detect a network intrusion from an unauthorized third party. The example network tap  may also be used for Voice over Internet Protocol (VoIP) recording to monitor a Quality of Service (QoS) for a VPN connection. The example network tap  may operate in conjunction with the example network tunnel  to provide relatively secure data communications through a VPN tunnel.","The example MAC module  of  provides access control to hardware interface(s) of the wireless device . Specifically, the example MAC module  provides access control for the applications APP - to connect to wireless NICs, which provide a wireless connection to, for example, the wireless networks  and . The example MAC module  may also determine which of the applications APP - maybe executed and\/or operated on the mobile device  by restricting unauthorized applications from access device interfaces of the mobile device . For example, the MAC module  may prevent unauthorized applications from accessing a microphone and enabling authorized telephony applications to access the microphone. In this example, the MAC module  prevents any unauthorized applications (e.g., malware) from secretly accessing the microphone and recording, for example, confidential conversations.","In the illustrated example of , the MAC module  includes an interface to an NIC configured to connect to the cellular network  and an interface to an NIC configured to connect to the WiFi network . For example, communications approved by the MAC module  for the cellular network  are routed through the appropriate cellular interface to the wireless NIC configured for the wireless network . In other examples, the MAC module  may include additional or fewer interfaces to other hardware interfaces of the wireless device .","In the example of , the app policy engine  configures the MAC module  to grant specific applications access to a VPN and\/or host service platform via one of the wireless networks  and . To grant certain applications access, an operating system within the OS layer  assigns a unique process identifier to each of the applications APP -. For example, the operating system assigns process identifier PID to the application APP  and assigns process identifier PID to the VPN client . The process identifiers PID- are numbers and\/or names assigned to the respective applications APP -. An operating system, the MAC module , and\/or the app policy engine  may use the process identifiers PID- to locate, identify, and\/or access the appropriate applications APP -. In some instances, the process identifiers PID- may be used in a function call to access the applications APP -.","The example app policy engine  uses the process identifiers PID- as a reference for the MAC module  to indicate which of the applications APP - are authorized to access a VPN. For example, after the process identifiers PID- are assigned to the respective applications APP -, the app policy engine  checks the digital certificates - to determine which of the applications APP - are authorized to access device and\/or network interfaces of the mobile device . The example app policy engine  sends an instruction to the MAC module  with the process identifiers of the applications APP - that are authorized to access a VPN. The example MAC module  stores the allowed process identifiers to later determine if an application requesting to access a VPN, a wireless network, and\/or a host service platform is authorized.","In some examples, the app policy engine  may provide the MAC module  with a list of authorized applications upon the mobile device  requesting to connect to a VPN. In other examples, the app policy engine  may detect that one of the applications APP - is attempting to transmit data to one of the wireless networks  and . In response to detecting the attempted transmission, the app policy engine  determines if the application APP  is authorized to access a network interface to transmit the data by checking the certificate  and sending an instruction to the MAC module  to allow the application APP  to access the wireless network  and\/or  if the application APP  is authorized. In these other examples, the app policy engine  provides the MAC module  application access permission as each of the applications APP - attempts to access a network. In yet other examples, the app policy engine  may provide a list of authorized process identifiers to the MAC module  periodically and\/or after the VPN client  receives updated and\/or new digital certificates.","In examples where the mobile device  includes more than one VPN client, the app policy engine  may identify for the MAC module  which of the applications APP - are authorized to access each of the VPNs via respective network interfaces. For example, the application APP  may be authorized to access a first VPN via the cellular network  and the application APP  may be authorized to access a second VPN via the WiFi network . In this example, the app policy engine  instructs the MAC module  to allow the application APP  to access an NIC for the cellular network  and instructs the MAC module  to allow the application APP  to access an NIC for the WiFi network . Thus, the app policy engine  prevents the MAC module  from allowing the application APP  to access the VPN on the WiFi network  and prevents the MAC module  from allowing the application APP  from accessing the VPN on the cellular network . Further, in examples where more than one VPN client may connect to respective VPNs through, for example, the cellular network , the app policy engine  ensures that the appropriate applications connect to the respective VPNs through the appropriate VPN client by having the MAC module  restrict applications from accessing a VPN on the cellular network  that are not authorized to access the VPN.",{"@attributes":{"id":"p-0051","num":"0050"},"figref":["FIG. 3","FIGS. 1-2","FIG. 2"],"b":["104","104","206","104","202","102","212","210","104","210","212","104"]},"The example app policy engine  includes application execution unit  to interface within an operating system of the mobile device . The example application execution unit  also assigns process identifiers (e.g., process IDs) to each of the applications (e.g., the applications APP -) within the mobile device . The example MAC module  uses the process identifiers to grant and\/or restrict application access to device and\/or network interfaces of the mobile device .","Further, the application execution unit  may determine which applications may be executed on the mobile device. For example, the app policy engine  may receive an indication that an application is attempting to operate and\/or initialize. The application execution unit  determines if the application is associated with a digital certificate and that indicates the application may be executed. If the digital certificate indicates the application may be executed, the example application execution unit  enables the application to operate (e.g., execute) on the mobile device .","To identify privileges of applications, the example app policy engine  includes a certificate processor . The example certificate processor  requests to access, for example, the certificate  stored on the mobile device . The certificate processor  reads the certificate  to determine if the associated application APP  is authorized to be executed, access device and\/or network interfaces, access a VPN, access a wireless network, and\/or access a host service platform. In some instances the certificate processor  identifies applications by a name included within a digital certificate and references the name to determine the corresponding application within the application layer . In other instances, the certificate processor  examines a digital certificate for any other identifying information (e.g., file names, application metadata, application identifiers, etc.) to locate a corresponding application with the application layer .","After determining which applications are authorized to be executed, access device and\/or network interfaces, access a VPN, access a wireless network, and\/or access a host service platform, the example certificate processor  stores an identifier of the authorized applications to a database . The example certificate processor  may create a separate group of authorized applications within the database  for each device and\/or network interface. Additionally, the certificate processor  may group authorized applications within the database  based on a relatively amount of granted privileges.","The certificate processor  may also query the application execution unit  for process identifiers assigned to the applications and store the respective process identifiers with the identifiers of the authorized application to the database . In this manner, the certificate processor  maintains a group of applications that are authorized to be executed, access device and\/or network interfaces, access a VPN, access a wireless network, and\/or access a host service platform. The database  may be implemented by Electronically Erasable Programmable Read-Only Memory (EEPROM), Random Access Memory (RAM), Read-Only Memory (ROM), and\/or any other type of memory.","In some examples, the certificate processor  may identify applications that are unauthorized to be executed, access device and\/or network interfaces, access a VPN, access a wireless network, and\/or access a host service platform. In these examples, the certificate processor  stores the process identifies of these applications to the database . Further, the certificate processor  may periodically query the VPN client  (and\/or a SIM card of the mobile device ) to determine if new and\/or updated versions of digital certificates are available. In other examples, the VPN client  may notify the certificate processor  that new and\/or modified certificates have been received. In instances where digital certificate have been updated and\/or replaced, the certificate processor  updates the database  with identifiers of authorized applications.","To provide the MAC module  of  with instructions specifying authorized applications, the example app policy engine  includes a policy processor . The example policy processor  of  accesses the database  to identify privileges of applications. The example policy processor  then configures the MAC module  by providing the list of process identifiers that correspond to the authorized applications.","The example policy processor  of the illustrated example may provide the MAC module  with a list of authorized applications periodically, upon a request to connect to a wireless network, upon a request to execute, upon a request to connect to a VPN, and\/or host service platform, upon an application accessing a wireless network, upon powering of the mobile device , upon updating of digital certificate(s), and\/or upon a request from the MAC module . In examples where the MAC module  does not include a list of authorized applications, the policy processor  responds to queries from the MAC module  asking an application is authorized to be executed and\/or access device and\/or network interfaces of the mobile device . In these examples, the policy processor  determines which applications are authorized by accessing the database  and searching for privileges associated with process identifiers of the applications.","The example policy processor  of  communicatively couples the app policy engine  to the MAC module . The example policy processor  receives instructions including process identifiers corresponding to authorized applications and transmits the instructions to the MAC module . Further, the policy processor  may detect that a VPN tunnel has been established via, for example, the VPN client . Alternatively, the MAC module  may inform the policy processor  that a VPN tunnel has been created. In response to the policy processor  receiving an indication of a VPN tunnel, the policy processor  may transmit instructions to the MAC module  providing a list of authorized applications.","In some examples, the VPN client  creates a VPN tunnel though the device OS platform  to device and\/or network interfaces of the mobile device  upon detecting and\/or receiving an indication that a user has selected to connect to a VPN and\/or host service platform. To create a VPN tunnel, the VPN client  may instruct the network tunnel  to establish a VPN tunnel from the VPN client  to a wireless hardware interface of the mobile device  via the MAC module . The VPN client  may also instruct the access controller  to send instructions to the MAC module  to identify authorized applications that can transmit and\/or receive communications via the VPN tunnel.","Example techniques to configure the app policy engine  of the example mobile device  are shown in . As described above, digital certificates - (and\/or digital application signatures) associated with the applications APP - are processed by the app policy engine  to determine whether the applications APP - are authorized to execute on the mobile device . In some examples, the digital certificates - also specify application configuration information indicating which device interfaces and\/or network interfaces (or, more generally, which physical interfaces) of the mobile device  the applications APP - are authorized to access. In some examples, the digital certificates - can additionally or alternatively specify other application configuration information, such as execution configuration information, specifying how the app policy engine  is to configure the application for execution on the mobile device . For example, a digital certificate (and\/or digital application signature), such as the digital certificate , associated with a particular application, such as the application APP , can specify one or more execution privileges indicating whether the application APP  is permitted to be executed on the mobile device . In some examples, the digital certificate  can also specify one or more access privileges indicating one or more physical interfaces of the mobile device  the application APP  is permitted to access. Examples of access privileges include, but are not limited to, one or more privileges indicating whether the application APP  is permitted to access one or more NICs of the mobile device , whether the application APP  is permitted to access a microphone interface for a microphone of the mobile device , whether the application APP  is permitted to access a camera interface for a camera of the mobile device , etc., or any combination thereof. Additionally or alternatively, in some example the digital certificate  can specify execution configuration information, such as one or more configuration flags, parameters, etc., or any other data for use by the app policy engine  when configuring the application for execution on the mobile device  (e.g., to activate\/deactivate portions of the application, modify application behavior, etc., based on network capabilities, subscriber subscription plans, device type\/capabilities, etc.).","As described above, the app policy engine  is configured with a list of trusted certificate authorities identifying (e.g., also via certificates) the one or more trusted certificate authorities recognized by the app policy engine  as valid authorities permitted to sign the digital certificates of applications executing on the mobile device . In other words, the app policy engine  recognizes digital certificates (and\/or digital application signatures) from only the one or more trusted certificate authorities included in the configured list of trusted certificate authorities. As such, applications having digital certificates (and\/or digital application signatures) signed by or otherwise associated with certificate authorities other than those included in the configured list of trusted certificate authorities are determined by the app policy engine  to be untrusted. In some examples, untrusted applications are prevented from executing on the mobile device  and\/or from accessing physical interfaces of the mobile device .","In some examples, the app policy engine  is also configured to grant different authority privileges to different trusted certificate authorities included in the list of trusted certificate authorities. For example all, or a first subset, of the trusted certificate authorities included in the list of list of trusted certificate authorities may be permitted to specify execution privileges indicating whether respective applications are permitted to be executed on the mobile device . However, in some examples, only a second subset of the trusted certificate authorities included in the list of trusted certificate authorities may be permitted to specify access privileges indicating whether respective applications are permitted to access physical interfaces of the mobile device . Thus, for example, both a first trusted certificate authority and a second trusted certificate authority in the list of trusted certificate authorities may be permitted to specify execution privileges for applications, whereas the first trusted certificate authority, but not the second trusted certificate authority, may be permitted to specify access privileges for applications. In the following, the list of trusted certificate authorities and associated certificates identifying the trusted certificate authorities, the different authority privileges specified for different trusted certificate authorities or different groups of trusted certificate authorities, the application configuration information for one or more application executable on the mobile device , and any other configuration information used to configure the app policy engine  is referred to as the policy configuration for the app policy engine .","The policy configuration used to configure the app policy engine  to control application execution and\/or access privileges can improve the security of the mobile device  by, for example, preventing malware and\/or other untrusted applications from executing on the mobile device  and\/or accessing the physical interfaces of the mobile device . Additionally or alternatively, the policy configuration used to configure the app policy engine  can implement network carrier policies. For example, application execution and\/or access privileges can limit use of high-bandwidth applications to the WiFi network  and prohibit access to the cellular network .","To configure the app policy engine , the policy configuration could be provided to the mobile device  over one or more networks, such as one or more of the networks  and\/or . However, policy configuration over a network can have drawbacks. For example, spoofing and\/or other malicious attacks over a network may result in untrusted certificate authorities and\/or incorrect authority privileges being included in the policy configuration of the app policy engine . The example techniques illustrated in  can overcome these limitations, in at least example scenarios.",{"@attributes":{"id":"p-0067","num":"0066"},"figref":["FIG. 4","FIG. 4","FIG. 2","FIGS. 2 and 4","FIG. 2","FIG. 4"],"b":["400","104","102"]},"In the example of , policy configuration  for the app policy engine  is hard-coded into the app policy engine , which is embedded in the OS kernel . For example, the policy configuration  can be fixed in read-only memory (ROM), and\/or included in program (e.g., machine readable) instructions and\/or hardware implementing the app policy engine . Because the policy configuration  is hard-coded in the app policy engine  and, by extension, in the OS kernel , the policy configuration  cannot be changed unless the OS kernel  is changed (e.g., by upgrading or downgrading the OS of the mobile device ). As such, the threat of malicious modification of the policy configuration  and the resulting fraudulent configuration of the app policy engine  is greatly diminished, if not eliminated, by the example policy configuration technique  of . However, the policy configuration technique  is less flexible than the other example techniques described below because the policy configuration  is hard-coded in the app policy engine , although the policy configuration  can be updated by upgrading\/downgrading the OS kernel . For example, under the policy configuration technique , the app policy engine  can use the list of trusted certificate authorities included in the hard-coded policy configuration  to authenticate digital certificate(s) associated with application(s) executable on the mobile device , thereby determining whether the application(s) are permitted to be executed on the mobile device. However, other application configuration information, such as hardware interface access privilege(s) and\/or other execution configuration information, is included in the hard-coded policy configuration , which may prevent changes to the configuration of the application(s) on the mobile device  except via upgrading\/downgrading the OS kernel .",{"@attributes":{"id":"p-0069","num":"0068"},"figref":["FIG. 5","FIG. 5","FIG. 2","FIGS. 2 and 5","FIG. 2","FIG. 5"],"b":["500","104","102"]},"In the example of , policy configuration  for the app policy engine  is initialized (e.g., hard-coded) with trusted source information  for one or more trusted certificate authorities (and associated digital certificates and\/or authority privileges, as appropriate). However, unlike the policy configuration technique , the policy configuration technique  enables the policy configuration , except for the hard-coded trusted source information , to be changed with updated configuration information  without upgrading\/downgrading the OS kernel  so long as the updated configuration information  is obtained from a trusted certificate authority included in the hard-coded trusted source information . In other words, the policy configuration  can be updated with new configuration information  (e.g., such as application configuration information, including the hardware interface access privilege(s) and\/or other execution configuration information, obtained via a network) so long as the new configuration information  is signed or otherwise authenticated by a trusted source hard-coded in the trusted source information . In this way, the trusted source can act as a clearing house for providing the new configuration information . For example, the list of trusted certificate authorities included in the trusted source information  may be initialized with a first trusted certificate authority. Then, the updated configuration information , which may include updated application digital certificates - specifying hardware interface access privilege(s) and\/or other execution configuration information, may be obtained from the first trusted certificate authority and stored in the policy configuration information  for use by the app policy engine .","Because the updated configuration information  is obtained from a trusted source that is hard-coded and, thus, cannot be changed in the mobile device , the technique  can protect against the threat of fraudulent configuration described above. Moreover, the technique  enables the policy configuration  to be changed over time without changing the OS kernel , rather than being fixed as in the case of the technique . However, although the technique  can be more flexible than the technique , the list of trusted sources included in the trusted source information  is hard-coded and, thus, changing this trusted source information (e.g., to support using the mobile device with a different network carrier) involves changing (e.g., upgrading or downgrading) the OS kernel .",{"@attributes":{"id":"p-0072","num":"0071"},"figref":["FIG. 6","FIG. 6","FIG. 2","FIGS. 2 and 6","FIG. 2","FIG. 6"],"b":["600","104","102"]},"In the example of , policy configuration  for the app policy engine , such as the list of trusted certificate authorities, and the associated digital certificates and\/or authority privileges, is obtained from a removable memory device . The removable memory device  can be, for example, a subscriber identity module (SIM) card, a universal integrated circuit card (UICC), a removable user identity module (R-UIM), a memory stick, a universal serial bus (USB) flash drive, etc., or any other type of removable memory device. In some examples, the removable memory device  is provided by (e.g., a specific to) a network carrier and identifies the one or more trusted certificate authorities permitted to authorize and authenticate mobile applications for that carrier. In such examples, the removable memory device  can also include one or more digital certificates for these one or more trusted certificate authorities, as well as any specific authority privileges for these one or more trusted certificate authorities. Additionally, the removable memory device  can include application configuration information, such as the hardware interface access privilege(s) and\/or other execution configuration information (e.g., in the form of updated application digital certificates - specifying hardware interface access privilege(s) and\/or other execution configuration information) via which the app policy engine  can configure application(s) for execution on the mobile device . Because new\/updated policy configurations  can be downloaded to the mobile device  using the same or a different removable memory device , the policy configuration technique  can be more flexible than the techniques  and  described above, while still protecting against the threat of fraudulent configuration described above. For example, the network carrier, enterprise, administrating organization, etc., responsible for configuring the list of trusted sources included in the policy configuration  can retain physical and\/or access control (e.g., via encryption) over the removable memory device  and, thus, can also retain control over the trusted source and other policy information stored in the removable memory device .","In some examples, one or more of the preceding examples for configuring the app policy engine  of the example mobile device , and\/or for using the app policy engine  to process the digital certificates - to determine whether the applications APP - are authorized to execute on the mobile device , can be used in conjunction with one or more techniques for authorizing access to applications available in a computing cloud. For example, the mobile device  may additionally or alternatively be configured to invoke application(s) in a computing cloud and receive and present (e.g., display) results from the invoked application(s). Like the digital certificates - associated with the applications APP -, the application(s) available in the cloud may be associated with one or more digital certificates residing in the cloud and\/or on the mobile device  specifying the access permission(s) for these application(s).","While an example app policy engine  and example techniques - for configuring the app policy engine  have been illustrated in , one or more of the servers, platforms, interfaces, data structures, elements, processes and\/or devices illustrated in  may be combined, divided, re-arranged, omitted, eliminated and\/or implemented in any way. Further, the example VPN client , the example MAC module , the example application execution unit , the example certificate processor , the example database , the example policy processor , the example policy configurations ,  and\/or , the removable memory device  and\/or more generally, the example app policy engine  may be implemented by hardware, software, firmware and\/or any combination of hardware, software and\/or firmware. Thus, for example, any of the example VPN client , the example MAC module , the example application execution unit , the example certificate processor , the example database , the example policy processor , the example policy configurations ,  and\/or , the removable memory device  and\/or more generally, the example app policy engine  could be implemented by one or more circuit(s), programmable processor(s), application specific integrated circuit(s) (ASIC(s)), programmable logic device(s) (PLD(s)) and\/or field programmable logic device(s) (FPLD(s)), etc.","When any apparatus claim of this patent is read to cover a purely software and\/or firmware implementation, at least one of the example VPN client , the example MAC module , the example application execution unit , the example certificate processor , the example database , the example policy processor , the example policy configurations ,  and\/or , the removable memory device  are hereby expressly defined to include a computer readable medium such as a memory, DVD, CD, etc. storing the software and\/or firmware. Further still, the example app policy engine  and\/or one or more of the example techniques - may include one or more elements, processes and\/or devices in addition to, or instead of, those illustrated in , and\/or may include more than one of any or all of the illustrated elements, processes and devices.",{"@attributes":{"id":"p-0077","num":"0076"},"figref":["FIGS. 7A-B","FIGS. 7A-B","FIGS. 7A-B","FIGS. 7A-B"],"b":["8","10","8","10","8","10","8","10"]},"Alternatively, some or all of the example processes of  and - may be implemented using any combination(s) of ASIC(s), PLD(s), FPLD(s), discrete logic, hardware, firmware, etc. Also, some or all of the example processes of  and - may be implemented manually or as any combination(s) of any of the foregoing techniques, for example, any combination of firmware, software, discrete logic and\/or hardware. Further, although the example processes of  and - are described with reference to the flow diagrams of  and -, other methods of implementing the processes of  and - may be employed. For example, the order of execution of the blocks may be changed, and\/or some of the blocks described may be changed, eliminated, sub-divided, or combined. Additionally, any or all of the example processes of  and - may be performed sequentially and\/or in parallel by, for example, separate processing threads, processors, devices, discrete logic, circuits, etc.","The example process  of  controls privileges of mobile device applications via the app policy engine  of . While the example process  provides access control for an application, the example process  may provide access control for multiple applications attempting to access device and\/or network interfaces on a mobile device. Further, the example process  may provide access control for application(s) attempting to access multiple wireless networks, VPNs, and\/or host service platforms. Further, while the example process  provides access control, the example process  may provide execution control for any of the applications on a mobile device.","The example process  of  begins by installing an application on a mobile device (e.g., the mobile device  of ) (block ). The example app policy engine  then processes a digital certificate associated with the application (block ). In many examples, the application includes the digital certificate, which specifies if the application is authorized to be executed on the mobile device  and\/or specifies which device and\/or network interfaces the application is authorized to access. In other examples, the digital certificate may be processed from, for example, a SIM card within the mobile device . In yet other example, the app policy engine  may request the digital certificate from a certificate authority and\/or a service provider prior to processing the certificate.","The example process  of  continues by the example application execution unit  and\/or an operating system assigning a process identifier to the application (block ). The example certificate processor  and\/or the policy processor  then determines if the application is identified within a digital certificate as an authorized application (block ). The example certificate processor  and\/or the policy processor  may determine a relative amount of privileges granted to the application and identity which device and\/or network interfaces the application is authorized to access. If privileges for the application are specified within the certificate, the example policy processor  next configures, for example, the MAC module  of  (block ). To configure the MAC module , the policy processor  sends to the MAC module  an instruction including the process identifier of the application to cause the MAC module  to authorize and\/or grant privileges to the application to execute and\/or access device and\/or network interfaces. The privileges may also specify that the application may access a VPN, a wireless network, and\/or a host service platform. Additionally, if the application is associated with a digital certificate, the example certificate processor  stores an identifier of the application and\/or the corresponding process identifier to the example database .","The example process  of the illustrated example continues by the VPN client  receiving a request from the mobile device  that the application is attempting to execute and\/or access a wireless network, VPN, and\/or host service platform (e.g., access a device and\/or network interface) (block ). The example MAC module  uses the process identifier of the application to determine that the application has permission and\/or is authorized to access the specified interface (block ). The example network tunnel  may also create a VPN tunnel from the VPN client  to an appropriate wireless hardware interface of the mobile device . The example MAC module  then enables the application to access the specified interface by allowing communications associated with the application to propagate through the VPN tunnel (block ). The example process  then terminates. In other examples, the example process  may return to detecting that an application is installed on the mobile device  (block ).","However, if the example certificate processor  and\/or the policy processor  identifies that the application is not included within a digital certificate as an authorized application (block ), the example process  of  continues by the policy processor  configuring the MAC module  to deny execution access and\/or interface access to the application (block ). In some examples, the policy processor  may instruct the MAC module  to deny access by providing the process identifier of the application to the MAC module  with an instruction to deny communications associated with the process identifier. In other examples, the policy processor  may deny access to an application by not sending the process identifier of the application to the MAC module .","The example process  of the illustrated example continues by the VPN client  receiving a request from the mobile device  that the application is attempting to execute and\/or access a device and\/or network interface (block ). The example MAC module  determines that the application is not authorized to execute and\/or access the specified interface (block ). The example MAC module  then denies the application access to connect to specified interface and\/or to execute (block ). The example process  then terminates. In other examples, the example process  may return to detecting that an application is installed on the mobile device  (block ).","The example process  of  can be used to implement the first example technique  of  for configuring the app policy engine . With reference to the preceding figures, the process  begins with the policy configuration , including the list of trusted certificate authorities, associated certificates identifying these trusted sources, and any authority privileges and other application configuration information (such as the hardware interface access privilege(s) and\/or other execution configuration information described above), being hardcoded in the app policy engine  (block ). Then, to control privileges of a particular application, such as the application APP , the app policy engine  retrieves a digital certificate, such as the digital certificate , or a digital application signature associated with the application APP  (block ). For example, the digital certificate  may be downloaded, copied, etc., to the mobile device  with the application APP  from a network, a computer, a docking\/download station, etc. The app policy engine  determines whether the digital certificate  (or digital application signature) is associated with a trusted certificate authority included in the list of trusted certificate authorities included in the policy configuration  (block ). If the digital certificate  (or digital application signature) is not associated with such a trusted certificate authority, the app policy engine  indicates that the application APP  is untrusted (block ), and the example process  ends.","However, if the digital certificate  (or digital application signature) is associated with such a trusted certificate authority, the app policy engine  determines the access (and\/or execution) privileges for the application APP  using the hard-coded configuration information (block ). Additionally, the app policy engine  configures the MAC module  to grant the application APP  access to the physical interfaces (e.g., network interfaces and\/or device interfaces) of the mobile device  in accordance with the access privileges and execution configuration information included in the hard-coded application configuration information associated with the application APP  (block ). The example process  then ends.","The example process  of  can be used to implement the second example technique  of  for configuring the app policy engine . With reference to the preceding figures, the process  begins with the policy configuration  for the app policy engine  being initialized (e.g., hard-coded) with the configuration information  containing one or more trusted certificate authorities (and associated digital certificates and\/or authority privileges, as appropriate) (block ). The policy configuration  is then updated with updated configuration information  from one or more of the trusted sources included in the initial configuration information  (block ). The updated configuration information  can include, for example, application digital certificates - specifying hardware interface access privilege(s) and\/or other execution configuration information for use by the app policy engine  for configuring the application(s) that are executable on the mobile device , as described above.","Then, to control privileges of a particular application, such as the application APP , the app policy engine  retrieves a digital certificate, such as the digital certificate , or a digital application signature associated with the application APP  (block ). For example, the digital certificate  may be downloaded, copied, etc., to the mobile device  with the application APP  from a network, a computer, a docking\/download station, etc., or may be included in the updated configuration information . The app policy engine  determines whether the digital certificate  (or digital application signature) is associated with a trusted certificate authority included in the list of trusted certificate authorities included in the policy configuration  (block ). If the digital certificate  (or digital application signature) is not associated with such a trusted certificate authority, the app policy engine  indicates that the application APP  is untrusted (block ), and the example process  ends.","However, if the digital certificate  (or digital application signature) is associated with such a trusted certificate authority, the app policy engine  determines the access (and\/or execution) privileges and any application configuration information for the application APP  from its digital certificate  (block ). Additionally, the app policy engine  configures the MAC module  to grant the application APP  access to the physical interfaces (e.g., network interfaces and\/or device interfaces) of the mobile device  in accordance with the access privileges and execution configuration information specified in the digital certificate  (or digital application signature) associated with the application APP  (block ). The example process  then ends.","The example process  of  can be used to implement the third example technique  of  for configuring the app policy engine . With reference to the preceding figures, the process  begins with the policy configuration , including the list of trusted certificate authorities, associated certificates identifying these trusted sources, and any authority privileges and other application configuration information (e.g., such as one or more application digital certificates - specifying hardware interface access privilege(s) and\/or other execution configuration information for one or more application executable on the mobile device ), being downloaded from the removable memory device  to the app policy engine  (block ). Then, to control privileges of a particular application, such as the application APP , the app policy engine  retrieves a digital certificate, such as the digital certificate , or a digital application signature associated with the application APP  (block ). For example, the digital certificate  may be downloaded, copied, etc., to the mobile device  with the application APP  from a network, a computer, a docking\/download station, etc., or may be included in the policy configuration information  obtained from the removable memory device . The app policy engine  determines whether the digital certificate  (or digital application signature) is associated with a trusted certificate authority included in the list of trusted certificate authorities included in the policy configuration  (block ). If the digital certificate  (or digital application signature) is not associated with such a trusted certificate authority, the app policy engine  indicates that the application APP  is untrusted (block ), and the example process  ends.","However, if the digital certificate  (or digital application signature) is associated with such a trusted certificate authority, the app policy engine  determines the access (and\/or execution) privileges and any application configuration information for the application APP  from its digital certificate  (block ). Additionally, the app policy engine  configures the MAC module  to grant the application APP  access to the physical interfaces (e.g., network interfaces and\/or device interfaces) of the mobile device  in accordance with the access privileges and execution configuration information specified in the digital certificate  (or digital application signature) associated with the application APP  (block ). The example process  then ends.",{"@attributes":{"id":"p-0092","num":"0091"},"figref":["FIG. 11","FIGS. 1-3","FIGS. 4-6"],"b":["100","210","212","302","304","306","308","104","100","400","500","600","104","100"]},"The processor platform P of the example of  includes at least one general purpose programmable processor P. The processor P executes coded instructions P and\/or P present in main memory of the processor P (e.g., within a RAM P and\/or a ROM P). The processor P may be any type of processing unit, such as a processor core, a processor and\/or a microcontroller. The processor P may execute, among other things, the example processes of , ,  and\/or  to implement the example methods and apparatus described herein.","The processor P is in communication with the main memory (including a ROM P and\/or the RAM P) via a bus P. The RAM P may be implemented by DRAM, SDRAM, and\/or any other type of RAM device, and ROM may be implemented by flash memory and\/or any other desired type of memory device. Access to the memory P and the memory P may be controlled by a memory controller (not shown). One or both of the example memories P and P may be used to implement the example database  of .","The processor platform P also includes an interface circuit P. The interface circuit P may be implemented by any type of interface standard, such as an external memory interface, serial port, general-purpose input\/output, etc. One or more input devices P and one or more output devices P are connected to the interface circuit P.","At least some of the above described example methods and\/or apparatus are implemented by one or more software and\/or firmware programs running on a computer processor. However, dedicated hardware implementations including, but not limited to, application specific integrated circuits, programmable logic arrays and other hardware devices can likewise be constructed to implement some or all of the example methods and\/or apparatus described herein, either in whole or in part. Furthermore, alternative software implementations including, but not limited to, distributed processing or component\/object distributed processing, parallel processing, or virtual machine processing can also be constructed to implement the example methods and\/or apparatus described herein.","To the extent the above specification describes example components and functions with reference to particular standards and protocols, it is understood that the scope of this patent is not limited to such standards and protocols. For instance, each of the standards for Internet and other packet switched network transmission (e.g., Transmission Control Protocol (TCP)\/Internet Protocol (IP), User Datagram Protocol (UDP)\/IP, HyperText Markup Language (HTML), HyperText Transfer Protocol (HTTP)) represent examples of the current state of the art. Such standards are periodically superseded by faster or more efficient equivalents having the same general functionality. Accordingly, replacement standards and protocols having the same functions are equivalents which are contemplated by this patent and are intended to be included within the scope of the accompanying claims.","Additionally, although this patent discloses example systems including software or firmware executed on hardware, it should be noted that such systems are merely illustrative and should not be considered as limiting. For example, it is contemplated that any or all of these hardware and software components could be embodied exclusively in hardware, exclusively in software, exclusively in firmware or in some combination of hardware, firmware and\/or software. Accordingly, while the above specification described example systems, methods and articles of manufacture, the examples are not the only way to implement such systems, methods and articles of manufacture. Therefore, although certain example methods, apparatus and articles of manufacture have been described herein, the scope of coverage of this patent is not limited thereto. On the contrary, this patent covers all methods, apparatus and articles of manufacture fairly falling within the scope of the appended claims either literally or under the doctrine of equivalents."],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"BRIEF DESCRIPTION OF THE DRAWINGS","p":[{"@attributes":{"id":"p-0004","num":"0003"},"figref":"FIG. 1"},{"@attributes":{"id":"p-0005","num":"0004"},"figref":["FIG. 2","FIG. 1","FIG. 1"]},{"@attributes":{"id":"p-0006","num":"0005"},"figref":["FIG. 3","FIGS. 1-2"]},{"@attributes":{"id":"p-0007","num":"0006"},"figref":["FIG. 4","FIGS. 1-2"]},{"@attributes":{"id":"p-0008","num":"0007"},"figref":["FIG. 5","FIGS. 1-2"]},{"@attributes":{"id":"p-0009","num":"0008"},"figref":["FIG. 6","FIGS. 1-2"]},{"@attributes":{"id":"p-0010","num":"0009"},"figref":["FIGS. 7A and 7B","FIGS. 1-3"]},{"@attributes":{"id":"p-0011","num":"0010"},"figref":["FIG. 8","FIG. 4","FIGS. 1-2"]},{"@attributes":{"id":"p-0012","num":"0011"},"figref":["FIG. 9","FIG. 5","FIGS. 1-2"]},{"@attributes":{"id":"p-0013","num":"0012"},"figref":["FIG. 10","FIG. 6","FIGS. 1-2"]},{"@attributes":{"id":"p-0014","num":"0013"},"figref":["FIG. 11","FIGS. 7A-B"],"b":["8","9","10"]}]},"DETDESC":[{},{}]}
