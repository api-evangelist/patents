---
title: System and method for implementing data deduplication-aware copying of data
abstract: A system and method for implementing data deduplication-aware copying of data are provided. In response to a request to copy a source file between a source filesystem and a destination filesystem, file mapping information corresponding to the source file is retrieved. The file mapping information is stored in a source filesystem map. The source filesystem accesses a source logical volume. The source logical volume maps to a deduplication storage area. The destination filesystem accesses a destination logical volume. The destination logical volume maps to the deduplication storage area. The source file comprises data stored in the deduplication storage area. A destination file is allocated, based on the file mapping information, in the destination filesystem. The destination file is mapped to the data stored in the data deduplication storage area.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08290911&OS=08290911&RS=08290911
owner: Symantec Corporation
number: 08290911
owner_city: Mountain View
owner_country: US
publication_date: 20090630
---

{"@attributes":{"id":"description"},"BRFSUM":[{},{}],"heading":["FIELD OF THE INVENTION","BACKGROUND OF THE INVENTION","SUMMARY OF THE INVENTION","DETAILED DESCRIPTION"],"p":["This invention relates to storage systems and, more particularly, to locating and copying data in a deduplication storage system.","In many of today's organizations, widespread access to data has become commonplace. To provide widespread access, many organizations and individuals access information via a computer network. For example, a server, which is further coupled to a storage device or storage network, services data access requests from clients. Some computer networks are configured such that the physical storage locations of the storage device are further abstracted as logical volumes, to which the clients direct data access requests via the server. During the operation of the computer network, the server or clients can copy data between the logical volumes. In order to accomplish the copying of data between logical volumes, both physical and logical storage locations are first allocated to accept the copied data and then, the actual data is copied from the first logical volume to the second logical volume.","Since copying data between logical volumes and filesystems involves both allocating storage locations for storing the data and the actual transfer of data between the logical volumes and filesystems, executing the allocation and transfer operations is time and resource intensive.","Embodiments provide a system and method for implementing data deduplication-aware copying of data. In response to a request to copy a source file between a source filesystem and a destination filesystem, file mapping information corresponding to the source file is retrieved. The file mapping information is stored in a source filesystem map. The source filesystem accesses a source logical volume. The source logical volume maps to a deduplication storage area. The destination filesystem accesses a destination logical volume. The destination logical volume maps to the deduplication storage area. The source file comprises data stored in the deduplication storage area. A destination file is allocated, based on the file mapping information, in the destination filesystem. The destination file is mapped to the data stored in the data deduplication storage area.","The foregoing is a summary and thus contains, by necessity, simplifications, generalizations and omissions of detail; consequently those skilled in the art will appreciate that the summary is illustrative only and is not intended to be in any way limiting. Other aspects, inventive features, and advantages of the present invention, as defined solely by the claims, will become apparent in the non-limiting detailed description set forth below.","Introduction","Embodiments of the present invention implement a data deduplication system that includes a deduplication storage area. The deduplication storage area stores blocks of data in physical block locations within a server storage device. Logical block locations of multiple logical volumes are mapped to the physical block locations of the deduplication storage area to form multiple views of the blocks of data in the deduplication storage area. Clients connect to a server coupled to the server storage device in order to read, write, or read and modify the blocks of data in the deduplication storage area via the logical volumes. The clients utilize filesystems to organize the logical block locations (which map to physical block locations within the deduplication storage area) into files and directories.","Ordinary copying of files between the multiple logical volumes can be resource-intensive. For example, using a non-data deduplication-aware copy technique, a source filesystem reads a source file and sends data (stored in the physical block locations in the deduplication storage area) over a network to a destination filesystem even though the source filesystem and the destination filesystem share the same deduplication storage area. The destination filesystem then creates a new (destination) file to receive the blocks of data and writes the blocks of data to the deduplication storage area. Eventually, during background processing, a deduplication manager of the data deduplication system determines that the blocks of data within the deduplication storage area mapped by the source and destination files are identical. The deduplication manager modifies physical block location metadata to release one set of identical blocks of data and maps the remaining blocks of data to both the source file and the destination file. This process involves an inefficient use of system resources (e.g., processor cycles, memory use, network bandwidth, and disk access time) and also results in unnecessary fluctuations in the available storage capacity of the deduplication storage area. For example, the available storage capacity decreases when a file copy process is performed because a copy of data mapped by one filesystem is transferred to and mapped by another filesystem.","A copy technique that is data deduplication-aware involves remapping physical block location metadata within the deduplication storage area without the actual transfer of data blocks between source and destination filesystems. In order to copy a source file from a source file system to a destination filesystem, a copy manager (which, as previously discussed, can also be implemented in a client) retrieves file mapping information from a source filesystem map associated with the source filesystem. The source filesystem map indicates the relationship between the files, as organized by the filesystem, and the logical block locations within the source logical volume. The source file mapping information indicates a first set of logical block locations within the source logical volume that make up the source file in the source filesystem. Using the file mapping information, the copy manager allocates a second set of logical block locations within the destination logical volume and also allocates a destination file within the destination filesystem. The destination file includes the allocated second set of logical block locations within the destination logical volume. The destination file, at this point, is an \u201cempty container\u201d (a file that is allocated without transferring any data into the storage locations allocated for the destination file).","The copy manager then passes the source and destination filesystem maps, as well as an indication of the correspondence between the first set of logical block locations within the source logical volume and the second set of logical block locations within the destination logical volume, to a deduplication manager. The deduplication manager accesses physical block location metadata corresponding to the physical block locations mapped by the first set of logical block locations within the source logical volume. The deduplication manager then modifies the physical block location metadata to include a mapping between the physical block locations and the second set logical block locations within the destination logical volume. In so doing, the copy manager, in conjunction with the deduplication manager, copies the source file in the source filesystem to the destination file in the destination filesystem by modifying physical block location metadata, without modifying or transmitting any blocks of data in the common deduplication storage area.","Data Deduplication and Storage Virtualization","One technique employed to minimize the storage of redundant copies of data is data deduplication. Data deduplication systems inventory data stored on the data deduplication system, identify duplicate copies of data, and discard the duplicate copies of data such that only one instance of a particular unit of data is stored in the data deduplication system.","Comparing actual units of data to identify duplicate copies is typically prohibitively costly, in terms of both time and computing resources. To address such issues, rather than comparing the actual units of data, smaller representations of the units of data (e.g., hash, checksum, and the like) are generated for each unit of data. To identify duplicate copies of data, these representations are compared, instead of comparing the actual units of data.","Data deduplication systems can be implemented as block-level deduplication systems, such that only one instance of a particular block of data is stored by the data deduplication system at one time. A block of data is a sequence of bytes or bits with a nominal length (e.g., a block size). As will be appreciated, a block can be of any size. A physical block location is a storage location used for storing a block of data. While some embodiments are discussed in terms of block-level deduplication systems, other embodiments (e.g., file-based deduplication systems) can be implemented as well.","According to one embodiment, a data deduplication system maintains a deduplication storage area within a computer-readable storage medium such as, for example, a disk drive, a flash drive, an optical drive, or the like. The deduplication storage area corresponds to a collection of physical block locations in the computer-readable storage medium. The collection of physical block locations is used to store blocks of data. The data deduplication system performs data deduplication on the deduplication storage area so that only one copy of a particular block of data is stored within the deduplication storage area.","Storage virtualization is a technique used to provide storage location independence between the physical block location where a particular block of data is stored and the block address used to access the block of data. By using storage virtualization, logical address spaces or logical volumes can be created. Such logical volumes can include logical block locations that map to physical block locations in a deduplication storage area of a data deduplication system.","Embodiments of the present invention facilitate the presentation of different views of data stored in a deduplication storage area. For example, the logical block locations of a first logical volume can map to physical block locations of the deduplication storage area representing the entire deduplication storage area while the logical block locations of a second logical volume map to a subset of the physical block locations in the deduplication storage area. Thus, the first logical volume (a complete view of the deduplication storage area) presents a different view of the deduplication storage area than the second logical volume (a partial view of the deduplication storage area).","In some embodiments of the present invention, a server is coupled to a server storage device, which includes a deduplication storage area. Using storage virtualization, logical volumes present different views of the deduplication storage area, as previously discussed. Clients access the logical volumes in the server storage device via the server. These clients implement a filesystem (within, for example, the clients' respective operating systems) that organizes blocks of data into files, where the blocks of the data are referenced by logical block locations within logical volumes. These files can be further organized into directories. Within this organization, the filesystem facilitates the storage, organization, manipulation, and retrieval of blocks of data, referenced by the logical block locations of the logical volumes, by the clients. A logical block location is referenced in terms of a logical block address. Likewise, a physical block location is referenced in terms of a physical block address.","An Example Architecture for Implementing Data Deduplication-Aware Copying of Data",{"@attributes":{"id":"p-0026","num":"0025"},"figref":["FIG. 1","FIG. 6"]},"As illustrated, a server  is coupled to a server storage device , which is implemented as a deduplication storage device. As illustrated, server storage device  also includes deduplication storage area  and logical volumes ()-(N). Logical volumes ()-(N) are generated from deduplication storage area . For example, logical volumes ()-(N) can be implemented as point-in-time copies of deduplication storage area . In some embodiments, logical volumes ()-(N) are space-optimized snapshots such as copy-on-write snapshots. As an example, logical volumes ()-(N) can be generated by copying state information (e.g., metadata associated with the data stored in the physical blocks of deduplication storage area  and referencing physical block locations of deduplication storage area ). Thus, using logical volumes ()-(N), server  presents multiple views of the data stored in deduplication storage area  to clients coupled to the server. According to another embodiment, logical volumes ()-(N) can be implemented as logical volumes accessed by virtual machines running on server , which serves as a host computer. The virtual machines emulate computer hardware and can be used to execute, for example, multiple operating systems at the same time. Another embodiment implements clients coupled to server  as virtual machines. The virtual machines consume deduplication storage space (e.g., storage space in deduplication storage area ) via server .","Deduplication storage area , implemented as a block-level deduplication storage area, stores data within the physical block locations that make up deduplication storage area . The physical block locations are used to provide multiple logical volumes that are based on the data blocks stored in the physical block locations. For example, if server  provides three separate views of deduplication storage area to three separate clients coupled to server , three logical volumes (), (), and () are created. The logical block locations in the logical volumes are mapped to physical block locations within deduplication storage area . For example, a physical block location n within deduplication storage area  is mapped by logical block location m of logical volume (), logical block location\/of logical volume (), and logical block location p of logical volume (), which are provided for access by client filesystems (discussed herein in more detail in conjunction with ) of the three separate clients coupled to server .","Further included in server  are a copy manager , a server-to-client module , a deduplication manager , and a server storage device driver . Copy manager  enables data deduplication-aware copying of files between client filesystems. Server-to-client module  can be implemented as a network interface module or other device that enables the server to communicate with directly-connected clients or with clients coupled to the server via a network. Other embodiments implement server-to-client module  as a specialized communication module, designed to allow the server to communicate with clients using other protocols and\/or communication hardware.","Server storage device driver  enables server  to communicate with server storage device . Server storage device driver  can be implemented as a computer module that allows higher-level computer programs to interact with computer hardware such as server storage device .","According to one embodiment, copy manager  monitors a network (e.g., network  of ) for a request to copy a file from a source filesystem to a destination filesystem. Copy manager  also retrieves file mapping information from the source filesystem to determine the size of the file to be copied from the source filesystem to the destination filesystem (among other such attributes). Copy manager  also allocates logical block locations in the destination logical volume to support a destination file within the destination file system. According to one embodiment, in the case of the New Technology File System (NTFS), copy manager  can allocate the logical block locations and the destination file by using a SetFileValidData( ) function call, which enables the creation of a valid file without the need for actually writing to the file.","Deduplication manager  performs a variety of functions. As a background process, deduplication manager  performs a deduplication process on deduplication storage area . Thus, deduplication manager  inventories the data stored in deduplication storage area , identifies duplicate blocks of data, and discards the duplicate blocks of data such that only one instance of a particular block of data is stored in the deduplication storage area .","According to one embodiment, deduplication manager  generates smaller representations (e.g., hash, checksum, and the like) of the blocks of data. To compare the blocks of data for duplicate blocks, the representations of the blocks of data are compared instead of the blocks of data themselves.","Also, deduplication manager , in conjunction with copy manager , performs data deduplication-aware copying of data between filesystems where the data's representation in each of the filesystem's map to the same deduplication storage area. According to one embodiment, upon receipt of source and destination filesystem maps and an indication of correspondence between a first set of logical block locations in a source logical volume and a second set of logical block locations in a destination logical volume from copy manager , deduplication manager  modifies physical block location metadata associated with physical block locations of deduplication storage area , which results in the addition of a mapping of the second set of logical block locations in the destination logical volume to the physical block location metadata. Thus, deduplication manager  facilities copying of a file between a source and destination filesystems without transferring data over a network.","According to an embodiment, copy manager  and deduplication manager  can copy multiple regions of a file simultaneously through multithreading processes performed by copy manager  and deduplication manager . Thus, for example, a first copy manager process and a first deduplication manager process can copy a first half of a file while a second copy manager process and a second deduplication manager process can concurrently copy a second half of the file.","According to an embodiment, copy manager  can be implemented within a filesystem located on a client (e.g., client  of ) instead of being located on server . Thus, copy manager , located on the client, can interface with deduplication manager , located on a server, via interactions between a client-to-server module (e.g., client-to-server module  of ) and server-to-client module .",{"@attributes":{"id":"p-0037","num":"0036"},"figref":["FIG. 2","FIG. 1"],"b":["105","205","105","205","210","215","220"]},"According to one embodiment, filesystem  imposes a logical structure on logical block locations of a logical volume (e.g., logical volumes ()-(N) of ). For example, filesystem  organizes the data blocks mapped by the logical block locations into files and directories. Filesystem  also maps input\/output (I\/O) requests to logical block addresses of the logical block locations in the logical volume in terms of offset and length within files.","Filesystem map  is a data structure (e.g., an array, array of records, a database, or the like) that includes metadata describing the location of files and directories within the logical volume, as organized by filesystem . According to one embodiment of the present invention, filesystem map  can be implemented as a master file table (MFT) in NTFS. However, it will be appreciated that any filesystem can be employed in a system of the present invention, and such systems are in no way limited to NTFS. When a file or directory is created by filesystem , filesystem map  is updated with a record documenting the file or directory. The record is used to store information about the file or directory in the form of attributes. These attributes include, but are not limited to, the location of the file or directory, the size of the file or directory, and so on. According to one embodiment, filesystem map , the size of a file to be copied, and the like can also be retrieved via system application programming interface (API) calls. Also, client  includes a client-to-server module , which, enables client  to communicate with a server (e.g., server  of ), and can be implemented as a network card.",{"@attributes":{"id":"p-0040","num":"0039"},"figref":"FIG. 3","b":["115","110","1","2","3","115","115","115","1","2","3","1","2","3","1","2","3","1","2","3","1","3","1","1","120","1","1","115","1","2","3","1","2","3"]},"Physical block location metadata M, M, and M are also implemented as a first entry in deduplication chains (), (), and (). A deduplication chain is a linked list (or any other suitable data type or data structure) of translations that identifies all the logical block locations across the logical volumes in server storage device  that map to a particular physical block location. For example, traversing deduplication chain (), starting at physical block location metadata M indicates that physical block location P is mapped by logical block location  of logical volume  () (i.e., indicated by \u201c1.3\u201d) and logical block location  of logical volume  () (i.e., indicated by \u201c1.5\u201d). Deduplication chains () and () are constructed similarly, and also indicate logical block locations across other logical volumes that map to particular physical block locations. The deduplication chains facilitate data deduplication-aware copy of data by mapping the entries of the chain to a destination file allocated by a copy manager, as previously discussed.","In order to provide unique views of the data stored within the physical block locations of deduplication storage area , logical volumes  () and logical volume  () are created. Logical volume  () and logical volume  () include an array of logical block locations that map to the physical block locations of deduplication storage area . As shown in , logical volume  () includes a first array of logical block locations - and logical volume  () includes a second array of logical block locations -. It will be appreciated that logical volume  () and logical volume  () are not limited to nine logical block locations, but can include any number of logical block locations. The logical block locations are referenced using logical block addresses.","As shown in , multiple logical block locations from multiple logical volumes can map back to a single physical block location. Thus, for example, logical block locations  and  of logical volume  () map to physical block location P. Deduplication chain () stores the mapping associations between the logical block locations and physical block location P. By traversing deduplication chain (), the logical block locations among the logical volumes that map back to physical block location P are determined.","Still referring to , clients ()-() organize the array of logical block addresses of logical block locations within logical volume  () and logical volume  () using filesystems ()-(). Filesystems ()-() organize the logical block locations into files and directories of files. As shown in , filesystem () includes File A . File A  includes data referenced by logical block locations  and  of logical volume  ().","During normal system operation, the operating system or applications of client () send a data read request for data that is part or all of File A . Filesystem () accesses logical block locations  and  of logical volume  (), in order to satisfy the read request. Logical block locations  and  of logical volume  () map to physical block locations P and P of deduplication storage area . Thus, client (), retrieves the data from physical block locations P and P, in that order, via filesystem ().","When modifying or wiring data to server storage device , clients ()-() access logical block locations within logical volume  (). Then, the data blocks are retrieved from the physical block locations within deduplication storage area  represented by the accessed logical block locations. The modified or new blocks of data are written to new physical block locations within deduplication storage area . Then, in the case of a modified data block, the logical block location's reference is rerouted to the new physical block location. If the data block is a new block of data, a logical block location is assigned to the new physical block location and the reference is updated.",{"@attributes":{"id":"p-0047","num":"0046"},"figref":"FIG. 4","b":["210","1","305","4","5","4","5","4","5","1","120","1","4","1","120","1","2","115","5","1","120","2","1","115"]},"A copy manager and a deduplication manager (e.g., copy manager  and deduplication manager , both of ) perform a data deduplication-aware copy of File A . Afterwards, instead of allocating additional physical block locations, the copy manager allocates File A\u2032 , which is mapped by filesystem () to logical block locations within logical volume  () (e.g., logical block locations  and  of logical volume  (). The deduplication manager modifies the physical block location metadata and deduplication chains () and () to reflect the mapping of logical block location  of logical volume  () to physical block location P, and logical block location  of logical volume  () to physical block location P. The copy manager and the deduplication manager can then perform data deduplication-aware copying of data by modifying the physical block location metadata and deduplication chains, without any transmission or modification of the data blocks within deduplication storage area .",{"@attributes":{"id":"p-0049","num":"0048"},"figref":["FIG. 5","FIG. 5","FIG. 1","FIG. 2","FIG. 6","FIG. 1"],"b":["105","205","120","1","115","502"]},"The system then maps the logical volumes to data stored in the deduplication storage area (). Clients accessing the logical volumes via the server implement filesystems (e.g., filesystem  of ) to organize the logical block locations of the logical volumes into files and directories (). A copy manager (e.g., copy manager  of ) receives a request to copy a source file, which is mapped to source data in the deduplication storage area, from a source filesystem to a destination filesystem (). The copy manager retrieves source file mapping information from a source filesystem map associated with the source filesystem (). The source file mapping information indicates a first set of logical block locations within the source logical volume that make up the source file in the source filesystem. Using the source file mapping information, the copy manager allocates a second set of logical block locations within the destination logical volume and also allocates a destination file within the destination filesystem (). The destination file includes the allocated second set of logical block locations within the destination logical volume. According to one embodiment of the present invention, the allocated destination file is the same size as the source file. The size of the source file is retrieved from the source file mapping information. As previously discussed, the allocation of the destination file is performed without writing any data to the destination file.","The copy manager then passes the source and destination filesystem maps and an indication to a deduplication manager, where the indication reflects the correspondence between the first set of logical block locations within the source logical volume and the second set of logical block locations within the destination logical volume (). The deduplication manager accesses physical block location metadata corresponding to the physical block locations mapped by the first set logical block locations within the source logical volume. Then, the deduplication manager modifies the physical block location metadata to include a mapping between the physical block locations and the second set logical block locations within the destination logical volume (). Thus, the copy manager, in conjunction with the deduplication manager, copies the source file in the source filesystem to the destination file in the destination filesystem by modifying physical block location metadata, and without modifying or transmitting any blocks of data in the common deduplication storage area.","An Example Computing Environment",{"@attributes":{"id":"p-0052","num":"0051"},"figref":"FIG. 6","b":["600","605","1","620","605","1","620","615"]},"Server  is coupled to a server storage device , which stores user data. Server storage device  can be, for example, a hard disk a compact disc (CD), a digital versatile disc (DVD), or other mass storage device, or a storage system (e.g., a redundant array of independent disks (RAID) system or an optical storage jukebox) that includes an array of such storage devices. Server storage device  can include logical volumes that are implemented on an underlying physical storage device (e.g., a RAID system).","When implemented as a block-level deduplication storage device, server storage device  maintains a block-level deduplication storage area, discussed herein in more detail in conjunction with . The block-level deduplication storage area includes a group of physical block location for storing data. In conjunction with a deduplication manager, deduplication storage area stores only one copy of each block of data within the physical block locations. Clients ()-(N) accesses server  to read, write, or otherwise modify data stored in physical block locations of server storage device . As previously discussed, a block of data can be of any size and is not limited to any particular unit of disk allocation.","Elements of the system can be implemented using a variety of computer systems and networks. An example of one such computing environment is described below with reference with .",{"@attributes":{"id":"p-0056","num":"0055"},"figref":["FIG. 7","FIG. 1","FIG. 1"],"b":["710","120","105","1","710","712","710","714","717","718","720","722","724","726","728","730","732","733","734","737","738","735","790","735","739","740","742","746","712","728","747","712","730","748","712"]},"Bus  allows data communication between central processor  and system memory , which may include read-only memory (ROM) or flash memory (neither shown) and random access memory (RAM) (not shown), as previously noted. RAM is generally the main memory into which operating system and application programs are loaded. ROM or flash memory can contain, among other code, the Basic Input-Output system (BIOS) which controls basic hardware operation such as the interaction with peripheral components. Applications resident with computer system  are generally stored on and accessed via a computer-readable medium, such as hard disk drive (e.g., fixed disk ), an optical drive (e.g., optical drive ), a floppy disk unit , or other storage medium.","Storage interface , as with other storage interfaces of computer system , can connect to a standard computer-readable medium for storage and\/or retrieval of information, such as a fixed disk drive . Fixed disk drive  may be a part of computer system  or may be separate and accessed through other interface systems. Modem  may provide a direct connection to a remote server via a telephone link or to the Internet via an internet service provider (ISP). Network interface  may provide a direct connection to a remote server via a direct network link to the Internet via a point-of-presence (POP). Network interface  may provide such connection using wireless techniques, including digital cellular telephone connection, Cellular Digital Packet Data (CDPD) connection, digital satellite data connection or the like.","Many other devices or subsystems (not shown) may be connected in a similar manner (e.g., document scanners, digital cameras, and so on). Conversely, all of the devices shown in  need not be present. The devices and subsystems can be interconnected in different ways from that shown in . The operation of the computer system such as that shown in  is readily known in the art and is not discussed in detail in this application. Code to implement the previously-described features can be stored in computer-readable storage media such as one or more of system memory , fixed disk , optical disk , or floppy disk . The operating system provided on computer system  may be MS-DOS\u00ae, MS-WINDOWS\u00ae, OS\/2\u00ae, UNIX\u00ae, Linux\u00ae, or other known operating system.","As an example implementation of computer system , server  of  can store copy manager , server-to-client module , deduplication manager , and server storage device driver  in computer-readable storage media (e.g., memory  and the like). Regarding client , filesystem , filesystem map , and client-to-server module  can be stored in computer-readable storage media (e.g., memory  and the like) and executed by central processor  to perform the features described herein. Also, network interface  may be used by any of the modules described in server  to communicate with client  or vice versa. For example, copy manager  can access filesystem map  via server-to-client module , which can be implemented in computer-readable storage media or by network interface .","Moreover, regarding the messages and\/or data signals described herein, those skilled in the art will recognize that a signal may be directly transmitted from a first block to a second block, or a signal may be modified (e.g., amplified, attenuated, delayed, latched, buffered, inverted, filtered, or otherwise modified) between the blocks. Although the signals of the above described embodiment are characterized as transmitted from one block to the next, other embodiments may include modified signals in place of such directly transmitted signals as long as the informational and\/or functional aspect of the signals is transmitted between the blocks. To some extent, a signal input at a second block may be conceptualized as a second signal derived from a first signal output from a first block due to the physical limitations of the circuitry involved (e.g., there will inevitably be some attenuation and delay). Therefore, as used herein, a second signal derived from the first signal includes the first signal or any modifications to the first signal, whether due to circuit limitations or due to passage through other circuit elements which do not change the informational and\/or final functional aspect of the first signal.","Although the present invention has been described in connection with several embodiments, the invention is not intended to be limited to the specific forms set forth herein. On the contrary, it is intended to cover such alternatives, modifications, and equivalents as can be reasonably included within the scope of the invention as defined by the appended claims."],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"BRIEF DESCRIPTION OF THE DRAWINGS","p":["The present invention may be better understood, and its numerous objects, features and advantages made apparent to those skilled in the art by referencing the accompanying drawings.",{"@attributes":{"id":"p-0008","num":"0007"},"figref":"FIG. 1"},{"@attributes":{"id":"p-0009","num":"0008"},"figref":"FIG. 2"},{"@attributes":{"id":"p-0010","num":"0009"},"figref":"FIG. 3"},{"@attributes":{"id":"p-0011","num":"0010"},"figref":"FIG. 4"},{"@attributes":{"id":"p-0012","num":"0011"},"figref":"FIG. 5"},{"@attributes":{"id":"p-0013","num":"0012"},"figref":"FIG. 6"},{"@attributes":{"id":"p-0014","num":"0013"},"figref":"FIG. 7"}]},"DETDESC":[{},{}]}
