---
title: Managing escalating resource needs within a grid environment
abstract: A method, system, and program for managing escalating resource needs within a grid environment are provided. A job is submitted into a first selection of resources in a grid environment from among a hierarchy of discrete sets of resources accessible in the grid environment. Discrete sets of resources may include locally accessible resources, enterprise accessible resources, capacity on demand resources, and grid resources. The performance of the first selection of resources is monitored and compared with a required performance level for the job. If the required performance level is not met, then the discrete sets of resources are queried for available resources to meet the required performance level in an order designated by said hierarchy. Available resources in a next discrete set of resource from the hierarchy of discrete sets of resources are added to a virtual organization of resources handling the job within the grid environment. In particular, the virtual organization of resources may include the first selection of resources and the added resources which are distributed across heterogeneous systems. If capacity on demand resources are allocated and added to the virtual organization, then the capacity on demand resources are deallocated when no longer needed.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08275881&OS=08275881&RS=08275881
owner: International Business Machines Corporation
number: 08275881
owner_city: Armonk
owner_country: US
publication_date: 20090504
---

{"@attributes":{"id":"description"},"RELAPP":[{},{}],"heading":["CROSS-REFERENCE TO RELATED APPLICATIONS","BACKGROUND OF THE INVENTION","SUMMARY OF THE INVENTION","DETAILED DESCRIPTION OF THE PREFERRED EMBODIMENT"],"p":["This application is a continuation of commonly assigned U.S. Pat. No. 7,562,143, issued Jul. 14 2009, filed Jan. 13, 2004, which is hereby incorporated herein by reference.","The present application is related to the following co-pending applications: (1) U.S. Pat. No. 7,406,691, filed Jan. 13, 2004, issued Jul. 29, 2008.","1. Technical Field","The present invention relates in general to improved performance of jobs within a grid environment and in particular to a method for managing escalating resource needs within a grid environment to meet quality of service requirements. Still more particularly, the present invention relates to managing access by a client system to a hierarchy of resources within a grid environment as need for additional resources escalate to handle a job according to performance requirements for the job.","2. Description of the Related Art","Ever since the first connection was made between two computer systems, new ways of transferring data, resources, and other information between two computer systems via a connection continue to develop. In a typical network architecture, when two computer systems are exchanging data via a connection, one of the computer systems is considered a client sending requests and the other is considered a server processing the requests and returning results. In an effort to increase the speed at which requests are handled, server systems continue to expand in size and speed. Further, in an effort to handle peak periods when multiple requests are arriving every second, server systems are often joined together as a group and requests are distributed among the grouped servers. Multiple methods of grouping servers have developed such as clustering, multi-system shared data (sysplex) environments, and enterprise systems. With a cluster of servers, one server is typically designated to manage distribution of incoming requests and outgoing responses. The other servers typically operate in parallel to handle the distributed requests from clients. Thus, one of multiple servers in a cluster may service a client request without the client detecting that a cluster of servers is processing the request.","Typically, servers or groups of servers operate on a particular network platform, such as Unix or some variation of Unix, and provide a hosting environment for running applications. Each network platform may provide functions ranging from database integration, clustering services, and security to workload management and problem determination. Each network platform typically offers different implementations, semantic behaviors, and application programming interfaces (APIs).","Merely grouping servers together to expand processing power, however, is a limited method of improving efficiency of response times in a network. Thus, increasingly, within company networks and beyond, rather than just grouping servers, servers and groups of server systems are organized as distributed resources. There is an increased effort to collaborate, share data, share cycles, and improve other modes of interaction among servers within a company network and outside the company network. Further, there is an increased effort to outsource nonessential elements from one company network to that of a service provider network. Moreover, there is a movement to coordinate resource sharing between resources that are not subject to the same management system, but still address issues of security, policy, payment, and membership. For example, resources on an individual's desktop are not typically subject to the same management system as resources of a company server cluster. Even different administrative groups within a company network may implement distinct management systems.","The problems with decentralizing the resources available from servers and other computing systems operating on different network platforms, located in different regions, with different security protocols and each controlled by a different management system, has led to the development of Grid technologies using open standards for operating a grid environment. Grid environments support the sharing and coordinated use of diverse resources in dynamic, distributed, virtual organizations. A virtual organization is created within a grid environment when a selection of resources from geographically distributed systems operated by different organizations with differing policies and management systems are organized to handle a job request.","In addition to decentralizing resources available in a grid environment to improve efficiency of network transactions, capacity on demand resources are gaining more presence. An on demand resource is one that is accessible to a system, but is operational only when a fee is paid or an electronic key to open the resource is provided.","An important attribute of a grid environment that distinguishes a grid environment from merely that of another network management system is quality of service maintained across multiple diverse sets of resources. A grid environment does more than just provide resources; a grid environment provides resources with a particular level of service including response time, throughput, availability, security, and the co-allocation of multiple resource types to meet complex user demands. A limitation of current grid technology, however, is that maintenance of agreed to quality of service from grid resources requires human intervention. For example, human intervention is relied on in a grid environment to decide when to allocate and deallocate resources to reach specified performance levels. Further, manual intervention is relied on in a grid environment to suspend low priority jobs or move jobs to other selections of resources within the grid environment. Manual intervention is limiting on the efficiency and expansion of grid environments because it is by nature inefficient and prone to error.","As a result of developing grid environments and on demand resources, a single system may have access to multiple discrete sets of resources. For example, first, a system typically accesses those components within the system that provide a primary set of local resources. Next, a system may access resources from other systems within a local or enterprise network. Further, a system may access and activate capacity on demand resources either from within the system or from a system accessible via a network. Finally, a system may access grid resources accessible through participation in a grid environment.","With the availability of multiple sets of discrete resources, an additional limitation of current grid technology is that human intervention is required to manage the flow between each of these discrete sets of resources to determine whether use of grid resources is required. Further, human intervention is required to determine whether to activate capacity on demand resources first or go directly to grid resources. Thus, a disadvantage of current grid technology is that when a job request is executing within a set of resources that become unable to handle performance requirements for the job, human intervention is required to decide whether to schedule the job into a grid environment or other set of resources.","Therefore, in view of the foregoing, it would be advantageous to provide a method, system, and program for automated allocation of additional resources from a hierarchy of sets of resources and manage the flow of a job through the hierarchy of sets of resources, including grid resources. In particular, it would be advantageous to provide a method, system, and program for determining when it is necessary to schedule a job for use of additional levels of resources, including grid resources, based on the performance characteristics of each level of resources and the eligibility of the job for additional resources. Further, in particular, it would be advantageous to provide a method, system, and program for automated activation and deactivation of capacity of demand resources included in the hierarchy of resources within a grid environment available for allocation.","In view of the foregoing, the present invention provides improved performance of jobs within a grid environment and in particular provides a method, system, and program for managing escalating resource needs within a grid environment to meet quality of service requirements. Still more particularly, the present invention relates to managing access by a client system to a hierarchy of resources within a grid environment as needs for additional resources escalate to handle a job according to performance requirements for the job","According to one embodiment of the present invention, a job is submitted into a first selection of resources in a grid environment from among a hierarchy of discrete sets of resources accessible in the grid environment. The performance of the first selection of resources is monitored and compared with a required performance level for the job. The required performance level for a job may include quality of service requirements based on service level agreements and objectives. If the required performance level is not met, then the discrete sets of resources are queried for available resources to meet the required performance level in an order designated by said hierarchy. Available resources in a next discrete set of resource from the hierarchy of discrete sets of resources are added to a virtual organization of resources handling the job within the grid environment. In particular, the virtual organization of resources may include the first selection of resources and the added resources which are distributed across heterogeneous systems.","Hierarchical orders of discrete sets of resources may be specified for particular jobs. Alternatively, a controller may select the hierarchical order or a default hierarchical order may be selected. The discrete sets of resources may include, but are not limited to, locally accessible resources, enterprise accessible resources, capacity on demand resources, and grid resources.","According to another aspect of the present invention, not all jobs may qualify for additional resources. Therefore, before additional resources are queried, a determination is first made whether the job qualifies for the additional resources based on job priority or other qualification.","According to yet another aspect of the present invention, when a capacity on demand resource is added to the virtual organization of resources handling the job, the capacity of demand resource is first allocated. When the capacity on demand resource is no longer needed, however, the capacity on demand resource is deallocated. The capacity on demand resource may be no longer needed at the completion of the job or when other resources are sufficient for handling the job.","All objects, features, and advantages of the present invention will become apparent in the following detailed written description.","Referring now to the drawings and in particular to , there is depicted one embodiment of a computer system which may be implemented in a grid environment and in which the present invention may be implemented. As will be further described, the grid environment includes multiple computer systems managed to provide resources. Additionally, as will be further described, the present invention may be executed in a variety of computer systems, including a variety of computing systems, mobile systems, and electronic devices operating under a number of different operating systems managed within a grid environment.","In one embodiment, computer system  includes a bus  or other device for communicating information within computer system , and at least one processing device such as processor , coupled to bus  for processing information. Bus  preferably includes low-latency and higher latency paths that are connected by bridges and adapters and controlled within computer system  by multiple bus controllers. When implemented as a server system, computer system  typically includes multiple processors designed to improve network servicing power.","Processor  may be a general-purpose processor such as IBM's PowerPC\u2122 processor that, during normal operation, processes data under the control of operating system and application software accessible from a dynamic storage device such as random access memory (RAM)  and a static storage device such as Read Only Memory (ROM) . The operating system may provide a graphical user interface (GUI) to the user. In a preferred embodiment, application software contains machine executable instructions that when executed on processor  carry out the operations depicted in the flowcharts of , , and others described herein. Alternatively, the steps of the present invention might be performed by specific hardware components that contain hardwired logic for performing the steps, or by any combination of programmed computer components and custom hardware components.","The present invention may be provided as a computer program product, included on a machine-readable medium having stored thereon the machine executable instructions used to program computer system  to perform a process according to the present invention. The term \u201cmachine-readable medium\u201d as used herein includes any medium that participates in providing instructions to processor  or other components of computer system  for execution. Such a medium may take many forms including, but not limited to, non-volatile media and volatile media. Common forms of non-volatile media include, for example, a floppy disk, a flexible disk, a hard disk, magnetic tape or any other magnetic medium, a compact disc ROM (CD-ROM) or any other optical medium, punch cards or any other physical medium with patterns of holes, a programmable ROM (PROM), an erasable PROM (EPROM), electrically EPROM (EEPROM), a flash memory, any other memory chip or cartridge, or any other medium from which computer system  can read and which is suitable for storing instructions. In the present embodiment, an example of a non-volatile medium is mass storage device , which as depicted is an internal component of computer system , but will be understood to also be provided by an external device. Volatile media include dynamic memory such as RAM .","Moreover, the present invention may be downloaded as a computer program product, wherein the program instructions may be transferred from a remote virtual resource, such as a virtual resource , to requesting computer system  by way of data signals embodied in a carrier wave or other propagation medium via a network link  (e.g. a modem or network connection) to a communications interface  coupled to bus . Virtual resource  may include a virtual representation of the resources accessible from a single system or systems, wherein multiple systems may each be considered discrete sets of resources operating on independent platforms, but coordinated as a virtual resource by a grid manager. Communications interface  provides a two-way data communications coupling to network link  that may be connected, for example, to a local area network (LAN), wide area network (WAN), or an Internet Service Provider (ISP) that provide access to network . In particular, network link  may provide wired and\/or wireless network communications to one or more networks, such as network , through which use of virtual resources, such as virtual resource , is accessible as provided by a grid management system . Grid management system  may be part of multiple types of networks, including a peer-to-peer network, or may be part of a single computer system, such as computer system . Further, grid management system  may organize a grid environment which includes the systems included in virtual resource .","As one example, network  may refer to the worldwide collection of networks and gateways that use a particular protocol, such as Transmission Control Protocol (TCP) and Internet Protocol (IP), to communicate with one another. Network  uses electrical, electromagnetic, or optical signals that carry digital data streams. The signals through the various networks and the signals on network link  and through communication interface , which carry the digital data to and from computer system , are exemplary forms of carrier waves transporting the information. It will be understood that alternate types of networks, combinations of networks, and infrastructures of networks may be implemented.","When implemented as a server system, computer system  typically includes multiple communication interfaces accessible via multiple peripheral component interconnect (PCI) bus bridges connected to an input\/output controller. In this manner, computer system  allows connections to multiple network computers.","Additionally, although not depicted, multiple peripheral components and internal\/external devices may be added to computer system , connected to multiple controllers, adapters, and expansion slots coupled to one of the multiple levels of bus . For example, a display device, audio device, keyboard, or cursor control device may be added as a peripheral component.","Those of ordinary skill in the art will appreciate that the hardware depicted in  may vary. Furthermore, those of ordinary skill in the art will appreciate that the depicted example is not meant to imply architectural limitations with respect to the present invention.","With reference now to , a block diagram illustrates one embodiment of the general types of components within a grid environment. In the present example, the components of a grid environment  include a client system  interfacing with a grid management system  which interfaces with server clusters , servers , workstations and desktops , data storage systems , and networks . For purposes of illustration, the network locations and types of networks connecting the components within grid environment  are not depicted. It will be understood, however, that the components within grid environment  may reside atop a network infrastructure architecture that may be implemented with multiple types of networks overlapping one another. Network infrastructure may range from multiple large enterprise systems to a peer-to-peer system to a single computer system. Further, it will be understood that the components within grid environment  are merely representations of the types of components within a grid environment. A grid environment may simply be encompassed in a single computer system or may encompass multiple enterprises of systems.","The central goal of a grid environment, such as grid environment  is organization and delivery of resources from multiple discrete systems viewed as virtual resource . Client system , server clusters , servers , workstations and desktops , data storage systems , networks  and the systems creating grid management system  may be heterogeneous and regionally distributed with independent management systems, but enabled to exchange information, resources, and services through a grid infrastructure enabled by grid management system . Further, server clusters , servers , workstations and desktops , data storage systems , and networks  may be geographically distributed across countries and continents or locally accessible to one another.","In the example, client system  interfaces with grid management system . Client system  may represent any computing system sending requests to grid management system . In particular, client system  may send job requests and jobs to grid management system . Further, while in the present embodiment client system  is depicted as accessing grid environment  with a request, in alternate embodiments client system  may also operate within grid environment .","While the systems within virtual resource  are depicted in parallel, in reality, the systems may be part of a hierarchy of systems where some systems within virtual resource  may be locally accessible to client system , some systems may be accessible within an enterprise in which client system  operates, and still other systems may require access to external networks. Additionally, it is important to note, that systems depicted within virtual resources  may be physically encompassed within client system .","One function of grid management system  is to manage job requests and jobs from client system  and control distribution of each job to a selection of computing systems of virtual resource  for use of particular resources at the available computing systems within virtual resource . From the perspective of client system , however, virtual resource  handles the request and returns the result without differentiating between which computing system in virtual resource  actually performed the request.","To implement grid environment , grid management system  facilitates grid services. Grid services may be designed according to multiple architectures, including, but not limited to, the Open Grid Services Architecture (OGSA). In particular, grid management system  refers to the management environment which creates a grid by linking computing systems into a heterogeneous network environment characterized by sharing of resources through grid services.","Grid environment , as managed by grid management system , may provide a single type of service or multiple types of services. For example, computational grids, scavenging grids, and data grids are example categorizations of the types of services provided in a grid environment. Computational grids may manage computing resources of high-performance servers. Scavenging grids may scavenge for CPU resources and data storage resources across desktop computer systems. Data grids may manage data storage resources accessible, for example, to multiple organizations or enterprises. It will be understood that a grid environment is not limited to a single type of grid categorization.","Referring now to , a block diagram illustrates one example of an architecture that may be implemented in a grid environment. As depicted, an architecture  includes multiple layers of functionality. As will be further described, the present invention is a process which may be implemented in one or more layers of an architecture, such as architecture , which is implemented in a grid environment, such as the grid environment described in . It is important to note that architecture  is just one example of an architecture that may be implemented in a grid environment and in which the present invention may be implemented. Further, it is important to note that multiple architectures may be implemented within a grid environment.","Within architecture , first, a physical and logical resources layer  organizes the resources of the systems in the grid. Physical resources include, but are not limited to, servers, storage media, and networks. The logical resources virtualize and aggregate the physical layer into usable resources such as operating systems, processing power, memory, I\/O processing, file systems, database managers, directories, memory managers, and other resources.","Next, a web services layer  provides an interface between grid services  and physical and logical resources . Web services layer  implements service interfaces including, but not limited to, Web Services Description Language (WSDL), Simple Object Access Protocol (SOAP), and eXtensible mark-up language (XML) executing atop an Internet Protocol (IP) or other network transport layer. Further, the Open Grid Services Infrastructure (OSGI) standard  builds on top of current web services  by extending web services  to provide capabilities for dynamic and manageable Web services required to model the resources of the grid. In particular, by implementing OGSI standard  with web services , grid services  designed using OGSA are interoperable. In alternate embodiments, other infrastructures or additional infrastructures may be implemented a top web services layer .","Grid services layer  includes multiple services. For example, grid services layer  may include grid services designed using OGSA, such that a uniform standard is implemented in creating grid services. Alternatively, grid services may be designed under multiple architectures. Grid services can be grouped into four main functions. It will be understood, however, that other functions may be performed by grid services.","First, a resource management service  manages the use of the physical and logical resources. Resources may include, but are not limited to, processing resources, memory resources, and storage resources. Management of these resources includes receiving job requests, scheduling job requests, distributing jobs, and managing the retrieval of the results for jobs. Resource management service  preferably monitors resource loads and distributes jobs to less busy parts of the grid to balance resource loads and absorb unexpected peaks of activity. In particular, a user may specify preferred performance levels so that resource management service  distributes jobs to maintain the preferred performance levels within the grid.","Second, information services  manages the information transfer and communication between computing systems within the grid. Since multiple communication protocols may be implemented, information services  preferably manages communications across multiple networks utilizing multiple types of communication protocols.","Third, a data management service  manages data transfer and storage within the grid. In particular, data management service  may move data to nodes within the grid where a job requiring the data will execute. A particular type of transfer protocol, such as Grid File Transfer Protocol (GridFTP), may be implemented.","Finally, a security service  applies a security protocol for security at the connection layers of each of the systems operating within the grid. Security service  may implement security protocols, such as Open Secure Socket Layers (SSL), to provide secure transmissions. Further, security service  may provide a single sign-on mechanism, so that once a user is authenticated, a proxy certificate is created and used when performing actions within the grid for the user.","Multiple services may work together to provide several key functions of a grid computing system. In a first example, computational tasks are distributed within a grid. Data management service  may divide up a computation task into separate grid services requests of packets of data that are then distributed by and managed by resource management service . The results are collected and consolidated by data management system . In a second example, the storage resources across multiple computing systems in the grid are viewed as a single virtual data storage system managed by data management service  and monitored by resource management service .","An applications layer  includes applications that use one or more of the grid services available in grid services layer . Advantageously, applications interface with the physical and logical resources  via grid services layer  and web services , such that multiple heterogeneous systems can interact and interoperate.","With reference now to , a block diagram of a system operating within the grid environment from the perspective of the grid management system is depicted in accordance with the method, system, and program of the present invention. As illustrated in , a computer system includes many hardware components. As part of a grid environment, however, these hardware components are viewed as resources. For example, a system  includes an application resource , two CPU resources  and , a memory resource , and a storage resource . The resources in system  are typical of the types of resources when viewed within the grid environment, however, in an alternate embodiment, other types of resources may be provided. Further, the resources in system  may be physically located within a single computer system or distributed across multiple computer systems connected by a network, for example","As part of the grid management system described in , a grid manager and router (GM)  provides the interface between the resources of system  and client systems sending requests.","In particular, a resource monitor  within GM  monitors the working status of each of the resources available in system . GM  preferably sends status reports to other grid managers and routers within the grid environment to indicate the availability of the resources in system . Additionally, status reports may describe the computer hardware, operating system, and resources of system . Status reports may be generated, for example, when system  joins or leaves the grid environment, when a threshold is detected, at predetermined time intervals, and on specific predetermined events, including, but not limited to a hardware fault or a portion of a service failing.","Referring now to , an illustrative representation depicts one embodiment of the logical infrastructure of a grid environment in which the present invention may be implemented. While  depicts an example of general components of a grid environment, in the present figure, an example of how the general components are viewed logically within a grid environment is illustrated in a grid environment . In particular, the grid management system functions are logically dispersed into multiple GMs, such as GM , GM , and GM . Further, the virtual resource is logically dispersed into multiple resources (RSs), such as RS , RS , RS , RS , RS , and RS . It is important to note that a resource may not be a direct representation of a physical resource, but rather a logical representation of one or more physical resources and or groups of physical resources.","In the example, client system  sends a job request to GM . GM  searches for resources available to handle the job specified in the job request. In particular, GM  checks whether RS  and RS  can handle the job specified in the job request and may send queries to other GMs, such as GM  or GM . GMs  and  return reports on the availability of resources to handle the job request.","For purposes of illustrations, RS  and RS  are considered local resources or resources within the same discrete set of resources to which jobs from client system  are submitted. In the examples following, when RS  and  are not meeting performance requirements for a job from client system , then additional resources may be allocated including other resources within the same discrete set of resources, capacity on demand resources, resources from internal grids and finally resources from external grids.","More specifically, in the example, GM , RS , and RS  are part of one grid infrastructure \u201cgrid A\u201d operated by a first business that provides a first specified number of grid services for a first specified price. Then, GM , RS , and RS  are part of another grid infrastructure \u201cgrid B\u201d operated by a second business that provides a second specified number of grid services for a second specified price. When GM  sends the job request to GM  and GM , the each GM preferably reports whether the job request can be handled and a price for handling the request. In relation to client system , grids A and B may be internal grids operating within the same enterprise system as client system  or external grids.","After receiving reports on the availability of resources, GM  collects the options for handling the job and returns the options to client system . Client system  may then decide to select a preferred option and send the job to have handled according to the selected option. GM  manages the return of the results of the job to client system .","The resources utilized in the option selected by client system  form a virtual organization for handling the job. For example, if client system  selects an option to handle the job based on the option returned from GM , then a virtual organization may be formed to process the job which would include GM , GM , RS , and RS . According to an advantage of the present invention, any of the GMs may also automatically allocate additional resources to a job after it is submitted to a first selection of resources. In particular, if the resources handling a job do not meet performance specifications, then additional resources may be allocated to the virtual organization of resources formed to process the job. These performance specifications may include quality of service specifications compiled from service level objects and agreements.","With reference now to , there is depicted a block diagram of a grid manager or router (GM) that may implement the present invention. As depicted, a GM  includes a client interface  for receiving jobs. Client interface  assigns a unique identifier to each job for distribution by GM . In particular, client interface  may require authentication of the client sending the job request before the job is assigned a job identifier and transferred to decision controller .","Once a job request is received at GM , GM  preferably determines which resources are available for the job, submits the job to a first selection of resources, and monitors the resources handling the job. In particular, to perform these functions, a resource monitor  within GM  preferably monitors the availability of multiple levels of resources accessible to GM  to determine current usage levels. Then, a decision controller  within GM  preferably determines resource options to meet performance specification  designated for the job request or for the requesting client. Once decision controller  schedules and submits a job to a virtual organization of resources, initially including the a first selection of resources, then decision controller  checks the performance of the virtual organization of resources to determine if additional resources need to be allocated. In particular, decision controller  may be required to make complex decisions with respect to allocating additional resources for a particular job to maintain performance service level agreements with the client sending the job request. For example, decision controller  may decide when to allocate additional resources to a virtual organization of resources handling the job to maintain performance service level agreements specified in performance specification  for the job request.","According to one advantage of the present invention, performance specifications  may specify a resource hierarchy which designates the order in which additional resources are queried for availability to handle all or a portion of a job. As will be further described, for purposes of example, a resource hierarchy may specify an order starting with resources in a primary environment, then capacity on demand resources within a client enterprise, then additional resources within the client enterprise, grid resources within a client enterprise, and finally grid resources outside a client enterprise. It will be understood that other orders and types of resources hierarchies may be implemented.","Further, performance specifications  may include quality of service specifications. The quality of service specifications designate requirements for a particular job, client system, or other entity. The quality of service specifications may be based on service level agreements and objectives. It will be understood that other types of performance related specifications may be included in performance specifications .","Referring now to , there is depicted a block diagram of an example of a hierarchy of resources accessible to a grid manager or router for distribution of a job request. As depicted, a resource hierarchy  is accessible to a GM for handling a job request. According to an advantage of the present invention, job requests from a client system may be handled by resources within a primary or local environment. Next, job requests may be handled by additional resources accessible within the client enterprise or from external grids.","In the example, resource hierarchy  includes a client enterprise  and external grid resources . Client enterprise  may be a networked enterprise of computer systems accessible to a system located within client enterprise  or accessible to a system with rights to access client enterprise . The networked enterprise may include multiple types of systems of resource grouping from grids of server resources to networked desktop systems.","For purposes of illustration, a client system sends a job request to a GM with a primary environment of the resources indicated at reference numeral . If threshold usage is reached for the four CPU resources indicated at reference numeral , then for a job qualifying for additional resources, the next level of resources within resource hierarchy  is preferably queried. In the example, the next level of resources includes capacity on demand (COD) CPUs, such as the COD CPU indicated at reference numeral . COD CPUs and other capacity on demand resources are preferably resources that are built into a system, but not accessed until demand exceeds the current capacity of the available resources. Use of COD resources may require payment of a fee in return for an electronic key which unlocks limited or unlimited use of the resource. According to one advantage of the invention, if a capacity on demand resource is allocated for a particular job, once the capacity on demand resource is no longer needed, it is preferably deallocated.","Next, if a COD CPU is not accessible or is not sufficient to meet the job execution requirements, the GM searches whether any resources are accessible from other systems within client enterprise . For example, a CPU indicated at reference numeral  may be accessible in system  within client enterprise . System  may include, for example, other server systems, other desktop systems, and other owned or leased grid systems.","Finally, the GM searches whether any resources are accessible from external grids, such as external grids . External grids  include multiple systems of resources, such as systems  and . Multiple resources may be accessed from multiple grid systems, as indicated at reference numeral . Further, systems within external grids  may include COD resources.","Although not depicted, the GM may disperse portions of a job request across multiple levels of resources included in a virtual organization. For example, a job initially executing in the CPU resources indicated at reference numeral . When the CPU resources reach threshold operating levels, a portion of the job may be dispersed to external grids , for example, to achieve the performance levels required for the job request.","Referring now to , there is illustrated a high level logic flowchart of a process and program for managing job distribution to distributed resources. As depicted, the process starts at block  and thereafter proceeds to block . Block  depicts scheduling a job. In particular, job characteristics and eligibility for additional resources are specified during job scheduling. In the example, the job is scheduled for use of processing resources and thus the steps of the process reflect those taken for determining whether additional processing resources are required and if so, acquiring the additional processing resources. It will be understood that in alternate embodiments, a job may be scheduled for use of other types of resources including, but not limited to, applications, memory, disk space, I\/O subsystems, and networks.","Next, block  depicts submitting the job into a selection of resources in a local environment. The selection of resources in the local environment is the initial set of resources in a virtual organization for handling the job. In particular, considerations for job submission may include, but are not limited to, operating system type, kernel width, application threading, CPU requirements, memory requirements, application configurations, and other factors. In one example of submitting the job into the local client environment, a determination is made whether the job is single threaded or multi-threaded. If the job is single threaded, then the job is queued at one processor. If the job is multi-threaded, then the job is queued at multiple processors.","Thereafter, block  illustrates executing a system performance and availability check. The resource monitor, for example, may execute the system performance check that surveys the performance of the resources included in the virtual organization for handling the job. In particular, many factors or a combination of factors may be used to determine system performance including, but not limited to, the depth of the processor(s) run queue, the amount of memory available, the amount of disk space free, and the network bandwidth available. Multiple types of performance monitoring tools capable of providing performance related information may be implemented by the resource monitor including, but not limited to, International Business Machine Corporation (IBM) Performance Toolbox or invoking an operating system command, such as the \u201cvmstat\u201d command in the UNIX operating system.","Next, block  illustrates a determination whether additional processing power is required to process the current job. As previously described, this step requires a determination whether the current resource saturation of those resources monitored by the system performance check exceeds predefined thresholds for resource saturation for the job request or client system. In particular, in deciding whether additional resources are required, additional factors such as duration, type of resource saturated, and frequency of resource saturation may be taken into account. In the example, if system performance is acceptable, then no additional processing power is required and the process passes to block  where the job is executed in the resources included in the virtual organization in a normal manner. If additional processing power is required, then the process passes to block .","Block  depicts a determination whether the job is eligible for additional resources based on the priority of the job or other required qualification. In particular, the saturation levels of the resources within the virtual organization may reach levels that indicate additional processing power is required for processing the job. Not every job, however, will qualify for the addition of processing power. For example, jobs which are non-interactive and thus do not require specific performance may not be eligible for access to additional system resources. Further, if certain jobs begin to affect the performance of higher priority jobs, the job priority of a job may be reduced using tools such as a UNIX \u201cnice\u201d command. Moreover, if a job continues to operate in sub-optimal conditions even as more resources are added to the virtual organization, the job may stop qualifying for yet another level of resources. In comparison, some jobs may be designated as always valuable and granted broad access to additional resources. If the job is qualified, then the process passes to block , where a selection of additional resources will be accessed from a hierarchy of additional resources. If the job is not qualified, then the process passes to block . Block  illustrates suspending the job or only executing the job using the resources of the virtual organization, and the process returns to block .","Block  illustrates a determination whether capacity on demand processing is available. If capacity on demand processing is available, then the process passes to block . Block  depicts adding a processor for processing the job or portions of the job, and in particular a capacity on demand processor, and the process returns to block . Upon returning to block , if performance is stabilized with the addition of the resources, the job will continue executing. If however, upon returning to block , the performance remains degraded, based on job qualifications, additional resources may be added.","Alternatively, at block , if a capacity on demand processor is not available, then the process passes to block . Block  depicts a determination of whether a local processor is available. A local processor may be a processor available from within a client enterprise, for example. If a local processor is available, then the process passes to block , where the local processor is added for processing the job or portions of the job and the process returns to block . If a local processor is not available, then the process passes to block . Block  depicts submitting the job to the grid for processing, and the process ends. A job might first be submitted to an internal grid if available, and then to an external grid only if the internal grid was not available. In particular, the process starting with block  depicts one method of traversing hierarchical resources. In an alternate embodiment, the process may first determine if there are other local processors available and next determine whether there is capacity on demand processing available, for example.","With reference now to , there is illustrated a high level logic flowchart of a process and program for monitoring capacity on demand resources. As illustrated, the process starts at block  and thereafter proceeds to block . Block  depicts a determination whether a capacity on demand resource is allocated as an additional resource. If no capacity on demand resource is allocated as an additional resource, then the process iterates at block . If a capacity on demand resource is allocated as an additional resource, then the process passes to block . Block  illustrates monitoring jobs currently using the capacity on demand resource. Thereafter, block  depicts executing a system performance check. Alternatively, the results from the system performance check depicted in  may be implemented in the current process. Next, block  illustrates a determination whether the capacity on demand resource is still necessarily allocated. For example, a determination may be made whether resources are operating above thresholds and whether upcoming jobs qualify for additional capacity on demand resource. Further, a determination may be made whether the job is complete. If the capacity on demand resource is still necessarily allocated, then the process returns to block . If the capacity on demand resource is not still necessarily allocated, then the process passes to block . Block  depicts deallocating the capacity on demand resource, and the process ends.","While the invention has been particularly shown and described with reference to a preferred embodiment, it will be understood by those skilled in the art that various changes in form and detail may be made therein without departing from the spirit and scope of the invention."],"BRFSUM":[{},{}],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"BRIEF DESCRIPTION OF THE DRAWINGS","p":["The novel features believed characteristic of the invention are set forth in the appended claims. The invention itself however, as well as a preferred mode of use, further objects and advantages thereof, will best be understood by reference to the following detailed description of an illustrative embodiment when read in conjunction with the accompanying drawings, wherein:",{"@attributes":{"id":"p-0023","num":"0022"},"figref":"FIG. 1"},{"@attributes":{"id":"p-0024","num":"0023"},"figref":"FIG. 2"},{"@attributes":{"id":"p-0025","num":"0024"},"figref":"FIG. 3"},{"@attributes":{"id":"p-0026","num":"0025"},"figref":"FIG. 4"},{"@attributes":{"id":"p-0027","num":"0026"},"figref":"FIG. 5"},{"@attributes":{"id":"p-0028","num":"0027"},"figref":"FIG. 6"},{"@attributes":{"id":"p-0029","num":"0028"},"figref":"FIG. 7"},{"@attributes":{"id":"p-0030","num":"0029"},"figref":"FIG. 8"},{"@attributes":{"id":"p-0031","num":"0030"},"figref":"FIG. 9"}]},"DETDESC":[{},{}]}
