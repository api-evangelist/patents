---
title: System and method for circuit design automation
abstract: A method and system for designing an electric or electronic circuit. A method may include providing a description of a device; including at least one feature of the device in the description; adding an information pertaining to the at least one feature; configuring the description to detect a relationship between the information and the at least one feature; and generating a message conveying the relationship. The method may include generating one or more derived files. The one or more derived files may be generated or processed by a word processor. Systems based on the foregoing method are also described.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08316330&OS=08316330&RS=08316330
owner: 
number: 08316330
owner_city: 
owner_country: 
publication_date: 20091209
---

{"@attributes":{"id":"description"},"BRFSUM":[{},{}],"heading":["BACKGROUND","BRIEF SUMMARY","DETAILED DESCRIPTION"],"p":["1. Field","This disclosure is generally related to electric and electronic circuit design and in particular to tools for designing electronic devices, such as Application Specific Integrated Circuits (ASICs), Field Programmable Gate Arrays (FPGAs), boards, and systems.","2. Description of Related Art","Typical chip design involves working with traditional documents, such as documents describing a chip or a test plan for a chip. Document editors, such as word processors, generate such documents.","Several varieties of front-end input tools are available for designing a typical chip. Such front end input tools may be GUI-based (Graphical User Interface based), web-based, and language-based.","Embodiments of the present disclosure provide a method and system for designing an electric or electronic circuit. The present disclosure teaches how to make a tool to design an electric or electronic circuit, such as an ASIC or an FPGA.","Briefly described, in architecture, one embodiment of the method, among others, can be implemented as follows. The method may include providing a description of a device; including at least one feature of the device in the description; adding an information pertaining to the at least one feature; configuring the description to detect a relationship between the information and the at least one feature; and generating a message conveying the relationship.","The present disclosure can also be viewed as a system where the system may include a first processor configured to provide a description of a device; a second processor, the second processor coupled to the first processor, and the second processor being configured to include at least one feature of the device in the description; an adder, the adder coupled to the first processor, and the adder being configured to add an information pertaining to the at least one feature; a detector, the detector coupled to the first processor, and the detector being adapted to configure the description to detect a relationship between the information and the at least one feature; and a generator, the generator coupled to the first processor, and the generator being coupled to generate a message conveying the relationship.","Other systems, methods, features, and advantages of the present invention will be, or will become, apparent to a person having ordinary skill in the art upon examination of the following drawings and detailed description. It is intended that all such additional systems, methods, features, and advantages included within this description, be within the scope of the present disclosure, and be protected by the accompanying claims.","The present disclosure relates to a system and method for designing an electric or electronic circuit. The following abbreviations or acronyms may appear in the present disclosure:","VHSIC: Very High Speed Integrated Circuit,","Verilog: A hardware description language,","CSV: Comma Separated Values, typically generated by EXCEL\u00ae (Trademark of Microsoft Corporation),","OpenXML: An open data storage format using XML, where XML: eXtensible Markup Language,","C\/C++h: C and C++ are software programming languages, where h refers to the header files having constants and data structures,","OVM: Open Verification Methodology, is a hardware verification method promoted by Mentor Graphics, Inc. and Cadence Design Systems, Inc.,","VMM: Verification Methodology Manual, is a hardware verification method promoted by Synopsys, Inc.,","API: Application Programmer's Interface, and","Tcl: Tool Command Language.","As a person having an ordinary skill in the art would appreciate, an arrow entering a block or a symbol indicates an input and an arrow leaving a block or a symbol indicates an output. Similarly, connections described below may be of any electromagnetic type, such as electrical, optical, radio-frequency, and magnetic.","Further, a hardware interface or a software interface may indicate one or more registers and one or more properties of the one or more registers. The hardware interface or a software interface may indicate one or more bits of a register and one or more properties of the one or more bits of the one or more registers. The hardware interface or the software interface may indicate a sequence of steps and one or more properties of the steps related to turning on a device having an electric or electronic circuit. The hardware interface or the software interface may indicate an acceptable register value or an acceptable bit value.","A \u201cderived view\u201d may indicate one or more files generated from a document describing the device. The derived views may include an RTL description for a hardware synthesis, a C\/C++ header file for a device driver, a C\/C++ header file for a firmware and a C\/C++ header file for developing a software, a test file for describing the device and the software, and a documentation file for describing the device. All output files may be \u201cderived views\u201d but those related to a device design, such as RTL, VHDL, and Verilog files may be termed \u201cdesign views.\u201d","The present disclosure may enable a creation of a description of the device in the document, typically generated in a document editor, and insert one or more templates, described in more detail below, in the document that may detect one or more errors as information is entered in the document or in the one or more templates. Such detection of an error may modify the document in a dynamic manner. The document may drive a process to develop the device. The document editor may be capable of generating the document that may be a general-purpose document or a special-purpose document. Checks may be performed on the document for a semantic consistency. A user may have an option to generate several derived views from the document describing the device.","The present disclosure may adapt a word processor, such as a word processor program, capable of generating the document, for having an ability to add \u201ctemplates\u201d for register, reg_group, block, chip, board and system, as well as for \u201ccheck\u201d and \u201cgenerate,\u201d as described below, where templates may be tables having a predefined layout and format. \u201cEmbedded templates\u201d may be templates which may be embedded in an editable document. If data are entered in the embedded template form, an embodiment of the present disclosure may locate and process such data. Each register may have additional data such as a constraint on a value of the register such as, but not limited to, an enumerated type. Each register may have one or more additional properties such as a soft reset value or a mask. This information may be used to generate additional program code to help ensure a compliance to the constraints at run time of a simulator or the device. The constraint may be on a register or on one or more field values. The constraint may be an enumerated list, a range, or another constraint.","The present disclosure may adapt the word processor to check for a consistency as data are entered into one or more of the tables, and generate a feedback, such as a visual feedback to the user. When data may be written out, further consistency checks may be performed and an XML file may be generated. An XSLT or Tcl transformer may be used to verify the data, generate one or more addresses, one or more heading numbers, and annotate the XML file with one or more attributes. The addresses, headings, and error messages, if any, may be transmitted to the word processor, such as an editor, for display. If the derived view is to be generated, as selected by the user, another XSLT or Tcl transformation may be performed wherein one or more output files may be generated as selected by the user, optionally generating a feedback related to the one or more output files.","An embodiment of the present disclosure may be implemented in an editor, or the word processor as described above. A preferred embodiment may employ a language that is supported by a core API of the editor or the word processor. A transformation from a specification of the device, such as the document, to the one or more output files may be carried out by using XSLT as well as by using any appropriate programming or scripting language such as Tcl.",{"@attributes":{"id":"p-0032","num":"0031"},"figref":"FIG. 1","b":["100","100","102","104","106","108","110","110","116","116","112","114","112","114","116","118","110","116","118","110","110","110","132","134","136","138","140","142","120","122","124","126","128","130"]},{"@attributes":{"id":"p-0033","num":"0032"},"figref":"FIG. 2","b":["208","200","208","204","206","210","212","216","206","202","202","208","210","208","212","216","216"]},"The at least one input file  may be coupled to the at least one saved editor file  and the input reader . The semantic validator  may be coupled to an annotation generator , and the annotation generator  may be coupled to an output generator . The annotation generator  may check for overall errors in the data entered by the user in the context of a digital hardware system. Each of the semantic validator , the annotation generator , and the output generator  may be coupled to the error and annotation handler . An XSL transformer  may be coupled to the annotation generator  and the output generator . At least one XSL file  may be input to the XSL transformer . The output generator  may generate at least one output file . The output generator  may employ an appropriate XSL transformation to create at least one output file  and any errors generated in the process may be shown in the editor GUI .","The user may create the document using the editor GUI . The user may insert at least one template and may set at least one property of the at least one template. Any data entered may be validated by the semantic validator . On operating a \u201cCheck\u201d button, described below, more semantic checks may be performed, at least one annotation may be generated in the annotation generator  and fed back to the editor GUI  through the error and annotation handler . On operating a \u201cGenerate\u201d button, described below, the same process as that for the \u201cCheck\u201d may be repeated. In addition to the \u201cCheck\u201d functionality, the output generator  may get called thereby creating the appropriate files, such as the at least one output file . Any errors generated or detected during a generation process may be displayed in the editor GUI .","In the generation process, the user's description may be transformed into an XML representation. The XML representation may be run through the semantic validator , the annotation generator , and the output generator . The annotation generator  may check for at least one error, may calculate at least one address, and at least one heading which may be annotated onto an original file processed by an embodiment of the present disclosure through the error and annotation handler . That is, the original file having the specification of the device may be processed into the document by the embodiment of the present disclosure through the error and annotation handler  and components described above. An address calculation may be dynamic and error display may be restricted to the document only. For each output there may be a corresponding XSL or Tcl file.","During an output generation, the XML representation may be transformed using a specified XSL or Tcl file. Any errors generated or detected during the output generation may be annotated back to the original file.","An embodiment of the present disclosure may be implemented as a plugin into the editor. The editor may be provided additional functionality by way of a tool bar, a menu bar, and a set of templates that may be inserted in the document when appropriate buttons may be pressed, or activated in another manner known in the art, in the toolbar or items selected from the menu bar. The menu bar may be included as known in the art.",{"@attributes":{"id":"p-0039","num":"0038"},"figref":"FIG. 3","b":["300","300","302","300","300","304","306","308","310","312","314","316","318","320"]},"The configuration  may include one or more settings for the system  for selecting which output(s) may be generated. The configuration  may include one or more settings for one or more user customizations. Operating the system  button may insert a system template in the document. Operating the board  button may insert a board template in the document. Operating the chip  button may insert a chip template in the document. Operating the block  button may insert a block template in the document. Operating the reg_group  button may insert a register group template in the document. Operating the register  button may insert a register template in the document. Operating the check  button may verify a correctness of the data, show errors, if any, in the document, may calculate a data address or a register address based on a location of one or more templates, and may annotate the addresses in the template in the document. Operating the generate  button may create the one or more output files, such as the at least one output file  of , as selected by the configuration .","The templates may serve as a means for the user to create one or more entities such as the registers , register groups or the reg_groups , the blocks , the chip , the board , and the system . The user may insert the templates and may enter properties of the templates. It may be noted that there may be more than one chip , more than one board , and more than one system .","The user may create a hierarchy in the system  by using the templates. For example, all of the registers following a first block up until the next block, chip, board or system may be considered to be included in the first block. Similarly, all of the blocks following a first chip up until the next chip, board or system may be considered to be included in the first chip. A register group may be special, as the register group may have two templates, e.g., a start template and an end template. Registers and other register groups may be included in a register group. This enables a practically infinite depth in the hierarchy.","In an exemplary embodiment of the present disclosure, the hierarchy for the system  may be shown as illustrated in . The hierarchy for the system  may be a hierarchy  wherein a system  may be coupled to a board , the board  may be coupled to a chip , the chip  may be coupled to a block , wherein in a first branch, the block  may be coupled to a reg_group , the reg_group  being coupled to a reg_group  and a register , and in a second branch, the block  may be coupled to a register .",{"@attributes":{"id":"p-0044","num":"0043"},"figref":["FIG. 5","FIG. 2","FIG. 2"],"b":["500","502","504","506","506","508","224","508","224"]},{"@attributes":{"id":"p-0045","num":"0044"},"figref":["FIG. 6","FIG. 9"],"b":["601","600","601","508","606","610","601"]},"An embodiment of the present disclosure may generate one or more slave models for several industry standard buses such as AMBA-AHB\u00ae (Trademark of ARM Ltd.), Avalon\u00ae (Trademark of Altera Corporation), and any proprietary bus. A type of bus interface may be selected from a configuration pop-up window. Both VHDL and Verilog outputs may be possible. The generated logic is shown in . Bold lines may indicate multiple signals or a bus. Normal lines may indicate a single signal. Dashed lines may indicate a variable or selectable block or a variable or selectable signal.","A logic shown in the RTL bus slave  may be automatically generated. On the left side is a software-initiated register access, and on the right side is a hardware-initiated register access. It may be noted that the two register accesses may have their own clock domains. The two register accesses may be in different clock domains, i.e., each side may be driven by a separate clock. Further, clock-domain crossing circuits may be automatically generated for signals traversing the two clock domains.","An external bus  may be coupled to a bridge . The bridge  may convert the signals from the external bus  to an internal bus. A change to the external bus  may change the bridge  leaving the rest of the RTL bus slave  intact. A suitable bridge may be instantiated based on the bus chosen in a predetermined configuration, such as the configuration  shown in . If the user selects a proprietary bus, then the bridge  may not be implemented and the internal bus signals may appear on the RTL bus slave  port so that the user can instantiate a suitable bridge  between the proprietary bus and signals coupled to RTL bus slave , such as wr_stb (write strobe), rd_stb (read strobe), wr_data (write data), address (address bus), request (request), rd_data_vld (read data valid), rd wait (read wait), and rd_data (read data).","A decoder  may identify a register or a register group (reg_group), such as the reg_group  and the register  shown in , that may be accessed (read\/written) by software. The decoder  may generate appropriate signals (reg<name>_decode, regroup<name>_decode) for the register or the register group. For the register groups, which may be groups of registers or groups of memories, which may have been set as external registers  by the user, the system  may create an address port (address bus) for further address decode. The decoder  may be coupled to read_select (read select), address (address bus), rd_valid (read valid), and wr_valid (write valid).","Internal registers  through may be the registers that the embodiment of the present disclosure may generate. Appropriate ports may be provided depending on the hardware access set. For example, the data input port for a register field may be provided if and only if the register field has been marked as hardware-writeable (\u2018rw\u2019 indicating read\/write, or \u2018wo\u2019 indicating write only). As would be appreciated by a person having ordinary skill in the art, the registers may have register fields of other suitable access types, for example, write-to-set (\u2018ws\u2019) and write-to-clear (\u2018wc\u2019). Similarly, a data output port may be provided if the data output port has been marked as hardware-readable (\u2018rw\u2019 or \u2018ro\u2019). The internal registers  through may be coupled to a read-back mux , a write-mux , and <reg>_<field>_out. One or more components of the <reg>_<field>_out signals may be one or more contents of the register field read out by the hardware.","If a register or a register group is set as \u201cExternal,\u201d such as external registers  (which may also be external memories), the register or the register group may not be created by the embodiment of the present disclosure. As indicated by the arrows for the RTL bus slave  in , the RTL bus slave  may not include the external registers . Instead, an interface port may be provided so that the user may create an implementation and attach it to the RTL bus slave . This may be appropriate for special purpose registers and memories. The external registers  may be coupled to address (address bus), rd_ack (read acknowledge), wr_req (write request), wr_data (write data), rd_valid (read valid), and wr_valid (write valid).","The read-back mux  may send the software read data back to the external bus  via the bridge . The read-back mux  may multiplex the data not just from the internal registers  through but also from external registers  and external memories as well. The read-back mux  may be coupled to read_select, rd_data as output, rd_data as input, and the outputs of the internal registers  through ","A write-mux  may be created when both software and hardware may initiate a write to the same register. These two accesses may be asynchronous and in case of a conflict, the hardware side may take priority. There may be more instances of the write-mux , in a given application, as indicated by a mux and additional signals shown using dashed lines. The write-mux  may be coupled to the internal register , wr_valid, <reg>_enb, wr_data, and <reg>_<field>_in. One or more components of the <reg>_<field>_in signals may be one or more contents to be written to the register field from the hardware.","Register groups may be treated the same way as registers may be in that the register groups may be implemented internally or externally. External register groups usually may be used for external memories. However, it may be possible to generate synthesizable logic for an external register group (reg_group having an external property set to true) by selecting a \u201cDistributed decode and read-back\u201d option. The \u201cDistributed decode and read-back\u201d option may create an RTL implantation for each of the external register groups along with corresponding address decode, a read-back mux, and a pipeline stage. The \u201cDistributed decode and read-back\u201d option may enable the user to distribute the decode and read-back logic such that the timing requirements on critical signals, for example, may be met.",{"@attributes":{"id":"p-0055","num":"0054"},"figref":"FIG. 7"},{"@attributes":{"id":"p-0056","num":"0055"},"figref":"FIG. 8"},{"@attributes":{"id":"p-0057","num":"0056"},"figref":"FIG. 9"},{"@attributes":{"id":"p-0058","num":"0057"},"figref":"FIG. 10"},{"@attributes":{"id":"p-0059","num":"0058"},"figref":["FIG. 11","FIG. 11","FIG. 1","FIG. 1"],"b":["1100","1100","1100","1102","112","114","1104","1106","1108","1110","112","114"]},"The method  may further include calculating a register address. The method  may further include displaying a register address in the description of the device. In the method , the description may be at least one of an electronic document and a paper document, such as at least one of the functional specification  and the register specification  of . In the method , the providing the description may further include describing an interface of the device, such as the interfaces described in .","In the method , the describing the interface may further include describing an interface between a hardware and a software. In the method , the including the at least one feature of the device may have including at least one of a register and a bit. In the method , the adding the information may include at least one of adding a property of a bit and adding a method of modifying a bit. It may be noted here that a register may be made of one or more bits. In the method , the configuring the description may include interacting with at least one of an input file, an error checker, and an error handler. In an embodiment of the present disclosure, the error checker and the semantic validator  may be identical. In the foregoing embodiment or another embodiment of the present disclosure, the error handler and the annotation handler  may be identical. The input file may be at least one of the functional specification  and the register specification  of . In the method , the configuring the description to detect a relationship may further include detecting at least one of a consistency and an inconsistency between the information and the at least one feature. The consistency may indicate an expected behavior or a normal performance. The inconsistency may indicate an unexpected behavior or an abnormal performance.","In the method , the generating the message may further include generating at least one of an alarm, a guidance, and a suggested measure in at least one of a template, a table, and a window. The alarm, the guidance, and the suggested measure may be intended for the user to be used in modifying a performance or a functionality of an electronic device, such as an ASIC, an FPGA, a board, or a system. Further, the generating the message may include examining the at least one of a template, such as those described in , a table, and a window for validity of an information included in the at least one of the template, the table, and the window. The template may be the one of the templates related to . The generating the message may be accomplished in the at least one output file  of .","In the method , the method may be adapted to be performed in a single process of a computer operating system (OS). It may be possible to generate one or more outputs in a batch mode without a graphical interface. An example of the graphical interface may be the editor GUI . The graphical interface may include the document opened in the word processor. In the batch mode, all of the one or more outputs that may normally be generated in a GUI mode, such as that of the editor GUI , may also be generated without a need to bring up the document describing the device and press the generate  button described above. The method  may capture the specification of the device efficiently, e.g., in a concise manner, such that one or more files may be generated from the method . The method  accomplishes such a generation because an entire task may be performed in a single OS process by implementing the method  as a plug-in into the document editors such as Microsoft Word\u00ae (Trademark of Microsoft Corporation), OpenOffice.org, or FrameMaker (Trademark of Adobe Corporation).","The plug-in may be implemented in any language, supported by the Software Development Kit (SDK) of the document editor, such as Java\u00ae (Trademark of Sun Microsystems), .NET\u00ae (Trademark of Microsoft Corporation) or C or C++. When the user operates the generate button, such as the generate  button of , the same OS process that represents the editor GUI , of , checks the errors in the document, runs the semantic validator , the annotation generator , the error and annotation handler , followed by the output generator  assisted by the XSL transformer . During the generation process, errors may be shown in the editor GUI  at the appropriate location by the error and annotation handler . The foregoing takes place in the OS process running the word processor without spawning a new process.","The foregoing method  or elements of the method  could also be stored on a computer-readable storage medium having computer-executable instructions to implement the method  or the elements of the method . The computer-readable storage medium may include computer-executable instructions for providing a description of a device, including at least one feature of the device in the description, adding an information pertaining to the at least one feature, configuring the description to detect a relationship between the information and the at least one feature, and generating a message conveying the relationship.","Aspects of the present disclosure may take the form of an entirely hardware embodiment, an entirely software embodiment (including firmware, resident software, micro-code, etc.) or an embodiment combining software and hardware aspects that may all generally be referred to herein as a \u201ccircuit,\u201d a \u201cmodule,\u201d or a \u201csystem.\u201d Moreover, aspects of the present disclosure may take the form of a computer program product embodied in one or more computer readable medium(s) having computer readable program code embodied thereon.","Any combination of one or more computer readable medium(s) may be utilized. The computer readable medium may be a computer readable storage medium. A computer readable storage medium may be, for example, but not limited to, an electronic, magnetic, optical, electromagnetic, infrared, or semiconductor system, apparatus, or device, or any suitable combination of the foregoing. More specific examples of the computer readable storage medium may include: an electrical connection having one or more wires, a portable computer diskette, a hard disk, a random access memory (RAM), a read-only memory (ROM), an erasable programmable read-only memory (EPROM or Flash memory), an optical fiber, a portable compact disc read-only memory (CD-ROM), an optical storage device, a magnetic storage device, or any suitable combination of the foregoing. In the context of this disclosure, a computer readable storage medium may be any tangible medium that can contain, or store a program for use by or in connection with an instruction execution system, apparatus, or device.","Program code embodied on a computer readable medium may be transmitted using any appropriate medium, including but not limited to wireless, wireline, optical fiber cable, RF, etc., or any suitable combination of the foregoing.","Computer program code for carrying out operations for aspects of the present disclosure may be written in any combination of one or more programming languages, including an object oriented programming language such as Java, Smalltalk, C++ or the like and conventional procedural programming languages, such as the C language. The program code may execute entirely on the user's computer, partly on the user's computer, as a stand-alone software package, partly on the user's computer and partly on a remote computer or entirely on the remote computer or server. The remote computer may be connected to the user's computer through any type of network, including a local area network (LAN) or a wide area network (WAN), or the connection may be made to an external computer, e.g., through the Internet using an Internet Service Provider.","Aspects of the present disclosure have been described above with reference to flowchart illustrations and\/or block diagrams of methods, apparatus (systems) and computer program products according to embodiments of the present disclosure. It will be understood that each block of the flowchart illustrations and\/or block diagrams, and combinations of blocks in the flowchart illustrations and\/or block diagrams, may be implemented by computer program instructions. These computer program instructions may be provided to a processor of a general purpose computer, special purpose computer, or other programmable data processing apparatus to produce a machine, such that the instructions, which execute via the processor of the computer or other programmable data processing apparatus, create means for implementing the functions\/acts specified in the flowchart and\/or block diagram block or blocks.","These computer program instructions may also be stored in a computer readable medium that can direct a computer, other programmable data processing apparatus, or other devices to function in a particular manner, such that the instructions stored in the computer readable medium produce an article of manufacture including instructions which implement the function\/act specified in the flowchart and\/or block diagram block or blocks.","The computer program instructions may also be loaded onto a computer, other programmable data processing apparatus, or other devices to cause a series of operational elements to be performed on the computer, other programmable apparatus or other devices to produce a computer implemented process such that the instructions which execute on the computer or other programmable apparatus provide processes for implementing the functions or acts specified in the flowchart and\/or block diagram block or blocks.","Referring now to , which illustrates another embodiment of a system  of the present disclosure, the system  is described. The system  may include a first processor  configured to provide a description of a device, a second processor , the second processor  being coupled to the first processor , and the second processor  being configured to include at least one feature of the device in the description, an adder , the adder  being coupled to the first processor , and the adder  being configured to add an information pertaining to the at least one feature, a detector , the detector  being coupled to the first processor , and the detector  being adapted to configure the description to detect a relationship between the information and the at least one feature, and a generator , the generator  being coupled to the first processor , and the generator  being coupled to generate a message conveying the relationship. The system  may include a computer  having the computer program product . The device may be one or more of the configuration , the system , the board , the chip , the block , the reg_group , and the register  described in . Though the  shows unidirectional arrows, in a given application one or more unidirectional arrows may become a bidirectional coupling. An example of adding the information may be changing the at least one feature of the device in any manner. An example of configuring the description may be a processing of at least one of the functional specification  and the register specification  of . An example of the relationship may be a relationship pertaining to a performance, a layout, a structure, or a functionality, and the like, of the device.","In the system , the system  may further include a calculator, the calculator being coupled to the first processor , and the calculator being configured to calculate a register address. In the system , the system  may further include a display device , the display device  being coupled to the first processor , and the display device  being configured to display a register address in the description of the device. In the system , the description may be at least one of an electronic document and a paper document, such as at least one of the functional specification  and the register specification  of . In the system , the first processor  may be further configured to describe an interface of the device such as the interfaces described in .","In the system , the first processor  may be further configured to describe an interface between a hardware and a software, such as the interface(s) described in . In the system , the second processor  may be further configured to include at least one of a register and a bit, e.g., as described in . In the system , the adder  may be further configured to at least one of add a property of a bit and add a method of modifying a bit. In the system , the detector  may be further configured to interact with at least one of an input file, an error checker, and an error handler as described in . In an embodiment of the present disclosure, the error checker and the semantic validator  may be identical. In the foregoing embodiment or another embodiment of the present disclosure, the error handler and the annotation handler  may be identical. The input file may be at least one of the functional specification  and the register specification  of .","In the system , the detector  may be further configured to detect at least one of a consistency and an inconsistency between the information and the at least one feature. The consistency may indicate an expected behavior or a normal performance. The inconsistency may indicate an unexpected behavior or an abnormal performance. In the system , the generator  may be further configured to generate at least one of an alarm, a guidance, and a suggested measure in at least one of a template, a table, and a window. The alarm, the guidance, and the suggested measure may be intended for the user to be used in modifying a performance or a functionality of an electronic device, such as an ASIC, an FPGA, a board, or a system. The generator  may be further configured to examine the at least one of a template, a table, and a window for validity of an information included in the at least one of the template, the table, and the window. The template may be one of the templates related to . The generator  may be further configured to send a result of the foregoing examination to the at least one output file  of .","In the system , the first processor  may be further configured to describe an interface of the device; the second processor  may be further configured to include at least one of a register and a bit; the adder  may be further configured to at least one of add a property of a bit and add a method of modifying a bit; the detector  may be further configured to interact with at least one of an input file, an error checker, and an error handler; the detector  may be further configured to detect at least one of a consistency and an inconsistency between the information and the at least one feature; the generator  may be further configured to generate at least one of an alarm, a guidance, and a suggested measure in at least one of a template, a table, and a window; and the generator  may be further configured to examine the at least one of a template, a table, and a window for validity of an information included in the at least one of the template, the table, and the window. The input file may be at least one of the functional specification  and the register specification  of .","Further, the system  may be adapted to be controlled by a single process of a computer operating system. It may be possible to generate one or more outputs in a batch mode without a graphical interface. An example of the graphical interface may be the editor GUI . The system  may capture the specification of the device efficiently, e.g., in a concise manner, such that one or more files may be generated from the system . The system  accomplishes such a generation because an entire task may be performed in a single OS process by implementing the system  as a plug-in into the document editors such as Microsoft Word\u00ae (Trademark of Microsoft Corporation). The graphical interface may include the document opened in the word processor. In the batch mode, all of the one or more outputs that may normally be generated in a GUI mode, such as that of the editor GUI , may also be generated without a need to bring up the document describing the device and press the generate  button described above.","The plug-in may be implemented in any language, supported by the Software Development Kit (SDK) of the document editor, such as Java\u00ae (Trademark of Sun Microsystems), .NET\u00ae (Trademark of Microsoft Corporation) or C or C++. When the user operates the generate button, such as the generate  button of , the same OS process that represents the editor GUI , of , checks the errors in the document, runs the semantic validator , the annotation generator , the error and annotation handler , followed by the output generator  assisted by the XSL transformer . During the generation process, errors may be shown in the editor GUI  at the appropriate location by the error and annotation handler . The foregoing takes place without spawning a new process.","The flowchart and block diagrams in the figures illustrate the architecture, functionality, and operation of possible implementations of systems, methods and computer program products according to various embodiments of the present disclosure. In this regard, each block in the flowchart or block diagrams may represent a module, segment, or portion of code, which comprises one or more executable instructions for implementing the specified logical function(s). It will also be noted that each block of the block diagrams and\/or flowchart illustration, and combinations of blocks in the block diagrams and\/or flowchart illustration, can be implemented by special purpose hardware-based systems that perform the specified functions or acts, or combinations of special purpose hardware and computer instructions.","As used in this specification and appended claims, the singular forms \u201ca,\u201d \u201can,\u201d and \u201cthe\u201d include plural referents unless the specification clearly indicates otherwise. The term \u201cplurality,\u201d if used, includes two or more referents unless the specification clearly indicates otherwise. Further, unless described otherwise, all technical and scientific terms used herein have meanings commonly understood by a person having ordinary skill in the art to which the disclosure pertains.","As a person having ordinary skill in the art would appreciate, the elements or blocks of the methods described above could take place at the same time or in an order different from the described order.","It should be emphasized that the above-described embodiments are merely some possible examples of implementation, set forth for a clear understanding of the principles of the disclosure. Many variations and modifications may be made to the above-described embodiments of the invention without departing substantially from the principles of the invention. All such modifications and variations are intended to be included herein within the scope of this disclosure and the present invention and protected by the following claims."],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"BRIEF DESCRIPTION OF THE SEVERAL VIEWS OF THE DRAWINGS","p":["Many aspects of the disclosure can be better understood with reference to the following drawings. Components in the drawings are not necessarily to scale, emphasis instead being placed upon clearly illustrating the principles of the present invention.",{"@attributes":{"id":"p-0012","num":"0011"},"figref":"FIG. 1"},{"@attributes":{"id":"p-0013","num":"0012"},"figref":"FIG. 2"},{"@attributes":{"id":"p-0014","num":"0013"},"figref":"FIG. 3"},{"@attributes":{"id":"p-0015","num":"0014"},"figref":"FIG. 4"},{"@attributes":{"id":"p-0016","num":"0015"},"figref":"FIG. 5"},{"@attributes":{"id":"p-0017","num":"0016"},"figref":"FIG. 6"},{"@attributes":{"id":"p-0018","num":"0017"},"figref":"FIG. 7"},{"@attributes":{"id":"p-0019","num":"0018"},"figref":"FIG. 8"},{"@attributes":{"id":"p-0020","num":"0019"},"figref":"FIG. 9"},{"@attributes":{"id":"p-0021","num":"0020"},"figref":"FIG. 10"},{"@attributes":{"id":"p-0022","num":"0021"},"figref":"FIG. 11"},{"@attributes":{"id":"p-0023","num":"0022"},"figref":"FIG. 12"}]},"DETDESC":[{},{}]}
