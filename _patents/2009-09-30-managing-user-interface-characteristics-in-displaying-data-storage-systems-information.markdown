---
title: Managing user interface characteristics in displaying data storage systems information
abstract: Managing user interface characteristics in displaying data storage system information. New functionality may be provided that can effect look-and-feel skinning for OEM and client customization. Extensions to conventional Java Synth Look-and-Feel technology for support of OEM and client customization may be enabled. Multiple Synth XML files can be merged, e.g., on the fly, and form one Synth XML file. One primary Synth XML file may be provided and any Style elements defined in secondary XML files may override corresponding Style elements in the primary XML file. For example, an OEM customer can define one Button Style in a secondary (customer's) XML file, and this definition can be detected at runtime and overrides a primary XML file's Button Style, resulting in the OEM look and feel.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08473905&OS=08473905&RS=08473905
owner: EMC Corporation
number: 08473905
owner_city: Hopkinton
owner_country: US
publication_date: 20090930
---

{"@attributes":{"id":"description"},"BRFSUM":[{},{}],"heading":["BACKGROUND","SUMMARY OF THE INVENTION","DESCRIPTION OF EMBODIMENT(S)"],"p":["1. Field of the Invention","The present invention relates to managing user interface characteristics in displaying data storage system information.","2. Description of Prior Art","Information services and data processing industries in general have rapidly expanded as a result of the need for computer systems to manage and store large amounts of data. As an example, financial service companies such as banks, mutual fund companies and the like now, more than ever before, require access to many hundreds of gigabytes or even terabytes of data and files stored in high capacity data storage systems. Other types of service companies have similar needs for data storage.","Data storage system developers have responded to the increased need for storage by integrating high capacity data storage systems, data communications devices (e.g., switches), and computer systems (e.g., host computers or servers) into so-called \u201cstorage networks\u201d or \u201cStorage Area Networks\u201d (SANs.)","In general, a storage area network is a collection of data storage systems that are networked together via a switching fabric to a number of host computer systems operating as servers. The host computers access data stored in the data storage systems (of a respective storage area network) on behalf of client computers that request data from the data storage systems. For example, according to conventional applications, upon receiving a storage access request, a respective host computer in the storage area network accesses a large repository of storage through the switching fabric of the storage area network on behalf of the requesting client. Thus, via the host computer (e.g., server), a client has access to the shared storage system through the host computer. In many applications, storage area networks support hi-speed acquisitions of data so that the host servers are able to promptly retrieve and store data from the data storage system.","Conventional storage area network management applications typically include a graphical user interface (GUI) that enables a network manager to graphically manage, control, and configure various types of hardware and software resources associated with a corresponding managed storage area network. For example, one conventional storage management application generates a graphical user interface utilized by a storage administrator to graphically select, interact with, and manage local or remote devices and software processes associated with the storage area network. Based on use of the graphical user interface in combination with an input device such as a hand operated mouse and corresponding pointer displayed on a viewing screen or other display, a storage administrator is able to manage hardware and software entities such as file systems, databases, storage devices, volumes, peripherals, network data communications devices, etc., associated with the storage area network. Consequently, a storage management station and associated management software enables a storage administrator (a person responsible for managing the storage network) to manage the storage area network and its resources.","One example of this kind of graphical user interface includes a screen presentation that may include toolbars with accompanying menus and menu items as well as displays such as graphs, tables, maps or trees.","With respect to the GUI, people today use the World Wide Web for a variety of different and diverse tasks for example locating information, ordering and buying goods on-line and managing their finances. Many users expect that these applications will operate regardless of what type of computer platform is used.","Java technology helps provide a solution by allowing the creation of computer platform independent programs. Java is a registered trademark of Oracle and\/or its affiliates. Other names used herein may be trademarks of their respective owners. The Java technology includes an object oriented programming language and a platform on which to run the Java applications. Java is both a compiled and an interpreted language. The source code that has been written by the application developer is compiled into an intermediate form called a Java bytecode, which is a platform independent language. At a client machine, the java bytecodes are interpreted by the Java platform and the Java interpreter parses and runs each Java bytecode instruction on the computer. (If the Java bytecode is run as a applet, it may first be sent over the network to the client machine.)","The Java platform includes the Application Programming Interface (API), which is a large collection of ready-made software components, which provide a variety of capabilities, and the Java Virtual Machine (JVM) which will be explained in the paragraph below. Together the JVM and the API sit on top of the hardware based computer platform and provide a layer of abstraction between the Java program and the underlying hardware.","The JVM is made up of software, which can run a Java program on a specific computer platform of a client machine. Before a Java program can be run on a JVM, the Java program must first be translated into a format that the JVM recognizes, which is called a Java class file format. The Java class file format contains all the information needed by a Java runtime system to define a single Java class.","The creation of Java GUIs is currently implemented with the Java Swing package. Previously, the Abstract Windows Toolkit (AWT) library was available for working with graphics. This package contains a simple set of classes such as Buttons, TextField, Label and others. A more advanced set of classes is contained in the later introduced library called Swing. Swing, like AWT, is a package that also includes buttons, text fields, and other classes for providing window controls.","In today's web server environment, many alternatives are provided for an application provided by a web server to interact with a user at a client machine. One alternative may include downloading a Java applet from a web server to a client. The Java applet typically includes library calls from the Java Platform software development toolkit (SDK). The Java applet contains computer instructions written in the Java language which are executed by a JVM resident on the client machine to interact with a user of the client machine. Executing such computer instructions on the client machine lowers the capacity requirements of a web server and the bandwidth to communicate the results of those instructions from the web server to the client. When a Java applet renders user interface screens on a client machine, it typically calls a class named LookAndFeel to make each user interface screen rendered by the Java applet consistent with other user interface screens generated by the same Java applet. Utilizing the LookAndFeel class, for example, a Java applet may readily set the foreground, background, and font properties for each screen the Java applet renders to the user.","Each LookAndFeel class has a list of User Interface Defaults (UI defaults) used to initialize Java components with defaults such as default fonts, colors, icons, and borders. For the UI defaults, a large hash table UIDefaults is provided which can be accessed using a getDefaults( ) method. When initialized, the LookAndFeel class gets its entire definition from a single XML file config.xml and initially populates the UIDefaults table based on the contents of the XML file.","A getDefaults( ) method can be called on a LookAndFeel object. Entries in the hash table use String keys and values of types such as type Boolean, Integer, String, Border, Color, Icon, and Font. A generic get( ) method on UIDefaults returns an Object value. If a new value is put into the table using a defaults.put method before components are constructed, the new value can affect how those components are initialized. Thus, changing a default value in the table only affects future component construction, and does not affect not components already built and initialized.","A method is used in managing user interface characteristics in displaying data storage system information. A user editable file is provided that includes a definition that affects a look and feel of a user interface of a Java application. Based on the user editable file, Java technology is driven to update only a subset of a Java user interface defaults table for use with the Java application.","Described below is a technique for use in managing user interface characteristics in displaying data storage system information. In accordance with the technique, new functionality may be provided that, in at least one implementation, can effect look and feel skinning for OEM and client customization. In particular, the technique helps enable an extension to conventional Java Synth Look and Feel technology for support of OEM and client customization.","Conventionally, as is known in the art, Java Synth uses a single XML file config.xml which defines how components should be painted. The XML file includes Style elements which are bound to individual regions such as Buttons and TextField. The Style elements define how individual parts of the component should be painted, including, for example, background and border.","By contrast, in accordance with the technique herein, multiple Synth XML files can be merged, e.g., on the fly, and form one Synth XML file. In at least one implementation, one primary Synth XML file is provided and any Style elements defined in secondary XML files override corresponding Style elements in the primary XML file. For example, an OEM customer can define one Button Style in a secondary (customer's) XML file, and this definition is detected at runtime and overrides a primary XML file's Button Style, resulting in the OEM look and feel.","Also in accordance with the technique, OEM customization can be achieved through use of a properties file. The properties file is read, and based on a type of an object and a value defined in the properties file, a UIDefaults table is updated which gives the OEM customer the desired look and feel. An example of definitions in a properties file is provided below:","Button.Background=<Color>Blue","Table.Border=<Border>4","Table.RowHight=<Integer>20","Referring now to , shown is an example of an embodiment of a computer system that may be used in connection with performing the technique described herein. The computer system  includes one or more data storage systems  connected to host systems -through communication medium . The system  also includes a management system  connected to one or more data storage systems  through communication medium . In this embodiment of the computer system , the management system , and the N servers or hosts may access the data storage systems , for example, in performing input\/output (I\/O) operations, data requests, and other operations. The communication medium  may be any one or more of a variety of networks or other type of communication connections as known to those skilled in the art. Each of the communication mediums  and  may be a network connection, bus, and\/or other type of data link, such as a hardwire or other connections known in the art. For example, the communication medium  may be the Internet, an intranet, network or other wireless or other hardwired connection(s) by which the host systems may access and communicate with the data storage systems , and may also communicate with other components (not shown) that may be included in the computer system . In one embodiment, the communication medium  may be a LAN connection and the communication medium  may be an iSCSI or fibre channel connection.","Each of the host systems -and the data storage systems  included in the computer system  may be connected to the communication medium  by any one of a variety of connections as may be provided and supported in accordance with the type of communication medium . Similarly, the management system  may be connected to the communication medium  by any one of variety of connections in accordance with the type of communication medium . The processors included in the host computer systems -and management system  may be any one of a variety of proprietary or commercially available single or multi-processor system, such as an Intel-based processor, or other type of commercially available processor able to support traffic in accordance with each particular embodiment and application.","It should be noted that the particular examples of the hardware and software that may be included in the data storage systems  are described herein in more detail, and may vary with each particular embodiment. Each of the host computers -, the management system  and data storage systems may all be located at the same physical site, or, alternatively, may also be located in different physical locations. In connection with communication mediums  and , a variety of different communication protocols may be used such as SCSI, Fibre Channel, iSCSI, and the like. Some or all of the connections by which the hosts, management system, and data storage system may be connected to their respective communication medium may pass through other communication devices, such as a Connectrix or other switching equipment that may exist such as a phone line, a repeater, a multiplexer or even a satellite. In one embodiment, the hosts may communicate with the data storage systems over an iSCSI or fibre channel connection and the management system may communicate with the data storage systems over a separate network connection using TCP\/IP. It should be noted that although  illustrates communications between the hosts and data storage systems being over a first connection, and communications between the management system and the data storage systems being over a second different connection, an embodiment may also use the same connection. The particular type and number of connections may vary in accordance with particulars of each embodiment.","Each of the host computer systems may perform different types of data operations in accordance with different types of tasks. In the embodiment of , any one of the host computers -may issue a data request to the data storage systems  to perform a data operation. For example, an application executing on one of the host computers -may perform a read or write operation resulting in one or more data requests to the data storage systems .","The management system  may be used in connection with management of the data storage systems . The management system  may include hardware and\/or software components. The management system  may include one or more computer processors connected to one or more I\/O devices such as, for example, a display or other output device, and an input device such as, for example, a keyboard, mouse, and the like. A data storage system manager may, for example, view information about a current storage volume configuration on a display device of the management system .","An embodiment of the data storage systems  may include one or more data storage systems. Each of the data storage systems may include one or more data storage devices, such as disks. One or more data storage systems may be manufactured by one or more different vendors. Each of the data storage systems included in  may be inter-connected (not shown). Additionally, the data storage systems may also be connected to the host systems through any one or more communication connections that may vary with each particular embodiment and device in accordance with the different protocols used in a particular embodiment. The type of communication connection used may vary with certain system parameters and requirements, such as those related to bandwidth and throughput required in accordance with a rate of I\/O requests as may be issued by the host computer systems, for example, to the data storage systems .","It should be noted that each of the data storage systems may operate stand-alone, or may also be included as part of a storage area network (SAN) that includes, for example, other components such as other data storage systems.","Each of the data storage systems of element  may include a plurality of disk devices or volumes. The particular data storage systems and examples as described herein for purposes of illustration should not be construed as a limitation. Other types of commercially available data storage systems, as well as processors and hardware controlling access to these particular devices, may also be included in an embodiment.","Servers or host systems, such as -, provide data and access control information through channels to the storage systems, and the storage systems may also provide data to the host systems also through the channels. The host systems do not address the disk drives of the storage systems directly, but rather access to data may be provided to one or more host systems from what the host systems view as a plurality of logical devices or logical volumes (LVs). The LVs may or may not correspond to the actual disk drives. For example, one or more LVs may reside on a single physical disk drive. Data in a single storage system may be accessed by multiple hosts allowing the hosts to share the data residing therein. An LV or LUN (logical unit number) may be used to refer to one of the foregoing logically defined devices or volumes.","Referring now to , shown is an example  of components that may be used in connection with the technique described herein, particularly in connection with providing a Java based GUI for use with management system . In at least one implementation, Lookandfeel class , primary XML file , and UIDefaults table  are conventional Java functionality that are used as described herein. In accordance with the technique, before class  is initiated, XML file logic  may be used to update the contents of file  based on secondary XML file  as described herein. In such a case, when class  is initiated, it gets its entire definition from file  and populates table  based on the updated contents of file .","Also in accordance with the technique, properties file logic  may be used to cause Lookandfeel class  to update UIDefaults table  based on information from properties file  as described herein. Once logic  uses a defaults.put method of class  to put a new value or object into table , the new value or object affects how related components are initialized thereafter.",{"@attributes":{"id":"p-0038","num":"0037"},"figref":"FIGS. 3-4","b":["115","105","115","130","130","125","115","130","115","105"]},"During the merge, logic replaces <bind . . . > elements that are present in file  with corresponding new elements that are present in file  and adds a new <style> element to file , which is used to change the font and size of the font on a button.","If there are no files , by default file  is used as normal to create the look and feel.",{"@attributes":{"id":"p-0041","num":"0040"},"figref":["FIG. 3","FIG. 3"],"b":"130"},"The font and font size of the button text can be changed, e.g., by the OEM customer, by providing an XML code snippet such as the following in file .","<synth>","<style id=\u201cButton Style\u201d>\n\n","<\/style>","<bind style=\u201cButton Style\u201d type=\u201cregion\u201d key=\u201cButton\u201d\/>","<\/synth>","Once the application starts up, it picks up file  and merges it with file . In particular, logic  replaces the <bind style=\u201cButton Style\u201d type=\u201cregion\u201d key=\u201cButton\u201d\/> tag in file  with the new one provided and adds the new <style . . . > tag content provided.",{"@attributes":{"id":"p-0047","num":"0054"},"figref":"FIG. 4","b":"130"},{"@attributes":{"id":"p-0048","num":"0055"},"figref":["FIGS. 5-6","FIGS. 5-6"],"b":["135","135","110"]},"Without file , when the application is run, the collapsible pane has the down arrow image when it is collapsed, as shown in .","To change the down arrow of the collapsed collapsible pane to the ellipses image, a CollapsiblePane.downIcon property is added, e.g., by an OEM or user, in file , e.g., as follows:","CollapsiblePane.downIcon=image:\/com\/emc\/ecuelaf\/resources\/images\/SplitterThumb.gif","In at least one implementation, file  is named CustomLAF.properties and is expected to be found in a resources folder or directory as follows:","com\/emc\/services\/lafservice\/resources\/CustomLAF.properties",{"@attributes":{"id":"p-0052","num":"0059"},"figref":"FIG. 6","b":["110","105","135"]},"One or more implementations may have one or more of the following features. Logic  and\/or logic  may expose only a limited subset of objects or values of table  to change, to help avoid corruption or other undesirable results. Logic  and\/or logic  may expose any component of the application to change, e.g., scroll bar. The properties file may be structured to be accessed by key and value. Changes to table  may be made in a particular order or priority. For example, a first set of changes based on file  may be made before a second set of changes based on file , so that the second set can override the first set. In another example, a second properties file may be provided, e.g., by a customer or end user, and changes based on the second properties file may be made after changes based on file .","While the invention has been disclosed in connection with preferred embodiments shown and described in detail, their modifications and improvements thereon will become readily apparent to those skilled in the art. Accordingly, the spirit and scope of the present invention should be limited only by the following claims."],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"BRIEF DESCRIPTION OF THE DRAWINGS","p":["Features and advantages of the present invention will become more apparent from the following detailed description of exemplary embodiments thereof taken in conjunction with the accompanying drawings in which:",{"@attributes":{"id":"p-0020","num":"0019"},"figref":"FIG. 1"},{"@attributes":{"id":"p-0021","num":"0020"},"figref":"FIG. 2"},{"@attributes":{"id":"p-0022","num":"0021"},"figref":"FIGS. 3-6"}]},"DETDESC":[{},{}]}
