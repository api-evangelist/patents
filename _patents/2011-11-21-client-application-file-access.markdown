---
title: Client application file access
abstract: One or more techniques and/or systems are disclosed for providing a client application with access to a file based upon a local offline version of the file and/or web online version of the file. That is, a file may be shared/synchronized from a remote source, such as a web storage service. A web online version of the file may be maintained by the web storage service, while local offline versions of the file may be stored at client devices. A sync module comprising knowledge of the local and/or web versions of the file may provide a client application with access to the file based upon the local and/or web version of the file. The sync module may also delegate synchronization authorization to the client application given that the client application may comprise sophisticated file handling functionality.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09355115&OS=09355115&RS=09355115
owner: Microsoft Technology Licensing, LLC
number: 09355115
owner_city: Redmond
owner_country: US
publication_date: 20111121
---

{"@attributes":{"id":"description"},"BRFSUM":[{},{}],"heading":["BACKGROUND","SUMMARY","DETAILED DESCRIPTION"],"p":["Many users own a variety of computing devices, such as laptops, desktops, smart phones, and\/or other devices. It may be desirable to share data between such devices. In one example, a web storage service may allow a user to upload files to online storage, and synchronize such files between various devices. In particular, a synchronization service, such as a sync module, may be installed on a user device. When files to be shared are available (e.g., not presently being accessed by a client application), the synchronization service may upload the shared files to the web storage service. Unfortunately, the synchronization service may comprise inefficient and\/or inadequate file handling capabilities, at least as compared to a client application. For example, the synchronization service may comprise generic upload\/download functionality that may not be tailored for particular types of files (e.g., whereas a word processing client application may be able to save changes to a text document in a desired, efficient, etc. manner, for example). Nevertheless, while a client application may comprise sophisticated file handling functionality, the client application (unlike the synchronization service) may, however, be unaware of the existence of the synchronization service, synchronization techniques that may be in place and\/or the availability of offline access.","This Summary is provided to introduce a selection of concepts in a simplified form that are further described below in the Detailed Description. This Summary is not intended to identify key factors or essential features of the claimed subject matter, nor is it intended to be used to limit the scope of the claimed subject matter.","Among other things, one or more systems and\/or techniques for providing a client application with access to a file, delegating synchronization authorization to the client application, and\/or providing the client application with offline access to the file are disclosed herein. A client device hosting a client application may be associated with a sync module configured to access a web storage service hosting online storage. The online storage may be configured to store web online versions of shared files. The sync module may be configured to receive notifications from the web storage service regarding the web online versions of shared files (e.g., a notification that a web online version of a file was added, removed, and\/or modified). The sync module may be configured to manage local offline versions of shared files (e.g., the sync module may add, remove, and\/or modify local copies of files shared through the web storage service). In this way, the sync module may comprise knowledge, such as synchronization information, associated with local offline versions of files and\/or web online versions of files (e.g., where client applications do not possess such knowledge). Accordingly, the sync module may provide synchronization information to a client application (e.g., a URL of a web online version of a file, a local file path of a local offline version of the file, synchronization authorization, etc.), such that the client application may perform synchronization of files, access a file based upon a local offline version of the file and\/or a web online version of the file, and\/or access shared files even if the web storage service and\/or the client device may be offline (e.g., offline access may be provided to previously synchronized files). It may be appreciated that synchronization of files performed by the client application may range from merely transferring file data (e.g., transferring files up to and\/or down from online storage) to performing sophisticated synchronization functionality (e.g., synchronizing content between files). That is, synchronization and\/or the like may merely comprise transferring data as opposed to synchronizing data files, although it could, of course, comprise synchronizing as well.","In one example of providing a client application with access to a file, a request from a client application to access a file may be received. For example, a word processor may generate a request comprising a local file path associated with a local offline version of a shared text file, a URL associated with a web online version of the shared text file, and\/or a general inquiry requesting an enumeration of shared text files. If a local offline version of the file is stored locally, then the client application may be provided with access to the local offline version as the file (e.g., the word processor may be provided with access to a text file derived at least in part from a local offline version of the text file). In one example, access may be provided to the local offline version of the file even if a web online version of the file is unavailable (e.g., offline). If a web online version of the file is stored remotely, then the client application may be provided with access to the web online version of the file as the file (e.g., the word processor may be provided with access to the text file derived at least in part from a web online version of the text file).","In one example, the client application may be provided with access to both the local offline version of the file and the web online version of the file as the file (e.g., the word processor may be provided with access to the text file derived from at least some of the local offline version of the text file and at least some of the web online version of the text file, such that the text file accessed by the word processor may be associated with both the local offline version of the text file and the web online version of the text file). In this way, interactions with and\/or modifications to the file by the client application may be synchronized between the file accessed by the client application, the local offline version of the file, and\/or the web online version of the file. For example, synchronization may be performed real-time while the client application is accessing the file. Such real-time synchronization may enable co-authoring between the file and a corresponding file accessed by a remote client application. For example, the file and\/or the corresponding file may be updated in real-time based upon the web online version of the file accessible to the client application and\/or the remote client application.","In one example of delegating synchronization authorization to a client application, a client application configured to interact with a particular file type with which a file is formatted may be identified (e.g., a word processor may be configured to interact with text files formatted as a .txt file type). The client application may comprise sophisticated file handling functionality with regard to the file type. For example, a word processor may be configured to merely save changes made to an existing text file, as opposed to resaving the entire text file. Because a plethora of different file types may be shared by the web storage service (e.g., .txt text files, .bmp image files, .zip compressed files, .xls spreadsheet files, etc.), the sync module may not comprise adequate file handling functionality with regard to the various file types (e.g., the sync module may merely comprise generic download\/upload functionality). Accordingly, it may be efficient for the sync module to delegate synchronization authorization to the client application so that the client application may synchronize a file accessed by the client application, a local offline version of the file, and\/or a web online version of the file. It may be appreciated that aspects herein generally promote, leverage, etc. strengths, advantages, etc. associated with synchronization services and client applications, for example, while mitigating, circumventing, etc. weaknesses, disadvantages, etc. associated with synchronization services and client applications, for example. It may be appreciated that in one example, delegating synchronization authorization may comprise merely delegating the task of synchronization (e.g., file transfer) to the client application (e.g., as opposed to performing extensive security functionality to grant authorization access to files). That is, (unless indicated to the contrary) even though delegating synchronization \u2018authorization\u2019 and\/or the like may be used herein throughout, the instant application, including the scope of the appended claims, is not meant to be limited to and\/or require authorizing actions (e.g., requesting and\/or verifying credentials, etc.).","To the accomplishment of the foregoing and related ends, the following description and annexed drawings set forth certain illustrative aspects and implementations. These are indicative of but a few of the various ways in which one or more aspects may be employed. Other aspects, advantages, and novel features of the disclosure will become apparent from the following detailed description when considered in conjunction with the annexed drawings.","The claimed subject matter is now described with reference to the drawings, wherein like reference numerals are generally used to refer to like elements throughout. In the following description, for purposes of explanation, numerous specific details are set forth in order to provide a thorough understanding of the claimed subject matter. It may be evident, however, that the claimed subject matter may be practiced without these specific details. In other instances, structures and devices are illustrated in block diagram form in order to facilitate describing subject matter.","Today, data is commonly shared between computing devices. For example, a user may share photos between a desktop device and a smart phone using online storage hosted by a web storage service. Synchronization of the shared photos may be provided by a sync module on the desktop device and the smart phone. Unfortunately, if the web storage service is unavailable (e.g., offline), then the user may be unable to access the shared photos stored within the online storage from the desktop device and\/or the smart phone. Additionally, the sync module may be unfamiliar with the file type associated with the shared photos (e.g., the sync module may merely comprise generic upload\/download functionality), whereas a photo client application on the desktop device and\/or smart phone may be better suited for handling storage\/synchronization functionality associated with the shared photos. However, the photo client application may be unaware of the web storage service and\/or the synchronization policy that may be in place. Thus, without leveraging the sophisticated file handling functionality of the photo client application, the sync module may be inefficient at synchronizing the shared photos.","Accordingly, among other things, one or more systems and\/or techniques for providing a client application with access to a file, delegating synchronization authorization to the client application, and\/or providing the client application with offline access to the file are provided herein.","One embodiment of providing a client application with access to a file is illustrated by an exemplary method  in . At , the method starts. At , a request from a client application to access a file may be received. In one example of receiving the request, the request may comprise an inquiry to a sync module about available files shared by a web storage service. The sync module may determine one or more file types that the client application may be able to understand and\/or interact with (e.g., the client application may provide file type compatibility information to the sync module). In this way, the client application may be provided with access to one or more files formatted according to file types corresponding to the identified file types. In another example of receiving the request, the request may comprise a local file path associated with the file shared by the web storage service. In another example, the request may comprise a URL associated with the file shared by the web storage service. In another example, the request may comprise a resourceID identifying the file (e.g., the resourceID may uniquely identify the file with the sync module, the web storage service, and\/or the client application). It may be appreciated that in one example, the sync module may comprise knowledge regarding files shared by the web storage service and\/or locally stored versions of shared files, whereas the client application may lack such knowledge.","At , if a local offline version of the file is stored locally, then the client application may be provided with access to the local offline version as the file. For example, a local file path associated with the local offline version of the file may be provided to the client application (e.g., the sync module may derive the local file path based upon a URL associated with the web online version that may have been specified within the request by the client application). In this way, the client application may open the file from the local offline version using the local file path. In one example, if the file is designated to be stored locally, but is not yet stored locally, then the sync component may provide the client application with a local path at which a new local offline version of the file is to be created by the client application. At , if a web online version of the file is stored remotely (e.g., within online storage hosted by the web storage service), then the client application may be provided with access to the web online version of the file as the file. For example, a URL associated with the web online version of the file may be provided to the client application (e.g., the sync module may derive the URL based upon a local file path associated with the local offline version that may have been specified within the request by the client application). In this way, the client application may open the file form the web online version using the URL. In one example, if the file is designated to be stored remotely, but is not yet stored remotely, then the sync component may provide the client application with a remote path at which a new remote version of the file is to be created by the client application.","In one example, the client application may be provided with merely access to the local offline version as the file because the web online version of the file may not be available (e.g., offline) and\/or may be inefficient for the client application to access. In another example, the client application may be provided with merely access to the web online version as the file because the web online version may be an up-to-date version of the file and\/or a local offline version of the file may be unavailable. In another example, the client application may be provided with access to both the local offline version of the file and the web online version of the file as the file. That is, the file accessed by the client application may be derived from and\/or synchronously associated with at least some of the local offline version of the file and at least some of the web online version of the file. In this way, the file accessed by the client application, the local offline version of the file, and\/or the web online version of the file may be synchronized. Such synchronization may, for example, enable co-authoring of the file between the client application and a remote client application accessing a corresponding file. For example, the file and the corresponding file may be synchronized through the web online version of the file (e.g., modifications made to the web online version of the file by the remote client application may be detected by the sync module, and the sync module may instruct the client application to synchronize the file with the web online version of the file).","The client application may comprise sophisticated functionality for handling certain file types, whereas the sync module may not comprise such advanced functionality (e.g., the sync module may merely comprise generic upload\/download functionality due to the wide variety of file types that may be associated with shared files). Accordingly, synchronization authorization may be delegated to the client application. In one example, the client application may be provided with a local file path associated with the local offline version of the file, and may be delegated synchronization authorization to synchronize the file accessed by the client application with the local offline version of the file using the local file path. In another example, the client application may be provided with a URL associated with the web online version of the file, and may be delegated synchronization authorization to synchronize the file accessed by the client application with the web online version of the file using the URL. In another example, the client application may be delegated synchronization authorization to synchronize the file accessed by the client, the local offline version of the file, and\/or the web online version of the file. In this way, file handling functionality provided by the client application may be leveraged to provide enhanced synchronization.","Because the sync module may subscribe to notifications from the web storage service, the sync module may provide a notification to the client application that the web online version of the file was modified, and may instruct the client application to synchronize the file accessed by the client application and the web online version of the file. Because the sync module may monitor local storage of shared local files, the sync module may instruct the client application to synchronize the file accessed by the client application and the local offline version of the file. At , the method ends.","One embodiment of delegating synchronization authorization to a client application is illustrated by an exemplary method  in . At , the method starts. At , a client application configured to interact with a particular file type with which a file is formatted may be identified. For example, an operating system registry may be consulted to determine whether the client application can open files formatted according to the file type (e.g., a registry key may indicate that a word processor may be capable of opening a .txt file). In another example, an installation of the client application, an un-installation of the client application, a modification to the client application and\/or a file type (e.g., .txt and .docx (e.g., but not .jpg)) associated with the client application may be identified using one or more registry keys within the operating system registry. At , synchronization authorization may be delegated to the client application to synchronize the file accessed by the client application and a local offline version of the file and\/or a web online version of the file. In one example, the file may be identified by a resourceID (e.g., the resourceID may uniquely identify the file with the sync module, the web storage service, and\/or the client application).","In one example, the client application may be provided with a local file path associated with the local offline version of the file, and may be delegated synchronization authorization to synchronize the file accessed by the client application with the local offline version of the file using the local file path. In another example, the client application may be provided with a URL associated with the web online version of the file, and may be delegated synchronization authorization to synchronize the file accessed by the client application with the web online version of the file using the URL. In another example, the client application may be delegated synchronization authorization to synchronize the file accessed by the client, the local offline version of the file, and\/or the web online version of the file. In this way, file handling functionality provided by the client application may be leveraged to provide enhanced synchronization. At , the method ends.","One embodiment of providing a client application with offline access to a file is illustrated by an exemplary method  in . At , the method starts. At , a request to access a file may be received from a client application. In one example, the request may comprise a resourceID identifying the file (e.g., the resourceID may uniquely identify the file with the sync module, the web storage service, and\/or the client application). Optionally, at , unavailability of a web online version of the file may be determined (e.g., a web storage service hosting online storage comprising the web online version of the file may be inaccessible). It may be appreciated that in one example, a sync module may have previously stored a local offline version of the file (e.g., the sync module may have downloaded the web online version of the file as the local offline version of the file stored locally to the client application). At , the client application may be provided with access to the local offline version of the file. For example, a local file path associated with the local offline version of the file may be provided to the client application (e.g., the request may comprise a URL associated with the web online version of the file, and the local file path may be determined based upon the URL (e.g., because the online version is not available)). At , the method ends.",{"@attributes":{"id":"p-0029","num":"0028"},"figref":"FIG. 4","b":["400","410","400","416","416","408","402","416","408","404","416","420","422","410","424","404","404","416","410"]},"Because the sync module  may not comprise sophisticated functionality to handle particular types of files (e.g., functionality used to determine what data within a file to synchronize), the sync module  may be configured to provide sync information  to the client application . The client application  may comprise sophisticated functionality for handling files formatted according to particular file types. In this way, the client application  may perform synchronization, such as synchronization  and\/or , between a file  accessed by the client application , the web online version of the file , and\/or the local offline version of the file . The sync module  may provide synchronization information to the client application  (e.g., information regarding the existence of the sync module , where local offline versions of files are stored, etc.). In one example, the sync module  may provide a URL associated with the web online version of the file  and synchronization authorization within the sync information , which may allow the client application  to synchronize  the file  and the web online version of the file , for example. In another example, the sync module  may provide a local file path associated with the local offline version of the file  and synchronization authorization within the sync information , which may allow the client application  to synchronize  the file  and the local offline version of the file . In another example, the sync module  may provide the local file path, the URL, and\/or synchronization authorization within the sync information , which may allow the client application  to synchronize the file , the local offline version of the file , and\/or the web online version of the file . The sync module  may poll the client application  for information regarding synchronization progress, success, and\/or failure (e.g., the client application  may notify the sync module  of new sync events that may be available for polling, which may provide for, among other things, an increase in sync module UI updates with little to no additional overhead, for example). In this way, the client application  may perform robust synchronization on behalf of the sync module  (e.g., because the sync module  may not be equipped, configured, etc. to handle sophisticated synchronization.",{"@attributes":{"id":"p-0031","num":"0030"},"figref":"FIG. 5","b":["500","508","514","500","510","510","502","510","504","504","510","516","508","518"]},"The sync module  may be configured to provide sync information , such as a URL associated with the web online version of the file  and\/or a local file path associated with the local offline version of the file , to the client application . In this way, the sync module  may provide the client application  with access  to the local offline version of the file  as the file  and\/or with access  to the web online version of the file  as the file . The client application  may utilize the sync information  when accessing the file . For example, the file  may be opened by the client application  utilizing at least some of the web online version of the file  and\/or at least some of the local offline version of the file .",{"@attributes":{"id":"p-0033","num":"0032"},"figref":"FIG. 6","b":["600","608","614","600","610","610","602","610","604","604","610","616","608","610","604","616","618","610","608","614","618"]},"In one example, the sync module  may receive a request from the client application  to access to the file . The sync module  may provide the client application  with a local file path  associated with the local offline version of the file . Because the remote source  and\/or the web online version of the file  may be offline  (e.g., unavailable to the client application ), the sync module  may merely provide the local file path  to the client application . The client application  may thus access  the local offline version of the file  as the file  using the local file path . In this way, the client application  may be provided with offline access to the file .",{"@attributes":{"id":"p-0035","num":"0034"},"figref":"FIG. 7","b":["700","702","704","704","710","712","704","706","710","708","712","710","704","714","704","712","704","716","704","714","718","704","710","712","710","714","712","716","712","716","714","706","708","704"]},"Still another embodiment involves a computer-readable medium comprising processor-executable instructions configured to implement one or more of the techniques presented herein. An exemplary computer-readable medium that may be devised in these ways is illustrated in , wherein the implementation  comprises a computer-readable medium  (e.g., a CD-R, DVD-R, or a platter of a hard disk drive), on which is encoded computer-readable data . This computer-readable data  in turn comprises a set of computer instructions  configured to operate according to one or more of the principles set forth herein. In one such embodiment , the processor-executable computer instructions  may be configured to perform a method , such as at least some of the exemplary method  of , at least some of exemplary method  of , and\/or at least some of the exemplary method  of , for example. In another such embodiment, the processor-executable instructions  may be configured to implement a system, such as at least some of the exemplary system  of , at least some of exemplary system  of , and\/or at least some of exemplary system  of , for example. Many such computer-readable media may be devised by those of ordinary skill in the art that are configured to operate in accordance with the techniques presented herein.","Although the subject matter has been described in language specific to structural features and\/or methodological acts, it is to be understood that the subject matter defined in the appended claims is not necessarily limited to the specific features or acts described above. Rather, the specific features and acts described above are disclosed as example forms of implementing the claims.","As used in this application, the terms \u201ccomponent,\u201d \u201cmodule,\u201d \u201csystem\u201d, \u201cinterface\u201d, and the like are generally intended to refer to a computer-related entity, either hardware, a combination of hardware and software, software, or software in execution. For example, a component may be, but is not limited to being, a process running on a processor, a processor, an object, an executable, a thread of execution, a program, and\/or a computer. By way of illustration, both an application running on a controller and the controller can be a component. One or more components may reside within a process and\/or thread of execution and a component may be localized on one computer and\/or distributed between two or more computers.","Furthermore, the claimed subject matter may be implemented as a method, apparatus, or article of manufacture using standard programming and\/or engineering techniques to produce software, firmware, hardware, or any combination thereof to control a computer to implement the disclosed subject matter. The term \u201carticle of manufacture\u201d as used herein is intended to encompass a computer program accessible from any computer-readable device, carrier, or media. Of course, those skilled in the art will recognize many modifications may be made to this configuration without departing from the scope or spirit of the claimed subject matter.",{"@attributes":{"id":"p-0040","num":"0039"},"figref":["FIG. 9","FIG. 9"]},"Although not required, embodiments are described in the general context of \u201ccomputer readable instructions\u201d being executed by one or more computing devices. Computer readable instructions may be distributed via computer readable media (discussed below). Computer readable instructions may be implemented as program modules, such as functions, objects, Application Programming Interfaces (APIs), data structures, and the like, that perform particular tasks or implement particular abstract data types. Typically, the functionality of the computer readable instructions may be combined or distributed as desired in various environments.",{"@attributes":{"id":"p-0042","num":"0041"},"figref":["FIG. 9","FIG. 9"],"b":["910","912","912","916","918","918","914"]},"In other embodiments, device  may include additional features and\/or functionality. For example, device  may also include additional storage (e.g., removable and\/or non-removable) including, but not limited to, magnetic storage, optical storage, and the like. Such additional storage is illustrated in  by storage . In one embodiment, computer readable instructions to implement one or more embodiments provided herein may be in storage . Storage  may also store other computer readable instructions to implement an operating system, an application program, and the like. Computer readable instructions may be loaded in memory  for execution by processing unit , for example.","The term \u201ccomputer readable media\u201d as used herein includes computer storage media. Computer storage media includes volatile and nonvolatile, removable and non-removable media implemented in any method or technology for storage of information such as computer readable instructions or other data. Memory  and storage  are examples of computer storage media. Computer storage media includes, but is not limited to, RAM, ROM, EEPROM, flash memory or other memory technology, CD-ROM, Digital Versatile Disks (DVDs) or other optical storage, magnetic cassettes, magnetic tape, magnetic disk storage or other magnetic storage devices, or any other medium which can be used to store the desired information and which can be accessed by device . Any such computer storage media may be part of device .","Device  may also include communication connection(s)  that allows device  to communicate with other devices. Communication connection(s)  may include, but is not limited to, a modem, a Network Interface Card (NIC), an integrated network interface, a radio frequency transmitter\/receiver, an infrared port, a USB connection, or other interfaces for connecting computing device  to other computing devices. Communication connection(s)  may include a wired connection or a wireless connection. Communication connection(s)  may transmit and\/or receive communication media.","The term \u201ccomputer readable media\u201d may include communication media. Communication media typically embodies computer readable instructions or other data in a \u201cmodulated data signal\u201d such as a carrier wave or other transport mechanism and includes any information delivery media. The term \u201cmodulated data signal\u201d may include a signal that has one or more of its characteristics set or changed in such a manner as to encode information in the signal.","Device  may include input device(s)  such as keyboard, mouse, pen, voice input device, touch input device, infrared cameras, video input devices, and\/or any other input device. Output device(s)  such as one or more displays, speakers, printers, and\/or any other output device may also be included in device . Input device(s)  and output device(s)  may be connected to device  via a wired connection, wireless connection, or any combination thereof. In one embodiment, an input device or an output device from another computing device may be used as input device(s)  or output device(s)  for computing device .","Components of computing device  may be connected by various interconnects, such as a bus. Such interconnects may include a Peripheral Component Interconnect (PCI), such as PCI Express, a Universal Serial Bus (USB), firewire (IEEE 1394), an optical bus structure, and the like. In another embodiment, components of computing device  may be interconnected by a network. For example, memory  may be comprised of multiple physical memory units located in different physical locations interconnected by a network.","Those skilled in the art will realize that storage devices utilized to store computer readable instructions may be distributed across a network. For example, a computing device  accessible via a network  may store computer readable instructions to implement one or more embodiments provided herein. Computing device  may access computing device  and download a part or all of the computer readable instructions for execution. Alternatively, computing device  may download pieces of the computer readable instructions, as needed, or some instructions may be executed at computing device  and some at computing device .","Various operations of embodiments are provided herein. In one embodiment, one or more of the operations described may constitute computer readable instructions stored on one or more computer readable media, which if executed by a computing device, will cause the computing device to perform the operations described. The order in which some or all of the operations are described should not be construed as to imply that these operations are necessarily order dependent. Alternative ordering will be appreciated by one skilled in the art having the benefit of this description. Further, it will be understood that not all operations are necessarily present in each embodiment provided herein.","Moreover, the word \u201cexemplary\u201d is used herein to mean serving as an example, instance, or illustration. Any aspect or design described herein as \u201cexemplary\u201d is not necessarily to be construed as advantageous over other aspects or designs. Rather, use of the word exemplary is intended to present concepts in a concrete fashion. As used in this application, the term \u201cor\u201d is intended to mean an inclusive \u201cor\u201d rather than an exclusive \u201cor\u201d. That is, unless specified otherwise, or clear from context, \u201cX employs A or B\u201d is intended to mean any of the natural inclusive permutations. That is, if X employs A; X employs B; or X employs both A and B, then \u201cX employs A or B\u201d is satisfied under any of the foregoing instances. In addition, the articles \u201ca\u201d and \u201can\u201d as used in this application and the appended claims may generally be construed to mean \u201cone or more\u201d unless specified otherwise or clear from context to be directed to a singular form. Also, at least one of A and B and\/or the like generally means A or B or both A and B.","Also, although the disclosure has been shown and described with respect to one or more implementations, equivalent alterations and modifications will occur to others skilled in the art based upon a reading and understanding of this specification and the annexed drawings. The disclosure includes all such modifications and alterations and is limited only by the scope of the following claims. In particular regard to the various functions performed by the above described components (e.g., elements, resources, etc.), the terms used to describe such components are intended to correspond, unless otherwise indicated, to any component which performs the specified function of the described component (e.g., that is functionally equivalent), even though not structurally equivalent to the disclosed structure which performs the function in the herein illustrated exemplary implementations of the disclosure. In addition, while a particular feature of the disclosure may have been disclosed with respect to only one of several implementations, such feature may be combined with one or more other features of the other implementations as may be desired and advantageous for any given or particular application. Furthermore, to the extent that the terms \u201cincludes\u201d, \u201chaving\u201d, \u201chas\u201d, \u201cwith\u201d, or variants thereof are used in either the detailed description or the claims, such terms are intended to be inclusive in a manner similar to the term \u201ccomprising.\u201d"],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"DESCRIPTION OF THE DRAWINGS","p":[{"@attributes":{"id":"p-0009","num":"0008"},"figref":"FIG. 1"},{"@attributes":{"id":"p-0010","num":"0009"},"figref":"FIG. 2"},{"@attributes":{"id":"p-0011","num":"0010"},"figref":"FIG. 3"},{"@attributes":{"id":"p-0012","num":"0011"},"figref":"FIG. 4"},{"@attributes":{"id":"p-0013","num":"0012"},"figref":"FIG. 5"},{"@attributes":{"id":"p-0014","num":"0013"},"figref":"FIG. 6"},{"@attributes":{"id":"p-0015","num":"0014"},"figref":"FIG. 7"},{"@attributes":{"id":"p-0016","num":"0015"},"figref":"FIG. 8"},{"@attributes":{"id":"p-0017","num":"0016"},"figref":"FIG. 9"}]},"DETDESC":[{},{}]}
