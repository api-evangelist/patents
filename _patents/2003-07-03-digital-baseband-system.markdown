---
title: Digital baseband system
abstract: Communication device for processing outgoing and incoming packets. The device includes a plurality of signal processing units connected in sequence, each signal processing unit being clocked by a common clock signal. The device further includes a mode line connected to each signal processing unit for switching each signal processing unit between a transmit mode and a receive mode. The device further includes a control line to which each signal processing unit is connected. The control line communicating flow control information either in the transmit mode to at least one of the preceding signal processing units or in the receive mode to at least one of the following signal processing units.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=07860204&OS=07860204&RS=07860204
owner: International Business Machines Corporation
number: 07860204
owner_city: Armonk
owner_country: US
publication_date: 20030703
---

{"@attributes":{"id":"description"},"BRFSUM":[{},{}],"heading":["TECHNICAL FIELD AND BACKGROUND OF THE INVENTION","SUMMARY AND ADVANTAGES OF THE INVENTION","DETAILED DESCRIPTION OF THE INVENTION"],"p":["The present invention relates to a communication system for processing outgoing and incoming data. More particularly the invention relates to a baseband unit for handling packets comprising a header and payload.","Although the present invention is applicable in a broad variety of communication systems it will be described with the focus put on an application to a short-range radio communication system that conforms to the Bluetooth baseband specification, as can be found in \u201cSpecification of the Bluetooth System\u201d, Version 1.0 B, Bluetooth Special Interest Group (SIG), Dec. 1, 1999.","The intensified wish to connect a wide range of computing and telecommunications devices easily and simply, without the need to buy, carry, or connect cables, has been realized by several companies. The Bluetooth Special Interest Group (SIG) and the IEEE Wireless Personal Area Network (WPAN) standardization group 802.15 are working on a specification of a short-range radio communication system for enabling wireless ad-hoc connectivity between portable and\/or fixed electronic consumer products such as computers, cellular phones, printers, and digital cameras. This communication system can manage within a small local area up to three synchronous connection-oriented (SCO) links mainly for speech transmission at a rate of 64 kbit\/s, and up to seven asynchronous connectionless (ACL) links supporting symmetric or asymmetric data transfers at a maximum rate of 433.9 and 723.2 kbit\/s, respectively. The radio subsystem is operated in the globally available unlicensed industrial, scientific, and medical (ISM) frequency band at 2.4 GHz, covers distances of up to 10 meters with a transmission power of less than 1 mW, and applies frequency hopping in conjunction with a time-division multiple access (TDMA) scheme for transmitting data at a symbol rate of 1 Mbit\/s over the air. Crucial for the acceptance of this new communication technology in commercial products is the design of a low-power, small-sized, low-cost radio subsystem that can be embedded in existing and future, portable and fixed electronic consumer devices.","Known architectures for Bluetooth transceivers use several modules within a signal processing chain. Thereby, at least one signal processing chain is used for transmitting and at least another one for receiving packets. For example, in the transmitter chain, user synchronous, user asynchronous, or user isochronous data are sent via corresponding logical channels to transmit buffers for synchronous connection-oriented (SCO) links and buffers for asynchronous connection-less (ACL) links. Control information stemming from a link manager protocol, as described in the Specification of the Bluetooth System, can also be fed to the ACL buffers. The stored information in each of the multiple ACL and SCO buffers represents the payload to be transmitted over the link. Before its transmission, the payload is processed by appending cyclic redundancy check (CRC) bits, ciphering, whitening, and optionally encoding with a rate 1\/3 or 2\/3 forward error correction (FEC) code. The latter can be achieved by a CRC generator, an encryption module, a whitening filter, and an FEC encoding module. In parallel, the packet header is assembled by a link controller and stored in a transmit header register. The header is processed by appending error check (HEC) bits from a HEC generator, whitened with a respective filter, and encoded with a rate 1\/3 FEC code with a respective FEC encoding module. A radio frame is obtained by first concatenating the filtered and coded header and payload information, and then preceding the resulting bit string with an access code. Finally, the radio frame is forwarded to an analog radio frontend for its transmission at a frequency f(n). The value of f(n) is provided by a hopping frequency selection block.","A corresponding receiver chain might have the following features. When an access code correlator detects the arrival of a radio frame at a frequency f(n), a trigger event starts the processing in the receiver chain. The header information is extracted from the received frame, decoded with an FEC decoder, dewhitened with a dewhitening filter, checked by a HEC checking module, and stored in a receive header register. When the HEC check is successful, the receiver can start decoding, dewhitening, deciphering, and CRC checking the payload information with an FEC decoder, dewhitening filter, decryption module and a CRC checking module, respectively. When the CRC check is successful, the packet is stored in either a receive SCO buffer or ACL buffer depending on the received packet type. From the receive buffer, the payload is carried via the logical channels for user synchronous, user asynchronous, or user isochronous data to the synchronous or asynchronous I\/O port. If link manager control information has been received in the receive ACL buffer, it is forwarded to the link manager protocol.","A link controller configures, monitors, and controls the transmitter and receiver chain so that the baseband can be operated in several states.","Known disadvantages of current implementations of digital baseband systems based on rate-conversion between successive signal processing modules are the rate-conversion delay, the rate-conversion logic-overhead and power consumption.","Known buffer implementations have the disadvantage of memory inefficiency for variable length packets and a lack of addressability and allocation flexibility.","It is thus an object of the present invention to overcome the disadvantages of the state of the art and to provide a low-power, small-sized, low-cost baseband system that can be used in existing and future devices.","The invention provides a baseband system for a short-range radio communication system. It is conform to the Bluetooth baseband specification and is well-suited for an efficient hardware implementation, providing a low-power, small-sized, and low-cost radio subsystem design. The baseband system comprises a transceiver unit and a buffer unit, whereby the system has an efficient gate count and a reduced power consumption.","The design of a transceiver unit is based on a pipelined signal processing with distributed data path flow control. The transceiver unit processes outgoing and incoming packets, and comprises a plurality of signal processing units connected in sequence, whereby each signal processing unit is clocked by a common clock signal. A mode line is connected to each signal processing unit for switching each signal processing unit between a transmit mode and a receive mode. A control line to which each signal processing unit is connected communicates flow control information either in the transmit mode to one or more of the preceding signal processing units or in the receive mode to one or more of the following signal processing units. The described device can also be implemented as a transmitter or receiver only, whereby then the mode line can be omitted.","The buffer unit comprises a buffer system that applies a flexible memory organization concept, which leads to an efficient implementation of buffers or storage elements in terms of gate count and power consumption, and offers the flexibility to dynamically allocate memory for variable length user packets.","The buffer system for storing data of the first processing unit and second processing unit comprises a plurality of storage elements, whereby each storage element has a first storage unit and a second storage unit. A switch subsystem is provided for switching each storage element between first and second modes. Each first storage unit is addressable in the first mode by the first processing unit while each second storage unit is addressable in the first mode by the second processing unit. Each second storage unit is addressable in the second mode by the first processing unit while each first storage unit is addressable in the second mode by the second processing unit.","Each signal processing unit can comprise a multiplexing unit for the purpose of enabling multiple signals to be processed or generated by one signal processing unit. Moreover, each signal processing unit can comprise a multiplexer at its input and a demultiplexer at its output. Such a structure shows the advantage that each signal processing unit can be used for transmit and receive mode, allowing a partial reuse of functions and gates.","Each signal processing unit can be connected via a logic unit to the control line. This structure shows the advantage that other signal processing units can be informed and temporarily stopped easily if a processing delay occurs. Moreover, physically the same control line and logic unit can be used for receive and transmit mode.","If the logic unit comprises an OR gate, than a simple structure can be achieved.","The flow control information can comprise a hold information indicating to the signal processing units receiving the hold information to stop processing. By doing so, an efficient mechanism can be implemented to temporarily stop the processing.","Each signal processing unit can be used for the transmit and receive mode. This has the advantage that only one signal processing chain has to be build, whereby gate count can be saved.","When each storage element comprises a plurality of cells for storing data, then a simple structure of the storage element can be achieved.","A first address decoder can select one storage element for writing and reading data by the first processing unit. A second address decoder can select one storage element for writing and reading data by the second processing unit. By using such a structure, each or multiple storage element(s) can be addressed independently. This leads to a flexible allocation and selection of storage blocks.","The switch subsystem can comprise a plurality of access switches. Each access switch is connected to one storage element. Such structure takes the advantage that a flexible access can be achieved.","If a controller unit has an access switch register for controlling each access switch, then the advantage occurs that a simple control mechanism can be implemented to control the access switches.","A method for storing data of a first processing unit and second processing unit in a buffer system comprising a plurality of storage elements is provided. Each storage element comprises a first storage unit and a second storage unit. The method comprises the steps of switching each storage element between first and second modes, in the first mode addressing each first storage unit by the first processing unit and addressing each second storage unit by the second processing unit, and in the second mode addressing each second storage unit by the first processing unit and addressing each first storage unit by the second processing unit.","The method can further comprise selecting multiple storage elements and combining them to one or more storage blocks. This has the advantage that memory can be dynamically allocated for single and\/or multi-slot packets. The size of the selectable memory is flexible.","Each storage element and each storage block can be used independently. This leads to a broad flexibility in using the memory.","The drawings are provided for illustrative purpose only and do not necessarily represent practical examples of the present invention to scale.","Although the present invention is applicable in a broad variety of communication systems it will be described with the focus put on an embodiment to a short-range radio communication system that conforms to the Bluetooth baseband specification. In the figures, same reference numerals are used to denote the same or like parts.",{"@attributes":{"id":"p-0038","num":"0037"},"figref":"FIG. 1","b":["8","11","1","5","11","1","1","10","10","7","50","20","50","60","2","20","20","30","30","4","3"]},"The buffer unit  implements transmit (TX) and receive (RX) buffers, whereas the transceiver unit  performs all digital signal-processing functions of a transmitter and receiver chain. The buffer unit , the first processing unit , and the firmware executed on the microcontroller  communicate with each other via the system bus . The buffer unit  can thus be implemented as an ASB slave peripheral, which allows the mapping of all hardware registers and buffers into the microcontroller's address space and the generation of ARM7TDMI interrupts for time-critical events in the hardware.",{"@attributes":{"id":"p-0040","num":"0039"},"figref":"FIG. 2","b":["20","30","22","23","24","25"]},"The transceiver unit  communicates via the transceiver bus  with the buffer unit . Data can be written or read via a data bus, labeled with X_BB_D, to or from a respective payload buffer with an address indicated on the bus X_BB_A by controlling the signals X_BB_WR and X_BB_WREN. The signals X_BB_CMD control the transceiver finite state machine  of the transceiver unit , whereas the signals X_BB_IRQ and X_BB_IRQ indicate to a not shown baseband interrupt controller that a clock event has occurred or a packet reception event has been detected in the transceiver signal-processing chain device , respectively.","The transceiver unit  communicates via the RF interface  with the radio frontend . The transceiver signal-processing chain device  outputs a radio frame as a serial bitstream at the interface line X_RF_DATA_TX, while interface line X_RF_DATA_RX is used for processing an incoming radio frame. The outgoing and incoming radio frames are transmitted or received over the radio link at a frequency indicated by the interface lines X_RF_FREQ. Control information is exchanged on lines X_RF_CTRL between the radio frontend  and the transceiver unit .","In the transceiver controller , timing synchronization between two or more communicating devices (not shown) is carried out, the transceiver signal-processing steps are sequenced with the transceiver finite state machine , and outgoing and incoming packets are assembled and disassembled with the packet (de)composer . While transmitting data, the packet composer  reads via the transceiver bus  proper header registers and addressed payload data buffers, serializes 32 bit wide information blocks, and shifts the resulting serial bitstring into the transceiver signal-processing chain device . While receiving data, the incoming bitstring is processed and finally converted serial-to-parallel by the packet (de)composer  before the information blocks are stored either into a header register or the addressable buffers, which is further described below.","As indicated by the arrows, payload and header data are exchanged between the transceiver controller  and the transceiver signal-processing chain device . Furthermore, MODE, CONTROL, HOLD_OUT, HOLD_IN, HEC_OK, CRC_OK, and TRIGGER signals are communicated between the transceiver controller  and the transceiver signal-processing chain device .","Referring to , which shows a schematic illustration of a transceiver signal-processing chain device , hereafter short communication device . The communication device  comprises several signal processing units  required for implementing the functions header error check (HEC), whitening (WHI), forward error correction (FEC), access code correlation (ACC), cyclic redundancy check (CRC), and encryption (CRY), whereby the boxes are labeled accordingly. Each signal processing unit  comprises one multiplexing unit ,  at its input and output which are depicted in more detail in . The signal processing units  are connected in sequence, whereby each is clocked by a common clock signal provided on a clock line . Furthermore, each signal processing unit  is connected to a mode line , a data bus , and a control line . The control signals MODE, HOLD_IN, and HOLD_OUT together with the data bus  are used to configure and steer the signal processing units  within the transceiver chain. A hopping frequency selection is carried out by a hopping frequency unit , labeled with HFS.","The transceiver finite state machine  can configure the communication device  for transmit and receive mode by controlling the muliplexors , demultiplexors , and signal processing units  with the signal MODE on the mode line . In transmit mode, the signal processing units  are configured and connected with each other such that a radio frame is generated from the header and payload. A transmit multiplexer, labeled with MT, is provided to combine header and payload path. The frame is output as a serial continuous bitstring at the RF interface line X_RF_DATA_TX at a rate of 1 Mbit\/s. In receive mode, the signal processing units  are configured and connected such that an incoming radio frame at line X_RF_DATA_RX is processed by the signal processing units  in reversed order before it is forwarded as header and payload to the packet decomposer . A receive demultiplexer, labeled with MR, is thus arranged to divide the bitstream into header and payload.","The signal-processing chain of the communication device  bases on a pipelined signal-processing architecture with data path flow control, hereafter called flow control information, which is communicated via the control line . All signal processing units  in the pipeline use the same signal-processing building block structure and are clocked with the common clock signal of 1 MHz. By using a feedback flow control mechanism in the transmit path and a feedforward control in the receive path, a continuous 1 Mbit\/s bitstream can be provided to and accepted from the RF interface  respectively, avoiding a costly data-rate conversion between input and output of each signal processing unit . The flow control information is forwarded to the next or fed back to the previous signal processing unit  via logic units  comprising OR gates. A control demultiplexer, labeled with MC, is arranged within the control line  in order to split the flow control information for header and payload path.",{"@attributes":{"id":"p-0048","num":"0047"},"figref":"FIG. 4","b":["40","44","45","46","47","32","44","47","40","40","42","42","45","44","40","43","43","44","40","40"]},"The registers , ,  are used to serially clock in the bitstring from the multiplexer , to store externally loadable configuration values, and to hold and feed back state information to the input of the combinatorial logic unit .","Before a signal processing unit  can start processing data, it has to be reset and configured. By raising the signal RESTART, the data input register  and the state register  are cleared. When the two signals RESTART and LOAD are raised, the value of the external signal MODE on the mode line  and other module-dependent configuration parameters provided on the CONTROL data bus  are stored into the configuration registers . As soon as the signal RESTART is released, a string of bits provided at line TX_DATA_IN or RX_DATA_IN is clocked into the input register . From these bits and the parameters stored in the configuration and state registers , , the combinatorial logic  generates a bitstring, which is output via the demultiplexer  at line TX_DATA_OUT or RX_DATA_OUT.","The flow control information is carried on via the control line : Raising the signal HOLD_IN causes the logic unit  to raise HOLD_OUT and HOLD, which disables the clock of the data input and state registers , . In this case the signal processing unit  stops processing, that is, new input values are ignored, the internal state of the signal processing unit  is kept unchanged, and the value of the output signal is retained.","In transmit mode, the length of the output bitstring of each signal processing unit  is always greater than (or equal to) the length of the input bitstring because the signal processing unit  may perform channel encoding or append parity check bits. As both bitstrings are clocked out with the same clock rate of 1 MHz, the signal processing unit  has to freeze all previous signal processing units  in the pipeline whenever it inserts additional bits in the output bitstring. Stopping the previous signal processing units  is accomplished by raising the signal STALL, which propagates back on the control line  as a HOLD command via a logic unit  to the previous signal processing units  in the pipeline. A feedback loop thus controls the data flow in the transmit path. The STALL signal is sent and the HOLD signal is received by the combinatorial logic unit  via the logic unit . The logic unit  comprises here an OR gate.","In receive mode, the length of the output bitstring of each signal processing unit  is always less than (or equal to) the length of the input bitstring because the signal processing unit  may perform channel decoding or remove parity check bits. As the input and output bitstring is clocked with the same clock signal, the respective signal processing unit  has to indicate to the next signal processing unit  in the receive processing chain that no valid data is provided at its output. In this case, all preceding signal processing units  in the pipeline have to stop processing input data. Freezing of all subsequent signal processing units  in the pipeline is accomplished by raising the signal STALL, which is forwarded as a HOLD command on the control line  via the logic unit  to the next signal processing units . A feedforward mechanism thus controls the data flow in the receive path.","In general, the same control line  can be used for transmit and receive mode. This leads to a simple structure.",{"@attributes":{"id":"p-0055","num":"0054"},"figref":"FIG. 5","b":["50","50","55","60","60","52","68","53","54","50","20","2","11","1"]},"The ASB slave controller  coordinates the control and user data exchange between one ASB master and the buffer system  over the AMBA bus, i.e. system bus . If the AMBA bus decoder  selects the buffer unit  by enabling the chip select signal X_DSELASB, the ASB slave controller  processes and generates all ASB bus control signals (X_BWAIT, X_BERROR, X_BLAST, X_BWRITE, X_nBRESET, X_BLCK) required for an AMBA conform sequential or non-sequential data transfer via the bidirectional data bus X_BD to or from a memory location defined on the address bus X_BA. Moreover, the ASB slave controller  generates a write clock signal wr_clk and a write enable signal wr_en for the memory controller  and controls the data transfer direction over the data bus X_DB with the signal bd_wr. Interrupts between the buffer unit  and the microcontroller  are carried on the interface lines X_IRQ and X_IRQ.","The control and user data exchange via the transceiver bus  between the buffer and transceiver units ,  is coordinated by the transceiver finite state machine  implemented in the transceiver unit . The interface signals were indicated with reference to .","The transceiver configuration and header storage registers  are provided for configuring the transceiver unit  and storing the packet header information. These registers  are always connected to the system bus  and transceiver bus  to allow simultaneous read access from both busses; however, only one bus has write access rights. The control and status registers  include registers for buffer switching, transceiver control and interrupt handling. An interrupt controller of the control and status registers  is provided to generate microcontroller interrupt events such as the clock interrupt and a packet received interrupt.",{"@attributes":{"id":"p-0059","num":"0058"},"figref":"FIG. 6","b":["68","60","68","65","12","65","61","62","65","66","65","68","61","62","64","63","60","1","63","64","20","20","1","10","11","10","11","61","62","65","61","62","52","20","10"]},{"@attributes":{"id":"p-0060","num":"0059"},"figref":"FIG. 7","b":["52","71","72","65","53","54","1","20","2","65","66","65","65","71","1","1","65","2","2","65","1","2","65","66","76","11","76","74","75","65"]},{"@attributes":{"id":"p-0061","num":"0060"},"figref":"FIG. 8","b":["75","65","66","65","1","2","65","75","74"]},"Any disclosed embodiment may be combined with one or several of the other embodiments shown and\/or described. This is also possible for one or more features of the embodiments."],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"DESCRIPTION OF THE DRAWINGS","p":["Preferred embodiments of the invention are described in detail below, by way of example only, with reference to the following schematic drawings.",{"@attributes":{"id":"p-0028","num":"0027"},"figref":"FIG. 1"},{"@attributes":{"id":"p-0029","num":"0028"},"figref":"FIG. 2"},{"@attributes":{"id":"p-0030","num":"0029"},"figref":"FIG. 3"},{"@attributes":{"id":"p-0031","num":"0030"},"figref":"FIG. 4"},{"@attributes":{"id":"p-0032","num":"0031"},"figref":"FIG. 5"},{"@attributes":{"id":"p-0033","num":"0032"},"figref":"FIG. 6"},{"@attributes":{"id":"p-0034","num":"0033"},"figref":"FIG. 7"},{"@attributes":{"id":"p-0035","num":"0034"},"figref":"FIG. 8"}]},"DETDESC":[{},{}]}
