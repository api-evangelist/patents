---
title: Method and apparatus for automatically re-validating multiple clients of an authentication system
abstract: According to one embodiment of the invention, a session list identifying communication sessions relating to supplicants that access a computer network through an access device is created and stored at an authentication server. Then, an event is received from an anti-virus system announcing an updated anti-virus policy. User input is received that requests performing posture validation for all the supplicants. Next, in response to the information received, a time value for starting the posture validation for a particular supplicant identified in the session list. Finally, in response to the information received, a request to perform posture validation is generated and sent to the access device, wherein the request includes supplicant identifying information, the time value, and instructions that instructs the access device to initiate the posture validation for that supplicant only after the time value has expired. The steps are repeated for all supplicants in the session list.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=07587751&OS=07587751&RS=07587751
owner: Cisco Technology, Inc.
number: 07587751
owner_city: San Jose
owner_country: US
publication_date: 20040802
---

{"@attributes":{"id":"description"},"BRFSUM":[{},{}],"heading":["FIELD OF THE INVENTION","BACKGROUND OF THE INVENTION","DETAILED DESCRIPTION OF THE PREFERRED EMBODIMENT","1.0 General Overview","2.0 Method of Automatically Re-Validating Multiple Clients of an Authentication System","3.0 Implementation Mechanisms\u2014Hardware Overview","4.0 Extensions and Alternatives"],"p":["The present invention generally relates to data processing in the field of user authentication in networks. The invention relates more specifically to a method and apparatus for automatically re-validating multiple clients of an authentication system.","The approaches described in this section could be pursued, but are not necessarily approaches that have been previously conceived or pursued. Therefore, unless otherwise indicated herein, the approaches described in this section are not prior art to the claims in this application and are not admitted to be prior art by inclusion in this section.","Posture validation refers to a process of granting or denying access to a host that is seeking to access a computer network based on the state of the software installed and running on the host. For example, positive posture validation can occur when an access device, such as a router configured as an access server, determines that a computer seeking network access has a particular kind of anti-virus application, personal firewall, host-based intrusion protection applications, etc.","Steps involved in posture validation typically are performed by a network access device that permits or denies network access, and by an authentication server, which is responsible for obtaining and evaluating the security posture credentials from the network client, determining the overall system posture, and providing the appropriate network access policy to the access device based on the system posture. Optionally, a separate posture validation server application can support validation of the security posture credentials for a particular host application.","The authentication server typically also performs user authentication functions that require a client to prove its identity by offering a data credential that is verified in a secure manner by an authentication server. Some such servers also perform network access control and accounting functions and therefore are termed authentication, authorization and accounting (AAA) servers. A commercial example is CiscoSecure Access Control Server, from Cisco Systems, Inc.","Wireless local area networks such as those that use the 802.1x protocol for wireless communications now commonly use some form of user authentication protocol. For example, Extensible Authentication Protocol (EAP), as defined in IETF RFC 2284, may be used. In EAP over LAN authentication, a wireless client device, such as a laptop computer, that is seeking to obtain network access is termed a supplicant. An AAA server provides user authentication services to an access device, typically a router, which intercepts requests of the supplicant; the access device has the role of a client with respect to the AAA server.","Existing methods of client posture validation allow an access device to mediate an EAP conversation between the supplicant and the authentication server to establish whether the supplicant conforms to required security standards. A supplicant that fails posture validation can attempt validation again at any time after user intervention occurs. For example, a user could install and configure anti-virus protection and then attempt posture validation. Further, an AAA server can force a supplicant to perform posture validation again (\u201cre-validation\u201d) after a specified interval of time by delivering a session timeout message to the access device as part of a successful first validation response. Typically, the interval of time is about one day, to prevent an excessive use of AAA server resources, which could occur if numerous supplicants needed to re-validate too often.","All known approaches for re-validation involve individual requests to particular clients or supplicants. For example, RFC 3576 defines a Change of Authorization message, for the RADIUS protocol, which an AAA server may send to cause an access device to change authorization characteristics for a single supplicant. However, in certain scenarios, it is desirable to require a large number of clients to perform re-validation roughly concurrently; RFC 3576 does not describe a mass re-validation mechanism.","For example, assume that a large enterprise network contains 50,000 user machines managed by 100 access devices; an outbreak of a new virus occurs, and network policy changes to require all machines to have a minimum posture that can protect against the new virus. There is presently no mechanism to force a re-validation of all the user machines from a central point. Instead, in current practice, network administrators are required to contact each network access device and use command-line commands to purge user connections or request a re-validation of each user. During the time required to perform this approach, the new virus could cause extensive damage to resources in the network.","In one other known approach, an AAA server can send a \u201cpacket of death\u201d (POD) to an access device that effectively instructs the access device to close a specified user session. Closing the session is a serious disadvantage for several reasons. First, user activities such as downloading a file or interacting with an application are interrupted and terminated, presenting a potentially major annoyance to the user. Second, when the POD approach is used for a large number of clients, the POD approach causes all the clients to attempt to re-establish access device sessions, which in turn causes the access device to attempt to re-authenticate all the clients to the AAA server. Consequently, the AAA server can experience an unreasonable short-term processing load. Further, not all access devices support POD.","Based on the foregoing, there is a clear need for an approach for forcing re-validation of a large number of clients or supplicants. It would be useful to have such a mechanism that is compatible with existing protocol infrastructure in general, and compatible with RADIUS and EAP in particular.","A method is described for automatically re-validating multiple clients of an authentication system. In the following description, for the purposes of explanation, numerous specific details are set forth in order to provide a thorough understanding of the present invention. It will be apparent, however, to one skilled in the art that the present invention may be practiced without these specific details. In other instances, well-known structures and devices are shown in block diagram form in order to avoid unnecessarily obscuring the present invention.","Embodiments are described herein according to the following outline:\n\n","The needs identified in the foregoing Background, and other needs and objects that will become apparent for the following description, are achieved in the present invention, which comprises, in one aspect, a method of automatically re-validating multiple clients of an authentication system comprising creating and storing a session list identifying communication sessions relating to supplicants that access a computer network through an access device; receiving input requesting performing posture validation for all the supplicants; determining a time value for starting the posture validation for a particular supplicant identified in the session list; generating and sending to the access device, a request to perform posture validation, wherein the request comprises supplicant identifying information and the time value and instructs the access device to initiate the posture validation for that supplicant only after the time value has expired; and repeating the steps of determining, generating and sending for all supplicants in the session list.","According to one feature, the user input comprises a selection for mass posture re-validation by a network administrator using a network management application. In another feature, the user input comprises an event received from an anti-virus system, threat detection system, intrusion detection system, or other functional system.","In still another feature, the request to perform posture validation comprises a RADIUS Change of Authorization request message. In yet another feature, the request to perform posture validation comprises a RADIUS Change of Authorization request message with a Service Type value of Authorize-Only. Further, the request to perform posture validation may comprise a RADIUS Change of Authorization request message with a Service Type value of Authorize-Only, wherein the supplicant identifying information comprises a User-Identity attribute in the Change of Authorization request message, and the time value is encoded as an additional attribute in the Change of Authorization request message.","In yet another feature, the method further comprises steps performed at an access device, including initiating a timer for a time period equal to the time value; and initiating posture validation for the supplicant identified in the request to perform posture validation only after the timer has expired. In any of the foregoing features, posture validation may comprise any one or more of: receiving and evaluating machine certificates, machine identity information, software configuration or policy compliance information, machine or user governance information, or performing other user or machine credential checks.","In other aspects, the invention encompasses a computer apparatus and a computer-readable medium configured to carry out the foregoing steps.","2.1 Structural and Functional Overview",{"@attributes":{"id":"p-0028","num":"0033"},"figref":"FIG. 1A","b":["102","104","106","110","104","104","108","110","120","108","120"]},"Client  is any network-compatible end station, such as a personal computer or workstation. Network  may be any local area network, wide area network, or one or more internetworks. Enterprise network  is any network, including a WLAN, that holds one or more network resources  that client  is seeking to access. In certain embodiments, networks ,  may be the same; thus,  is intended to broadly encompass any network arrangement in which an untrusted client  is seeking access to a resource  that is held in a secure network.","Access server  is, in one embodiment, a network router that is configured to perform access control functions. An example is Cisco Access Server AS5300, commercially available from Cisco Systems, Inc., San Jose, Calif. The EAP-compliant embodiments described herein may be implemented using any EAP-capable platform, including switches, routers, network elements that support VPN, wireless gateways, firewalls, etc.","Authentication server  is a server-class computer that is configured to securely store user authentication information such as usernames and passwords, and to perform authentication protocols, algorithms, and supporting processes, such as one-time password (OTP) validation, encryption and decryption, message digest evaluation, etc. In one embodiment, authentication server  communicates with access server  using a secure protocol that is optimized for use in authentication. An example of a suitable protocol is RADIUS.","Authentication server  also may incorporate the elements of  that are described further in section 2.2 below.","Optionally a policy server  is communicatively coupled to network  and\/or to authentication server , or is integrated with the authentication server. The policy server  provides a repository of authentication policies that the authentication server  may consult to determine how to interact with client . For example, policy server  may specify a minimum required authentication method that client  must be capable of using for authentication, a particular kind of credential that the client must present in addition to completing successful authentication, etc.","In this arrangement, client  must successfully authenticate itself to access server , in cooperation with authentication server , to gain access to resource . Any of several authentication protocols may be used to perform authentication. An example of a suitable authentication protocol is PEAP, which is an EAP-compliant protocol that is performed as part of establishing a PPP connection between client  and access server . In an object-oriented environment, logic that defines messages and actions performed as part of the authentication protocol can be structured as an authentication method A that client  accesses or calls using an application programming interface (API) A. A compatible authentication method B is callable by authentication server  using API B.","In general, under EAP, when client  attempts to access enterprise network , access server  contacts the client and requests identity information, which the client provides in a response. Thus, client  and access server  establish a logical connection A. Access server  then passes all subsequent messages involved in the authentication protocol, and issued by client , to authentication server , and forwards related messages directed from the authentication server to the client. Accordingly, client  and authentication server  effectively establish a logical connection B until the authentication protocol terminates. As a result, authentication server  can use authentication method B to determine its authentication behavior since it represents the logical endpoint of the authentication protocol conversation.","For purposes of illustrating a clear example, the following discussion of , , and  reference communications among elements of . However,  represents merely one example of a network arrangement, and the techniques described herein may be used in many other network arrangements.",{"@attributes":{"id":"p-0037","num":"0042"},"figref":["FIG. 1B","FIG. 1B"],"b":"120"},"In step , a request to perform mass client posture re-validation is received. The request may be received in the form of user input, as shown in block A. For example, the user input may comprise selecting a function button in the user interface of a network management application program. In such an embodiment, the techniques herein may be applied to provide \u201cone-click\u201d re-validation of a large number of supplicants or clients. Alternatively, the request may be received as part of an event B that is published by another process, application, or system. For example, an anti-virus system coupled to network  may detect a virus outbreak. In response, the anti-virus system publishes an event announcing an updated anti-virus policy. The event could identify the outbreak and requesting each authentication server in the network to re-validate all supplicants.","In step , a current session value is set to \u201c1.\u201d In step , an object containing session data values for the current session is retrieved from a session list. In one embodiment, the session list is a session state table that is maintained by the authentication server .","Referring now to , which is a block diagram of certain elements of an authentication server that may be used in an embodiment, the authentication server  of  may further comprise mass posture validation logic , session state table , and time offset policy data . Mass posture validation logic  comprises computer program instructions to implement the process of  or  as described further herein. Session state table  is a data structure that stores information identifying all users or client machines that are currently connected to an access device . In one embodiment, session state table  comprises, for each user session that is then currently active between a supplicant  and an access device , a client device IP address, client device port number (or, in WLAN deployments, other equivalent access point information), user ID value, a unique session ID value, and\/or any other information necessary or appropriate for tracking sessions.","In one embodiment, session state table  identifies only sessions for supplicants that have authenticated using authentication server . Alternatively, in a network comprising multiple authentication servers, session state table  may store global session state data for all sessions that are active in any part of the managed network. Out-of-band data sharing techniques may be used to update the session state tables of multiple authentication servers.","Time offset policy data  is information indicating what re-validation time delay policy should be applied to sessions. The use of a time delay policy provides a mechanism for scheduling the re-validation of a large number of supplicants that are managed by a particular authentication server. Using a time delay policy is expected to help prevent a sudden influx of authentication requests, which may involve cryptographic computations or other functions that require extensive computing resources, from overloading the authentication server. The time delay policy causes an access device to re-validate a supplicant or client only after expiration of a specified time. This approach allows the authentication server  to send out a mass of re-validation messages as quickly as possible but schedule the resulting re-validation workload.","Accordingly, in step , a time offset value is determined. For example, step  involves retrieving the time offset policy data ; determining which policy data applies to the supplicant identified in the current session object that was retrieved at step ; and selecting a value in seconds representing a future scheduled time for re-validation. The time offset policy data  may provide for random assignment of schedule values or policy-driven time values. For example, priority status may be given to certain users, groups, or users of particular VLANs and so that they are scheduled to be re-validated first.","In certain network environments, using a time offset value may be unnecessary. Further, in an embodiment in which the authentication server and access device have system clocks that are approximately or exactly synchronized, step  may involve determining an absolute future time value, rather than an offset or delay value. In another alternative, step  may involve determining and assigning a sequence number, priority value or order value, rather than a time value.","In step , a re-validation message is generated for the access device associated with the current session, including user session identifying information and the time offset value that was determined at step . For example, step  involves creating a message from the authentication server  to access device , providing information identifying supplicant  and the time offset value, and instructing the access device to commence re-validation after expiration of the time offset value. A specific example message structure is described below in section 2.2. The particular structure of the message is not important. Any message may be used that (1) requests the access device to perform re-validation, (2) identifies the session or supplicant for which re-validation is needed, and (3) provides some form of scheduling information.","In step , the re-validation message is sent to the access device associated with the current session. Many networks use multiple access devices  for load balancing purposes. Therefore, the message that is created in step  is also assumed to contain information identifying the particular access device or sufficient to route the message to the correct access device.","In step , a test is performed to determine whether the current session is the last session identified in the session list. If not, then in step  the current session value is incremented, and control returns to step . Thus, steps , , , , ,  represent iterating through the entire session list, creating a re-validation request message for each session, and sending the re-validation request message. In one embodiment, each iteration involves assigning a slightly different time offset value at step  so that subsequent authentication requests are reasonably scheduled or separated in time according to the processing capabilities of authentication server .","Steps - further involve creating a re-validation message that does not force closure of the then-current user or supplicant session with the access device. Consequently, resources are conserved by avoiding the overhead involved in recovering session resources and then re-allocating new resources when the user attempts to re-connect and re-validate.","If step  determines that the last session has been processed, then in step , the access device starts a re-validation after the first time offset value has expired. The particular operations undertaken by the access device to cause re-validation, and the steps involved in performing re-validation, are not pertinent to this disclosure and may be performed in conventional manner. An example process is described in the publication \u201cCisco Trust Agent Overview,\u201d from Cisco Systems, Inc., as part of the Cisco Network Admission Control solution.","2.2 Process and Message Flow",{"@attributes":{"id":"p-0051","num":"0056"},"figref":["FIG. 3A","FIG. 3B","FIG. 3A","FIG. 3A","FIG. 1B"],"b":["120","152","154","156","302","120"]},"In one embodiment optimized for use with Cisco Network Admission Control (CNAC) components, the Cisco vendor-specific attribute (VSA) \u201cservice\u201d may be included in the CoA Request in the form:\n\n","In step , the CoA Request is sent as a RADIUS protocol message to access device . In step , access device  validates the user session information contained in the CoA Request to verify that the access device is actually engaged in a user session matching the provided user session information. If the user session information is valid, as tested at step , then in step  the access device sends a CoA acknowledge message, of the form defined in RFC 3576, back to the authentication server.","If the user session information is invalid, then a non-acknowledge (NAK) message is sent back, as shown in step . The acknowledge and NAK messages may have the form defined in RFC 3576. Referring now to , in response to receiving the NAK, authentication server  marks the session state table to indicate that the current session is invalid, as shown in step .","If a good acknowledgement was received, then steps ,  are performed as described above for . Concurrently, access device  starts a delay timer at step  for a time equal to the time value received in the CoA Request. When the timer expires, as shown by step  and step , access device initiates posture re-validation for the supplicant or session that is identified in the CoA Request.","In a network management system that is configured using the techniques disclosed herein, a network administrator can at the selection of a single button force every connected user to be re-validated, for example, upon detection of the start of a virus attack. In response, an AAA server iterates over its internal session list, sending re-validation RADIUS CoA messages to each access device associated with a session. The re-validation message includes attributes that instruct the access device to start a re-validation of the client. Therefore, embodiments provide centralized management of on-demand mass posture re-validation, including a method for scheduling or throttling the resulting re-validation processing loads. In particular, in embodiments that use a global session state table in each of a plurality of authentication servers, a single authentication server  can trigger re-validation of thousands of supplicants across the entire network, even if different authentication servers manage basic authentication processes for many of the supplicants. Moreover, the techniques herein do not require terminating existing user sessions as a pre-condition for re-validation. Further, the techniques require far less processing and overhead than the POD approach.",{"@attributes":{"id":"p-0057","num":"0063"},"figref":"FIG. 4","b":["400","400","402","404","402","400","406","402","404","406","404","400","408","402","404","410","402"]},"Computer system  may be coupled via bus  to a display , such as a cathode ray tube (\u201cCRT\u201d), for displaying information to a computer user. An input device , including alphanumeric and other keys, is coupled to bus  for communicating information and command selections to processor . Another type of user input device is cursor control , such as a mouse, trackball, stylus, or cursor direction keys for communicating direction information and command selections to processor  and for controlling cursor movement on display . This input device typically has two degrees of freedom in two axes, a first axis (e.g., x) and a second axis (e.g., y), that allows the device to specify positions in a plane.","The invention is related to the use of computer system  for providing multiple authentication types within an authentication protocol that supports a single type. According to one embodiment of the invention, providing multiple authentication types within an authentication protocol that supports a single type is provided by computer system  in response to processor  executing one or more sequences of one or more instructions contained in main memory . Such instructions may be read into main memory  from another computer-readable medium, such as storage device . Execution of the sequences of instructions contained in main memory  causes processor  to perform the process steps described herein. In alternative embodiments, hard-wired circuitry may be used in place of or in combination with software instructions to implement the invention. Thus, embodiments of the invention are not limited to any specific combination of hardware circuitry and software.","The term \u201ccomputer-readable medium\u201d as used herein refers to any medium that participates in providing instructions to processor  for execution. Such a medium may take many forms, including but not limited to, non-volatile media, volatile media, and transmission media. Non-volatile media includes, for example, optical or magnetic disks, such as storage device . Volatile media includes dynamic memory, such as main memory . Transmission media includes coaxial cables, copper wire and fiber optics, including the wires that comprise bus .","Common forms of computer-readable media include, for example, a floppy disk, a flexible disk, hard disk, magnetic tape, or any other magnetic medium, a CD-ROM, any other optical medium, punch cards, paper tape, any other physical medium with patterns of holes, a RAM, a PROM, and EPROM, a FLASH-EPROM, any other memory chip or cartridge, a carrier wave as described hereinafter, or any other medium from which a computer can read.","Various forms of computer readable media may be involved in carrying one or more sequences of one or more instructions to processor  for execution. For example, the instructions may initially be carried on a magnetic disk of a remote computer. The remote computer can load the instructions into its dynamic memory and send the instructions over a telephone line using a modem. A modem local to computer system  can receive the data on the telephone line and use an infrared transmitter to convert the data to an infrared signal. An infrared detector can receive the data carried in the infrared signal and appropriate circuitry can place the data on bus . Bus  carries the data to main memory , from which processor  retrieves and executes the instructions. The instructions received by main memory  may optionally be stored on storage device  either before or after execution by processor .","Computer system  also includes a communication interface  coupled to bus . Communication interface  provides a two-way data communication coupling to a network link  that is connected to a local network . For example, communication interface  may be an integrated services digital network (\u201cISDN\u201d) card or a modem to provide a data communication connection to a corresponding type of telephone line. As another example, communication interface  may be a local area network (\u201cLAN\u201d) card to provide a data communication connection to a compatible LAN. Wireless links may also be implemented. In any such implementation, communication interface  sends and receives electrical, electromagnetic or optical signals that carry digital data streams representing various types of information.","Network link  typically provides data communication through one or more networks to other data devices. For example, network link  may provide a connection through local network  to a host computer  or to data equipment operated by an Internet Service Provider (\u201cISP\u201d) . ISP  in turn provides data communication services through the worldwide packet data communication network now commonly referred to as the \u201cInternet\u201d . Local network  and Internet  both use electrical, electromagnetic or optical signals that carry digital data streams. The signals through the various networks and the signals on network link  and through communication interface , which carry the digital data to and from computer system , are exemplary forms of carrier waves transporting the information.","Computer system  can send messages and receive data, including program code, through the network(s), network link  and communication interface . In the Internet example, a server  might transmit a requested code for an application program through Internet , ISP , local network  and communication interface . In accordance with the invention, one such downloaded application provides for providing multiple authentication types within an authentication protocol that supports a single type as described herein.","Processor  may execute the received code as it is received, and\/or stored in storage device , or other non-volatile storage for later execution. In this manner, computer system  may obtain application code in the form of a carrier wave.","In the foregoing specification, the invention has been described with reference to specific embodiments thereof. It will, however, be evident that various modifications and changes may be made thereto without departing from the broader spirit and scope of the invention. The specification and drawings are, accordingly, to be regarded in an illustrative rather than a restrictive sense."],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"BRIEF DESCRIPTION OF THE DRAWINGS","p":["The present invention is illustrated by way of example, and not by way of limitation, in the figures of the accompanying drawings and in which like reference numerals refer to similar elements and in which:",{"@attributes":{"id":"p-0014","num":"0013"},"figref":"FIG. 1A"},{"@attributes":{"id":"p-0015","num":"0014"},"figref":"FIG. 1B"},{"@attributes":{"id":"p-0016","num":"0015"},"figref":"FIG. 2"},{"@attributes":{"id":"p-0017","num":"0016"},"figref":"FIG. 3A"},{"@attributes":{"id":"p-0018","num":"0017"},"figref":["FIG. 3B","FIG. 3A"]},{"@attributes":{"id":"p-0019","num":"0018"},"figref":"FIG. 4"}]},"DETDESC":[{},{}]}
