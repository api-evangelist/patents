---
title: Policy distribution point for setting up network-based services
abstract: A “policy distribution point” (PDP) allows service drivers to be installed remotely and automatically without rebooting the PDP or otherwise interrupting existing network-based services. The exposure of sensitive configuration data to non-secure networks is minimized by placing PDPs close to the devices to be configured. Service drivers on the PDP can be reused to configure multiple devices of the same type. The PDP receives an “activation” and uses a service driver on the PDP to translate the activation into “device-specific instructions.” The device-specific instructions are sent to a device and configure the device to set up the network-based service. One or more PDPs can be used to configure both computing device and networking devices to provide a single service.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=07134013&OS=07134013&RS=07134013
owner: Atreus Systems Corp.
number: 07134013
owner_city: Ottawa
owner_country: CA
publication_date: 20020819
---

{"@attributes":{"id":"description"},"RELAPP":[{},{}],"heading":["CROSS REFERENCE TO RELATED APPLICATION","TECHNICAL FIELD","BACKGROUND","SUMMARY","DETAILED DESCRIPTION"],"p":["This application claims the benefit under 35 U.S.C. \u00a7119 of the provisional application Ser. No. 60\/354,268, entitled \u201cSoftware Platform For Managing Network-Based Services\u201d, by Bellinger et al., filed Feb. 4, 2002 (the subject matter of which is incorporated herein by reference).","This application also claims the benefit under 35 U.S.C. \u00a7120 of patent application Ser. No. 10\/213,043, entitled \u201cSystem And Method For Setting Up User Self-Activating Network-Based Services\u201d, by Bellinger et al., filed Aug. 5, 2002, now U.S. Pat. No. 7,024,470 (the subject matter of which is incorporated herein by reference).","The present invention relates to setting up network-based services, and more particularly to a policy distribution point and service drivers used to configure devices that will be used to provide the network-based services.","The Compact Disc Appendix, which is a part of the present disclosure, includes one recordable Compact Disc (CD-R) containing information that is part of the disclosure of the present patent document. A portion of the disclosure of this patent document contains material that is subject to copyright protection. All the material on the Compact Disc is hereby expressly incorporated by reference into the present application. The copyright owner of that material has no objection to the facsimile reproduction by anyone of the patent document or the patent disclosure, as it appears in the Patent and Trademark Office patent files or records, but otherwise reserves all copyright rights.","Network-based services are often provided over networks, such as the internet, the network of a public telephone company, or a company's own private telecommunications network. Such a network-based service may involve the use of multiple hardware devices and\/or multiple software applications. Before the service is operable, however, the multiple hardware devices and\/or multiple software applications used by the service must generally be configured.","To configure a hardware device, a skilled technician may use a remote device coupled to the hardware device to be configured. The technician shuts down the remote device, installs a software service driver on the remote device, and then restarts the remote device. Once the service driver is installed, configuration information is sent through the service driver to the hardware device, thereby configuring the hardware device so that the hardware device can operate to carry out the service. This manner of setting up a network-based service by loading a service driver can be a relatively time-intensive, manual task.","Not only can this setting up of a network-based service for the first user be time consuming, but the setting up of the same service for subsequent users can also be time consuming. To set up the service for a second user, the hardware devices involved in supplying that service to the second user will need to be configured. As in the case of setting up the service for the first user, a technician may load a second service driver onto a remote device. Once the second service driver is installed on the remote device, configuration information is sent through the second service driver and to the hardware device being configured.","If the remote device used to set up the service for the second user is already operating at the location of the second user in the field, then the technician need not go to the location of the second user and install the remote device before the second service driver can be installed. Rather, the technician can remotely install the second service driver on the existing remote device. Even in the case where the remote device is already installed, however, the technician still handles loading a service driver onto a remote device each time a device is configured to provide the service to a new user.","Not only is the need for the technician to install service drivers undesirable, but the conventional installing of service drivers is also undesirable in that service may be interrupted to exiting services and\/or users. To install a service driver on a remote device, the remote device is typically shut down, the service driver software added, and the remote device is rebooted. The installation of service drivers may therefore cause service interruption to other existing services that use the remote devices.","Accordingly, the above-described setting up of network-based services generally involves a technician being involved every time a service is provided to a user. This is undesirable. Moreover, the setting up of services for new users often results in service interruption to existing users. This is undesirable. A system is sought that eliminates the cost, time, complexity and service interruption associated with setting up such network-based services.","To set up a network-based service for a first user, one or more devices involved in carrying out the service are configured. These devices can include networking devices and\/or computing devices. To configure a device, a \u201cpolicy distribution point\u201d (PDP) is identified that is located in close proximity to the device to be configured. The policy distribution point may, for example, be embodied in a hardware device located in the field in close proximity to the device to be configured. Once the PDP is identified, a suitable \u201cservice driver\u201d is installed on the PDP so that the PDP can communicate with the device. If a suitable service driver has already been installed on the PDP, then the service driver does not need to be reinstalled. It is merely reused.","If, however, a suitable service driver is not already installed on the PDP, then the service driver may be sent to the running PDP across the network. The service driver is installed on the PDP automatically without rebooting the PDP and without disturbing the operation of any other service drivers that may be installed on the PDP.","Once the required service driver is installed on the PDP, an \u201cactivation\u201d is sent to the running PDP. The activation in one example is in XML format and includes both a configuration parameter related to the network-based service as well as a configuration parameter related to the first user. The service driver in the PDP translates the activation into device-specific instructions that are sent from the PDP to the device being configured. The device-specific instructions are instructions understood by the device to be configured. When received, the device-specific instructions configure the device so as to set up the service for the first user.","In accordance with a second embodiment of the present invention, there is also a second device that needs to be configured to set up the service for the first user. A PDP associated with this second device is identified. In the manner set forth above, a suitable service driver is installed on the second PDP. A second activation is then sent to the second PDP such that the service driver in the second PDP translates the second activation into device-specific instructions for the second device. The device-specific instructions are sent from the second PDP to the second device thereby configuring the second device. Network-based services involving both computing devices and\/or networking devices can be set up in this way.","In accordance with a third embodiment of the present invention, the running PDP used to set up a service for the first user is also used to set up a service for a second user. The running PDP receives a third activation. The third activation contains another configuration parameter related to the network-based service and another configuration parameter related to a second user. The service driver already installed on the PDP for the first user then translates the third activation into third device-specific instructions. The third device-specific instructions are sent to the first device so as to set up the service for the second user. Accordingly, the same service driver that is used to set up the network-based service for the first user is also used to set up the network-based service for the second user.","In accordance with some embodiments, the PDP is not a monolithic block of code, but rather involves modular blocks of code. These blocks of code include a service driver infrastructure portion and one or more service drivers. The service drivers couple to and interact with the infrastructure via a predefined interface. This predefined interface facilitates the installation of service drivers onto the PDP at run time without disturbing the operation of other software running on the PDP, including previously installed service drivers. Service drivers are installed automatically and remotely without any action by technicians or service personnel. Once installed, the service drivers automatically translate activations as necessary to generate and send device-specific instructions to the devices to be configured.","In one novel aspect, a PDP is disposed in proximity to the device to be configured such that sensitive information in the device-specific instructions does not pass over the internet. A PDP may, for example, be disposed in a company building where the user to be supplied with the network-based service is a company employee who works in the building. The PDP and the device to be configured communicate via a secure company network within the building. By locating both the PDP and the device to be configured on the secure company network, the device-specific instructions are communicated from the PDP to the device via the secure network without sending the sensitive information in the device-specific instructions out over the internet.","Other embodiments are also disclosed in the detailed description below. This summary does not purport to define the invention. The invention is defined by the claims.","Reference will now be made in detail to some embodiments of the invention, examples of which are illustrated in the accompanying drawings.",{"@attributes":{"id":"p-0031","num":"0030"},"figref":"FIG. 1"},"Step  in  consists of an xAuthority core server sending two service drivers to a \u201cpolicy distribution point\u201d (PDP). One service driver is used to configure the firewall, and the other is used to configure the e-mail server. The core server retrieves these service drivers from its service driver library.","In this first embodiment, the PDP is a computing element that facilitates communication between the xAuthority core server and the devices to be configured. The software on the PDP is not a single monolithic piece of software code, but rather includes modular pieces of software, including one or more service drivers and a service driver infrastructure portion. The service driver infrastructure portion and the service drivers interact using a predefined standard interface. This standard interface allows the two service drivers to be added to the PDP while the PDP is running and without disrupting the operation of already-installed service drivers. (For more information on PDPs including their structure and operation, see provisional application Ser. No. 60\/354,268, pp. 18, 39, 85, 123 and 351).","In step , a configurable input engine of the xAuthority core server generates \u201cactivations\u201d in the form of XML documents and sends them to the PDP. (For additional information on a configurable input engine and on a service creation process in general, see: U.S. patent application Ser. No. 10\/213,043, entitled \u201cSystem and Method For Setting Up User Self-Activating Network-Based Services\u201d, by Bellinger et al., filed Aug. 5, 2002, now U.S. Pat. No. 7,024,470.","The activations contain configuration parameters and other information used to configure the e-mail server and the firewall to set up the e-mail service for the user. The activations are received by the PDP in step . In step , the service drivers that have already been installed on the PDP translate the activations into formats and instructions that the e-mail server and the firewall can understand. In step , the PDP then sends the device-specific instructions to the e-mail server and firewall. The instructions configure those devices to set up e-mail service for the user in step . The PDP also sends responses in the form of XML messages back to the core server indicating whether actions requested in activations have succeeded or failed.","Software Components Of First Embodiment:",{"@attributes":{"id":"p-0036","num":"0035"},"figref":"FIG. 2","b":["200","201","202","200","203","205","206","206","207"]},"In addition to having a library of service drivers, the xAuthority core server also has a library of policy solvers. Policy solvers are formatting programs that determine special formatting requirements that specific device types require for information used to configure them. Policy solvers query service driver objects for each device type in order to compile the formatting requirements. For example, a specific e-mail server may require three configuration parameters in a specific order, whereas a specific firewall router may require a different number of attributes in another specific order. The policy solvers ensure that the activations contain the required information from the configuration parameters in the correct order and form.","Individual service driver objects and resource objects need be created and configured only once. Thereafter, they are stored in the library of service drivers, from which they are retrieved and installed on the appropriate PDP. Alternatively, service drivers that have already been installed on a PDP can be reused and need not be added to the PDP a second time. For example, if resource object  for the e-mail server already exists in the service driver library and is correctly configured, then it does not need to be recreated by a system administrator of the ISP or public telephone carrier. Moreover, if service driver object  is already present on the PDP, then it does not need to be added a second time.","In the embodiment of , the service drivers on the PDP use implementation formats, such as shared-object and script formats. In a shared-object service driver, the shared-object source code determines how service driver components (activation objects , resource objects , service driver objects ) perform the actions defined by the input engine. In a script-based service driver, each service driver component has an associated script that performs the actions associated with that component.","In the embodiment of , the input engine can configure service driver components using four actions: GET, SET, ADD and DELETE. By executing the ADD action on an object, another object can be added below that object. An object can be deleted by executing the DELETE action on the object itself. Activation objects have no ADD action because no child object can be linked below an activation object. The ADD action can also be applied to a service driver object to install the service driver object on a PDP.","The same service driver object is used with resource objects and activation objects added below that service driver object, for example when the same type of service is offered to two different users through two devices of the same type. When a second user is added in the embodiment of , the same service driver object  is used together with resource objects  and  to configure two distinct e-mail servers of the same type, the first connected to the computer of the existing user and the second connected to the computer of the second user. Service driver object  also uses information contained in activation objects  and  to configure the two e-mail servers to provide service to the existing user and the second user, respectively. (For more information on actions (also called operations), see provisional application Ser. No. 60\/354,268, pp. 158, 172).","More Detailed Description:","The method of configuring devices to set up a network-based service shown in the flowchart in  will now be described in more detail by referring to a second embodiment of the method of . This more detailed description is described in connection with system  in .","In , an ISP provides a user  with access to e-mail that is protected by a firewall. The e-mail service is provided using, among other devices, a firewall router  and an e-mail server . In system , the e-mail server  is integrated into a LAN server that runs a local area network (LAN) . User  reads e-mails on his computer , which is located on LAN . E-mails enter LAN  from internet  through the firewall router .","To set up the e-mail service for user , the ISP configures the firewall  and the e-mail server  using an xAuthority core server  and a \u201cpolicy distribution point\u201d (PDP) . In this second embodiment, PDP  is a computing element that facilitates communication between xAuthority core server  and the devices to be configured.","In this specific example of step  of , two service drivers are added to PDP  without shutting down the network management system of PDP . A separate service driver is used for each type of device that is used to deliver a network-based service. In this second embodiment, a first service driver  is used to configure the firewall router , and a second service driver  is used to configure e-mail server .","Each of service drivers  and  has two main components. First, it contains information about the characteristics of the devices it manages and the relationship between those devices. Second, it contains source code (shared-object or script) that defines how the actions ADD, DELETE, GET and SET are to be performed on the devices to be configured.","These two service drivers  and  are installed by coupling them to a predefined standard interface  on the service driver infrastructure portion . This standard interface  is an application programming interface (API) that facilitates the adding of service drivers  and  to PDP  while PDP  is running and without disrupting the operation of service drivers that have already been installed, for example a service driver  for a VPN server. Service drivers  and  are installed without having to shut down PDP , thereby avoiding the need to reboot the PDP.",{"@attributes":{"id":"p-0048","num":"0047"},"figref":["FIG. 4","FIG. 2","FIG. 3","FIG. 4","FIG. 4"],"b":["309","309","311","312","313","325","200","299","300","399","400","499"]},"In step  in , activations are generated by configurable input engine  (see ) of core server . In this embodiment, each of activations  and  includes both a configuration parameter related to the network-based service (e-mail access), as well as another configuration parameter related to user . Activation  contains a configuration parameter related to providing the service through firewall router . Activation  contains a configuration parameter related to providing the service on e-mail server . Some examples of configuration parameters that relate to the e-mail service are: quality of service, access mechanism, IP address of firewall, IP address of e-mail server, location of e-mail server, physical port used on e-mail server, connection speed and bandwidth required. Some examples of configuration parameters that relate user  are: username of user , password of user , and the IP address of computer  of user . In another embodiment, an activation can also include a commercial term in addition to configuration parameters. Some examples of commercial terms are: how much to pay, payment method, duration of service and frequency of payment.","The information in an activation, including the information in the configuration parameters, is formatted as an activation object that is an XML document. An activation contains the information used to configure a specific device for a specific service for one user. Where a service for one user requires more than one device, more than one activation is generated.","In step , PDP  receives activations  and  from xAuthority core server  in the form of XML over HTTP via secure network . Secure network  may, for example, be maintained by the ISP. PDP  also sends responses in the form of XML messages back to core server  indicating whether actions requested in activations  and  have succeeded or failed.","Each activation is routed within PDP  to the appropriate service driver, which was pre-configured in the input engine to be the activation's associated parent object. Here, service driver  translates configuration parameters in activation object  relating to user  and the particular e-mail server  in LAN  that will be used to provide service to user . Service driver  translates information in activation object  related to firewall .","A service driver object is also created for each operational support system (OSS) that the e-mail service uses. For example, service driver objects  can be created to interface with billing systems and customer relationship management (CRM) systems.","In step , while the software executing on PDP  is still running, the service drivers  and  added in step  translate activations  and  from XML into machine-readable, device-specific instructions. Activation  is translated into device-specific instructions  written in HTML suitable for configuring firewall router . Activation  is translated into device-specific instructions  written in Lightweight Directory Access Protocol (LDAP) suitable for configuring e-mail server .","In step , as shown in , the device-specific instructions  and  are sent from PDP , through internet , to firewall router  (a networking device) and e-mail server  (a computing device), respectively.","In step , the e-mail service is set up when the device-specific instructions  and  configure e-mail server  and firewall . The e-mail server  is configured to set up an e-mail account individualized for user . The firewall router  is configured to allow e-mails relating to the e-mail service to pass through the firewall router to the e-mail server .","PDP  is placed in close physical proximity to e-mail server  and firewall router  in order to limit the exposure of the device-specific instructions to non-secure network paths as they travel from PDP  to e-mail server  and firewall . In the second embodiment, activation  contains sensitive information, e.g., username and password of user , which is translated into device-specific instructions . In , device-specific instructions  are exposed to non-secure networks as they travel over the internet  between PDP  and e-mail server . PDP  is therefore located in close physical proximity to LAN  to limit the exposure of device-specific instructions  to non-secure networks.","Activations  and  sent from core server  to PDP , on the other hand, travel over secure network . Where there is no secure network between core server  and a PDP, activations in XML can be sent over HTTP encrypted with secure socket layer (SSL) to the PDP in order to improve security.",{"@attributes":{"id":"p-0059","num":"0058"},"figref":["FIG. 5","FIG. 5","FIG. 3","FIG. 5","FIG. 5"],"b":["308","301","317","318","308","404","405","308","314","315","316","311","112","113"]},{"@attributes":{"id":"p-0060","num":"0059"},"figref":["FIG. 6","FIG. 6","FIG. 6","FIG. 6"],"b":["302","320","321","320","321","308","1","324","320","2","321"]},{"@attributes":{"id":"p-0061","num":"0060"},"figref":["FIG. 7","FIG. 7"],"b":["303","322","317","318","322"]},"In a sixth embodiment (not shown), PDPs reside within the devices that they manage. Separate activations are sent to each device used to provide a service to one user. An additional set of activations is then sent to each device when the service is set up for an additional user.",{"@attributes":{"id":"p-0063","num":"0062"},"figref":["FIG. 8","FIG. 3"],"b":["307","324","320","324","323","306","307","306"]},{"@attributes":{"id":"p-0064","num":"0063"},"figref":["FIG. 9","FIG. 9","FIG. 9"],"b":["901","902","905","906","907"]},"Compact Disc Appendix","The Compact Disc contains:","A) a directory file AMP, 1.08 MB, written to disc 08\/19\/02; AMP contains 281 files that relate to the configuration of an xAuthority core server. For example, the file ampConfig.pl (83 KB, written to disc on Aug. 19, 2002) in the directory file AMP\\bin covers how GET and SET actions are performed.","B) a directory file PORTAL, 2.71 MB, written to disc Aug. 19, 2002; PORTAL contains 855 files. The files in directory PORTAL relate to interfaces to an xAuthority core server.","C) a directory file XLINK, 1.77 MB, written to disc Aug. 19, 2002; XLINK contains 503 files. The files in directory XLINK relate to the main logic of the functioning of an input engine of an xAuthority core server. For example, the directory file XLINK\\XLINK\\Workflow (58.9 KB, written to disc on Aug. 19, 2002) in the directory file XLINK\\XLINK contains the main files for implementing the actions ADD, DELETE, GET and SET.","D) a file CD Appendix Title Page.txt, 373 bytes, written to disc Aug. 19, 2002.","The term policy is not used in this patent document (and in the claims of this document) in the way the term policy was used in provisional application Ser. No. 60\/354,268. Sometimes the term \u201cservice driver module\u201d is used to refer to a service driver that has been configured and installed on a PDP. Remote installation of a service driver is similar to local installation of a service driver, except that the dynamic library (shared object library) that constitutes the service driver is serialized (base-64 encoded) and sent over the HTTP protocol to the PDP. Because the service driver is a shared object, it is dynamically linked by the Solaris operating system of the PDP at run time without restarting the PDP.","Although the present invention has been described in connection with certain specific embodiments (for example, as set forth in the provisional application Ser. No. 60\/354,268 that is incorporated by reference) for instructional purposes, the present invention is not limited thereto. A PDP can be a stand-alone device or, alternatively, a PDP can be software disposed within a separate hardware device, such as, for example, a core server. Accordingly, various modifications, adaptations, and combinations of various features of the described embodiments can be practiced without departing from the scope of the invention as set forth in the claims."],"BRFSUM":[{},{}],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"BRIEF DESCRIPTION OF THE DRAWINGS","p":["The accompanying drawings, where like numerals indicate like components, illustrate embodiments of the invention.",{"@attributes":{"id":"p-0021","num":"0020"},"figref":"FIG. 1"},{"@attributes":{"id":"p-0022","num":"0021"},"figref":"FIG. 2"},{"@attributes":{"id":"p-0023","num":"0022"},"figref":"FIG. 3"},{"@attributes":{"id":"p-0024","num":"0023"},"figref":"FIG. 4"},{"@attributes":{"id":"p-0025","num":"0024"},"figref":"FIG. 5"},{"@attributes":{"id":"p-0026","num":"0025"},"figref":"FIG. 6"},{"@attributes":{"id":"p-0027","num":"0026"},"figref":"FIG. 7"},{"@attributes":{"id":"p-0028","num":"0027"},"figref":["FIG. 8","FIG. 3"]},{"@attributes":{"id":"p-0029","num":"0028"},"figref":"FIG. 9"}]},"DETDESC":[{},{}]}
