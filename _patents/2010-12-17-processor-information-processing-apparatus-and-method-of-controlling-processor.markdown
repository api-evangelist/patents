---
title: Processor, information processing apparatus, and method of controlling processor
abstract: A processor includes an accumulator, a storage that outputs data to the accumulator, an error detector that outputs a first error detection signal upon detecting an error in the data, an error identifier that outputs an error identification signal indicating that an error occurs in the storage, an error identification signal holder that outputs the error identification signal as a second error detection signal, an error detection signal holder that holds the first error detection signal and outputs a cancellation signal to stop the accumulation processing of the accumulator, a first calculator that starts making a first calculation based on the second error detection signal and the cancellation signal, and outputs a correction start signal after a lapse of a calculation period, and an error corrector that corrects the error of the data upon receiving the correction start signal.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08448019&OS=08448019&RS=08448019
owner: Fujitsu Limited
number: 08448019
owner_city: Kawasaki
owner_country: JP
publication_date: 20101217
---

{"@attributes":{"id":"description"},"BRFSUM":[{},{}],"heading":["CROSS-REFERENCE TO RELATED APPLICATIONS","BACKGROUND","SUMMARY","DETAILED DESCRIPTION OF THE PREFERRED EMBODIMENTS"],"p":["This application is based upon and claims priority to prior Japanese Patent Application No. 2009-295447 filed on Dec. 25, 2009 in the Japan Patent Office, the entire contents of which are incorporated herein by reference.","1. Field","Embodiments of the present invention relate to a processor, an information processing apparatus, and a method of controlling the processor.","2. Description of the Related Art","\u201cScalable Processor ARChitecture (SPARC)-V9 (Registered Trademark of SPARC International, Inc.)\u201d has been introduced as one of the architectures of a processor, such as a central processing unit (CPU) provided in an information processing apparatus including a server or the like. According to the SPARC Architecture Version 9, sixty four to five hundred twenty eight 64-bit registers may be implemented as general-purpose registers (GPR).",{"@attributes":{"id":"p-0007","num":"0006"},"figref":["FIG. 11","FIG. 11","FIG. 11"],"b":["1","1","0","7","0","7","0","7","0","7","1","0"]},{"@attributes":{"id":"p-0008","num":"0007"},"figref":["FIG. 12","FIG. 12","FIGS. 11 and 12","FIG. 12"],"b":["2","3","3","4","5"]},"Incidentally, the method of detecting an error in data by adding a parity bit to data held in a register file and checking the parity bit added to the data has been used as one of methods of detecting a fault in an information processing apparatus. Further, the method of adding an error-correcting code (ECC) to data and correcting the data based on the ECC when an error is detected from the data has been used. For the information processing apparatus including the above described general-purpose register file, there have been demands for detecting an error and correcting data including the detected data.","Hitherto, main memories that were provided with an error-detection method achieved through the parity checking and a data-correction method performed based on the ECC have been available. For example, the main memory includes a plurality of main memory modules including, for example, a dual inline memory module (DIMM) storing data, an error detection-and-correction bit and a parity bit, a main processor configured to process information read from the main storage module, a parity-checking means arranged to perform the parity checking for the information read from the main storage module, and an error detection-and-correction means arranged to detect and correct an error in the information read from the main storage module. When the error is detected through the parity checking, the main processor suspends an information processing operation, and restarts the information processing operation after the error is corrected. Further, there have been information processing apparatuses including a memory holding data with the parity bit, a parity-checking means arranged to perform the parity checking, and an error-correction means arranged to perform the error correction based on error information transmitted from the parity-checking means.","However, since the information processing apparatus including the above described general-purpose register file is provided with multistage-selection logic in a path used to read data from the general-purpose register file, it takes much time to read the data from the general-purpose register file. Therefore, the marginal-operation frequency of a processor may be determined based on the path used to read data from the general-purpose register file. When the error-corrector using the ECC is provided in the above described read path, the time consumed to read data from the general-purpose register file is increased. Thus, it has been difficult to further provide the error-corrector in the read path.","On the other hand, according to the method of suspending the information processing operation and restarting the information processing operation after the error correction is performed, an instruction-controller or the like is informed of an error in read data when the error is detected, and the error-correction processing is performed. Therefore, the time consumed from when the error is detected to when the information processing apparatus returns to an ordinary operation state becomes equal to the sum of the time consumed to perform the error-informing processing and that consumed to perform the error-correction processing, which decreases the performance of the information processing apparatus. Further, since an error-correction state is provided in addition to the normal operation state, the configuration of a circuit controlling the error-correction state becomes complicated, which increases the amount of hardware, that is, the circuit amount.","A processor, an information processing apparatus, and a method of controlling the processor that allow for reducing the time consumed from when an error in read data is detected to when the error is corrected and the processor returns to the ordinary operation state are provided. A processor, an information processing apparatus, and a method of controlling the processor that allow for reducing the hardware amount are provided.","The processor, the information processing apparatus, and the method of controlling the processor allow for reducing the time consumed from when an error in read data is detected to when the error is corrected and the processor returns to the ordinary operation state, and reducing the hardware amount.","Japanese Laid-open Patent Publication No. 9-81465 and Japanese Laid-open Patent Publication No. 5-20215 are examples of related art.","In an aspect of an invention, a processor includes an accumulator, a storage that outputs data to the accumulator, an error detector that outputs a first error detection signal upon detecting an error in the data, an error identifier that outputs an error identification signal indicating that an error occurs in the storage, an error identification signal holder that outputs the error identification signal as a second error detection signal, an error detection signal holder that holds the first error detection signal and outputs a cancellation signal to stop the accumulation processing of the accumulator, a first calculator that starts making a first calculation based on the second error detection signal and the cancellation signal, and outputs a correction start signal after a lapse of a calculation period, and an error corrector that corrects the error of the data upon receiving the correction start signal.","The above-described embodiments of the present invention are intended as examples, and all embodiments of the present invention are not limited to including the features described above.","Reference may now be made in detail to embodiments of the present invention, examples of which are illustrated in the accompanying drawings, wherein like reference numerals refer to like elements throughout.","Hereinafter, embodiments of a processor, an information processing apparatus, and a method of controlling the processor will be described in detail with reference to the attached drawings. In the description of each of the embodiments, the similar components are illustrated with the same reference numerals so that duplication of the description is eliminated.","A first embodiment illustrates the example where data output from a storage are wrong and an error in the output data is corrected.","[Description of Information Processing Apparatus]",{"@attributes":{"id":"p-0034","num":"0033"},"figref":["FIG. 1","FIG. 1"],"b":["11","11","12","13","14","15","12","13","14","14","15","16","12","13","12","14","13","14","12","13","15"]},"[Description of Entire Processor]",{"@attributes":{"id":"p-0036","num":"0035"},"figref":["FIG. 2","FIG. 2","FIG. 2","FIG. 11","FIG. 12"],"b":["12","22","23","24","25","22","31","32","33","34","33","2","1","3","23","36","24","38","32","33","34","33","33","38","32","34","33","32","34","38"]},"The cache memory  holds data output from the memory block  and outputs the data to the storage . The cache memory  outputs the data output from the storage  to the memory block . The accumulation-controller  controls the operation of each of the accumulator  and the instruction-controller  based on a control signal output from the storage . The accumulation-controller  controls data output from and\/or input to the storage . The instruction-controller  controls the operation of each of the accumulator  and the error-corrector . The instruction-controller  is controlled through the error-corrector . The instruction-control block  controls the operation of the cache-memory control block . The memory block  stores part of and\/or the entire data stored in the storage device  (see ). The memory block  outputs data stored therein to the storage device  (see ).","[Description of Main part of Processor]",{"@attributes":{"id":"p-0039","num":"0038"},"figref":["FIG. 3","FIG. 3"],"b":["12","33","41","41","32","34","43","32","33","32","42","43","33","31","33"]},"When an error occurs in the storage , the accumulation-controller  outputs an error-identification signal GPR_DARA_ERROR which indicates that an error occurs in the storage . The checker  operates as an error-detector and the accumulation-controller  operates as an error-identifier. The instruction-controller  outputs a cancellation signal CANCEL and a correction-start signal CORRECT_START based on the error-detection signal EU_PD and the error-identification signal GPR_DATA_ERROR. The cancellation signal CANCEL is provided to stop the accumulation processing of the accumulator . The correction-start signal CORRECT_START is provided to make the error-corrector  start performing the data-error correction processing. The error-corrector  includes a corrector  and a correction-controller . The corrector  corrects an error in the data output from the storage . The correction-controller  controls the operation of the corrector  based on the correction-start signal CORRECT_START.","The data output from the error-corrector , the data being obtained through the error correction, are stored in a latch circuit . The error-corrector  outputs a correction-valid signal CORRECT_VALID and a correction-completion signal CORRECT_COMP. The correction-valid signal CORRECT_VALID indicates that the data output from the error-corrector , the data being obtained through the error correction, is valid. The correction-valid signal CORRECT_VALID is asserted while the error-corrector  performs the data-error-correction processing (see ). A selector  selects the data subjected to the error correction, the data being stored in the latch circuit , while the correction-valid signal CORRECT_VALID is asserted. The selector  selects the accumulation-result data stored in the latch circuit  while the correction-valid signal CORRECT_VALID is deasserted. That is, the selector  outputs the data output from the error-corrector , the data being obtained through the error correction, while the error-corrector  performs the data-error-correction processing. At other times, the selector  outputs the accumulation-result data output from the accumulator .","The data selected through the selector  are stored in a latch circuit . Data output from the latch circuit  are written into the storage  as write data. The instruction-controller  restarts the execution of instructions based on the correction-completion signal CORRECT_COMP. The correction-completion signal CORRECT_COMP indicates that the error-corrector  completes the data-error correction processing. Referring to the correspondence between the entire configuration illustrated in  and the main part configuration illustrated in , the checker  illustrated in  is included in the storage  in . Further, the control signal output from the accumulation-controller  to each of the accumulator  and the storage  is omitted in .","[Description of Instruction-Controller]",{"@attributes":{"id":"p-0044","num":"0043"},"figref":["FIG. 4","FIG. 5","FIG. 4","FIGS. 4 and 5"],"b":["36","12","36","51","52","53","54","55","56","51","33","33","51","34","51","51"]},"The error-detection-signal holder  is set when the error-detection signal EU_PD is asserted. The error-detection signal EU_PD is asserted over a predetermined time period when there is an error in the data output from the storage . The error-detection-signal holder  is reset (initialized) when a reset signal BIT_COUNT_ALL is asserted. The reset signal BIT_COUNT_ALL is asserted over a predetermined time period when the counter  reaches a predetermined value. The error-detection signal EU_PD and the reset signal BIT_COUNT_ALL are not asserted at the same time. The error-detection-signal holder  outputs a restoration signal RESTORE which is output to the correction-controller  (see ) and the accumulator  (see ) as the cancellation signal CANCEL. The restoration signal RESTORE (logically identical to the cancellation signal CANCEL) is asserted over the duration between the setting and the resetting (initializing) of the error-detection-signal holder .","The counter  performs counting and determines whether the time consumed to inform the controller  (see ) provided outside the processor  that an error occurs in the data output from the storage  had elapsed since the counting was started. Although the bit number of the counter  is not specifically limited, the bit number is exemplarily determined to be  in the first embodiment. When the restoration signal RESTORE is asserted, the counter  starts counting from the initial value (e.g., 0). When the counter  reaches a predetermined value, the counter  wraps around to the initial value. The first AND circuit  outputs the logical AND of the values of the bits of the counter  as the reset signal BIT_COUNT_ALL. In the case of the -bit counter , for example, the reset signal BIT_COUNT_ALL is asserted when the value of the counter  becomes \u201c1111111111\u201d. When the reset signal BIT_COUNT_ALL is asserted, the cancellation signal CANCEL is deasserted. Consequently, the operation of each of the correction-controller  (see ) and the accumulator  (see ) is stopped over the time period from when an error occurs in the data output from the storage  to when the value of the counter  becomes \u201c1111111111\u201d, for example.","The second AND circuit  outputs data of the logical AND of the error-detection-flag signal CORRECT_PEND and the reset signal BIT_COUNT_ALL as the correction-start signal CORRECT_START. The correction-start signal CORRECT_START is asserted over a predetermined period immediately after a lapse of the time period from when the error occurs in the data output from the storage  to when the value of the counter  becomes \u201c1111111111\u201d, that is, after the controller  (see ) provided outside the processor  is informed of the error. When the correction-start signal CORRECT_START is asserted, the correction-controller  (see ) starts the data-error correction processing.","The correction-state holder  is set when the correction-start signal CORRECT_START is asserted. The correction-state holder  is reset (initialized) when the correction-completion signal CORRECT_COMP is asserted. When the correction-state holder  is set, a signal indicating that the processor  is in the error-correction state is transferred to each of the circuits of the instruction-controller . Accordingly, the processor  is maintained in the error-correction state. When the correction-state holder  is reset (initialized), a signal indicating that the processor  is returned from the error-correction state to the normal state is transferred to each of the circuits of the instruction-controller . Accordingly, the processor  executes an instruction again based on the instruction-controller  and the accumulator , and starts ordinary processing again. The processor  is maintained in the ordinary state.","[Description of Operation timing]","Changes in the signals will be described in time sequence. When the parity-checking result indicates that the data output from the storage  are incorrect, the error-detection signal EU_PD output from the accumulation-controller  is asserted. Accordingly, the cancellation signal CANCEL (logically equivalent to the restoration signal RESTORE) output from the error-detection-signal holder  is asserted so that the operation of each of the accumulator  and the error-corrector  is stopped and the counter  starts counting. Further, when the incorrect data is output from the storage  due to the error occurring in the storage , the error-identification signal GPR_DATA_ERROR output from the accumulation-controller  is asserted. Accordingly, the error-detection-flag signal CORRECT_PEND output from the error-identification-signal holder  is asserted.","The error-informing processing performed for the controller provided outside the processor  and that performed inside the processor  are finished during the time period from when the counter  starts counting to when the counter  reaches the predetermined value. When the counter  reaches the predetermined value, the reset signal BIT_COUNT_ALL is asserted so that the cancellation signal CANCEL (logically equivalent to the restoration signal RESTORE) is deasserted, the counter  returns to the initial value and is stopped, and each of the accumulator  and the error-corrector  starts the operation again. Then, at the same time as when the reset signal BIT_COUNT_ALL is asserted, the correction-start signal CORRECT_START is asserted, the processor  is shifted to the error-correction state, and the error-corrector  starts the data-error correction processing. Further, since the correction-valid signal CORRECT_VALID is asserted due to the assertion of the correction-start signal CORRECT_START, the selector  outputs the data subjected to the error-correction performed through the error-corrector . When the error-corrector  completes the data-error correction processing, the correction-completion signal CORRECT_COMP output from the error-corrector  is asserted. Accordingly, the state of the processor  is shifted to the ordinary state and the correction-valid signal CORRECT_VALID is deasserted so that the selector  outputs data of the accumulation result obtained through the accumulator .","[Description of Method of Controlling Processor]",{"@attributes":{"id":"p-0053","num":"0052"},"figref":["FIG. 6","FIG. 6"],"b":["12","12","33","1","43","2","33","3","32","33","7","33","3","12","32","34","53","12","53","4","53","12","34","5","12","36","32","6","12","7"]},"The first embodiment allows for detecting an error in data through the parity checking and correcting the data error based on the error-correcting code. Therefore, the data error can be corrected through the processor  including, for example, the general-purpose register file  including the register window  illustrated in  and the readout circuit  illustrated in . Further, the error-corrector  may not be provided in a path used to read data from the general-purpose register file . Further, the data error can also be detected and corrected through the information processing apparatus  including the above described processor .","According to a processor provided with the general-purpose register file  including, for example, the register window  illustrated in  and the readout circuit  illustrated in , the error-informing processing performed inside the processor is finished in a time shorter than that consumed to perform the error-informing processing performed for a controller provided outside the processor. The time consumed to perform the error-informing processing inside the processor corresponds to a few cycles, for example. In a second embodiment, for example, the processor performs the error-informing processing for the controller provided outside the processor and the data-error correction processing in parallel for correcting an error occurring in data output from the general-purpose register file. Since the entire configuration of an entire information-processing apparatus according to the second embodiment is the similar as that described in the first embodiment illustrated in , the description thereof is omitted. The entire configuration of the processor is the similar as that described in the first embodiment illustrated in , the description thereof is omitted. However, since the processor does not enter the error-correction state in the second embodiment, there is no control signal in the configuration illustrated in , the control signal being used through the error-corrector  for informing the instruction-controller  that the error-correction state ends.","[Description of Main part of Processor]",{"@attributes":{"id":"p-0057","num":"0056"},"figref":["FIG. 7","FIG. 7","FIG. 3","FIG. 2","FIG. 7","FIGS. 2 and 3"],"b":["61","34","34","36"]},"[Description of Instruction-Controller]",{"@attributes":{"id":"p-0059","num":"0058"},"figref":["FIG. 8","FIG. 9","FIG. 8","FIG. 4"],"b":["36","12","36","51","52","53","62","54","55","63","64","53","62","62","62","53","53","54","55","63","64","63","62","63","64","62","64","56"]},"As illustrated in each of , the error-identification-signal holder  is reset (initialized) when the correction-start signal CORRECT_START is asserted. The error-identification signal GPR_DATA_ERROR and the correction-start signal CORRECT_START are not asserted at the same time. The error-detection-flag signal CORRECT_PEND output from the error-identification-signal holder  is asserted during the duration between the setting and the resetting (initializing) of the error-identification-signal holder .","The restoration signal RESTORE (the cancelation signal CANCEL) output from the error-detection-signal holder  is transferred to the accumulator  (see ), as it is, and the logic of the restoration signal RESTORE is inverted through the inverter  and the restoration signal RESTORE is transferred to the correction-controller  (see ). Therefore, the operation of the accumulator  (see ) is stopped over the time period where the restoration signal RESTORE (logically equivalent to the cancellation signal CANCEL) is asserted. In the time period where the restoration signal RESTORE (logically equivalent to the cancelation signal CANCEL) is asserted, the operation of the correction-controller  (see ) is stopped until the correction-start signal CORRECT_START is asserted and is not stopped after the correction-start signal CORRECT_START is asserted. That is, the error-corrector  also performs the data-error correction processing during the time period where the restoration signal RESTORE (logically equivalent to the cancellation signal CANCEL) is asserted.","When the restoration signal RESTORE is asserted, the second counter  starts counting from the initial value (e.g., 0) and returns to the initial value after reaching a predetermined value. The bit number of the second counter  may be of any value so long as the bit number is appropriate for measuring a time which is equal to and\/or longer than the time consumed to inform the controller  (see ) provided outside the processor  of an error. In the second embodiment, the bit number of the second counter  is exemplarily determined to be . When the value of the second counter  reaches the predetermined value (e.g., \u201c1111111111\u201d), the reset signal BIT_COUNT_ALL output from the first AND circuit  is asserted so that the error-detection-signal holder  is reset (initialized) and the cancellation signal CANCEL is deasserted. Consequently, the accumulator  (see ) restarts ordinary processing operations and the operation of the error-correction processing of the correction-controller  (see ) is stopped. Each of the second counter  and the first AND circuit  operates as the second calculator.","The third AND circuit  outputs the logical AND of the error-detection-flag signal CORRECT_PEND and the restoration signal RESTORE (logically equivalent to the cancellation signal CANCEL). Therefore, when both the error-detection-flag signal CORRECT_PEND and the restoration signal RESTORE (logically equivalent to the cancellation signal CANCEL) are asserted, the first counter  starts counting from the initial value (e.g., 0) and returns to the initial value after reaching the predetermined value. Both the error-detection-flag signal CORRECT_PEND and the restoration signal RESTORE (logically equivalent to the cancellation signal CANCEL) are asserted when both the error-identification-signal holder  and the error-detection-signal holder  are set.","The bit number of the first counter  may be of any value so long as the bit number is appropriate to measure a time equivalent to and\/or longer than the time consumed to perform the error-informing processing inside the processor  and is smaller than the bit number of the second counter . Although the bit number of the first counter  is not specifically limited, the bit number is exemplarily determined to be four in the present embodiment. When the value of the first counter  reaches a predetermined value (e.g., \u201c1111\u201d), the first calculation-period-elapse signal BIT_COUNT_ALL output from the fourth AND circuit  is asserted. The time when the first counter  starts counting falls behind the time when the second counter  starts counting by as much as the time consumed until a signal propagates through the third AND circuit . Therefore, the first counter  reaches the predetermined value faster than the second counter  does. The third AND circuit , the first counter , and the fourth AND circuit  operate as a first calculator.","The second AND circuit  outputs the logical AND of the error-detection-flag signal CORRECT_PEND and the first calculation-period-elapse signal BIT_COUNT_ALL as the correction-start signal CORRECT_START. The correction-start signal CORRECT_START is asserted over a predetermined time period immediately after a lapse of the time period from when an error occurs in the storage  to when the value of the first counter  becomes, for example, \u201c1111\u201d, that is, after the error-informing processing performed inside the processor  is completed. When the correction-start signal CORRECT_START is asserted, the correction-controller  (see ) starts the data-error-correction processing. When the correction-start signal CORRECT_START is asserted, the error-identification-signal holder  is reset (initialized) so that each of the error-detection-flag signal CORRECT_PEND and the correction-start signal CORRECT_START is deasserted.","[Description of Operation Timing]","Changes in the signals will be described in time sequence. When the parity-checking result indicates that the data output from the storage  are incorrect, the error-detection signal EU_PD output from the accumulation-controller  is asserted as illustrated in . Accordingly, the cancellation signal CANCEL (logically equivalent to the restoration signal RESTORE) output from the error-detection-signal holder  is asserted, and the operation of the accumulator  is stopped and the second counter  starts counting. Further, when the incorrect data are output from the storage  due to the error occurring in the storage , the error-identification signal GPR_DATA_ERROR output from the accumulation-controller  is asserted. Accordingly, the error-detection-flag signal CORRECT_PEND output from the error-identification-signal holder  is asserted and the first counter  starts counting.","The error-informing processing performed inside the processor  is completed during the time period from when the first counter  starts counting to when the first counter  reaches the predetermined value (the first calculation period). After reaching the predetermined value, the first counter  returns to the initial value and is stopped, and the first calculating-period-elapse signal BIT_COUNT_ALL is asserted. Consequently, the correction-start signal CORRECT_START is asserted so that the error-corrector  starts the data-error-correction processing. Further, since the correction-valid signal CORRECT_VALID is asserted due to the assertion of the correction-start signal CORRECT_START, the selector  outputs data obtained through the error correction performed through the error-corrector . When the correction-start signal CORRECT_START is asserted, the error-detection-flag signal CORRECT_PEND is deasserted.","After that, the second counter  reaches the predetermined value. The error-informing processing performed for the controller provided outside the processor  is completed during the time period from when the second counter  starts counting to when the second counter  reaches the predetermined value (the second calculation period). When the second counter  reaches the predetermined value, the second counter  returns to the initial value and is stopped, and the reset signal BIT_COUNT_ALL is asserted. Consequently, the cancellation signal CANCEL (logically equivalent to the restoration signal RESTORE) is deasserted so that the accumulator  starts operating again and the error-corrector  stops operating. Further, since the correction-valid signal CORRECT_VALID is deasserted, the selector  outputs data of the accumulation result obtained through the accumulator .","[Description of Method of Controlling Processor]",{"@attributes":{"id":"p-0071","num":"0070"},"figref":["FIG. 10","FIG. 10"],"b":["12","12","33","11","43","12","33","13","32","33","17","33","13","12","33","14"]},"When the error-identification signal GPR_DATA_ERROR is deasserted, no error occurs in the storage  (No for operation (S)). Therefore, the processor  makes the accumulator  stop performing the processing and makes the second counter  start counting. The processor  performs the error-informing processing before the second counter  reaches the predetermined value (operation (S)). When the second counter  reaches the predetermined value, the processor  executes an instruction again through the accumulator  (operation (S)), and restarts the ordinary processing (operation (S)).","On the other hand, when the error-identification signal GPR_DATA_ERROR is asserted, an error occurs in the storage  (Yes for operation (S)). Therefore, the processor  makes each of the accumulator  and the error-corrector  stop performing the processing, and makes each of the first and second counters  and  start counting. The processor  completes the error-informing processing performed inside the processor  before the first counter  reaches the predetermined value. Further, the processor  completes the error-informing processing performed for the controller provided outside the processor  before the second counter  reaches the predetermined value (operation (S)). After the first counter  reaches the predetermined value, the processor  performs the data-error-correction processing through the error-corrector  before the second counter  reaches the predetermined value (operation (S)). When the error-informing processing and the error-correction processing are completed, the processor  executes an instruction again through the accumulator  (operation (S)), and restarts the ordinary processing (operation (S)).","The similar effect as that attained through the first embodiment can also be attained through the second embodiment. Further, since the error-informing processing and the error-correction processing are performed in parallel, the time consumed from when the error in the data read from the storage  is detected to when the error is corrected and the processor  returns to an ordinary operation state becomes equivalent to the time consumed to perform the error-informing processing. That is, the processor  can return to the ordinary operation state immediately after the error-informing processing is completed. Consequently, it becomes possible to reduce the time period from when the error in the data read from the storage  is detected to when the error is corrected and the processor  returns to the ordinary operation state. Further, since the processor  is not shifted to the error-correction state when the error in the data read from the storage  is detected, the configuration of the state-control circuit is simplified and the amount of hardware (the circuit amount) is reduced.","Without being limited to the above described information processing apparatus and processor, the present invention can be applied for information processing apparatuses and processors having various configurations. For example, the present invention can be applied for anything other than a processor provided with the general-purpose register file  including the register window  illustrated in  and the readout circuit  illustrated in .","Although a few preferred embodiments of the present invention have been shown and described, it would be appreciated by those skilled in the art that changes may be made in these embodiments without departing from the principles and spirit of the invention, the scope of which is defined in the claims and their equivalents."],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"BRIEF DESCRIPTION OF THE DRAWINGS","p":[{"@attributes":{"id":"p-0018","num":"0017"},"figref":"FIG. 1"},{"@attributes":{"id":"p-0019","num":"0018"},"figref":"FIG. 2"},{"@attributes":{"id":"p-0020","num":"0019"},"figref":"FIG. 3"},{"@attributes":{"id":"p-0021","num":"0020"},"figref":"FIG. 4"},{"@attributes":{"id":"p-0022","num":"0021"},"figref":"FIG. 5"},{"@attributes":{"id":"p-0023","num":"0022"},"figref":"FIG. 6"},{"@attributes":{"id":"p-0024","num":"0023"},"figref":"FIG. 7"},{"@attributes":{"id":"p-0025","num":"0024"},"figref":"FIG. 8"},{"@attributes":{"id":"p-0026","num":"0025"},"figref":"FIG. 9"},{"@attributes":{"id":"p-0027","num":"0026"},"figref":"FIG. 10"},{"@attributes":{"id":"p-0028","num":"0027"},"figref":"FIG. 11"},{"@attributes":{"id":"p-0029","num":"0028"},"figref":"FIG. 12"}]},"DETDESC":[{},{}]}
