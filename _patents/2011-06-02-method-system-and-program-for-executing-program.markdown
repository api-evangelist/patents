---
title: Method, system, and program for executing program
abstract: A computer implemented method for virtually executing a program having property declarations of classes in a first programming language that is a dynamic scripting language on an execution system of a second programming language. The method includes: generating an interface class from a property name in the first programming language; loading the interface class; and preparing a class hierarchy on the execution system of the second programming language. A system and a computer readable article of manufacture for executing the same are also provided.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08806432&OS=08806432&RS=08806432
owner: International Business Machines Corporation
number: 08806432
owner_city: Armonk
owner_country: US
publication_date: 20110602
---

{"@attributes":{"id":"description"},"BRFSUM":[{},{}],"heading":["CROSS-REFERENCE TO RELATED APPLICATION","BACKGROUND OF THE INVENTION","SUMMARY OF THE INVENTION","DETAILED DESCRIPTION OF THE PREFERRED EMBODIMENTS","REFERENCE SIGNS LIST"],"p":["This application claims priority under 35 U.S.C. \u00a7119 from Japanese Patent Application No. 2010-128092 filed Jun. 3, 2010, the entire contents of which are incorporated herein by reference.","1. Technical Field","The present invention relates to a technique for calling and executing a program on a computer.","2. Related Art","Dynamic scripting languages such as PHP and more static programming languages such as Java\u00ae have been used as programming language processing and execution systems used in server environments. Recently, arrangements have been provided in which a dynamic scripting language program such as a PHP program declares a class of a static language platform such as Java\u00ae virtual machines or the Common Language Infrastructure (CLI) so that, for example, PHP programs can readily invoke class assets of Java\u00ae with untyped access to these classes enabled.","Since a Java\u00ae VM is a static programming environment a loaded class object remains in memory for a long period of time. In contrast, in a programming model of a dynamic language processing system such as PHP, in general, a period during which a loaded class object resides on a memory is relatively short.","Japanese Unexamined Patent Application Publication No. 2007-109044 relates to conversion of a program in which the process varies with the content of an argument to a program that can be readily analyzed and discloses a dedicated called program generation unit that detects a called program; each argument changing the process of the called program, and each content of the argument in a program group and generates a program for executing only a part of the process of the called program; the part corresponding to the content of the argument, as a dedicated called program for the argument and the content of the argument; a call position detection unit that detects a call position at which the called program is called from the program group; and a calling program rewriting unit that rewrites the call position so that the dedicated called program generated by the dedicated called program generation unit is called.","US 2008\/0163167 A1 relates to a technique for executing a Java\u00ae object method invocation using a scripting language. There are disclosed a method for providing a unitary system for invoking a Java method from a Java access implementation of a scripting language and a technique for enabling field access by name.","Japanese Patent Application No. 2008-298346 describes a method for allowing handling of an unknown type object and allowing avoidance of an increase in overhead of execution, particularly as an application programming interface so as to provide a method for accessing an unknown type object at high speed. The programming interface includes a function capable of directly using a value in a field even when the type of the field to be accessed is a primitive type; a function capable of directly using a primitive type value even when the type of a parameter or a return value of a method to be called is a primitive type; and a function capable of generating runtime code specialized in a class of an object to be accessed. In the generated code, a designated method such as a getter\/setter method is directly called.","In Project Zero development guide, it is disclosed that the PHP Java Bridge in WebSphere sMash can be used to interact with Java\u00ae objects, implement Java interfaces, and instantiate and extend Java classes. In the Project Zero development guide, code for invoking Java classes from PHP code is described. For example, the following exemplary code is shown:",{"@attributes":{"id":"p-0012","num":"0011"},"tables":{"@attributes":{"id":"TABLE-US-00001","num":"00001"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"49pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"168pt","align":"left"}}],"thead":{"row":{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"<?php"]},{"entry":[{},"..."]},{"entry":[{},"$map = new Java(\u201cjava.util.HashMap\u201d);"]},{"entry":[{},"$map->put(\u201ctitle\u201d,\u201cJava Bridge\u201d);"]},{"entry":[{},"..."]},{"entry":[{},"echo $map->get(\u201ctitle\u201d).\u201c\\n\u201d;"]},{"entry":[{},"..."]},{"entry":[{},"?>"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}]}}}}},"However, in the known art, a problem still exist in that, when dynamic access to a generated class object from a dynamic scripting language processing system such as PHP is enabled, access must be performed as a slow hash table access for each time and thus results in a bad execution performance, as described above.","Accordingly, it is an object of the invention to reduce the overhead of access to a static class of, for example, a Java\u00ae VM from a dynamic scripting language processing system such as PHP.","One aspect of the present invention provides a computer implemented method for virtually executing a program in a first programming language that is a dynamic scripting language, the program having property declarations of classes, on an execution system of a second programming language, the method including the steps of: generating an interface class that is uniquely determined from a property name in the program in the first programming language; loading the interface class; and preparing, for a first class of the first programming language occurring during execution of the program in the first programming language, and when the first class of the first programming language directly inherits a second class of the second programming language, a class hierarchy on the execution system of the second programming language so that the class hierarchy corresponds to a dynamically created class hierarchy on the program in the first programming language by caching a second class of the second programming language inheriting a first class of the second programming language, and with the first class of the second programming language corresponding to the first class of the first programming language being a key, where fields are prepared in the first and second classes of the second programming language corresponding to the respective property declarations of the first and second classes of the program in the first programming language, and a property access step via the interface classes is enabled by the classes of the second programming language prepared so as to implement the interface classes.","Another aspect of the present invention provides a non-transitory computer readable article of manufacture tangibly embodying computer readable instructions which when executed causes a computer to carry out the steps of a method for virtually executing a program in a first programming language that is a dynamic scripting language, the program having property declarations of classes, on an execution system of a second programming language, the method including the steps of: generating an interface class that is uniquely determined from a property name in the program in the first programming language; loading the interface class; and preparing, for a first class of the first programming language occurring during execution of the program in the first programming language, and when the first class of the first programming language directly inherits a second class of the second programming language, a class hierarchy on the execution system of the second programming language so that the class hierarchy corresponds to a dynamically created class hierarchy on the program in the first programming language by caching a second class of the second programming language inheriting a first class of the second programming language, and with the first class of the second programming language corresponding to the first class of the first programming language being a key, where fields are prepared in the first and second classes of the second programming language corresponding to the respective property declarations of the first and second classes of the program in the first programming language, and a property access step via the interface classes is enabled by the classes of the second programming language prepared so as to implement the interface classes.","Another aspect of the present invention provides a computer implemented system for virtually executing a program in a first programming language that is a dynamic scripting language, the program having property declarations of classes, on an execution system of a second programming language, the system including: means for generating an interface class that is uniquely determined from a property name in the program in the first programming language; means for loading the interface class; and means for preparing, for a first class of the first programming language occurring during execution of the program in the first programming language, and when the first class of the first programming language directly inherits a second class of the second programming language, a class hierarchy on the execution system of the second programming language so that the class hierarchy corresponds to a dynamically created class hierarchy on the program in the first programming language by caching a second class of the second programming language inheriting a first class of the second programming language, and with the first class of the second programming language corresponding to the first class of the first programming language being a key, where fields are prepared in the first and second classes of the second programming language corresponding to the respective property declarations of the first and second classes of the program in the first programming language, and a property access step via the interface classes is enabled by the classes of the second programming language prepared so as to implement the interface classes.","An embodiment of the present invention will now be described with reference to the drawings. It is to be understood that the embodiment is for the purpose of describing a preferred aspect of the present invention and is not intended to limit the scope of the invention thereto. Moreover, unless otherwise specified, the same signs denote the same components throughout the drawings referenced below.","According to the present invention, in order to virtually execute, multiple times, processing from the start to end of a program in a dynamic scripting language such as PHP, as an implementation with a single program execution in a language such as Java\u00ae, the implementation consists of a special class loader generating and loading, as necessary, a Java\u00ae interface class I(p) that is uniquely determined from a property name p in PHP. Here a dynamic scripting language such as PHP is expected to have a language construct for property declarations of classes and an implementation language is expected to provide a dynamic class loader mechanism as such found in Java\u00ae. The special class loader is either the same one as the class loader loading Java\u00ae classes generated corresponding to program files, classes, and the like in PHP, or another class loader that is a parent of the former class loader.","According to the present invention, there is a step of preparing, for class C of PHP occurring during execution of a program in PHP, when class C directly inherits class B, a class hierarchy on Java\u00ae that is the same as a dynamically created class hierarchy on PHP by caching class C\u2032 of Java\u00ae inheriting class B\u2032, with class B\u2032 of Java\u00ae corresponding to class B of PHP being a key, during execution of the program.","A step of enabling property access via interfaces is executed by, in a step of generating class C\u2032 of Java\u00ae corresponding to class C of PHP,","a) declaring class C\u2032 so as to set (extend) class B\u2032 as its superclass,","b) preparing fields in the classes of Java\u00ae corresponding to the respective property declarations of the classes of PHP, and","c) declaring the classes of Java\u00ae so as to implement the aforementioned interface class I(p) so as to provide, as an implementation of a method provided in a corresponding interface, code for property access as access to the fields of Java\u00ae.","According to the present invention, furthermore, in Java\u00ae code corresponding to object access in PHP, a step of performing a runtime class examination (instance of operation in Java) of a target object is first executed. This step (runtime property interface examination) includes:","a) a step of performing, when the interface class I(p) corresponding to the property p that is being accessed is implemented, a method call for fast property access via a corresponding interface of the object, and","b) a step of performing, when the interface class I(p) corresponding to the property p that is being accessed is not implemented, low-speed property access by a known, ordinary method such as a table search for an accessor object.","According to the present invention, a step of searching for an accessor necessary in the prior arts is unnecessary, and calling code is generated so that only a type examination needs to be executed. Thus, a code call is fastened.","Referring to , a block diagram of computer hardware for implementing a system configuration and processing according to an embodiment of the present invention is shown. In , a CPU , a main memory (RAM) , a hard disk drive (HDD) , a keyboard , a mouse , and a display  are connected to a system bus . The CPU  is preferably based on the 32-bit or 64-bit architecture. For example, Pentium (trademark) 4 or Core (trademark) 2 Duo of Intel Corporation or Athlon (trademark) of AMD can be used as the CPU . The main memory  has preferably a capacity of 1 GB or more, more preferably, a capacity of 2 GB or more.","An operating system is stored in the hard disk drive . The operating system may be any one suitable for the CPU , such as Linux (trademark), Windows (trademark) 7, Windows XP (trademark), or Windows (trademark) 2003 Server of Microsoft Corporation, or Mac OS (trademark) of Apple Computer.","Moreover, programs for causing the system to operate as a Web server, such as Apache, are also stored in the hard disk drive  and loaded into the main memory  at system startup.","Moreover, the Java\u00ae Runtime Environment program for implementing a Java\u00ae virtual machine (VM) is also stored in the hard disk drive  and loaded into the main memory  at system startup.","Moreover, Java\u00ae class objects, a loader, a PHP Java\u00ae bytecode generator, and source code written in PHP are also stored in the hard disk drive . In the present invention, Java\u00ae class objects, a loader, and a PHP Java\u00ae bytecode generator in the prior arts are modified so as to execute functions such as a class inheritance cache described below. The details will be described below.","The keyboard  and the mouse  are used to manipulate graphic objects displayed on the display , such as an icon, a task bar, and a window, in accordance with a graphical user interface provided by the operating system.","The display  is preferably, but not limited to, a 32-bit true color LCD monitor with a resolution of at least 1024*768.","A communication interface  is preferably connected to a network using the Ethernet\u00ae protocol. The communication interface  receives a processing request from a client computer (not shown) or returns a processing result to a client computer (not shown) in accordance with a communication protocol such as TCP\/IP using functions provided by Apache.","Functional elements for carrying out the present invention and their functions will next be described with reference to a functional layer block diagram in .","In , the bottommost layer is an operating system . In one embodiment, the operating system  is, but not limited to, Windows (trademark) 2003 Server or Linux (trademark).","A Java\u00ae VM  of a version suitable for the operating system  operates above the operating system .","A PHP Java\u00ae bytecode generator , a loader , and a Java\u00ae runtime library  according to the present invention operate above the layer of the Java\u00ae VM . In one embodiment, the PHP Java\u00ae bytecode generator  is implemented by modifying some functions of an ordinary PHP processing system and generates bytecode that can be executed by the Java\u00ae VM  by interpreting PHP source code (script). In this case, it should be noted that the loader  and the Java\u00ae runtime library  are also modified so as to implement the functions of the present invention.","PHP source code  is stored in the hard disk drive  and is a file that includes statements described in <?php\u02dc?> and has an extension php, as is known. In response to a request received from a client computer (not shown) via a network, the PHP Java\u00ae bytecode generator  generates bytecode by interpreting and executing the specified PHP source code .","A process in which the PHP Java\u00ae bytecode generator  and the like register a class by interpreting the content of the PHP source code  will next be described with reference to flowcharts in .","In step  in , when a declaration of a class exists in the PHP source code , the PHP Java\u00ae bytecode generator  looks up a class object registered in a runtime symbol table by the declared class name. The runtime symbol table is an area that is reserved in the main memory  in advance so as to store, for example, class names.","When a class object registered in the runtime symbol table has been detected, in step , the process branches to step  where an error stating that the class name is duplicate is displayed and is then terminated.","When no class object registered in the runtime symbol table has been detected, in step , the process branches to step  where the PHP Java\u00ae bytecode generator  determines whether the declared class inherits (extends) a superclass.","When the PHP Java\u00ae bytecode generator  determines that the declared class does not inherit a superclass, the process branches from step  to step  where the class is registered as a class without a superclass. The process in step  will be described below in detail with reference to the flowchart in .","When the PHP Java\u00ae bytecode generator  determines that the declared class inherits a superclass, the process proceeds to step  where the PHP Java\u00ae bytecode generator  looks up a class object registered in the runtime symbol table by the superclass name.","When no superclass registered in the runtime symbol table has been detected, in step , the process branches to step  where an error stating that no superclass has been detected is displayed and is then terminated.","When a superclass registered in the runtime symbol table has been detected, in step , the process branches to step  where the class is registered as a class with a superclass. The process in step  will be described below in detail with reference to the flowchart in .","The process of registering a class as a class without a superclass will next be described with reference to the flowchart in . In step , the PHP Java\u00ae bytecode generator  attempts to fetch a class object to a relevant place, i.e., a permanent class cache related to the PHP code that is currently processed.","When a class object has been fetched, in step , the process branches to step  where the class object is registered in the runtime symbol table by the declared class name and is then terminated.","When no class object has been fetched in step , the process branches from step  to step  where the PHP Java\u00ae bytecode generator  generates and loads the Java\u00ae VM bytecode of a class inheriting a base class of a PHP object.","In step , the PHP Java\u00ae bytecode generator  stores the loaded class object in the relevant place, i.e., the permanent class cache related to the PHP code that is currently processed, and the process proceeds to step . In step , the class object is registered in the runtime symbol table by the declared class name, and then, the process is terminated.","The process of registering a class as a class with a superclass will next be described with reference to the flowchart in . In step , the PHP Java\u00ae bytecode generator  attempts to fetch a class object from a relevant place, i.e., a permanent class inheritance cache, in a memory, related to the PHP code that is currently processed, with the class object of the superclass being a key.","When a class object has been fetched, in step , the process branches to step  where the class object is registered in the runtime symbol table by the declared class name and is then terminated.","When no class object has been fetched in step , the process branches from step  to step  where the PHP Java\u00ae bytecode generator  generates the Java\u00ae VM bytecode of a class inheriting the class object of the superclass.","In step , the PHP Java\u00ae bytecode generator  loads the bytecode using a class loader of the superclass or any child class.","In step , the PHP Java\u00ae bytecode generator  stores the loaded class object in the relevant place, i.e., the permanent class inheritance cache, in a memory, related to the PHP code that is currently processed, with the class object of the superclass being a key, and the process proceeds to step . In step , the class object is registered in the runtime symbol table by the declared class name, and then, the process is terminated.","While the process of loading and registering a Java\u00ae class according to a class described in PHP source code has been described, further description will be given using a specific example to deepen understanding of the present invention.",{"@attributes":{"id":"p-0073","num":"0072"},"figref":"FIG. 8","b":"406"},"The PHP class hierarchy is composed of Dashlet serving as a superclass, DashletGeneric inheriting Dashlet, and MyCasesDashlet inheriting DashletGeneric, as shown in the drawing.","The Java\u00ae class hierarchy generated corresponding to the PHP class hierarchy is composed of PHPObject serving as a superclass, C1_Dashlet inheriting PHPObject, C2_DashletGeneric inheriting C1_Dashlet, and C3_MyCasesDashlet inheriting C2_DashletGeneric.","In the Java\u00ae classes generated corresponding to the PHP classes, PHPObject is set as a base superclass, as can be seen from the drawing. In the Java\u00ae classes, the hierarchical structure under PHPObject corresponds to the PHP class hierarchy. Preferably, an appropriate prefix is automatically attached to each corresponding class name by the PHP Java\u00ae bytecode generator  so as to avoid class name conflicts.",{"@attributes":{"id":"p-0077","num":"0076"},"figref":["FIG. 9","FIG. 8"]},{"@attributes":{"id":"p-0078","num":"0077"},"figref":["FIG. 10","FIG. 2"],"b":["1002","1004","1006"]},"According to the present invention, for a PHP class, a Java\u00ae class with a unique name is generated. That is, for class B described in the PHP source code , a Java\u00ae class  named PO12_B is generated using a prefix PO12_. For class B described in the PHP source code , a Java\u00ae class  named PO56_B is generated using a prefix PO56_. Such prefixes are automatically generated by the PHP Java\u00ae bytecode generator  so as to avoid class name conflicts.","The reason why a single Java\u00ae class is uniquely generated for each of class B described in the PHP source code  and class B described in the PHP source code  in this manner is that each class B has no superclass in a PHP script.","According to the present invention, for a class having no superclass, a class object is stored in a permanent class cache reserved in a predetermined area in the main memory , as shown in step  in .","On the other hand, for class C described in the PHP source code , different Java\u00ae classes  and  respectively having prefixes PO234_ and PO567_ are generated, depending on which of class B described in the PHP source code  and class B described in the PHP source code  is inherited.","Moreover, according to the present invention, for a class having a superclass, a class object is stored in a permanent class inheritance cache, as shown in step  in . A class inheritance relationship cache table  shown in  holds inheritance relationships between class objects stored in a permanent class cache and class objects stored in a permanent class inheritance cache. Information in the class inheritance relationship cache table  is located at a predetermined location in the main memory .",{"@attributes":{"id":"p-0084","num":"0083"},"figref":"FIG. 11","b":["1012","1012"]},{"@attributes":{"id":"p-0085","num":"0084"},"figref":"FIG. 12","b":"1202"},"Moreover, it should be noted that a Java class  corresponding to PHP source code  implements interface class PropertyHolder_q corresponding to property name $q in the PHP source code  and overrides protected PHPValue getReflectivelyNoWarning(NameString propName){ } in the Java code . Interface class PropertyHolder_q, together with a class implementing it, is generated by the PHP Java\u00ae bytecode generator . The details of PropertyHolder_q will be described below.",{"@attributes":{"id":"p-0087","num":"0086"},"figref":"FIG. 13","b":["1306","1308","1302","1304","1302","1310","1312"]},{"@attributes":{"id":"p-0088","num":"0087"},"figref":"FIG. 14","b":["1302","1304","1302"]},"Moreover,  shows a hierarchy of class loaders including an on-demand interface loader. The class loaders are shown as the loader  in .","In , ScriptBuilder is a class loader loading a group of pieces of Java bytecode generated corresponding to PHP scripts (source code) (each class loader can be discarded at a time).","In this case, OnDemandInterfaceLoader is a class loader loading a group of pieces of Java bytecode of interfaces created for individual property names. For the security of Java class loaders, a class using an interface for each property needs to be loaded by a class loader having loaded the interface or a child class loader (independent of the inheritance relationship between classes) of the class loader. Thus, the hierarchy as shown in  is adopted.","It is assumed that, when such Java classes are generated corresponding to PHP classes, the following PHP code exists:",{"@attributes":{"id":"p-0093","num":"0092"},"tables":{"@attributes":{"id":"TABLE-US-00002","num":"00002"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"77pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"140pt","align":"left"}}],"thead":{"row":{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"<?php"]},{"entry":[{},"include \u201cview\/C.php\u201d"]},{"entry":[{},"$o = new C;"]},{"entry":[{},"$v = $o->p;"]},{"entry":[{},"?>"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}]}}}}},"where it is assumed that view\/C.php is the following code:",{"@attributes":{"id":"p-0095","num":"0094"},"tables":{"@attributes":{"id":"TABLE-US-00003","num":"00003"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"77pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"140pt","align":"left"}}],"thead":{"row":{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"<?php"]},{"entry":[{},"class C extends B {"]},{"entry":[{},"var $p;"]},{"entry":[{},"}"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}]}}}}},"Then, bytecode is generated by the PHP bytecode generator  so that a part $v=$o\u2192p; is converted to the following Java code:",{"@attributes":{"id":"p-0097","num":"0096"},"tables":{"@attributes":{"id":"TABLE-US-00004","num":"00004"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"35pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"182pt","align":"left"}}],"thead":{"row":{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"PHPValue v = (o instanceof PropertyHolder_p) ?"]},{"entry":[{},"\u2003\u2003((PropertyHolder_p) o).get_p( ):"]},{"entry":[{},"\u2003\u2003Op.shPROPERTY_R(o,runtime,\u201cp\u201d);"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}]}}}}},"That is, when o is the instance of PropertyHolder_p, ((PropertyHolder_p) o).get_p( ) is executed. This is getter access and thus relatively fast.","On the other hand, when o is not the instance of PropertyHolder_p, Op.shPROPERTY_R(o,runtime,\u201cp\u201d) is executed and takes a relatively long time.","Specifically,",{"@attributes":{"id":"p-0101","num":"0100"},"tables":{"@attributes":{"id":"TABLE-US-00005","num":"00005"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"21pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"196pt","align":"left"}}],"thead":{"row":{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"PHPValue shPROPERTY_R(PHPValue o, Runtime r,"]},{"entry":[{},"String propertyName)"]},{"entry":[{},"{"]},{"entry":[{},"\u2003\u2003\u2002if (o instanceof PHPObject) {"]},{"entry":[{},"\u2003\u2003return ((PHPObject) o).getNotDeclared(propertyName);"]},{"entry":[{},"\u2003\u2003\u2002} else {"]},{"entry":[{},"\u2003\u2003...."]},{"entry":[{},"\u2003\u2003\u2002}"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}]}}}},"br":{},"b":"1202","figref":"FIG. 12"},{"@attributes":{"id":"p-0102","num":"0101"},"tables":{"@attributes":{"id":"TABLE-US-00006","num":"00006"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"56pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"161pt","align":"left"}}],"thead":{"row":{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"\u2003\u2003\u2003properties.get(propertyName);"]},{"entry":[{},"takes a long time."]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}]}}}}},"However, an arrangement provided by the present invention enables avoidance of execution of heavy processing such as PHPVaIue v=Op.shPROPERTY_R(o,runtime,\u201cp\u201d); when o is the instance of PropertyHolder_p at $v=$o\u2192p;.","For reference purposes, bytecode corresponding to",{"@attributes":{"id":"p-0105","num":"0104"},"tables":{"@attributes":{"id":"TABLE-US-00007","num":"00007"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"35pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"182pt","align":"left"}}],"thead":{"row":{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"PHPValue v = (o instanceof PropertyHolder_p) ?"]},{"entry":[{},"\u2003\u2003((PropertyHolder_p) o).get_p( ):"]},{"entry":[{},"\u2003\u2003Op.shPROPERTY_R(o,runtime,\u201cp\u201d);"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}]}}}},"br":{}},{"@attributes":{"id":"p-0106","num":"0105"},"tables":{"@attributes":{"id":"TABLE-US-00008","num":"00008"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"189pt","align":"left"}}],"thead":{"row":{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"aload <o>"]},{"entry":[{},"dup"]},{"entry":[{},"instanceof PropertyHolder_p"]},{"entry":[{},"ifeq general"]},{"entry":[{},"checkcast PropertyHolder_p"]},{"entry":[{},"invokeinstance PropertyHolder_p.get_p( )LPHPValue"]},{"entry":[{},"goto done"]},{"entry":[{},"general:"]},{"entry":[{},".. Op.shPROPERTY_R(o,runtime,<propertyref p>);"]},{"entry":[{},"done"]},{"entry":[{},"astore <v>"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}]}}}}},"While the embodiment of the present invention has been described taking the example in which PHP is used as a dynamic scripting language, and Java\u00ae is used as a static language, those skilled in the art will appreciate that the present invention is not limited to such a specific programming language processing system or execution system but can be applied to any processing system such as Perl, Ruby, or Python that supports object-oriented concepts as a dynamic scripting language. Moreover, not limited to Java\u00ae, any execution system that supports object-oriented concepts can be used as the static language execution system.","Moreover, those skilled in the art will appreciate that the present invention can be used in not only a server environment but also any environment such as a stand-alone environment or a cloud computing environment and is not limited to a specific operating system or hardware.",{"@attributes":{"id":"p-0109","num":"0000"},"ul":{"@attributes":{"id":"ul0001","list-style":"none"},"li":{"@attributes":{"id":"ul0001-0001","num":"0000"},"ul":{"@attributes":{"id":"ul0002","list-style":"none"},"li":[{"@attributes":{"id":"ul0002-0001","num":"0108"},"b":"302"},{"@attributes":{"id":"ul0002-0002","num":"0109"},"b":"304"},{"@attributes":{"id":"ul0002-0003","num":"0110"},"b":"306"},{"@attributes":{"id":"ul0002-0004","num":"0111"},"b":"308"},{"@attributes":{"id":"ul0002-0005","num":"0112"},"b":"310"},{"@attributes":{"id":"ul0002-0006","num":"0113"},"b":"312"},{"@attributes":{"id":"ul0002-0007","num":"0114"},"b":"314"},{"@attributes":{"id":"ul0002-0008","num":"0115"},"b":"316"},{"@attributes":{"id":"ul0002-0009","num":"0116"},"b":"402"},{"@attributes":{"id":"ul0002-0010","num":"0117"},"b":"404"},{"@attributes":{"id":"ul0002-0011","num":"0118"},"b":"406"},{"@attributes":{"id":"ul0002-0012","num":"0119"},"b":"408"},{"@attributes":{"id":"ul0002-0013","num":"0120"},"b":"410"},{"@attributes":{"id":"ul0002-0014","num":"0121"},"b":"412"}]}}}}],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"BRIEF DESCRIPTION OF THE DRAWINGS","p":["The invention and its embodiments are described in more detail when taken in conjunction with the accompanying drawings, in which:",{"@attributes":{"id":"p-0019","num":"0018"},"figref":"FIG. 1"},{"@attributes":{"id":"p-0020","num":"0019"},"figref":"FIG. 2"},{"@attributes":{"id":"p-0021","num":"0020"},"figref":"FIG. 3"},{"@attributes":{"id":"p-0022","num":"0021"},"figref":"FIG. 4"},{"@attributes":{"id":"p-0023","num":"0022"},"figref":"FIG. 5"},{"@attributes":{"id":"p-0024","num":"0023"},"figref":"FIG. 6"},{"@attributes":{"id":"p-0025","num":"0024"},"figref":"FIG. 7"},{"@attributes":{"id":"p-0026","num":"0025"},"figref":"FIG. 8"},{"@attributes":{"id":"p-0027","num":"0026"},"figref":"FIG. 9"},{"@attributes":{"id":"p-0028","num":"0027"},"figref":"FIG. 10"},{"@attributes":{"id":"p-0029","num":"0028"},"figref":"FIG. 11"},{"@attributes":{"id":"p-0030","num":"0029"},"figref":"FIG. 12"},{"@attributes":{"id":"p-0031","num":"0030"},"figref":"FIG. 13"},{"@attributes":{"id":"p-0032","num":"0031"},"figref":"FIG. 14"},{"@attributes":{"id":"p-0033","num":"0032"},"figref":"FIG. 15"}]},"DETDESC":[{},{}]}
