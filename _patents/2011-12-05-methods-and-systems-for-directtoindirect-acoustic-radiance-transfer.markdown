---
title: Methods and systems for direct-to-indirect acoustic radiance transfer
abstract: Methods, systems, and computer program products for simulating propagation of sound in a static scene can be operated for pre-computing a transfer operator for simulating results of sound reflection within a modeled scene, simulating distribution of sound energy from a sound source positioned within the scene, applying the transfer operator to the distribution of sound energy from the sound source to compute simulated sound at a plurality of points within the scene, and simulating collection of sound energy from the plurality of points within the scene to a listener positioned within the scene.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08995675&OS=08995675&RS=08995675
owner: The University of North Carolina at Chapel Hill
number: 08995675
owner_city: Chapel Hill
owner_country: US
publication_date: 20111205
---

{"@attributes":{"id":"description"},"RELAPP":[{},{}],"heading":["PRIORITY CLAIM","GOVERNMENT INTEREST","TECHNICAL FIELD","BACKGROUND","SUMMARY","DETAILED DESCRIPTION"],"p":["This application claims the benefit of U.S. Provisional Patent Application Ser. No. 61\/419,783, filed Dec. 3, 2010; the disclosure of which is incorporated herein by reference in its entirety.","This presently disclosed subject matter was made with U.S. Government support under Grant No. W911NF-04-1-0088 awarded by Army Research Office, Grant Nos. OCI-0636208, IIS-0917040, and 0904990 awarded by National Science Foundation, and Grant No. W91CRB-08-C-0137 awarded by U.S. Army. Thus, the U.S. Government has certain rights in the presently disclosed subject matter.","The subject matter disclosed herein relates generally to methods and systems for modeling sound propagation in a scene. More particularly, the subject matter disclosed herein relates to methods and systems for simulating diffuse reflections, specular reflections, and edge diffraction of sound in a static scene.","Sound rendering or auditory displays can augment graphical rendering and provide the user with an enhanced spatial sense of presence. Sound propagation in a scene refers to the modeling of the sound heard by the listener after the sound emitted from each source undergoes reflections, diffraction and absorption through the scene. Some of the driving applications of sound rendering include acoustic design of architectural models or outdoor scenes, walkthroughs of large CAD models with sounds of machine parts or moving people, urban scenes with traffic, and computer games, among others. The computation of sound propagation paths can take into account the knowledge of sound sources, listener locations, the 3D model of the environment, and material absorption and scattering properties.","Preferably, the modeling of sound propagation effects can further account for different wave propagation phenomena such as specular reflections, scattering (including diffuse reflections and edge diffraction), interference, and other phenomena. In particular, with respect to modeling of diffuse reflections, for instance, which are considered important for modeling sound propagation, many objective and perceptual studies have been conducted to ascertain the importance of diffuse reflections for sound propagation. Further, it is computationally challenging to model high orders of diffuse reflection. Thus, due to its importance and computational challenge, modeling diffuse reflections for sound propagation is an active area of interest in many sound rendering applications.","At a broad level, sound propagation algorithms can be classified into numerical and geometric methods. Numerical methods attempt to directly compute numerical solutions to the acoustic wave equation. The propagation of sound in a medium is governed by the acoustic wave equation, a second-order partial differential equation. Several techniques (e.g., finite difference time-domain method) are known for directly solving the wave equation using numerical methods and accurately modeling sound propagation in a scene. Modeling diffuse reflections is essentially a matter of specifying appropriate boundary conditions to the numerical solver and performing the simulation on a grid fine enough to capture the detailed \u201croughness\u201d of the surfaces that results in acoustic wave scattering. However, despite recent advances, these methods can be rather slow and are mainly limited to simple static sources, at least the in part because the complexity of these methods is proportional to the volume of the scene and the fourth power of the maximum frequency of sound simulated, and thus can be very slow for large acoustic spaces or high frequency sound sources.","To address these issues, precomputation-based methods have been developed that use a numerical simulator to compute the acoustic response of a scene from several sampled source positions such that, at runtime, these responses are interpolated given the actual source position. These methods are faster, but require large amounts of precomputed data.","In terms of geometric sound propagation, two standard methods used to simulate diffuse sound reflections are based on ray (or volume) tracing and radiance transfer. Most sound propagation techniques used in practical applications model the acoustic effects of an environment in terms of linearly propagating rays or 3D volumes. These geometric acoustics techniques are not as accurate as numerical methods in terms of solving the wave equation, and cannot easily model all kinds of propagation effects, but allow efficient simulation of early reflections. For instance, methods based on ray tracing are able to model both diffuse and specular reflections of sound. Since early specular reflections provide the listener with important perceptual cues regarding the direction of sound, specialized techniques have been developed for modeling specular reflections, which include volume tracing and the image source method. For static scenes, which frequently arise in architectural acoustics and virtual environments, radiance transfer methods can be used to simulate reflections from surfaces with arbitrary bidirectional reflectance distribution functions (BRDFs). Many techniques have also been designed to simulate edge diffraction.","Accordingly, conventional numerical and geometric methods each have significant disadvantages that limit their abilities to effectively simulate diffuse reflections (or specular reflections, edge diffraction, etc.) of sound in real time.","It is an object of the presently disclosed subject matter to provide methods and systems for simulating propagation of sound in a modeled scene. In one aspect, for example, the present subject matter provides a method for simulating sound propagation within a scene. The method can comprise pre-computing a transfer operator for simulating results of sound reflection within a modeled scene, simulating distribution of sound energy from a sound source positioned within the scene, applying the transfer operator to the distribution of sound energy from the sound source to compute simulated sound at a plurality of points within the scene, and simulating collection of sound energy from the plurality of points within the scene to a listener positioned within the scene.","In another aspect, the present subject matter provides computer readable medium having stored thereon executable instructions that when executed by the processor of a computer control the computer to perform steps of pre-computing a transfer operator for simulating results of sound reflection within a modeled scene, simulating distribution of sound energy from a sound source positioned within the scene, applying the transfer operator to the distribution of sound energy from the sound source to compute simulated sound at a plurality of points within the scene, and simulating collection of sound energy from the plurality of points within the scene to a listener positioned within the scene.","In a further aspect, the present subject matter provides a system for simulating sound propagation within a scene. The system can comprise a transfer operator embodied in a computer readable medium for simulating results of sound reflection within a scene and a sound simulator for receiving as input a distribution of sound energy from a sound source positioned within a scene and for applying the transfer operator to the distribution of sound energy from the sound source to compute simulated sound at a plurality of points within the scene.","An object of the presently disclosed subject matter having been stated hereinabove, and which is achieved in whole or in part by the presently disclosed subject matter, other objects will become evident as the description proceeds when taken in connection with the accompanying drawings as best described hereinbelow.","The methods and systems according to the present subject matter apply developments in global illumination based on precomputed light transport algorithms to the simulation of sound propagation. Specifically, the present methods and systems simulate propagation of sound using techniques derived from direct-to-indirect transfer algorithms for visual rendering, which map direct light incident on the surfaces of a scene to indirect light on the surfaces of the scene after multiple bounces. The radiosity algorithm is the classic example of an algorithm which precomputes light transport effects in a scene. However, the classic radiosity algorithm uses a full solution that needs to be recomputed every time the light source moves.","In contrast, precomputed radiance transfer (PRT) algorithms essentially decouple light transport effects from the light source configuration. This is performed by computing a linear operator that defines how a variable light source configuration affects the radiances at sample points on the surfaces in the scene. PRT techniques can support both distant and local source configurations.","Direct-to-indirect transfer algorithms are one class of precomputed light transport algorithms. These algorithms compute linear operators which map direct light incident on the surface samples to multi-bounce indirect light at the samples. These algorithms are designed to handle diffuse reflections, and some of them can also support limited glossy reflections. In order to reduce the storage and processing requirements, these techniques project the radiance function over the surface of the scene into a hierarchical basis, such as Haar wavelets or the spectral mesh basis.","The methods and system according to the presently-disclosed subject matter applies these ideas to sound propagation. In particular, the disclosed subject matter provides an algorithm for modeling propagation of sound based on the direct-to-indirect transfer approach. This formulation decouples the precomputation of acoustic radiance transfer operators from both the source and the listener positions and can efficiently update the acoustic response at the listener whenever the source moves.","The algorithm uses an SVD approximation of the transfer operator to perform higher-order reflections and\/or refractions. This approximation allows a user to reduce the memory requirements and increase the performance of the algorithm. The algorithm decouples the transfer operator from the source position, and thus accelerates the computations as compared to conventional methods for modeling the propagation of sound. In fact, application of this method can perform diffuse reflections, specular reflections, and edge diffraction in static scenes with moving sources at almost interactive rates.","As discussed hereinbelow, methods and systems according to the present subject matter provide a direct-to-indirect acoustic radiance transfer technique to accelerate the radiance transfer computations for sound propagation so that the first few orders of reflection and\/or refraction can be computed efficiently, for static scenes with moving sources.",{"@attributes":{"id":"p-0026","num":"0025"},"figref":["FIG. 1","FIG. 1"],"b":["100","100","102","104","102"]},"In one embodiment of the subject matter described herein, sound simulator  and transfer matrix  may be implemented as middle-ware between an application, such as a game or acoustic modeling software, and the underlying sound generation hardware.","Sound Rendering vs. Visual Rendering","There are some key differences between the nature of light and sound waves. With light transport simulation, the primary concerns involve the steady-state values of radiance over the surface of the scene. This is because light travels fast enough that transient radiance values are not observed and can be ignored. However, the speed of sound in air is much slower (i.e., 340 m\/s for sound as compared to 3\u00d710m\/s for light), and hence it is important to compute time-varying radiances over the surface. It is this time variation which gives rise to echoes and reverberation in large rooms. The additional dimension of time makes it difficult to apply light transport algorithms directly to model sound propagation.","Another key difference between light and sound is that the wavelengths of sound waves are much larger than the wavelengths of light waves, and are comparable to the sizes of obstacles in typical architectural and game scenes. Therefore, diffraction plays an important role in sound propagation, and it must be modeled in order to generate plausible sounds. As discussed below, the present methods and system are described with respect to modeling diffuse reflections. Those having ordinary skill in the art will recognize, however, that the principles discussed herein can be combined with other algorithms for computing specular reflection, edge diffraction, etc.","The basic sound propagation problem is that for a given signal emitted by a source (i.e., a time-varying pressure wave), the signal heard by a listener after modeling the reflections, diffractions, and interferences with the environment must be computed. This is typically performed using impulse responses (IRs). An IR describes the sound heard at the listener if the source emits a unit impulse at t=0. Under the assumptions of room acoustics, the sound heard by the listener for an arbitrary source sound can be computed by convolving the source sound with the IR at the listener's location. Therefore, the remainder of the discussion below will focus on computing IRs given the source and listener positions and a geometric model of the scene along with the material properties.","Method","Methods and system according to the present subject matter can use the direct-to-indirect transfer formulation for modeling propagation of sound.  is a block diagram illustrating an exemplary method for simulating sound propagation within the scene. Referring to , the method can involve taking information about a scene and mapping the scene to a desired model (Step ). This step can involve choosing a number of sample points on the scene surfaces. Based on this mapping, a transfer matrix T can be constructed (Step ), from which a singular value decomposition can be developed (Step ) as described below. Each of steps , , and  can be completed in pre-processing.","During run-time, information about the scene and the sound source can be collected (Step ). Given the source position, the direct impulse response at each sample point can be computed. For example, this may be performed at runtime using ray tracing. Given the direct responses, the \u201cindirect\u201d response at each sample (for some user-specified number of reflections and\/or refractions) can be computed (Step ). This is expressed as a matrix-vector multiplication, where the transfer matrix is precomputed. Given the direct and indirect responses, the final IR can be computed at the listener position (Step ). This is performed at runtime using ray tracing.","Alternatively or in addition, sound propagation from the source to the listener can be computed using a two-pass algorithm. In this algorithm, the transfer matrix can be applied to the direct surface responses to model higher-order, late response reflections and edge diffraction, whereas lower-order, early response reflections (diffuse and specular) and edge diffractions can be computed in a separate step . For example, this computation of the early response can be performed using path tracing. These two passes are disjoint (i.e., no path is traced in both passes), and thus the contributions from each pass can be directly added together, along with the direct source-to-listener contribution, to determine the final resulting sound output at the listener.","Note that this formulation requires that the scene be static, otherwise the transfer matrix would need to be recomputed every frame. It should be noted, however, that in many applications, including games and virtual environments, scenes are entirely or mostly static, with relatively few moving parts, and hence the present algorithm can still be used to model reflections within the static portions of the scene. It is further noted, however, that the method disclosed herein can account for dynamic objects in the scene to at least a limited extent. If ray tracing is used to compute the direct impulse response at each sample point, these rays can intersect and be blocked by dynamic objects, which allows dynamic objects to induce a \u201cshadow\u201d region and reduce the energy in the direct echograms at the surface samples in the shadow region. Since these (modified) direct echograms are used as input to the precomputed acoustic transfer operator, dynamic objects can thereby affect (to a limited extent) the propagated sound field heard at the listener. Similarly, since interactive ray tracing can be used in the final gather step, reflected and\/or diffracted sound can be occluded by a dynamic object before it reaches the listener.","Regardless of the specific implementation of the above method, the use of a transfer operator to accelerate the radiance transfer computations for sound propagation are described hereinbelow in further detail.","Acoustic Rendering Equation","As a geometric approximation to the acoustic wave equation, the propagation of sound in a scene can be modeled using an extension of the standard graphics rendering equation, called the acoustic rendering equation:",{"@attributes":{"id":"p-0037","num":"0036"},"maths":{"@attributes":{"id":"MATH-US-00001","num":"00001"},"math":{"@attributes":{"overflow":"scroll"},"mtable":{"mtr":{"mtd":[{"mrow":{"mrow":[{"mi":"L","mo":"\u2061","mrow":{"mo":["(",")"],"mrow":{"msup":{"mi":["x","\u2032"]},"mo":",","mi":"\u03c9"}}},{"msub":{"mi":"L","mn":"0"},"mo":"\u2061","mrow":{"mo":["(",")"],"mrow":{"msup":{"mi":["x","\u2032"]},"mo":",","mi":"\u03c9"}}},{"msub":{"mo":"\u222b","mi":"S"},"mo":"\u2062","mrow":{"mrow":[{"mi":"R","mo":"\u2061","mrow":{"mo":["(",")"],"mrow":{"mi":["x","\u03c9"],"mo":[",",","],"msup":{"mi":["x","\u2032"]}}}},{"mi":"L","mo":"\u2061","mrow":{"mo":["(",")"],"mrow":{"mi":"x","mo":",","mfrac":{"mrow":[{"msup":{"mi":["x","\u2032"]},"mo":"-","mi":"x"},{"mo":["\uf603","\uf604"],"mrow":{"msup":{"mi":["x","\u2032"]},"mo":"-","mi":"x"}}]}}}},{"mo":"\u2146","mi":"x"}],"mo":["\u2062","\u2062"]}}],"mo":["-","+"]}},{"mrow":{"mo":["(",")"],"mn":"1"}}]}}}},"br":[{},{},{}],"sub":"0 ","in-line-formulae":[{},{}],"i":["R","x,x\u2032,\u03c9","x,x\u2032","G","x,x\u2032","P","x,x\u2032"]},"Note that the radiances used in Equation 1 are functions of time\u2014typically impulse responses. The time variable t is hidden in Equation 1 for the sake of brevity. This added dimension of time complicates the storage and processing requirements of sound propagation algorithms based on the acoustic rendering equation. Visual rendering algorithms typically model glossy reflections using a directionally-varying radiance function, which can be represented using spherical harmonics or some other directional basis. In order to model sound reflections using time-varying radiances, a basis such as the Fourier basis can be used, or a scene-dependent Karhunen-Loeve transform (KLT) can be used. Examples of each of these representations are disclosed hereinbelow. In addition, those having skill in the art will recognize that other signal compression techniques, such as the discrete cosine transform, modified discrete cosine transform, or wavelet representations, may be applied to model the sound reflections.","Fourier Representation of Impulse Response","The methods used to represent impulse responses in the frequency domain are intended to compute impulse responses at surface samples and the listener. The impulse response at a point is a function of time, denoted by f(t). In order to apply attenuation and delay using a unified formulation, IRs can be represented in the frequency domain using the Fourier transform. For a continuous function \u0192: \u250c0,T\u2510\u2192, the Fourier transform is defined as (up to a scale factor):\n\n(\u0192())=(\u03c9)=\u222b\u0192()\u2003\u2003(3)\n\nand the inverse Fourier transform is defined as (up to a scale factor):\n\n((\u03c9))={circumflex over (\u0192)}()=\u222b(\u03c9)\u2003\u2003(4)\n\nHere, F is the Fourier transform of f. The inverse Fourier transform is exact (i.e., {acute over (\u0192)}(t)=f(t)) only for periodic functions. However, the domain of f is finite, whereas the domain of F is infinite. For functions defined over a finite interval [0,T] (such as IRs), the Fourier transform implicitly assumes that f(t) is periodic with period T, and can be extrapolated over the entire real line.\n","One way to interpret this is that the Fourier transform is a linear transform over infinite-dimensional function space. It transforms functions from the canonical basis (where the basis vectors are Dirac delta functions of the form \u03b4(t\u2212t)) to a sinusoidal basis (with basis vectors of the form e). However, this transformation involves a projection into the subspace of periodic functions. Therefore the inverse Fourier transform reconstructs a periodic function which matches the original function in the interval [0,T].","In this vector space interpretation of the Fourier transform, Equation 3 is a dot product. This suggests the way to compute the Fourier transform of a function sampled at N discrete points, or the Discrete Fourier Transform (OFT):",{"@attributes":{"id":"p-0042","num":"0041"},"maths":{"@attributes":{"id":"MATH-US-00002","num":"00002"},"math":{"@attributes":{"overflow":"scroll"},"mtable":{"mtr":{"mtd":[{"mrow":{"msub":{"mi":["F","k"]},"mo":"=","mrow":{"munderover":{"mo":"\u2211","mrow":[{"mi":"i","mo":"=","mn":"0"},{"mi":"N","mo":"-","mn":"1"}]},"mo":"\u2062","mrow":{"msub":{"mi":["f","i"]},"mo":["\u2062","\u2062"],"msup":{"mi":"\u2147","mrow":{"mrow":{"mo":"-","mi":"i"},"mo":["\u2062","\u2062","\u2062","\u2062"],"mstyle":[{"mspace":{"@attributes":{"width":"0.3em","height":"0.3ex"}}},{"mspace":{"@attributes":{"width":"0.3em","height":"0.3ex"}}}],"mi":["\u03c9","t"]}},"mrow":{"mo":"\u2146","mi":"t"}}}}},{"mrow":{"mo":["(",")"],"mn":"5"}}]}}}},"br":{}},{"@attributes":{"id":"p-0043","num":"0042"},"maths":{"@attributes":{"id":"MATH-US-00003","num":"00003"},"math":{"@attributes":{"overflow":"scroll"},"mtable":{"mtr":{"mtd":[{"mrow":{"msub":{"mi":["f","i"]},"mo":"=","mrow":{"mfrac":{"mn":"1","mi":"N"},"mo":"\u2062","mrow":{"munderover":{"mo":"\u2211","mrow":[{"mi":"k","mo":"=","mn":"0"},{"mi":"N","mo":"-","mn":"1"}]},"mo":"\u2062","mrow":{"msub":{"mi":["F","k"]},"mo":"\u2062","msup":{"mi":"\u2147","mrow":{"mrow":{"mo":"-","mi":"i"},"mo":["\u2062","\u2062","\u2062"],"mstyle":{"mspace":{"@attributes":{"width":"0.3em","height":"0.3ex"}}},"mfrac":{"mrow":{"mn":"2","mo":"\u2062","mi":"\u03c0"},"mi":"N"},"mi":"ki"}}}}}}},{"mrow":{"mo":["(",")"],"mn":"6"}}]}}}},"br":{},"sub":["i","k"],"sup":"2"},"The linearity property of the Fourier transform implies that attenuations and accumulation of IRs can be performed easily:\n\n(\u0192()+())=(\u0192())+(\u0192())\u2003\u2003(7)\n\nAnother useful implication is that unlike in time-domain, in frequency-domain delays can also be applied using a scale factor:\n\n(\u0192())=(\u0192())\u2003\u2003(8)\n\nNote that care must be taken to ensure that the delays align on sample boundaries, otherwise the inverse Fourier transform will contain non-zero imaginary parts.\n","If a unit impulse emitted by the source is modeled at time t=0 (i.e., the signal emitted by the source has all Fourier coefficients set to 1), then computing the acoustic radiance transfer using the above expressions for delay and attenuation results in a frequency-domain signal. Computing the inverse Fourier transform of this signal can yield a periodic function which is approximately equal to the time-domain IR at the listener within the interval [0,T] for some user-specified maximum IR time T, which is also the period of the function. It is important to note that this method does not compute the steady-state acoustic response, but the time-varying impulse response. The key to this is the frequency-domain delay equations described above.","The Fourier transform allows IRs to be stored at all the sample points as a collection of N column vectors, one for each Fourier coefficient. This also allows for transfer operators to be stored as a collection of N matrices, and allows direct-to-indirect transfer to be expressed as N matrix-vector products.","Using the relationships discussed above, the transfer operator can be constructed. First, if the surface is discretized into p samples, the transfer operator can be computed in terms of the direct impulse responses at all samples to impulses emitted from every other sample. Since these are time-varying impulse responses, Fourier coefficients can be used to represent the signals in the frequency domain. For example, if there are f Fourier coefficients per surface sample, computations can be performed on each frequency band (each band corresponding to one Fourier coefficient) independently. From the definition of the Fourier basis functions, the Fourier coefficients have frequencies",{"@attributes":{"id":"p-0048","num":"0047"},"maths":{"@attributes":{"id":"MATH-US-00004","num":"00004"},"math":{"@attributes":{"overflow":"scroll"},"mrow":{"mrow":{"msub":{"mi":["\u03c9","k"]},"mo":"=","mrow":{"mfrac":{"mrow":{"mn":"2","mo":"\u2062","mi":"\u03c0"},"mi":"f"},"mo":"\u2062","mi":"k"}},"mo":","}}},"br":{}},"For each frequency \u03c9, acoustic radiance vectors of the form I(\u03c9) can be defined, which contain p elements that represent the kFourier coefficients of the IRs at each patch. For the sake of brevity, the parameter \u03c9can be omitted from the equations as it may be obvious from the context. All of the computations described below are repeated for each frequency \u03c9.","If the Neumann series expansion is taken of Equation 1 and expressed in matrix form, the following relationship can be established:\n\n(\u03c9)=(\u03c9)(\u03c9)\u2003\u2003(9)\n\nwhere l(\u03c9) is the kFourier coefficient of the IRs at each surface sample after n reflections. The transfer matrix T(\u03c9) can be used to compute the effect of one reflection (i.e., a single bounce). The (i, j)element of T(\u03c9) describes how the kFourier coefficient at sample j affects the kFourier coefficient at sample i after one reflection. The entries of T can be computed by shooting rays and computing visibility and form factors between samples. The propagation terms are complex numbers which are computed for each Fourier coefficient using the distances between samples [19].\n","The above matrix-vector multiplication can be performed once per frequency coefficient for each order of reflection at runtime. However, even for scenes of moderate complexity, the number of surface samples p can be very large. Since T is a p\u00d7p matrix and lis a p\u00d71 vector, this step takes O(p) time per frequency coefficient per order of reflection, which can quickly become quite expensive. The singular value decomposition (SVD) can be used, however, to compute a rank k approximation of T. This can reduce the complexity to O(pk). In addition, this approximation can allow for further acceleration of higher-order reflections.","The SVD approximation can be used to reduce the complexity of the matrix-vector multiplications to O(pk) per bounce, however, for multiple bounces, the cost of computing transfer matrices that represent additional bounces can be further reduced to O(k) by precomputing appropriate matrices. Suppose the direct IRs at each surface sample (for a given frequency) are stored in a vector I. Further suppose that there is a rank k approximation of T, given by {tilde over (T)}=\u0168{tilde over (S)}{tilde over (V)}, where \u0168 is a p\u00d7k matrix, {tilde over (S)} is a k\u00d7k diagonal matrix and {tilde over (V)}is a k\u00d7p matrix. Then the first-order impulse response at each surface sample is given by:",{"@attributes":{"id":"p-0053","num":"0052"},"maths":{"@attributes":{"id":"MATH-US-00005","num":"00005"},"math":{"@attributes":{"overflow":"scroll"},"mtable":{"mtr":[{"mtd":{"mrow":{"mrow":[{"mover":{"mi":"T","mo":"~"},"mo":["\u2062","\u2062"],"mstyle":{"mspace":{"@attributes":{"width":"0.3em","height":"0.3ex"}}},"msub":{"mi":"l","mn":"0"}},{"mover":[{"mi":"U","mo":"~"},{"mi":"S","mo":"~"}],"mo":["\u2062","\u2062","\u2062","\u2062","\u2062"],"mstyle":[{"mspace":{"@attributes":{"width":"0.3em","height":"0.3ex"}}},{"mspace":{"@attributes":{"width":"0.3em","height":"0.3ex"}}}],"msup":{"mover":{"mi":"V","mo":"~"},"mi":"T"},"msub":{"mi":"l","mn":"0"}}],"mo":["=","\u2062"],"mi":{}}}},{"mtd":{"mrow":{"mo":["=","\u2062"],"mi":{},"mrow":{"mover":{"mi":"U","mo":"~"},"mo":["\u2062","\u2062"],"mstyle":{"mspace":{"@attributes":{"width":"0.3em","height":"0.3ex"}}},"mi":"b"}}}}]}}},"br":{},"sup":"T","sub":["0 ","0 "]},{"@attributes":{"id":"p-0054","num":"0053"},"maths":{"@attributes":{"id":"MATH-US-00006","num":"00006"},"math":{"@attributes":{"overflow":"scroll"},"mtable":{"mtr":[{"mtd":{"mrow":{"mrow":[{"mover":[{"mi":"T","mo":"~"},{"mi":"T","mo":"~"}],"mo":["\u2062","\u2062","\u2062"],"mstyle":{"mspace":{"@attributes":{"width":"0.3em","height":"0.3ex"}}},"msub":{"mi":"l","mn":"0"}},{"mrow":{"mover":{"mi":"U","mo":"~"},"mo":"\u2061","mrow":{"mo":["(",")"],"mrow":{"mover":[{"mi":"S","mo":"~"},{"mi":"U","mo":"~"}],"mo":["\u2062","\u2062","\u2062"],"mstyle":{"mspace":{"@attributes":{"width":"0.3em","height":"0.3ex"}}},"msup":{"mover":{"mi":"V","mo":"~"},"mi":"T"}}}},"mo":["\u2062","\u2062","\u2062","\u2062","\u2062"],"mstyle":[{"mspace":{"@attributes":{"width":"0.3em","height":"0.3ex"}}},{"mspace":{"@attributes":{"width":"0.3em","height":"0.3ex"}}}],"mover":{"mi":"S","mo":"~"},"msup":{"mover":{"mi":"V","mo":"~"},"mi":"T"},"msub":{"mi":"l","mn":"0"}}],"mo":["=","\u2062"],"mi":{}}}},{"mtd":{"mrow":{"mo":["=","\u2062"],"mi":{},"mrow":{"mover":{"mi":"U","mo":"~"},"mo":["\u2062","\u2062"],"mstyle":{"mspace":{"@attributes":{"width":"0.3em","height":"0.3ex"}}},"mi":"Db"}}}}]}}},"br":[{},{}],"sup":["T","2"]},"Rather than representing impulse responses in the frequency domain using Fourier transforms, a scene-dependent KLT basis can be used to represent echograms, an echogram being the energy contained in an IR as a function of time that is proportional to the square of the IR. In this way, the disclosed methods and systems can be used to efficiently compute higher-order (e.g., beyond 2-3 orders), late response (LR) reflections and edge diffraction of sound, which changes in response to a moving source and a moving listener in a scene.","The acoustic transfer operator for this embodiment can be defined by writing the incident form of the acoustic rendering equation in terms of a linear operator:",{"@attributes":{"id":"p-0057","num":"0056"},"maths":{"@attributes":{"id":"MATH-US-00007","num":"00007"},"math":{"@attributes":{"overflow":"scroll"},"mtable":{"mtr":{"mtd":[{"mtable":{"mtr":[{"mtd":{"mrow":{"mrow":[{"mi":"L","mo":"\u2061","mrow":{"mo":["(",")"],"mrow":{"mi":["x","\u03a9","t"],"mo":[",",","]}}},{"mrow":[{"msub":{"mi":"L","mn":"0"},"mo":"\u2061","mrow":{"mo":["(",")"],"mrow":{"mi":["x","\u03a9","t"],"mo":[",",","]}}},{"mi":"RL","mo":"\u2061","mrow":{"mo":["(",")"],"mrow":{"mi":["x","\u03a9","t"],"mo":[",",","]}}}],"mo":"+"}],"mo":["=","\u2062"],"mi":{}}}},{"mtd":{"mrow":{"mo":["=","\u2062"],"mi":{},"mrow":{"msub":{"mi":"TL","mn":"0"},"mo":"\u2061","mrow":{"mo":["(",")"],"mrow":{"mi":["x","\u03a9","t"],"mo":[",",","]}}}}}}]}},{"mrow":{"mo":["(",")"],"mn":"10"}}]}}}},"br":{},"sub":"0","img":[{"@attributes":{"id":"CUSTOM-CHARACTER-00009","he":"3.13mm","wi":"2.46mm","file":"US08995675-20150331-P00003.TIF","alt":"custom character","img-content":"character","img-format":"tif"}},{"@attributes":{"id":"CUSTOM-CHARACTER-00010","he":"3.13mm","wi":"2.46mm","file":"US08995675-20150331-P00004.TIF","alt":"custom character","img-content":"character","img-format":"tif"}},{"@attributes":{"id":"CUSTOM-CHARACTER-00011","he":"3.13mm","wi":"1.78mm","file":"US08995675-20150331-P00005.TIF","alt":"custom character","img-content":"character","img-format":"tif"}},{"@attributes":{"id":"CUSTOM-CHARACTER-00012","he":"3.13mm","wi":"2.46mm","file":"US08995675-20150331-P00003.TIF","alt":"custom character","img-content":"character","img-format":"tif"}}],"sup":"\u22121 "},"It can be assumed that acoustic radiance at a surface sample does not vary with direction (i.e., the surface samples are diffuse emitters and receivers). In other words, the transfer operator models sound energy which is emitted uniformly in all directions from a given surface sample, and propagates through the scene (undergoing several diffuse and specular reflections as well as diffraction) until the propagation is finally terminated upon incidence at some other surface sample. The propagated, incident sound field is averaged over all incidence directions, resulting in a directionally-invariant indirect acoustic radiance at each surface sample. This simplifying assumption is motivated by the fact that after a few orders of reflection, most of the sound energy in a scene would have typically undergone diffuse reflections. This may result in some higher-order echoes being replaced with reverberation, but this replacement can be corrected when computing the early response.","Using the above relationships, a compact representation of the acoustic transfer operator can be computed. First, n points on the surface of the scene can be sampled using area-weighted sampling. A compact, scene-dependent KLT basis can then be constructed for representing echograms, which can be used to compress echograms computed between each surface sample. Energy-based path tracing (i.e., Monte Carlo integration of the acoustic rendering equation) can be used to compute the sample-to-sample echograms. When each path encounters a geometric primitive, it can be diffusely reflected, specularly reflected, or diffracted, depending on material properties. Attenuations can be applied according to standard geometric acoustics models as discussed below.","Regarding diffuse reflections, rays can be diffusely reflected as per the Lambertian model by randomly sampling a direction on the hemisphere at the point of incidence, and sending a reflected ray along the sampled direction. The ray's energy is attenuated by the frequency-dependent diffuse coefficient d(v)=(1\u2212\u03b1(v))\u03c3(v), where \u03b1(v) is the frequency-dependent absorption coefficient and \u03c3(v) is the frequency-dependent scattering coefficient of the surface material. Specular reflection of rays can be performed by reflecting incident rays as per the laws of reflection. The ray's energy is attenuated by the frequency-dependent specular coefficient \u03c3(v)=(1\u2212\u03b1(v))(1\u2212\u03c3(v)). Edge diffraction can be modeled using an energy-based ray tracing model derived from Heisenberg's uncertainty principle. Rays which pass sufficiently close to a diffracting edge are diffracted by deviating them in the plane normal to the diffracting edge. The angle of deviation is randomly sampled from a frequency-dependent probability distribution.","In order to capture closely-spaced echoes, which may arise in second or third order reflections captured in the transfer operator, echograms can be sampled at the audio sampling rate of 48 kHz. As a result, it is impractical to store precomputed sample-to-sample echograms in the time domain, since this would require 192 kB per second per echogram. For n\u2248256 surface samples, this would result in the transfer operator requiring 12 GB of storage per second.","As compared to frequency-domain representations, such as the Fourier transform approach presented above, which can require a few thousand coefficients in order to represent the wide range of audible sound frequencies, it can be preferred to use a basis in which echograms can be represented using relatively few coefficients.","Accordingly, the present method can use a scene-dependent Karhunen-Loeve basis, derived using the Karhunen-Loeve Transform (KLT). In order to derive an orthogonal basis for a d-dimensional vector space S, some number (say p) of vectors can be randomly sampled in the space. These vectors can be written as column vectors and placed side-by-side to form the data matrix A(subscripts denote matrix dimensions). The singular value decomposition (SVD) can then be used to decompose the data matrix: A=U\u03a3V. The columns of the orthogonal matrix U can then be used as a basis set for S.","To generate an orthogonal basis for sample-to-sample echograms in a given scene, p pairs of surface samples can be randomly choosen, and echograms can be computed between them (using path tracing). The dimension of the vector space in which all echograms lie is equal to the number of samples used to represent the echograms in the time domain. These echograms can be used to form the data matrix, and then the SVD can be used to compute the KLT basis matrix U. Since the basis vectors are sorted in decreasing order of singular values, U can be truncated such that only the first m columns are retained. Using this method, the approximation error can be barely perceptible, even with very few basis vectors (m\u224832\u221264).","In essence, this formulation \u201clearns\u201d a good basis for representing echograms in a given scene by using several example echograms computed in the scene. Assuming the surface sample pairs used to generate the example echograms are distributed throughout the scene, the Karhunen-Loeve transform can be used to estimate a basis of echograms that requires the fewest number of coefficients to represent an echogram in the scene for a given approximation error. Furthermore, since the storage and time complexity of this algorithm scales linearly with m, the Karhunen-Loeve basis can be used to represent the acoustic transfer operators compactly.","The direct echogram due to a single source at surface sample j can be completely characterized by a delayed impulse with (distance) attenuation aand a delay d. Similarly, the response at a listener due to direct sound along each gather ray i can be completely characterized by a delayed impulse with (distance) attenuation aand a delay d.","For simplicity, the BRDFs at the first and last reflections can be multiplied into the acoustic transfer operator. Furthermore, for simplicity of exposition, it can be assumed that the number of gather rays traced from the listener is also n. In practice, we trace O(n) gather rays, with the constant factor chosen based on run-time performance. As each gather ray hits a point on the surface of the scene, the point is mapped to a surface sample using nearest-neighbor interpolation. The surface sample corresponding to gather ray l can be denoted by S(i).","These attenuations and delays can then be combined with the compressed acoustic transfer operator to compute the final echogram. The precomputed echogram from sample j to sample S(i) can be denoted by L(t). Then the energy received at the listener via propagation paths whose first reflection occurs at sample j and last reflection occurs at sample S(i) is given by:\n\n()=()\u2003\u2003(11)\n\nand the final echogram at the listener is obtained by adding together energy received from all possible propagation paths:\n",{"@attributes":{"id":"p-0069","num":"0068"},"maths":{"@attributes":{"id":"MATH-US-00008","num":"00008"},"math":{"@attributes":{"overflow":"scroll"},"mtable":{"mtr":{"mtd":[{"mrow":{"mrow":[{"mi":"E","mo":"\u2061","mrow":{"mo":["(",")"],"mi":"t"}},{"munderover":{"mo":"\u2211","mrow":{"mi":"i","mo":"=","mn":"1"},"mi":"n"},"mo":"\u2062","mrow":{"munderover":{"mo":"\u2211","mrow":{"mi":"j","mo":"=","mn":"1"},"mi":"n"},"mo":"\u2062","mrow":{"msubsup":[{"mi":["a","j","s"]},{"mi":["a","i","l"]}],"mo":["\u2062","\u2062"],"mrow":{"msub":{"mi":"L","mrow":{"mi":["i","j"],"mo":","}},"mo":"\u2061","mrow":{"mo":["(",")"],"mrow":{"mi":"t","mo":["-","-"],"msubsup":[{"mi":["d","j","s"]},{"mi":["d","i","l"]}]}}}}}}],"mo":"="}},{"mrow":{"mo":["(",")"],"mn":"12"}}]}}}},"br":{}},{"@attributes":{"id":"p-0070","num":"0069"},"maths":{"@attributes":{"id":"MATH-US-00009","num":"00009"},"math":{"@attributes":{"overflow":"scroll"},"mtable":{"mtr":{"mtd":[{"mrow":{"mrow":[{"msub":{"mi":"L","mrow":{"mi":["i","j"],"mo":","}},"mo":"\u2061","mrow":{"mo":["(",")"],"mi":"t"}},{"munderover":{"mo":"\u2211","mrow":{"mi":"k","mo":"=","mn":"1"},"mi":"m"},"mo":"\u2062","mrow":{"msubsup":{"mi":["\u03b1","k"],"mrow":{"mi":["i","j"],"mo":","}},"mo":"\u2062","mrow":{"msup":{"mi":["b","k"]},"mo":"\u2061","mrow":{"mo":["(",")"],"mi":"t"}}}}],"mo":"="}},{"mrow":{"mo":["(",")"],"mn":"13"}}]}}}}},{"@attributes":{"id":"p-0071","num":"0070"},"maths":{"@attributes":{"id":"MATH-US-00010","num":"00010"},"math":{"@attributes":{"overflow":"scroll"},"mtable":{"mtr":{"mtd":[{"mrow":{"mrow":[{"mi":"E","mo":"\u2061","mrow":{"mo":["(",")"],"mi":"t"}},{"munderover":{"mo":"\u2211","mrow":{"mi":"k","mo":"=","mn":"1"},"mi":"m"},"mo":"\u2062","mrow":{"mrow":[{"mo":["(",")"],"mrow":{"munderover":{"mo":"\u2211","mrow":{"mi":"i","mo":"=","mn":"1"},"mi":"n"},"mo":"\u2062","mrow":{"munderover":{"mo":"\u2211","mrow":{"mi":"j","mo":"=","mn":"1"},"mi":"n"},"mo":"\u2062","mrow":{"msubsup":[{"mi":["a","j","s"]},{"mi":["a","i","l"]},{"mi":["\u03b1","k"],"mrow":{"mi":["i","j"],"mo":","}}],"mo":["\u2062","\u2062"]}}}},{"msup":{"mi":["b","k"]},"mo":"\u2061","mrow":{"mo":["(",")"],"mrow":{"mi":"t","mo":["-","-"],"msubsup":[{"mi":["d","j","s"]},{"mi":["d","i","l"]}]}}}],"mo":"\u2062"}}],"mo":"="}},{"mrow":{"mo":["(",")"],"mn":"14"}}]}}}},"br":{},"sub":"k ","sup":"th "},{"@attributes":{"id":"p-0072","num":"0071"},"maths":{"@attributes":{"id":"MATH-US-00011","num":"00011"},"math":{"@attributes":{"overflow":"scroll"},"mtable":{"mtr":{"mtd":[{"mrow":{"mrow":[{"mi":"E","mo":"\u2061","mrow":{"mo":["(",")"],"mi":"t"}},{"munderover":{"mo":"\u2211","mrow":{"mi":"k","mo":"=","mn":"1"},"mi":"m"},"mo":"\u2062","mrow":{"mrow":[{"msup":{"mi":["H","k"]},"mo":"\u2061","mrow":{"mo":["(",")"],"mi":"t"}},{"msup":{"mi":["b","k"]},"mo":"\u2061","mrow":{"mo":["(",")"],"mi":"t"}}],"mo":"\u2297"}}],"mo":"="}},{"mrow":{"mo":["(",")"],"mn":"15"}}]}}}}},{"@attributes":{"id":"p-0073","num":"0072"},"maths":{"@attributes":{"id":"MATH-US-00012","num":"00012"},"math":{"@attributes":{"overflow":"scroll"},"mtable":{"mtr":{"mtd":[{"mrow":{"mrow":[{"msup":{"mi":["H","k"]},"mo":"\u2061","mrow":{"mo":["(",")"],"mi":"t"}},{"munderover":{"mo":"\u2211","mrow":{"mi":"i","mo":"=","mn":"1"},"mi":"n"},"mo":"\u2062","mrow":{"munderover":{"mo":"\u2211","mrow":{"mi":"j","mo":"=","mn":"1"},"mi":"n"},"mo":"\u2062","mrow":{"msubsup":[{"mi":["a","j","s"]},{"mi":["a","i","l"]},{"mi":["\u03b1","k"],"mrow":{"mi":["i","j"],"mo":","}}],"mo":["\u2062","\u2062","\u2062"],"mrow":{"mi":"\u03b4","mo":"\u2061","mrow":{"mo":["(",")"],"mrow":{"mi":"t","mo":["-","-"],"msubsup":[{"mi":["d","j","s"]},{"mi":["d","i","l"]}]}}}}}}],"mo":"="}},{"mrow":{"mo":["(",")"],"mn":"16"}}]}}}}},"Therefore, at run-time, the source position can be used to quickly update aand d, and the listener position can be used to quickly update aand d. These can be used along with the compressed transfer operator to construct the convolution filters H(t). Convolving the echogram basis functions with these filters and accumulating the results can yield an echogram representing higher-order reflections and diffraction from the source to the listener.","Implementation","The methods and systems discussed above can be implemented in a CPU-based system, for example by using Microsoft DirectX 9 for visualization, and Intel Math Kernel Library (MKL) for the matrix operations.","The disclosed methods and systems may allow for user-controlled approximations in one or more of the number and\/or location of surface samples, frequency samples (i.e. the number of Fourier coefficients used to represent IRs), and\/or number of modes retained after computing the SVD of the transfer operator.","In one implementation, for example, a surface parameterization which maps the scene primitives to the unit square can be computed (essentially a uv texture mapping). This parameterization can be computed using Least Squares Conformal Mapping (LSCM). The user can specify the texture dimensions such that each texel of the resulting texture is mapped to a single surface sample using an inverse mapping process. The number of texels mapped to a given primitive can be weighted by the area of the primitive to ensure a roughly even distribution of samples. Although the LSCM algorithm provides one option for this purpose, those having skill in the art will recognize that it can be replaced with any other technique for sampling the surfaces as long as the number of samples generated on a primitive is proportional to its area.","This exemplary implementation further allows the user to vary the number of Fourier coefficients used to represent the IRs. For example, 1K Fourier coefficients can provide an acceptable compromise between performance and quality.","The error caused by the SVD approximation of the transfer operator can be measured in terms of the Frobenius norm. through plot the Frobenius norm error against the number of modes retained for the transfer operator (T). The figure clearly shows that a very small number of modes can be used to compute IRs with diffuse reflections at runtime.","Audio Processing","As described above, the pressure signal at a source is convolved with an IR from the source to a listener to compute the final audio at the listener. The methods and systems according to the present subject matter can compute a frequency domain energy IR with 1K Fourier coefficients. The pressure IR can be computed from the energy IR and upsampled to encode the desired propagation delay in the IR.","In typical virtual environments applications, the source and listener can be moving, and the audio can be streaming from a source in chunks of audio samples (called audio frames). The size of the audio frames is determined by the allowed latency for the application. For instance, audio frames of 4800 samples at sampling rate of 48 KHz can be selected, leading to a 100 ms latency in the audio output. For a static source and listener, computing the final audio is trivial and amounts to convolving each audio frame with the IR to compute output audio frames. For moving sources and listeners, IRs evolve over time, which could lead to discontinuities in the final audio when using different IRs for two adjacent audio frames. In order to minimize such discontinuity artifacts, windowing can be applied at the source frame and the listener frame when the source and listener are moving respectively.","Experimental Results","Some experimental results on the performance and quality achieved by one implementation of the disclosed algorithm are provided below. All of these tests were performed on an Intel Xeon X5560 workstation with 4 cores (each operating at 2.80 GHz) and 4 GB of RAM running Windows Vista. MKL parallelizes our matrix operations over all 4 cores of the test machine. Therefore, the timings reported are for all 4 cores. This implementation is benchmarked on three scenes whose complexity is typical of scenes encountered in acoustics applications. Specifically, the three scenes include a room having 252 sample points, a hall having 177 samples, and an auditorium having 1024 samples (specifically, Sigyn Hall in Turku, Finland).","For comparison, a frequency acoustic radiance transfer algorithm is used. The only other algorithms for simulating diffuse reflections of sound are naive time-domain radiance transfer and path tracing. Naive time-domain radiance transfer would require a large amount of memory, and the frequency-domain radiance transfer approach is superior to it in this regard. Conversely, path tracing can be used for dynamic scenes, but the scene would have to be traversed millions of times per frame.","The frequency-domain acoustic radiance transfer method works by computing the transfer operator (without any SVD approximation) and iteratively applying it to the direct acoustic response until the solution converges. In this sense, it is similar to radiosity, and can be considered to compute the acoustic equivalent of global illumination. In order to perform a fair comparison, it is used to compute the same orders of reflection as the disclosed algorithm.","Table 1 summarizes the performance characteristics of the precomputation and runtime stages of the disclosed algorithm. The complexity of the runtime steps depends on the number of modes retained during the SVD approximation:",{"@attributes":{"id":"p-0086","num":"0085"},"tables":{"@attributes":{"id":"TABLE-US-00001","num":"00001"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0","pgwide":"1"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"6"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"84pt","align":"center"}},{"@attributes":{"colname":"2","colwidth":"28pt","align":"center"}},{"@attributes":{"colname":"3","colwidth":"35pt","align":"center"}},{"@attributes":{"colname":"4","colwidth":"56pt","align":"center"}},{"@attributes":{"colname":"5","colwidth":"35pt","align":"center"}}],"thead":{"row":{"entry":[{},"TABLE 1"]}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},{"@attributes":{"namest":"offset","nameend":"5","align":"center","rowsep":"1"}}]},{"entry":[{},"Precomputation",{},{},{},{}]},{"entry":[{},"Time",{},"Initial","Runtime Transfer","Final"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"7"},"colspec":[{"@attributes":{"colname":"1","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"42pt","align":"center"}},{"@attributes":{"colname":"3","colwidth":"42pt","align":"center"}},{"@attributes":{"colname":"4","colwidth":"28pt","align":"center"}},{"@attributes":{"colname":"5","colwidth":"35pt","align":"center"}},{"@attributes":{"colname":"6","colwidth":"56pt","align":"center"}},{"@attributes":{"colname":"7","colwidth":"35pt","align":"center"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["Scene","T","SVD","Modes","Scatter","Operator","Gather"]},{"entry":{"@attributes":{"namest":"1","nameend":"7","align":"center","rowsep":"1"}}}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"9"},"colspec":[{"@attributes":{"colname":"1","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"21pt","align":"right"}},{"@attributes":{"colname":"3","colwidth":"21pt","align":"left"}},{"@attributes":{"colname":"4","colwidth":"21pt","align":"right"}},{"@attributes":{"colname":"5","colwidth":"21pt","align":"left"}},{"@attributes":{"colname":"6","colwidth":"28pt","align":"center"}},{"@attributes":{"colname":"7","colwidth":"35pt","align":"center"}},{"@attributes":{"colname":"8","colwidth":"56pt","align":"center"}},{"@attributes":{"colname":"9","colwidth":"35pt","align":"center"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":["Room","14.2","s","94.5","s","10","43.2 ms","24.0 ms","33.7 ms"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"5"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"126pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"28pt","align":"center"}},{"@attributes":{"colname":"2","colwidth":"35pt","align":"center"}},{"@attributes":{"colname":"3","colwidth":"56pt","align":"center"}},{"@attributes":{"colname":"4","colwidth":"35pt","align":"center"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"25","45.8 ms","43.8 ms","35.0 ms"]},{"entry":[{},"50","42.4 ms","84.3 ms","36.4 ms"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"9"},"colspec":[{"@attributes":{"colname":"1","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"21pt","align":"right"}},{"@attributes":{"colname":"3","colwidth":"21pt","align":"left"}},{"@attributes":{"colname":"4","colwidth":"21pt","align":"right"}},{"@attributes":{"colname":"5","colwidth":"21pt","align":"left"}},{"@attributes":{"colname":"6","colwidth":"28pt","align":"center"}},{"@attributes":{"colname":"7","colwidth":"35pt","align":"center"}},{"@attributes":{"colname":"8","colwidth":"56pt","align":"center"}},{"@attributes":{"colname":"9","colwidth":"35pt","align":"center"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":["Hall","13.1","s","93.1","s","10","37.8 ms","26.8 ms","31.5 ms"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"5"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"126pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"28pt","align":"center"}},{"@attributes":{"colname":"2","colwidth":"35pt","align":"center"}},{"@attributes":{"colname":"3","colwidth":"56pt","align":"center"}},{"@attributes":{"colname":"4","colwidth":"35pt","align":"center"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"25","37.1 ms","45.5 ms","30.2 ms"]},{"entry":[{},"50","36.6 ms","79.7 ms","31.2 ms"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"9"},"colspec":[{"@attributes":{"colname":"1","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"21pt","align":"right"}},{"@attributes":{"colname":"3","colwidth":"21pt","align":"left"}},{"@attributes":{"colname":"4","colwidth":"21pt","align":"right"}},{"@attributes":{"colname":"5","colwidth":"21pt","align":"left"}},{"@attributes":{"colname":"6","colwidth":"28pt","align":"center"}},{"@attributes":{"colname":"7","colwidth":"35pt","align":"center"}},{"@attributes":{"colname":"8","colwidth":"56pt","align":"center"}},{"@attributes":{"colname":"9","colwidth":"35pt","align":"center"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["Auditorium","6.31","min","50.9","min","50","164.1 ms\u2002","218.1 ms\u2002","109.9 ms\u2002"]},{"entry":{"@attributes":{"namest":"1","nameend":"9","align":"center","rowsep":"1"}}}]}}]}}},"As can be seen from the table, the present algorithm allows a very efficient update of the impulse responses when the source position changes in the run-time step as compared to the state-of-the-art techniques. Note that a one-bounce transfer operator is precomputed, and the approach described is used to handle multiple orders of reflection at runtime. Depending on the application, a multi-bounce operator could also be precomputed and applied directly at runtime, thus improving performance further. However, the more flexible approach of varying the orders of reflection at runtime is used in this exemplary implementation. This way, the speedups demonstrated are lower bounds on the speedups possible (i.e., precomputing a multibounce transfer operator would result in even greater performance gains).","Table 2 shows memory requirements of the transfer operators computed by the present algorithm with (\u201c50 Modes\u201d) and without (\u201cReference\u201d) SVD compression. Note that since the entries of each matrix are complex numbers, each entry requires 8 bytes of storage. All sizes in the table are in MB.",{"@attributes":{"id":"p-0089","num":"0088"},"tables":{"@attributes":{"id":"TABLE-US-00002","num":"00002"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"5"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"21pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"56pt","align":"center"}},{"@attributes":{"colname":"3","colwidth":"35pt","align":"center"}},{"@attributes":{"colname":"4","colwidth":"63pt","align":"center"}}],"thead":{"row":[{"entry":[{},"TABLE 2"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"4","align":"center","rowsep":"1"}}]},{"entry":[{},"Scene","Samples","Reference","50 Modes"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"4","align":"center","rowsep":"1"}}]}]},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":{}}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"5"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"21pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"56pt","align":"char","char":"."}},{"@attributes":{"colname":"3","colwidth":"35pt","align":"char","char":"."}},{"@attributes":{"colname":"4","colwidth":"63pt","align":"center"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"Room","177","250.6","161.6"]},{"entry":[{},"Hall","252","508","221.6"]},{"entry":[{},"Auditorium","1024","8388.6","839.2"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"4","align":"center","rowsep":"1"}}]}]}}]}}},"Table 2 shows the benefit of the SVD in reducing the memory required to store the transfer operator. As can be seen, without SVD, which is essentially a form of lossy compression, the transfer operators may be too large to be used on everyday hardware. For the uncompressed (\u201creference\u201d) case, the transfer operator size is n\u00d7n, for each Fourier coefficient (e.g., 1K coefficients). For the compressed (\u201c50 Modes\u201d) case, the transfer operator size is n x k for \u0168, k\u00d7k for D and k\u00d7n for {tilde over (S)}{tilde over (V)}, where k is the number of modes retained. In the table, k=50, and n is the number of surface samples in the scene.","Table 3 compares the runtime performance of the present method to the performance of acoustic radiance transfer. Specifically, Table 3 provides a comparison of the time required by the present algorithm to update the source position and recompute the IR at the listener position after a varying number of diffuse reflections. Since the acoustic radiance transfer approach does not decouple the transfer operator from the source position, it needs to perform a costly recomputation of the transfer operator each time the source moves. By comparison, the present algorithm can quickly update the direct IR at all surface samples and can then apply the precomputed transfer operator. This allows the present approach to handle moving sources far more efficiently.",{"@attributes":{"id":"p-0092","num":"0091"},"tables":{"@attributes":{"id":"TABLE-US-00003","num":"00003"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"4"},"colspec":[{"@attributes":{"colname":"1","colwidth":"49pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"35pt","align":"center"}},{"@attributes":{"colname":"3","colwidth":"63pt","align":"center"}},{"@attributes":{"colname":"4","colwidth":"70pt","align":"center"}}],"thead":{"row":[{"entry":"TABLE 3"},{"entry":{"@attributes":{"namest":"1","nameend":"4","align":"center","rowsep":"1"}}},{"entry":[{},{},{},"Direct-to-Indirect"]},{"entry":["Scene","Orders","Radiance Transfer","Transfer (50 modes)"]},{"entry":{"@attributes":{"namest":"1","nameend":"4","align":"center","rowsep":"1"}}}]},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":{}}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"4"},"colspec":[{"@attributes":{"colname":"1","colwidth":"49pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"35pt","align":"char","char":"."}},{"@attributes":{"colname":"3","colwidth":"63pt","align":"center"}},{"@attributes":{"colname":"4","colwidth":"70pt","align":"center"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["Room","2","11.7 s","131.8 ms"]},{"entry":[{},"5","11.8 s","154.4 ms"]},{"entry":[{},"10","12.0 s","179.3 ms"]},{"entry":["Hall","2","10.6 s","116.5 ms"]},{"entry":[{},"5","10.7 s","147.3 ms"]},{"entry":[{},"10","10.9 s","170.5 ms"]},{"entry":["Auditorium","2","185.3 s\u2002","468.5 ms"]},{"entry":[{},"5","186.7 s\u2002","491.2 ms"]},{"entry":[{},"10","188.7 s\u2002","512.8 ms"]},{"entry":{"@attributes":{"namest":"1","nameend":"4","align":"center","rowsep":"1"}}}]}}]}}},{"@attributes":{"id":"p-0093","num":"0092"},"figref":"FIGS. 4","i":["a ","d "],"b":"4"},"Conclusion","As described above, methods and systems according to the present subject matter provide a precomputed direct-to-indirect transfer approach to solving the acoustic rendering equation in the frequency domain for diffuse reflections. The present approach is able to efficiently simulate early diffuse reflections for a moving source and listener in static scenes. In comparison with existing methods, this approach offers a significant performance advantage when handling moving sources.","The subject matter described herein for simulating sound propagation can be implemented using a non-transitory computer readable medium having stored thereon executable instructions that when executed by the processor of a computer control the computer to perform steps. Exemplary computer readable media suitable for implementing the subject matter described herein can include chip memory devices, disk memory devices, programmable logic devices, and application specific integrated circuits. In addition, a computer readable medium for implementing the subject matter described herein may be located on a single device or computing platform or may be distributed across plural devices or computing platforms.","It will be understood that various details of the presently disclosed subject matter may be changed without departing from the scope of the presently disclosed subject matter. Furthermore, the foregoing description is for the purpose of illustration only, and not for the purpose of limitation."],"GOVINT":[{},{}],"BRFSUM":[{},{}],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"BRIEF DESCRIPTION OF THE DRAWINGS","p":["The features and advantages of the present subject matter will be more readily understood from the following detailed description which should be read in conjunction with the accompanying drawings that are given merely by way of explanatory and non-limiting example, and in which:",{"@attributes":{"id":"p-0016","num":"0015"},"figref":"FIG. 1"},{"@attributes":{"id":"p-0017","num":"0016"},"figref":"FIG. 2"},{"@attributes":{"id":"p-0018","num":"0017"},"figref":"FIGS. 3","i":["a","c "],"b":"3"},{"@attributes":{"id":"p-0019","num":"0018"},"figref":"FIGS. 4","i":["a","d "],"b":"4"}]},"DETDESC":[{},{}]}
