---
title: Method and apparatus for automating device recovery using device configuration information
abstract: A method and apparatus for automating device recovery using device configuration information is described. In one embodiment, a method for restoring a configuration of a source device includes accessing device configuration information from memory associated with a plurality of devices to identify using at least one processor a configuration associated with a source device of the plurality of devices, determining using at least one processor a common configuration between the configuration associated with the source device and a configuration associated with a target device and applying, using the at least one processor, the common configuration to the target device.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08065561&OS=08065561&RS=08065561
owner: Symantec Corporation
number: 08065561
owner_city: Mountain View
owner_country: US
publication_date: 20090331
---

{"@attributes":{"id":"description"},"BRFSUM":[{},{}],"heading":["BACKGROUND","SUMMARY OF THE INVENTION","DETAILED DESCRIPTION"],"p":["1. Field of the Invention","Embodiments of the present invention generally relate to disaster recovery systems and, more particularly, to a method and apparatus for automating device recovery using device configuration information.","2. Description of the Related Art","In a typical computing environment (e.g., a datacenter), administrators and\/or users desire highly available applications and quick recovery of host computers after a disaster (e.g., power failure, hurricane and\/or the like). Current disaster recovery systems (e.g., SYMANTEC NetBackUp Bare Metal Recovery (NBU-BMR)) store a backup of the host computer (e.g., a physical machine or a virtual machine). When a hardware failure or software fault occurs that disables the host computer, these current disaster recovery systems provision a bare metal server to restore operations at the host computer. Generally, the bare metal server is a computer that does not contain an operating system or any software applications. The bare-metal server may be a computer in which a virtual machine is installed directly on computer hardware rather than within the host operating system (OS).","One or more software programs (e.g., operating systems, applications and\/or the like) are installed. One or more associated hardware devices (e.g., an array, a switch, a router, a firewall and\/or the like) are also configured (e.g., an Internet Protocol (IP) Address for a Network Interface Card (NIC), a zone for a switch, a Logical Unit Number (LUN) of an array and\/or the like). For example, the switch may be configured to assign the bare metal server to a zone that was previously assigned to the host computer. As another example, an array may be configured to provide the bare metal computer with access to one or more LUNs that were previously utilized by the host computer.","Even though the current disaster recovery systems are able to restore entire host computers, these systems are unable to recover an individual hardware device or an application that are associated with the host computer. Nonetheless, various hardware devices and\/or applications must be configured to achieve optimal performance and seamless disaster recovery. For example, an array may have a specific LUN configuration, a switch may have a zoning configuration, a firewall may have a packet filtering policy and so on.","Pre-defined templates (e.g., a gold standard set by a hardware vendor) are employed to configure a particular hardware device. Such templates, however, are not customized for each and every type of computing environment (e.g., a data center). Furthermore, the configurations may change over time to accommodate changing computing resources and user needs. Although some hardware devices may have a same function, the templates used for configuration vary from vendor to vendor.","Two or more hardware devices of a same type (e.g., a switch, an array and\/or the like) may perform similar functions but be provided by different vendors (i.e., manufacturers). In some instances, the two or more hardware devices from different vendors may have similar or compatible configurations. Each hardware device maintains configuration information in a proprietary format that requires vendor-specific administration software to access and\/or modify. The vendor-specific administrator software migrates the configuration information between similar hardware devices (e.g., arrays or switches from a same vendor) but cannot migrate the configuration information between dissimilar hardware devices (e.g., arrays or switches from different vendors).","In other words, various parameters (e.g., a number of disks (e.g., virtual disks, hard disks), a number of storage volumes (e.g., LUNs), LUN sizes and layout, addresses of target ports (e.g., SCSI port), file system types (e.g., Windows NT File System (NTFS)), volume group ids and\/or the like) associated with a source array cannot be automatically used to configure a target array from a different vender. Unfortunately, the various parameters have to be manually monitored, recorded and used to replicate\/recover\/rollback a configuration of the source array. Hence, restoring the configuration of the source array on the target array is a tedious and error-prone task.","Therefore, there is a need in the art for a method and apparatus for automating device recovery using device configuration information.","Embodiments of the present invention comprise a method and apparatus for automating device recovery using device configuration information. In one embodiment, a method for restoring a configuration of a source device includes accessing device configuration information from memory associated with a plurality of devices to identify using at least one processor a configuration associated with a source device of the plurality of devices, determining using at least one processor a common configuration between the configuration associated with the source device and a configuration associated with a target device and applying the common configuration using the at least one processor to the target device.","In another embodiment, an apparatus for restoring a configuration of a source device includes an integration component for facilitating communications between various agents of a plurality of agents that are executed using at least one processor to access parameter data associated with a plurality of devices and a data protection component using the at least one processor for calling the integration component to monitor the plurality of devices, aggregate the parameter data, generate device configuration information in memory, wherein the data protection component accesses the device configuration information in the memory to determine a common configuration between a configuration of a source device and a configuration of a target device using the at least one processor, wherein the data protection component utilizes the integration component to configure the target device based on the common configuration.","In yet another embodiment, a computer-readable-storage medium including one or more processor-executable instructions that, when executed by at least one processor, causes the at least one processor to access device configuration information from memory associated with a plurality of devices, identify a configuration associated with a source device of the plurality of devices, determine a common configuration between the configuration associated with the source device and a configuration associated with a target device and apply the common configuration using the at least one processor to the target device.","As explained further below, the invention enables automatic device recovery for a plurality of hardware devices using a common configuration between a source configuration and a configuration of a target device. As soon as the common configuration is determined, a data protection component instructs an integration component to apply various compatible device configuration parameters to the target device in accordance with the common configuration as explained further below. The integration component calls an agent specific to the target device, which configures the target device using the various compatible device configuration parameters to restore operations previously associated with a source device.",{"@attributes":{"id":"p-0020","num":"0019"},"figref":"FIG. 1","b":["100","100","104","106","102","106"]},"The plurality of devices  are illustrated as a device , a device , a device . . . a device . Each device of the plurality of devices  is a type of a hardware device (e.g., including but not limited to an array, a switch, a router, a firewall and\/or the like) known to one of ordinary skill in the art having the benefit of this disclosure. The plurality of devices  facilitate various computer operations within the system  (e.g., data storage, disaster recovery, application\/file serving and\/or the like).","Even though two or more devices of the plurality of the devices  may be provided by different venders, these devices may perform similar functions and utilize compatible configurations. For example, various configuration parameters (e.g., LUN size, a number of disks and\/or the like) may be common to the two or more devices. As described further below, one or more common configuration parameters associated with a source device of the plurality of devices  may be used to configure a target device of the plurality of devices  in order to perform device recovery. In addition, one or more common configuration parameters associated with an application running on the source device may be used to configure the target device is order to achieve application recovery.","The server  is a type of computing device (e.g., a laptop, a desktop and\/or the like) known to one of ordinary skill in the art having the benefit of this disclosure. The server  includes a Central Processing Unit (CPU) , various support circuits  and a memory . The CPU  may comprise one or more commercially available microprocessors or microcontrollers that facilitate data processing and storage. The various support circuits  facilitate the operation of the CPU  and include one or more clock circuits, power supplies, cache, input\/output circuits, and the like. The memory  comprises at least one of Read Only Memory (ROM), Random Access Memory (RAM), disk drive storage, optical storage, removable storage and\/or the like. The memory  includes various software packages, such as an integration component , a data protection component  and a plurality of agents  (illustrated as an agent . . . an agent ). The agent , the agent , the agent , . . . the agent may correspond to the device , the device , the device . . . a device respectively.","The network  comprises a communication system that connects computers by wire, cable, fiber optic and\/or wireless link facilitated by various types of well-known network elements, such as hubs, switches, routers, and the like. The network  may employ various well-known protocols to communicate information amongst the network resources. For example, the network  may be a part of the Internet or Intranet using various communications infrastructure such as Ethernet, WiFi, WiMax, General Packet Radio Service (GPRS), and the like.","The plurality of agents  may share various resources (e.g., data sources, application services, protocols, methods and\/or the like) amongst one another. Such sharing is facilitated by execution of the integration component  by the CPU . Accordingly, the integration component  includes software code that is configured to facilitate communication and interaction between various agents of the plurality of the agents . For example, the integration component  includes various plug-ins (e.g., software components) that enable communication between the various agents of the plurality of agents . Because of the various plug-ins, the integration component  is able to apply one or more configuration parameters associated with a source device of the plurality of devices  to a target device of the plurality of devices .","The data protection component  calls the integration component  to select an appropriate agent amongst the plurality of agents  to access various configuration parameters from a particular device of the plurality of devices . Subsequently, the integration component  determines an appropriate agent to extract the parameter data . Once the parameter data  is extracted, the integration component  communicates the parameter data  to the data protection component . The data protection component , in turn stores the parameter data  as the device configuration information .","The plurality of agents  include various device specific agent software components that are configured to access and\/or extract the parameter data  from the plurality of devices  in order to generate the device configuration information . Each agent of the plurality of agents  may be specific to a particular device of the plurality of the devices . In one embodiment, the plurality of agents  may be executed by the CPU  to access and\/or extract the parameter data  from each device of the plurality of devices . The plurality of agents  communicate the device configuration information  to the server . For example, the plurality of agents  may employ various protocols (e.g., a Simple Network Management Protocol (SNMP), a Small Computer System Interface (SCSI), and\/or the like) to access the parameter data  and\/or communicate the device configuration information .","In one embodiment, the device configuration information  associated with the plurality of devices  may include but not limited to a Logical Unit Number (LUN) configuration of an array, a zoning configuration of a switch, a packet filtering policy of a firewall and\/or the like. The configuration information  includes various parameters for operating and managing the plurality of devices  (e.g., creating a LUN, assigning a LUN to a host computer, assigning an IP address to a NIC, establishing a SCSI target address for a LUN, adding the host computer to a zone and\/or the like). The plurality of agents  access parameter data  that is associated with the plurality of devices  as described further below.","In one or more embodiments, the data protection component  examines the device configuration information  to identify a configuration of a source device (i.e., a source configuration) for device recovery. As soon as a common configuration is determined between the source device and a target device of the plurality of the devices , the data protection component  instructs the integration component  to apply various compatible device configuration parameters to the target device in accordance with the common configuration as explained further below. The integration component  calls an agent specific to the target device of the plurality of agents , which configures the target device using the various compatible device configuration parameters to restore operations previously associated with the source device.","According to various embodiments, the data protection component  includes software code that is executed by the CPU  to determine a common configuration between a source device of the plurality of devices  and a target device of the plurality of devices . The source device and the target device may be two similar hardware devices that perform a same function (e.g., two arrays, two switches, two routers and\/or the like) and have one or more compatible device configuration parameters, such as a LUN size, a host computer name to which a LUN is assigned, a number of LUNs and\/or the like for arrays.","For example, a HEWLETT-PACKARD StorageWorks XP24000 disk array and the EMC Clariion disk array may provide storage volumes to the host computer  but are made by different vendors. Regardless, both disk arrays may utilize a SCSI framework to provide access to one or more LUNS. Therefore, a LUN size (e.g., four (4) Gb) and\/or an address for a SCSI target (e.g., c2t3d4) associated with the EMC Clariion disk array may be configured on the HP StorageWorks XP24000 disk array. As another example, the host computer  accesses file data for the application  at LUN # five (5) on the EMC Clariion disk array. Accordingly, the data protection component  configures the HP StorageWorks XP24000 disk array to provide the host computer  with access to the same file data at the LUN five.","In one embodiment, the data protection component  maps a configuration of the source device to a configuration of the target device to identify one or more compatible device configuration parameters between a source device of the plurality of devices  and a target device of the plurality of devices . For example, a 3COM switch and a CISCO switch operate similarly but have one or more device specific parameters that are not compatible with one another, such as port speed and Virtual LAN settings. Hence, a device specific parameter for the CISCO switch does not map to any device configuration parameter of the 3COM switch. Nonetheless, one or more device configuration parameters may be in common between the 3COM switch and the CISCO switch, such as zone network IP addresses, zone names, host computers assigned to a zone and\/or the like. In fact, these common device parameters may be compatible with other switches from different vendors (e.g., a SUN StorAge switch). During a recovery of the CISCO switch, the data protection component  configures the 3COM switch using these common device parameters. For example, the 3COM switch is configured with zone network IP addresses, zone names and\/or the like that are identical to the configuration of the CISCO switch.","The data protection component  calls the integration component  to access the parameter data  from the plurality of devices . The data protection component  aggregates each and every device configuration parameter from each device of the plurality of device  in order to generate the device configuration information . The data protection component  may utilize an interface (e.g., an Application Programming Interface (API), Command Line Interface (CLI), and\/or the like) provided by the integration component  to request the parameter data  from the plurality of devices .","For example, the integration component  calls a specific agent for the HP StorageWorks XP24000 disk array of the plurality of agents  in order to extract a LUN size, a number of LUNs, one or more SCSI target addresses, a host computer name to which a LUN is assigned, and\/or the like. These parameters are stored in the device configuration information  to reflect a configuration of the HP StorageWorks XP24000 disk array at a particular point-in-time. Subsequent updates to the configuration may be backed up to the device configuration information  on a periodic basis. As explained below, the data protection component  may use the configuration of the HP StorageWorks XP24000 disk array as a source configuration for device recovery.",{"@attributes":{"id":"p-0035","num":"0034"},"figref":["FIG. 2","FIG. 1","FIG. 1","FIG. 1"],"b":["200","200","202","204","102","122","114","110","102","202","218","122"]},"According to various embodiments, the data protection component cooperates with an integration component (e.g., the integration component  when recalled from memory  and executed by the CPU ) to discover the plurality of devices within a computing environment (e.g., the system  of ). As an example and not as a limitation, the integration component (e.g., VERITAS Enterprise Administrator (VEA)) may utilize various agents (e.g., VERITAS Array Integration Layer (VAIL), SAL, and CommandCentral (CC)) to discover similar devices from different vendors and access various device configuration parameters. In one embodiment, the data protection component (e.g., NetBackUp-Bare Metal Recovery (NBU-BMR)) backs up and maintains point-in-time consistent device configuration information (e.g., the device configuration information  of ) associated with the plurality of devices.","At step , a backup policy is processed. In one embodiment, the data protection component processes the backup policy. At step , a determination is made as to whether a device is to be backed up. In one embodiment, the data protection component examines the backup policy to identify one or more devices that are to be backed up. If it is determined that the device is not to be backed up (option \u201cNO\u201d), then the method  proceeds to step . If the device is not included amongst the one or more identified devices, then a device configuration of the device is not to be backed up. At step , the method  waits.","If, at step , it is determined that the device is to be backed up (option \u201cYES\u201d), then the method  proceeds to step . If the device is included amongst the one or more identified devices, then the device configuration is to be backed up. At step , parameter data (e.g., the parameter data  of ) is accessed from the device using an appropriate agent. In one embodiment, the data protection component calls an integration component to select the appropriate agent based on a device type. In some embodiments, the data protection component aggregates the parameter data in order to generate the device configuration information.","At step , the device configuration information (e.g., the device configuration information  of ) is stored in memory (e.g., memory ) and the method  proceeds to step . In some embodiments, the data protection component stores the device configuration information in the memory. In some embodiment, the data protection component performs regular backups of each and every device configuration parameter (e.g., the parameter data  of ) associated with the plurality of devices in accordance with the backup policy. For example, a backup may be performed at a fixed pre-defined time interval or a variable time interval. Furthermore, various available protocols may be employed for the regular backups (e.g., a Simple Network Management Protocol (SNMP), a Small Computer System Interface (SCSI), and\/or the like).","At step , a determination is made as to whether more devices are to be backed up. The data protection component examines the backup policy to determine whether there are more devices to be backed up. If it is determined that more devices are to be backed up, then the method  proceeds to step . In some embodiments, the data protection component determines that the backup policy indicates that there are more devices to be backed up and proceeds to step . If, at step , it is determined that more devices are not to be backed up, then the method  proceeds to step . In some embodiments, the backup policy indicates that there are no more devices to be backed up and the data protection component proceeds to step . At step , the method  ends.",{"@attributes":{"id":"p-0041","num":"0040"},"figref":["FIG. 3","FIG. 1","FIG. 1","FIG. 1"],"b":["300","300","302","304","102","302","322","122","102","306","300","308","308","300"]},"If, at step  it is determined that the restore request is received (option \u201cYES\u201d), then the method  proceeds to step . In one embodiment, an administrator\/user computer communicates a restore request to the data protection component. In one embodiment, the data protection component processes a restore request that is received at a server (e.g., the server  of ). At step , a source configuration selection is processed. The restore request indicates that the administrator\/user selected a configuration of a source device for recovery. In some embodiments, the data protection component processes the source configuration selection.","At step , device configuration information (e.g., the device configuration information  of ) is accessed. The data protection component examines the device configuration information to identify the configuration of the source device. At step , the configuration of the source device is mapped to a target device. In some embodiments, the data protection component maps the configuration of the source device to the target device. Results from the mapping are stored in memory (e.g., the memory ) and may indicate a common configuration between the source device and the target device. At step , compatible device configuration parameters are determined. In some embodiments, the data protection component compares each and every device configuration parameter associated with the source device with each and every device configuration parameter associated with the target device to determine one or more compatible device configuration parameters, which are stored in memory (e.g., the memory ).","At step , the compatible device configuration parameters are applied to the target device. In some embodiments, the data protection component retrieves the one or more compatible device configuration parameters from the memory and communicates the one or more compatible device configuration parameters to the integration component, which executes an appropriate agent to configure the target device. At step , the configuration information is updated. The data protection component updates the configuration information with the compatible device configuration parameters, which were used to configure the target device. The method  proceeds to step , at which the method  ends.","While the foregoing is directed to embodiments of the present invention, other and further embodiments of the invention may be devised without departing from the basic scope thereof, and the scope thereof is determined by the claims that follow."],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"BRIEF DESCRIPTION OF THE DRAWINGS","p":["So that the manner in which the above recited features of the present invention can be understood in detail, a more particular description of the invention, briefly summarized above, may be had by reference to embodiments, some of which are illustrated in the appended drawings. It is to be noted, however, that the appended drawings illustrate only typical embodiments of this invention and are therefore not to be considered limiting of its scope, for the invention may admit to other equally effective embodiments.",{"@attributes":{"id":"p-0016","num":"0015"},"figref":"FIG. 1"},{"@attributes":{"id":"p-0017","num":"0016"},"figref":"FIG. 2"},{"@attributes":{"id":"p-0018","num":"0017"},"figref":"FIG. 3"}]},"DETDESC":[{},{}]}
