---
title: Web-based workflow service visualization and navigation
abstract: Web workflow service information may include implementations, contracts, addresses, bindings, and other information that is sprinkled throughout source files, configuration files, and other locations. A service explorer extracts service information, and visualizes service information in a form that supports navigation, thereby helping developers understand and use workflow service information. A workflow service structure underlying the visualization is constructed with the extracted service information. A hierarchical node visualization of the service structure is displayed in a service explorer GUI. A developer navigates by expanding/contracting nodes, searching nodes, selecting nodes, and running tools with node-specific information, e.g., for testing, tracing, publication, workflow design, and so on. The visualization is automatically updated after service configuration changes. Node-specific source code is displayed for contract and implementation classes, and pertinent sections of configuration files are displayed for bindings and addresses. Derivation of endpoints, bindings, and addresses are displayed for implicitly set endpoints.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08862975&OS=08862975&RS=08862975
owner: Microsoft Corporation
number: 08862975
owner_city: Redmond
owner_country: US
publication_date: 20110919
---

{"@attributes":{"id":"description"},"BRFSUM":[{},{}],"heading":["COPYRIGHT AUTHORIZATION","BACKGROUND","SUMMARY","DETAILED DESCRIPTION","Additional Examples","CONCLUSION"],"p":["A portion of the disclosure of this patent document contains material which is subject to copyright protection. The copyright owner has no objection to the facsimile reproduction by anyone of the patent document or the patent disclosure, as it appears in the Patent and Trademark Office patent file or records, but otherwise reserves all copyright rights whatsoever.","In a very broad sense, a \u201cworkflow\u201d is something which includes steps and resources for accomplishing specified work. The specified work performed by a workflow may include transforming physical items, providing services, and\/or processing data, for example. A workflow may include a sequence of reliably repeatable operations to be performed by a person, by a group of people, and\/or by various mechanisms, for example. Interactions between people, computers, and\/or other machines may be part of a workflow. Documents, products, compositions, data and other things which are created, modified, or otherwise used in the workflow operations may be described as part of a workflow's description. Workflow is sometimes characterized as an abstraction or virtual representation of actual work.","A workflow service in a web application often depends on a variety of implementations, contracts, addresses, bindings, and other information which is embedded in various source files, configuration files, and other locations, making it difficult for a developer to gain sufficient understanding of service entities, their relationships, and their contributions to workflow functionality. However, some embodiments described herein facilitate developer understanding and use of web application workflow service information.","Some embodiments transform web application workflow information to facilitate developer understanding and use of that information. After obtaining web application project files, some embodiments extract workflow service information from the files and construct a workflow service structure based on the extracted information. A visualization of the workflow service structure can then be displayed in a graphical user interface. Developers can navigate within a workflow service using the visualization. For example, using the graphical user interface a developer can make a navigational gesture which selects a node of the workflow service structure. In response to a node selection, some embodiments open web application project file(s) that show service information used in constructing the node in the workflow service structure.","The project files may include workflow implementation source files and configuration files, for example. Extracted information may include service class name, service contract name, service operation contract name, service endpoint address, service endpoint binding type, and\/or service implementation class name, for example.","With some embodiments, the web application project files may be organized in one or more projects of an Integrated Development Environment (IDE). For instance, the project files could match one of the following usage patterns: (a) service contract, implementation, hosting and configuration files all reside within a single project; (b) a service contract resides in a first project, whereas service implementation, hosting, and configuration files reside in one or more other projects; (c) a service contract resides in a first project, a service implementation file resides in a second project, and hosting and configuration files reside in a third project.","In some embodiments, the workflow service structure is constructed by calculating a code-based candidate service tree from a code model, calculating a config-based candidate service tree from a configuration file, and merging the code-based candidate service tree and the config-based candidate service tree. In some, the workflow service structure includes workflow service information for a service contract for a service that is defined implicitly using Receive activities, and\/or a service contract for a web API service in which binding information is optional.","In some embodiments, a displayed visualization of the workflow service structure shows a hierarchy of nodes. The nodes may be arranged in various ways. In some cases, a service endpoint binding node is subordinate to a service class node. In some, a service endpoint address node is subordinate to a service endpoint binding node. In some cases, after a user selects a service contract node within a first area of the graphical user interface, operation contract node(s) associated with the selected service contract node are shown in a second area of the graphical user interface which is visually separated from the first area by demarcation lines, window edges, and\/or background color differences. In some displays, a service contracts root node and a service endpoints root node are at the same level in the hierarchy. Other nodes, and other node arrangements, are also present in some embodiments.","From a developer's perspective, some embodiments involve the developer running a service explorer tool in an IDE, and viewing a hierarchical workflow service structure visualization in the service explorer GUI (graphical user interface). Using the GUI and the visualization, the developer then performs some action. For instance, after making a change in a configuration file, the developer may act simply by viewing an automatically updated visualization which reflects the change. Often, however, the actions occur with a node selection by the developer. Visualization nodes may be selected directly, e.g., by clicking on them in the GUI, or indirectly, e.g., by searching. For instance, in some embodiments the developer selects a node at least in part by searching for service information such as a service name, a service contract name, and\/or an operation name.","After selecting a node of the visualization through the GUI, in some cases the developer views an automatically opened web application project file which contains service information for the selected node, and\/or the developer views and uses a web application project tool which has automatically received service information for the selected node. In some cases, the developer selects a node and then edits configuration settings through a service configuration editor which is run for the selected node. Web application project tools viewed and used by the developer in response to node selection vary by embodiment, including for example a tracing tool, a configuration tool, a client testing tool, a unit testing tool, a hosting option tool, and\/or a publishing tool, as well as the service explorer tool.","In some cases, the developer selects a node of the visualization through a view-contract item of the GUI, and then views an automatically opened web application project file which contains contract class source code service information for the selected node. In some, the developer selects a node through a view-implementation item of the GUI and views an automatically opened file of implementation class source code service information for the selected node. In some cases, the developer selects a node of the visualization through a view-configuration GUI item, and views an automatically opened file that contains configuration service information for the selected node.","In some embodiments, an endpoint node representing an endpoint is selected, and the endpoint was set implicitly at a prior time. The developer then views automatically displayed service information which clarifies a derivation of the endpoint. Similarly, in some cases an address node representing an address is selected, an endpoint associated with the address was set implicitly, and the developer views automatically displayed service information which clarifies a derivation of the address. Likewise, in some cases a binding node representing a binding is selected, an endpoint associated with the binding was set implicitly, and the developer views automatically displayed service information which clarifies a derivation of the binding.","Within the GUI visualization of the hierarchy, some nodes may be expandable to reveal any subordinate nodes, and likewise a developer may unexpand a node, in some cases, to hide the node's subordinates from view in the GUI. Nodes may be expanded be default\u2014that is, expanded when first displayed\u2014or not, in some embodiments. Specifically, in some cases the developer views a visualization of a workflow service structure in which at least two of the following are expanded by default: a project node; a service node; an endpoint node that has at least one of the following subordinate nodes: address, binding, service contract.","In some embodiments, the visualization seen by the developer has nodes representing at least one of the following service types: a Windows\u00ae Communication Foundation (WCF) Core Service, a WCF Workflow Service, a WCF Web API Service, a WCF RIA Service, a WCF Data Service, a WCF Workflow Component Service (mark of Microsoft Corporation).","From an architectural perspective, some embodiments include a logical processor and a memory in operable communication with the logical processor. A hierarchical workflow service structure residing in the memory has at least the following nodes: a service node, an endpoint node, an endpoint address node, an endpoint binding node, an endpoint service contract node. A service explorer (also in the memory) includes instructions which upon execution by a processor will result in a display to a user. In some cases, the display includes an automatically updated visualization of the hierarchical workflow service structure reflecting a change to a configuration file that is associated with a node of the structure. In some, the display includes an automatically opened file which contains textual information (e.g., source code, configuration values) for a user-selected node of the hierarchical workflow service structure. In some cases, the display shows a tool (other than the service explorer) which has automatically received information for a user-selected node of the hierarchical workflow service structure. Various tools for service exploration, tracing, configuration, client testing, unit testing, hosting option, publishing, and so on, may be part of an embodiment. In some cases, such tools may be run by a user directly from within the service explorer.","In some embodiments, the service explorer also has instructions which will extract workflow service information from web application project files and construct the hierarchical workflow service structure based at least in part on the extracted workflow service information.","Some embodiments include a display configured by a visualization of the hierarchical workflow service structure. In some visualizations, conditions such as the following occur: an operation contract node associated with a selected service contract node is shown in an area of the graphical user interface which is visually separated by a line from the selected service contract node; a service contracts root node and a service endpoints root node are at the same level in the hierarchy; a service contract node which has at least one subordinate operation contract node is unexpanded by default.","In some embodiments, the service explorer includes instructions which will perform additional activities. In some, the service explorer accepts a visualization node selection through a view-contract item of the graphical user interface and then automatically displays a file which contains contract class source code service information for the selected node. In some, the service explorer accepts a visualization node selection through a view-implementation item of the graphical user interface and then automatically displays a file which contains implementation class source code service information for the selected node. In some, the service explorer accepts a visualization node selection through a view-configuration item of the graphical user interface and then automatically displays a file which contains configuration service information for the selected node.","In some embodiments, the service explorer includes instructions that will accept selection of an endpoint node which represents an implicitly set endpoint, and then automatically display service information which clarifies a derivation of the endpoint. In some, the service explorer instructions will accept selection of an endpoint node which represents an explicitly set endpoint, and then automatically display an endpoint section of a configuration file for the endpoint. In some, the service explorer instructions will accept selection of an address node which represents an address that has an associated implicitly set endpoint, and then automatically display service information which clarifies a derivation of the address. In some, the service explorer instructions will accept selection of an address node which represents an address that has an associated explicitly set endpoint, and then automatically display an address section of a configuration file for the endpoint. In some, the service explorer instructions will accept selection of a binding node which represents a binding that has an associated implicitly set endpoint, and then automatically display service information which clarifies a derivation of the binding. In some, the service explorer instructions will accept selection of a binding node which represents a binding that has an associated explicitly set endpoint, and then automatically display a binding section of a configuration file for the endpoint.","The examples given are merely illustrative. This Summary is not intended to identify key features or essential features of the claimed subject matter, nor is it intended to be used to limit the scope of the claimed subject matter. Rather, this Summary is provided to introduce\u2014in a simplified form\u2014some concepts that are further described below in the Detailed Description. The innovation is defined with claims, and to the extent this Summary conflicts with the claims, the claims should prevail.","Overview","In many cases, a workflow application is not self-contained. Many web-based application workflows use a service, such as a SOAP (Simple Object Access Protocol) or REST (Representational State Transfer) service, to allow clients (service consumers) to communicate with the service. Such a service often involves many entities, for service definition, service implementation, service addressing, service communication protocols, and so on. During development time, these entities are often spread throughout a developer's project, located in multiple files and\/or at different positions in a large file.","Without suitable help, a developer will switch many times between different files, and scroll through workflow file editors and configuration editors to view these properties and other entities, while trying to analyze the service structure. It can be very challenging for a developer to get a comprehensive and coherent sense of how a workflow is exposing itself as a service. It can also be difficult for a developer to navigate among different service artifacts. The larger the project, the more challenging service development becomes.","Some embodiments described herein provide tools and techniques to generate a service view (a visualization) for a workflow project, so developers can more readily gain a general idea of how the workflow is exposing itself as a service. Some embodiments facilitate navigation among different service aspects within the service view. Accordingly, some embodiments analyze all workflow implementation source files and configuration files in a project, find the parts that are service related, sort them according to which service they belong in, group them together to build a service structure, and visualize the service structure in a graphical user interface. Some embodiments record the file positions (offsets in a file), as well as file locations, when analyzing the files, and make use of that positional information to aid developer navigation among service entities.","Some embodiments described herein may be viewed in a broader context. For instance, concepts such as workflow, services, contracts, implementations, addresses, and visualization may be relevant to a particular embodiment. However, it does not follow from the availability of a broad context that exclusive rights are being sought herein for abstract ideas; they are not. Rather, the present disclosure is focused on providing appropriately specific embodiments. Other media, systems, and methods involving workflow, services, contracts, implementations, addresses, and\/or visualization are outside the present scope. Accordingly, vagueness and accompanying proof problems are also avoided under a proper understanding of the present disclosure.","Reference will now be made to exemplary embodiments such as those illustrated in the drawings, and specific language will be used herein to describe the same. But alterations and further modifications of the features illustrated herein, and additional applications of the principles illustrated herein, which would occur to one skilled in the relevant art(s) and having possession of this disclosure, should be considered within the scope of the claims.","The meaning of terms is clarified in this disclosure, so the claims should be read with careful attention to these clarifications. Specific examples are given, but those of skill in the relevant art(s) will understand that other examples may also fall within the meaning of the terms used, and within the scope of one or more claims. Terms do not necessarily have the same meaning here that they have in general usage, in the usage of a particular industry, or in a particular dictionary or set of dictionaries. Reference numerals may be used with various phrasings, to help show the breadth of a term. Omission of a reference numeral from a given piece of text does not necessarily mean that the content of a Figure is not being discussed by the text. The inventors assert and exercise their right to their own lexicography. Terms may be defined, either explicitly or implicitly, here in the Detailed Description and\/or elsewhere in the application file.","As used herein, a \u201ccomputer system\u201d may include, for example, one or more servers, motherboards, processing nodes, personal computers (portable or not), personal digital assistants, cell or mobile phones, other mobile devices having at least a processor and a memory, and\/or other device(s) providing one or more processors controlled at least in part by instructions. The instructions may be in the form of firmware or other software in memory and\/or specialized circuitry. In particular, although it may occur that many embodiments run on workstation or laptop computers, other embodiments may run on other computing devices, and any one or more such devices may be part of a given embodiment.","A \u201cmultithreaded\u201d computer system is a computer system which supports multiple execution threads. The term \u201cthread\u201d should be understood to include any code capable of or subject to scheduling (and possibly to synchronization), and may also be known by another name, such as \u201ctask,\u201d \u201cprocess,\u201d or \u201ccoroutine,\u201d for example. The threads may run in parallel, in sequence, or in a combination of parallel execution (e.g., multiprocessing) and sequential execution (e.g., time-sliced). Multithreaded environments have been designed in various configurations. Execution threads may run in parallel, or threads may be organized for parallel execution but actually take turns executing in sequence. Multithreading may be implemented, for example, by running different threads on different cores in a multiprocessing environment, by time-slicing different threads on a single processor core, or by some combination of time-sliced and multi-processor threading. Thread context switches may be initiated, for example, by a kernel's thread scheduler, by user-space signals, or by a combination of user-space and kernel operations. Threads may take turns operating on shared data, or each thread may operate on its own data, for example.","A \u201clogical processor\u201d or \u201cprocessor\u201d is a single independent hardware thread-processing unit, such as a core in a simultaneous multithreading implementation. As another example, a hyperthreaded quad core chip running two threads per core has eight logical processors. Processors may be general purpose, or they may be tailored for specific uses such as graphics processing, signal processing, floating-point arithmetic processing, encryption, I\/O processing, and so on.","A \u201cmultiprocessor\u201d computer system is a computer system which has multiple logical processors. Multiprocessor environments occur in various configurations. In a given configuration, all of the processors may be functionally equal, whereas in another configuration some processors may differ from other processors by virtue of having different hardware capabilities, different software assignments, or both. Depending on the configuration, processors may be tightly coupled to each other on a single bus, or they may be loosely coupled. In some configurations the processors share a central memory, in some they each have their own local memory, and in some configurations both shared and local memories are present.","\u201cKernels\u201d include operating systems, hypervisors, virtual machines, BIOS code, and similar hardware interface software.","\u201cCode\u201d means processor instructions, data (which includes constants, variables, and data structures), or both instructions and data.","\u201cProgram\u201d is used broadly herein, to include applications, kernels, drivers, interrupt handlers, libraries, and other code written by programmers (who are also referred to as developers).","\u201cAutomatically\u201d means by use of automation (e.g., general purpose computing hardware configured by software for specific operations discussed herein), as opposed to without automation. In particular, steps performed \u201cautomatically\u201d are not performed by hand on paper or in a person's mind; they are performed with a machine. However, \u201cautomatically\u201d does not necessarily mean \u201cimmediately\u201d.","\u201cComputationally\u201d means a computing device (processor plus memory, at least) is being used, and excludes obtaining a computational result by mere human thought or mere human action alone. For example, doing arithmetic with a paper and pencil is not doing arithmetic computationally as understood herein.","Throughout this document, use of the optional plural \u201c(s)\u201d, \u201c(es)\u201d, or \u201c(ies)\u201d means that one or more of the indicated feature is present. For example, \u201cfile(s)\u201d means \u201cone or more files\u201d or equivalently \u201cat least one file\u201d.","Throughout this document, unless expressly stated otherwise any reference to a step in a process presumes that the step may be performed directly by a party of interest and\/or performed indirectly by the party through intervening mechanisms and\/or intervening entities, and still lie within the scope of the step. That is, direct performance of the step by the party of interest is not required unless direct performance is an expressly stated requirement. For example, a step involving action by a party of interest such as accepting, associating, binding, calculating, changing, configuring, constructing, defining, deriving, displaying, editing, expanding, extracting, having, hosting, including, launching, merging, obtaining, opening, performing, publishing, receiving, representing, residing, running, searching, selecting, separating, setting, showing, testing, tracing, transforming, unexpanding, viewing, visualizing, (or accepts, accepted, associates, associated, etc.) with regard to a destination or other subject may involve intervening action such as forwarding, copying, uploading, downloading, encoding, decoding, compressing, decompressing, encrypting, decrypting, authenticating, invoking, and so on by some other party, yet still be understood as being performed directly by the party of interest.","Whenever reference is made to data or instructions, it is understood that these items configure a computer-readable memory thereby transforming it to a particular article, as opposed to simply existing on paper, in a person's mind, or as a signal on a wire, for example.","Operating Environments","With reference to , an operating environment  for an embodiment may include a computer system . The computer system  may be a multiprocessor computer system, or not. An operating environment may include one or more machines in a given computer system, which may be clustered, client-server networked, and\/or peer-to-peer networked. An individual machine is a computer system, and a group of cooperating machines is also a computer system. A given computer system  may be configured for end-users, e.g., with applications, for administrators, as a server, as a distributed processing node, and\/or in other ways.","Human users  may interact with the computer system  by using displays, keyboards, and other peripherals . System administrators, developers, engineers, and end-users are each a particular type of user . Automated agents acting on behalf of one or more people may also be users . Storage devices and\/or networking devices may be considered peripheral equipment in some embodiments. Other computer systems not shown in  may interact with the computer system  or with another system embodiment using one or more connections to a network  via network interface equipment, for example.","The computer system  includes at least one logical processor . The computer system , like other suitable systems, also includes one or more computer-readable storage media . Media  may be of different physical types. The storage media  may be volatile memory, non-volatile memory, fixed in place media, removable media, magnetic media, and\/or optical media, as opposed to media such as a wire that merely propagates a signal. In particular, a configured storage medium  such as a CD, DVD, memory stick, or other removable non-volatile memory medium may become functionally part of the computer system when inserted or otherwise installed, making its content accessible for use by processor . The removable configured storage medium  is an example of a computer-readable storage medium . Some other examples of computer-readable storage media  include built-in RAM, ROM, hard disks, and other storage devices which are not readily removable by users .","The medium  is configured with instructions  that are executable by a processor ; \u201cexecutable\u201d is used in a broad sense herein to include machine code, interpretable code, and code that runs on a virtual machine, for example. The medium  is also configured with data  which is created, modified, referenced, and\/or otherwise used by execution of the instructions . The instructions  and the data  configure the medium  in which they reside; when that memory is a functional part of a given computer system, the instructions  and data  also configure that computer system. In some embodiments, a portion of the data  is representative of real-world items such as product characteristics, inventories, physical measurements, settings, images, readings, targets, volumes, and so forth. Such data is also transformed as discussed herein, e.g., by binding, construction, deployment, execution, extraction, modification, display, creation, loading, and\/or other operations.","A web-based service application  which is organized in one or more projects  and files  (e.g., files defining contracts , implementations , configuration(s) , hosting ), including source code files (source ), as well as other data and software, and other items shown in the Figures and\/or discussed in the text, may reside partially or entirely within one or more media , thereby configuring those media. In addition to processor(s)  and memory , an operating environment may also include other hardware, such as display(s) , buses, power supplies, and accelerators, for instance.","A given operating environment  may include an Integrated Development Environment (IDE)  and\/or other software development tools . An IDE  provides a developer with a set of coordinated software development tools, such as editor(s), compiler(s), and debugger(s). In particular, some of the suitable operating environments for some embodiments include or help create a Microsoft\u00ae Visual Studio\u00ae development environment (marks of Microsoft Corporation) configured to support program development. Some suitable operating environments include Java\u00ae environments (mark of Oracle America, Inc.), and some include environments which utilize languages such as C++ or C# (\u201cC-Sharp\u201d), but teachings herein are applicable with a wide variety of programming languages, programming models, and programs, as well as with endeavors outside the field of software development per se that use web-based application environments, workflow service technologies, or both.","One or more items are shown in outline form in  to emphasize that they are not necessarily part of the illustrated operating environment, but may interoperate with items in the operating environment as discussed herein. It does not follow that items not in outline form are necessarily required, in any Figure or any embodiment.","Systems",{"@attributes":{"id":"p-0055","num":"0054"},"figref":"FIG. 2","b":["202","204","116","206","204","208","208","210","212","214","214","216","218"]},"In some embodiments, service information  includes information extracted from files . In some, service types  such as different Windows\u00ae Communication Foundation (WCF) service types are specified in service information  (mark of Microsoft Corporation). The visualization  and the service structure  have corresponding nodes , but a service structure node is not necessarily displayed in a visualization at a given point in time. Nodes  may be tailored to display and\/or to provide access to particular kinds of service information , including for example project nodes , service nodes , endpoint nodes , address nodes , binding nodes , contract nodes , and operation nodes . A given node  may belong to more than one category, e.g., an operation contract node ,  is both a contract node  and an operation node . Organizational nodes  for organizing a visualization may also be present, such as root nodes  and filler nodes .","Within configuration files  and other sources of service information, particular syntactically delimited sections  may pertain to particular kinds of service information, e.g., to addresses or to bindings, for example. Configuration files may contain settings , which can be edited in familiar manner using an editor .","With reference to , some embodiments provide a computer system  with a logical processor  and a memory medium  configured by circuitry, firmware, and\/or software to transform workflow service information as described herein.","For example, some embodiments include a computer system having a logical processor , a memory  in operable communication with the logical processor, and a hierarchical workflow service structure  residing in the memory. The service structure  has nodes  such as a service node , an endpoint node , an endpoint address node , an endpoint binding node , and an endpoint service contract node . A single node may fill one or more of these roles, but multiple nodes are contemplated.","A service explorer  residing in the memory includes instructions  which upon execution by a processor will result in a display to a user . For example, in some cases the service explorer  will display an automatically updated visualization  of the hierarchical workflow service structure  reflecting a change made to a configuration file  that is associated with a node . In some cases, the service explorer  will display an automatically opened file  which contains textual information (e.g., configuration values or source code) for a user-selected node  of the hierarchical workflow service structure. In some cases, the service explorer displays (or equivalently, causes display of) a tool , other than the service explorer, which has automatically received information for a user-selected node  of the hierarchical workflow service structure.","In some embodiments, the service explorer  instructions will extract workflow service information  from web application project files, and will construct the hierarchical workflow service structure  based at least in part on the extracted workflow service information. In other cases, the service explorer  visualizes and navigates the service structure  but does not construct it.","Some embodiments include a display  configured by a visualization  of the hierarchical workflow service structure . In some of these, an operation contract node ,  associated with a selected service contract node ,  is shown in an area of the graphical user interface  which is visually separated by a line from the selected service contract node. In some, a service contracts root node ,  and a service endpoints root node ,  are at the same level in the hierarchy. In some visualizations, a service contract node which has at least one subordinate operation contract node is unexpanded by default, that is, the subordinate node(s) are shown only after an explicit gesture from the user indicating that they should be displayed.","In some embodiments, the service explorer  includes instructions which upon execution will accept a visualization node  selection through a view-contract item  of the GUI  and then automatically display a file , ,  which contains contract class source code service information for the selected node. In some, the service explorer  will accept a visualization node  selection through a view-implementation item  of the GUI  and then automatically display a file , ,  which contains implementation class source code service information for the selected node. In some, the service explorer  will accept a visualization node  selection through a view-configuration item  of the GUI  and then automatically display a file ,  which contains configuration service information for the selected node.","In some embodiments, the memory  is further configured by containing at least one of the following familiar tools : a tracing tool, a configuration tool, a client testing tool, a unit testing tool, a hosting option tool, a publishing tool. In some, one or more such tools  can be run by a user directly from within the service explorer , as opposed to exiting the service explorer and going back to an operating system, script interpreter, or other command interface for launching autonomous programs.","In some embodiments, the service explorer  includes instructions which upon execution will accept selection of an endpoint node  which represents an implicitly set endpoint, and then automatically display service information  which clarifies a derivation of the endpoint. In some, the service explorer  will accept selection of an endpoint node  which represents an explicitly set endpoint, and then automatically display an endpoint section  of a configuration file  for the endpoint.","In some embodiments, the service explorer  will accept selection of an address node  which represents an address that has an associated implicitly set endpoint, and then automatically display service information  which clarifies a derivation of the address. In some, the service explorer  will accept selection of an address node  which represents an address that has an associated explicitly set endpoint, and then automatically display an address section  of a configuration file  for the endpoint.","In some embodiments, the service explorer  will accept selection of a binding node  which represents a binding that has an associated implicitly set endpoint, and then automatically display service information  which clarifies a derivation of the binding. In some, the service explorer  will accept selection of a binding node  which represents a binding that has an associated explicitly set endpoint, and then automatically display a binding section  of a configuration file  for the endpoint.","In some embodiments peripherals  such as human user I\/O devices (screen, keyboard, mouse, tablet, microphone, speaker, motion sensor, etc.) will be present in operable communication with one or more processors  and memory. However, an embodiment may also be deeply embedded in a system, such that no human user  interacts directly with the embodiment. Software processes may be users .","In some embodiments, the system includes multiple computers connected by a network. Networking interface equipment can provide access to networks , using components such as a packet-switched network interface card, a wireless transceiver, or a telephone network interface, for example, will be present in a computer system. However, an embodiment may also communicate through direct memory access, removable nonvolatile media, or other information storage-retrieval and\/or transmission approaches, or an embodiment in a computer system may operate without communicating with other computer systems.","Some embodiments operate in a \u201ccloud\u201d computing environment and\/or a \u201ccloud\u201d storage environment in which computing services are not owned but are provided on demand. For example, service application project files  may be on multiple devices\/systems  in a networked cloud, a workflow service structure  may be stored on yet another device within the cloud, and the service explorer  and visualization  may configure a display  on yet other cloud device(s)\/system(s) .","Processes",{"@attributes":{"id":"p-0072","num":"0071"},"figref":["FIGS. 3 and 4","FIG. 3"],"b":["300","400","202","300"]},"Examples are provided herein to help illustrate aspects of the technology, but the examples given within this document do not describe all possible embodiments. Embodiments are not limited to the specific implementations, arrangements, displays, features, approaches, or scenarios provided herein. A given embodiment may include additional or different features, mechanisms, and\/or data structures, for instance, and may otherwise depart from the examples provided herein.","During a file obtaining step , an embodiment obtains files  which contain service information . Step  may be accomplished using file systems, networks, and\/or other familiar mechanisms, for example, adapted to obtain service information files.","During an information extracting step , an embodiment extracts service information  from files . Step  may be accomplished using parsers, keyword searches, and\/or other familiar mechanisms, adapted to extract service information  identified herein, for example.","During a service structure constructing step , an embodiment constructs a workflow service structure  which places the extracted service information in a hierarchical collection of nodes . Step  may be accomplished using familiar linked structure construction techniques adapted to construct hierarchical structures  as described herein with regard to node subordination, service information as content, links to tools , and the like. Step  may include steps  and  discussed below.","During candidate tree calculating steps , and a candidate tree merging step , candidate trees  are calculated from code models and configuration files and then merged, as part of constructing  a service structure.","During an updating step , the service structure  and visualization  are updated to reflect changes in configuration file  content, source file  content, and\/or other service information. Step  may be accomplished in an IDE by tracking changes made with editors  and other tools , for example, to watch for possible changes to service information  and then updating the structure  accordingly. The visualized portions of the structure  (at least the visible portions) are likewise updated. In an alternative approach, filesystem modification dates for files  are noted when a structure  is created and polled, and files  are re-read into the structure  after their modification date changes, regardless of what content was changed. Other familiar update mechanisms may also be adapted for use with service structures , visualizations , and service information .","During a displaying step , an embodiment displays a visualization , e.g., by drawing the visualization in a GUI  or sending the visualization to a printer for printing. Step  may be accomplished using familiar graphics tools and techniques adapted to display visualizations in the form of hierarchies of node , for example.","During a gesture receiving step , an embodiment receives a navigational gesture , such as a node selection gesture (click, double-click, point, touch, etc.), a tool  launching gesture, and\/or a zoom, pan, resize or similar gesture  for a window displaying a portion of a visualization, for example. Familiar human-computer interface tools and techniques may be adapted for use with visualizations  and navigation using visualizations as described herein.","During a file opening step , an embodiment opens a file , e.g., by using familiar filesystem mechanisms. For convenience, one may also refer to a user opening  a file, as shorthand for a user making gesture(s) which result in a mechanism opening the file.","During a file displaying step , an embodiment displays content of a file , e.g., by using familiar filesystem and display mechanisms. Displaying step  corresponds generally to viewing step , with the understanding that step  is from a developer perspective while step  is from a system or architecture perspective.","During a software running step , also sometimes referred to as a software launching step , an embodiment runs software (after launching the software if it has not previously been launched), such as a service explorer  or a development tool . Familiar software launch and execution mechanisms may be used.","During a software viewing step , a user views software such as a service explorer  or a development tool . Step  corresponds generally to step , with the understanding that step  is from a developer perspective while step  is from a system or architecture perspective.","During a visualization\/service information viewing step , a user views a visualization  and\/or views service information  in a service explorer . Step  corresponds generally to visualization displaying step  and project file displaying step , with the understanding that step  is from a developer perspective while steps  and  are from a system or architecture perspective.","During a configuration editing step , which is also referred to as making  a configuration change or as changing  a configuration, a user (or an embodiment operating on behalf of a user) changes content of a configuration file  or other workflow configuration service information . Familiar tools  and\/or editing subroutines of a service explorer  can be used, for example.","During a node selecting step , a user (or an embodiment operating on behalf of a user) selects one or more nodes . Node selecting step  may be accomplished using a GUI, keyword searches, and\/or other mechanisms adapted to select visualization nodes , for example.","Specifically, during a view-item node selecting step , which is an example of step , a user or embodiment selects a node  using a GUI view-item , e.g., a view-contract item, a view-implementation item, or a view-configuration item.","Similarly, during a search-based node selecting step , which is an example of step , a user or embodiment selects a node  using a search, such as a search for a keyword, a search for a date or other value in a specified range, and\/or a search for nodes which reference or depend on a particular node. Familiar search mechanisms may be adapted for use in searching nodes , for example.","During a derivation information displaying step , an embodiment displays information  which clarifies a derivation of an endpoint, an address, or a binding which has been set implicitly instead of being set explicitly by a developer. Step  may be part of visualization displaying step  and\/or file displaying step .","During a node expanding step , an embodiment displays  a node  by default as expanded, whereas during a node non-expanding step , also referred to as a node unexpanding step , an embodiment displays  a node  by default as not expanded. Undoing expansion of a node is referred to as contracting the node, and occurs after a node has been displayed in an expanded manner.","During a node selection accepting step , an embodiments accepts (e.g., receives) a selection of a node. Step  corresponds generally to step , except that step  is from a system or architecture perspective while step  is from a developer perspective.","During a memory configuring step , a memory medium  is configured by a visualization , a service explorer , a workflow service information structure, and\/or otherwise in connection with web-based workflow service information visualization and navigation as discussed herein.",{"@attributes":{"id":"p-0094","num":"0093"},"figref":"FIG. 4","b":["134","206","402","218","402","404","130","206","406","218","226","228","230","406","408","404","408","308","402","406","404","408","310","206","410","214"]},"Continuing this example, the service structure  is read by instructions  in a service  visualizer , which controls a GUI  to display a visualization  of the structure . During navigation of the visualization  by a developer , node selection and\/or other gestures may cause control to be passed from the GUI to a code editor  to view  or edit  source code , for instance. Control may also be passed to a configuration editor , or to a workflow designer  to further design the workflow  service , and\/or to other tools , from within the service explorer GUI .","The foregoing steps and their interrelationships are discussed in greater detail below, in connection with various embodiments.","Some embodiments provide a process for transforming web application workflow information. From an architectural perspective, the process obtains  web application  project files  which include, in this example, at least one workflow  implementation source file ,  and at least one workflow configuration file , . This process extracts  workflow  service information  from the web application project files . Extraction may include, for instance, extracting  at least one (or two, or three, etc.) of the following pieces of workflow service information : a service class name, a service contract name, a service operation contract name, a service endpoint address, a service endpoint binding type, a service implementation class name. This process then constructs  a workflow service structure  based on (i.e., including and\/or derived from) the extracted workflow service information .","In some embodiments, the process extracts  workflow service information from web application project files which match a specific usage pattern. For example, in some cases the service contract , implementation , hosting , and configuration  files all reside within a single project . In some cases, a service contract resides in a first project, whereas service implementation, hosting, and configuration files reside in one or more other projects. In some cases, a service contract resides in a first project, a service implementation file resides in a second project, and hosting and configuration files reside in a third project.","In some embodiments, the process constructs  a workflow service structure including workflow service information for a service contract for a service that is defined implicitly using Receive activities. In some, the process constructs  a structure  for a service contract for a web API service in which binding information is optional.","In some embodiments, the constructing step  includes calculating  a code-based candidate service tree  from a code model (e.g., source  codes), and calculating  a config-based candidate service tree  from a configuration file . The constructing step  subsequently or concurrently merges  the code-based candidate service tree and the config-based candidate service tree to build the service structure  in memory .","Some embodiments store the service structure  for later use, such as for later visualization or later use by analytic tools . Some promptly display  a visualization of the workflow service structure in a graphical user interface. In some cases, the displayed visualization  shows a hierarchy of nodes . In some of these, a service endpoint binding node , ,  is shown and treated (e.g., for expand\/contract purposes) as subordinate to a service class node  such as a contract or implementation class node. In some cases, a service endpoint address node , ,  is subordinate to a service endpoint binding node , , . In some, a service contracts root node , ,  and a service endpoints root , ,  node are at the same level (same distance from the root node) in the hierarchy.","In some cases, with some embodiments, after a user  selects  a service contract node  within a first area of the graphical user interface , operation contract node(s)  associated with the selected service contract node are shown in a second area of the graphical user interface which is visually separated from the first area.","In some embodiments, the process receives  a navigational gesture  through the graphical user interface . The gesture effectively selects  a node  of the workflow service structure . In response, the embodiment opens  web application project file(s) which contain service information  (e.g., source or configuration values) that was used in constructing  the node in the workflow service structure.","From a developer's perspective, some embodiments provide a process for facilitating the developer's use of web application workflow information . For example, in some processes the developer  runs  a service explorer tool  in an integrated development environment  or as a stand-alone version. The developer views  a visualization  of a hierarchical workflow service structure , in a graphical user interface  of the service explorer tool . Then the developer performs some action. Some suitable actions include, in this example, making  a change in a configuration file and then viewing  an automatically updated  visualization which reflects the change.","As further illustration, some other suitable actions include selecting  a node  of the visualization through the graphical user interface, and then viewing  an automatically opened web application project file  which contains service information  for the selected node. Some other suitable actions are selecting  a node of the visualization through the graphical user interface, and then viewing  a web application project tool  which has automatically received service information  for the selected node. As yet additional illustration, some other suitable actions include selecting  a node of the visualization through the graphical user interface, and then editing  configuration settings  through a service configuration editor  (a type of tool ) which is run for the selected node. The tool  may be, for example, a tracing tool, a configuration tool, a client testing tool, a unit testing tool, a hosting option tool, or a publishing tool. Other actions described herein may also be presented as suitable actions within a given embodiment.","In some embodiments, the visualization  has nodes  which represent a Windows\u00ae Communication Foundation (WCF) service type , but other service types  may also be visualized (mark of Microsoft Corporation). Some examples of WCF service types  are a WCF Core Service, a WCF Workflow Service, a WCF Web API Service, a WCF RIA Service, a WCF Data Service, a WCF Workflow Component Service. Other SOAP and\/or REST service types  may also be visualized in some embodiments.","In some embodiments, the developer selects  a node  of the visualization through a view-contract item  of the graphical user interface , and then views  an automatically opened web application project file  which contains contract class source code service information  for the selected node. In some, the developer selects  a node  through a view-implementation item  and views an automatically opened file  which contains implementation class source code service information  for the selected node. In some, the developer selects  a node  through a view-configuration item  and views an automatically opened file  which contains configuration service information for the selected node.","In some embodiments, the developer selects  a node  at least in part by searching  for particular node content or node characteristics. For example, in some cases a search can specify a service name, a service contract name, and\/or an operation name as service information being sought in a node.","In some embodiments, an endpoint node ,  representing an endpoint is selected , and the endpoint was set implicitly. The developer can view  automatically displayed  service information ,  which clarifies a derivation of the endpoint. Similarly, in some embodiments an address node ,  representing an address is selected, and an endpoint associated with the address was set implicitly. The developer can then view  automatically displayed  service information ,  which clarifies a derivation of the address. Likewise, in some embodiments a binding node ,  representing a binding is selected , and an endpoint associated with the binding was set implicitly. The developer can view  automatically displayed  service information ,  which clarifies a derivation of the binding.","In some embodiments, the developer can view  a visualization of a workflow service structure in which a project node  is expanded by default, a service node  is expanded by default, and\/or an endpoint node  is expanded by default. The expanded endpoint node  may show subordinate node(s) such as address , binding , and\/or service contract  nodes.","Configured Media","Some embodiments include a configured computer-readable storage medium . Medium  may include disks (magnetic, optical, or otherwise), RAM, EEPROMS or other ROMs, and\/or other configurable memory, as opposed to wires and other propagated signal media. The storage medium which is configured may be in particular a removable storage medium  such as a CD, DVD, or flash memory. A general-purpose memory, which may be removable or not, and may be volatile or not, can be configured into an embodiment using items such as workflow service structures , visualizations , and a service explorer , in the form of data  and instructions , read from a removable medium  and\/or another source such as a network connection, to form a configured storage medium. The configured storage medium  is capable of causing a computer system to perform process steps for transforming data through workflow service visualization and navigation as disclosed herein.  thus help illustrate configured storage media embodiments and process embodiments, as well as system and process embodiments. In particular, any of the process steps illustrated in  and\/or , or otherwise taught herein, may be used to help configure a storage medium to form a configured medium embodiment.","Additional details and design considerations are provided below. As with the other examples herein, the features described may be used individually and\/or in combination, or not at all, in a given embodiment.","Those of skill will understand that implementation details may pertain to specific code, such as specific APIs and specific sample programs, and thus need not appear in every embodiment. Those of skill will also understand that program identifiers and some other terminology used in discussing details are implementation-specific and thus need not pertain to every embodiment. Nonetheless, although they are not necessarily required to be present here, these details are provided because they may help some readers by providing context and\/or may illustrate a few of the many possible implementations of the technology discussed herein.","The following discussion is derived from WCF Service Explorer documentation. WCF Service Explorer is a program designed and implemented by Microsoft Corporation. Aspects of the WCF Service Explorer program and\/or documentation are consistent with or otherwise illustrate aspects of the embodiments described herein. However, it will be understood that WCF Service Explorer documentation and\/or implementation choices do not necessarily constrain the scope of such embodiments, and likewise that WCF Service Explorer and\/or its documentation may well contain features that lie outside the scope of such embodiments. Features described here are not necessarily part of any commercially available product, WCF Service Explorer or otherwise. It will also be understood that the discussion below is provided in part as an aid to readers who are not necessarily of ordinary skill in the art, and thus may contain and\/or omit details whose recitation below is not strictly required to support the present disclosure.","WCF Service Explorer Overview","WCF Service Explorer presents WCF services as a whole to customers  instead of as separate code, config and host-specific files . The Service Explorer allows customers to navigate to specific file locations that they can view, edit and use specific tools to develop their WCF services.","When authoring a new WCF service or looking at an existing WCF service, developers can benefit from understanding all WCF artifacts, such as service contracts, service implementations, service endpoint, service behavior, .svc file, etc. and the relationship among them, such as the service name and service contract between configuration and code, the service name between .svc and service implementation, etc. Microsoft\u00ae Visual Studio\u00ae environments (marks of Microsoft Corporation) and other familiar IDEs  may provide a set of tools to help authoring, configuring, testing and trouble-shooting WCF services, but in some situations discoverability, for example, can be improved to increase the usefulness of such tools. WCF Service Explorer can help exploration of WCF service artifacts and navigation among WCF service artifacts to make them more manageable for developers.","WCF has different service flavors, with different gestures for service concepts. WCF Service Explorer can help present all WCF services in a convenient way based on different service flavors. For example, the Service Explorer could visualize the service contract for a WCF WF service that is defined implicitly using Receive activities, and it can also visualize the service contract for a WCF Web API service that can avoid showing binding info. The Service Explorer can be a discoverable entry point for available tools . Going forward, the Service Explorer can be a component designer for the WCF component in an AppFabric AppModel.","Scenario: Authoring a WCF Service in a Project","Alice is new to WCF technology. She opens an IDE  and tries to create a new WCF service project. She finds quite a few different concepts such as service contract, service implementation, configuration and svc file, by reading WCF books, and finds it challenging to go ahead without clearly understanding the relationship between them. With WCF Service Explorer, Alice can view her service as a whole, from the start. She can see how the different parts are composed and work together, which illustrates for her the concept of a service. She avoids struggling to understand complex details of WCF technologies as a beginner. She also feels it is easier for her to map the service concept to the complex WCF details.","When Alice starts to implement her services, she also easily finds useful tools  that can help her development, such as tracing tool, configuration tool, test client tool, unit testing tool, hosting option tool, publishing tool, and so on. Alice now has confidence that she can go through the hard time at the beginning. She will go ahead using WCF and ultimately become an expert.","Scenario: Continuing Development of an Existing WCF Service","Elvis is adding functionalities to an existing WCF service project  developed by his colleagues in the last release. He plans to allocate significant time to understand the project first, and then starts his development work. When Elvis opens the project in an IDE , he notices there is a WCF Service Explorer tool. With this tool, he can view WCF services and their structures within a solution. When Elvis starts to add functionalities, he also finds that WCF Service Explorer concentrates the entry points to other useful WCF tools  that can help his development, making it convenient to log and view trace info, launch a scenario-based configuration tool, conduct ad hoc testing, and so on. Each entry point appears at a convenient point in his navigation of the WCF structure. Elvis will finish his project ahead of schedule.","The foregoing scenarios are illustrative, not limiting.","User Experiences","As part of a UI (user interface) overview of WCF Service Explorer, consider the following example of a visualization. In a commercial product, the visualization would likely appear in a window or panel, with graphical features such as colored text and icons, for example. However, a wide variety of implementations are possible, so rather than limiting (or appearing to limit) the possible approaches to a particular depiction, visualizations are represented below using a graphics-neutral format of hierarchically arranged text, with each line representing a node, and with indentation and line position reflecting the hierarchy. As elsewhere herein, any apparent hyperlinks are not meant to be live, not meant to be followed from this document, and not meant to incorporate material into this document by reference; the apparent hyperlinks are instead merely examples.",{"@attributes":{"id":"p-0128","num":"0127"},"tables":{"@attributes":{"id":"TABLE-US-00001","num":"00001"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"189pt","align":"left"}}],"thead":{"row":{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"FooService"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"175pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"FooService.Service1"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"56pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"161pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"basicHttpBinding_IService1"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"70pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"147pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"http:\/\/<hostAddress>\/<Service1.svc>"]},{"entry":[{},"basicHttpBinding"]},{"entry":[{},"FooService.IService1"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"84pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"133pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"DemoOperation1"]},{"entry":[{},"DemoOperation2"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"56pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"161pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"netTcpBinding_IService1"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"70pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"147pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"net.tcp:\/\/<hostAddress>\/<Service1.svc>"]},{"entry":[{},"netTcpBinding"]},{"entry":[{},"FooService.IService1"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"84pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"133pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"DemoOperation1"]},{"entry":[{},"DemoOperation2"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"56pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"161pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"mexEndpoint"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"175pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"FooService.Service2"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"56pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"161pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"basicHttpBinding_IService1"]},{"entry":[{},"netTcpBinding_IService1"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"189pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"BarService"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"175pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"BarService.Service1"]},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}}]}}]}}},"A first alternative for UI layout is shown below. This alternative has a separate UI area for operations. When a developer clicks on a service contract node, the operation contracts will be shown in the separate area. This helps avoid duplicated operations in multiple endpoints.",{"@attributes":{"id":"p-0130","num":"0129"},"tables":{"@attributes":{"id":"TABLE-US-00002","num":"00002"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"35pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"182pt","align":"left"}}],"thead":{"row":{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"FooService"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"49pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"168pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"Service1"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"63pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"154pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"Endpoint1"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"77pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"140pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"http:\/\/..."]},{"entry":[{},"basicHttpBinding"]},{"entry":[{},"FooService.IService1"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"63pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"154pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"Endpoint2"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"77pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"140pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"net.tcp:\/\/"]},{"entry":[{},"netTcpBinding"]},{"entry":[{},"FooService.IService2"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"49pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"168pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"Service2"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"63pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"154pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"Endpoint1"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"35pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"182pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"BarService"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"49pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"168pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"Service1"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"35pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"182pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -"]},{"entry":[{},"DemoOperation1"]},{"entry":[{},"DemoOperation2"]},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}}]}}]}}},"A second alternative for UI layout is shown below. This alternative organizes each Service node by \u201cService Contract\u201d and Endpoint\u201d under respective root nodes .",{"@attributes":{"id":"p-0132","num":"0131"},"tables":{"@attributes":{"id":"TABLE-US-00003","num":"00003"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"49pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"168pt","align":"left"}}],"thead":{"row":{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"FooService"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"63pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"154pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"Service1"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"77pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"140pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"Service Contracts"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"91pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"126pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"FooService.IService1"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"105pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"112pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"DemoOperation1"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"91pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"126pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"FooService.IService2"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"105pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"112pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"DemoOperation2"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"77pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"140pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"Endpoints"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"91pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"126pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"Endpoint1"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"105pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"112pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"Address"]},{"entry":[{},"Binding"]},{"entry":[{},"Contract"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"63pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"154pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"Service2"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"49pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"168pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"BarService"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"63pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"154pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"Service1"]},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}}]}}]}}},"Shown below are some example naming rules used in constructing a visualization. Other rules can also be used.",{"@attributes":{"id":"p-0134","num":"0133"},"tables":{"@attributes":{"id":"TABLE-US-00004","num":"00004"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"1","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"91pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"84pt","align":"left"}}],"thead":{"row":[{"entry":{"@attributes":{"namest":"1","nameend":"3","align":"center","rowsep":"1"}}},{"entry":["Node","Example","Naming Rule"]},{"entry":{"@attributes":{"namest":"1","nameend":"3","align":"center","rowsep":"1"}}}]},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["Project","FooService","Project name"]},{"entry":["Service","FooService.Service1","Service class name"]},{"entry":["Endpoint","basicHttpBinding_IService1","Application endpoint:"]},{"entry":[{},{},"Composition of binding"]},{"entry":[{},{},"type and service"]},{"entry":[{},{},"contract"]},{"entry":[{},{},"mexEndpoint: Standard"]},{"entry":[{},{},"endpoint"]},{"entry":["Address","Absolute Address","Service endpoint"]},{"entry":[{},{},"absolute address"]},{"entry":["Binding","basicHttpBinding","Binding type"]},{"entry":["Service","FooService.IService1","Service contract name"]},{"entry":"Contract"},{"entry":["Operation","DemoOperation1","Service operation"]},{"entry":["Contract",{},"contract name"]},{"entry":{"@attributes":{"namest":"1","nameend":"3","align":"center","rowsep":"1"}}}]}}}}},"With regard to icons, in a first category a \u201cRefresh\u201d tooltip on icons allows the developer to refresh nodes , and a \u201cTree View Settings\u201d tooltip has options to show\/hide specific nodes, such as showing service node only, etc. In a second category, a \u201cView Contract\u201d tooltip item  will open a node-specific source code file including C#\/VB code file and XAML file and go to the specific contract class; this opening is contextually sensitive to a selected node. A \u201cView Implementation\u201d tooltip item  will open a node-specific source code file including C#\/VB code file and XAML file and go to the specific implementation class; this opening is also contextually sensitive to a selected node. A \u201cView Configuration\u201d tooltip item  will open a configuration file, and is likewise contextually sensitive to the selected node. In a third category, a \u201cConfigure WCF Configuration\u201d tooltip item  lets a developer view and update configuration settings by launching a Service Configuration Editor , and will be shown when the developer is choosing a specific Project Node, Service Node, or Endpoint Node.","A \u201cSearch\u201d box can specify Service Name, Service Contract Name, or Operation Name. A search  will go to the first node that matches, and in this example will highlight the other nodes that match the search criteria. A Click Stop next will search for all nodes.","As to Scope of service information , for creating a WCF service application, customers can adopt different usage patterns (described above), by placing the service contract, implementation, hosting and configuration information in one or more projects . Different projects may use different patterns. In some approaches, Scope is defined as follows. For a Project node , Scope includes all the projects in the IDE solution. For a Service node , Scope includes all WCF service implementation classes defined in a project. As to Endpoint , some endpoints are defined explicitly in a config file ; some endpoint capability is implicitly defined by a protocol mapping configuration element in machine.config or in project config file, and some endpoints are implicitly defined by a service host factory. Endpoints defined in code are outside the Service node Scope in this example.","For an Address node , Scope will include a service absolute address, which involves composition when the host based address cannot be recognized at design time, such as http:\/\/<hostAddress>\/Service1.svc\/ [relativeaddress]. Alternately, a relative address is used.","For a Binding node , a Click Stop  shows binding type and a tooltip will describe the usage pattern of this binding. A Click Stop  shows binding elements of each binding type.","For a Service Contract node , Scope includes all service contracts that a service will implement, noting that a contract can be defined in this project or can be defined in another project and referred to by this project. The service contract can be different WCF service types . Service Contract node Out of Scope for this example occurs if a service contract is defined but is not implemented by a service class, or these contracts could be shown in separate nodes after all service nodes. A Callback contract is also Out of Scope in this example.","For an Operation Contract node , Scope in this example includes all operation contracts defined for the service contract. For a WCF Workflow Service node, Scope includes all Receive activities defined for the service contract.","Navigation\u2014Double Click Behavior","A familiar, but not necessarily required, mechanisms for selecting items in a GUI is double clicking on them. In this example, selecting  a node by double clicking has the following results. For a Project node, collapse\/expand the project node. For a Service node , go to the service implementation class in the code; for a WCF Workflow service, go to the first Receive activity.","For an Endpoint node , if the endpoint was explicitly set, go to the related endpoint section in the configuration file. If the endpoint was implicitly set, a Tooltip of the node shows where the endpoint info is derived from, e.g., when the host will provide an endpoint for each service contract that the service has implemented and for each protocol enabled in the host, and the protocol info is specified by <protocolMapping> configuration element or service host factory. Then go to the first line of <system.serviceModel> section in the configuration file.","For an Address node , if the endpoint was explicitly set, go to the address attribute in the configuration file . If the endpoint was implicitly set, a Tooltip of the node shows  where the endpoint address is derived from, e.g., when the endpoint address will be based on the IIS base address and the protocol address scheme. The base address will be appended with the contract name to determine the endpoint address. Then go to the first line of <system.serviceModel> section in the configuration file.","For a Binding node , if the endpoint was explicitly set, go to the binding attribute in the configuration file. If the endpoint was implicitly set, a Tooltip of the node shows  where the binding is from, e.g., it is specified by <protocolMapping> configuration element or service host factory. Then go to the first line of <system.serviceModel> section in the configuration file.","For a Service Contract node , if the service interface is defined in this current project, then go to the service interface definition in the code; for WCF Workflow Service, go to the first Receive activity. If the service interface is defined in another project and referred to this project, a Tooltip of the node shows this service contract is defined in a referenced assembly, and in this example the developer does not navigate directly there.","For an Operation Contract node , if the service interface is defined in this current project, then go to the operation contract definition in the code; for a WCF Workflow Service, go to the Receive activity. Note that in an HttpMessageService stack as well as the Http bindings, the [WebGet] and [WebInvoke] attributes on operations will map to the appropriate Http methods like Get, Put, Post, etc. In one approach a Service Explorer  visualizes all the Gets together, all the Posts together, etc. Developers  can also view a UriTemplate defined in the attribute. If the service interface is defined in another project and referred to this project, a Tooltip of the node shows this operation contract is defined in a referenced assembly, and this example the developer does not navigate directly there.","Navigation to Code\/XAML\/XML Configuration\u2014Context Menu","In some approaches, context menu navigation is provided as follows. For a Project node, context menu navigation is not applicable in this example, and there is no user navigation experience to code\/XAML\/XML Config for Project nodes.","For a Service node , a View Service Implementation Code context menu item  allows the developer to navigate to the same code as double clicking (described above). A View Service Contract Code context menu item  allows the developer to navigate to the same code as double clicking of Service Contract node. As for a View Configuration context menu item , if this service is explicitly specified in <services> section of the configuration file , navigation goes to the specific name attribute. If this service isn't explicitly specified in the configuration file, the view  goes to the first line of <system.serviceModel> section in the configuration file.","For an Endpoint node , an Address node , or a Binding Node , a View Configuration context menu item  allows the developer  to navigate to the same configuration location as double clicking.","For a Service Contract node , a View Service Contract Code context menu item  allows the developer to navigate to the same code as double clicking. A View Service Implementation Code context menu item  allows the developer to navigate to the same code as double clicking. As for a View Configuration context menu item , for the endpoint explicitly set, go to the related endpoint contract attribute in the configuration file , and for the endpoint implicitly set, go to the first line of <system.serviceModel> section in the configuration file .","For an Operation Contract node , a View Operation Contract Code context menu item  allows the developer to navigate to the same code as double clicking. A View Operation Implementation Code context menu item  allows the developer to navigate to the operation implementation class in the code.","Navigate to WCF Tools\u2014Context Menu","In some approaches, context menu tooling entry points to run  tools  are provided as follows.","For a Project Node, and WCF Configuration for all services in the project, a \u201cConfigure with Service Configuration Editor\u201d Tooling Entry Point launches SvcConfigEditor to configure WCF service. For tracing, an \u201cEnable Tracing\u201d entry point enables logging trace, and a \u201cView Trace Log\u201d entry point launches Service Trace Viewer to view the log file. For hosting, a \u201cView Host Server Settings\u201d entry point and a WCF Service Application will navigate to the Properties tab to view hoster info, and one can choose among ASP.NET Development Server, IIS Express, local IIS, AppFabric, Dev Fabric, or self-host. A WCF Service Library will navigate to the host section in the configuration file. For testing, and a \u201cTest WCF Services\u201d entry point, if the project contains only one service, instructions  will launch WcfTestClient or web-based HTTP Test Client according to the service type: WCF Core\/WF service or WCF WEB API service. If the project contains multiple services, the service explorer  will list all the available services so the developer can choose one to test, and launch WcfTestClient or web-based HTTP Test Client according to the service type: WCF Core\/WF service or WCF Web API service. For publishing, a \u201cPublishing . . . \u201d entry point and a \u201cPackage\/Publishing Settings\u201d entry point will behave as in Microsoft\u00ae Solution Explorer (mark of Microsoft Corporation). For unit testing, a \u201cCreate Unit Test . . . \u201d entry point will create a unit test for all services in the current project. For adding a new service, \u201cAdd\u2192New Item . . . \u201d and \u201cAdd\u2192Existing Item . . . \u201d entry points will behave as in Solution Explorer.","For an Endpoint Node , and WCF Configuration for this endpoint, a \u201cConfigure with Service Configuration Editor\u201d entry point provides help with viewing and configuration tasks such as security, performance, enabling debug, enabling metadata, etc. An \u201cAdd a New Endpoint\u201d entry point will let a developer configure values to add a new endpoint. For testing, a \u201cTest WCF Service\u201d entry point will launch WcfTestClient if the service type is WCF Core or WF services, and launch web-based HTTP Test Client if the service type is WCF Web API service or HttpMessageService.","User Experience: Updating Behavior of WCF Service Explorer","In some approaches, a \u201cService Explorer\u201d tab will be updated to reflect the latest changes as follows. As to changes on services in C#\/VB code\/XAML code\/project Configuration file, the changes will be reflected on WCF Service Explorer all at once without saving the file. As to adding or removing the service related C#\/VB\/XAML\/project Configuration file, the changes will be reflected on WCF Service Explorer all at once without saving the file. As to changes for <protocolMapping> element in machine.config, the changes will be reflected on WCF Service Explorer after closing the IDE and re-opening the IDE next time. As to adding a new service item to the project, the changes will be reflected on WCF Service Explorer all at once without saving the file. As to pressing a \u201cRefresh\u201d icon or other refresh gesture, the changes will be reflected on WCF Service Explorer after pressing the button. This provides a safeguard to cover corner cases. As to switching back to \u201cWCF Service Explorer\u201d from \u201cSolution Explorer\u201d or other views, the changes will be reflected on WCF Service Explorer after it becomes the active view.","As for relationships among WCF concepts, some approaches organize a service explorer with three major layers: project, services and endpoints. At the project level, a developer can view all services in the project . At the service level, these explorers treat \u201cService\u201d as a center to organize all related WCF concepts as a whole, e.g., they enumerate all available endpoints under the service node . At the endpoint Level, a developer can view the endpoint as whole to see the how, what and where info the service uses to communicate with world outside the service. For instance, the developer can view  address, binding and contract info of this endpoint. Under Service Contract, these explorers enumerate all operation contracts.","With regard to navigation, some service explorers provide developers with the following functionality. As to navigation from the Service Explorer to code for specific UI component in the Explorer (View Code ), one can go to: service implementation type, service operation implementation in code, service contract definition in code, operation contract in code, operation parameter type definition, contract behavior attribute in code, operation behavior attribute in code. In some approaches, one can navigate from the Service Explorer to a WF designer if the service type is WF service (View  Designer). As for navigation from the Service Explorer to configuration  for specific UI component in the Explorer (View  Configuration), one can go to: service configuration or indicate if it is using default config, endpoint configuration or view an indication if it is a default endpoint, binding configuration, binding element within a custom binding configuration, service behavior attribute or config if defined in local config file, or view an indication if it is inherited, endpoint behavior configuration if defined in local config file, or indicate if it is inherited. In some, one can navigate back to the Service Explorer, e.g., one approach will show the Service Explorer for the whole service with the specific navigated component highlighted, so that customers can always have a full view of the service concept. With regard to an App Model, in some approaches one can navigate from an App Model designer to the Service Explorer, and from the Service Explorer back to the App Model designer.","Some approaches are designed with particular attention to the possibility that a WCF Service Explorer will support all kinds of WCF flavors. Each WCF flavor may involve a different UI tree hierarchy, and call for different WCF tools to be exposed. Some approaches thus promote an extensible Service Explorer.","With regard to node structure, some approaches proceed as follows. To separate a logic layer and a presentation layer, a Node class is defined. The Node class has a \u201cSubNodes\u201d property, so several Node class instances can be used when constructing a logic tree, which is the logic layer of the final tree view. One Node class instance defines \u201cName\u201d, \u201cIcon\u201d, \u201cIsDefaultExpanded\u201d, \u201cMouseDoubleClickCommand\u201d, \u201cContextMenus\u201d and some other properties of the tree node. Anything updated in the logic layer will immediately show in the UI tree view layout.","For different kinds of nodes, different classes that inherit from Node class are defined. For example, a defined ProjectNode class inherits from Node class. In the ProjectNode, one can customize the node icon and add new context menus for the node. As for CoreServiceNode and WFServiceNode, they have different MouseDoubleClickCommand, so they can inherit from the same ServiceNode and override the MouseDoubleClickCommand themselves. One can add more kinds of nodes, and the tree structure can be extended.","More specifically, some approaches use the following classes. A Node Abstract Class has Properties: ContextMenus, Icon, IsDefaultExpanded, MouseDoubleClick, Name, and SubNodes, has a Method Node, and may have NestedTypes. A SolutionNode Class inherits from Node, has a Field solution, has Properties Icon and Name, and has a Method Solution Node. A ProjectNode Class inherits from Node, has a Field project, has Properties ContextMenus, Icon and Name, and has Methods EditWithConfigEditor and ProjectNode. A ServiceNode Class inherits from Node, has a Field name, has Properties Icon and Name, and has a Method ServiceNode. An EndpointNode Class inherits from Node, has Properties Icon and Name, and has a Method EndpointNode. An AddressNode Class inherits from Node, has a Field address, has Properties Icon and Name, and has a Method AddressNode. A BindingNode Class inherits from Node, has a Field binding, has Properties Icon and Name, and has a Method BindingNode. A ContractNode Class inherits from Node, has a Field contract, has Properties IsDefaultExpanded, Icon and Name, and has a Method ContractNode. An OperationNode Class inherits from Node, has a Field operation, has Properties Icon and Name, and has a Method OperationNode. A WFServiceNode Class inherits from ServiceNode, has a Field activity, has a Property MouseDoubleClick, and has Methods MouseDoubleClick and WFServiceNode. A CoreServiceNode Class inherits from ServiceNode, has a Field codeElement, has a Property MouseDoubleClick, and has Methods MouseDoubleClick and CoreServiceNode.","Some approaches define service managers, such as a Core Service Manager, a WF Service Manager, and perhaps others. Each service manager takes responsibility to calculate and maintain one kind of service. So for each project in a solution, each service manager calculates their services and adds them to ProjectNode. When users edit something which leads to the service changed, it is up to the service manager to listen to code changed event and update  the tree view. The service manager can directly update the logic layer tree, because everything updated in the logic layer will show in the UI tree view directly. In such an architecture, one can readily extend the set of services, using inheritance from a ServiceManager class. Different service manager flavors may be used, e.g., so that opening any Http-based service (no matter which underlying service host supports it) gives the developer an Http-specific experience.","To calculate a final service tree, one calculates  a candidate service tree  from a code model and a candidate service tree  from a config file. One merges  these trees together. In the following square brackets ([node]) denotes a code model service tree node, and angle brackets (<node>) denotes to a config service tree node.","For example, in the course of the data flow shown in , a source file analyzer  may analyze a CodeModel to calculate a [service] tree such as",{"@attributes":{"id":"p-0170","num":"0169"},"tables":{"@attributes":{"id":"TABLE-US-00005","num":"00005"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"70pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"147pt","align":"left"}}],"thead":{"row":{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"+[service]"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"84pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"133pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"+[contract]"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"98pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"119pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"+[operation]"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}]}}]}}},"Similarly, in the course of the  data flow a config file analyzer  may analyze a Config to calculate a <service> tree such as",{"@attributes":{"id":"p-0172","num":"0171"},"tables":{"@attributes":{"id":"TABLE-US-00006","num":"00006"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"70pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"147pt","align":"left"}}],"thead":{"row":{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"+<service>"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"84pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"133pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"+<endpoint>"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"98pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"119pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"+<address>"]},{"entry":[{},"+<binding>"]},{"entry":[{},"+<contract>"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}]}}]}}},"The [service] tree and the <service> tree are then merged, in this example, to generate an output service tree as part of structure .","Calculate Candidate Service Tree from Code Model","Microsoft\u00ae Visual Studio\u00ae technology, for example, provides the code model for a project which contains all the code elements definition and relationship (marks of Microsoft Corporation). This code model is different from reflection. When users edit a code file without saving, the code model is updated, and one can get a code model from compiling error code. So the code model can get the design time code structure. Some approaches use this code model to calculate  the service tree. In the diagram above, the illustrative code model service tree has three layers: [service], [contract] and [operation]. To get the [service] list, one approach searches all the code elements in the code model, consistent with the following:",{"@attributes":{"id":"p-0176","num":"0175"},"tables":{"@attributes":{"id":"TABLE-US-00007","num":"00007"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"thead":{"row":{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"if (IsClass( ) && !IsAbstract( ))"},{"entry":"{"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"if (!InheritFromClientBase( ))"]},{"entry":[{},"{"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"189pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"if (HasServiceContractAttribute( )"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"175pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"\u2225 OneOfInheritedInterfacesHasServiceContractAttibute( ))"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"189pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"{"]},{"entry":[{},"}"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"}"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"}"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}]}}]}}},"If a [service] class has ServiceContractAttribute, it is a [contract] itself. Otherwise, any of the [service] class's interfaces that have ServiceContractAttribute are treated as being a [contract]. All the methods in [contract] which have OperationContractAttribute are [operation]. In some implementations, this processing can reuse code from a Config IntelliSense\u00ae feature or similar autocompletion technology (mark of Microsoft Corporation).","Calculate Candidate Service Tree from Config File","If a config file is not open, some approaches read the config text from the hard disk. If a config file is open, they get the config text from a textual editor. The textual editor will provide the design time text. So if users modify something in config without saving, one can also get the latest config text. In the diagram above, the illustrative config service tree has <service>, <endpoint>, <address>, <binding> and <contract> node. One can use the XPath to get these values. For example, one can use the following XPath to get the endpoint element: \/configuration\/\/system.serviceModel\/services\/service[@name=\u2018{0}\u2019]\/endpoint","One gets the protocol mapping list from the config, for subsequent use. In addition to the config file in the current project, some approaches also calculate with the machine.config. The current project config will override the config element in the machine.config.","Merge Code Model Service Tree and Config Service Tree","Three cases are considered in this illustration of merger  functionality.","First case: If one [service] is mapping with <service>, which means a service has config definition, one uses the config service tree as the final tree. For each <contract>, the merger will find the corresponding [contract]. If [contract] is found, the merger will use its [operation] list. If there is no [contract] corresponding to the <contract>, which means the <contract> is wrongly defined, no operations will show. In the example, this results in final tree:",{"@attributes":{"id":"p-0184","num":"0183"},"tables":{"@attributes":{"id":"TABLE-US-00008","num":"00008"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"49pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"168pt","align":"left"}}],"thead":{"row":{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"+<service>"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"63pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"154pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"+<endpoint>"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"77pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"140pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"+<address>"]},{"entry":[{},"+<binding>"]},{"entry":[{},"+<contract> <\u2212> [contract]"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"91pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"126pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"+[operation]"]},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}}]}}]}}},"Second case: If a [service] has no <service> mapping to it, which means the service is using config simplified feature, for each binding type in protocol mappings, and for each [contract], an endpoint is added to the final service tree as following:",{"@attributes":{"id":"p-0186","num":"0185"},"tables":{"@attributes":{"id":"TABLE-US-00009","num":"00009"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"35pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"182pt","align":"left"}}],"thead":{"row":{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"+[service]"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"49pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"168pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"+endpoint"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"63pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"154pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"+empty address (e.g., filler node 238)"]},{"entry":[{},"+bindings from protocol mapping"]},{"entry":[{},"+[contract]"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"77pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"140pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"+[operation]"]},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}}]}}]}}},"Third case: If a <service> has no [service] mapping to it, it may be that the service is defined in reference assemblies or that users have defined something wrong. Accordingly, the service merger  does not provide a service tree in this case.","Update Service Tree","Some approaches listen to the following events and recalculate the service tree when the events are triggered.",{"@attributes":{"id":"p-0190","num":"0189"},"tables":{"@attributes":{"id":"TABLE-US-00010","num":"00010"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"77pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"140pt","align":"left"}}],"thead":{"row":[{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}},{"entry":["Event","When the event happens"]},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}}]},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["ProjectsChanged","adding\/removing a new WCF project"]},{"entry":["ProjectItemsChanged","adding\/removing a C#\/VB file"]},{"entry":["RefrencesChanged","adding\/removing a new reference assembly"]},{"entry":["CodeModelChanged","editing in C#\/VB code"]},{"entry":["XmlModelChange","editing in config"]},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}}]}}}}},"In some approaches, every time when the above events happen, the whole tree view is recalculated. All the calculating is done in a new thread, so the UI won't be blocked. One approach saves the CodeModel information to a cached code element structure, and when CodeModelChanged happens, updates that structure accordingly.","One architectural approach uses Class, Interface, Function, and Attribute categories. Class inherits from Class. Interface inherits from Class and from Interface. Class, Interface, and Function each have Attribute. Class and Interface each have Function. Assume that in this architecture, one would construct a bi-directional mapping for the code elements. When adding or deleting an Attribute, notification would go to all its parents (in Class, Interface and Function). When adding or deleting a Function, notification would go to all its parents (in Class and Interface) and its children (in Attribute). When adding or deleting an Interface, notification would go to all the Classes and Interfaces who inherit from it, all the Interfaces from whom it inherits, and all its children (in Function, Attribute). When adding or deleting a Class, notification would go to all the Classes who inherit from it, all the Classes and Interfaces from whom it inherits and all its children (in Function, Attribute). However, other approaches may also be considered.","WF Service Manager","For WF Service, some approaches also calculate two service trees. One is from the WF xamlx or xaml file (WF constructed by C#\/VB code are not necessarily supported), the other is from the config file. Reading a service tree from config file and merging the two service trees can be done as described above for the Core Service Manager, and thus can share the same code. The following discussion addresses how to analyze workflow service from a workflow file .","A Workflow Runtime will provide an API to get the contract description of a service workflow instance: WorkflowSerivce.GetContractDescription( ). In addition, to implement an E2E scenario, location information and\/or mapping of a typical operation to receive activity are called for, to aid analysis of the workflow. An approach to finding a service and its operation is to treat one receive activity as an operation, find all Receive activities in the workflow, and group all receive activities with the same contract name. Listed below are the steps to do this analysis:","1. WorkflowDesigner.Load","2. Get ModelTreeManager from WorkflowDesigner.","3. ModelTreeManager.Find( ) Find all model item whose underlying type is Receive activity or inherits from Receive Activity.","4. For each Activity, from ObjectToSourceLocation mapping gets and cache its source location.","5. For each ModelItem, read its OperationName and Contract property, group the operations with the same contract.","6. When user  clicks to select an operation, navigate to the receive activity with the specified Source Location, which is implemented by ModelSearchService.","One can also call WorkflowService.GetContractDescription( ) to do a double check.","Service Explorer Communication with Workflow Designer","Service Explorer and Workflow designer are different Microsoft\u00ae Visual Studio\u00ae packages, running in different sandboxes (marks of Microsoft Corporation). Assume there is no direct way to access the designer instance from other packages. To allow communication one approach exposes an object for document opened by workflow designer to a Visual Studio\u00ae automation model. More specifically, Workflow Editor implements IVsExtensibleObject and returns the workflow designer instance in IVsExtensibleObject.GetGataObject( ). Alternately, one may return a Designer Proxy if returning the whole designer is too heavy to cross domain. By implementing the interface on the workflow side, then on the service exploration side, one can get the object returned in IVsExtensibleObject.GetGataObject( ) by DTE.Document.Window.Object, and use this instance to access the workflow designer instance in Workflow Visual Studio\u00ae Package. Thus, one can listen to the designer change, get the services from this already existed designer instance (still loading and getting the designer instance for unopened documents), and do navigation on the designer.","Moving to the topic of potential areas of impact, such as stress, some approaches create a new service analyzer every time that functionality is invoked, such that memory usage won't increase by multiple times of regeneration. As for localization, instructions can be placed in a dll assembly so that all the strings to be localized are put in the assembly resources. As for setup, it can be the same as Microsoft.VisualStudio.ServiceModel.dll setup.","Demo Example of a WF Service Explorer","As an example (a demo, to the extent one can demo code in a document), suppose one has a Workflow, and this workflow will expose SOAP standard services. To avoid confusion, the demo workflow is simple.","The workflow file looks like this in Xaml (a kind of xml) View:",{"@attributes":{"id":"p-0202","num":"0201"},"tables":{"@attributes":{"id":"TABLE-US-00011","num":"00011"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0","pgwide":"1"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"259pt","align":"left"}},"thead":{"row":{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":"<WorkflowService ConfigurationName=\u201cService1\u201d Name=\u201cService1\u201d"}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"245pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"xmlns:sco=\u201cclr-"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"259pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":"namespace:System.Collections.ObjectModel;assembly=mscorlib\u201d"}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"245pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"xmlns=\u201chttp:\/\/schemas.microsoft.com\/netfx\/2009\/xaml\/servicemodel\u201d"]},{"entry":[{},"xmlns:contract=\u201chttp:\/\/tempuri.org\/\u201d"]},{"entry":[{},"xmlns:sad=\u201cclr-"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"259pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":"namespace:System.Activities.Debugger;assembly=System.Activities\u201d"}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"245pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"xmlns:p=\u201chttp:\/\/schemas.microsoft.com\/netfx\/2009\/xaml\/activities\u201d"]},{"entry":[{},"xmlns:x=\u201chttp:\/\/schemas.microsoft.com\/winfx\/2006\/xaml\u201d>"]},{"entry":[{},"<p:TextExpression.Namespaces>"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"231pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"<sco:Collection x:TypeArguments=\u201cx:String\u201d x:Name=\u201cReferenceID1\u201d>"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"217pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"<x:String>System<\/x:String>"]},{"entry":[{},"<x:String>System.Collections.Generic<\/x:String>"]},{"entry":[{},"<x:String>System.Data<\/x:String>"]},{"entry":[{},"<x:String>System.Linq<\/x:String>"]},{"entry":[{},"<x:String>System.Text<\/x:String>"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"231pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"<\/sco:Collection>"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"245pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"<\/p:TextExpression.Namespaces>"]},{"entry":[{},"<p:TextExpression.References>"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"231pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"<sco:Collection x:TypeArguments=\u201cp:AssemblyReference\u201d"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"259pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":"x:Name=\u201cReferenceID2\u201d>"}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"217pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"<p:AssemblyReference>mscorlib<\/p:AssemblyReference>"]},{"entry":[{},"<p:AssemblyReference>System<\/p:AssemblyReference>"]},{"entry":[{},"<p:AssemblyReference>System.Core<\/p:AssemblyReference>"]},{"entry":[{},"<p:AssemblyReference>System.Data<\/p:AssemblyReference>"]},{"entry":[{},"<p:AssemblyReference>System.ServiceModel<\/p:AssemblyReference>"]},{"entry":[{},"<p:AssemblyReference>System.Xml<\/p:AssemblyReference>"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"231pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"<\/sco:Collection>"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"245pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"<\/p:TextExpression.References>"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"259pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"\u2003<p:Sequence DisplayName=\u201cSequential Service\u201d"},{"entry":"sad:XamlDebuggerXmlReader.FileName=\u201cC:\\Users\\btslabs\\Documents\\Visual"},{"entry":"Studio Dev11\\Projects\\WorkflowService2\\WorkflowService2\\Service1.xamlx\u201d"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"217pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"\u2003p:TextExpression.Namespaces=\u201c{x:Reference ReferenceID1}\u201d"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"259pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":"p:TextExpression.References=\u201c{x:Reference ReferenceID2}\u201d>"}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"245pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"\u2003<p:Sequence.Variables>"]},{"entry":[{},"\u2003<p:Variable x:TypeArguments=\u201cCorrelationHandle\u201d Name=\u201chandle\u201d \/>"]},{"entry":[{},"\u2003<p:Variable x:TypeArguments=\u201cx:Int32\u201d Name=\u201cdata\u201d \/>"]},{"entry":[{},"<\/p:Sequence.Variables>"]},{"entry":[{},"<Receive x:Name=\u201c ReferenceID0\u201d DisplayName=\u201cReceiveRequest\u201d"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"259pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"OperationName=\u201cGetData\u201d ServiceContractName=\u201ccontract:IService\u201d"},{"entry":"CanCreateInstance=\u201cTrue\u201d>"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"245pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"\u2003<Receive.CorrelationInitializers>"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"231pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"<RequestReplyCorrelationInitializer CorrelationHandle=\u201c[handle]\u201d \/>"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"245pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"\u2003<\/Receive.CorrelationInitializers>"]},{"entry":[{},"\u2003<ReceiveMessageContent>"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"231pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"<p:OutArgument x:TypeArguments=\u201cx:Int32\u201d>[data]<\/p:OutArgument>"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"245pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"\u2003<\/ReceiveMessageContent>"]},{"entry":[{},"<\/Receive>"]},{"entry":[{},"<SendReply Request=\u201c{x:Reference Name= ReferenceID0}\u201d"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"259pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":"DisplayName=\u201cSendResponse\u201d >"}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"245pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"\u2003<SendMessageContent>"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"231pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"<p:InArgument"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"259pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":"x:TypeArguments=\u201cx:String\u201d>[data.ToString( )]<\/p:InArgument>"}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"245pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"\u2003<\/SendMessageContent>"]},{"entry":[{},"<\/SendReply>"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"259pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":"\u2003<\/p:Sequence>"}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"231pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"\u2003<\/WorkflowService>"]},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}}]}}]}}},"In the foregoing XAML, parts which are related to services are shown in bold.","Assume the workflow has a designer view in a Visual Studio\u00ae environment or another IDE , so users can avoid editing a raw xaml file to compose a workflow. Some configuration information, such as the service address and how to communicate with the service, is put in the config file:",{"@attributes":{"id":"p-0205","num":"0204"},"tables":{"@attributes":{"id":"TABLE-US-00012","num":"00012"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"thead":{"row":{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"<?xml version=\u201c1.0\u201d encoding=\u201cutf-8\u201d ?>"},{"entry":"\u2003<configuration>"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"<system.web>"]},{"entry":[{},"\u2003<compilation debug=\u201ctrue\u201d strict=\u201cfalse\u201d explicit=\u201ctrue\u201d"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":"\u2003targetFramework=\u201c4.5\u201d >"}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"189pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"<assemblies>"]},{"entry":[{},"\u2003<add assembly=\u201cSystem.Activities.Statements,"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"\u2003Version=4.0.0.0, Culture=neutral,"},{"entry":"\u2003PublicKeyToken=31bf3856ad364e35\u201d>"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"189pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"<\/assemblies>"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"\u2003<\/compilation>"]},{"entry":[{},"<\/system.web>"]},{"entry":[{},"<system.serviceModel>"]},{"entry":[{},"\u2003<behaviors>"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"189pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"<serviceBehaviors>"]},{"entry":[{},"\u2003<behavior>"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"175pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"<!-- To avoid disclosing metadata information, set"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"\u2003the value below to false and remove the metadata endpoint above before"},{"entry":"\u2003deployment -->"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"175pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"<serviceMetadata httpGetEnabled=\u201ctrue\u201d\/>"]},{"entry":[{},"<!-- To receive exception details in faults for"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"\u2003debugging purposes, set the value below to true. Set to false before"},{"entry":"\u2003deployment to avoid disclosing exception information -->"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"175pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"<serviceDebug includeExceptionDetailInFaults=\u201cfalse\u201d\/>"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"189pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"\u2003<\/behavior>"]},{"entry":[{},"<\/serviceBehaviors>"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"\u2003<\/behaviors>"]},{"entry":[{},"\u2003<serviceHostingEnvironment aspNetCompatibilityEnabled=\u201ctrue\u201d"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"189pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"\u2003multipleSiteBindingsEnabled=\u201ctrue\u201d \/>"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"<\/system.serviceModel>"]},{"entry":[{},"<system.webServer>"]},{"entry":[{},"\u2003<modules runAllManagedModulesForAllRequests=\u201ctrue\u201d\/>"]},{"entry":[{},"<\/system.webServer>"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"\u2003<\/configuration>"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}]}}]}}},"Now suppose a user  wants a general overview or conceptual view of the workflow. This is provided by the WF Service explorer. In this example, and using a graphics-neutral representation not limited to particular fonts, icons, window widgets and such, the WF service explorer will look like the following:",{"@attributes":{"id":"p-0207","num":"0206"},"tables":{"@attributes":{"id":"TABLE-US-00013","num":"00013"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"49pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"168pt","align":"left"}}],"thead":{"row":{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"- WorkflowService6"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"63pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"154pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"- Service1"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"77pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"140pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"- endpoint"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"105pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"112pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"<hostAddress>\/"]},{"entry":[{},"basicHttpBinding"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"91pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"126pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"- IService"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"119pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"98pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"GetData"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"77pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"140pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"- endpoint"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"105pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"112pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"<hostAddress>\/"]},{"entry":[{},"netMsmqBinding"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"91pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"126pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"- IService"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"119pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"98pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"GetData"]},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}}]}}]}}},"The user  can click any element on the service explorer view, and it will lead to the corresponding part in the Workflow designer or the config file. For example, a click to select  GetData will open the workflow file and highlight the corresponding receive activity.","WCF Concept Summary","The following glossary may be helpful, with the understanding that the applicability of express or implied definitions in this glossary to a given embodiment is not automatic but depends rather on the understanding of one of ordinary skill in the art.","Contracts Terminology","Service Contract: A grouping of Operation Contracts exposed by a service. Generally defined by decorating a Common Language Runtime (CLR) interface or type with the ServiceContractAttribute.","Operation Contract: A definition of a service operation that specifies the message exchange pattern and the structure of the messages. Message can be defined implicitly using normal CLR method parameters or explicitly using a Message Contract.","Message Contract: An explicit message definition that specifies the headers and body for the message.","Data Contract: Defines for a CLR type what data should be exchanged (serialized in messages).","Message Exchange Pattern: Operation Contracts can specify either request-reply or one-way messaging.","Callback Contract: A ServiceContract to be implemented by the client in a duplex message exchange. Generally specified using the CallbackContract property on ServiceContractAttribute.","Action: A Uniform Resource Identifier (URI) that indicates the action to perform for a request message.","Reply Action: A Uri that indicates the action to perform for the reply message.","Protection Level: Operation Contracts and Service Contracts may specify that messages are to be signed or signed and encrypted.","Async Pattern: Indicates if an Operation Contract is implemented asynchronously.","Session Mode: Service Contracts may specify that the contract allows, does not allow or requires session support.","Is Initiating: Indicates that an operation can initiate a session.","Is Terminating: Indicates that an operation terminates a session.","Contract Behavior: Provides a local behavior scoped to a Service Contract.","Operation Behavior: Provides a local behavior scoped to an Operation Contract.","Implementation Terminology","Service Implementation Class: CLR class that implements the service functionality for one or more Service Contracts.","Concurrency Mode: Indicates whether an instance of a service can handle one thread (Single) or multiple threads that execute concurrently (Multiple), and if single-threaded, whether reentrancy is supported (Reentrant).","Instance Context Mode: Indicates whether the host creates a new service instance only once (Single), one per operation call (PerCall) or one per session (PerSession).","Configuration Terminology","Service Configuration: A service has an associated configuration that defines the local service behaviors (e.g., metadata publishing, enable debugging, throttles, and so on) and the set of configured endpoints for the service.","Service Endpoint: Exposes a Service Contract for a given service at a specific address using a specific binding to the wire.","Binding: Defines the transport, encoding and protocols to be used to exchange messages.","Session: Correlates a group of messages to a Service Endpoint into a conversation with associated state.","Standard Endpoint: A Service Endpoint that comes prepackaged to satisfy a specific scenario (e.g., a Discovery endpoint, an MEX endpoint, etc.).","System Endpoint: A Service Endpoint which exposes a contract that is not directly implemented by the service implementation type, but instead is provided by the system infrastructure (MEX and Discovery endpoints are also system endpoints).","Service Metadata: Various XML documents that describe the endpoints and contracts exposed by the service so a service client can be generated by tooling.","Discovery: Support for responding to find queries for services that match specified criteria.","Announcements: Notifications sent by a service to indicate service availability.","Service Throttles: Limits on the number of concurrent calls that a service can handle (MaxConcurrentCalls), number of instances that execute at one time (MaxConcurrentInstances), and sessions that the service can accept (MaxConcurrentSessions).","Credentials: Provide identity for a service or client.","Endpoint Behavior: Provides a local behavior scoped to an endpoint.","Service Behavior: Provides a local behavior scoped to a service.","Hosting Terminology","Service Host: Provides a runtime environment for a service. Some available development hosts include Internet Information Services (IIS), IIS Express, ASP.NET Development Server, WCF Service Host, and other custom hosts.","Although particular embodiments are expressly illustrated and described herein as processes, as configured media, or as systems, it will be appreciated that discussion of one type of embodiment also generally extends to other embodiment types. For instance, the descriptions of processes in connection with  also help describe configured media, and help describe the operation of systems and manufactures like those discussed in connection with other Figures. It does not follow that limitations from one embodiment are necessarily read into another. In particular, processes are not necessarily limited to the data structures and arrangements presented while discussing systems or manufactures such as configured memories.","Not every item shown in the Figures need be present in every embodiment. Conversely, an embodiment may contain item(s) not shown expressly in the Figures. Although some possibilities are illustrated here in text and drawings by specific examples, embodiments may depart from these examples. For instance, specific features of an example may be omitted, renamed, grouped differently, repeated, instantiated in hardware and\/or software differently, or be a mix of features appearing in two or more of the examples. Functionality shown at one location may also be provided at a different location in some embodiments.","Reference has been made to the figures throughout by reference numerals. Any apparent inconsistencies in the phrasing associated with a given reference numeral, in the figures or in the text, should be understood as simply broadening the scope of what is referenced by that numeral.","As used herein, terms such as \u201ca\u201d and \u201cthe\u201d are inclusive of one or more of the indicated item or step. In particular, in the claims a reference to an item generally means at least one such item is present and a reference to a step means at least one instance of the step is performed.","Headings are for convenience only; information on a given topic may be found outside the section whose heading indicates that topic.","All claims and the abstract, as filed, are part of the specification.","While exemplary embodiments have been shown in the drawings and described above, it will be apparent to those of ordinary skill in the art that numerous modifications can be made without departing from the principles and concepts set forth in the claims, and that such modifications need not encompass an entire abstract concept. Although the subject matter is described in language specific to structural features and\/or procedural acts, it is to be understood that the subject matter defined in the appended claims is not necessarily limited to the specific features or acts described above the claims. It is not necessary for every means or aspect identified in a given definition or example to be present or to be utilized in every embodiment. Rather, the specific features and acts described are disclosed as examples for consideration when implementing the claims.","All changes which fall short of enveloping an entire abstract idea but come within the meaning and range of equivalency of the claims are to be embraced within their scope to the full extent permitted by law."],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"DESCRIPTION OF THE DRAWINGS","p":["A more particular description will be given with reference to the attached drawings. These drawings only illustrate selected aspects and thus do not fully determine coverage or scope.",{"@attributes":{"id":"p-0023","num":"0022"},"figref":"FIG. 1"},{"@attributes":{"id":"p-0024","num":"0023"},"figref":"FIG. 2"},{"@attributes":{"id":"p-0025","num":"0024"},"figref":"FIG. 3"},{"@attributes":{"id":"p-0026","num":"0025"},"figref":"FIG. 4"}]},"DETDESC":[{},{}]}
