---
title: Hybrid mobile interactions for native apps and web apps
abstract: There is disclosed a system, including apparatus, methods and computer programs, for running native software applications (apps) and HTML5 web-based apps on a computing device, particularly a mobile computing device, in a multitasking mode of operation. In one embodiment, touch screen displays having one or more browsers are adapted to run one or more HTML5 apps, and receive input from hand gestures. One or more software modules execute on the operating system and are responsive to a dragging gesture applied to an HTML5 app displayed in a full screen mode, to subdivide the screen display and display the HTML5 app in one of the subdivided areas and display icons used to launch a second HTML5 app in a different one of the subdivided areas. The second HTML5 app is run concurrently with the first HTML5 app in order to provide multi-tasking between the first and second apps.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09600455&OS=09600455&RS=09600455
owner: Intel Corporation
number: 09600455
owner_city: Santa Clara
owner_country: US
publication_date: 20111228
---

{"@attributes":{"id":"description"},"BRFSUM":[{},{}],"heading":["PRIORITY APPLICATION","TECHNICAL FIELD","BACKGROUND","DETAILED DESCRIPTION"],"p":["This application is a U.S. National Stage Application under 35 U.S.C. 371 from International Application No. PCT\/US2011\/067642, filed Dec. 28, 2011, which is hereby incorporated by reference in its entirety.","The present subject matter relates generally to the field of computers, and more particularly to browser-based applications and user interface displays.","HTML5 is a language for structuring and presenting content for the World Wide Web. It is the fifth revision of the HTML standard and as of November 2011 is still under development. Its core aims have been to improve the language with support for the latest multimedia while keeping it easily readable by humans and consistently understood by computers and devices (web browsers, parsers, etc.). HTML5 is intended to subsume not only HTML 4, but XHTML1 and DOM2 HTML (particularly JavaScript\/EMCAScript) specifications as well. Many features of HTML5 are provided to enable its use on low-powered devices such as smart phones and tablets. HTML5 supports a variety of techniques to enable dynamic content presentations, including multimedia display elements (such as video, audio, and graphical animation), application caching, background threading, and integrated scripting support.","HTML5 is a disruptive technology and a set of standards. One of its many advantages is allowing apps to run inside a browser, and breaking the model of apps having to be native code and distributed through an app store, or manually installed to a device by a user. This is exceptionally attractive to developers who want to develop apps and sell them without having to share their revenues with app distributors or platform manufacturers. In addition, with HTML5, web apps running inside the browser provide an opportunity to support multitasking and to break from the fragmented world of apps under different operating systems and platforms. This provides an incentive for developers to move to HTML5 and away from native apps, since multitasking has been a leading request of users of mobile platforms. In addition, developers only have to develop one app in HTML5, and it will run on all platforms that support HTML5.","Popular and widely used home screens on mobile devices, such as mobile phones or tablet computers, contain graphical icons that provide links to native apps downloaded and installed on the devices. Users may launch the native apps by selection of the links, for example using a pointing device or touch screen. One example of such an interface and mobile device, illustrated in , is intuitive and easy to operate, and has become the de-facto standard for mobile interactions. In the interface of , provided by the mobile device  of , native apps are represented by icons (e.g., icon ), typically rectangular in shape, displayed on the home (or other) screen  of the user interface  of mobile device . When a user selects a native app , for example by pressing on the icon  associated therewith, the native app  launches, is loaded in whole or in part in the memory , and begins execution in a full screen mode, typically occupying the entire screen of the mobile device . Native apps may be formed of software modules including one or more computer programs.","Further referring to , the term \u201cnative app,\u201d as used herein, refers to an app that is loaded, in whole or in part, in memory , and executes, at least in part, using instructions and capabilities of an operating system . The native app  may be specifically designed to run within the device's operating system  and machine firmware environment, and may need to be adapted for operation on different hardware or operating system types. Operating system  includes a plurality of software modules and is resident on and executing on a processing system . Processing system , in one example embodiment, includes a processing device capable of executing computer software, such as a central processing unit (CPU), of the mobile device .","Native app , in one model of distribution illustrated in , is downloaded to the mobile device  responsive to interaction with an interface such as app store , operating under the control of a device-accessible server . An app storage facility such as app storage  provides an installable copy of native app , and may be accessed by the user responsive to interactions with the app store  and the server . For example, the app store  may display a catalog of available apps for user selection, and may collect a fee from a user to license and download a copy of the native app .","As described herein, there is provided a system, including methods, apparatus, software, and user interfaces, for user interaction with apps. The system supports backward compatibility with the above-described native app interface scheme, while enabling users to take advantage of desirable new capabilities of web apps (for example, HTML5-standard compliant web apps, further referred to herein as \u201cHTML5 apps\u201d). A web app is typically coded in a browser-rendered language such as HTML combined with JavaScript, and is designed for a lightweight execution in a browser graphical user interface environment.","In one embodiment, user interactions with web apps are provided by a similar user interface as used for native apps. As illustrated in , non-HTML apps are represented by icon and HTML5 apps are represented by icon , and icons and are comingled and displayed on the home (or other) screen  of the user interface  of mobile device . In , HTML5 app icons are specially noted with the letter \u201ch\u201d; however, there is no requirement for the HTML5 apps to be so labeled or noted\u2014it is done here only for illustrative purposes. Thus, icons for HTML5 apps may be indistinguishable from icons for native apps.","As described further herein, the following techniques and system configurations provide for interactions with mobile apps, including native app and HTML5 app , accommodating for backward compatibility. Thus, a user may still use a familiar interface to interact with the native app , such as the familiar interface of , while enabling the user to see, use, interact with, and take advantage of HTML5 app . The following described techniques are also extendable to allow for multi-tasking among web apps, provided by the use of HTML5 apps because of concurrent execution and display of multiple web pages and apps provided within or in connection with the same instance of a browser runtime.","As illustrated in , native app is loaded in whole or in part in a memory , and executes, at least in part, using instructions and capabilities of an operating system  resident on and executing on a processing system , including a central processing unit (CPU), of the mobile device . HTML5 app operates within an HTML5 compliant browser  that in turn runs within operating system , as opposed to a native app executing directly on operating system .","According to one example embodiment, user interface control software is formed from one or more software modules and is operable on operating system , is part of the browser , and\/or is integral with the operating system, in order to perform the functionality described above and the other example alternate embodiments described thereafter. User interface control software accepts user control input from the user interface in any form, such as touch, pointing device, voice, gaze, or any other means, in order to perform the user input described above, and includes computer program code operable on the operating system  to control the display in order to effectuate the user interface display features and information exchange also described above and the ensuing description of alternate embodiments.","As illustrated in , when a user selects () (e.g., clicks or taps) a native app icon , the interactions are the same as described with respect to typical operation of a native app as described in reference to , in the sense that the corresponding native app launches () and occupies the entire display. However, when a user selects () an HTML5 app icon , one of two things may occur:","1. If the corresponding app is determined () as not being launched (e.g., is not presently in memory ), the browser  is launched and a new page is opened (). For example, the app URL is launched in the new page, whether the URL is pointing to a location on the local device or over the network; or","2. If the app is already running () in the browser , the browser is launched () and the page where the app is running is brought to the front. According to one example embodiment, it is possible for the app developer to override this behavior by including parameters such as \u201c<on exit=kill app>\u201d or \u201c<on launch=reload app>\u201d which will remove any previous instances from memory and restart the app.","As indicated above, with HTML5, an HTML5 app that runs inside a browser environment such as the browser  provides an opportunity to support multitasking. According to another example embodiment, including a method illustrated in , and user interface layouts illustrated , interactions with the user may be performed in the following manner:","1. A user selects () an HTML5 app icon (for example, to launch an online shopping web app).","2. The HTML5 app opens () in the browser .","3. The user then proceeds to view, use, and otherwise interact with the app (). For example, in an online shopping web app, this may include performing interaction with a product listing, such as a GPS device in an online shopping interface  as shown in .","4. The user is then interested () in viewing another app on the mobile device screen, such as to cross reference information or perform a comparison between information displays in two apps. In the online shopping web app example, the user may want to compare prices of the product using another retailer's app or website.","5. The user scrolls () to the edge (e.g., the top) of the browser  displaying HTML5 app . In a typical browser interaction, if the user drags the screen to the top of the browser  (with a dragging hand gesture or similar user interaction), the top of the browser such as the URL address bar may be shown, but nothing else is shown above the browser. In this embodiment, however, if the user keeps dragging past the top of the screen (), for example attempting to navigate past the URL address bar, a new second, screen area appears (), as shown in . On the bottom of the interface shown in  is the \u201ccurrent\u201d browser screen, the Retailer One web app ; however on the top of the interface, the user is presented () with a listing  of available HTML5 apps on the device, including icons , , . In one example embodiment, the icon of the currently displayed HTML5 app (the icon  corresponding to the displayed Retailer One web app ) could have an indication that it already is open or being displayed (for example, by shading the icon  grey).","6. The user may then select () one of the displayed app icons , , . This will launch () that HTML5 app into a new page, or an existing page if the app is already running. In one configuration, the new app will not occupy the entire screen, rather, the screen will be split () and the two apps will share the space with a visual indicator  separating them. This is illustrated in , with selected HTML5 app for Retailer Two  being displayed on the top portion of the screen; and the HTML5 app for Retailer One  being displayed on the bottom portion of the screen. The visual indicator  may be moved (), for example with a touch and drag motion, to allow more, or less, space for a particular application.","According to another embodiment, the system and method supports multiple splitting of the screen. In the case of mobile phones, the interface may not be usable due to screen size or screen resolution, so the browser may limit the number of screen splits. However, in cases where bigger screens and surfaces are available, such as a tablet, or if the smaller screen may be extended or projected into a bigger screen, the browser will support many of those presented in the active space. While the screen splits shown in  split the screen into two or more vertical sections, the screen may also be split horizontally. In some examples, the orientation of the split (e.g., vertical or horizontal) may depend on the device's orientation as determined by a position sensor in the device and may even change from vertical to horizontal (or vice versa) based on a change in device orientation.","In yet another example embodiment, one app contains the sub-screens. For example, this functionality may be used in shopping apps where the app can open many sites as child sub-apps inside the parent app and allow the user to browse the individual pages and information tabs from various retailers to compare delivery, shipping, reviews, and such. Thus, a single browser instance may be used to launch multiple windows of web apps. In an alternative embodiment, a first browser may provide one of the subdivided areas on the screen display to display a first web app, and a second browser may provide a different one of the subdivided areas on the screen display to display a second web app. Other combinations of multiple browser instances and browser windows may also be provided.","In yet another example embodiment, the HTML5 apps are enabled to interact with each other and exchange information, for example, copy and paste or even competitive comparison. In one example embodiment, this is supported by a user-controlled copy and paste or a drag and drop feature to provide the interaction between the split screens. For example, performing a drag and drop of text from one web app to another, may automatically activate a text search into the web app having the screen section receiving the drop or paste.","Accordingly, as described above, one browser configuration supports multiple pages running at the same time inside a single browser, while users may view the corresponding pages and web apps of the respective browser windows s concurrently. In other browser configurations, multiple browser instances may provide concurrent display of the corresponding pages and web apps of the respective browser instances concurrently. The corresponding pages and web apps also may be executed in the browser environment by concurrent execution within the browser or browsers.","Although several of the described embodiments were included with reference to the use of HTML5-based markup language standards, it will be understood that the present techniques may be implemented in connection with a variety of dynamic web app platforms and markup language standards. Therefore, the usage of the term \u201cHTML5 app\u201d is not necessarily intended to be limiting to the use of a published draft or standard labeled as \u201cHTML5\u201d by the World Wide Web Consortium (W3C).","As described herein, various methods or techniques, or certain aspects or portions thereof, may take the form of program code (i.e., instructions) embodied in tangible media, such as floppy diskettes, CD-ROMs, hard drives, or any other machine-readable storage medium wherein, when the program code is loaded into and executed by a machine, such as a computer, the machine becomes an apparatus for practicing the various techniques. In the case of program code execution on programmable computers, the computing device may include a processor, a storage medium readable by the processor (including volatile and non-volatile memory and\/or storage elements), at least one input device, and at least one output device. One or more programs that may implement or utilize the various techniques described herein may use an application programming interface (API), reusable controls, and the like. Such programs may be implemented in a high level procedural or object oriented programming language to communicate with a computer system. However, the program(s) may be implemented in assembly or machine language, if desired. In any case, the language may be a compiled or interpreted language, and combined with hardware implementations.",{"@attributes":{"id":"p-0038","num":"0037"},"figref":"FIG. 7","b":["700","708","700"]},{"@attributes":{"id":"p-0039","num":"0038"},"figref":"FIG. 7","b":["720","712","700","704","704","714","718","716","710","710","700","706","700","700"]},{"@attributes":{"id":"p-0040","num":"0039"},"figref":"FIG. 8","b":["800","380"]},"Example computer system  includes a processor  (e.g., a central processing unit (CPU), a graphics processing unit (GPU) or both), a main memory  and a static memory , which communicate with each other via an interconnect  (e.g., a bus). The computer system  may further include a video display unit , an alphanumeric input device  (e.g., a keyboard), and a user interface (UI) navigation device  (e.g., a mouse). In one embodiment, the video display unit , input device  and UI navigation device  are a touch screen display. The computer system  may additionally include a storage device  (e.g., a drive unit), a signal generation device  (e.g., a speaker), a network interface device  (which may include or operably communicate with one or more antennas , transceivers, or other wireless communications hardware), and one or more sensors (not shown), such as a global positioning system (GPS) sensor, compass, accelerometer, or other sensor.","The storage device  includes a machine-readable medium  on which is stored one or more sets of data structures and instructions  (e.g., software) embodying or utilized by any one or more of the methodologies or functions described herein. The instructions  may also reside, completely or at least partially, within the main memory , static memory , and\/or within the processor  during execution thereof by the computer system , with the main memory , static memory , and the processor  also constituting machine-readable media.","While the machine-readable medium  is illustrated in an example embodiment to be a single medium, the term \u201cmachine-readable medium\u201d may include a single medium or multiple media (e.g., a centralized or distributed database, and\/or associated caches and servers) that store the one or more instructions . The term \u201cmachine-readable medium\u201d shall also be taken to include any tangible medium that is capable of storing, encoding or carrying instructions for execution by the machine and that cause the machine to perform any one or more of the methodologies of the present disclosure or that is capable of storing, encoding or carrying data structures utilized by or associated with such instructions. The term \u201cmachine-readable medium\u201d shall accordingly be taken to include, but not be limited to, solid-state memories, and optical and magnetic media. Specific examples of machine-readable media include non-volatile memory, including, by way of example, semiconductor memory devices (e.g., Electrically Programmable Read-Only Memory (EPROM), Electrically Erasable Programmable Read-Only Memory (EEPROM)) and flash memory devices; magnetic disks such as internal hard disks and removable disks; magneto-optical disks; and CD-ROM and DVD-ROM disks.","The instructions  may further be transmitted or received over a communications network  using a transmission medium via the network interface device  utilizing any one of a number of well-known transfer protocols (e.g., HTTP). Examples of communication networks include a local area network(LAN), wide area network (WAN), the Internet, mobile telephone networks, Plain Old Telephone (POTS) networks, and wireless data networks (e.g., Wi-Fi, 3G, and 4G LTE\/LTE-A or WiMAX networks). The term \u201ctransmission medium\u201d shall be taken to include any intangible medium that is capable of storing, encoding, or carrying instructions for execution by the machine, and includes digital or analog communications signals or other intangible medium to facilitate communication of such software.","Other applicable network configurations may be included within the scope of the presently described communication networks. Although examples were provided with reference to a local area wireless network configuration and a wide area internet network connection, it will be understood that communications may also be facilitated using any number of personal area networks, LANs, and WANs, using any combination of wired or wireless transmission mediums.","The embodiments described above may be implemented in one or a combination of hardware, firmware, and software. Embodiments may also be implemented as instructions stored on a computer-readable storage device, which may be read and executed by at least one processor to perform the operations described herein. A computer-readable storage device may include any non-transitory mechanism for storing information in a form readable by a machine (e.g., a computer). For example, a computer-readable storage device may include read-only memory (ROM), random-access memory (RAM), magnetic disk storage media, optical storage media, flash-memory devices, and other storage devices and media.","It should be understood that the functional units or capabilities described in this specification may have been referred to or labeled as components or modules, in order to more particularly emphasize their implementation independence. For example, a component or module may be implemented as a hardware circuit comprising custom VLSI circuits or gate arrays, off-the-shelf semiconductors such as logic chips, transistors, or other discrete components. A component or module may also be implemented in programmable hardware devices such as field programmable gate arrays, programmable array logic, programmable logic devices, or the like. Components or modules may also be implemented in software for execution by various types of processors. An identified component or module of executable code may, for instance, comprise one or more physical or logical blocks of computer instructions, which may, for instance, be organized as an object, procedure, or function. Nevertheless, the executables of an identified component or module need not be physically located together, but may comprise disparate instructions stored in different locations which, when joined logically together, comprise the component or module and achieve the stated purpose for the component or module. For example, in the context of the present disclosure, a component or module configured to respond to user commands to subdivide a screen display may be either included within, or separate from, the computing system, operating system, browser, or web application implementing such functionality.","Indeed, a component or module of executable code may be a single instruction, or many instructions, and may even be distributed over several different code segments, among different programs, and across several memory devices. Similarly, operational data may be identified and illustrated herein within components or modules, and may be embodied in any suitable form and organized within any suitable type of data structure. The operational data may be collected as a single data set, or may be distributed over different locations including over different storage devices, and may exist, at least partially, merely as electronic signals on a system or network. The components or modules may be passive or active, including agents operable to perform desired functions.","Additional examples of the presently described method, system, and device embodiments include the following, non-limiting configurations. Each of the following non-limiting examples may stand on its own, or may be combined in any permutation or combination with any one or more of the other examples provided below or throughout the present disclosure.","Example 1 includes a computing device, comprising: a touch screen configured to provide a screen display and receive input from hand gestures; a computer system operative to control the screen display, the computer system including an operating system and one or more browsers configured for execution with the operating system, wherein the one or more browsers are configured to execute one or more web apps; and one or more software modules configured for execution with the operating system, the software modules configured to respond to a dragging hand gesture applied to a web app being displayed in a full screen mode within the one or more browsers, by: subdividing the screen display of the one or more browsers into multiple subdivided areas, and displaying the web app within one of the subdivided areas; launching a second web app and displaying the second web app within a different one of the subdivided areas; and providing concurrent display of the web app and the second web app in a split-screen mode to facilitate user multitasking.","In Example 2, the subject matter of Example 1 may optionally include the software modules being further configured to respond to the dragging hand gesture by: displaying one or more icons used to accept user input to select and launch the second web app, the icons displayed within the different one of the subdivided areas.","In Example 3, the subject matter of one or any combination of Examples 1-2 may optionally include each of the web app and the second web app being coded in a browser-renderable markup language compliant with an HTML5 markup language standard, and wherein the one or more browsers are further configured to render web apps coded in a markup language compliant with the HTML5 markup language standard.","In Example 4, the subject matter of one or any combination of Examples 1-3 may optionally include the software modules being further configured to respond to a second hand gesture applied to the concurrent display of the web app and the second web app by: resizing display proportions between the web app and the second web app in the split-screen mode.","In Example 5, the subject matter of one or any combination of Examples 1-4 may optionally include the software modules being further configured to respond to one or more user commands during the concurrent display of the web app and the second web app by: communicating information between the web app and the second web app.","In Example 6, the subject matter of one or any combination of Examples 1-5 may optionally include the software modules being further configured to provide concurrent display of the web app, the second web app, and one or more additional web apps in the split-screen mode.","In Example 7, the subject matter of one or any combination of Examples 1-6 may optionally include the software modules being further configured to provide concurrent execution and concurrent display for the web app and the second web app.","In Example 8, the subject matter of one or any combination of Examples 1-7 may optionally include the one or more software modules being provided by the one or more browsers.","In Example 9, the subject matter of one or any combination of","Examples 1-8 may optionally include the one or more browsers including a first browser providing the one of the subdivided areas, and a second browser providing the different one of the subdivided areas.","Example 10 may include, or may optionally be combined with the subject matter of one or any combination of Examples 1-9 to include a method, comprising: displaying, in a full screen mode of a screen display, a web app within a browser user interface; detecting one or more user commands applied within the browser user interface during the full screen mode to subdivide the screen display and launch a second app; and partitioning the screen display into multiple subdivided areas responsive to detecting the user commands, including:","resizing a display of the web app to one of the subdivided areas; and allocating the second app to display in a different one of the subdivided areas; wherein the second app is concurrently executed and presented with the web app.","In Example 11, the subject matter of Example 10 may optionally include user commands that include one or more hand gestures applied to a touch screen, the touch screen configured to provide the screen display.","In Example 12, the subject matter of one or any combination of Examples 10-11 may optionally include hand gestures that include a dragging motion applied to an edge of the browser user interface.","In Example 13, the subject matter of one or any combination of","Examples 10-12 may optionally include displaying one or more icons used to select and launch the second app, the icons displayed within the different one of the subdivided areas.","In Example 14, the subject matter of one or any combination of Examples 10-13 may optionally include the web app being provided according to a browser-renderable markup language compliant with an HTML5 markup language standard.","In Example 15, the subject matter of one or any combination of","Examples 10-14 may optionally include changing an allocation of the plurality of subdivided areas in the screen display responsive to detecting one or more additional user commands.","In Example 16, the subject matter of one or any combination of Examples 10-15 may optionally include communicating information between the first web app and the second app.","In Example 17, the subject matter of one or any combination of Examples 10-16 may optionally include the second app being a web app executing in the browser user interface.","In Example 18, the subject matter of one or any combination of","Examples 10-17 may optionally include the second app being a native app not executing in the browser user interface.","Example 19 may include, or may optionally be combined with the subject matter of one or any combination of Examples 1-18 to include at least one machine readable storage medium comprising a plurality of instructions that, in response to being executed on a computing device, cause the computing device to provide a browser graphical user interface configured to: display a first web app in a full-screen mode of a screen display; provide a selectable listing of one or more additional web apps for display, the one or more additional web apps including a second web app; receive one or more user commands to display the second web app concurrently with the first web app; and display the second web app and the first web app in a split-screen mode of the screen display.","In Example 20, the subject matter of Example 19 may optionally include user commands that include one or more hand gestures applied to a touch screen, the touch screen configured to provide the screen display.","In Example 21, the subject matter of one or any combination of Examples 19-20 may optionally include hand gestures that include a dragging motion applied to an edge of the browser graphical user interface.","In Example 22, the subject matter of one or any combination of Examples 19-21 may optionally include providing the listing of the one or more additional web apps including displaying a listing of icons representing the one or more additional web apps, wherein receiving the one or more user commands to display the second web app includes detecting a user selection of an icon from the listing of icons representing the second web app.","In Example 23, the subject matter of one or any combination of Examples 19-22 may optionally include each of the first web app and the second web app being coded in a browser-renderable markup language compliant with an HTML5 markup language standard.","In Example 24, the subject matter of one or any combination of Examples 19-23 may optionally include the browser graphical user interface being further configured to: receive one or more user commands to resize display proportions between the first web app and the second web app in the split-screen mode; and responsive to the user commands to resize display proportions, update the screen display of the first web app and the second web app.","In Example 25, the subject matter of one or any combination of Examples 19-24 may optionally include the browser graphical user interface being further configured to: communicate information between the first web app and the second web app.","The Abstract of the Disclosure is intended to allow the reader to ascertain the nature and gist of the technical disclosure. It is submitted with the understanding that it will not be used to limit or interpret the scope or meaning of the claims. The following claims are hereby incorporated into the detailed description, with each claim standing on its own as a separate embodiment."],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"BRIEF DESCRIPTION OF THE DRAWINGS","p":[{"@attributes":{"id":"p-0006","num":"0005"},"figref":"FIGS. 1A and 1B"},{"@attributes":{"id":"p-0007","num":"0006"},"figref":"FIG. 2"},{"@attributes":{"id":"p-0008","num":"0007"},"figref":"FIGS. 3A and 3B"},{"@attributes":{"id":"p-0009","num":"0008"},"figref":"FIG. 4"},{"@attributes":{"id":"p-0010","num":"0009"},"figref":"FIG. 5"},{"@attributes":{"id":"p-0011","num":"0010"},"figref":"FIGS. 6A, 6B, and 6C"},{"@attributes":{"id":"p-0012","num":"0011"},"figref":"FIG. 7"},{"@attributes":{"id":"p-0013","num":"0012"},"figref":"FIG. 8"}]},"DETDESC":[{},{}]}
