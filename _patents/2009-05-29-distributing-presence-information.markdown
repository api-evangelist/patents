---
title: Distributing presence information
abstract: A method of distributing availability information from a first user terminal to at least one further user terminal connected via a communication network, comprising: executing a communication client at the first user terminal; the communication client accessing schedule data stored on a storage means relating to a user of the first user terminal; the communication client analysing the schedule data to determine a current status of the user; mapping the current status of the user to a selected one of a group of predefined availability settings at the communication client; and transmitting a message comprising the selected availability setting over the communication network to the at least one further user terminal.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08473545&OS=08473545&RS=08473545
owner: Microsoft Corporation
number: 08473545
owner_city: Redmond
owner_country: US
publication_date: 20090529
---

{"@attributes":{"id":"description"},"BRFSUM":[{},{}],"heading":"RELATED APPLICATION","p":["This application claims priority under 35 U.S.C. \u00a7119 or 365 to Great Britain Application No. 0816277.8, filed Sep. 5, 2008. The entire teachings of the above application are incorporated herein by reference.","This invention relates to distributing presence information.","Packet-based communication systems allow the user of a device, such as a personal computer, to communicate across a computer network such as the Internet. Packet-based communication systems include voice over internet protocol (\u201cVoIP\u201d) communication systems. These systems are beneficial to the user as they are often of significantly lower cost than fixed line or mobile networks. This may particularly be the case for long-distance communication. To use a VoIP system, the user must install and execute client software on their device. The client software provides the VoIP connections as well as other functions such as registration and authentication. In addition to voice communication, the client may also provide further features such as video calling, instant messaging (\u201cIM\u201d), voicemail and file transfer.","One type of packet-based communication system uses a peer-to-peer (\u201cP2P\u201d) topology built on proprietary protocols. To enable access to a peer-to-peer system, the user must execute P2P client software provided by a P2P software provider on their computer, and register with the P2P system. When the user registers with the P2P system the client software is provided with a digital certificate from a server. Once the client software has been provided with the certificate, communication can subsequently be set up and routed between users of the P2P system without the further use of a server. In particular, the users can establish their own communication routes through the P2P system based on the exchange of one or more digital certificates (or user identity certificates, \u201cUIC\u201d), which enable access to the P2P system. The exchange of the digital certificates between users provides proof of the users' identities and that they are suitably authorised and authenticated in the P2P system. Therefore, the presentation of digital certificates provides trust in the identity of the user. It is therefore a characteristic of peer-to-peer communication that the communication is not routed using a server but directly from end-user to end-user. Further details on such a P2P system are disclosed in WO 2005\/009019.","One of the advantages of packet-based communication systems, compared to the public switched telephone network (\u201cPSTN\u201d), is that presence information can be provided for the users. Presence information is a user-defined indication of the current status of the user of the system. Presence information is displayed in the user interface of the client for each of the contacts that the user has stored, and allows the user to view the current user-defined status of the contacts in the system. Example presence states that may be displayed include \u201conline\u201d, \u201coffline\u201d, \u201caway\u201d, and \u201cdo not disturb\u201d.","The use of presence states provides a user with a best-guess regarding the current state of a contact before attempting to communicate with the contact. For example, if the user's presence state indicates the user is not online, and therefore unable to be contacted, then this is indicated to the user before attempting to make a call. Similarly, if a contact is busy and unlikely to answer, then this may also be communicated in advance via the contact's presence state (by the contact setting the appropriate presence state). This is a considerable advantage over PSTN systems, which do not provide any prior information on the probable state of a user. The only option in PSTN systems is to dial a number and wait and see if it is answered.","A problem with presence information is that it is must be set by the user of the packet-based communication system. In order for the presence state to accurately reflect the status of the user, the user must remember to regularly update his presence state. Frequently, the user can forget to do this, leading to inaccurate or inappropriate presence states being displayed to a user's contacts. Furthermore, the information provided by the presence status is limited, and only provides a \u201csnapshot\u201d of the user's status at the time at which the presence status is set.","There is therefore a need for a technique to address the aforementioned problems with presence states inaccurately reflecting the status of a user.","According to one aspect of the present invention there is provided a method of distributing availability information from a first user terminal to at least one further user terminal connected via a communication network, comprising: executing a communication client at the first user terminal; the communication client accessing schedule data stored on a storage means relating to a user of the first user terminal; the communication client analysing the schedule data to determine a current status of the user; mapping the current status of the user to a selected one of a group of predefined availability settings at the communication client; and transmitting a message comprising the selected availability setting over the communication network to the at least one further user terminal.","Because the availability settings are set in dependence on the schedule data relating to the user, the communication client is able to automatically determine an appropriate availability setting for the user's current situation. This provides more accurate availability (presence state) information, without the user needing to regularly manually update his availability.","Preferably, the method further comprises the step of searching the storage means for schedule data prior to the step of analysing. Preferably, the method further comprises the steps of: receiving schedule data entered into a calendar application executed at the first user terminal from the user of the first user terminal; and the calendar application storing the schedule data on the storage means. Preferably, the method further comprises the step of updating a user interface of the communication client to display the selected availability setting. Preferably, the steps of accessing, analysing and mapping are performed periodically.","Preferably, the step of mapping comprises the steps of: determining if the current status of the user is busy, and if so selecting an availability setting which prevents the user from being notified of incoming communication events; and determining if the current status of the user is free, and if so selecting an availability setting which permits the user to be notified of incoming communication events.","Preferably, the step of mapping comprises the step of: determining if the schedule data indicates that the current status of the user is scheduled to change within a predefined time period, and if so selecting an availability status which permits the user to be notified of incoming communication events and indicates limited availability of the user of the first user terminal.","Preferably, the step of mapping comprises the step of: determining if the schedule data indicates that the current status of the user has changed within a predefined time period, and if so selecting an availability status which permits the user to be notified of incoming communication events and indicates limited availability of the user of the first user terminal.","Preferably, the method further comprises the step of the communication client generating text data to augment the selected availability setting, and wherein the message transmitted to the at least one further user terminal further comprises the text data.","In one embodiment, the text data comprises a time at which the current status of the user is next scheduled to change. In another embodiment, the text data comprises a time at which the current status of the user has changed. Preferably, the method further comprises the step of analysing the schedule data to determine a classification of the current status of the user, and wherein the text data further comprises the classification.","In one embodiment, the step of transmitting is performed responsive to a request message received from the at least one further user terminal. In another embodiment, the step of transmitting is performed at periodic intervals.","According to another aspect of the invention there is provided a computer program product comprising program code means which, when executed by a computer implement the steps according to the above method.","According to another aspect of the invention there is provided a user terminal comprising: a storage means; and a processor configured to execute a communication client, wherein the communication client is programmed so as when executed to allow a user of the user terminal to establish communications with at least one further user terminal via a packet-based communication network; and wherein the communication client is arranged to access schedule data stored on the storage means relating to the user of the user terminal, analyse the schedule data to determine a current status of the user, map the current status of the user to a selected one of a group of predefined availability settings, and transmit a message comprising the selected availability setting over the communication network to the at least one further user terminal.","Preferably, the communication client is further arranged to search the storage means for schedule data prior to analysing the schedule data. Preferably, the processor is further configured to execute a calendar application, wherein the calendar application is arranged to receive schedule data entered by the user of the user terminal and store the schedule data on the storage means.","Preferably, the user terminal further comprised a display means, wherein the communication client is arranged to update a user interface displaying the selected availability setting on the display means.","Preferably, the communication client is arranged to periodically access the schedule data, analyse the schedule data, and map the current status of the user to a selected one of a group of predefined availability settings. Preferably, the communication client step is arranged to determine if the current status of the user is busy, and if so select an availability setting which prevents the user from being notified of incoming communication events, and determine if the current status of the user is free, and if so select an availability setting which permits the user to be notified of incoming communication events.","Preferably, the communication client is further arranged to determine if the schedule data indicates that the current status of the user is scheduled to change within a predefined time period, and if so select an availability status which permits the user to be notified of incoming communication events and indicates limited availability of the user of the user terminal.","Preferably, the communication client is further arranged to determine if the schedule data indicates that the current status of the user has changed within a predefined time period, and if so select an availability status which permits the user to be notified of incoming communication events and indicates limited availability of the user of the user terminal.","Preferably, the communication client is further arranged to generate text data to augment the selected availability setting, and wherein the message transmitted to the at least one further user terminal further comprises the text data.","Preferably, the communication client is further arranged to analyse the schedule data to determine a classification of the current status of the user, and wherein the text data further comprises the classification.","In one embodiment, the communication client is arranged to transmit the message comprising the selected availability setting responsive to a request message being received from the at least one further user terminal. In another embodiment, the communication client is arranged to transmit the message comprising the selected availability setting at periodic intervals.","Preferably, the communication network is a packet-based communication network. In one embodiment, the communication network is a voice over internet protocol network. In another embodiment, the communication network is an instant messaging network. Preferably, the communication network is a peer-to-peer communication network.","Reference is first made to , which illustrates a packet-based communication system . Note that whilst this illustrative embodiment is described with reference to a P2P communication system, other types of communication system could also be used, such as non-P2P, VoIP or IM systems. A first user of the communication system (named \u201cTom Smith\u201d ) operates a user terminal , which is shown connected to a network . Note that the communication system  utilises a network such as the Internet. The user terminal  may be, for example, a personal computer (\u201cPC\u201d) (including, for example, Windows\u2122, Mac OS\u2122 and Linux\u2122 PCs), a personal digital assistant (\u201cPDA\u201d), a mobile phone, a gaming device or other embedded device able to connect to the network . The user device  is arranged to receive information from and output information to a user of the device. In a preferred embodiment of the invention the user device comprises a display such as a screen and an input device such as a keyboard, mouse, joystick and\/or touch-screen. The user device  is connected to the network  via a network interface  such as a modem, and the connection between the user terminal  and the network interface  may be via a cable (wired) connection or a wireless connection.","Note that in alternative embodiments, the user terminal  can connect to the communication network  via additional intermediate networks not shown in . For example, if the user terminal  is a mobile device, then it can connect to the communication network  via a mobile network (for example a GSM or UMTS network).","The user terminal  is running a communication client , provided by the software provider. The communication client  is a software program executed on a local processor in the user terminal . The user terminal  is also connected to a handset , which comprises a speaker and microphone to enable the user to listen and speak in a voice call. The microphone and speaker does not necessarily have to be in the form of a traditional telephone handset, but can be in the form of a headphone or earphone with an integrated microphone, as a separate loudspeaker and microphone independently connected to the user terminal , or integrated into the user terminal  itself.","An example of a user interface  of the communication client  executed on the user terminal  of the first user  is shown illustrated in . Note that the user interface  can be different depending on the type of user terminal . For example, the user interface can be smaller or display information differently on a mobile device, due to the small screen size. In the example of , the client user interface  displays the username  of \u201cTom Smith\u201d  in the communication system, and the user can set his own presence state (that will be seen by other users) using a drop down list by selecting icon .","The client user interface  comprises a button  labelled \u201ccontacts\u201d, and when this button is selected the contacts stored by the user in a contact list are displayed in a pane  below the button . In the example user interface in , four contacts of other users of the communication system are shown listed in contact list . Each of these contacts have authorised the user  of the client  to view their contact details and presence state. Each contact in the contact list has a presence status icon associated with it. For example, the presence status icon for \u201cKevin Jackson\u201d  indicates that this contact is \u201conline\u201d, the presence icon for \u201cMaria Jones\u201d  indicates that this contact is \u201caway\u201d, the presence icon for \u201cRoger White\u201d  indicates that this contact's state is \u201cdo not disturb\u201d (\u201cDND\u201d), the presence icon for \u201cSarah Rowling\u201d  indicates that this contact is \u201coffline\u201d. Further presence state indications can also be included.","Presence information in packet-based communication systems can additionally be supplemented by \u201cmood messages\u201d. Mood messages are short text strings that are composed by the users to distribute information about themselves to their contacts and supplement their presence status. Mood messages can therefore be considered to be extended presence information. The mood message acts as a supplementary data channel between a user and all of his contacts for the simple distribution of text-based information. The mood message of a contact is generally displayed next to the contact's name and presence status in the client.","Mood messages are useful for a number of reasons. For example, a mood message can be used to give more information or a reason for a particular presence status, e.g. if a user is offline, the mood message may say \u201cOn holiday\u201d, thereby explaining why the user is offline. Similarly, if a user's presence state is set to \u201cdo not disturb\u201d, the mood message may say \u201cBusy working. Only contact me if urgent\u201d. In , the mood messages  of the contacts are shown displayed next to the names of the contacts in pane .","The contact list for the users (e.g. the contact list  for \u201cTom Smith\u201d) is stored in a contact server (not shown in ). When the client  first logs into the communication system the contact server is contacted, and the contact list is downloaded to the user terminal . This allows the user to log into the communication system from any terminal and still access the same contact list. The contact server is also used to store the user's own mood message (e.g. a mood message  of the first user ) and a picture  selected to represent the user (known as an avatar). This information can be downloaded to the client , and allows this information to be consistent for the user when logging on from different terminals. The client  also periodically communicates with the contact server in order to obtain any changes to the information on the contacts in the contact list, or to update the stored contact list with any new contacts that have been added.","Presence state information is not stored centrally in the contact server. Rather, the client  periodically requests the presence state information for each of the contacts in the contact list  directly over the communication system. Similarly, the current mood message for each of the contacts, as well as a picture (avatar\u2014e.g. picture  for \u201cKevin Jackson\u201d) that has been chosen to represent the contact, are also retrieved by the client  directly from the respective clients of each of the contacts over the communication system. The presence states of the contacts are therefore determined using a \u201cpull\u201d technique, as the data is requested from the clients of each of the contacts. In alternative embodiments, the presence state of a user can be \u201cpushed\u201d to each of the user's contacts over the communication network, either periodically or whenever the presence state is changed.","VoIP calls to the users in the contact list may be initiated over the communication system by selecting the contact and clicking on a \u201ccall\u201d button  using a pointing device such as a mouse. Referring again to , the call set-up is performed using proprietary protocols, and the route over the network  between the calling user and called user is determined by the peer-to-peer system without the use of servers. For example, the first user \u201cTom Smith\u201d  can call a second user \u201cKevin Jackson\u201d .","Following authentication through the presentation of digital certificates (to prove that the users are genuine subscribers of the communication system\u2014described in more detail in WO 2005\/009019), the call can be made using VoIP. The client  performs the encoding and decoding of VoIP packets. VoIP packets from the user terminal  are transmitted into the network  via the network interface , and routed to a computer terminal  of the called party , via a network interface . A client  (similar to the client ) running on the user terminal  of the called user  decodes the VoIP packets to produce an audio signal that can be heard by the called user using the handset . Conversely, when the second user  talks into handset , the client  executed on user terminal  encodes the audio signals into VoIP packets and transmits them across the network  to the user terminal . The client  executed on user terminal  decodes the VoIP packets, and produces an audio signal that can be heard by the user of the handset .","The VoIP packets for calls between users (such as  and ) as described above are passed across the network  only, and the public switched telephone network (\u201cPSTN\u201d)  is not involved. Furthermore, due to the P2P nature of the system, the actual voice calls between users of the communication system can be made with no central servers being used. This has the advantages that the network scales easily and maintains a high voice quality, and the call can be made free to the users. Additionally, calls can also be made from the client (, ) using the packet-based communication system to fixed-line or mobile telephones , by routing the call to the PSTN network . Similarly, calls from fixed-line or mobile telephones  can be made to the packet-based communication system via the PSTN .","In addition to making voice calls, the user of the client  can also communicate with the users listed in the contact list  in several other ways. For example, an instant message (also known as a chat message) can be sent by typing a message in box  (as shown in ) and sending it by selecting the \u201csend message\u201d button . Additionally, the first user  can use the client  to transmit files to users in the contact list , send voicemails to the contacts or establish video calls with the contacts (not illustrated in ).",{"@attributes":{"id":"p-0050","num":"0049"},"figref":["FIG. 3","FIG. 1"],"b":["104","110","104","302","304","305","306","308","309","310","312","313","310","312","112","302","108"]},{"@attributes":{"id":"p-0051","num":"0050"},"figref":["FIG. 3","FIG. 3","FIG. 2"],"b":["314","302","314","316","110","318","320","322","314","108","318","314","320","320","322","320","322"]},"As stated previously, there exists a problem with presence information in packet-based communication systems such as that described above. The user of the communication client needs to manually set the presence state (for example using drop-down list  in ) to a status that is appropriate for his current conditions. The user must remember to regularly update this presence state for it to be accurate. Often, the user can forget to do this, leading to inaccurate presence states being distributed and displayed to the user's contacts.","Calendar applications or personal information manager (\u201cPIM\u201d) applications are widely used on user terminals. These applications are often used on a wide range of devices, including PCs (e.g. desktop and notebook\/portable PCs) and mobile devices (e.g. mobile phones and PDAs). These applications allow the user to record schedules, appointments, meetings and important dates in an electronic calendar. The calendar data is therefore a useful resource providing information on the behaviour of the user of the user terminal.",{"@attributes":{"id":"p-0054","num":"0053"},"figref":["FIG. 3","FIG. 3"],"b":["324","314","104","104","304","104","306","308","104","104","104"]},"The schedule data produced by the calendar application as a result of the user entering information into the calendar application can be used by the communication client to automatically determine an appropriate presence state for the user's current situation. This is advantageous because it provides more accurate presence state information, without the user needing to regularly manually update his presence state. Furthermore, additional advantages arise due to the schedule data providing information regarding the user's expected future behaviour.","Reference is now made to , which illustrates a flowchart of a process for the communication client  to automatically set the presence state of a user in dependence on user schedule data. The process is executed by the client engine layer .","In step S, the process executed by the communication client  begins by starting a timer that defines the periodic interval at which the client  should check the current presence state. Note that this periodic interval can be pre-defined in the communication client, or set by the user. In step S, the client determines whether the time limit has expired, such that it is time to check whether the presence state should be updated. In this way, the client  periodically checks whether the presence state needs to be updated. If it is not time to check the presence state in S, then the process is repeated. If it is time to check the presence state, then in step S the client  determines whether schedule data can be detected.","As stated above, the schedule data can be located in different storage devices, depending on the type of user terminal and the calendar application. The client  searches for the schedule data in the appropriate place for the particular terminal in question. In some embodiments the client  can determine whether a PIM application is currently being executed on the user terminal, and use this to determine whether calendar data is present. In other embodiments, the communication client can make use of a calendar application programming interface (\u201cAPI\u201d) provided by the PIM application to access calendar data whether or not the PIM application is being executed at a given time. Alternatively, the client  can be configured to search one or more storage locations regardless of whether a PIM application is being executed.","If schedule data is not detected at the user terminal (or, in alternative embodiments, on a remote server) then the timer is reset in S, control returns to S, and the client waits for the next periodic interval before checking again. If schedule data is detected in step S, then in step S the schedule data is read by client . The schedule data is read from its storage location, as described above. Preferably, a copy of at least a relevant portion of the schedule data is stored in memory on the user terminal  for the client  to utilise. For example, this can be stored in DRAM.","The schedule data is analysed by the client  in order to determine what the current status of the user is, according to the schedule data. This is achieved by the client accessing the current time on the user terminal (which can be maintained by the operating system  or in hardware) and using this to determine whether any events are contained in the schedule data for this time.","In step S it is determined whether the current status of the user extracted from the schedule data indicates that the user is busy. If this is the case, then in step S, the client  sets the presence state for the user to \u201cdo not disturb\u201d. Note that it is possible that the client is already in this presence state (e.g. due to a previous automatic update or a manual setting by the user), in which case the presence state remains in this state.","The DND presence state not only indicates to the user's contacts that the user is busy and should not be disturbed, but also prevents the user of the client  from being notified of incoming communication events. Specially, when a user's presence state is set to DND, then all audio and visual indications of incoming communication events at the user's terminal are disabled. This ensures that, when the presence state is set to DND, the user is not disturbed by incoming communication events.","In step S the client engine layer  instructs the client UI layer  to update the user interface to reflect the change in presence state (if a change is being made). Specifically, the icon  in  is updated to show the DND icon. In step S the periodic timer for checking the presence state is reset, and control returns to step S.","Returning again to step S, if the schedule data indicates that the user not busy, then in step S the client  determines whether the current status of the user extracted from the schedule data indicates that the user is free. If this is the case, then in step S the presence state for the user is set to \u201conline\u201d. The online presence state indicates to the user's contacts that the user is available for communication. As described above, the UI is then updated to show the new presence state (if changed) in step S, and the interval timer is reset in step S.","Returning again to step S, if the current status is not free, then this indicates that the client  has been unable to determine from the schedule data that the user is either specifically busy or free. This indicates that either the schedule data could not be interpreted correctly, or that an error event has occurred. In this circumstance, the client  registers an unknown status for the user in step S and then retains the current presence state without change in step S. The timer is then reset in step S, and the process in  is repeated.","In step S, the presence state for the user is transmitted to the contacts of the user. As mentioned, the presence state can be transmitted in response to a direct request from a particular contact, or the client  can be configured to periodically transmit the presence state to all the contacts. The time intervals at which the client  informs the contacts of the presence state of the user is not dependent on the time interval at which the current presence state is checked in .","The flowchart described in  therefore enables the client  to automatically set the presence state of the user in a packet-based communication system in dependence on data extracted from an electronic calendar.","Reference is now made to , which illustrates a further embodiment of the invention. The flowchart in  is a process executed by the client  which can take into account schedule data indicating the user's future activities. In addition, the process of  makes use of the mood message functionality to provide extended presence information.","Steps S to S are the same as steps S to S described above with reference to . Specifically, in step S, the communication client  start the timer defining the periodic interval at which the client  should check the current presence state. In step S, the client determines whether the timer has expired. If it has not, then it is not time to check the presence state, and the process is repeated until it is determined in step S that that the timer has expired. In step S the client  determines whether schedule data can be detected in the storage locations as detailed above with reference to .","If schedule data is not detected at the user terminal (or, in alternative embodiments, on a remote server) then the timer is reset in S, control returns to S, and the client waits for the next periodic interval before checking again. If schedule data is detected in step S, then in step S the schedule data is read by client . The schedule data is read from its storage location, as described above with reference to . Preferably, a copy of at least a relevant portion of the schedule data is stored in memory on the user terminal  for the client  to utilise. For example, this can be stored in DRAM.","The schedule data is analysed by the client  in order to determine what the current status of the user is, according to the schedule data. This is achieved by the client accessing the current time on the user terminal (which can be maintained by the operating system  or in hardware) and using this to determine whether any events are contained in the schedule data for this time.","In step S it is determined whether the current status of the user extracted from the schedule data indicates that the user is busy. If this is the case, then, in step S, the schedule data is further analysed to determine the time at which the user will cease to be busy. For example, if the schedule data indicates that the user is in a meeting, then the client  can read from the schedule data the time at which the meeting is due to finish. Therefore, the client  determines the time at which user is scheduled to become free. This also takes into account multiple consecutive appointments in the schedule data, such that if the user has more than one appointment in a row, then the client  determines that time at which all the appointments are finished and the user is free again.","In step S the client  automatically composes a mood message to distribute the information regarding the user's schedule to the user's contacts. The mood message composed in S comprises the time at which the user is due to be free again. For example, if in S it was determined that the user was scheduled to be busy until 3:30 pm, then in S the composed mood message reads \u201cIn meetings until 3:30 pm\u201d. Alternative language could also be used. The generation of a mood message in this way acts as extended presence information which provides the contact's of the user with information about the user's expected future behaviour.","In step S the presence state for the user is set to DND, to reflect that schedule data indicates that the user is currently busy. In step S the client engine layer  instructs the client UI layer  to update the UI of the client  to show the presence state of DND, and to show the automatically generated mood message indicating the time at which the user is scheduled to be free. For example, the icon  and mood message  in  are updated. In step S the periodic timer for checking the presence state is reset, and control returns to step S.","Returning again to step S, if it is determined that the user is not busy, then in step S it is determined whether the schedule data indicates that the user is currently free. If the schedule data indicates that the user is currently free, then in step S the schedule data is analysed to determine whether the user is scheduled to become busy within a predetermined period of time. Preferably, the predetermined period of time is 15 minutes, although any suitable time period can be selected. The predetermined interval value can be user-defined.","If the user is scheduled to become busy within the predetermined time period, then in S the scheduled start time of the user's appointment is read from the schedule data. In step S a mood message is created which comprises the imminent start time of the user's appointment. For example, if the current time is 3:20 pm, and the user has an appointment scheduled for 3:30 pm, then the appointment is <15 minutes from the current time, and the client generates a mood message with the text \u201cIn a meeting from 3:30 pm\u201d. Alternative text could also be used that communicates similar information. In step S the presence state of the user is set to \u201caway\u201d. The \u201caway\u201d presence state, combined with the mood message convey to the user's contacts that the user is in a transition period (in this example 15 minutes) in which he will imminently cease to be free, and is scheduled to be busy. This therefore indicates to the contacts that the user may still be contactable if required, but there is a significant likelihood that the user will not answer.","In step S the UI of the client is updated to show the \u201caway\u201d status and mood message. In step S the timer is reset and control returns to S.","Returning again to step S, if it is determined that the user is not scheduled to start an appointment in the predetermined time interval, then in step S it is determined whether the user has recently completed an appointment within a predetermined time interval. In other words, it is determined whether the user's schedule indicates that he has recently gone from being busy to being free. Preferably the predetermined time interval is 15 minutes, although any suitable time period can be used. The predetermined interval value can be user-defined.","In step S, the client  reads the time at which the recently completed appointment was scheduled to finish. In step S, a mood message is generated that comprises the time of the recently completed appointment. For example, if the current time is 4:05 pm and a meeting was scheduled to end at 4:00 pm, a mood message is generated that reads \u201cFree from 4:00 pm\u201d. In step S, the presence state of the user is set to \u201caway\u201d. The \u201caway\u201d state and the mood message indicates to the user's contacts that the user was scheduled to have recently completed an appointment, and is therefore due to become free again. However, because the appointment ended recently, the user may be in transit from the appointment and therefore may not answer if contacted.","In step S the UI of the client is updated to show the \u201caway\u201d status and mood message. In step S the timer is reset and control returns to S.","Returning again to S, if the user was not scheduled to have recently completed an appointment within the predetermined time interval, then this indicates that the user is currently free and is neither about to become busy, nor has only recently become free. In step S, the client  reads the schedule data to determine the time at which the user's next appointment is scheduled for. In other words, the client  determines the time at which the user is schedule to next be busy. In step S a mood message is generated that comprises the information on the time at which the user is due to become busy. For example, if the current time is 2:00 pm, and the next appointment for the user is at 3:30 pm, then the generated mood message reads \u201cFree until 3:30 pm\u201d. Alternative language can also be used. If no future appointments are scheduled for the user, then no mood message is generated.","In step S, the user's presence state is set to \u201conline\u201d. This therefore indicates to the user's contacts that the user does not currently have any scheduled appointments, and is therefore likely to be contactable. Furthermore, it indicates the timescale over which the user is scheduled to remain in that state. In step S the UI of the client is updated to show the \u201conline\u201d status and mood message. In step S the timer is reset and control returns to S.","Returning to step S, if the current status is not free, then this indicates that the client  has been unable to determine from the schedule data that the user is either specifically busy or free. This indicates that either the schedule data could not be interpreted correctly, or that an error event has occurred. In this circumstance, the client  registers an unknown status for the user in step S and then retains the current presence state without change in step S. The timer is then reset in step S, and the process in  is repeated.","In step S, the presence state for the user is transmitted to the contacts of the user. As mentioned, the presence state can be transmitted in response to a direct request from a particular contact, or the client  can be configured to periodically transmit the presence state to all the contacts. The time intervals at which the client  informs the contacts of the presence state of the user is not dependent on the time interval at which the current presence state is checked in .","Reference is now made to , which illustrates presence states and mood messages generated by the process of  for an example illustrative calendar of a user.  shows calendar entries that have been entered by a user ranging from 9:00 am to 6:15 pm for a particular day. Four appointments are scheduled for the user in this day. The predetermined time interval either side of an appointment at which the presence is set to \u201caway\u201d is 15 minutes.","The first appointment is scheduled for 9:00 am and is one hour long and due to finish at 10:00 am. The presence state for the user is therefore set to \u201cDND\u201d, and the mood message reads \u201cIn a meeting until 10:00 am\u201d. Between 10:00 am and 10:15 am, the presence state is \u201caway\u201d and the mood message reads \u201cFree from 10:00 am\u201d. The next appointment for the user is not until 12:30 pm, so from 10:15 am to 12:15 pm the presence status is \u201conline\u201d and the mood message reads \u201cFree until 12:30 pm\u201d. At 12:15 the presence status is changed to \u201caway\u201d and the mood message reads \u201cIn meetings from 12:30 pm\u201d.","The second appointment for the user starts at 12:30 pm and lasts for 2 hours, and is immediately followed by the third appointment which lasts for 1.5 hours.","The user therefore is not free again until 4:00 pm. The client  takes this into account and changes the presence status to \u201cDND\u201d and the mood message reads \u201cIn meetings until 4:00 pm\u201d. Note that the client gives the time which the user is free, not the time of the end of the first appointment only. Also note that the client  generates the mood message such that it indicates a plurality of meetings before the user is free again (i.e. it states \u201cin meetings . . . \u201d rather than \u201cin a meeting . . . \u201d). This therefore indicates to the contact's of the user that the user has more than one meeting scheduled.","At 4:00 pm, the user becomes free again, and the presence status is set to \u201caway\u201d and the mood message reads \u201cFree from 4:00 pm\u201d. The next appointment is scheduled for 5:00 pm, so at 4:15 pm the presence state is changed to \u201conline\u201d and the mood message reads \u201cFree until 5:00 pm\u201d. At 4:45 pm the client  changes the presence status to \u201caway\u201d and the mood message is changed to \u201cIn a meeting from 5:00 pm\u201d. At 5:00 pm a one hour appointment is scheduled, and therefore the presence state is updated to \u201cDND\u201d and the mood message to \u201cIn a meeting until 6:00 pm\u201d. At 6:00 pm, the presence status is changed to \u201caway\u201d and the mood message reads \u201cFree from 6:00 pm\u201d. From 6:15 pm onwards the user is free. No more appointments are scheduled for that day, so the presence state is set to \u201conline\u201d and no mood message is generated.","In further embodiments, the client can perform more advanced analysis of the text of the schedule data. For example, in the illustrative case of , the mood message set when the user was busy always reads \u201cIn (a) meeting(s)\u201d. However, the user may not always be in a meeting when he has an appointment. The client can therefore attempt to interpret the schedule data and classify an appointment accordingly. For example, the client may search for specific terms in the schedule, such as \u201cmeeting\u201d, \u201clunch\u201d, \u201choliday\u201d, \u201cconference\u201d, etc. These can be used to generate more specific mood messages accordingly. For example, the mood messages can read \u201cIn a meeting until . . . \u201d, \u201cAt lunch until . . . \u201d, \u201cOn holiday until . . . \u201d, and \u201cAt a conference until . . . \u201d. Many other possible classifications of appointment are also possible. The different classifications to search for can, in further embodiments, also be user-defined by the user of the client  in order to be more accurately tailored to the user's particular job, lifestyle or schedule.","While this invention has been particularly shown and described with reference to preferred embodiments, it will be understood to those skilled in the art that various changes in form and detail may be made without departing from the scope of the invention as defined by the appendant claims. For example, it will be appreciated that embodiments of the invention described herein can be employed in an IM system, a VoIP system, a video call system or any combination thereof. The user terminals (, ) on which the communication client is running can be mobile devices or fixed terminals, and these user terminals can connect to the communication network  via intermediate networks (such as mobile networks, WLAN networks or corporate networks). Furthermore, the precise combination of presence states used in the preferred embodiments can also be changed. For example, only a selection between \u201conline\u201d and \u201cDND\u201d (as in ) can be combined with extended presence information provided in the mood messages. Alternatively, only one of the two types of \u201caway\u201d setting could be used (i.e. either imminently before or just after an appointment). It will also be understood that the particular naming and type of presence states selected (e.g. \u201cDND\u201d, \u201caway\u201d, etc) can be changed as appropriate for the system in which the invention is implemented.","According to the invention in certain embodiments there is provided a user terminal as herein described having the following features.","The communication client may be arranged to search the storage means for schedule data prior to analysing the schedule data.","The processor may be configured to execute a calendar application, wherein the calendar application is arranged to receive schedule data entered by the user of the user terminal and store the schedule data on the storage means.","The terminal may comprise a display means, wherein the communication client is arranged to update a user interface displaying the selected availability setting on the display means.","The communication client may be arranged to periodically access the schedule data, analyse the schedule data, and map the current status of the user to a selected one of a group of predefined availability settings.","The communication client may be arranged to determine if the current status of the user is busy, and if so select an availability setting which prevents the user from being notified of incoming communication events, and determine if the current status of the user is free, and if so select an availability setting which permits the user to be notified of incoming communication events.","The communication client may be arranged to determine if the schedule data indicates that the current status of the user is scheduled to change within a predefined time period, and if so select an availability status which permits the user to be notified of incoming communication events and indicates limited availability of the user of the user terminal.","The communication client may be arranged to determine if the schedule data indicates that the current status of the user has changed within a predefined time period, and if so select an availability status which permits the user to be notified of incoming communication events and indicates limited availability of the user of the user terminal.","The communication client may be arranged to generate text data to augment the selected availability setting, and the message transmitted to the at least one further user terminal may further comprise the text data.","The text data may comprise a time at which the current status of the user is next scheduled to change.","The text data may comprise a time at which the current status of the user has changed.","The communication client may be further arranged to analyse the schedule data to determine a classification of the current status of the user, and wherein the text data comprises the classification.","The communication client may be arranged to transmit the message comprising the selected availability setting responsive to a request message being received from at least one further user terminal.","The communication client may be arranged to transmit the message comprising the selected availability setting at periodic intervals.","The communication network may be a packet-based communication network.","The communication network may be a voice over internet protocol network.","The communication network is an instant messaging network.","The communication network may be a peer-to-peer communication network."],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"p":["For a better understanding of the present invention and to show how the same may be put into effect, reference will now be made, by way of example, to the following drawings in which:",{"@attributes":{"id":"p-0031","num":"0030"},"figref":"FIG. 1"},{"@attributes":{"id":"p-0032","num":"0031"},"figref":"FIG. 2"},{"@attributes":{"id":"p-0033","num":"0032"},"figref":"FIG. 3"},{"@attributes":{"id":"p-0034","num":"0033"},"figref":"FIG. 4"},{"@attributes":{"id":"p-0035","num":"0034"},"figref":"FIG. 5"},{"@attributes":{"id":"p-0036","num":"0035"},"figref":"FIG. 6"}]},"DETDESC":[{},{}]}
