---
title: Non-negative matrix factorization from the data in the multi-dimensional data table using the specification and to store metadata representing the built relational database management system
abstract: An implementation of NMF functionality integrated into a relational database management system provides the capability to apply NMF to relational datasets and to sparse datasets. A database management system comprises a multi-dimensional data table operable to store data and a processing unit operable to perform non-negative matrix factorization on data stored in the multi-dimensional data table and to generate a plurality of data tables, each data table being smaller than the multi-dimensional data table and having reduced dimensionality relative to the multi-dimensional data table. The multi-dimensional data table may be a relational data table.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=07734652&OS=07734652&RS=07734652
owner: Oracle International Corporation
number: 07734652
owner_city: Redwood Shores
owner_country: US
publication_date: 20040827
---

{"@attributes":{"id":"description"},"RELAPP":[{},{}],"heading":["CROSS-REFERENCE TO RELATED APPLICATIONS","BACKGROUND OF THE INVENTION","SUMMARY OF THE INVENTION","DETAILED DESCRIPTION OF THE PREFERRED EMBODIMENTS"],"p":["The benefit under 35 U.S.C. \u00a7119(e) of provisional application 60\/498,700, filed Aug. 29, 2003, is hereby claimed.","1. Field of the Invention","The present invention relates to providing an implementation of Non-negative Matrix Factorization functionality integrated into a relational database management system","2. Description of the Related Art","Traditionally, as part of standard numerical analysis, matrix factorization is a common preprocessing procedure performed prior to solving a linear system of equations. For data mining, matrix factorization offers a way to reduce the dimensionality of a dataset and extract features that reveal interesting structure in the data or provide inputs to further types of analysis. In matrix factorization, the number of the dataset independent columns is reduced by projection onto a lower dimensional space (e.g. smaller matrices).","This type of rank reduction by factorization can reveal interesting low-dimensional subspaces embedded in large dimensionality datasets space and is a useful operation for pattern discovery and feature extraction. For example, the traditional Principal Component Analysis (PCA) uses a projection of the data on dimensions along which it varies the most and can be used to visualize the most dominant structure in a dataset.","Non-negative matrix factorization (NMF) involves imposing non-negativity constraints on the factors. NMF has been shown to be a useful decomposition and feature extraction method in fields such as object detection and recognition, and to be a valuable alternative to PCA. By forcing a dataset (matrix) to \u201cfit\u201d into a product of smaller datasets (matrices) NMF compresses the data and tends to eliminate some of the redundancies and expose the most common patterns. By using a parts-based or component-based decomposition, and in contrast to PCA and other techniques, the compressed version of the data is more interpretable and can be used to understand interesting patterns and common trends in the dataset. The NMF decomposition also induces a numerical taxonomy that can be used for grouping the rows or columns of the original dataset. The extracted features can be used as inputs to other analysis tasks such as classification or indexing. This procedure has proven useful in face recognition problems and in the discovery of semantic features in texts.","However, there are some limitations on traditional NMF techniques. For example, NMF has traditionally been applied to \u201cflat\u201d or non-relational datasets. This limits the analysis that may easily be performed with NMF. Conventional system require the extraction of data from the database into a statistical package where processing could be performed. This process is complex and not likely to be attempted by the user. This process is also relatively expensive and time consuming to perform. In addition, traditional NMF techniques do not handle \u201csparse\u201d datasets well and are not applicable to categorical data. This prevents traditional NMF analysis from being efficiently applied to particular types of data, such as textual data. A need arises for a technique by which NMF may be applied to relational datasets, to sparse datasets, and categorical data.","The present invention provides an implementation of NMF functionality integrated into a relational database management system (RDBMS). It provides the capability to apply NMF to relational datasets, to sparse datasets, and to categorical attributes. The application of NMF to relational data tables in a RDBMS enables the projection of tables into lower dimensionality representations as an analysis application. In this way, it provides a data \u201cdecomposition\u201d capability in the database that enables different types of data analysis applications such as feature extraction, profiling, clustering, projection for plotting, etc. The support for sparse tables allows NMF to be used, for example, on document-word matrices that represent text data. In this way, it provides the capability to perform \u201clatent semantic analysis\u201d in the RDBMS. This is an important text mining operation that provides improved indexing of tables and also the creation (and discovery from scratch) of taxonomies for a document corpus.","In one embodiment of the present invention, a database management system comprises a multi-dimensional data table operable to store data and a processing unit operable to perform non-negative matrix factorization on data stored in the multi-dimensional data table and to generate a plurality of data tables, each data table being smaller than the multi-dimensional data table and having reduced dimensionality relative to the multi-dimensional data table. The multi-dimensional data table may be a relational data table.","In one aspect of the present invention, the processing unit comprises a server application programming interface operable to provide an interface to client software, a build unit operable to build a non-negative matrix factorization model from the data in the multi-dimensional data table, and an apply unit operable to apply the non-negative matrix factorization model to the data in the multi-dimensional data table. The build unit may comprise a table function or RDBMS kernel code. The apply unit may comprise a table function or RDBMS kernel code. The build unit may be operable to un-nest nested table columns in the multi-dimensional data table and to explode categorical attributes in the multi-dimensional data table into a series of binary attributes. The apply unit may be operable to un-nest nested table columns in the multi-dimensional data table and to explode categorical attributes in the multi-dimensional data table into a series of binary attributes.","The present invention provides an implementation of NMF functionality integrated into a relational database management system (RDBMS). This provides the capability to apply NMF to relational datasets, to sparse datasets, and categorical attributes.","Given an N (rows)\u00d7M (columns) two-dimensional (2D) dataset V and k<N, M, NMF computes an approximation of the original data V as V\u02dcV\u2032=W\u00d7H, where W is N by k, and H is k by M. Starting from random initial conditions, W and H are iteratively updated until convergence to a local minimum is achieved, monitored by the minimization of the Euclidean cost function. Alternatively, a divergence cost function can be used. V must have positive entries, and so do W and H by construction. Even though localization is not an explicit property of the algorithm, NMF appears to produce quite localized and sparse features that facilitate the interpretation of results and the transparency of the model. For example, when NMF is applied to a dataset of facial images, the extracted features are facial parts: eyes, noses etc. When the dataset is a document\/keyword matrix then NMF extracts \u201csemantic\u201d features.","An example of the application of NMF to a dataset is shown in . Dataset V  is a 2D dataset having dimensions x and y. V  has n entries in the x dimension and m entries in the y dimension. Encoding coefficients W  is 2D and has dimensions x and u, with n entries in the x dimension and k entries in the u dimension. Basis model H  is 2D and has dimensions v and y, with k entries in the v dimension and m entries in the y direction. NMF constructs approximate factorizations of the input data matrix V [N\u00d7M] as V\u02dcV\u2032=WH where W and H are two smaller matrices. V must have positive entries, and so do W and H by construction (V, W, and H>0). Starting from non-negative initial conditions of W and H, iterations of the multiplicative update rules converge to a local maximum of the objective function. The dimensions of W and H are N\u00d7K and K\u00d7M respectively. In general K<<NM, or (N+M) K<NM so that W and H are a \u201ccompressed\u201d representation of V. This method uses only additive contributions and therefore avoids cancellations. In particular, decomposition is performed by additive mixture of positive components:",{"@attributes":{"id":"p-0023","num":"0022"},"maths":{"@attributes":{"id":"MATH-US-00001","num":"00001"},"math":{"@attributes":{"overflow":"scroll"},"mrow":{"mo":"\u2003","mrow":{"mo":"{","mtable":{"mtr":[{"mtd":{"mrow":{"mrow":{"msub":{"mi":"V","mrow":{"mo":".","mi":"a"}},"mo":"~","mi":"W"},"mo":"\u00d7","msub":{"mi":"H","mrow":{"mo":".","mi":"a"}}}}},{"mtd":{"mrow":{"mrow":{"msub":[{"mi":"V","mrow":{"mi":"a","mo":"."}},{"mi":"W","mrow":{"mi":"a","mo":"."}}],"mo":"~"},"mo":"\u00d7","mi":"H"}}}]}}}}}},"The W and H matrices provide relatively \u201ctransparent\u201d compressed representations of the data based on additive components or \u201cparts\u201d, that can be used for clustering, feature extraction, low-dimensional projection, latent semantic analysis for text and in general analysis of the intrinsic (unsupervised) structure of a dataset.","NMF can also be viewed as a bi-clustering approach. The features are clusters of attributes and cases. The H matrix provides the clustering of the rows of V and W the assignment or Wthe clustering of the columns of V and Hthe assignment.","Typically N is of the order of 1,000-10,000 (dense matrix), 10,000-1,000,000 (sparse matrix), M is 100-10,000 (dense matrix), 1,000-1,000,000 (sparse matrix) and K is 5-100. The data matrix is typically dense for numerical data and sparse for text.","One starts with random initializations of W and H and then multiplies them and compares them with the original matrix V using a cost function (e.g. Euclidean distance) The process is iterated until the cost function falls below a given threshold or a maximum number of iterations are achieved.","Text Mining involves extracting information from unstructured data. The datasets are high dimensional and sparse. NMF involves factorizing the document-term matrix based on different constraints. One widely used approach for text mining is latent semantic analysis. This algorithm focuses on dimensionality reduction. By comparing the vectors for two adjoining segments of text in a high dimensional semantic space, the method provides a characterization of the degree of semantic relatedness between the segments.","An example of a process  of iteratively generating the factorization matrices W and H is shown in . Process  begins with step , in which data matrix V is read. In step , the factorization matrices W and H are defined and initialized, preferably with a random number in each entry. In step , iterations are performed, each iteration including computing the product of W and H (step A), updating W and H based on V\u2032, the computed product of W and H (step B), and computing the error between V\u2032, the computed product of W and H, and the original data matrix V (step C).","In order to estimate the factorization matrices, a cost function needs to be defined that quantifies the approximation V\u02dcV\u2032=WH. Two cost functions are considered for finding optimal non-negative factorizations. One algorithm focuses on minimizing the least square error, while the second one minimizes the generalized Kullback-Leibler divergence.","The Euclidian distance cost function:",{"@attributes":{"id":"p-0032","num":"0031"},"maths":{"@attributes":{"id":"MATH-US-00002","num":"00002"},"math":{"@attributes":{"overflow":"scroll"},"mrow":{"msup":{"mrow":{"mo":["\uf605","\uf606"],"mrow":{"mi":["V","WH"],"mo":"-"}},"mn":"2"},"mo":"=","mrow":{"munder":{"mo":"\u2211","mi":"ij"},"mo":"\u2062","msup":{"mrow":{"mo":["(",")"],"mrow":{"msub":[{"mi":["V","ij"]},{"mrow":{"mo":["(",")"],"mi":"WH"},"mi":"ij"}],"mo":"-"}},"mn":"2"}}}}},"br":{}},"The choice of the update rules used to update W and H in step B is based on the cost function such that the iterative update rules converge to a local maximum of the objective function. The multiplicative update rule that is preferred enforces that the Euclidean distance \u2225V\u2212WH\u2225 is non-increasing under the following update rule:\n\n()\/()()\/()\n","The iterative update is continued until the Euclidean cost function \u2225V\u2212W H\u2225 crosses a threshold or a maximum number of iterations is achieved (typically 50-200).","Once the iterations are completed, the factorization matrices W and H are output in step .","The features discovered by NMF can be grouped together to generate a taxonomy. For example, by running a hierarchical clustering algorithm on the features extracted by NMF, the text documents can be grouped into reasonable cohesive clusters.","An example of an implementation  of NMF, according to the present invention, is shown in . Exemplary implementation  includes a server Application Programming Interface (API) , PLS\/SQL procedures (PP) , and NMF table functions . The server API  for Non-negative Matrix Factorization may be composed of several PL\/SQL procedures that allow the user to construct a specification for a Non-negative Matrix Factorization model as the result of a build task. Typical parameters that may be specified include: Number of Iterations for Convergence, Number of Features to be returned, Convergence Factor, and Stopping Criteria used to decide when NMF converged. System defaults may be provided if any parameters are not specified. The outputs from server API  are passed to PP .","PP  includes two main functions\u2014PP for build  and PP for apply . PP  for the build process acts as a wrapper to the Table Function routines  for Non-negative Matrix Factorization model build and basically performs preprocessing of input data. The build PL\/SQL procedure may be invoked with parameters such as the table name for build input data, the name of the mining function the build function is to use to build the Non-negative Matrix Factorization model, the name to be given to the model when persisting the model, and the required mining function settings and algorithm settings.","The PL\/SQL procedure  for build may perform processing  such as that shown in . Processing  begins with step , in which input parameters, such as data mining function settings are read. In step , un-nesting nested columns, mapping attributes, and exploding categorical attributes prepare the filtered input data table. In step , a Table Function build routine is called to build an NMF model. In step , the metadata resulting from the model build is saved to the RDBMS. In step , the temporary tables used by the adaptor module  are dropped.","The PP for the apply process acts as a wrapper to the NMF Apply Table Function.","The PP procedure  for apply may perform processing  such as that shown in . Processing  begins with step , in which input parameters, such as the table name for apply input data, the name of the model upon which the apply function is to be performed, and the name of the output table, are read In step , the filtered input table data categorical attributes are exploded into a set of binary columns, nested table columns are un-nested, and the attributes are mapped to numbers, if necessary. In step , the apply table function routine is called to apply the NMF model. In step , the temporary tables created by the adaptor module are dropped.","An exemplary block diagram of a database management DBMS  is shown in . DBMS  is typically a programmed general-purpose computer system, such as a personal computer, workstation, server system, and minicomputer or mainframe computer. DBMS  includes one or more processors (CPUs) A-N, input\/output circuitry , network adapter , and memory . CPUs A-N execute program instructions in order to carry out the functions of the present invention. Typically, CPUs A-N are one or more microprocessors, such as an INTEL PENTIUM\u00ae processor.  illustrates an embodiment in which DBMS  is implemented as a single multi-processor computer system, in which multiple processors A-N share system resources, such as memory , input\/output circuitry , and network adapter . However, the present invention also contemplates embodiments in which DBMS  is implemented as a plurality of networked computer systems, which may be single-processor computer systems, multi-processor computer systems, or a mix thereof.","Input\/output circuitry  provides the capability to input data to, or output data from, database\/DBMS . For example, input\/output circuitry may include input devices, such as keyboards, mice, touchpads, trackballs, scanners, etc., output devices, such as video adapters, monitors, printers, etc., and input\/output devices, such as, modems, etc. Network adapter  interfaces database\/DBMS  with Internet\/intranet . Internet\/intranet  may include one or more standard local area network (LAN) or wide area network (WAN), such as Ethernet, Token Ring, the Internet, or a private or proprietary LAN\/WAN.","Memory  stores program instructions that are executed by, and data that are used and processed by, CPU  to perform the functions of DBMS . Memory  may include electronic memory devices, such as random-access memory (RAM), read-only memory (ROM), programmable read-only memory (PROM), electrically erasable programmable read-only memory (EEPROM), flash memory, etc., and electro-mechanical memory, such as magnetic disk drives, tape drives, optical disk drives, etc., which may use an integrated drive electronics (IDE) interface, or a variation or enhancement thereof, such as enhanced IDE (EIDE) or ultra direct memory access (UDMA), or a small computer system interface (SCSI) based interface, or a variation or enhancement thereof, such as fast-SCSI, wide-SCSI, fast and wide-SCSI, etc, or a fiber channel-arbitrated loop (FC-AL) interface.","The contents of memory  varies depending upon the functions that DBMS  is programmed to perform. One of skill in the art would recognize that these functions, along with the memory contents related to those functions, may be included on one system, or may be distributed among a plurality of systems, based on well-known engineering considerations. The present invention contemplates any and all such arrangements.","In the example shown in , memory  includes server API , PL\/SQL procedures , PP for build , PP for apply , NMF build table functions , NMF apply table functions , database access routines , database , and operating system . Server API  provides a programming interface to client software. PP  includes two main functions\u2014PP for build  and PP for apply . PP for build  acts as a wrapper to the Table Function routines  for Non-negative Matrix Factorization model build and basically performs preprocessing of input data. The PP for apply acts as a wrapper to the NMF Apply Table Functions . Database access routines  provide the capability to access one or more databases, such as those included in database , in order to retrieve information for display. Database  provides the capability to store, organize, modify, and extract information from one or more data tables included in database . Operating system  provides overall system functionality.","From a technical standpoint, databases can differ widely. The terms relational, network, flat, and hierarchical all refer to the way a database organizes information internally. The internal organization can affect how quickly and flexibly you can extract information.","Each database includes a collection of information organized in such a way that computer software can select and retrieve desired pieces of data. Traditional databases are organized by fields, records, and files. A field is a single piece of information; a record is one complete set of fields; and a file is a collection of records. An alternative concept in database design is known as Hypertext. In a Hypertext database, any object, whether it be a piece of text, a picture, or a film, can be linked to any other object. Hypertext databases are particularly useful for organizing large amounts of disparate information, but they are not designed for numerical analysis.","Typically, a database includes not only data, but also low-level database management functions, which perform accesses to the database and store or retrieve data from the database. Such functions are often termed queries and are performed by using a database query language, such as Structured Query Language (SQL). SQL is a standardized query language for requesting information from a database. Historically, SQL has been a popular query language for database management systems running on minicomputers and mainframes. Increasingly, however, SQL is being supported by personal computer database systems because it supports distributed databases (databases that are spread out over several computer systems). This enables several users on a local-area network to access the same database simultaneously.","Most full-scale database systems are relational database systems. Small database systems, however, use other designs that provide less flexibility in posing queries. Relational databases are powerful because they require few assumptions about how data is related or how it will be extracted from the database. As a result, the same database can be viewed in many different ways. An important feature of relational systems is that a single database can be spread across several tables. This differs from flat-file databases, in which each database is self-contained in a single table.","Typically, a database application, includes data entry functions and data reporting functions. Data entry functions provide the capability to enter data into a database. Data entry may be performed manually, by data entry personnel, automatically, by data entry processing software that receives data from connected sources of data, or by a combination of manual and automated data entry techniques. Data reporting functions provide the capability to select and retrieve data from a database and to process and format that data for other uses. Typically, retrieved data is used to display information to a user, but retrieved data may also be used for other functions, such as account settlement, automated ordering, numerical machine control, etc.","As shown in , the present invention contemplates implementation on a system or systems that provide multi-processor, multi-tasking, multi-process, and\/or multi-thread computing, as well as implementation on systems that provide only single processor, single thread computing. Multi-processor computing involves performing computing using more than one processor. Multi-tasking computing involves performing computing using more than one operating system task. A task is an operating system concept that refers to the combination of a program being executed and bookkeeping information used by the operating system. Whenever a program is executed, the operating system creates a new task for it. The task is like an envelope for the program in that it identifies the program with a task number and attaches other bookkeeping information to it. Many operating systems, including UNIX\u00ae, OS\/2\u00ae, and WINDOWS\u00ae, are capable of running many tasks at the same time and are called multitasking operating systems. Multi-tasking is the ability of an operating system to execute more than one executable at the same time. Each executable is running in its own address space, meaning that the executables have no way to share any of their memory. This has advantages, because it is impossible for any program to damage the execution of any of the other programs running on the system. However, the programs have no way to exchange any information except through the operating system (or by reading files stored on the file system). Multi-process computing is similar to multi-tasking computing, as the terms task and process are often used interchangeably, although some operating systems make a distinction between the two.","It is important to note that while the present invention has been described in the context of a fully functioning data processing system, those of ordinary skill in the art will appreciate that the processes of the present invention are capable of being distributed in the form of a computer readable medium of instructions and a variety of forms. Examples of computer readable media include recordable-type media such as floppy disc, a hard disk drive, RAM, and CD-ROM's.","Although specific embodiments of the present invention have been described, it will be understood by those of skill in the art that there are other embodiments that are equivalent to the described embodiments. Accordingly, it is to be understood that the invention is not to be limited by the specific illustrated embodiments, but only by the scope of the appended claims."],"BRFSUM":[{},{}],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"BRIEF DESCRIPTION OF THE DRAWINGS","p":["Further features and advantages of the invention can be ascertained from the following detailed description that is provided in connection with the drawings described below:",{"@attributes":{"id":"p-0014","num":"0013"},"figref":"FIG. 1"},{"@attributes":{"id":"p-0015","num":"0014"},"figref":"FIG. 2"},{"@attributes":{"id":"p-0016","num":"0015"},"figref":"FIG. 3"},{"@attributes":{"id":"p-0017","num":"0016"},"figref":"FIG. 4"},{"@attributes":{"id":"p-0018","num":"0017"},"figref":"FIG. 5"},{"@attributes":{"id":"p-0019","num":"0018"},"figref":"FIG. 6"}]},"DETDESC":[{},{}]}
