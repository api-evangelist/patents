---
title: Security management in a group based environment
abstract: Techniques are provided for securely storing data files in, or retrieving data files from, cloud storage. A data file transmitted to cloud storage from a client in an enterprise computing environment is intercepted by at least one network device. Using security information received from a management server, the data file is converted into an encrypted object configured to remain encrypted while at rest in the cloud storage.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08745384&OS=08745384&RS=08745384
owner: Cisco Technology, Inc.
number: 08745384
owner_city: San Jose
owner_country: US
publication_date: 20110811
---

{"@attributes":{"id":"description"},"BRFSUM":[{},{}],"heading":["TECHNICAL FIELD","BACKGROUND","DESCRIPTION OF EXAMPLE EMBODIMENTS"],"p":["The present disclosure relates to techniques for managing security in a distributed, group based environment.","As data storage demands have increased, a new trend in data storage, referred to as cloud storage, has emerged. Cloud storage generally comprises multiple servers (physical and\/or virtual) that are hosted external to a computing enterprise, and which are accessible to the enterprise through a Wide Area Network (WAN). The cloud storage is generally hosted by a third party service provider, and storage may be purchased for use by the enterprise on an as-needed basis. This allows for expansion of storage capacity without the costs of adding dedicated storage servers in the enterprise.","Overview","Techniques are provided for securely storing data files in, or retrieving data files from, cloud storage. More particularly, a data file transmitted to cloud storage from a client in an enterprise computing environment is intercepted by at least one network device. Using security information received from a management server, the data file is converted into an encrypted object configured to remain encrypted while at rest in the cloud storage.","Example Embodiments",{"@attributes":{"id":"p-0015","num":"0014"},"figref":"FIG. 1","b":["5","5","10","1","10","2","15","1","15","2","20","1","20","2","25","1","25","2","30","1","30","2","30","1","30","2","31","1","31","2","32","1","32","2","33","1","33","2","5","35","5","40","45"]},"In the example of , data centers () and () are disposed at geographically distributed locations, but are substantially similar. For ease of reference, storage of data files will be described with reference to data center (), while retrieval of date files will be described with reference to data center ().","Client () in data center () is a device configured to generate, receive and\/or access data files for storage in cloud storage . Cloud storage  comprises, for example, a plurality of servers ()-(N) (physical and\/or virtual) and data storage systems ()-(N) that are hosted external to a computing enterprise, and which are accessible to the enterprise through a Wide Area Network (WAN). The cloud storage  is generally hosted by a third party service provider, and storage may be purchased for use by the enterprise on an as-needed basis. Client () may be, for example, a computer (desktop, laptop, etc.), mobile device, server, etc. A data file  is initially accessed from memory () in client () using processor (). Data file  is then forwarded to network device () via network interface unit () and switch ().","Network device () is a device configured to operate with cloud storage Application Program Interfaces (APIs) in order to store data in cloud storage  via a network connection, such as a Local Area Network (LAN) or Wide Area Network (WAN). Network device () may be a secure storage gateway or router. Network devices () and () will be referred to herein as secure routers.","In certain networks, data in motion (i.e., data that is traversing a network) is secured using the Transport Layer Security (TLS) protocol, the Secure Sockets Layer (SSL) protocol, or the like. However, in such techniques, the data is only secure during the actual transmission, and is not secured as data at rest. Data at rest refers to data that is not in motion or temporarily residing in computer memory to be read or updated. Data at rest may include archived data or reference files, data files stored on hard drives, files on backup medium, files stored in a storage area network (SAN), etc. Secure router (), along with management server (), enable new techniques for securing data file  while at rest in cloud storage .","Before storage of data file  into cloud storage , secure router () use cryptographic algorithms to convert data file  into an encrypted object  that, as described further below, includes the encrypted data and other information. More specifically, secure router () generates a unique random key per data file, and secures the file using this key. Also as described further below, the random file encrypting key may also be encrypted using a master key provided by management server ().","The encryption operations are based on security information  provided to secure router () by management server (). As used herein, security information may include, but is not limited to, encryption\/decryption information, including encryption keys, access control polices, etc. The policies within the security information may also contain information about the services that may be applied on files or directories, like encryption, compression, local caching, retention values, etc.","Returning to , the random file encrypting key, generally in the encrypted format, is included in a metadata header generated by secure router (). That is, the metadata header contains a keyed\/token that identifies which key\/encryption algorithm was used to encrypt the unique random key. In certain circumstances, there is one to one mapping of the master key to keyed\/token, while in other circumstances, the same master key may be used to encrypt multiple different file encrypting keys, thus a master key is mapped to multiple keyed\/tokens.","The metadata header is then attached to the encrypted version of data file . As such, the metadata header and the encrypted version of data file  collectively comprise encrypted object  that is stored in cloud storage  (more particularly, a storage system ()-(N)). Encrypted object  is generated such that it maintains its encrypted format during transmission to cloud storage  and while at rest in the cloud storage. Data file  is not decrypted until it moves from cloud storage  back to enterprise . Further details of the encryption process and the generation of an encrypted object are provided below with reference to .","As detailed below, prior to encrypting data file , secure router () first authenticates client () to ensure that the client has permission to store data file  in the cloud storage. Secure router () authenticates client () locally using security information  received from management server (), or secure router () authenticates client () with the assistance of management server (). In certain circumstances, once the identity of a client is determined through this authentication, the identity of the client may be maintained by the management server ().","Once encrypted object  is stored in cloud storage , the data file  contained therein may be later retrieved by a client, such as client (), in enterprise . More particularly, processor () in client () generates a request for the data file  that is forwarded to secure router () via network interface unit () and switch (). Prior to processing this request, secure router () first authenticates client () to ensure that the client has permission to read the data file . Secure router () authenticates client () locally using security information  received from management server (), or secure router () authenticates client () with the assistance of management server (). Further details regarding the authentication of a client are provided in greater detail below.","Following proper authentication, secure router () obtains encrypted object  from cloud storage . More specifically, secure router () will check the location of the data file  using its local cache. If the location of the file cannot be found, secure router () will send a request to management server () to obtain the file location. Once the file location is obtained, secure router () may store the location in its cache for faster access in the future. Secure router () then sends a request for the object  to cloud storage .","After encrypted object  is received, secure router () decrypts the object using security information  received from management server (), and forwards data file  to client (). In other words, secure router () will apply policies for decryption, decompression, etc., in order to extract the original data file  from encrypted object . This extraction is performed using the random file generating key stored in the header of object  and, if the random key is also encrypted, the master key noted above. Data file  may be used by client () for one or more operations and\/or may be stored in memory (). The authentication of clients and the decryption of objects using security information are described in greater detail below.","As noted above, secure routers () and () operate with management servers () and () to authenticate clients () and (). Before such operations occur, secure routers () and () are authenticated by management servers () and (), respectively, to verify that the routers are enabled and allowed to implement the desired security techniques. This initial authentication includes registration of secure routers () and () as members of a class or group of devices, referred to herein as an access group, that use the same security information. More specifically, management servers ()-() maintain and manage different sets of security information that are each used by different groups of devices. These groups may include, for example, a group of devices that use one particular or type of master key to encrypt data files, or a group of devices that enforce access policies differently than a second group. Secure routers () and () are configured to initially register with management servers () and (), respectively, as a member of one of the different groups. The initial group registration determines, for example, what type of encryption will be used by the router, what encryption keys (master keys) should be used to encrypt randomly generated file encrypting keys, how clients should be authenticated, etc. As such, each group has different access policies that are enforced or carried out by secure routers () and ().","The example of  has been described with reference to the authentication of clients () and () by secure routers () and (), respectively, optionally with the assistance of management servers () and (), respectively. In certain circumstances, the authentication is not controlled by management servers () and (), but rather by a separate access control server . Access control server  is a separate appliance (i.e., separate from management servers () and ()) that is configured to communicate directly or indirectly with secure routers () and (). In such circumstances, when authentication of clients () and () is desired, the access control or authentication information may be retrieved by secure routers () and () from access control server  rather than from management servers () and (). Access control server  may initially receive the authentication information from one or more of management servers () and (), and one of the management servers () and () may also selectively provision the authentication control to access control server  as desired. Management servers () and () also notify secure routers () and (), respectively, that authentication should be requested from access control server .",{"@attributes":{"id":"p-0030","num":"0029"},"figref":["FIG. 1","FIG. 1"],"b":["20","1","20","2","10","1","10","2","20","1","20","2","20","1","20","2","20","1","20","1","15","1","15","2","20","1"]},{"@attributes":{"id":"p-0031","num":"0030"},"figref":"FIG. 1","b":["10","1","10","2","10","1","10","2"]},"As noted above, during operation subsequent to the initial registration, secure routers () and () will authenticate clients () and (), respectively, upon requests received there from. As such, in the example of , there are two different authentications that occur; the authentication of clients () and () during storage\/retrieval of data, and the initial authentication of secure routers () and () and registration thereof to a specific access group.","In summary of the above, management servers () and () provide centralized authentication of network devices (secure routers () and ()) prior to operation and centralized management and distribution of security information (i.e., central management and distribution of access policies, keys, etc.). Additionally, secure routers () and () are configured to intercept data files based on security polices downloaded from management servers () and (), verify access of clients () and () before processing requests there from, and, as described below, provide abstraction of cloud storage services and support multi-tenant environments. Further details of the authentication are provided below.",{"@attributes":{"id":"p-0034","num":"0033"},"figref":["FIG. 2","FIG. 2"],"b":["70","70","10","15","1","20","25","30","1","30","1","31","1","32","1","33","1","70","75","1","75","2","15","2","15","3","30","2","30","3","75","1","30","4","30","5","75","2","70","45","40","1","40","2","40"]},"In the example of , data center  and branch locations () and () are disposed at geographically distributed locations. Clients () and () may be, for example, computers, mobile devices, servers, etc. All clients () and () are configured to store data files in, or retrieve data files from, cloud storage . However, for ease of reference, data file storage will be described with reference to client () in data center , while data file retrieval will be described with reference to client () in branch location ().","Similar to the example of , data center  includes a client () configured to generate, receive or access data files for storage in cloud storage . In this example, a data file  is initially accessed from memory () using processor (). Data file  is then forwarded to secure router () via network interface unit () and switch . Secure router (), along with management server , enable new techniques for securing data file  while at rest in cloud storage .","Before storage of data file  into cloud storage , secure router () is configured to convert the data file into an encrypted object . More specifically, secure router () encrypts data file  using a random file encrypting key generated by the router. Optionally, the random file encrypting key may also be encrypted using security information received from management server .","The random file encrypting key, generally in the encrypted format, is included in a metadata header that is attached to the encrypted version of data file . This header and the encrypted version of data file  collectively comprise an encrypted object  that is stored in cloud storage . Encrypted object  is generated such that it maintains its encrypted format during transmission to cloud storage  and while at rest in the cloud. Further details of the encryption process and the generation of an encrypted object are provided below with reference to .","Prior to encrypting data file , secure router () first authenticates client () to ensure that the client has permission to store data file  in the cloud storage. Secure router () authenticates client () locally using security information  received from management server , or secure router () authenticates client () with the assistance of management server . Further details regarding the authentication of a client are provided in greater detail below.","Once encrypted object  is stored in cloud storage , the data file  contained therein may be later retrieved by one or more of clients ()-(). To retrieve data file , processor () in client () generates a request for the data file that is forwarded to secure router () via network interface unit (). Prior to processing this request, secure router () first authenticates client () to ensure that the client has permission to read data file . Secure router () authenticates client () locally using security information  received from management server , or secure router () authenticates client () with the assistance of management server .","Following proper authentication, secure router () obtains encrypted object  from cloud storage . Secure router () then decrypts object  using security information  received from management server , and forwards data file  to client (). In other words, secure router () extracts the original data file  from the encrypted object. This extraction is performed using the random file generating key stored in the header of object  and, if the random key is also encrypted, the master key noted above. Data file  may be used by client () for one or more operations and\/or stored in memory (). The authentication of clients and the decryption of objects using security information are described in greater detail below.","As noted above, secure routers ()-() operate with management server  to store\/retrieve data files, and to authenticate clients ()-(). As noted above, before such operations occur, secure routers ()-() are authenticated by management server  to verify that the routers are enabled and allowed to implement the desired security techniques. This initial authentication includes registration of secure routers ()-() with management server  as a member of a class or group of devices, referred to herein as an access group, as described above with reference to . As noted, each access group has different access policies that are enforced or carried out by secure routers ()-().","The example of  has been described with reference to the authentication of clients () and () by secure routers () and () through the assistance of a management server  positioned in data center . Management server  communicates security information  to secure router () using the WAN  of enterprise . Similarly, management server  is also configured to provide security information  to secure router () via WAN . It would be appreciated that the use of one management server  in  is illustrative, and additional management servers may be added.","As noted,  illustrates examples in which authentication of a client is controlled by management server . However, it would be appreciated that, in certain circumstances, authentication of clients ()-() may be controlled by a separate access control server (not shown) as described above with reference to .",{"@attributes":{"id":"p-0045","num":"0044"},"figref":"FIG. 2","b":["75","1","75","2"]},"As noted above, security information is managed by management server , and, in certain circumstances security information, such as encryption keys, may be stored on the management server. However, in certain computing enterprises, the ability to store encryption keys is also present as a result of conventional security techniques. The example of  is designed to take advantage of this convention storage. More specifically, the conventional storage is shown in  as a key database . This key database  is an existing key storage device in the enterprise that the management server  uses for encryption key storage. The encryption keys may be stored in database  in an encrypted format or as clear-text. In certain circumstances, a global command-line interface (CLI) is provided on management server  to configure external database .","In summary of the above, management server  provides centralized authentication of network devices (secure routers ()-()) prior to operation and centralized management and distribution of security information management (i.e., central management and distribution of access policies, keys, etc.). Additionally, secure routers ()-() are configured to intercept data files based on security polices downloaded from management server , verify access of clients ()-() before processing requests there from, and, as described below, provide abstraction of cloud storage services and support multi-tenant environments.",{"@attributes":{"id":"p-0048","num":"0047"},"figref":["FIG. 3","FIG. 3"],"b":["105","1","105","2","20","105","1","105","2","15","1","15","2","30","1","30","2","100","1","30","3","30","4","100","2","40","1","40","2","40"]},"In contrast to the examples of , in the example of  management server  is hosted by a third-party in an environment  that is external to enterprises () and (). The third-party may be the provider of cloud storage , or another party that controls security.","All clients ()-() are configured to store data in, or retrieve data from, cloud storage , as described above with reference to the clients of . Clients ()-() may be, for example, computers, mobile devices, servers, etc.","As previously noted, network devices, such as routers () and (), communicate with management servers, such as server , for a number of reasons, including authentication of the routers, authentication of clients, download of security information, etc. In the example of , this communication is enabled via the Internet  through a network device (router)  in environment .","Similar to the examples of , secure routers () and () are authenticated by server  and are registered to a specific access group. However, in this example, routers () and () are each registered to different access groups. More specifically, it is important that the confidentiality of data files stored in cloud storage  is maintained with respect to non-authorized parties (i.e., outside parties that are not permitted to participate in data storage), but also between the two enterprises () and (). As such, the security information  provided to secure router () in enterprise () includes a certain set of policies and encryption information, while security information  provided to secure router () in enterprise () includes another set of policies and encryption information. Due to the subsequent authentications of clients during data file storage or retrieval, separation and confidentiality of data files between the two enterprises () and () may be maintained.",{"@attributes":{"id":"p-0053","num":"0052"},"figref":["FIG. 4","FIG. 4","FIG. 1"],"b":["30","1","15","1","20","1","35","40"]},"As noted above, server () is configured to maintain different sets of security information that may be accessed and used by different groups of network device, referred to herein as access groups. Also as noted, secure router () is first authenticated and registered to one of these groups by management server (). More particularly, secure router () generates and forwards a registration request  to management server (). Upon receiving this request, at  management server () authenticates secure router () (i.e., verifies that secure router () is able and authorized to participate in the security operations). Management server () also assigns secure router () to a particular access group, thereby defining\/generating security information (security\/access polices, encryption keys and other information) for use by secure router (). Management server () may assign secure router () to an access group using information in the registration request . Alternatively, registration request  includes an assertion by secure router () that the router is entitled to be a member of a particular access group, or is entitled to certain access levels. In such circumstances, management server () is configured to validate theses assertions and assign secure router () to the requested group, a different group, or to select a group having the requested access levels.","After authentication and access group assignment, management server () pushes or downloads the security information  associated with the selected access group to secure router (). In other words, management server () issues the policies and master key for the selected access group. As noted above, in certain circumstances, access control may be delegated by management server () to access control server . In such situations, the download of security information  may include a notification that access control has been given to access control server .","As previously noted, clients within an enterprise may store data in cloud storage  and\/or retrieve data from the cloud storage. In , a data read or retrieval request  is generated by client () and is intercepted by secure router () according to one or more policies contained in the security information received from server (). It would be appreciated that secure router () is configured to intercept\/proxy to a number of different protocols utilized by client () including, but not limited to, Hypertext Transfer Protocol (HTTP), Hypertext Transfer Protocol Secure (HTTPS), Representation State Transfer protocol (REST), Simple Object Access Protocol (SOAP), File Transfer Protocol (FTP), Network File System (NFS) protocol, Common Internet File System (CIFS) protocol, etc.","At , secure router () applies access control policies contained in the received security information to authenticate client () (i.e., verifies that client () is authorized to retrieve the requested data). Secure router () may implement this access control with the assistance of one of management server () or access control server . In such circumstances, upon intercepting the data retrieval request , secure router () sends a request (A) (to management server ()) or a request (B) (to access control server ) requesting that the server verify that client () is authorized to retrieve the requested data. Management server () or access control server  performs the verification and then issues a response  to secure router ().","If the authentication of the client is unsuccessful, the retrieval request is terminated. However, if client () is allowed to retrieve the data file, secure router () issues a request  to cloud storage  for the desired data file. Cloud storage  responds by sending an encrypted object  that contains the data file to secure router (). At , secure router () decrypts object  to extract the desired data file, and may also perform a check of the integrity of the data file. Secure router () then provides data file  to client ().","It is to be appreciated that there are many cloud storage providers using non-standard communication protocols. Secure router () may be configured to operate with these different protocols. That is, secure router () is configured to generate and receive messages using different cloud service provider protocols.","As noted above, client () may also store a data file  in cloud storage . In such circumstances, data file  generated by client () is intercepted by secure router (). At , secure router () authenticates client () (i.e., verifies that client () is authorized to write the requested data file). Secure router () may authenticate client () with the assistance of one of management server () or access control . More specifically, upon intercepting the data , secure router () sends a request (A) (to management server ()) or a request (B) (to access control server ) requesting that the server verify that client () is authorized to write the data. Management server () or access control server  performs the verification and then issues a response  to secure router ().","If the authentication of the client is unsuccessful, the write request is terminated. However, if client () is allowed to write the data, at  secure router () generates an integrity check of data , and then generates an encrypted object  that contains an encrypted version of the data file and other information, including the integrity check. Secure router () then forwards encrypted object  to cloud storage . Encrypted object  is stored in cloud storage, and remains encrypted while at rest in the cloud storage. Cloud storage  will issue a response  indicating success or failure of the storage of object , and secure router () will report the status  to client ().",{"@attributes":{"id":"p-0062","num":"0061"},"figref":["FIG. 5","FIG. 5","FIG. 2"],"b":["30","2","15","2","75","1","30","4","15","3","75","2","20","40","35"]},"As noted above, a management server  is configured to maintain different sets of security information that may be accessed and used by different access groups. In the example of , secure routers ()-() each individually register with management server  as a member of one of these different access groups. More specifically, secure router () generates and forwards a registration request  to management server . At , following receipt of this request, management server  authenticates secure router () (i.e., verifies that secure router () is able and authorized to participate in the security operations). Management server  also assigns secure router () to a particular access group, thereby defining security information for use by secure router (). Management server  may assign secure router () to an access group using information in the registration request . Alternatively, registration request  includes an assertion by secure router () that the router is entitled to be a member of a particular access group, or is entitled to certain access levels. In such circumstances, management server  is configured to validate theses assertions and assign secure router () to the requested group, a different group, or to select a group using the requested access levels.","After authentication and access group assignment, management server  downloads security information  associated with the selected access group to secure router (). In other words, management server  issues the policies and master key for the selected access group. As noted above, in certain circumstances, access control may be delegated by management server  to access control server . In such situations, the download of security information  may include a notification that access control has been given to access control server .","Similarly, secure router () generates and forwards a registration request  to management server . At , management server  authenticates and assigns secure router () to one of the access groups as described above with reference to secure router (). Following authentication of secure router (), management server  downloads security information to secure router () in substantially the same manner as described above with reference to secure router ().","As such, each secure router ()-() separately registers with management server  and receives security information associated with a particular access group. In the example of , secure routers ()-() are within the same enterprise  and are assigned to the same access group. However, in other circumstances, ()-() may be assigned to different access groups. For example, in one example, a multi-tenant or multi-enterprise environment is provided in which each secure router ()-() is associated with a different tenant. As such, secure router () (associated with tenant ) is assigned to a first access group while secure router () (associated with tenant ) is assigned to a second access group. Because the policies, encryption keys, etc., are different for each access group, confidentiality of data between the tenants may be preserved.","Returning to the example of , client () may store data in cloud storage . In such circumstances, secure router () intercepts a date file  generated by client () for storage in cloud storage . At , secure router () authenticates client () (i.e., verifies that client () is authorized to write the requested data) with the assistance of one of management server  or access control . More specifically, upon receiving the data , secure router () sends a request (A) (to management server ) or a request (B) (to access control server ) requesting that the server verify that client () is authorized to write the data. Management server  or access control server  performs the verification and then issues a response  to secure router ().","If the authentication of the client is unsuccessful, the write request is terminated. However, if client () is allowed to write the data, at  secure router () generates an integrity check of data , and then generates an encrypted object  that contains an encrypted version of the data and other information, including the integrity check. Secure router () then forwards encrypted object  to cloud storage . Encrypted object  is stored in cloud storage, and remains encrypted while at rest in the cloud storage. Cloud storage  will issue a response  indicating success or failure of the storage of object , and secure router () may report the status  to client ().","As previously noted, clients within an enterprise may also retrieve data files from cloud storage. In , a data file retrieval request  is generated by client () and intercepted by secure router (). At , secure router () authenticates client () (i.e., verifies that client () is authorized to retrieve the requested data file) with the assistance of one of management server  or access control . More specifically, upon receiving the data file retrieval request , secure router () sends a request (A) (to management server ) or a request (B) (to access control server ) requesting that the server verify that client () is authorized to retrieve the requested data. Management server  or access control server  performs the verification and then issues a response  to secure router ().","If the authentication of the client is unsuccessful, the read request is terminated. However, if client () is allowed to retrieve the data file, secure router () issues a request  to cloud storage  for the desired data file. Cloud storage  responds by sending an encrypted object  that contains the data file back to secure router (). At , secure router () decrypts object  to extract the desired data file, and may perform a check of the integrity of the desired data file. Secure router () then provides data file  to client ().","As previously noted, secure routers, as described herein, are configured to convert data files into encrypted objects for storage in cloud storage, as well as to decrypt such objects retrieved from cloud storage in order to extract desired data there from.  is a flowchart of a method  for the conversion of a data file into an encrypted object for storage in cloud storage, while  is a flowchart of a method  for the decryption of an object downloaded from cloud storage.","Referring first to , encryption method  is performed at a secure router in response to interception of a data file generated by a client. As described above with reference to , the encryption operations also occur subsequent to the authentication of the secure router, and assignment thereof to a selected access group. That is, the secure router has previously obtained any specific security information (i.e., access policies, which master key to use, cloud storage location, etc.) from the management server.","At , the secure router accesses a master key. This master key is generally part of the download of security information from the management server and, as such, may be stored within memory of the secure router. However, in certain circumstances, the master key may not be on the secure router, and is retrieved from the management server.","At , secure router generates a random file encrypting key that, as described below, is used to encrypt the data file received from the client. At , the secure router creates a metadata header for attachment to the data file. The header will include an identifier (ID) for the master key and possibly other information. At , the data file is encrypted using the random file encrypting key, and the random file encrypting key is encrypted using the master key obtained from the management server. As such, this method includes a two-step encryption process in which the data file is encrypted using the random key, and in which the random key is encrypted using the master key.","An integrity check value, which is a value that allows a secure router to validate the data file during subsequent decryption, is generated at  and may be placed as part of the header. At , the header, including the encrypted key and the integrity check value, is attached to the encrypted data file to form an encrypted object.","It is appreciated that the content of the encrypted object in the example of  is merely illustrative, and that other formats of the encrypted object are possible. For example, in one form the integrity check value may be omitted, while in other forms additional information may be added. For example, metadata such as Multipurpose Internet Mail Extension (MIME) type, original content length, etc. may also be included.","As noted, a secure router intercepts a request from a client for a data file stored in cloud storage. The secure router authenticates the client, downloads an encrypted object containing the data file from the cloud storage, and extracts the data file from the encrypted object.  is a flowchart of a method  performed to extract the data file from the encrypted object.","At , the secure router accesses a master key. This master key is generally part of the download of security information from the management server and, as such, may be stored within memory of the secure router. However, in certain circumstances, the master key may not be on the secure router, and is retrieved from the management server. The master key is the same master key that was used during the encryption of the requested data file.","As previously noted, an encrypted object contains an encrypted version of the data file, as well as the random file encrypting key that was used to encrypt the data file. However, the random key is also stored in an encrypted format. As such, at , the secure router uses the master key to decrypt the random key. At , the secure router uses the decrypted random key to decrypt the data file, and the data file may then be forwarded to the client.",{"@attributes":{"id":"p-0080","num":"0079"},"figref":"FIG. 8","b":["15","20","15","380","385","390","15","395","1","395","8","20","400","405","410","415","1","415","6","15","20","420"]},"Secure router  includes a plurality of interfaces that allow the router to operate with other devices or a user. Specifically, secure router  includes management interface (), a command-line interface (CLI) (), a client proxy interface (), a cloud storage interface (), and an access control interface (). Client proxy interface () enables interactions between secure router  and clients within an enterprise. Client proxy interface may support a number of different protocols including, but not limited to, HTTP, HTTPS, REST, SOAP, FTP, NFS, CIFS, etc. Similarly, cloud storage interface () enables interactions associated with storing an encrypted object in, or retrieving an encrypted object from, cloud storage. Cloud storage interface () may also supports a number of different protocols for communication with different cloud storage providers. Access control interface () enables interactions between secure router  and a management server  or an access control server during access control operations.","Secure router  also includes a policy enforcement module (), encryption\/decryption module (), and downloaded policy\/key storage (). As noted above, after registration of secure router  with management server , the management server downloads security information (access policies, keys, etc.) to the router. This security information is stored in downloaded security information storage (), and later accessed by policy enforcement module () and encryption\/decryption module (). Specifically, access polices are enforced by policy enforcement module (), and encryption\/decryption of data files and keys, generation of file encrypting keys, etc. are performed by encryption\/decryption module ().","Downloaded security information storage () on secure router  is non-volatile memory that may be part of memory , or a separate memory element. Functional modules ()-() may be implemented in combinations of hardware and software. In circumstances in which modules ()-() are implemented, at least in part, in software, the software may be stored in memory . The memory  may comprise read only memory (ROM), random access memory (RAM), magnetic disk storage media devices, optical storage media devices, flash memory devices, electrical, optical, or other physical\/tangible memory storage devices. Modules ()-() may include a microprocessor or microcontroller that executes instructions for the respective functional modules stored in memory . Alternatively, processor  may execute instructions for the functional modules. Thus, in general, the memory  may comprise one or more computer readable storage media (e.g., a memory device) encoded with software comprising computer executable instructions and when the software is executed (by processor  or processors in functional modules ()-()) it is operable to perform the operations described herein.","As noted above, management server  comprises a plurality of functional modules ()-(). More particularly, management server  includes an access control interface () that enables access control operations with secure router  and\/or an access control server. Management server  also includes a redundancy interface () that allows the management server  to exchange keys, policies, metadata, statistics, and other states information with one or more other management servers (not shown in ). If management server  were to fail, this information allows the other management server(s) can assume the functionality of management serve . Also provided is an auditing\/accounting module () that collects and maintains statistics and logs for the system. The collected information may be used to perform summarization, to output real time statistics, to perform data analysis and reporting on the system performance, obtain information regarding usage and debugging of the system, etc. In one example, entries logged by auditing\/accounting module () will include a date\/time stamp of when a file was accessed from which user\/client. Statistics logged by auditing\/accounting module () may include the number of read\/write operations to a particular cloud storage, and\/or reports may be generated periodically as to how much data was uploaded to a specific cloud during a predetermined time period. Auditing\/accounting module () may also determine the overall amount of data stored in a particular cloud, and\/or perform an analysis of the estimated cost of one cloud storage versus another based on a pricing model (computed by data storage on the cloud and how frequent it was accessed).","In certain aspects, management of keys is performed by management server  through a key management interface () and key generation and policy management module (). Additionally, keys are stored by default in local key storage (). Keys may be secured using an Internetwork Operating System (IOS) password module. The password module encrypts the master keys using a random private key or key derived from a user defined password before saving them to key storage (). In certain circumstances, an external database for keys may otherwise be used, such as database  of . Additionally, the keys are securely stored on management server  and persist for the lifetime of each object in the cloud that was encrypted with that key.","Furthermore, these techniques provide the optional capability for secure routers  to query the management server  for key material on an as-desired basis. For example, this query may be used when partial keying material is downloaded with security information.","Local key storage () on management server  is non-volatile memory that may be part of memory , or a separate memory element. Functional modules ()-() may be implemented in combinations of hardware and software. In circumstances in which modules ()-() are implemented, at least in part, in software, the software may be stored in memory . The memory  may comprise ROM, RAM, magnetic disk storage media devices, optical storage media devices, flash memory devices, electrical, optical, or other physical\/tangible memory storage devices. Modules ()-() may include a microprocessor or microcontroller that executes instructions for the respective functional modules stored in memory . Alternatively, processor  may execute instructions for the functional modules. Thus, in general, the memory  may comprise one or more computer readable storage media (e.g., a memory device) encoded with software comprising computer executable instructions and when the software is executed (by processor  or processors in functional modules ()-()) it is operable to perform the operations described herein.","The techniques described herein provide several advantages, including group based key management and distribution, group based policy management and distribution, distributed group policy enforcement, and distributed encryption. These techniques also provide integrated security services to data at rest through its life cycle in the cloud, including data confidentiality, data integrity, access control, and compliance.","The above description is intended by way of example only."],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"BRIEF DESCRIPTION OF THE DRAWINGS","p":[{"@attributes":{"id":"p-0004","num":"0003"},"figref":"FIG. 1"},{"@attributes":{"id":"p-0005","num":"0004"},"figref":"FIG. 2"},{"@attributes":{"id":"p-0006","num":"0005"},"figref":"FIG. 3"},{"@attributes":{"id":"p-0007","num":"0006"},"figref":"FIG. 4"},{"@attributes":{"id":"p-0008","num":"0007"},"figref":"FIG. 5"},{"@attributes":{"id":"p-0009","num":"0008"},"figref":"FIG. 6"},{"@attributes":{"id":"p-0010","num":"0009"},"figref":"FIG. 7"},{"@attributes":{"id":"p-0011","num":"0010"},"figref":"FIG. 8"}]},"DETDESC":[{},{}]}
