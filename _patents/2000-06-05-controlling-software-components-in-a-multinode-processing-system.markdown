---
title: Controlling software components in a multi-node processing system
abstract: A multi-node processing system includes a plurality of nodes in which various software components may be executed. To coordinate the control of the software components in the plural nodes, an instance of a manager module may be started in each of the nodes. In one example arrangement, the manager module may include a WINDOWS速 NT or WINDOWS速 2000 service control manager. In the WINDOWS速 NT or WINDOWS速 2000 environment, the software components that are controlled through the service control manager may be services. To perform control of the various software components, requests may be sent to the manager module instance in each of the nodes. The manager module then launches one or more server services in each node to perform the desired control task, which may be start the software component, monitor the software component, or terminate the software component.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=07685602&OS=07685602&RS=07685602
owner: Teradata US, Inc.
number: 07685602
owner_city: Miamisburg
owner_country: US
publication_date: 20000605
---

{"@attributes":{"id":"description"},"BRFSUM":[{},{}],"heading":["BACKGROUND","SUMMARY","DETAILED DESCRIPTION"],"p":["The invention relates to controlling software components in a multi-node processing system.","Software in a computer system may be made up of many layers. The highest layer is usually referred to as the application layer, followed by lower layers that include the operating system, device drivers (which usually are part of the operating system), and other layers. In a system that is coupled to a network, transport and network layers may also be present.","Software components may be installed and loaded as programs in a system. A program is an executable file, and when the program is executed, it is run as a process (e.g., in a UNIX system), a thread (e.g., in a WINDOWS\u00ae system), or some other execution unit. During operation of the system, various software components may be started to perform useful tasks.","Software components may be executed on different types of systems, including single processor systems, multiprocessor systems, or multi-node parallel processing systems. Examples of single processor systems include standard desktop or portable systems. A multiprocessor system may include a single node that includes plural processors running in the node. Such systems may include symmetric multiprocessor (SMP) systems. A multi-node parallel processing system may include multiple nodes that may be connected by an interconnect network. Software components may be executed on each of these nodes and run in parallel.","It is not always easy to control (e.g., start up, monitor, or terminate) processes in a multi-node parallel processing system. Because of the distributed nature of a system with multiple nodes, a mechanism may not always be available for control of the software components in the several nodes. Thus, for a parallel software application having software components that can run in a multi-node parallel processing system, a need continues to exist for a convenient and efficient method and apparatus to control software components in the multiple nodes.","In general, according to one embodiment, a method of controlling software components in a processing system having plural nodes includes receiving a request to start the system and determining one or more selected software components to start in each node. Services are invoked with a manager module to start the selected software components in the nodes of the processing system.","In general, according to another embodiment, a system includes a plurality of nodes and software components in corresponding nodes. A manager module controls the software components in the plural nodes and enables a monitoring module to monitor a status of at least one of the software components.","Other features and embodiments will become apparent from the following description, from the drawings, and from the claims.","In the following description, numerous details are set forth to provide an understanding of the present invention. However, it will be understood by those skilled in the art that the present invention may be practiced without these details and that numerous variations or modifications from the described embodiments may be possible. For example, although reference is made to use of WINDOWS\u00ae operating systems in some described embodiments, other embodiments may employ other types of operating systems.","Referring to , a multi-node parallel processing system  includes plural nodes (A, B) coupled by an interconnect network . Although two nodes are shown in , additional nodes may be coupled by the interconnect network . Each of the nodes (A, B) may be referred to as a \u201cnode .\u201d In the example embodiment of , the node A is a master node while the node B is a slave node. Multiple slave nodes may be coupled to the interconnect network .","The interconnect network  may be any of various types of networks. For example, the interconnect network  may be a local area network (LAN), a wide area network (WAN), or another type of network. Each of the nodes  includes a network interface to enable communication over the interconnect network .","The nodes A and B include respective operating systems  and . In one embodiment, the operating systems (, ) are WINDOWS\u00ae NT operating systems, WINDOWS\u00ae 2000 operating systems, or other WINDOWS\u00ae operating systems from Microsoft Corporation. In further embodiments, other types of operating systems may be used. Various software components may be executable in each of the nodes  in the system . Some of these components may be implemented as services, such as WINDOWS\u00ae NT services, which are background processes that are loaded at boot time or during operation of the system. A WINDOWS\u00ae NT service is a program that runs in a loop waiting for input, such as user requests from a control program or system events such as messages or process terminations.","In a WINDOWS\u00ae NT environment, a service is loaded and controlled by a service controller manager (SCM).  shows an SCM  in node A and an SCM  in node B. Services that may be executable in each node  include data servers, which are database management modules that control access to storage devices in each node .","In the master node A, an additional service is a query coordinator , which manages the communication of queries to the appropriate one of the data servers , , and  in response to receipt of a database query from a client. In further embodiments, other types of software applications, implemented as services, may be executable in the parallel processing system . As used here, a \u201cservice\u201d refers to a process or other execution unit that, while running, waits for predetermined inputs or events in the system to perform predefined tasks.","A database managed by the data servers and query coordinator may be an object relational database distributed among the plural nodes . In one example, the database is part of a data warehouse system that stores, manages, analyzes, and reports transaction data, e.g., retail transaction data. Generally, a data warehouse may include copies of transaction data that have been structured for query and analysis or reporting. For example, retail transaction data may track purchases made by users of goods and services from participating retail sources. The data warehouse system performs the collection, management, analysis, and reporting of such transaction data. The volume of data involved in a data warehouse system may be extremely large, typically in the gigabyte range and sometimes in the terabyte range.","A start procedure  may be invoked in the master node A to control startup of desired software components in each of the nodes . Through an application programming interface (API), the start procedure  cooperates with the SCM  and SCM  to control the startup of the query coordinator , the data servers , , and , and any other software component in the system .","In addition, other utilities may be employed to perform other control tasks in connection with the query coordinator  and data servers , , and . For example, such other control tasks may include terminating or shutting down various software components, monitoring the status of the software components, and changing configurations of the software components.","Referring to , further components of the master node A and slave node B are illustrated. In the master node A, a user interface  is provided through which the user can issue requests to perform various control tasks with respect to software components in the system . The user interface  may include a control panel, a utility, or other user interfaces (whether graphical or text). The start procedure  includes a Start service  and a Start.exe program . The Start service  is responsible for handling the WINDOWS\u00ae NT services protocol (including communication with the SCM ) and for initiating the Start.exe program . The start service  also monitors the status of the process it spawns, in this case the Start.exe process . As used here, when a program is executed, it is referred to as a process, which may refer to any execution unit, such as a thread in the WINDOWS\u00ae context or a process in the UNIX context.","The Start.exe process  acts as a service control program for the query coordinator  and the data servers , , and . The Start.exe process  starts the query coordinator  and data servers , , and  by launching, through the SCMs  and , their corresponding server services , , , and  (in the illustrated system ). The server service  is responsible for starting up the query coordinator , while the server services , , and  are responsible for starting up respective data servers , , and . In addition, each of the server services (, , , and ) is responsible for handling the WINDOWS\u00ae NT services protocol on behalf of a corresponding child process and for monitoring the child process (one of the query coordinator and data servers).","Once a child process (e.g., the query coordinator  or one of the data servers , , and ) is started, the server service , ,  or  monitors the child process and waits for the termination of the corresponding child process. When the child process terminates, the server service , ,  and  reports the exit code to the SCM ( or ) and kills itself.","Instructions associated with the various software applications, modules, routines, or services in the master node A may be executable on one or more control units . The instructions, and data associated with the instructions, may be stored in one or more storage units . A network interface  is provided to enable communication between the master node A and the interconnect network .","Similarly, the instructions of the various software applications, modules, routines, or services in the slave node B are executable on one or more control units . Instructions and data may be stored in one or more storage units  in the node B. A network interface  enables communication between the interconnect network  and the slave node B. The network interfaces  and  in respective nodes A and B may include network controller cards or chips. The network interfaces  and  may also include appropriate device drivers and transport and network stacks. As examples, the transport and network stacks may include TCP\/IP and\/or UDP\/IP stacks. IP stands for Internet Protocol, with versions described in Request for Comments (RFC) , entitled \u201cInternet Protocol,\u201d dated September 1981; and RFC 2460, entitled \u201cInternet Protocol, Version 6 (IPv6) Specification,\u201d dated December 1998. TCP is described in RFC 793, entitled \u201cTransmission Control Protocol,\u201d dated September 1981; and UDP is described in RFC 768, entitled \u201cUser Datagram Protocol,\u201d dated August 1980. TCP and UDP are transport layers for managing connections between network elements over an IP network.","Generally, in one aspect of some embodiments of the invention, a coordinated method and apparatus is provided to start software components in plural nodes in a parallel processing system. Instances of manager modules are started in each node, with a start procedure started in a master node. The start procedure issues requests to the manager module instances in each of the nodes to start respective services that are responsible for spawning the desired software components. In a WINDOWS\u00ae NT environment, the manager module is a service control manager, with an instance of the service control manager run on each of the nodes in the parallel processing system.","From a single node, desired software components may be started or otherwise controlled in a multi-node system. In addition, by using separate services (such as the starter service  and server services , , , and ) to handle the WINDOWS\u00ae NT services protocol, ease of software development is enhanced.","Referring to , a technique for starting the query coordinator  and data servers , , and  in the parallel processing system  is illustrated. A similar technique may be applied to other software components in the system . In response to a command to start the software components, which may be entered by a user or by some other event, the master node A launches (at ) the Start service . The Start service  then registers (at ) with the SCM . Next, the Start service  invokes (at ) the Start.exe program . Once started and executing, the Start.exe program  is referred to as the Start.exe process . Once it launches the Start.exe process , the Start service  enters (at ) its monitoring loop to monitor the Start.exe process .","The Start.exe process  determines (at ) the details of the configuration of the system . The details may include the number of nodes and processes to be started in each node. The Start.exe process  then sends a request to the SCMs  and  to launch (at ) the server service for each of the desired child processes in the nodes  of the system . Parameters are passed with the requests issued by the Start.exe process . In response, each server service registers (at ) with the SCMs  and . Each server service then spawns (at ) a corresponding child process (a query coordinator or data server). The server service then enters (at ) its monitoring loop, in which it monitors the status of the child processes, which includes the termination of the child process.","Referring to , the installation and configuration of services with the SCM (including the SCM  and SCM ) are illustrated. A configuration module  accesses configuration information files  that may include information pertaining to the nodes of the parallel processing system  as well as the software components, such as the Start service , the server services, the data servers, and the query coordinator that are executable in the nodes . In installing the services, corresponding entries in an SCM database  are created. A first entry  may contain information pertaining to the Start service . A second entry  may contain information pertaining to the query coordinator  and its associated server service, and a third entry  may contain information pertaining to the data server  and its associated server service in the master node A.","Services may also be installed and configured on remote nodes, including the slave node B. The SCM  in the slave node B includes an SCM database  including a first entry  containing information relating to the data server  (and its associated server service and a second entry  containing information relating to the data server  (and its associated server service).","Referring to , in response to a command to start the database application, the entry  in the SCM database  is used by the SCM  to initiate the Start service . The Start service  includes initiation instructions  for starting the Start.exe process . The Start service  also includes instructions  to enter into a monitoring loop after the Start service  has spawned the Start.exe process .","As further shown in , the Starter.exe process  includes instructions  to retrieve configuration data (relating to the nodes , data servers, and query coordinator) from the configuration files . The Start.exe process  also includes instructions  to start a child process (query coordinator or data server) in the nodes  of the parallel processing system  as well as instructions  to monitor the spawned child process. In the monitoring loop, the Start service  waits for the Starter.exe process  to terminate. The Starter service  may also accept status queries and shutdown commands.","Referring to , under control of the instructions , the Start.exe process  sends a request to the SCM  to start the query coordinator . In response, the SCM  uses the entry  of the SCM database  to initiate the first server service . The server service  contains instructions  to spawn the query coordinator . The server service  also contains instructions  for monitoring the spawned query coordinator .","Referring to , the Starter.exe process  issues a request to the SCM  to start the data server . Using information in the entry  of the SCM database , the SCM  invokes the server service , which contains instructions  to spawn the data server . As with the server service  for the query coordinator , the server service  also includes instructions  to monitor the status of the data server . Spawning of the query coordinator and data servers is accomplished in one embodiment using a WINDOWS\u00ae NT CreateProcess( ) call.","Referring to , the Starter.exe process  starts the data server  in the remote node B. The Starter.exe process  issues a request to the SCM , which forwards the request to the SCM  in the node B. Using information in the entry  of the SCM database , the SCM  invokes the server service  in the node B. Under control of instructions , the server service  spawns the data server . The server service  also includes instructions  to monitor the status of the data server .","Once the query coordinator  and all desired data servers , , and  have been started, the Starter.exe process  may enter its monitoring loop to check the start of server services , , , and  using status queries. Any failed data servers detected by the Starter.exe process  may be restarted by restarting the associated server service. If the failed component is the query coordinator , then the Starter.exe process  causes all server services to exit.","While the invention has been disclosed with respect to a limited number of embodiments, those skilled in the art will appreciate numerous modifications and variations therefrom. It is intended that the appended claims cover all such modifications and variations as fall within the true spirit and scope of the invention."],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"BRIEF DESCRIPTION OF THE DRAWINGS","p":[{"@attributes":{"id":"p-0010","num":"0009"},"figref":"FIG. 1"},"In  illustrates components in nodes of the multi-node parallel processing system of  in accordance with an embodiment.",{"@attributes":{"id":"p-0012","num":"0011"},"figref":"FIG. 3"},{"@attributes":{"id":"p-0013","num":"0012"},"figref":"FIGS. 4-9"}]},"DETDESC":[{},{}]}
