---
title: Protocol for remote visual composition
abstract: A method and protocol to create and control compositions on a remote device is disclosed. The protocol allows servers and other devices to take advantage of processing capabilities of remote devices to render compositions on the remote devices, thereby increasing server scalability and leveraging the remote device processing capabilities. The protocol provides high-level command packets to communicate resource command packets and control packets to the remote device with the payload having the information needed to process the commands.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=07711840&OS=07711840&RS=07711840
owner: Microsoft Corporation
number: 07711840
owner_city: Redmond
owner_country: US
publication_date: 20031023
---

{"@attributes":{"id":"description"},"BRFSUM":[{},{}],"heading":["FIELD OF THE INVENTION","BACKGROUND OF THE INVENTION","BRIEF SUMMARY OF THE INVENTION","DETAILED DESCRIPTION OF THE INVENTION"],"p":["This invention relates generally to electronic data processing and, more particularly, relates to managing the flow of graphics and control information in a computer system.","Digitally based multimedia, the combination of video and audio in a digital format for viewing on a digital device, and digital media such as images and animation is rapidly increasing in capacity and proliferation. Nearly every new personal computer manufactured today includes some form of multimedia. Sales of digital products such as cameras, video recorders, phones and televisions are steadily increasing. Multimedia is also becoming increasingly prevalent in the Internet realm as the growth of the Internet steadily and rapidly continues. Continued advances in these computer-based technologies have lead to not only increased performance, but also increased performance expectations by the users of such computer equipment. The industry has responded with increased speed for CD ROM drives, communication modems, and faster video and audio cards. These increased user expectations extend not only to hardware capability, but also to the processing capability of data.","For example, in areas such as multimedia and audio compression, data is processed so that it can be processed as a steady and continuous stream. This data is used in areas such as video conferencing, gaming, digital video discs (DVD), professional audio, telephony, and other areas where audio, video, or audio and video is digitally processed.","Rendering data almost always requires some form of processing among various modules in a system. For example, a video clip might require decoding in a dedicated hardware module, rasterizing the video fields in another hardware module, digital filtering of the audio in a software module, insertion of subtitles by another software module, parsing audio data to skip silent periods by a software module, etc. For streaming to work, the data must be processed as a steady stream and then rendered to audio and\/or video. If the data isn't processed quickly enough, however, the presentation of the data will not be smooth.","In conventional client-server rendering, the data is processed at the server and sent in discrete virtual frames to the client where the frames are rendered. Each frame contains the entire data and information needed to render the frame, even if there is no change in the item being rendered. For example, every animation frame has the full amount of data and information to render the frame even if the frame is identical to an adjacent frame. As a result, the transmission of the data consumes a large amount of available bandwidth. This bandwidth consumption reduces the number of clients a server can support. Additionally, hardware on a client machine cannot be taken advantage of to process the data. For example, the server in processing the data does not have the ability to use the hardware features of client hardware such as 3D graphic accelerators.","The invention provides a method and protocol to create and control compositions on a remote device. The protocol allows servers and other devices to take advantage of processing capabilities of remote devices to compose visual content on the remote display devices. This allows servers to handle more clients because the server does not need to process the functions (e.g., paint, draw, animate, etc.) used to actually render the composition. This results in the ability to leverage more of the client side hardware capabilities such as a client's 3D hardware acceleration pipe, and the client CPU. For example, the client can process animation functions, which allows the server to send information that describes the animation function instead of sending the individual static frames comprising the overall animate effect to the client.","The protocol provides basic high-level command packets that allow applications to communicate commands across a medium to create a composition on a client device. The payload of the packets may contain the actual commands for the components on the device to create the composition. The requesting application sends packets of commands to create a composition service, create a render target and render context, create a composition node, create resources for the composition node, and render the composition.","The packets from the requesting application are resource command packets and control packets. The resource command packets are routed to the relevant resources on the client. The control packets are used to control the composition state and to maintain a text glyph cache on the client machine. Notification packets are sent back to the requesting application.","Additional features and advantages of the invention will be made apparent from the following detailed description of illustrative embodiments which proceeds with reference to the accompanying figures.","The present invention provides the ability for a server to offload aspects of composition processing to client machines. This results in an increase in server side scalability. The high-level descriptive nature of the communication protocol results in a significantly smaller amount of data and information being sent to a client for rendering data than would be the case when sending data with an immediate-mode model.","Prior to describing the details of the invention, an overview of the exemplary device in which the invention may be implemented and the environment in which the invention may operate will be described. Turning to the drawings, wherein like reference numerals refer to like elements, the invention is illustrated as being implemented in a suitable computing environment. Although not required, the invention will be described in the general context of computer-executable instructions, such as program modules, being executed by a personal computer. Generally, program modules include routines, programs, objects, components, data structures, etc. that perform particular tasks or implement particular abstract data types. Moreover, those skilled in the art will appreciate that the invention may be practiced with other computer system configurations, including hand-held devices, multi-processor systems, microprocessor based or programmable consumer electronics, network PCs, minicomputers, mainframe computers, and the like. The invention may also be practiced in distributed computing environments where tasks are performed by remote processing devices that are linked through a communications network. In a distributed computing environment, program modules may be located in both local and remote memory storage devices.",{"@attributes":{"id":"p-0030","num":"0029"},"figref":"FIG. 1","b":["100","100","100","100"]},"The invention is operational with numerous other general purpose or special purpose computing system environments or configurations. Examples of well known computing systems, environments, and\/or configurations that may be suitable for use with the invention include, but are not limited to: personal computers, server computers, hand-held or laptop devices, tablet devices, multiprocessor systems, microprocessor-based systems, set top boxes, programmable consumer electronics, network PCs, minicomputers, mainframe computers, distributed computing environments that include any of the above systems or devices, and the like.","The invention may be described in the general context of computer-executable instructions, such as program modules, being executed by a computer. Generally, program modules include routines, programs, objects, components, data structures, etc. that perform particular tasks or implement particular abstract data types. The invention may also be practiced in distributed computing environments where tasks are performed by remote processing devices that are linked through a communications network. In a distributed computing environment, program modules may be located in local and\/or remote computer storage media including memory storage devices.","With reference to , an exemplary system for implementing the invention includes a general purpose computing device in the form of a computer . Components of computer  may include, but are not limited to, a processing unit , a system memory , and a system bus  that couples various system components including the system memory to the processing unit . The system bus  may be any of several types of bus structures including a memory bus or memory controller, a peripheral bus, and a local bus using any of a variety of bus architectures. By way of example, and not limitation, such architectures include Industry Standard Architecture (ISA) bus, Micro Channel Architecture (MCA) bus, Enhanced ISA (EISA) bus, Video Electronics Standards Association (VESA) local bus, and Peripheral Component Interconnect (PCI) bus also known as Mezzanine bus.","Computer  typically includes a variety of computer readable media. Computer readable media can be any available media that can be accessed by computer  and includes both volatile and nonvolatile media, and removable and non-removable media. By way of example, and not limitation, computer readable media may comprise computer storage media and communication media. Computer storage media includes volatile and nonvolatile, removable and non-removable media implemented in any method or technology for storage of information such as computer readable instructions, data structures, program modules or other data. Computer storage media includes, but is not limited to, RAM, ROM, EEPROM, flash memory or other memory technology, CD-ROM, digital versatile disks (DVD) or other optical disk storage, magnetic cassettes, magnetic tape, magnetic disk storage or other magnetic storage devices, or any other medium which can be used to store the desired information and which can be accessed by computer . Communication media typically embodies computer readable instructions, data structures, program modules or other data in a modulated data signal such as a carrier wave or other transport mechanism and includes any information delivery media. The term \u201cmodulated data signal\u201d means a signal that has one or more of its characteristics set or changed in such a manner as to encode information in the signal. By way of example, and not limitation, communication media includes wired media such as a wired network or direct-wired connection, and wireless media such as acoustic, RF, infrared and other wireless media. Combinations of the any of the above should also be included within the scope of computer readable media.","The system memory  includes computer storage media in the form of volatile and\/or nonvolatile memory such as read only memory (ROM)  and random access memory (RAM) . A basic input\/output system  (BIOS), containing the basic routines that help to transfer information between elements within computer , such as during start-up, is typically stored in ROM . RAM  typically contains data and\/or program modules that are immediately accessible to and\/or presently being operated on by processing unit . By way of example, and not limitation,  illustrates operating system , application programs , other program modules , and program data .","The computer  may also include other removable\/non-removable, volatile\/nonvolatile computer storage media. By way of example only,  illustrates a hard disk drive  that reads from or writes to non-removable, nonvolatile magnetic media, a magnetic disk drive  that reads from or writes to a removable, nonvolatile magnetic disk , and an optical disk drive  that reads from or writes to a removable, nonvolatile optical disk  such as a CD ROM or other optical media. Other removable\/non-removable, volatile\/nonvolatile computer storage media that can be used in the exemplary operating environment include, but are not limited to, magnetic tape cassettes, flash memory cards, digital versatile disks, digital video tape, solid state RAM, solid state ROM, and the like. The hard disk drive  is typically connected to the system bus  through a non-removable memory interface such as interface , and magnetic disk drive  and optical disk drive  are typically connected to the system bus  by a removable memory interface, such as interface .","The drives and their associated computer storage media, discussed above and illustrated in , provide storage of computer readable instructions, data structures, program modules and other data for the computer . In , for example, hard disk drive  is illustrated as storing operating system , application programs , other program modules , and program data . Note that these components can either be the same as or different from operating system , application programs , other program modules , and program data . Operating system , application programs , other program modules , and program data  are given different numbers hereto illustrate that, at a minimum, they are different copies. A user may enter commands and information into the computer  through input devices such as a keyboard , a pointing device , commonly referred to as a mouse, trackball or touch pad, a microphone , and a tablet or electronic digitizer . Other input devices (not shown) may include a joystick, game pad, satellite dish, scanner, or the like. These and other input devices are often connected to the processing unit  through a user input interface  that is coupled to the system bus, but may be connected by other interface and bus structures, such as a parallel port, game port or a universal serial bus (USB). A monitor  or other type of display device is also connected to the system bus  via an interface, such as a video interface . The monitor  may also be integrated with a touch-screen panel or the like. Note that the monitor and\/or touch screen panel can be physically coupled to a housing in which the computing device  is incorporated, such as in a tablet-type personal computer. In addition, computers such as the computing device  may also include other peripheral output devices such as speakers  and printer , which may be connected through an output peripheral interface  or the like.","The computer  may operate in a networked environment using logical connections to one or more remote computers, such as a remote computer . The remote computer  may be a personal computer, a server, a router, a network PC, a peer device or other common network node, and typically includes many or all of the elements described above relative to the computer , although only a memory storage device  has been illustrated in . The logical connections depicted in  include a local area network (LAN)  and a wide area network (WAN) , but may also include other networks. Such networking environments are commonplace in offices, enterprise-wide computer networks, intranets and the Internet. For example, the computer system  may comprise the source machine from which data is being migrated, and the remote computer  may comprise the destination machine.","When used in a LAN networking environment, the computer  is connected to the LAN  through a network interface or adapter . When used in a WAN networking environment, the computer  typically includes a modem  or other means for establishing communications over the WAN , such as the Internet. The modem , which may be internal or external, may be connected to the system bus  via the user input interface , or other appropriate mechanism. In a networked environment, program modules depicted relative to the computer , or portions thereof, may be stored in the remote memory storage device. By way of example, and not limitation,  illustrates remote application programs  as residing on memory device . It will be appreciated that the network connections shown are exemplary and other means of establishing a communications link between the computers may be used.","It should be noted that a programming interface (or more simply, interface) may be viewed as any mechanism, process, protocol for enabling one or more segment(s) of code to communicate with or access the functionality provided by one or more other segment(s) of code. Alternatively, a programming interface may be viewed as one or more mechanism(s), method(s), function call(s), module(s), object(s), etc. of a component of a system capable of communicative coupling to one or more mechanism(s), method(s), function call(s), module(s), etc. of other component(s). The term \u201csegment of code\u201d in the preceding sentence is intended to include one or more instructions or lines of code, and includes, e.g., code modules, objects, subroutines, functions, and so on, regardless of the terminology applied or whether the code segments are separately compiled, or whether the code segments are provided as source, intermediate, or object code, whether the code segments are utilized in a runtime system or process, or whether they are located on the same or different machines or distributed across multiple machines, or whether the functionality represented by the segments of code are implemented wholly in software, wholly in hardware, or a combination of hardware and software.","Notionally, a programming interface may be viewed generically, as shown in or . illustrates an interface Interface as a conduit through which first and second code segments communicate. illustrates an interface as comprising interface objects I and I (which may or may not be part of the first and second code segments), which enable first and second code segments of a system to communicate via medium M. In the view of , one may consider interface objects I and I as separate interfaces of the same system and one may also consider that objects I and I plus medium M comprise the interface. Although and show bi-directional flow and interfaces on each side of the flow, certain implementations may only have information flow in one direction (or no information flow as described below) or may only have an interface object on one side. By way of example, and not limitation, terms such as application programming interface (API), entry point, method, function, subroutine, remote procedure call, and component object model (COM) interface, are encompassed within the definition of programming interface.","Aspects of such a programming interface may include the method whereby the first code segment transmits information (where \u201cinformation\u201d is used in its broadest sense and includes data, commands, requests, etc.) to the second code segment; the method whereby the second code segment receives the information; and the structure, sequence, syntax, organization, schema, timing and content of the information. In this regard, the underlying transport medium itself may be unimportant to the operation of the interface, whether the medium be wired or wireless, or a combination of both, as long as the information is transported in the manner defined by the interface. In certain situations, information may not be passed in one or both directions in the conventional sense, as the information transfer may be either via another mechanism (e.g. information placed in a buffer, file, etc. separate from information flow between the code segments) or non-existent, as when one code segment simply accesses functionality performed by a second code segment. Any or all of these aspects may be important in a given situation, e.g., depending on whether the code segments are part of a system in a loosely coupled or tightly coupled configuration, and so this list should be considered illustrative and non-limiting.","This notion of a programming interface is known to those skilled in the art and is clear from the foregoing detailed description of the invention. There are, however, other ways to implement a programming interface, and, unless expressly excluded, these too are intended to be encompassed by the claims set forth at the end of this specification. Such other ways may appear to be more sophisticated or complex than the simplistic view of and , but they nonetheless perform a similar function to accomplish the same overall result. We will now briefly describe some illustrative alternative implementations of a programming interface.","A. Factoring","A communication from one code segment to another may be accomplished indirectly by breaking the communication into multiple discrete communications. This is depicted schematically in and . As shown, some interfaces can be described in terms of divisible sets of functionality. Thus, the interface functionality of and may be factored to achieve the same result, just as one may mathematically provide 24, or 2 times 2 times 3 times 2. Accordingly, as illustrated in , the function provided by interface Interface may be subdivided to convert the communications of the interface into multiple interfaces InterfaceA, Interface B, Interface C, etc. while achieving the same result. As illustrated in , the function provided by interface I may be subdivided into multiple interfaces I, I, I, etc. while achieving the same result. Similarly, interface I of the second code segment which receives information from the first code segment may be factored into multiple interfaces I, I, I, etc. When factoring, the number of interfaces included with the 1code segment need not match the number of interfaces included with the 2code segment. In either of the cases of and , the functional spirit of interfaces Interface and I remain the same as with and , respectively. The factoring of interfaces may also follow associative, commutative, and other mathematical properties such that the factoring may be difficult to recognize. For instance, ordering of operations may be unimportant in some applications, and consequently, a function carried out by an interface may be carried out well in advance of reaching the interface, by another piece of code or interface, or performed by a separate component of the system. Moreover, one of ordinary skill in the programming arts can appreciate that there are a variety of ways of making different function calls that achieve the same result.","B. Redefinition","In some cases, it may be possible to ignore, add or redefine certain aspects (e.g., parameters) of a programming interface while still accomplishing the intended result. This is illustrated in and . For example, assume interface Interface of includes a function call Square (input, precision, output), a call that includes three parameters, input, precision and output, and which is issued from the 1Code Segment to the 2Code Segment. If the middle parameter precision is of no concern in a given scenario, as shown in , it could just as well be ignored or even replaced with a meaningless (in this situation) parameter. One may also add an additional parameter of no concern. In either event, the functionality of square can be achieved, so long as output is returned after input is squared by the second code segment. Precision may very well be a meaningful parameter to some downstream or other portion of the computing system; however, once it is recognized that precision is not necessary for the narrow purpose of calculating the square, it may be replaced or ignored. For example, instead of passing a valid precision value, a meaningless value such as a birth date could be passed without adversely affecting the result. Similarly, as shown in , interface I is replaced by interface I\u2032, redefined to ignore or add parameters to the interface. Interface I may similarly be redefined as interface I\u2032, redefined to ignore unnecessary parameters, or parameters that may be processed elsewhere. The point here is that in some cases a programming interface may include aspects, such as parameters, that are not needed for some purpose, and so they may be ignored or redefined, or processed elsewhere for other purposes.","C. Inline Coding","It may also be feasible to merge some or all of the functionality of two separate code modules such that the \u201cinterface\u201d between them changes form. For example, the functionality of and may be converted to the functionality of and , respectively. In , the previous 1and 2Code Segments of are merged into a module containing both of them. In this case, the code segments may still be communicating with each other but the interface may be adapted to a form which is more suitable to the single module. Thus, for example, formal Call and Return statements may no longer be necessary, but similar processing or response(s) pursuant to interface Interface may still be in effect. Similarly, shown in , part (or all) of interface I from may be written inline into interface I to form interface I\u2033. As illustrated, interface I is divided into Iand I, and interface portion Ihas been coded in-line with interface I to form interface I\u2033. For a concrete example, consider that the interface I from performs a function call square (input, output), which is received by interface I, which after processing the value passed with input (to square it) by the second code segment, passes back the squared result with output. In such a case, the processing performed by the second code segment (squaring input) can be performed by the first code segment without a call to the interface.","D. Divorce","A communication from one code segment to another may be accomplished indirectly by breaking the communication into multiple discrete communications. This is depicted schematically in and . As shown in , one or more piece(s) of middleware (Divorce Interface(s), since they divorce functionality and\/or interface functions from the original interface) are provided to convert the communications on the first interface, Interface, to conform them to a different interface, in this case interfaces InterfaceA, InterfaceB and InterfaceC. This might be done, e.g., where there is an installed base of applications designed to communicate with, say, an operating system in accordance with an Interface protocol, but then the operating system is changed to use a different interface, in this case interfaces InterfaceA, InterfaceB and InterfaceC. The point is that the original interface used by the 2Code Segment is changed such that it is no longer compatible with the interface used by the 1Code Segment, and so an intermediary is used to make the old and new interfaces compatible. Similarly, as shown in , a third code segment can be introduced with divorce interface DI to receive the communications from interface I and with divorce interface DI to transmit the interface functionality to, for example, interfaces Iand I, redesigned to work with DI, but to provide the same functional result. Similarly, DI and DI may work together to translate the functionality of interfaces I and I of to a new operating system, while providing the same or similar functional result.","E. Rewriting","Yet another possible variant is to dynamically rewrite the code to replace the interface functionality with something else but which achieves the same overall result. For example, there may be a system in which a code segment presented in an intermediate language (e.g. Microsoft IL, Java ByteCode, etc.) is provided to a Just-in-Time (JIT) compiler or interpreter in an execution environment (such as that provided by the .Net framework, the Java runtime environment, or other similar runtime type environments). The JIT compiler may be written so as to dynamically convert the communications from the 1Code Segment to the 2Code Segment, i.e., to conform them to a different interface as may be required by the 2Code Segment (either the original or a different 2Code Segment). This is depicted in and . As can be seen in , this approach is similar to the Divorce scenario described above. It might be done, e.g., where an installed base of applications are designed to communicate with an operating system in accordance with an Interface  protocol, but then the operating system is changed to use a different interface. The JIT Compiler could be used to conform the communications on the fly from the installed-base applications to the new interface of the operating system. As depicted in , this approach of dynamically rewriting the interface(s) may be applied to dynamically factor, or otherwise alter the interface(s) as well.","It is also noted that the above-described scenarios for achieving the same or similar result as an interface via alternative embodiments may also be combined in various ways, serially and\/or in parallel, or with other intervening code. Thus, the alternative embodiments presented above are not mutually exclusive and may be mixed, matched and combined to produce the same or equivalent scenarios to the generic scenarios presented in and . It is also noted that, as with most programming constructs, there are other similar ways of achieving the same or similar functionality of an interface which may not be described herein, but nonetheless are represented by the spirit and scope of the invention, i.e., it is noted that it is at least partly the functionality represented by, and the advantageous results enabled by, an interface that underlie the value of an interface.","In the description that follows, the invention will be described with reference to acts and symbolic representations of operations that are performed by one or more computers, unless indicated otherwise. As such, it will be understood that such acts and operations, which are at times referred to as being computer-executed, include the manipulation by the processing unit of the computer of electrical signals representing data in a structured form. This manipulation transforms the data or maintains it at locations in the memory system of the computer, which reconfigures or otherwise alters the operation of the computer in a manner well understood by those skilled in the art. The data structures where data is maintained are physical locations of the memory that have particular properties defined by the format of the data. However, while the invention is being described in the foregoing context, it is not meant to be limiting as those of skill in the art will appreciate that various of the acts and operation described hereinafter may also be implemented in hardware.","Turning now to , an exemplary environment  in which the invention operates. Applications ,  reside on server . Window manager  allows one to work with and organize windows and performs operations such as moving windows, resizing windows, destroying windows, decorating windows with titlebars and other items which make the above operations easier, and the like. Applications ,  create visual trees ,  to indicate how an item (e.g., text document, graphic, animation. etc.) is being displayed by the application. A visual tree represents a data structure that is rendered by a graphics system to a medium (e.g., display monitor, printer, surface, etc.). When a visual tree is rendered, the data in the visual tree is the \u201cscene\u201d the user sees in the application area of the display when the application is being used. The applications ,  retain control of their respective visual tree to control what is happening on the application display area on the display device (e.g., monitor ). The applications ,  submit their visual tree output to an in process composition loop via interface . This output is used to build a sub tree of the application's visual tree. The sub tree is composed to a surface, which in turn is submitted to the window manager  for desktop composition. The window manager  then assesses what will and will not be displayed based on the visibility of the application in the display and a composition tree ,  is created based on the assessment. The composition tree is rendered independently of a visual tree. The composition tree includes all elements compiled from a visual tree that a user would see on the display device. For example, if the visual tree were created for a document, the composition tree would be that portion of the document that is being displayed.","The present invention allows the composition trees to be remotely created and operated without having to create the composition tree at the server. While the invention will be described in terms or remotely creating and operating a composition tree, it is recognized that the invention may be used to create and render compositions on the server of . Turning now to , the applications ,  on server  are being displayed on client device . While only one client device is shown, it is recognized that any number of client devices may be used. The applications ,  and window manager  use interface  to communicate with respective composition modules -  over the network  via communication channel  using packets. The number of composition modules that may be used in conjunction with a single application domain may be any number as desired. Note that the server  and client  need not be connected by a network or any other means, but instead, data may be migrated via any media capable of being written by the server platform and read by the client platform or platforms. In one embodiment, the packets are encapsulated with a remote data protocol to send the information to create the composition trees ,  to the client . An identifier is placed in each packet to identify which composition module - is the destination of the packet. Component  demultiplexes packets and sends the packets to the appropriate change queue , ,  of modules -.","The device independent protocol of the instant invention provides the applications and clients to interface with the server via the communication channel  to compose content. The types of content include resource command packets and control packets. Resource types include pens, brushes, bitmaps, glyphs, video clips, geometries (ellipses, rectangles, boxes, circles, etc.), animations, memory, etc. Composition nodes are the fundamental unit of spatial containment available to client applications. Clients create composition nodes on their composition service. A composition node may contain one or more resources. There is always one root composition node, representing the screen content or desktop. There may be one or more composition nodes representing offscreen composition.","In the description that follows, the device independent protocol will be described through typical call sequences. The communication is asynchronous. Specific connect, reconnect, and disconnect semantics are used. The applications , ,  communicate with the respective composition module ,  resident in the client . A single connection is usually initiated and maintained for the lifetime of the application because connecting and disconnecting a connection are expensive operations and communication to the composition module on the client is likely to be frequent. The cost of maintaining the connection will be much lower than the cost of repeatedly disconnecting and connecting. The communication between the server applications , ,  and the composition modules - is in the form of packets.","The server applications , ,  connect to the client  and start sending packets. Packets can be resource packets, control packets, and batch packets. Resource packets are used to create resources and to update resources. Control packets are used to control the composition state and to maintain a text glyph bitmap cache on the client machine . Batch packets are used to apply multiple changes atomically. A create batch command is sent to the client  to indicate the beginning of a batch. The composition modules accrue the requests until the batch is \u201cended.\u201d The batch is ended by sending a batch close\/commit packet. At that point, the composition service begins processing the commands. The change queue inside of the composition service retains the batching construct so as to ensure that the changes occur atomically.","Turning now to , the steps to create and control a composition are shown. Server application  will be used to describe the steps. Those skilled in the art recognize that any segment(s) of code may be used. A composition module is created (step ). The composition module is responsible for rendering the composition for the connection that has been created. A render target is created that generates a resource command to create a rendertarget resource (step ) and render context that is associated with the rendertarget resource is created (step ). The render target is the destination target for rendering resources. A composition node is created (step ). Resources are then created (step ) and the composition is rendered (step ).","Composition utilizes the combination of simple and compound resources in order to render the content to the target. A simple resource is self-contained, and has no direct dependency on any other resource. A compound resource references other dependent resources. One example of a compound resource is the \u201crendering data\u201d resource. The \u201crendering data\u201d resource is comprised of retained list of rendering instructions which may in turn reference other resources, such as brushes, pens, or descriptions of geometry. The rendering data resource is used to encode rendering operations performed with the help of other resources. Render data resources are associated with composition nodes, which have the role of spatially localizing these rendering operations.","When a composition needs to be updated, an update command is sent (step ). The update could be adding resources or updating resources. A particular composition may need to be deleted and a new composition created. For example, if the composition is a text document, the composition is deleted if the text document is closed. If the composition is to be deleted, a destruction command is sent to the composition service (step ).","Animation may be pervasive throughout a platform. The invention delivers scalable animation in one embodiment by allowing clients to assume complete responsibility for evaluating and presenting the animation. This is sufficient in many cases, especially when the animation is complex or when the animation target requires that a non-accelerated set of operations (such as tessellation) occur. For certain low-cost, high visibility user interface effects such as motion animation, it makes sense to allow these operations to occur during a chain's composition pass. In such a case, the application  would sample the high-level animation function and provide a series of timestamped values associated with a resource as a request to the composition service. These represent the intervals over which the resource is to be animated, and the endpoints of the timeline during which the interval remains active. The application  sends an update resource packet to update a resource value. Note that the sequence belies the underlying complexity. The composition module normalizes the timestamped values to the composition service's global timeline, and a composition manager (not shown) will plug the update block into the appropriate resources during composition to the render target. For each composited frame, the composition module will evaluate the resource's interval to derive the instantaneous value.","Now that the overall structure of the programming interface has been described, the resource and control command packets will be described. The control packets are used to control the composition state and to maintain a text glyph cache used by the composition module on the client .","The control packets are Resource_Command_Null, Resource_Command_Release, Resource_Command_Shutdown, Resource_Command_Synchronize, Resource_Command_Status, Resource_Command_Add_Glyph_Bitmaps, Resource_Command_Free_Glyph_Bitmaps, and Resource_Command_Flush_Queue. The Resource_Command_Release releases a resource. The Resource_Command_Shutdown shutdowns the composition module and deletes everything associated with the composition module. The Resource_Command_Synchronize command deletes everything associated with the composition node to start fresh. The Resource_Command_Status sends a status message to the composition module. The Resource_Command_Add_Glyph_Bitmaps adds bitmaps to the glyph cache. The Resource_Command_Free_Glyph_Bitmaps removes bitmaps from the glyph cache. The Resource_Command_Flush_Queue flushes the change queue.","A notification queue that transports notification packets from the client  back to the server  is maintained. These can be of the following type: Notification_Resource_Deleted, Notification_Shutdown, Notification_Synchronize, Notification_Status, and Notification_Error.","The resource command packets are used to render resources. A resource may be defined as \u201cany object needed for rendering a scene that requires different realizations for different resolutions and\/or physical devices; that is used multiple times within a composition tree; or that may change independently of its users such as via animation.\u201d. Resources are able to serialize themselves, apply updates, and provide a realization for a particular resolution and device. The resource types include Null, Memory, Renderdata, Bitmap, Glyphrun, Vertices, Timeline, Doubleanimation, Coloranimation, Pointanimation, Rectanimation, Sizeanimation, Doubleanimationcollection, Coloranimationcollection, Pointanimationcollection, Rectanimationcollection, Sizeanimationcollection, Transform, Double, Color, Point, Rect, Size, Gradient, Brush, Figure, Geometry, Pen, Video, Composition_Node, Composition_Context, Image, Hwnd_Composition_Target, and Intermediate_Composition_Target. The Hwnd_Composition_Target is used to render to a window. The intermediate composition target may be used for off screen rendering.","Resources sent to a composition module are generally directly realizable by the composition module without callback. If not directly realizable, the required.","A notification queue that transports notification packets from the client  back to the server  is maintained. These can be of the following type: Notification_Resource_Deleted, Notification_Shutdown, Notification_Synchronize, Notification_Status, and Notification_Error.","The resource command packets are used to render resources. A resource may be defined as \u201cany object needed for rendering a scene that requires different realizations for different resolutions and\/or physical devices; that is used multiple times within a composition tree; or that may change independently of its users such as via animation.\u201d Resources are able to serialize themselves, apply updates, and provide a realization for a particular resolution and device. Resources are able to serialize themselves, apply updates, and provide a realization for a particular resolution and device. The resource types include Null, Memory, Renderdata, Bitmap, Glyphrun, Vertices, Timeline, Doubleanimation, Coloranimation, Pointanimation, Rectanimation, Sizeanimation, Doubleanimationcollection, Coloranimationcollection, Pointanimationcollection, Rectanimationcollection, Sizeanimationcollection, Transform, Double, Color, Point, Rect, Size, Gradient, Brush, Figure, Geometry, Pen, Video, Composition_Node, Composition_Context, Image, Hwnd_Composition_Target, and Intermediate_Composition_Target. The Hwnd_Composition_Target is used to render to a window. The intermediate composition target may be used for off screen rendering.","Resources sent to a composition module are generally directly realizable by the composition module without callback. If not directly realizable, the required realization is sent. Resources like \u201cText\u201d and \u201cImages\u201d are expensive (in terms of processing overhead) to realize and are therefore converted to the appropriate \u201cready-to-render\u201d form for use in the composition tree. Converting the resources to a form that may be readily rendered conserves overhead for composition in the composition module. Resources are also converted to the appropriate \u201cready-to-render\u201d form if they require any callbacks to user code. Other resources like \u201cGeometry\u201d that may be tessellated efficiently by the composition module to the correct resolution when needed are realized by the composition module itself.","Resources are generally separated into a few types, such as drawing resources, value resources, and structural resources. Drawing resources are objects defined by the rendering layer and may be consumed directly by that layer. Examples of drawing resources include RenderData, Bitmap, Image, Glyphrun, Geometry, and Brush.","Drawing resources with very low and constant rendering cost can be realized during composition directly from the device and resolution independent source data. Geometry is a simple drawing resource because it can be tessellated to the final required resolution efficiently in the composition loop of the composition module. In contrast, complex drawing resources require complex computations, call backs to user code, or input\/output to generate realizations. In one embodiment, complex drawing resources are not realized by the composition module. Instead, the appropriate realizations are provided by the applications ,  and\/or server  in advance to composition. \u201cImage\u201d is an example of a complex resource. Images are read from disk, decoded, sampled at the appropriate resolution and filtered.","Value resources represent a simple changeable or animate value used by another resource. Examples of value resources are Double, Point, Color, and Transform. For example, a RenderData resource may refer to a Point resource to draw a line where one of the points is expected to change via animation or imperative direction by the application. Value resources may be static or animate. If the value resource is animate, the value resource contains animation interval data defining how the value changes with time.","Structure resources are objects that play a role in the composition process but are not directly part of rendering. These objects are implemented as resources so that they may participate in updates via the change queue and use Value Resources to update internal values. Identified structure resources include Composition Node.","In general, resources must be realized before they can be used. A realization may be referred to as \u201ca representation of a resource that is appropriate for a given resolution and is ready for use by a specific device.\u201d An example of a realization is a geometry tessellated into triangles for a particular resolution and transformation and potentially already loaded into a vertex buffer on the video card. Realizations are either created on demand in the composition module or are created at the server  and sent to the composition module. If a resource realization that is required cannot be found or created a notification is queued via the notification queue to the server . The notification indicates the resource handle, the transform, and the device needed, along with any transform of the realization used.","Packets have a structure as shown below",{"@attributes":{"id":"p-0074","num":"0073"},"tables":{"@attributes":{"id":"TABLE-US-00001","num":"00001"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"175pt","align":"left"}}],"thead":{"row":{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"{"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"56pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"161pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"MIL_PACKET_TYPE packetType;"]},{"entry":[{},"HMIL_RESOURCE resHandle;"]},{"entry":[{},"MIL_RESOURCE_TYPE type;"]},{"entry":[{},"DWORD size;"]},{"entry":[{},"int marshalType;"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"175pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"}"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}]}}]}},"br":{}},"Appended to the packet are commands that are used to instruct the composition service to perform tasks. This allows third party vendors to supply their own code to operate their composition services. One such implementation is below.",{"@attributes":{"id":"p-0076","num":"0075"},"tables":{"@attributes":{"id":"TABLE-US-00002","num":"00002"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0","pgwide":"1"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"273pt","align":"left"}},"thead":{"row":{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"\/\/HRESULT CMilResourceBrushSolidColorData::MarshalDataCore"},{"entry":"struct BrushSolidColorPacket"},{"entry":"{"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"259pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"MIL_COLORF colr;"]},{"entry":[{},"HMIL_RESOURCE hColor;"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"273pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"}"},{"entry":"\/*"},{"entry":"HRESULT"},{"entry":"CMilResourceBrushSolidColorData::MarshalDataCore(IMilTransportEncoder*"},{"entry":"pEncoder)"},{"entry":"{"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"259pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"HRESULT hr = S_OK;"]},{"entry":[{},"Assert(NULL != pEncoder);"]},{"entry":[{},"\/\/ Call base method before our own"]},{"entry":[{},"CMilResourceBrushData::MarshalDataCore(pEncoder);"]},{"entry":[{},"pEncoder\u2212>AddColor(&(m_brushSolidData.color));"]},{"entry":[{},"pEncoder\u2212>AddResource(m_brushSolidData.hColor);"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"273pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":"Cleanup:"}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"259pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"RRETURN(hr);"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"273pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"}"},{"entry":"*\/"},{"entry":"\/\/HRESULT CMilResourceBrushLinearGradient::Marshal"},{"entry":"struct BrushLinearGradientPacket : Packet"},{"entry":"{"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"259pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"int brushtype = MilUceBrushTypeLinearGradient;"]},{"entry":[{},"float Alpha;"]},{"entry":[{},"HMIL_RESOURCE hAlpha;"]},{"entry":[{},"HMIL_RESOURCE hTransform;"]},{"entry":[{},"float beginPointx;"]},{"entry":[{},"float beginPointy;"]},{"entry":[{},"HMIL_RESOURCE hBeginPoint;"]},{"entry":[{},"float endPointx;"]},{"entry":[{},"float endPointy;"]},{"entry":[{},"HMIL_RESOURCE hEndPoint;"]},{"entry":[{},"int wrapMode;"]},{"entry":[{},"HMIL_RESOURCE hGradient;"]},{"entry":[{},"int bGammaCorrect;"]},{"entry":[{},"int bAdjustToObject;"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"273pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"}"},{"entry":"\/\/CMilResourceBrushData::MarshalData"},{"entry":"struct BrushDataPacket : Packet"},{"entry":"{"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"259pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"int brushtype;"]},{"entry":[{},"double dblOpacity;"]},{"entry":[{},"HMIL_RESOURCE hOpacity;"]},{"entry":[{},"HMIL_RESOURCE hTransform;"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"273pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"}"},{"entry":"\/\/CMilResourceBrushRadialGradient::Marshal"},{"entry":"struct BrushRadialGradientMarshalPacket : Packet"},{"entry":"{"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"259pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"UINT brushtype = MilUceBrushTypeRadialGradient;"]},{"entry":[{},"float alpha;"]},{"entry":[{},"HMIL_RESOURCE hAlpha;"]},{"entry":[{},"HMIL_RESOURCE hTransform;"]},{"entry":[{},"float centerPointX;"]},{"entry":[{},"float centerPointY;"]},{"entry":[{},"HMIL_RESOURCE hCenter;"]},{"entry":[{},"float radPointX;"]},{"entry":[{},"float radPointY;"]},{"entry":[{},"HMIL_RESOURCE hRadius;"]},{"entry":[{},"float focPointX;"]},{"entry":[{},"float focPointY;"]},{"entry":[{},"HMIL_RESOURCE hFocus;"]},{"entry":[{},"int wrapMode;"]},{"entry":[{},"HMIL_RESOURCE hGradient;"]},{"entry":[{},"int bGammaCorrect;"]},{"entry":[{},"int bAdjustToObject;"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"273pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"}"},{"entry":"\/\/CMilResourceGradient::Marshal"},{"entry":"struct GradientMarshalPacket : Packet"},{"entry":"{"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"259pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"UINT stopCount;"]},{"entry":[{},"\/\/stops bytes here:"]},{"entry":[{},"\/\/hr = pEncoder\u2212>AddMemory(m_data.m_rgGradientStops,"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"273pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"nDataByteCount);"},{"entry":"}"},{"entry":"\/\/CMilResourceBrushNineGrid::Marshal"},{"entry":"struct BrushNineGridMarshalPacket : Packet"},{"entry":"{"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"259pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"int brushType = MilUceBrushTypeNineGrid;"]},{"entry":[{},"double rOpacity;"]},{"entry":[{},"HMIL_RESOURCE hOpacity;"]},{"entry":[{},"HMIL_RESOURCE hTransform;"]},{"entry":[{},"HMIL_RESOURCE hImageData;"]},{"entry":[{},"HMIL_RESOURCE hGlyphImageData;"]},{"entry":[{},"UINT iLeftBorder;"]},{"entry":[{},"UINT iTopBorder;"]},{"entry":[{},"UINT iRightBorder;"]},{"entry":[{},"UINT iBottomBorder;"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"273pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"}"},{"entry":"\/\/TMilMasterAnimatedValue<TValue, ResType, AnimResType,"},{"entry":"CollResType>::Marshal ("},{"entry":"struct MasterAnimatedValuePacket : Packet"},{"entry":"{"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"259pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"int animtype = MilAnimatedValueMarshal;"]},{"entry":[{},"int marshalType = MilAnimatedValueMarshalAux;"]},{"entry":[{},"HMIL_RESOURCE hAnimationCollection;"]},{"entry":[{},"int offsetToValue;"]},{"entry":[{},"int sizeOfValue = sizeof(TValue);"]},{"entry":[{},"int offsetToBaseValue;"]},{"entry":[{},"int sizeOfBaseValue = sizeof(TValue);"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"273pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"}"},{"entry":"struct MasterAnimationCollectionPacket : Packet"},{"entry":"{"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"259pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"int cAnimations;"]},{"entry":[{},"HMIL_RESOURCE handleArray;"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"84pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"189pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"\/\/for (nAnimation = 0; nAnimation <"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"273pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":"m_cAnimations; nAnimation++)"}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"84pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"189pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"\/\/{"]},{"entry":[{},"\/\/ pEncoder\u2212"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"273pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":">AddResource(m_rghAnimations[nAnimation]);"}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"84pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"189pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"\/\/}"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"273pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"}"},{"entry":"struct MasterAnimationPacket : Packet"},{"entry":"{"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"259pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"int animtype = MilAnimationCopy;"]},{"entry":[{},"HMIL_RESOURCE hTimeline;"]},{"entry":[{},"\/\/m_animationData.WriteData(pEncoder);"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"273pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"}"},{"entry":"\/\/TMilMasterValue<TValue, ResType>::SendUpdatePacket("},{"entry":"struct MasterValueUpdatePacket | Packet"},{"entry":"{"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"259pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"int valueType = MilValueMarshal;"]},{"entry":[{},"int auxType = MilValueMarshalAux;"]},{"entry":[{},"int size; \/\/ sizeof(TValue)"]},{"entry":[{},"\/\/ resrve memory for value copy."]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"273pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"}"},{"entry":"struct TMilAnimationDataPacket : Packet"},{"entry":"{"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"259pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"int animationType;"]},{"entry":[{},"int interpolationMethod;"]},{"entry":[{},"BYTE fIsAdditive;"]},{"entry":[{},"BYTE fIsAccumulating;"]},{"entry":[{},"UINT cValues;"]},{"entry":[{},"\/\/ next space values and key times."]},{"entry":[{},"\/\/ pEncoder\u2212>AddMemory(m_rgValues, sizeof(TValue) * m_cValues);"]},{"entry":[{},"\/\/ pEncoder\u2212>AddMemory(m_rgKeyTimes, sizeof(double) * m_cValues);"]},{"entry":[{},"BYTE fHasKeySplinePoints;"]},{"entry":[{},"\/\/ Next: space for spline points."]},{"entry":[{},"\/\/if (m_rgKeySplinePoints)"]},{"entry":[{},"\/\/{"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"231pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"\/\/","pEncoder\u2212>AddByte((BYTE)TRUE);"]},{"entry":[{},"\/\/","pEncoder\u2212>AddMemory("]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"217pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"\/\/","m_rgKeySplinePoints,"]},{"entry":[{},"\/\/","sizeof(MIL_2DPOINTD) * 2 * (m_cValues \u2212 1));"]},{"entry":[{},"\/\/}"]},{"entry":[{},"\/\/else"]},{"entry":[{},"\/\/{"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"231pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"\/\/","pEncoder\u2212>AddByte((BYTE)FALSE);"]},{"entry":[{},"\/\/}"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"273pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"}"},{"entry":"struct BitmapUpdatePixelsPacket : Packet"},{"entry":"{"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"259pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"int bitmaptype = MilBitmapUpdatePixels;"]},{"entry":[{},"int prectX;"]},{"entry":[{},"int prectY;"]},{"entry":[{},"int prectWidth;"]},{"entry":[{},"int prectHeight;"]},{"entry":[{},"UINT stride;"]},{"entry":[{},"UINT cbSize;"]},{"entry":[{},"\/\/ pixels after this"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"273pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":"}"}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"259pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"struct BitmapAddDirtyRectPacket : Packet"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"273pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":"{"}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"259pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"UINT bitmaptype = MilBitmapAddDirtyRect));"]},{"entry":[{},"UINT prectX;"]},{"entry":[{},"UINT prectY;"]},{"entry":[{},"UINT prectWidth;"]},{"entry":[{},"UINT prectHeight;"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"273pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"}"},{"entry":"struct BitmapMarshalPixelsPacket : Packet"},{"entry":"{"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"259pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"UINT bitmaptype = MilBitmapCopy;"]},{"entry":[{},"int prectX;"]},{"entry":[{},"int prectY;"]},{"entry":[{},"int prectWidth;"]},{"entry":[{},"int prectHeight;"]},{"entry":[{},"UINT stride;"]},{"entry":[{},"UINT format;"]},{"entry":[{},"UINT cbSize;"]},{"entry":[{},"\/\/ pixels after this"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"273pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"}"},{"entry":"struct RenderDataMarshalPacket : Packet"},{"entry":"{"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"259pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"int renderdatatype = MilRenderDataCopy;"]},{"entry":[{},"UINT nHandleCount;"]},{"entry":[{},"UINT nByteCount;"]},{"entry":[{},"\/\/ handles and data follow."]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"273pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"}"},{"entry":"\/\/CMasterCompositionContext::SetRoot"},{"entry":"struct CompositionContextSetRootPacket : Packet"},{"entry":"{"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"259pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"UINT commandType = CONTEXT_SETROOT;"]},{"entry":[{},"HMIL_COMPNODE hRoot;"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"273pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"}"},{"entry":"\/\/CMasterCompositionNode::SetProperty"},{"entry":"struct CompositionNodeSetPropertyPacket : Packet"},{"entry":"{"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"259pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"UINT commandType = CCompositionCommand::NODE_SETPROPERTY;"]},{"entry":[{},"HMIL_RESOURCE hResource;"]},{"entry":[{},"\/\/ command memmory here."]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"273pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"}"},{"entry":"\/\/CMasterCompositionNode::InsertChildAt"},{"entry":"struct CompositionNodeInsertChildAtPacket : Packet"},{"entry":"{"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"259pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"UINT commandType = CCompositionCommand::NODE_INSERTCHILD;"]},{"entry":[{},"HMIL_COMPNODE hChild;"]},{"entry":[{},"UINT iPosition;"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"273pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"}"},{"entry":"\/\/CMasterCompositionNode::RemoveChild"},{"entry":"struct CompositionNodeRemoveChildPacket : Packet"},{"entry":"{"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"259pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"UINT commandType = CCompositionCommand::NODE_REMOVECHILD;"]},{"entry":[{},"HMIL_COMPNODE hChild;"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"273pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"}"},{"entry":"\/\/CMasterCompositionNode::Marshal"},{"entry":"struct CompositionNodeMarshalPacket : Packet"},{"entry":"{"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"259pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"UINT commandType = CCompositionCommand::NODE_CREATE;"]},{"entry":[{},"HMIL_RESOURCE hTransform;"]},{"entry":[{},"HMIL_RESOURCE hClip));"]},{"entry":[{},"HMIL_RESOURCE hRenderData;"]},{"entry":[{},"HMIL_RESOURCE hAlpha;"]},{"entry":[{},"UINT childCount;"]},{"entry":[{},"\/\/ handles here"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"273pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"}"},{"entry":"\/\/CMilResourceGeometry::MarshalEmpty"},{"entry":"struct GeometryMarshalEmptyPacket : Packet"},{"entry":"{"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"259pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"UINT geomType;"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"273pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"}"},{"entry":"\/\/CMilResourceGeometry::MarshalLine"},{"entry":"struct GeometryMarshalLinePacket : Packet"},{"entry":"{"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"259pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"int pGeomType;"]},{"entry":[{},"HMIL_RESOURCE hTransformRes;"]},{"entry":[{},"double Point1X;"]},{"entry":[{},"double Point1Y;"]},{"entry":[{},"HMIL_RESOURCE hPoint1Res;"]},{"entry":[{},"double Point2X;"]},{"entry":[{},"double Point2Y;"]},{"entry":[{},"HMIL_RESOURCE hPoint2Res;"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"273pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"}"},{"entry":"\/\/CMilResourceGeometry::MarshalRectangle"},{"entry":"struct GeometryMarshalRectangle : Packet"},{"entry":"{"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"259pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"int pGeomType;"]},{"entry":[{},"HMIL_RESOURCE hTransformRes;"]},{"entry":[{},"double RectX;"]},{"entry":[{},"double RectY;"]},{"entry":[{},"double RectWidth;"]},{"entry":[{},"double RectHeight;"]},{"entry":[{},"HMIL_RESOURCE hRectRes;"]},{"entry":[{},"double RadiusX;"]},{"entry":[{},"HMIL_RESOURCE hRadiusXRes;"]},{"entry":[{},"double RadiusY;"]},{"entry":[{},"double RadiusYRes;"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"273pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"}"},{"entry":"\/\/CMilResourceGeometry::MarshalEllipse"},{"entry":"struct GeometryMarshalEllipse : Packet"},{"entry":"{"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"259pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"int pGeomType;"]},{"entry":[{},"HMIL_RESOURCE hTransformRes;"]},{"entry":[{},"double CenterX;"]},{"entry":[{},"double CenterY;"]},{"entry":[{},"HMIL_RESOURCE hCenterRes;"]},{"entry":[{},"double RadiusX;"]},{"entry":[{},"HMIL_RESOURCE hRadiusXRes;"]},{"entry":[{},"double RadiusY;"]},{"entry":[{},"HMIL_RESOURCE hRadiusYRes;"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"273pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"}"},{"entry":"\/\/CMilResourceGeometry::MarshalPath"},{"entry":"struct GeometryMarshalPath : Packet"},{"entry":"{"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"259pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"int pGeomType;"]},{"entry":[{},"HMIL_RESOURCE hTransformRes;"]},{"entry":[{},"int FillMode;"]},{"entry":[{},"int Count;"]},{"entry":[{},"int Size;"]},{"entry":[{},"\/\/ path data appended here."]},{"entry":[{},"\/\/ pEncoder\u2212>AddMemory(pGeom\u2212>FigureData, pGeom\u2212>Size);"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"273pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"}"},{"entry":"\/\/HRESULT CMilResourceGeometry::MarshalCollection"},{"entry":"struct GeometryMarshalCollectionPacket : Packet"},{"entry":"{"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"259pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"int pGeomType;"]},{"entry":[{},"HMIL_RESOURCE hTransformRes;"]},{"entry":[{},"int CombineMode;"]},{"entry":[{},"int count;"]},{"entry":[{},"\/\/ handles here:"]},{"entry":[{},"\/\/for (UINT i=0; i<pGeom\u2212>Count; i++)"]},{"entry":[{},"\/\/{"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"231pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"\/\/","pEncoder\u2212>AddResource(pGeom\u2212>Resources[i]);"]},{"entry":[{},"\/\/\/}"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"273pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"}"},{"entry":"\/\/HRESULT CGlyphCacheMasterManager::UpdateResource(bool fAddBitmaps)"},{"entry":"struct UpdateGlyphCachePacket : Packet"},{"entry":"{"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"259pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"MIL_UPDATE_GLYPHCACHE us;"]},{"entry":[{},"ARRAY_RECORD glyphIndeces; \/\/ UINT array of indeces. Allocated with"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"273pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":"AddArray"}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"259pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"ARRAY_RECORD glyphBitmaps[ ]; \/\/ number of entries is nr of"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"273pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":"glyphIndeces"}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"259pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"ARRAY_RECORD normAdvancedWidth;\u2003\/\/ number of entries is nr of"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"273pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":"glyphIndeces"}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"259pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"ARRAY_RECORD fontFileName;"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"273pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"}"},{"entry":"\/\/HRESULT CMilMasterGlyphRun::DoMarshal"},{"entry":"struct GlyphRunMarshalPacket : Packet"},{"entry":"{"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"259pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"GLYPHRUN_MARSHAL_TYPE glyphRunType;"]},{"entry":[{},"MIL_CREATE_GLYPHRUN createStruct;"]},{"entry":[{},"USHORT GlyphIndeces[ ];"]},{"entry":[{},"DOUBLE AdvanceWidths[ ];"]},{"entry":[{},"WCHAR UnicodeString[ ];"]},{"entry":[{},"MIL_2DPOINTF GlyphOffsets[ ];"]},{"entry":[{},"USHORT CharacterToGlyphMap[ ];"]},{"entry":[{},"WCHAR FontFileName[ ];"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"273pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"}"},{"entry":"\/\/HRESULT CMilMasterGlyphRun::MarshalRealization"},{"entry":"struct GlyphRunRealizationPacket | Packet"},{"entry":"{"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"259pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"GLYPHRUN_MARSHAL_TYPE glyphRunType;"]},{"entry":[{},"DOUBLE scaleX;"]},{"entry":[{},"DOUBLE scaleY;"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"273pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"}"},{"entry":"\/\/HRESULT CMilMasterGlyphRun::MarshalGeometryHandle"},{"entry":"struct GlyphRunMarshalGeometryHandlePacket : Packet"},{"entry":"{"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"259pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"GLYPHRUN_MARSHAL_TYPE glyphRunType;"]},{"entry":[{},"HMIL_RESOURCE hGeometry;"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"273pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"}"},{"entry":"\/\/CMilResourcePen::SetWidth"},{"entry":"struct PenSetWidthPacket : Packet"},{"entry":"{"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"259pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"int penCommand = CMilPenData::MilPenSetWidth;"]},{"entry":[{},"double width;"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"273pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"}"},{"entry":"\/\/CMilResourcePen::Marshal"},{"entry":"struct PenMarshalPacket : Packet"},{"entry":"{"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"259pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"int penCommand = CMilPenData::MilPenCopy;"]},{"entry":[{},"HMIL_RESOURCE hBrushRes;"]},{"entry":[{},"HMIL_RESOURCE hWidthRes;"]},{"entry":[{},"double width;"]},{"entry":[{},"double miterLimit;"]},{"entry":[{},"BYTE startCap;"]},{"entry":[{},"BYTE endCap;"]},{"entry":[{},"BYTE dashCap;"]},{"entry":[{},"BYTE joinCap;"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"273pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"}"},{"entry":"\/\/CMasterHWndRenderTarget::Marshal"},{"entry":"struct HWndRenderTargetMarshalPacket : Packet"},{"entry":"{"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"259pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"int targetCommand = CCompositionCommand::HWNDRT_CREATE;"]},{"entry":[{},"HWND m_hWnd;"]},{"entry":[{},"HMIL_CONTEXT m_hCompositionContext;"]},{"entry":[{},"UINT uiWidth;"]},{"entry":[{},"UINT uiHeight;"]},{"entry":[{},"UINT dwRTInitializationFlags;"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"273pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"}"},{"entry":"\/\/CMasterHWndRenderTarget::SetCompositionContext"},{"entry":"struct HWndRenderTargetSetCompositionContextPacket : Packet"},{"entry":"{"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"259pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"int targetCommand = CCompositionCommand::HWNDRT_SETCONTEXT;"]},{"entry":[{},"HMIL_CONTEXT hCompositionContext;"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"273pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"}"},{"entry":"\/\/CMasterHWndRenderTarget::Resize"},{"entry":"struct HWndRenderTargetResizePacket : Packet"},{"entry":"{"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"259pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"int targetCommand = CCompositionCommand::HWNDRT_RESIZE;"]},{"entry":[{},"UINT uiWidth;"]},{"entry":[{},"UINT uiHeight;"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"273pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"}"},{"entry":"\/\/CMasterHWndRenderTarget::Invalidate"},{"entry":"struct HWndRenderTargetInvalidatePacket : Packet"},{"entry":"{"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"259pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"int targetCommand = CCompositionCommand::HWNDRT_INVALIDATE;"]},{"entry":[{},"RECT rect;"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"273pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"}"},{"entry":"\/\/CMasterHWndRenderTarget::SetRenderingMode"},{"entry":"struct HWndRenderTargetSetRenderingModePacket"},{"entry":"{"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"259pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"int targetCommand = CCompositionCommand::HWNDRT_SETRENDERINGMODE;"]},{"entry":[{},"UINT dwRTInitializationFlags;"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"273pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"}"},{"entry":"\/\/CMasterGenericRenderTarget::Marshal"},{"entry":"struct GenericRenderTargetMarshalPacket : Packet"},{"entry":"{"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"259pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"int targetCommand = CCompositionCommand::HWNDRT_CREATE;"]},{"entry":[{},"UINT uiWidth;"]},{"entry":[{},"UINT uiHeight;"]},{"entry":[{},"UINT dwRTInitializationFlags;"]},{"entry":[{},"\/\/ memory copied info here"]},{"entry":[{},"\/\/ pEncoder\u2212>AddMemory(& m_Info, sizeof(m_Info));"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"273pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"}"},{"entry":"\/\/CMasterGenericRenderTarget::SetCompositionContext("},{"entry":"struct GenericRenderTargetSetCompositionContextPacket : Packet"},{"entry":"{"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"259pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"int targetCommand = CCompositionCommand::HWNDRT_SETCONTEXT;"]},{"entry":[{},"HMIL_CONTEXT hCompositionContext;"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"273pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"}"},{"entry":"\/\/CMilMasterTimeline::Marshal"},{"entry":"struct TimelineMarshalPacket : Packet"},{"entry":"{"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"259pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"int type = MilTimelineMarshal;"]},{"entry":[{},"BYTE fIsEnabled;"]},{"entry":[{},"HMIL_RESOURCE hParentTimeline;"]},{"entry":[{},"UINT intervalCount;"]},{"entry":[{},"\/\/ copy memory here."]},{"entry":[{},"\/\/pEncoder\u2212>AddMemory(&ct, sizeof(MIL_CREATE_TIMELINE));"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"273pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"}"},{"entry":"\/\/CMilMasterTimeline::SendAddIntervalPacket"},{"entry":"struct TimelineAddIntervalPacket : Packet"},{"entry":"{"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"259pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"int type = MilTimelineAddInterval;"]},{"entry":[{},"\/\/ copy interval memory here"]},{"entry":[{},"\/\/pEncoder\u2212>AddMemory(pti, sizeof(MIL_TIME_INTERVAL));"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"273pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"}"},{"entry":"\/\/CMilMasterTimeline::SendClearPacket"},{"entry":"struct TimelineSendClearPacket : Packet"},{"entry":"{"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"259pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"int type = MilTimelineClear;"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"273pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"}"},{"entry":"\/\/CMilMasterTimeline::SendEnablePacket"},{"entry":"struct TimelineSendEnablePacket : Packet"},{"entry":"{"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"259pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"int type = MilTimelineEnable;"]},{"entry":[{},"HMIL_RESOURCE hParentTimeLine;"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"273pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"}"},{"entry":"\/\/CMilMasterTimeline::SendDisablePacket"},{"entry":"struct TimelineSendDisablePacket : Packet"},{"entry":"{"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"259pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"int type = MilTimelineDisable;"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"273pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"}"},{"entry":"\/\/HRESULT CMilResourceTransform::MarshalIdentity"},{"entry":"struct TransformMarshalIdentityPacket : Packet"},{"entry":"{"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"259pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"int transType = MilTransformIdentity;"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"273pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"}"},{"entry":"\/\/HRESULT CMilResourceTransform::MarshalMatrix3\u00d72"},{"entry":"struct TransformMarshalMatrix3\u00d72Packet : Packet"},{"entry":"{"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"259pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"int transType = MilTransformMatrix3\u00d72;"]},{"entry":[{},"double S_11;"]},{"entry":[{},"double S_12;"]},{"entry":[{},"double S_21;"]},{"entry":[{},"double S_22;"]},{"entry":[{},"double DX;"]},{"entry":[{},"double DY;"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"273pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"}"},{"entry":"\/\/HRESULT CMilResourceTransform::MarshalMatrix4\u00d74"},{"entry":"struct TransformMarshalMatrix4\u00d74Packet : Packet"},{"entry":"{"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"259pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"int transType = MilTransformMatrix4\u00d74;"]},{"entry":[{},"float coef[16];"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"273pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"}"},{"entry":"\/\/HRESULT CMilResourceTransform::MarshalTranslate"},{"entry":"struct TransformMarshalTranslatePacket : Packet"},{"entry":"{"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"259pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"int transType = MilTransformTranslate;"]},{"entry":[{},"double OffsetX;"]},{"entry":[{},"HMIL_RESOURCE OffsetXRes;"]},{"entry":[{},"double OffsetY;"]},{"entry":[{},"HMIL_RESOURCE OffsetYRes;"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"273pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"}"},{"entry":"\/\/HRESULT CMilResourceTransform::MarshalScale"},{"entry":"struct TransformMarshalScalePacket : Packet"},{"entry":"{"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"259pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"int transType = MilTransformScale;"]},{"entry":[{},"double ScaleX;"]},{"entry":[{},"HMIL_RESOURCE hScaleXReS;"]},{"entry":[{},"double ScaleY;"]},{"entry":[{},"HMIL_RESOURCE hScaleYRes);"]},{"entry":[{},"double CenterX;"]},{"entry":[{},"double CenterY;"]},{"entry":[{},"HMIL_RESOURCE hCenterRes;"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"273pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"}"},{"entry":"\/\/HRESULT CMilResourceTransform::MarshalRotate"},{"entry":"struct TransformMarshalRotatePacket : Packet"},{"entry":"{"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"259pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"int transType = MilTransformRotate;"]},{"entry":[{},"double Angle;"]},{"entry":[{},"HMIL_RESOURCE hAngleRes;"]},{"entry":[{},"double CenterX;"]},{"entry":[{},"double CenterY;"]},{"entry":[{},"HMIL_RESOURCE hCenterRes;"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"273pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"}"},{"entry":"\/\/HRESULT CMilResourceTransform::MarshalSkew"},{"entry":"struct TransformMarshalSkewPacket : Packet"},{"entry":"{"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"259pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"int transType = MilTransformSkew;"]},{"entry":[{},"double AngleX;"]},{"entry":[{},"HMIL_RESOURCE hAngleXRes;"]},{"entry":[{},"doble AngleY;"]},{"entry":[{},"HMIL_RESOURCE hAngleYRes;"]},{"entry":[{},"double CenterX;"]},{"entry":[{},"double CenterY;"]},{"entry":[{},"HMIL_RESOURCE hCenterRes;"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"273pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"}"},{"entry":"struct TransformMarshalCollection : Packet"},{"entry":"{"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"259pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"int transType = MilTransformCollection;"]},{"entry":[{},"int Count;"]},{"entry":[{},"\/\/ reserve memory for collection handles"]},{"entry":[{},"\/\/for (UINT i=0; i<pTrans\u2212>Count; i++)"]},{"entry":[{},"\/\/{"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"231pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"\/\/","pEncoder\u2212>AddResource(pTrans\u2212>Resources[i]);"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"273pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"\/\/}"},{"entry":"}"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}]}}]}}},"An example of the instructions to perform steps  to  is below. In the example, the composition module and render targets are created. A batch open control packet is then sent. The commands to create a composition node, a render data resource, and composition context are sent. The root node is set on the composition context, and the composition context is set on the hwnd target. At this point, the composition node, composition context, render data resource, root node, and hwnd target are associated. Resources are then created. The resources are a geometry resource, a solid brush resource, and a pen resource. Update packets are then sent to update the pen, add an ellipse to the geometry resource, and draw the geometry. A filled rectangle is then drawn and the render data is set on the composition node and the composition node is updated. To delete the composition, resource release commands are sent to release the resources and the composition device is destroyed.",{"@attributes":{"id":"p-0078","num":"0077"},"tables":{"@attributes":{"id":"TABLE-US-00003","num":"00003"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0","pgwide":"1"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"259pt","align":"left"}},"thead":{"row":{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"main( )"},{"entry":"{"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"245pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"MilCompositionDevice_Create(&g_hCompositionDevice);"]},{"entry":[{},"\/\/ Creates the device \u2212> generates a connect packet."]},{"entry":[{},"\/\/ handled by composition proxy that creates a client composition"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"259pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":"device for this connection."}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"245pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"MilResource_HWndRenderTarget_Create(&g_hRenderTarget);"]},{"entry":[{},"\/\/ create a render target \u2212> generates a resource command to create"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"259pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":"the rendertarget resource."}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"245pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"MilCompositionDevice_CreateBatch(&hBatch);"]},{"entry":[{},"\/\/ Opens a batch \u2212> generates a batch open control packet"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"56pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"189pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"\/\/","handled by client composition device."]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"245pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"MilResource_CompositionNode_Create(&g_hRootNode);"]},{"entry":[{},"\/\/ create a composition node \u2212> generates a resource command packet"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"259pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":"to create a composition node."}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"245pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"MilResource_RenderData_Create(&g_hRenderData);"]},{"entry":[{},"\/\/ create a render data resource \u2212> generates a resource command"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"259pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":"packet to create a render data."}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"245pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"MilResource_CompositionContext_Create(&g_hCompositionContext);"]},{"entry":[{},"\/\/ create a composition context command \u2212> generates a resource"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"259pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":"command packet to create a composition context."}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"245pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"MilCompositionContext_SetRootNode(g_hCompositionContext,"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"84pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"175pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"g_hRootNode,"]},{"entry":[{},"hBatch);"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"245pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"\/\/ set the root node on the composition context \u2212> generates a"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"259pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":"resource command to set the root node on the context"}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"\/\/","packet is handled by composition context resource"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"245pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"MilResource_HWndRenderTarget_SetCompositionContext(g_hRenderTarget,"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"259pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":"g_hCompositionContext,"}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"112pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"147pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"hBatch) );"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"245pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"\/\/ set the composition context on the hwnd target \u2212> generates a"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"259pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":"resource command packet to set the comp context on hwnd target"}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"245pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"\/\/ packet is handled by the hwnd target resource."]},{"entry":[{},"MilResource_Geometry_Create(&hGeometry);"]},{"entry":[{},"\/\/ create a geometry resource \u2212> generates a resource command packet"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"259pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":"that creates a geometry resource."}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"245pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"MilResource_SolidBrush_Create(&hSolidBrush);"]},{"entry":[{},"\/\/ create a solid brush resource \u2212> generates no packet."]},{"entry":[{},"MilResource_SolidBrush_Update(hSolidBrush,"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"84pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"175pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"1.0,"]},{"entry":[{},"NULL,"]},{"entry":[{},"&color,"]},{"entry":[{},"g_hColor,"]},{"entry":[{},"hBatch);"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"245pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"\/\/ set the color on the solid \u2212> generates a resource command packet"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"259pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":"that creates a brush resource with the given color."}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"245pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"MilResource_Pen_Create(&g_hPen);"]},{"entry":[{},"\/\/ create a pen resource \u2212> generates a resource command packet that"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"259pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":"creates the pen resource."}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"245pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"MilResource_Pen_Update(g_hPen,"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"231pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"hSolidBrush,"]},{"entry":[{},"5,"]},{"entry":[{},"g_hPenWidth,"]},{"entry":[{},"MilPenCapFlat,"]},{"entry":[{},"MilPenCapFlat,"]},{"entry":[{},"MilPenCapFlat,"]},{"entry":[{},"MilPenJoinMiter,"]},{"entry":[{},"10,"]},{"entry":[{},"0,"]},{"entry":[{},"NULL,"]},{"entry":[{},"0.0,"]},{"entry":[{},"NULL,"]},{"entry":[{},"hBatch"]},{"entry":[{},");"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"245pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"\/\/ update the pen \u2212> generates a pen update packet"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"70pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"175pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"\/\/","handled by the pen resource"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"245pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"MilGeometry_UpdateEllipse(hGeometry,"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"231pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"NULL,"]},{"entry":[{},"100.0,"]},{"entry":[{},"NULL,"]},{"entry":[{},"50.0,"]},{"entry":[{},"NULL,"]},{"entry":[{},"100.0,"]},{"entry":[{},"100.0,"]},{"entry":[{},"NULL,"]},{"entry":[{},"hBatch);"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"245pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"\/\/ update the geometry to contain an ellipse \u2212> generates a geometry"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"259pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":"update packet"}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"126pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"119pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"\/\/","handled by the"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"259pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":"geometry resource"}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"245pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"MilRenderData_DrawGeometry(g_hRenderData,"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"231pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"hSolidBrush,"]},{"entry":[{},"g_hPen,"]},{"entry":[{},"hGeometry"]},{"entry":[{},");"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"245pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"\/\/ draw the geometry to the render data \u2212> generates a render data"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"259pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":"update packet to draw the geometry"}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"112pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"133pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"\/\/","handled by the render"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"259pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":"data resource"}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"245pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"MilRenderData_FillRectangle_InlineSolidBrush(g_hRenderData,"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"231pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"200,"]},{"entry":[{},"200,"]},{"entry":[{},"300,"]},{"entry":[{},"300,"]},{"entry":[{},"colory"]},{"entry":[{},");"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"245pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"\/\/ draw a filled rectangle using a specified brush to the render"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"259pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":"data \u2212> generates a render data update packet"}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"245pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"\/\/"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"259pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":"handled by the render data resource"}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"245pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"MilCompositionNode_SetRenderData(g_hRootNode, g_hRenderData,"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"259pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":"hBatch);"}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"245pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"\/\/ sets the render data on a composition node \u2212> generates a"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"259pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":"composition node update packet"}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"126pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"119pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"\/\/","handled by the comp"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"259pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":"node resource"}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"245pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"MilBatch_Commit(hBatch);"]},{"entry":[{},"\/\/ generates a bath close\/commit packet."]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"56pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"189pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"\/\/","handled by client composition device."]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"245pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"\/\/ this is the notification processing loop"]},{"entry":[{},"do"]},{"entry":[{},"{"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"231pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"WaitOnEvents( );"]},{"entry":[{},"MilCompositionDevice_ProcessNotifications(g_hCompositionDevice);"]},{"entry":[{},"\/\/ here we internally process notification packets coming from"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"259pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":"the client composition device."}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"245pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"} while( composition still running: controlled by layer using the"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"259pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":"compositor);"}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"245pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"\/\/ all the resource release calls generate resource destroy packets"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"259pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":"and queue flush control packets ."}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"56pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"189pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"\/\/","handled by client composition device."]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"245pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"MilResource_Release(g_hCompositionContext);"]},{"entry":[{},"MilResource_Release(g_hRootNode);"]},{"entry":[{},"MilResource_Release(g_hHandleTable, g_hRenderData);"]},{"entry":[{},"MilResource_Release(g_hPen);"]},{"entry":[{},"MilResource_Release(g_hColor);"]},{"entry":[{},"MilResource_Release(g_hPenWidth);"]},{"entry":[{},"MilResource_Release(g_hITarget);"]},{"entry":[{},"MilCompositionDevice_Destroy(g_hCompositionDevice);"]},{"entry":[{},"\/\/ on exiting the loop we shut down"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"259pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"}"},{"entry":"LONG_PTR lMainWindowProc("}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"HWND","hwnd,"]},{"entry":[{},"UINT","message,"]},{"entry":[{},"WPARAM","wParam,"]},{"entry":[{},"LPARAM","lParam"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"245pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},")"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"259pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":"{"}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"245pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"HRESULT hr = S_OK;"]},{"entry":[{},"HMIL_BATCH hBatch = NULL;"]},{"entry":[{},"switch (message)"]},{"entry":[{},"{"]},{"entry":[{},"case WM_ERASEBKGND:"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"231pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"return 0;"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"245pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"case WM_SIZE:"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"217pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"if","(g_hHandleTable &&"]},{"entry":[{},{},"g_hRenderTarget &&"]},{"entry":[{},{},"g_hCompositionDevice)"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"231pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"{"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"MilCompositionDevice_CreateBatch("]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"56pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"g_hCompositionDevice,"]},{"entry":[{},"&hBatch);"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"\/\/ sends an open batch packet."]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"56pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"161pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"\/\/","handled by client composition device."]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"MilResource_HWndRenderTarget_Resize(g_hRenderTarget,"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"154pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"105pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"LOWORD(lParam),"]},{"entry":[{},"HIWORD(lParam),"]},{"entry":[{},"hBatch);"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"\/\/ resize render target \u2212> sends a render target resize"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"259pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":"resource command"}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"84pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"133pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"\/\/","handled by render target resource"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"MilBatch_Commit(hBatch);"]},{"entry":[{},"\/\/ send close\/commit batch control packet"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"56pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"161pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"\/\/","handled by client composition device."]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"231pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"}"]},{"entry":[{},"break;"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"245pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"case WM_PAINT:"]},{"entry":[{},"{"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"231pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"PAINTSTRUCT ps;"]},{"entry":[{},"BeginPaint(hwnd, &ps);"]},{"entry":[{},"if ((ps.rcPaint.left < ps.rcPaint.right) &&"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"(ps.rcPaint.top < ps.rcPaint.bottom) &&"]},{"entry":[{},"g_hCompositionDevice)"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"231pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"{"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"MilCompositionDevice_CreateBatch("]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"70pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"189pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"g_hCompositionDevice,"]},{"entry":[{},"&hBatch));"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"\/\/ sends an open batch packet."]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"56pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"161pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"\/\/","handled by client composition device."]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"MilBatch_Commit(hBatch);"]},{"entry":[{},"\/\/ send close\/commit batch control packet"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"56pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"161pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"\/\/","handled by client composition device."]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"231pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"}"]},{"entry":[{},"EndPaint(hwnd, &ps);"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"245pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"}"]},{"entry":[{},"break;"]},{"entry":[{},"case WM_DESTROY:"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"231pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"if (g_hCompositionDevice)"]},{"entry":[{},"{"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"MilCompositionDevice_CreateBatch("]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"70pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"189pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"g_hCompositionDevice,"]},{"entry":[{},"&hBatch;"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"\/\/ sends an open batch packet."]},{"entry":[{},"MilResource_Release("]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"70pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"189pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"g_hHandleTable,"]},{"entry":[{},"g_hRenderTarget);"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"\/\/ send a resource delete control packet"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"56pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"161pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"\/\/","handled by client composition device."]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"MilCompositionDevice_FlushChangeQueue("]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"70pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"189pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"g_hCompositionDevice);"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"\/\/ send a queue flush control packet."]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"56pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"161pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"\/\/","handled by client composition device."]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"MilBatch_Commit(hBatch);"]},{"entry":[{},"\/\/ send close\/commit batch control packet"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"56pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"161pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"\/\/","handled by client composition device."]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"231pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"}"]},{"entry":[{},"PostQuitMessage(0);"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}]}}]}}}],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"BRIEF DESCRIPTION OF THE DRAWINGS","p":["While the appended claims set forth the features of the present invention with particularity, the invention, together with its objects and advantages, may be best understood from the following detailed description taken in conjunction with the accompanying drawings of which:",{"@attributes":{"id":"p-0012","num":"0011"},"figref":"FIG. 1"},{"@attributes":{"id":"p-0013","num":"0012"},"figref":"FIG. 2","i":"a "},{"@attributes":{"id":"p-0014","num":"0013"},"figref":"FIG. 2","i":"b "},{"@attributes":{"id":"p-0015","num":"0014"},"figref":"FIG. 3","i":"a "},{"@attributes":{"id":"p-0016","num":"0015"},"figref":"FIG. 3","i":"b "},{"@attributes":{"id":"p-0017","num":"0016"},"figref":"FIG. 4","i":"a "},{"@attributes":{"id":"p-0018","num":"0017"},"figref":"FIG. 4","i":"b "},{"@attributes":{"id":"p-0019","num":"0018"},"figref":"FIG. 5","i":"a "},{"@attributes":{"id":"p-0020","num":"0019"},"figref":"FIG. 5","i":"b "},{"@attributes":{"id":"p-0021","num":"0020"},"figref":"FIG. 6","i":"a "},{"@attributes":{"id":"p-0022","num":"0021"},"figref":"FIG. 6","i":"b "},{"@attributes":{"id":"p-0023","num":"0022"},"figref":"FIG. 7","i":"a "},{"@attributes":{"id":"p-0024","num":"0023"},"figref":"FIG. 7","i":"b "},{"@attributes":{"id":"p-0025","num":"0024"},"figref":"FIG. 8"},{"@attributes":{"id":"p-0026","num":"0025"},"figref":"FIG. 9"},{"@attributes":{"id":"p-0027","num":"0026"},"figref":"FIG. 10"}]},"DETDESC":[{},{}]}
