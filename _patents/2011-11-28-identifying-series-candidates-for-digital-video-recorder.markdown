---
title: Identifying series candidates for digital video recorder
abstract: Embodiments that relate to defining series for digital video recording are disclosed. One embodiment provides a method including receiving selection of a set of one or more video content series for which to automatically schedule recording updates, wherein each video content series is of a series type selected from a plurality of series types and each series type utilizes a corresponding update module selected from a plurality of update modules. The method further comprises receiving a trigger configured to trigger an updating of one or more series types, and for each video content series to be updated based upon the trigger received, obtaining a list of candidate video items for potential scheduling by executing the corresponding update module.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09398248&OS=09398248&RS=09398248
owner: MICROSOFT TECHNOLOGY LICENSING, LLC
number: 09398248
owner_city: Redmond
owner_country: US
publication_date: 20111128
---

{"@attributes":{"id":"description"},"BRFSUM":[{},{}],"heading":["BACKGROUND","SUMMARY","DETAILED DESCRIPTION"],"p":["Video content may be obtained from a variety of sources, including linear and non-linear sources. Linear content sources, such as broadcast television channels, provide content according to a specified schedule, whereas non-linear sources allow users to access available content on demand.","Digital video recorders (DVRs) may be utilized by television viewers to allow linear content to be consumed in an on-demand manner. DVRs may allow users to elect to record single instances of shows, or a series of episodes of a show by identifying the series. Users may locate such shows and series for recording by searching by title and\/or series identification. After recording, a user may view a user-selectable list of recorded series and\/or shows to choose a show for playback. In this manner, a DVR may provide a user with the option of watching linear content whenever and as often as desired.","Embodiments are disclosed herein that relate to defining series and identifying candidate video items for automatic recording by a DVR. For example, one embodiment provides a method of identifying candidate video items for recording on a digital video recording device. The method includes receiving selection of a set of one or more video content series for which to automatically schedule recording updates, wherein each video content series is of a series type selected from a plurality of series types and each series type utilizes a corresponding update module selected from a plurality of update modules. The method further comprises receiving a trigger configured to trigger an updating of one or more series types, and for each video content series to be updated based upon the trigger received, obtaining a list of candidate video items for potential scheduling by executing the corresponding update module.","This Summary is provided to introduce a selection of concepts in a simplified form that are further described below in the Detailed Description. This Summary is not intended to identify key features or essential features of the claimed subject matter, nor is it intended to be used to limit the scope of the claimed subject matter. Furthermore, the claimed subject matter is not limited to implementations that solve any or all disadvantages noted in any part of this disclosure.","As mentioned above, a DVR system may be utilized by television viewers to allow linear content to be consumed in an on-demand manner. Current DVRs may allow users to elect to record a series of episodes of a show by identifying the series, for example, by searching by title and\/or series identification. Upon selecting a series for recording, the automatic updating of the recording of the series may be triggered by receipt of an updated electronic programming guide (EPG) by the DVR system. In this manner, the recording of the series may automatically be kept up-to-date.","However, video content is increasingly available from sources other than television channels. For example, movies and television shows are becoming more commonly available via streaming from websites. Additionally, cable and satellite television providers also often provide on-demand content.","Current DVR systems may allow a user to access and\/or record on-demand content available from the user's television provider, but such content may be available via a different user experience than linear content recordings. Further, current DVR systems may not allow a user to record and\/or stream content from other locations such as websites. Thus, users wishing to view related non-linear content may have to seek out such content via other avenues, such as a through a computer network. Further, the definitions of series utilized by current DVR systems may be limited and not easily extensible.","Accordingly, embodiments are disclosed herein that relate to defining series other than pre-scheduled broadcast linear content for automatic recording by a DVR system. Briefly, the disclosed embodiments may allow virtually any algorithm configured to run when triggered and return a list of potential candidate video items to be used to locate video items to record as a series. Examples of such algorithms may include, but are not limited to, algorithms that define series by subject matter, by social network, by recommendation, by popularity, and the like. Such series may include either or both of linear content and non-linear content. The algorithm may pass the resulting list of candidates on to a scheduler that selects which candidates to schedule. The scheduler also may track recording history so that previously recorded candidates, candidates for which recording has been previously cancelled, and potentially other categories of candidates, provided by the algorithm are not again recorded. Through such algorithms, types of series (\u201cnon-linear series types\u201d) other than traditional, pre-scheduled linear content series that are recorded based upon series identification and periodic schedule, may be defined, recorded, and enjoyed in an integrated user experience with linear series.","It will be understood that a non-linear series type may utilize content obtained from a linear source, and potentially even multiple content items from a single linear series from a linear source. For example, a non-linear series may be defined as episodes of a series available from a linear content source that a particular user has never viewed, wherein the series may include repeats as well as new episodes. As another example, a non-linear series may be defined as only new episodes of a series available from a linear content source, such that repeat episodes are not recorded even if they have been previously recorded.","Embodiments are also disclosed that allow new algorithms, which also may be referred to herein as update modules, to be added to a DVR scheduling system as pluggable components. In such embodiments, new update modules that define new series types may be added by dropping in code that defines the update module. Such code may be discovered automatically and used immediately. Such a simple process for adding new update modules may allow differentiated offerings to be provided on a same service. For example, customers may be able to subscribe to a higher tier of service to gain access to more powerful series definitions and associated update modules. Further, third parties may be able to develop series definitions for a DVR service.","Prior to discussing these embodiments in more detail, an example use environment  is described with reference to . Use environment  comprises a plurality of DVR systems , illustrated as an arbitrary number n of DVR systems. Each DVR system  is connected to a remote DVR service  via a network . As discussed in more detail below, the remote DVR service  may be configured to schedule recordings of video items for each DVR system  via a scheduler  based upon candidates received from update modules  and user account information  stored on the remote DVR service  for each DVR system . The video items scheduled for recording may be obtained from one or more linear content sources , and also one or more non-linear content sources .","It will be understood that, in other embodiments, tasks described herein as being performed by DVR service  may be performed locally on each DVR system , or distributed between the DVR service  and each DVR system . More generally, while described in the context of a remote DVR service that schedules recordings for client devices, it will be understood that the embodiments disclosed herein may be implemented in any other suitable use environment. For example, in some embodiments, both scheduling and recording may be performed remotely from client playback devices. In such an embodiment, the recording device may be implemented as a cloud-based service that may be shared across multiple users and\/or that allocates storage per user. Such a recording service may or may not be combined with a scheduling service. As another non-limiting example, in other embodiments, scheduling-related tasks may be performed on client devices, while recording is implemented as a cloud-based service.","Each DVR system  is configured to record scheduled programs, and also to play back recorded programs upon user request. Each DVR system therefore may comprise recorded video content . Further, each DVR system may be configured to store pointers  that point to available non-linear content. With regard to non-linear content, as such content may be available on-demand, the content may be accessed at any time without recording a local copy. Therefore, in such instances, local storage space may be conserved by storing a pointer  to a non-linear content item, rather than a copy of the non-linear content item. In other instances, a copy of a non-linear content item may be stored instead of a pointer, e.g. if a non-linear content item is due to expire (e.g. will no longer be available at a content source), if a network connection between a DVR system and a non-linear content source is unreliable, if local storage is preferred by a user, etc. In either case, this may allow DVR systems  to present linear and non-linear content in an integrated user experience.","The linear content source , as mentioned above, provides a stream of linear scheduled content , such as a plurality of television broadcasts, to each DVR system . The linear content source may provide such content to each DVR system  via a direct channel , and\/or via computer network . Examples of suitable linear content sources  include, but are not limited to, cable television and satellite television providers. The linear content source  further may provide other information to DVR systems , such as an electronic programming guide  (\u201cEPG\u201d), and non-linear content by video on demand (VOD) . The direct channel  may take the form of a coaxial cable, fiber optic cable, satellite link, and\/or any other communication channel suitable for delivering linear content. While the embodiment of  depicts a single linear content source  for clarity, it will be understood that DVR systems  also may receive linear content from more than one linear content source.","The DVR service  may further comprise a metadata service  for storing and searching metadata related to content available for recording and\/or playback. The metadata service  may be configured to receive content requests from the scheduler , and in response, to obtain information regarding the availability of content that matches the requests. The metadata service  may query locally stored metadata  and\/or external content sources. Locally stored metadata  may include previously received information, such as information from EPG  from linear content source , for example.","Each external non-linear content source  likewise may include a search service  with which the metadata service  can interface to discover available content on the non-linear content source through queries. Further, each external non-linear content source also comprises a content service  configured to deliver non-linear content  to end-user devices, such as DVR systems . Examples of suitable non-linear content sources include, but are not limited to, television content web sites, movie content web sites, user-uploaded video web sites, and social networking web sites.","As mentioned above, in some embodiments, each update module  comprises logic that may be used to locate potential candidate video items (e.g. by presentation time\/channel, network location\/URL, and\/or any other suitable information) to record as a part of a series. It will be understood that each candidate may or may not eventually be recorded, and the decision regarding whether to schedule the recording of each identified candidate may be performed by the update module, by a different module (e.g. scheduler ), by logic residing on a DVR system , and\/or by any other suitable module. It further will be understood that the candidate video items may comprise individual episodes\/shows, and also may comprise series of shows in some embodiments.","The user account information  utilized by the DVR service  comprises information that allows the update modules  to identify candidate video items for each series defined by a user.  depicts user account information stored for an arbitrary number N of users, and illustrates example data stored for \u201cuser \u201d as user  data . User  data  comprises series settings  for each DVR series defined by user . The series settings  for a first series (\u201cseries \u201d) are shown at the top of a stack of series settings to illustrate that a plurality series are defined and recorded by user . The series settings  for each series includes update module settings  that comprise information to be provided to an update module  specified by the series settings  for locating candidates. The user account information also comprises DVR settings  that specify settings to be applied across all of a user's defined series.","Each update module may utilize similar or different settings than other update modules, and the update module settings  may have any suitable format. For example, in some embodiments, the update module settings  may comprise a single binary large object (BLOB) field that is parsed into a settings object by the update module  when triggered. In such an embodiments, the settings definition may be opaque to other components of the DVR service . In other embodiments, the update module settings  may have any other suitable form.","As a more detailed example of series settings  and update module settings , a selected update module  may be configured allow a user to define a series as an RSS (RDF Site Summary, or Really Simple Syndication) feed provided by a favorite celebrity in which the celebrity provides a feed of recommended video items. The user's series settings for such a series may identify the particular update module  that identifies candidate video items for an RSS-type series, while the update module settings  may comprise an identity of the particular subject matter (e.g. the specific RSS feed) for which to search for series candidates. In this manner, different user-defined series (e.g. RSS feeds of different celebrities) may utilize a common update module  by providing different update module settings  (e.g. different RSS feed identities) to the common update module .","Each update module  may be identified by a different identifier. Such an identifier may be defined in an update module class and discovered as the class\/DLL (dynamically linked library) is loaded. Such an identifier may or may not be human-readable. In the event that two update modules inadvertently share an identifier, the resulting ID collision may be handled in any suitable manner. For example, in some embodiments, in the event of an ID collision, the first update module to use that identifier may take priority over the second.","Each update module  may access the metadata service  as well as the series settings  and DVR settings  for each user to help locate candidate video items. As mentioned above, the metadata service  may search locally stored information, as well as remotely stored information, to locate candidate video items for a series. In some embodiments, the metadata service  may be configured to return video item listings permitted for the particular user account for which a series is being updated to the exclusion of unpermitted items. Likewise, access of the update modules  to the series settings  and DVR settings  may be performed via a set of application programming interfaces (APIs) provided by the DVR scheduler. In this manner, the implementation of each update module  may be self-contained, thereby facilitating the addition of new update modules  for new series types.","It will be understood that an update module may obtain data related to video content from sources other than the metadata service . As non-limiting examples, an update module may obtain data from the Internet (e.g. from an RSS feed) and\/or from stored personalized data (e.g. data regarding what a user has previously recorded and played). As a more specific example, an update module may be configured to record sports games of a specified team only if an opposing team has a winning record. In this case, the update module may access sports information via the Internet to obtain data related to team statistics.","New update modules  may be added to the DVR service  in any suitable manner. For example, update modules  may be configured at build time, and\/or may be discovered at runtime. Where discovered at runtime, update modules  may be discovered by performing a runtime search for classes implementing a specific common interface. In some embodiments, the build-time configured update modules may have no extra access over the run-time discovered algorithms, and components of the DVR service  that interact with the update modules  may interact with the update modules based upon the common interface.",{"@attributes":{"id":"p-0030","num":"0029"},"figref":"FIG. 2","b":["104","202","204","104","204","108","104","110"]},"Further, in some embodiments, the trigger  may comprise a payload  that contains information regarding changes in state that have occurred since a prior trigger of the same type was issued. As more specific examples, a payload of an EPG update trigger may comprise an updated EPG; a payload of a social network notification may comprise identities of users that have performed relevant activities; a payload of a timer may comprise an elapsed time since a previous trigger; and a payload of an RSS feed trigger may comprise information regarding a most-recent update made by the RSS feed originator. In other embodiments, a trigger may not comprise such a payload.","Upon receipt of a trigger, the trigger handler  may determine, based upon the series settings of a user, whether any series defined by that user is to be updated. For example, the trigger handler  may first determine whether any series is configured to be triggered by the trigger received. Further, in some embodiments, for each series configured to be triggered by the trigger received, the trigger handler  also may determine via the payload  whether the changes that have occurred since the last trigger of that type affect each series configured to be triggered by the received trigger. Any series that meet both of these conditions may be updated by executing the corresponding update module. In other embodiments, any series configured to be updated by the trigger received may be updated without regard to whether changes since the last trigger affect that series.","Continuing with , the trigger handler  may launch each triggered update module  based upon the series settings  for each relevant series. Each executed update module  then may receive series settings  for the relevant series and parse the update module settings  to obtain information specific for the series instance being updated. Each executed update module  may then query the metadata service  with the update module settings . The metadata service  may search locally stored metadata, and also may forward queries to remote content sources (e.g. non-linear content sources ) to locate candidate video items for recording. After performing such queries, the metadata service  may return the results to the relevant update module  to form a list of candidate video items. The update module  then may forward the list of candidate video content items to a scheduling module  of the scheduler, which may schedule recordings and provide a recording schedule to a corresponding DVR system .","In some embodiments, each update module  may be configured to prioritize candidates before forwarding the candidates for scheduling. For example, if two candidates are scheduled to record at the same time but only one tuner is available, then the DVR system will select the higher priority candidate for recording. Further, the DVR service  may be configured to allow each instance of an update module to be prioritized against each other. Thus, a higher priority series may be scheduled first, and then a lower priority series may be scheduled if tuners are still available.","The use of multiple algorithms that define series in different manners may increase the possibility of a show being covered by multiple series at a time. Therefore, each DVR system  may be configured to allow a scheduled or recorded show to belong to multiple series at one time. Further, this multiplicity may be displayed to a user in a user interface so that the user may know where the show is actually coming from. Cancellations and deletions of series and recorded shows may be handled in any suitable manner. For example, in some embodiments, if any individual series is cancelled, the scheduled recording may remain active until all parent series are cancelled. Likewise, if an individual scheduled recording or recorded show is canceled, the show is removed from all of its parent series.","In addition to generating candidates, update modules also may have \u201chooks\u201d that allow them to interact with other parts of the DVR lifecycle. Examples of such hooks include the ability to run immediately after an account has reconciled to trigger other accounts (e.g. based upon schedule data and\/or DVR data (including DVR data across accounts)) and the ability to be notified when schedules are canceled and take actions that can influence future candidates generated by an algorithm. Likewise, if a DVR system  fails while recording a video item, the update module may be informed of the failed recording so that the item is not filtered from future candidate lists. Such mechanisms thus may allow update modules to not only determine candidate items for recording, but also to influence the workflow of the DVR system .","Other non-limiting examples of hooks are as follows. First, an algorithm may include a hook configured to construct relevant data at series creation. In the case of a social network-based update module, a hook may store information in a table that the user creating the series is following another user's subset of recordings. Another hook may allow such data to be cleaned up upon cancellation of a series. Also, a hook may allow recording of a previously-scheduled video content item to be stopped and\/or deleted based upon events occurring in the presentation depending upon a user's settings. As a more specific example, if a user wishes not to view games that a selected team does not win, such a hook may allow the recording to be deleted based upon the final score of the game as determined by the update module after recording is completed.","In some embodiments, the DVR service  and\/or DVR systems  may comprise a mechanism to blacklist particular series (or other groupings of series, such as genres) that a user may not want automatically recorded. For example, if a celebrity repeatedly recommends episodes of a particular situation comedy show that a user does not wish to record, the user may be provided an option when deleting the show regarding whether to stop recording any episodes of the show if it appears in that series, or in any series in the future. It will be understood that such a filter may be applied globally across all series, or locally to the series from which the show was deleted.","Similar blacklisting may be used in other implementations. For example, in some embodiments, a user may be able to promote an episode of a show that a user enjoys to a series recording. In such an embodiment, upon promotion of the show to a series, the promotion mechanism also may add the series to a blacklist that applies non-globally to other series so that episodes of that particular show may not record as a part of other series. This may help, for example, to avoid confusion from having older episodes of the show mixed with newer episodes, and therefore may help to avoid user confusion.",{"@attributes":{"id":"p-0040","num":"0039"},"figref":"FIG. 3","b":["300","300","300"]},"Method  comprises, at , receiving from a plurality of digital video recording devices selections of sets of video content series for which to automatically schedule recording updates, wherein each video content series has a series type and utilizes a corresponding update module for that series type. It will be understood that the series of each set may change over time as users make additional selections to add\/delete series from that user's set.","Method  further comprises, at , receiving a first updating trigger of first trigger type, wherein the updating trigger is configured to trigger the updating of series recording schedules of one or more series types. Upon receiving the first updating trigger, method  optionally comprises, at , determining whether any video content series is to be updated based upon the trigger. As mentioned above, such determination may be made based upon whether a series is of a type that is triggered by the type of trigger received, and\/or upon whether changes have taken place that affect that particular series instance (e.g. from information contained in a trigger payload). It will be understood that, in some embodiments, a single type of trigger may be utilized Likewise, in some embodiments, a trigger may not have an accompanying payload.","After determining those video content series that are to be updated, method  comprises, at , obtaining a list of candidate video items for each video content series to be updated by running the corresponding update module, and then at , sending a first series update recording schedule to a corresponding recipient digital recording device. It will be understood that process  may be skipped in some embodiments, for example where a single trigger is used to trigger all update modules.","Continuing, method  comprises, at , receiving a second updating trigger of second trigger type, wherein the updating trigger is configured to trigger the updating of series recording schedules of one or more series types. Upon receiving the second updating trigger, method  comprises, at , determining whether any video content series is to be updated based upon the second updating trigger. As mentioned above regarding process , process  may be skipped in some embodiments. After determining those video content series that are to be updated, method  comprises, at , obtaining a list of candidate video items for each video content series to be updated by running the corresponding update module, and then at , sending a second series update recording schedule to a corresponding recipient digital recording device. It will be understood that the first and second series updates may be sent to the same or different DVR systems. It further will be understood that the relative order of the first and second triggers shown in  are presented for the purpose of example and are not intended to be limiting, as the triggers could be received concurrently and\/or at any relative time separation.","The above described methods and processes may be tied to a computing system including one or more computers. For example, referring again to , each DVR system  and the DVR service  may be implemented as a computer application, computer service, computer API, computer library, and\/or other computer program product.",{"@attributes":{"id":"p-0046","num":"0045"},"figref":"FIG. 4","b":["400","400","400"]},"Computing system  includes a logic subsystem  and a data-holding subsystem . Computing system  may optionally include a display subsystem , communication subsystem , and\/or other components not shown in . Computing system  may also optionally include user input devices such as keyboards, mice, game controllers, cameras, microphones, remote control units, head-mounted displays, and\/or touch screens, for example.","Logic subsystem  may include one or more physical devices configured to execute one or more instructions. For example, logic subsystem  may be configured to execute one or more instructions that are part of one or more applications, services, programs, routines, libraries, objects, components, data structures, or other logical constructs. Such instructions may be implemented to perform a task, implement a data type, transform the state of one or more devices, or otherwise arrive at a desired result.","Logic subsystem  may include one or more processors that are configured to execute software instructions. Additionally or alternatively, logic subsystem  may include one or more hardware or firmware logic machines configured to execute hardware or firmware instructions. Processors of logic subsystem  may be single core or multicore, and the programs executed thereon may be configured for parallel or distributed processing. Logic subsystem  may optionally include individual components that are distributed throughout two or more devices, which may be remotely located and\/or configured for coordinated processing. One or more aspects of logic subsystem  may be virtualized and executed by remotely accessible networked computing devices configured in a cloud computing configuration.","Data-holding subsystem  may include one or more physical, non-transitory, devices configured to hold data and\/or instructions executable by logic subsystem  to implement the herein described methods and processes. When such methods and processes are implemented, the state of data-holding subsystem  may be transformed (e.g., to hold different data).","Data-holding subsystem  may include removable media and\/or built-in devices. Data-holding subsystem  may include optical memory devices (e.g., CD, DVD, HD-DVD, Blu-Ray Disc, etc.), semiconductor memory devices (e.g., RAM, EPROM, EEPROM, etc.) and\/or magnetic memory devices (e.g., hard disk drive, floppy disk drive, tape drive, MRAM, etc.), among others. Data-holding subsystem  may include devices with one or more of the following characteristics: volatile, nonvolatile, dynamic, static, read\/write, read-only, random access, sequential access, location addressable, file addressable, and content addressable. In some embodiments, logic subsystem  and data-holding subsystem  may be integrated into one or more common devices, such as an application specific integrated circuit or a system on a chip.",{"@attributes":{"id":"p-0052","num":"0051"},"figref":"FIG. 4","b":["410","410"]},"It is to be appreciated that data-holding subsystem  includes one or more physical, non-transitory devices. In contrast, in some embodiments aspects of the instructions described herein may be propagated in a transitory fashion by a pure signal (e.g., an electromagnetic signal, an optical signal, etc.) that is not held by a physical device for at least a finite duration. Furthermore, data and\/or other forms of information pertaining to the present disclosure may be propagated by a pure signal.","The terms \u201cmodule\u201d and \u201cprogram\u201d may be used to describe an aspect of computing system  that is implemented to perform one or more particular functions. In some cases, such a module or program may be instantiated via logic subsystem  executing instructions held by data-holding subsystem . It is to be understood that different modules and\/or programs may be instantiated from the same application, service, code block, object, library, routine, API, function, etc. Likewise, the same module and\/or program may be instantiated by different applications, services, code blocks, objects, routines, APIs, functions, etc. The terms \u201cmodule\u201d and \u201cprogram\u201d are meant to encompass individual or groups of executable files, data files, libraries, drivers, scripts, database records, etc.","It is to be appreciated that a \u201cservice\u201d, as used herein, may be an application program executable across multiple user sessions and available to one or more system components, programs, and\/or other services. In some implementations, a service may run on a server responsive to a request from a client.","When included, display subsystem  may be used to present a visual representation of data held by data-holding subsystem . As the herein described methods and processes change the data held by the data-holding subsystem, and thus transform the state of the data-holding subsystem, the state of display subsystem  may likewise be transformed to visually represent changes in the underlying data. Display subsystem  may include one or more display devices utilizing virtually any type of technology. Such display devices may be combined with logic subsystem  and\/or data-holding subsystem  in a shared enclosure, or such display devices may be peripheral display devices.","When included, communication subsystem  may be configured to communicatively couple computing system  with one or more other computing devices. Communication subsystem  may include wired and\/or wireless communication devices compatible with one or more different communication protocols. As nonlimiting examples, the communication subsystem may be configured for communication via a wireless telephone network, a wireless local area network, a wired local area network, a wireless wide area network, a wired wide area network, etc. In some embodiments, the communication subsystem may allow computing system  to send and\/or receive messages to and\/or from other devices via a network such as the Internet.","It is to be understood that the configurations and\/or approaches described herein are exemplary in nature, and that these specific embodiments or examples are not to be considered in a limiting sense, because numerous variations are possible. The specific routines or methods described herein may represent one or more of any number of processing strategies. As such, various acts illustrated may be performed in the sequence illustrated, in other sequences, in parallel, or in some cases omitted. Likewise, the order of the above-described processes may be changed.","The subject matter of the present disclosure includes all novel and nonobvious combinations and subcombinations of the various processes, systems and configurations, and other features, functions, acts, and\/or properties disclosed herein, as well as any and all equivalents thereof."],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"BRIEF DESCRIPTION OF THE DRAWINGS","p":[{"@attributes":{"id":"p-0006","num":"0005"},"figref":"FIG. 1"},{"@attributes":{"id":"p-0007","num":"0006"},"figref":"FIG. 2"},{"@attributes":{"id":"p-0008","num":"0007"},"figref":"FIG. 3"},{"@attributes":{"id":"p-0009","num":"0008"},"figref":"FIG. 4"}]},"DETDESC":[{},{}]}
