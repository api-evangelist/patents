---
title: Interlayer fast authentication or re-authentication for network communication
abstract: A system and method are provided for establishing a network communication session using fast authentication. In a network system a client or user device may establish a communication session with a server using full authentication. If the session is interrupted or discontinued and resumption of the session is requested, a session identifier of the previously established session may be compared to the session identifier of the requested session. If a match is detected, the session may be resumed using a fast authentication (or re-authentication) procedure such that the session is resumed more efficiently and expediently. Fast authentication may be performed, for example, even when the first session and the resumed second session are of different authentication layers, different types of network interfaces and/or different locations. Thus, a session, such as a TLS session, may resume functionality among multiple defined authentication protocols or technologies such as 802.1X, PANA or cellular based systems.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=07587598&OS=07587598&RS=07587598
owner: Telcordia Technologies, Inc.
number: 07587598
owner_city: Morristown
owner_country: US
publication_date: 20030701
---

{"@attributes":{"id":"description"},"RELAPP":[{},{}],"p":["This application claims the benefit of U.S. Provisional Application 60\/427,185, filed Nov. 19, 2002, incorporated herein in its entirety.","Aspects of the present invention relate to fast authentication for network communication and, in particular, fast authentication for network communication\/access over multiple authentication protocols and\/or technologies.","The use of networks is widespread. Millions of people connect daily to a network, such as the Internet. Networks have become commonplace and essential to communicate with others, exchange data, or perform business activities, for example. With the rapid growth in the number and type of devices and terminals accessing the Internet, users can potentially use devices having the capability of attaching via different multiple access media and technologies to interface to the network. However, as more people utilize the convenience of communication over a network, there has been an increase in the concerns for security over the network. For example, a user may wish to communicate with another user without the risk of a third party intervening or eavesdropping. Secure communication is also necessary for many business activities such as accessing an account over the network or accessing private information, either of which may be a wired or a wireless network. A user attempting to access his private account information over a network would desire his private information to be accessed only by authorized individuals without the threat of eavesdropping or tampering by unauthorized individuals.","The Internet lacks security and many of the protocols used in the Internet do not provide any security at all. Hackers have tools to sniff passwords off of the network leaving unencrypted passwords being sent over the network extremely vulnerable. Also, some client\/server applications rely on the client program to provide the identity of the user who is using it. As there might be no verification process, a hacker may misidentify himself to gain unauthorized access to private data. Some applications allow the user to self-restrict himself to only perform activities that the user is permitted to do. In these applications, there might be no enforcement which might lead to breaches of security if the user is not completely honest. Thus, network access technologies have been evolving rapidly to meet the need for network security.","In response to security concerns, methods and protocols were devised to provide for network access authentication. The Transport Layer Security (TLS) protocol was derived from SSL and has been used to provide privacy and data integrity between two communicating applications by providing certificate-based peer authentication. Thus, TLS provides secure communication over a network. HTTP was originally used freely on the Internet without regard to security of sensitive material. However, increased use of HTTP for private applications necessitated that measures be taken to ensure security. Using the TLS protocol, a client initiates a connection to a server and begins a TLS handshake. After the TLS handshake is complete, the client initiates the first HTTP request. The HTTP data is sent as TLS application data. As an example, a user may access his bank account over the Internet through secure HTTP. Secure HTTP uses the TLS protocol secure transport mechanism such that unauthorized users may not access the private information.","The TLS protocol provides a secure communication channel between peer entities. The peer entities may authenticate themselves to one another by the use of a shared secret key between the two peer entities in the connection in which the peer entities exchange key information. Public-key based technology and cryptosystems, such as the Diffie-Hellman key agreement protocol or the RSA cryptosystem, are used to share and create the secret key. For example, each of a first and a second user generates a corresponding private value drawn from a set of values. Using the private values, each of the first and second users generate and exchange corresponding public values to compute a shared secret key. The secret key provides authentication for the authorized users such that the communication between the first and second users is protected from unauthorized users who do not possess the secret key.","In addition, TLS further provides for session resumption under-certain circumstances. If a secret key has already been established, TLS supports rapid session resumption within an application that uses the TLS for securing the communication channel between the communicating entities using the already established master secret key.","Extensible Authentication Protocol (EAP) was also developed in response to an increasing demand for user authentication for remote access users. EAP is a general protocol that provides, a framework for various network authentication methods. Originally developed to support PPP authentication, EAP has been expanded to support other authentication protocols such as for wireless LAN access, layer 3 network access, layer 2-based network technology, PANA (Protocol for, Carrying Authentication for Network Access), or 802.1X for example. Some authentication methods support carrying TLS messages for establishing a secure channel between a client and an authentication server. Passwords or other data may be carried with the encryption over the secure channel. EAP selects a specific authentication method during the authentication phase so that an authenticator may request more information before determining the specific authentication mechanism to be used. EAP authentication methods that support carrying TLS messages include EAP-TLS (Extensible Authentication Protocol-Transport Layer Security), EAP-TTLS (Extensible Authentication Protocol-Tunneled Transport Layer Security), or PEAP (Protected Extensible Authentication Protocol), for example.","EAP authentication methods that support TLS messages may support fast re-authentication based on TLS. For example, the Odyssey system developed by Funk Software provides wireless LAN authentication based on 802.1X and EAP-TTLS. The system uses TLS session resumption for fast re-authentication when clients roam within a single layer 2 technology, for example, among 802.11a or 802.11b access points. However, this scheme does not provide for flexible roaming among defined technologies such as roaming between wireless LAN and server based network or roaming between wireless LAN and wired Ethernet, for example.","There is currently no known method or system for permitting clients to roam among multiple layer 2 technologies with fast re-authentication while maintaining security (i.e., interlayer TLS sharing). There is also no known method or system for performing multiple levels of authentication and access control at different layers. Enabling fast re-authentication across multiple layers or different subnets in one or, more layers would provide greater convenience to users during re-authentication by providing a more rapid secure authentication.","Thus, a need exists in the art for a method and system for providing fast re-authentication across different layers or providing fast re-authentication across different subnets in one or more layers.","A method, system and apparatus is provided for providing fast authentication or re-authentication of a communication session. For example, a user device or client may establish a communication session in a network via full authentication. During full authentication, a session identifier associated with the session may be derived. The session may further be performed at any of a number of authentication layers. For example, full authentication may be performed at layer 2 using 802.1X as the layer 2 authentication protocol. Full authentication may also be performed at layer 3, for example, using the PANA authentication protocol.","A communication session may be resumed using fast authentication. Using fast authentication, authentication can be performed more efficiently and with greater flexibility. In fast authentication, a request for a communication session may be received from a user device or client. The request may further comprise a session identifier. In one example of the present invention, the server may receive the request and compare the session identifier with a stored session identifier associated with a previously established session. If a match is found, the session may be resumed using fast authentication.","In another example of the present invention, a session is resumed over a different authentication layer or a different network interface or technology than the first session. For example, the first session may be over a layer 2 authentication layer using, for example, 802.1X as the authentication protocol. In this example, the resumed session may be over a different authentication layer. For example, the resumed session may be resumed using fast authentication over the layer 3 authentication layer.","In another example of the present invention, a session is resumed over a different network interface. For example, a user device may be connected to a network through an 802.11 interface. If full authentication is performed at layer 2 through 802.1X and a corresponding session identifier is determined, for example, then fast authentication may be used on session resumption by connecting the user device to a network through a different interface. As an example, the session may be resumed through a physical interface on which PANA is running using fast authentication.","The present invention thus provides increased flexibility and efficiency using fast authentication in session resumption over a plurality of defined authentication protocols or network interfaces.","Aspects of the present invention provide a system and method for providing fast authentication or re-authentication between a user device or client accessing a network and an authenticator (e.g., server). Fast authentication or re-authentication may be performed, for example, across layers such as in interlayer sharing or across different sub-networks in one or more layers. If no established session is detected, full authentication may be performed.","Full authentication of a user device session occurs when the user device requests a session from an authenticator, such as a server, based on user credentials such as certificates and passwords. Specifically, full authentication typically occurs when there is no pre-established session based on the requested session detected. In full authentication, a user device obtains a certificate to access a network. Access to the network may be through wireless LANs, for example. The certificate may be obtained in a variety of ways such as but not limited to through a portable storage medium such as a floppy disk, SD card or a PCMCIA memory card or through connection through a wired Ethernet interface to a LAN. Full authentication occurs through an authentication layer such as layer 2 (802.1X) or layer 3 (e.g., PANA). When a user device is connected to the network through layer 2 but does not support 802.1X-based authentication, for example, full authentication may be performed through layer 3 (e.g., PANA).","In full authentication, the user certificate installed on the user device is presented to the authenticator (e.g., the server). Presentation of the user certificate may be through EAP-TLS, for example. The authenticator or the server receives the user certificate, verifies the status of the user certificate and, based on the user certificate, establishes an authentication session with the user device if the certificate is valid.","Typically, full authentication involves generating a master secret key and sharing the master secret key between the user device and the authenticator (i.e., the server). For example, with 802.1X authentication, keys may be distributed from the authenticator (i.e., the server) to an 802.11 access point and are used to secure data exchange between the user device and an 802.11 access point. Thus, in full authentication, certificate exchange and key exchange are typically performed and a session identifier may be derived. With the performance of these time-consuming steps, full authentication requires more time than fast or rapid authentication which does not require certificate or key exchange sequences.","In fast or rapid authentication, a session identifier is derived which is associated with an established session between a user device and an authenticator (i.e., a server). A session identifier may be an arbitrary byte sequence that identifies an active or resumable session state. A session identifier may be from an earlier connection, the present connection or any other currently active connection. If the session identifier is from a present connection, a client may update the random structures and derived values of a connection, for example. If the session identifier is from another currently active connection, several independent secure connections may be established without repeating the full handshake protocol. A request for resumption of a session may include a session identifier associated with the established session. For example, a session may be established through full authentication involving certificate and key exchange sequences. A session identifier may also be derived which is associated with, the session. When resumption of the session is requested as, for example, following disconnection of the session, a session identifier may be received and matched with a stored session identifier corresponding to the previously established session. Disconnection of a session may occur through a variety of ways. For example, a user may be mobile and may roam out of range of the first session such that the session must be resumed at a new location. Also, a user may switch to another. interface or authentication layer, for example.","If the received session identifier corresponds to the stored session identifier, then fast authentication may be performed between the user device and the authenticator (i.e., the server). In fast authentication or re-authentication, the session may be resumed more rapidly as compared to full authentication because in fast authentication, the session is reused by, for example, completing a handshake without performing a certificate or key exchange sequence.","In one embodiment of the present invention, a Mobility Communication System (MCS) provides network security including support for secure and fast roaming for user devices or mobile devices. Mobility may be enhanced through rapid authentication or re-authentication as, for example, through inter-sub-network roaming, intra-sub-network roaming, inter-layer session sharing, or mid-session IP mobility handoff.","In one embodiment, the system may contain wireless LAN or 802.1X-based authentication. In such a system, there may be dynamic generation and distribution of 802.11 per-packet encryption keys or secure and fast roaming. The system may further contain additional layers or higher layers of security features. For example, the system may contain Layer 2 and Layer 3 wireless security features. Layer 2 wireless features may include 802.1X or wireless LAN and Layer 3 wireless features may include PANA-based user authentication.","The system may utilize a variety of peer authentication techniques to provide a secure communication channel between peer entities. For example, Transport Layer Security (TLS) may be used in which a secure communication channel between peer entities may be established through certificate based peer authentication. With TLS, a master secret key is generated and key information is shared and exchanged based on public key technology. Additionally, TLS provides fast re-authentication capability as discussed herein by basing the, re-authentication on an already established master secret key. With fast authentication or re-authentication, a session may be resumed without, for example, performing certificate or key exchange sequences that are typically performed in full authentication procedures. In TLS \u201csession resumption\u201d (i.e., fast authentication), the already established master secret key between peers may be used as a credential to re-authenticate peers. Thus, instead of performing time-consuming full authentication involving complex and burdensome cryptographic computation to create a new master key, fast re-authentication may be accomplished more efficiently through the session resumption capability of TLS.","TLS messages may be carried in a framework that supports authentication methods. One example of such a framework is the Extensible Authentication protocol (EAP). EAP supports any number of authentication methods. For example, EAP supports PPP network access authentication. However, EAP may also support other network access authentication methods such as IEEE 802.1X or PANA (Protocol for Carrying Authentication for Network Access). IEEE 802.1X is an example of a Layer 2 network based technology. In addition, the authentication methods used with EAP may carry TLS messages to establish a secure channel between a client and an authentication server. These authentication methods include, for example, EAP-TLS (Extensible Authentication Protocol-Transport Layer Security), EAP-TTLS (EAP-Tunneled TLS protocol), or PEAP (Protected EAP). Authentication methods used in EAP that also support TLS messages may further support fast re-authentication through TLS session resumption.","PANA is a higher layer authentication network access authentication protocol that may be supported by EAP. PANA is a layer 3 protocol that may function independently from layer 2 technologies such as IEEE 802.1X. Although PANA may be used independently from layer 2 protocols, PANA may also be used simultaneously or in parallel with layer 2 protocols such as IEEE 802.1X, for example, for different purposes. As PANA is supported by EAP which also supports TLS based authentication, PANA may carry EAP for authenticating the client to provide for a more secure way for authentication.",{"@attributes":{"id":"p-0037","num":"0036"},"figref":["FIG. 1","FIG. 1"],"b":["101","101","101","101","103","101","104","103","109","106","106","101","103","106","103","107","111","103","101"]},"In this example, 802.1X supports carrying EAP () such that layer 2 authentication  may support EAP-based authentication. For full authentication under EAP-TLS mechanisms, a user might, first obtain a certificate to access the network from 802.11 wireless LANs. However, user certificates are not limited to 802.11 wireless LANs as user certificates may be applicable to any number of corresponding networks and authentication protocols. For example, a user may obtain a certificate for use in PANA authentication. A user certificate may be obtained in a number of ways. For example, a user certificate may be obtained through any removable storage device and a readable medium such as a floppy disk, SD card or a PCMCIA memory card. Alternatively, a certificate may be obtained through a wired Ethernet interface from the sub-network in which the authenticator is located. In addition, the user certificate may be obtained by connecting the user device  through a cradle connecting a device that stores the user certificate. The user certificate may thus be obtained from the device that stores the user certificate. Full authentication does not necessarily require a user to present a user certificate for the authentication to succeed. Instead, the user can use username\/password as credentials that can be carried over a secure TLS tunnel.","In the example of , during full authentication, a user certificate installed on the user device  may be presented to the MCS server  through, for example, EAP-TLS. EAP messages are transmitted from the user device  to the access point . The access point  receives the EAP messages from the user device  and passes the messages to the MCS server . The MCS server  may then authenticate the user if the user certificate is deemed to be valid by the MCS server  after verification of the status of the user certificate from the Active Directory Services Server (ADS) . For example, the MCS server  may access the ADS Server  by using the Lightweight Directory Access Protocol (LDAP ) as illustrated in . After the user is authenticated, a TLS session may be established as an authentication session and the TLS session may be identified by a TLS session identifier. The TLS session may be associated with a master secret key generated and shared between the user device  and the MCS Server . When a new TLS session identifier is assigned, it is typically assigned by the MCS server.",{"@attributes":{"id":"p-0040","num":"0039"},"figref":"FIG. 1","b":["110","114","101","111","112","110","104","2","104","110","110","114","101","111","113"]},"As described, an established TLS session may be used for fast authentication or re-authentication. Fast authentication or re-authentication may be implemented across transitions, including transitioning across different authentication layers, for example, when different layers may be involved in different access control, or transitioning across different technology or different locations. Also, fast authentication or re-authentication may be implemented when any combination of transitioning occurs. For example, in interlayer TLS session sharing, a transition may occur across different authentication layers, for example from layer 2 (e.g., 802.1X) to layer 3 (e.g., PANA). Also, fast authentication or re-authentication may be performed during intra-technology or inter-technology handoff or during reconnection. If a session such as a TLS session had been established previously, a session identifier may be derived such that resumption of the TLS session may be accomplished through fast authentication or re-authentication such that a TLS handshake over EAP specifying the corresponding session ID may be performed. If a match is found, the session may be resumed under fast authentication. For example, the TLS handshake may be completed without exchanging a user certificate or performing a key exchange sequence. Thus, fast authentication is more efficient than full authentication.",{"@attributes":{"id":"p-0042","num":"0041"},"figref":["FIG. 2","FIG. 2","FIG. 2","FIG. 2"],"b":["210","220","230","235","245","240","1","2","210","220","245","240"]},{"@attributes":{"id":"p-0043","num":"0042"},"figref":"FIG. 2","b":["210","210","220","210","220","1","2","210","220"]},"Another embodiment of inter-technology handoff is exemplified in step C of . Handoff may occur between two network interfaces. In this example, the network interfaces are each of any different type. For example, as illustrated in step C, a user may change the interface from a wireless LAN interface (802.11),  to a wired Ethernet interface  within the same authentication layer (e.g., layer 3 ).","Step A+C of  illustrates a combination of intra-technology handoff and intertechnology handoff. Handoff may be accomplished between different network interfaces and different authentication layers. The network interfaces may be each of any different type and the authentication layers may be each of any different type. In this example, a user may change the interface from a wired Ethernet interface  to a wireless LAN interface  without changing location (i.e., in the office ) while also sharing session. information between both layer 2 authentication and layer 3 authentication.","In another illustrative embodiment (not illustrated), a combination of handoff between different locations, inter-technology handoff and interlayer TLS sharing between authentication layers may be performed. Handoff may be accomplished between different network interfaces, different locations and different authentication layers. The network interfaces may be each of any different type and the authentication layers may be each of any different type, and the location may be different. In this example, a user may change the interface from a wired Ethernet interface  to a wireless LAN interface  as well as changing the location (e.g., from a meeting room to an office) while also sharing session information.","Another example is to perform layer 2 authentication on the wired Ethernet by using 802.1X (not shown). Intra-technology handoff or inter-technology handoff may likewise occur as described to or from a different network interface (e.g., 802.11) or to or from a different authentication layer (e.g., layer 2 and layer 3 ).",{"@attributes":{"id":"p-0048","num":"0047"},"figref":"FIG. 2"},"As described herein, TLS session sharing may be used for re-authentication in a variety of situations including multi-layer authentication, intra-technology handoff, inter-technology handoff and re-connection. TLS session sharing may be implemented on a system such that multiple protocol entities share a TLS session with the protocol entities being implemented as separate processes in the operating system. Hence, in one example of implementation of the TLS session sharing technology, protocol specific modules may be used where any module may contain a set of procedures.","Implementation of TLS session sharing technology may include protocol modules implemented as separate programs or processes. In this case, a separate module may be provided for performing TLS session management or defining communication methods between the TLS session management module and each protocol module.  illustrates an example of a general architecture for implementation of TLS session sharing. In this example, the session utilizes a TLS session management module  that manages the TLS session. The TLS session management module  may store the TLS sessions shared among protocol modules and may communicate with other modules (, , ) through an inter-module communication mechanism such as an Application Programming Interface (API) (not shown). For example, if a protocol specific module creates a new TLS session, deletes an existing TLS session, modifies a parameter of an existing TLS session, retrieves a specific parameter of an existing TLS session or sends\/receives data over a TLS connection, the inter-module communication mechanism may be used to facilitate communication. In addition, the inter-module communication mechanism may also provide peering of modules such that only trusted modules may communicate with each other or may detect unavailability of a peer module so that appropriate error handling may be performed.","The modular structure of the implementation of the TLS session sharing provides improved TLS session management. If the protocol modules are distinct and separate and the TLS session management contains TLS session information in the form of a memory image, the program using a memory pointer to point to the memory location of a TLS session may be ineffective because the memory pointer may not be unique among different processes. Thus, if different process entities access the memory pointer of a different process, then problems may arise because the memory pointer may not be used to share information among different processes. Therefore, an external session handler may be used instead of the memory pointer. The external session handler is an integer value assigned by the TLS session management module and is unique for each of the protocol specific modules. In this way, each protocol-specific module may uniquely specify a TLS session.","The modular structure of the implementation of the TLS session sharing further provides robustness in functionality because modules performing remote processes may not always be working. If a remote process is terminated, for example, the remote process may be detected as no longer operational and the remote module may be detected as unavailable.","Also, security may be an important consideration in the modular structure of the implementation of the TLS session. Therefore, to prevent 3party attacker access to private information through, for example, the attacker inserting a module into the TLS session to obtain unauthorized information, communication between modules may contain security measures provided herein.",{"@attributes":{"id":"p-0054","num":"0053"},"figref":"FIG. 4","b":["401","402","401","403","404"]},"The TLS session management module maintains TLS session information for each TLS session. The TLS session information may include parameters and other information in addition to information specific to the TLS protocol. Parameters may include, for example, the external session handle described above, a reference counter which is an integer value that indicates the number of entities or protocol modules that share in the TLS session, a server identifier for identifying the TLS session management module, a server public and private key, or parameters associated with protocol-specific modules such as but not limited to client information such as an identifier, public key, master secret, random numbers or a timer for detecting unavailability of peer modules, for example.","Each protocol-specific module may maintain session information including, but not limited to an external session handle or parameters including but not limited to a server identifier or public key, a client public key, random numbers associated with the client or server, master secret or a timer such as a \u201ckeep-alive timer\u201d for detecting unavailability of a peer module.",{"@attributes":{"id":"p-0057","num":"0056"},"figref":"FIG. 5"},"Thus, a system and method are provided for establishing a network communication session using fast authentication. In a network system a client or user device may establish a communication session with a server using full authentication. If the session is interrupted or discontinued and resumption of the session is requested, a session identifier of the previously established session may be compared to the session identifier of the requested session. If a match is detected, the session may be resumed using a fast authentication (or re-authentication) procedure such that the session is resumed more efficiently and expediently. Fast authentication may be performed, for example, even when the first session and the resumed second session are of different authentication layers, different types of network interfaces and\/or different locations. Thus, a session, such as a TLS session, may resume functionality among multiple defined authentication protocols or technologies such as 802.1X, PANA or cellular based systems.",{"@attributes":{"id":"p-0059","num":"0058"},"figref":["FIG. 6","FIGS. 7 and 8"]},{"@attributes":{"id":"p-0060","num":"0059"},"figref":"FIG. 7"},{"@attributes":{"id":"p-0061","num":"0060"},"figref":"FIG. 8"},"It is understood that the present invention can take many forms and embodiments. The embodiments shown herein are intended to illustrate rather than to limit the invention, it being appreciated that variations may be made without departing from the spirit of the scope of the invention.","Although illustrative embodiments of the invention have been shown and described, a wide range of modification, change and substitution is intended in the disclosure and in some instances some features of the present invention may be employed without a corresponding use of the other features. Accordingly, it is appropriate that the appended claims be construed broadly and in a manner consistent with the scope of the invention."],"BRFSUM":[{},{}],"heading":["TECHNICAL FIELD","BACKGROUND","SUMMARY","DETAILED DESCRIPTION OF THE DRAWINGS"],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"BRIEF DESCRIPTION OF THE DRAWINGS","p":[{"@attributes":{"id":"p-0018","num":"0017"},"figref":"FIG. 1"},{"@attributes":{"id":"p-0019","num":"0018"},"figref":"FIG. 2"},{"@attributes":{"id":"p-0020","num":"0019"},"figref":"FIG. 3"},{"@attributes":{"id":"p-0021","num":"0020"},"figref":"FIG. 4"},{"@attributes":{"id":"p-0022","num":"0021"},"figref":"FIG. 5"},{"@attributes":{"id":"p-0023","num":"0022"},"figref":"FIG. 6"},{"@attributes":{"id":"p-0024","num":"0023"},"figref":"FIG. 7"},{"@attributes":{"id":"p-0025","num":"0024"},"figref":"FIG. 8"}]},"DETDESC":[{},{}]}
