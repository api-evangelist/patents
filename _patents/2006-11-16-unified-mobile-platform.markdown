---
title: Unified mobile platform
abstract: The present invention teaches a variety of systems, platforms, applications, and methods, and relates to mobile platforms, embedded native applications, Java virtual machines, user interfaces, and the like. The present invention discloses a mobile platform which unifies the worlds of the Java virtual machine and native applications to provide a unified and consistent environment for multitasking both Java and native applications within a mobile device.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08490070&OS=08490070&RS=08490070
owner: Myriad Group AG
number: 08490070
owner_city: Dubendorf
owner_country: CH
publication_date: 20061116
---

{"@attributes":{"id":"description"},"RELAPP":[{},{}],"heading":["CROSS-REFERENCE TO RELATED APPLICATION","TECHNICAL FIELD","BACKGROUND OF THE INVENTION","SUMMARY OF THE INVENTION","DETAILED DESCRIPTION OF THE PREFERRED EMBODIMENTS"],"p":["The present application claims priority to Diez et al's provisional patent application 60\/737,452, filed Nov. 16, 2005. The present application incorporates by reference Heeb's U.S. Pat. No. 6,964,039, issued Nov. 8, 2005, and Mancuso's Publication No. 2005203422, filed Aug. 3, 2005.","The present invention teaches a variety of systems, platforms, appliances, methods and relates to mobile platforms, embedded native applications, Java virtual machines, user interfaces, and the like. The present invention for example teaches a mobile platform which unifies the worlds of JAVA virtual machines and native applications at a high level by taking care of critical aspects of the native application model.","Mobile devices such as cell phones and PDAs come with so-called native applications built in. Native applications are typically pre-installed, cannot be removed, and are ready to run. Some of the applications are always running while others are started by the user via the menu.","Users are able to further customize their mobile devices by loading additional applications (e.g., instant messaging), games, etc. onto these devices. A MIDlet is a Java program that can be loaded onto such a mobile device. In order for a Java MIDlet to be able to run on a mobile device, the device must have an embedded Java Virtual Machine (\u201cJbed VM\u201d), an execution engine used to translate and execute Java byte-code into native processor instructions at run-time. Application Management Software (\u201cAMS\u201d) on the mobile device manages the downloading of MIDlets and their lifecycle, which consists of discovery of the MIDlet, installation, update, invocation, and removal.","When an application such as a MIDlet is written, it is not necessary to provide for certain tasks common to all programs, such as, for example, drawing icons and maintaining lists of items. Libraries containing these common functions in the form of reusable code can be requested, or called, and loaded during runtime of the application. The Jbed VM interfaces with an application programming interface (\u201cAPI\u201d), which allows a software application to make such calls to a library during runtime. This relieves programmers from the trouble of rewriting the same code for many of these common functions. The API allows access to these functions without necessarily divulging the source code of the functions or library.",{"@attributes":{"id":"p-0007","num":"0006"},"figref":["FIG. 1","FIG. 2","FIGS. 1 and 2"],"b":["10","12","14","20","12","14","12","14","16","12"]},"There exists a lack of unity between the world of the native platform running native applications and the parallel world of the Jbed VM running MIDlets within the native world. Integration of the worlds could be problematic since native applications and libraries are often written languages other than the Java programming language (such as C and C++). Additionally, multitasking a plurality of native and MIDlet applications led to problems with, for example, unfair resource allocation, misbehavior of one application affecting another application, inter-task communication, etc. Furthermore, in mobile devices where both a native graphical user interface (\u201cGUI\u201d) and Java GUI were running, enormous customization efforts would be required on the part of developers and the end user could experience an inconsistent look and feel in both the appearance and execution of various applications.","The present invention is described and illustrated in conjunction with systems, apparatuses, and methods of varying scope. Various exemplary embodiments are described herein relating to a system that unifies the worlds of Jbed VMs and native applications in mobile devices to provide improved multitasking capability for supporting multiple Java MIDlets and native applications. In addition to the aspects of the present invention described in this summary, further aspects of the invention will become apparent by reference to the drawings and by reading the detailed description that follows.","A method and apparatus for unification of the worlds of Jbed VMs and native platforms at high and low levels in mobile devices is provided. At the lower level, unification is achieved by integrating the Java world into the native world. This is achieved by requiring a verification-compilation process during installation of a MIDlet, allowing the compiled code to be executed in the native environment like any other native application. In addition, pre-installation and pre-compilation of MIDlets (\u201cahead of time,\u201d or \u201cAOT,\u201d compilation) by the AMS and Jbed VM enable MIDlets to be always-running, like their native counterparts.","The present invention further teaches unification of the Jbed VM world and native world at a higher level by integrating the native world into the Java world. This is accomplished by taking care of critical aspects of the native application model. Such aspects may include the multitasking manager, event manager, brand manager, and display manager. This Jbed Unified Mobile Platform (\u201cJUMP\u201d) results in a single application model and single application management for Java MIDlets and native applications.","Under the JUMP, a MIDlet shell, or wrapper, encapsulates a native application such that the Jbed VM recognizes the native application as a Java MIDlet. These encapsulated native applications (virtual MIDlets) are then able to directly call Java APIs in the Jbed VM during runtime to access and use various libraries and services. Additionally, MIDlet-wrapped native applications can be controlled by the Jbed environment; in other words, they can be ported into the Java runtime. Multitasking support for running multiple Java MIDlets and native applications is built in. Finally, implementation of the graphical user interface (GUI) occurs in the Jbed VM rather than in the native application platform, and is accessible from both Java MIDlet and native applications. This does not imply major porting changes in the native applications, but only a switch to the JUMP GUI implementation in the application user interface code.","The result is a unified multitasking environment for the unified Java\/native application model, with isolation and protection of the independent applications, fairness and resource management to avoid application starving, and protection of other applications against the misbehavior of one. For the end user, the multitasking experience is unified with a seamless and consistent look and feel for all applications.",{"@attributes":{"id":"p-0023","num":"0022"},"figref":"FIG. 3","b":["100","100","102","104","106","108","110","102","104","100","108"]},"The MVM  can be implemented within a virtual machine such as the JBED-FBCC virtual machine that improves upon the download process and lifecycle model by requiring a simultaneous verification-compilation process during installation of the standard MIDP-JAVA. Various exemplary embodiments are described herein relating to a system that unifies the worlds of Jbed VMs and native applications in mobile devices to provide improved multitasking capability for supporting multiple Java MIDlets and native applications. The MVM  includes a JAVA application API  that enables a plurality of MIDlets  to be brought into the platform  for native execution.","A method and apparatus for unification of the worlds of Jbed VMs and native platforms at high and low levels in mobile devices is provided. At the lower level, unification is achieved by integrating the Java world into the native world. This is achieved by requiring a verification-compilation process during installation of a MIDlet, allowing the compiled code to be executed in the native environment like any other native application. In addition, pre-installation and pre-compilation of MIDlets (\u201cahead of time,\u201d or \u201cAOT,\u201d compilation) by the AMS and Jbed VM enable MIDlets to be always-running, like their native counterparts.","The present invention further teaches unification of the Jbed VM world and native world at a higher level by integrating the native world into the Java world. This is accomplished by taking care of critical aspects of the native application model. Such aspects may include the multitasking manager, event manager, brand manager, and display manager. This Jbed Unified Mobile Platform (\u201cJUMP\u201d) results in a single application model and single application management for Java MIDlets and native applications.","Under the JUMP, a MIDlet shell, or wrapper, encapsulates a native application such that the Jbed VM recognizes the native application as a Java MIDlet. These encapsulated native applications (virtual MIDlets) are then able to directly call Java APIs in the Jbed VM during runtime to access and use various libraries and services. Additionally, MIDlet-wrapped native applications can be controlled by the Jbed environment; in other words, they can be ported into the Java runtime. Multitasking support for running multiple Java MIDlets and native applications is built in. Finally, implementation of the graphical user interface (GUI) occurs in the Jbed VM rather than in the native application platform, and is accessible from both Java MIDlet and native applications. This does not imply major porting changes in the native applications, but only a switch to the JUMP GUI implementation in the application user interface code.","The result is a unified multitasking environment for the unified Java\/native application model, with isolation and protection of the independent applications, fairness and resource management to avoid application starving, and protection of other applications against the misbehavior of one. For the end user, the multitasking experience is unified with a seamless and consistent look and feel for all applications.","Turning next to , a graphical user interface (\u201cGUI\u201d) implementation of a mobile platform  in accordance with another embodiment of the present invention. The mobile computing platform  includes a target hardware platform , a target software platform , a native application platform , a plurality of native applications , a multitasking virtual machine (\u201cMVM\u201d) , and a plurality of MIDlets  coupled to the MVM . The MVM  includes a JAVA application API , and a JAVA GUI  occurs in the Jbed MVM . The GUI  of the Jbed MVM  ports through a native GUI  operating in the native application platform . Thus the GUI  is accessible to both the MIDlets  and the native applications .","Turning next to , a cellular telephone  in accordance with another embodiment of the present invention will now be described. The telephone  includes a target hardware platform , a target software platform , a native application platform , a plurality of native applications , a multitasking virtual machine (\u201cMVM\u201d) . The MVM  includes a JAVA application API , and a JAVA GUI . The GUI  of the Jbed MVM  ports through a native GUI operating in the native application platform . Thus the GUI  is accessible to both the MIDlets  and the native applications .","The target hardware platform  includes standard components found in a portable cellular telephone such as a terminal chipset, i\/o peripherals such as LCD , and other terminal hardware. The target software platform  includes the operating system , protocol stack for communications , i\/o drivers  (file system, camera, IRDA, media peripherals, etc.), codecs , and other software components integral to the cellular phone . The native application platform  includes a telephony API , a messaging API , a file system API , a networking API , a GUI , an event manager , and other native applications.","The MVM  includes an MVM porting layer enabling the MIDLETs  to operate within the native application platform . A phone man-machine interface (MMI)  is enabled through native extensions API  including an event manager , an application\/process manager , a JAVA GUI API , and a brand manager API .",{"@attributes":{"id":"p-0033","num":"0032"},"figref":["FIG. 6","FIG. 5"],"b":"500"},{"@attributes":{"id":"p-0034","num":"0033"},"figref":"FIGS. 6-8"},"While a number of exemplary aspects and embodiments have been discussed above, those of skill in the art will recognize certain modifications, permutations, additions and sub-combinations thereof. It is therefore intended that the following appended claims and claims hereafter introduced are interpreted to include all such modifications, permutations, additions and sub-combinations as are within their true spirit and scope."],"BRFSUM":[{},{}],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"BRIEF DESCRIPTION OF THE DRAWINGS","p":["Embodiments of the invention are illustrated in the figures. However, as examples of the invention, the embodiments and figures are illustrative rather than limiting.",{"@attributes":{"id":"p-0015","num":"0014"},"figref":"FIG. 1"},{"@attributes":{"id":"p-0016","num":"0015"},"figref":"FIG. 2"},{"@attributes":{"id":"p-0017","num":"0016"},"figref":"FIG. 3"},{"@attributes":{"id":"p-0018","num":"0017"},"figref":"FIG. 4"},{"@attributes":{"id":"p-0019","num":"0018"},"figref":"FIG. 5"},{"@attributes":{"id":"p-0020","num":"0019"},"figref":"FIG. 6"},{"@attributes":{"id":"p-0021","num":"0020"},"figref":"FIG. 7"},{"@attributes":{"id":"p-0022","num":"0021"},"figref":"FIG. 8"}]},"DETDESC":[{},{}]}
