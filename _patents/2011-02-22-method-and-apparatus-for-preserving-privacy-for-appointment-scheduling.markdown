---
title: Method and apparatus for preserving privacy for appointment scheduling
abstract: An approach is provided for preserving privacy for appointment scheduling. A scheduling platform receives a request to schedule an appointment among one or more users. The scheduling platform determines availability information for the one or more users from one or more respective devices, wherein the availability information is encrypted using homomorphic encryption. The scheduling platform then processes and/or facilitates a processing of the availability information using, at least in part, one or more homomorphic functions to determine one or more recommended time slots for the appointment.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08667062&OS=08667062&RS=08667062
owner: Nokia Corporation
number: 08667062
owner_city: Espoo
owner_country: FI
publication_date: 20110222
---

{"@attributes":{"id":"description"},"BRFSUM":[{},{}],"heading":["BACKGROUND","SOME EXAMPLE EMBODIMENTS","DESCRIPTION OF SOME EMBODIMENTS"],"p":["Service providers and device manufacturers (e.g., wireless, cellular, etc.) are continually challenged to deliver value and convenience to consumers by, for example, providing compelling network services. One area of interest has been the development of personal information management (PIM) services and functions (e.g., calendar, contacts, tasks, etc.), particularly for use in mobile devices (e.g.; smartphones, cell phones, portable computers, etc.). For example, equipped with relatively powerful processors and fairly large memory and storage capabilities, such mobile devices can accommodate an increasing number of interactive applications that act on sensitive PIM-related data. The growing amount of sensitive information shared by mobile device users raises privacy concerns. Accordingly, service providers and device manufacturers face significant technical challenges to enabling privacy-preserving mechanisms when dealing with such information. For example, mobile device users have access to context-based services (e.g., social networking, dating, activity-partner searching, etc.) that often involve determining common availabilities for scheduling appointments (e.g., meetings) among the multiple users. In this case, privacy of the scheduling operation can be a concern to users, particularly when such services are provided by third parties or involve users who do not have previously established trust relationships.","Therefore, there is a need for an approach for efficiently preserving privacy for appointment scheduling among multiple users.","According to one embodiment, a method comprises receiving a request to schedule an appointment among one or more users. The method also comprises determining availability information for the one or more users from one or more respective devices, wherein the availability information is encrypted using homomorphic encryption. The method further comprises processing and\/or facilitating a processing of the availability information using, at least in part, one or more homomorphic functions to determine one or more recommended time slots for the appointment.","According to another embodiment, an apparatus comprising at least one processor, and at least one memory including computer program code, the at least one memory and the computer program code configured to, with the at least one processor, cause, at least in part, the apparatus to receive a request to schedule an appointment among one or more users. The apparatus is also caused to determine availability information for the one or more users from one or more respective devices, wherein the availability information is encrypted using homomorphic encryption. The apparatus is further caused to process and\/or facilitate a processing of the availability information using, at least in part, one or more homomorphic functions to determine one or more recommended time slots for the appointment.","According to another embodiment, a computer-readable storage medium carrying one or more sequences of one or more instructions which, when executed by one or more processors, cause, at least in part, an apparatus to receive a request to schedule an appointment among one or more users. The apparatus is also caused to determine availability information for the one or more users from one or more respective devices, wherein the availability information is encrypted using homomorphic encryption. The apparatus is further caused to process and\/or facilitate a processing of the availability information using, at least in part, one or more homomorphic functions to determine one or more recommended time slots for the appointment.","According to another embodiment, an apparatus comprises means for receiving a request to schedule an appointment among one or more users. The apparatus also comprises means for determining availability information for the one or more users from one or more respective devices, wherein the availability information is encrypted using homomorphic encryption. The apparatus further comprises means for processing and\/or facilitating a processing of the availability information using, at least in part, one or more homomorphic functions to determine one or more recommended time slots for the appointment.","In addition, for various example embodiments of the invention, the following is applicable: a method comprising facilitating a processing of and\/or processing (1) data and\/or (2) information and\/or (3) at least one signal, the (1) data and\/or (2) information and\/or (3) at least one signal based, at least in part, on (including derived at least in part from) any one or any combination of methods (or processes) disclosed in this application as relevant to any embodiment of the invention.","For various example embodiments of the invention, the following is also applicable: a method comprising facilitating access to at least one interface configured to allow access to at least one service, the at least one service configured to perform any one or any combination of network or service provider methods (or processes) disclosed in this application.","For various example embodiments of the invention, the following is also applicable: a method comprising facilitating creating and\/or facilitating modifying (1) at least one device user interface element and\/or (2) at least one device user interface functionality, the (1) at least one device user interface element and\/or (2) at least one device user interface functionality based, at least in part, on data and\/or information resulting from one or any combination of methods or processes disclosed in this application as relevant to any embodiment of the invention, and\/or at least one signal resulting from one or any combination of methods (or processes) disclosed in this application as relevant to any embodiment of the invention.","For various example embodiments of the invention, the following is also applicable: a method comprising creating and\/or modifying (1) at least one device user interface element and\/or (2) at least one device user interface functionality, the (1) at least one device user interface element and\/or (2) at least one device user interface functionality based at least in part on data and\/or information resulting from one or any combination of methods (or processes) disclosed in this application as relevant to any embodiment of the invention, and\/or at least one signal resulting from one or any combination of methods (or processes) disclosed in this application as relevant to any embodiment of the invention.","In various example embodiments, the methods (or processes) can be accomplished on the service provider side or on the mobile device side or in any shared way between service provider and mobile device with actions being performed on both sides.","For various example embodiments, the following is applicable: An apparatus comprising means for performing the method of any of originally filed claims -, -, and -.","Still other aspects, features, and advantages of the invention are readily apparent from the following detailed description, simply by illustrating a number of particular embodiments and implementations, including the best mode contemplated for carrying out the invention. The invention is also capable of other and different embodiments, and its several details can be modified in various obvious respects, all without departing from the spirit and scope of the invention. Accordingly, the drawings and description are to be regarded as illustrative in nature, and not as restrictive.","Examples of a method, apparatus, and computer program for preserving privacy for appointment scheduling are disclosed. In the following description, for the purposes of explanation, numerous specific details are set forth in order to provide a thorough understanding of the embodiments of the invention. It is apparent, however, to one skilled in the art that the embodiments of the invention may be practiced without these specific details or with an equivalent arrangement. In other instances, well-known structures and devices are shown in block diagram form in order to avoid unnecessarily obscuring the embodiments of the invention.",{"@attributes":{"id":"p-0026","num":"0025"},"figref":"FIG. 1"},"Beneath the proliferation of information exchange lays an extremely rich source of data; e.g., mobile phones, typically accompanying users twenty-four hours a day, learn significant amounts of information about their owners and their environment. Business models behind many of today's free web applications, such as social network websites or search engines, heavily rely on data in the clear, collected from the users and later used to offer context-based services. Yet, as the amount (and sensitiveness) of shared information increases, so do privacy concerns.","For example, applications such as Microsoft Outlook, Apple iCal, and Nokia Ovi are available on mobile devices, and they all offer time and activity management services. One desirable feature in such applications is activity scheduling: e.g., colleagues can schedule meetings at common available time slots, groups of friends can organize parties on weekends, and people unbeknownst to each other can engage in dating or other common activity based on their common free\/busy hours. However, one concern in such scheduling applications is that users would prefer not to share all personal information with everyone. For example, they may only want to share common availabilities, but not details about other records. They may also have reservations about sharing personal information with third-party service providers. Therefore, privacy of personal information, vis-\u00e0-vis service providers and peers, can influence the adoption and use of such scheduling applications.","More specifically, traditional methods for scheduling a meeting or appointment (e.g., finding a common available time among multiple parties) typically requires that all participants reveal their availability information during a given period of time. The longer this period is, the higher are the changes to find a common timeslot without too many interactions between the participants and\/or the scheduling server. However, revealing or sharing a user's availability over a long time range or period (e.g., in order to facility the scheduling task) can be misused to infer private information about the user such as affiliation, religion, culture, etc.","To address these concerns, a system  of  introduces a capability to use homomorphic functions so that potential meeting participants can protect the privacy of their availability information from each other and\/or the scheduling server, while still being able to find recommended timeslots for scheduling a requested appointment or meeting. In other words, the system  enables users to determine available time slots for scheduling a common appointment among the users without revealing any other information to other participating users or other components of the system  (e.g., a central scheduling server such as a scheduling platform ). In one embodiment, the system  uses secure and efficient cryptographic techniques assisted by a semi-trusted server (e.g., the scheduling platform ), which acts as a common scheduling service. As used herein, the term semi-trusted indicates that the scheduling platform  is not trusted with participants' clear data itself (i.e., it learns no information about users' inputs or outputs). Instead, the scheduling platform  obtains and\/or processes encrypted data and is trusted only to the extent that the scheduling platform  will not collude with other parties to defeat the encryption. As a result, in one embodiment, the scheduling platform  can be implemented by public services without disclosing any data in the clear.","In one embodiment, the system  uses privacy-preserving scheduling algorithms that take advantage of the homomorphic properties of asymmetric cryptosystems. By way of example, homomorphic cryptosystems are ones where mathematical operations on the ciphertexts have regular effects on the plaintexts. In other words, functions applied to homomorphically encrypted data results in application of the same the functions to the underlying data without exposing the underlying to the component performing the functions. By way of example, homomorphic cryptosystems include, but are not limited to, the Paillier Cryptosystem (e.g., E(m1)*E(m2)=E(m1+m2); E(m)=E(m*d); E(m)\u2260E(m)), the Boneh-Goh-Nissim Cryptosystem (e.g., undefined number of homomorphic additions; and one and only homomorphic multiplication).","In one embodiment, the scheduling platform  also serves to minimize the overhead resource burden incurred by mechanisms for privacy protection in applications executing locally at users devices (e.g., user equipment (UE) -, also collectively referred to as UEs ). In addition, the central scheduling platform  provides a centralized approached to protecting privacy to overcome, for instance, communication and\/or computational complexities associated with at least some distributed approaches. In other words, potentially heavy computations associated with manipulating homomorphically encrypted data to determine scheduling information can shifted from the UEs  (e.g., with comparatively less computing resources) to the scheduling platform . It is noted, however, that although the various embodiments of the approach are described herein with respect to a centralized server (e.g., the scheduling platform ), it is contemplated the various embodiment also apply to an approach where the functions of the centralized can be perform, at least in part, may any one or more of the participant devices (e.g., the UEs ).","As shown in , the system  comprises the UEs  have connectivity to the scheduling platform  via the communication network . In this example, the UEs  are associated with and represent respective participating users. As previously noted, the participating UEs  are typically mobile phones with relatively small computational resources. In one embodiment, the UEs  including respective scheduling managers -(also collectively referred to as scheduling managers ) to interface with the scheduling platform  and\/or to perform all or portion of the various embodiments of the privacy-preserving scheduling processes described herein. For example, scheduling managers  may compute respective homomorphic encryption keys (e.g., a Paillier keypair (pubK+privK)) for use in the processes of the system .","In addition, the UEs  may also execute one or more applications -(also collectively referred to as applications ) that maintain availability information (e.g., in a calendar) and\/or request scheduling of multiparty appointments (e.g., meetings). In one embodiment, the availability information is binary availability information (e.g., availability information indicates that a user either available or not available at a particular time slot). In addition or alternatively, the availability information can be non-binary availability information wherein availability is described with respect to a scale representing various degrees from available or not available for a particular time slot. By way of example, non-binary availability may be indicated as a scale from 0 to c(e.g., 10) with 0 representing completely available and crepresenting completely unavailable. Values in between 0 and 10 can then represent different degrees or the likelihood that a particular user might be available for an appointment at a particular time slot. For example, a value of 2 indicates that a user is more likely to attend an appointment than a value of, for instance, 7. As another example, non-binary availability information may include the carbon footprint or the gas cost to reach a given destination, or how much a user is tied to a busy timeslot (e.g., whether the user can break another appointment).","In one embodiment, the scheduling platform  can use one or more cost functions to process non-binary availability information and recommended potential time slots for scheduling a multiparty appointment. For example, the cost functions may evaluate one or more cost ratings that are, for instance, specified or determined for time slots over a requested meeting time range. The cost functions then recommend the time slots based on processing of the cost ratings. By way of example the cost functions may represent any number of factors that might influence attendance of a meeting including, for example, cost parameters such as time of day, proximity to other meetings, costs of travel, meeting resource requirements, importance of the meeting, etc.","In one embodiment, the cost functions and\/or associated costs parameters may be determined by context information, profile information, etc. associated with one or more of the users. For example, if context information indicates that a potential participant is on vacation, the cost ratings assigned or applied to work time slots during the vacation would be relatively high. In some embodiments, instead of setting the cost ratings, parameters, or functions based on context, the user may simply select a profile to indicate or other modify availability information. For example, the user may download a profile that is designed for sports fans. In this case, whenever a sports event is taking place, the user's availability information would indicate relatively high cost ratings or parameters. These cost ratings and parameters can then be processed by the scheduling platform  (e.g., using the one or more cost functions) to compute a recommended time slot for a particular meeting. For example, the scheduling platform  can use one or more homomorphic functions (e.g., homomorphic minimization) to aggregate the costs information from the cost functions and then recommend time slots which minimize the aggregated costs. Furthermore, homomorphic functions are used to preserver user privacy.","In one embodiment, the scheduling platform  may also recommend one or more potential locations for holding the meeting. By way of example, this analysis may also be performed by analyzing the availability information against one or more cost functions. In this case, the cost functions include, at least in part, parameters to evaluate travel requirements and\/or costs. For example, if a potential meeting participant already as a meeting scheduled in Paris, France on a particular day, the cost rating for attending a meeting in New York City in the United States the next day would be relatively high.","In one embodiment, the applications  can be clients of the service platform  and\/or the services -(also collectively referred to as services ) of the service platform . By way of example, the service platform  and\/or the services  may provide or otherwise use one or more calendar services, scheduling services, PIM services, and\/or related services (e.g., online calendars, social network services, matching services, dating services, etc.). In some embodiments, the service platform  and\/or the services  provide content (e.g., event information, calendar information, availability information, etc.) from the one or more of the content providers -","In the example of , it is assume that there are N users u, (e.g., corresponding to the UEs -), i\u03b5{1 . . . N}, that want to schedule an appointment or activity (e.g., meeting, party) at a common available time slot. Each user has a private schedule xrepresented, for instance, by a string of bits x=[b, b. . . b], where each bit b\u03b5{0,1} expresses the availability of user uin a particular time slot j, b=1 means that user uis available at time slot j, whereas b=0 means that the user is not available. It is also assumed that the length m of x, (e.g., the time horizon or range of the individual schedules, is substantially constant or at least overlaps for the users). In one embodiment, the value of m can either be predecided by the participants or fixed by the requesting application .","Moreover, in one embodiment, the UEs  are able to perform public key cryptographic operations and that they have connectivity to the scheduling platform  for performing the scheduling computations. In this case, the scheduling platform  also is able to run public key cryptographic operations as well. For instance, a common public key infrastructure is the RSA cryptosystem. In one embodiment, communications between the UEs  and the scheduling platform  is encrypted with the latter's public key for the purposes of confidentiality of the availability information (e.g., the schedules) with respect to other users, for authentication and integrity protection. Thus, all UEs  know the public key of the scheduling platform  but only the scheduling platform  knows the corresponding private key.","In another embodiment, the UEs  share a common secret, which is used to derive (1) a fresh common key pair (K, K), where KP is the public key and Ks is the private key, and (2) a fresh bit permutation function \u03c3=[\u03c3, . . . , \u03c3] before initiating the scheduling operation. In one embodiment, this could be achieved, for example, through a secure credential establishment protocol. Thus, these keys and permutations are derived and known to the UE  but not to the scheduling platform . In one embodiment, the encryption of a message M with the group public key is referred to as E(M)=C, wherein r is a random integer, and the decryption of the encrypted message C as D(C)=M. In one embodiment, the permutation \u03c3, is used to randomize the order of bits sent to the scheduling platform . This prevents the scheduling platform , for instance, from gaining any knowledge about which time slot is being evaluated in each computation, thereby preserving user privacy.","By way of example, the communication network  of system  includes one or more networks such as a data network (not shown), a wireless network (not shown), a telephony network (not shown), or any combination thereof. It is contemplated that the data network may be any local area network (LAN), metropolitan area network (MAN), wide area network (WAN), a public data network (e.g., the Internet), short range wireless network, or any other suitable packet-switched network, such as a commercially owned, proprietary packet-switched network, e.g., a proprietary cable or fiber-optic network, and the like, or any combination thereof. In addition, the wireless network may be, for example, a cellular network and may employ various technologies including enhanced data rates for global evolution (EDGE), general packet radio service (GPRS), global system for mobile communications (GSM), Internet protocol multimedia subsystem (IMS), universal mobile telecommunications system (UMTS), etc., as well as any other suitable wireless medium, e.g., worldwide interoperability for microwave access (WiMAX), Long Term Evolution (LTE) networks, code division multiple access (CDMA), wideband code division multiple access (WCDMA), wireless fidelity (WiFi), wireless LAN (WLAN), Bluetooth\u00ae, Internet Protocol (IP) data casting, satellite, mobile ad-hoc network (MANET), and the like, or any combination thereof.","The UE  is any type of mobile terminal, fixed terminal, or portable terminal including a mobile handset, station, unit, device, multimedia computer, multimedia tablet, Internet node, communicator, desktop computer, laptop computer, Personal Digital Assistants (PDAs), audio\/video player, digital camera\/camcorder, positioning device, television, radio, electronic book device, game device, or any combination thereof with sending and receiving capabilities over the communication network . It is also contemplated that the UE  can support any type of interface to the user (such as \u201cwearable\u201d circuitry, etc.).","By way of example, the UE  and the scheduling platform  communicate with each other and other components of the communication network  using well known, new or still developing protocols. In this context, a protocol includes a set of rules defining how the network nodes within the communication network  interact with each other based on information sent over the communication links. The protocols are effective at different layers of operation within each node, from generating and receiving physical signals of various types, to selecting a link for transferring those signals, to the format of information indicated by those signals, to identifying which software application executing on a computer system sends or receives the information. The conceptually different layers of protocols for exchanging information over a network are described in the Open Systems Interconnection (OSI) Reference Model.","Communications between the network nodes are typically effected by exchanging discrete packets of data. Each packet typically comprises (1) header information associated with a particular protocol, and (2) payload information that follows the header information and contains information that may be processed independently of that particular protocol. In some protocols, the packet includes (3) trailer information following the payload and indicating the end of the payload information. The header includes information such as the source of the packet, its destination, the length of the payload, and other properties used by the protocol. Often, the data in the payload for the particular protocol includes a header and payload for a different protocol associated with a different, higher layer of the OSI Reference Model. The header for a particular protocol typically indicates a type for the next protocol contained in its payload. The higher layer protocol is said to be encapsulated in the lower layer protocol. The headers included in a packet traversing multiple heterogeneous networks, such as the Internet, typically include a physical (layer 1) header, a data-link (layer 2) header, an internetwork (layer 3) header and a transport (layer 4) header, and various application headers (layer 5, layer 6 and layer 7) as defined by the OSI Reference Model.","In one embodiment, the scheduling managers  interact with the scheduling platform  according to a client-server model. According to the client-server model, a client process sends a message including a request to a server process, and the server process responds by providing a service (e.g., messaging, advertisements, etc.). The server process may also return a message with a response to the client process. Often the client process and server process execute on different computer devices, called hosts, and communicate via a network using one or more protocols for network communications. The term \u201cserver\u201d is conventionally used to refer to the process that provides the service, or the host computer on which the process operates. Similarly, the term \u201cclient\u201d is conventionally used to refer to the process that makes the request, or the host computer on which the process operates. As used herein, the terms \u201cclient\u201d and \u201cserver\u201d refer to the processes, rather than the host computers, unless otherwise clear from the context. In addition, the process performed by a server can be broken up to run as multiple processes on multiple hosts (sometimes called tiers) for reasons that include reliability, scalability, and redundancy, among others.",{"@attributes":{"id":"p-0047","num":"0046"},"figref":"FIG. 2","b":["101","101","201","203","205","207","209","211","213"]},"The control logic  executes at least one algorithm for performing one or more functions of the scheduling platform . For example, the control logic  interacts with the request module  to determine or otherwise receive one or more requests to determine recommended time slots and\/or locations for a multiparty appointment. As previously discussed the one or more request for scheduling a multiparty appointment can be initiated by one or more applications  executing on a UE  associated with an initiating user. In one embodiment, the request can include, for instance, identification of one or more invitees or potential meeting participants and their respective UEs .","The request module  then interacts with the device data collection module  to determine availability information from the potential participants. For example, the data collection module  may initiate a request for a range of time slots and the corresponding user availabilities. As previously noted, the availability information may be provided as either binary availability (e.g., available or not available, suitable or not suitable, etc.) or a non-binary information which reflect a range or continuum of cost values over one or more cost parameters (e.g., available resource, personal preference, importance, etc.). In one embodiment, the data collection module  may compile historical behavior with respect to previously scheduled appointments (e.g., acceptance and\/or attendance patterns) and related information about the appointment (e.g., type of appointment, location, identities of other participants, purpose, etc.) to infer or automatically calculate estimated cost ratings for each time slot.","After obtaining availability information, the cost evaluation module  can process and\/or facilitate a processing of the availability information including cost ratings to recommend one or more time slots and\/or locations for a requested appointment. For example, the cost evaluation may include applying one or more cost functions to evaluate and\/or determine the cost ratings for individual users and\/or for the potential timeslots. In one embodiment, the cost evaluation module  can evaluate the availability\/cost information using one or more homomorphic functions to process an encrypted form of the information without exposing underlying content (e.g., to preserve user privacy).","The scheduling module  can then process the cost evaluation (e.g., resulting in aggregated cost information for a number of potential candidate time slots and\/or locations) to determine recommended time slots with minimum costs or costs below predetermined threshold values. In one embodiment, the recommended time slots can be based on an earliest available time slot or other criteria such as least costly for at least a certain percentage or number of the potential participants. For example, a time slot may be recommended if it is least costly for at least eight of ten participants.","The scheduling platform  also includes an encryption module to can include one or more cryptosystems to process homomorphically encrypted information (e.g., availability information from the UEs ). In one embodiment, the encryption module  can also encrypt and\/or maintain the encryption of the output of the scheduling platform . In this way, the scheduling platform  itself may remain unaware of the actual contents of the encrypted availability information that it has processed to recommend one or more timeslots and\/or locations. In one embodiment, application of homomorphic functions to determine the recommend timeslots can also hide the output of the scheduling platform  from the platform  itself. As a result, privacy of availability information from the UEs  can be protected even from the platform trusted to process the information, thereby preserving user privacy.","Finally, in one embodiment, the scheduling platform  includes an application interface  (e.g., an application programming interface (API)) for interacting with one or more applications , the service platform , the services , the content providers , and\/or other entities with connectivity over the communication network .",{"@attributes":{"id":"p-0054","num":"0053"},"figref":["FIG. 3","FIG. 8","FIGS. 4 and 5"],"b":["101","300","300","107","109","300"]},"In step , the scheduling platform  receiving a request to schedule an appointment among one or more users. As noted above, the request may be generated by the application , the service platform , the services , or a combination thereof. The scheduling platform  then determines availability information for the one or more users from one or more respective devices, wherein the availability information is encrypted using homomorphic encryption (step ).","Next, the scheduling platform  determines whether the availability information is binary information or non-binary information (step ). If the availability information is binary, the scheduling platform  processes and\/or facilitates a processing of the availability information using, at least in part, one or more homomorphic functions to determine one or more recommended time slots and\/or locations for the appointment (step ) in order to preserve user privacy.","If the availability information is non-binary, the scheduling platform  processes and\/or facilitates a processing of the availability information using one or more cost functions to determine the one or more recommended time slots (step ). In one embodiment, one or more parameters of the one or more cost functions include, at least in part, a user cost rating for attending the appointment, a resource level associated with attending the appointment, an importance level of the appointment, a location of the appointment, or a combination thereof.","In one embodiment, the scheduling platform  also determines a profile, a policy, or a combination thereof associated with the at least one of the one or more users (step ). By way of example, users may download or otherwise acquire the profile to more easily set or define cost ratings or cost information for the users' time slots. The profile, for instance, contains or specifies a default set of cost ratings based on, for instance, typical characteristics associated with a particular type of user. In addition or alternatively, users may manually specify cost ratings and\/or parameters for processing by the scheduling platform , or the scheduling platform  may monitor the user's behavior, context, etc. to learn and\/or infer the users' cost ratings.","The scheduling platform  then processes and\/or facilitates a processing of the profile, the policy, or a combination thereof to determine or to modify one or more parameters of the one or more cost functions. In one embodiment, policies may define rules for specifying cost ratings. For example, a policy may state that costs should be increased for time slots close to the end of the business day or that overlap with lunch breaks. Other policies may provide for elevated costs if there are certain other attendees that will be present at the meeting. It is contemplated the scheduling platform  can operate under any number of policies that serve to either raise or lower the cost ratings and\/or parameters.","In another embodiment, the scheduling platform  may also determine context information, historical appointment information, user behavior information, or a combination thereof associated with at least one of the one or more users to determine or modify the cost parameters and\/or cost information. For example, historical appointment information may include information on what meetings a user typically attends and at what times, etc. In this way, the scheduling platform  can learn a user's costs associated with candidate time slots.","In step , the scheduling platform  processes and\/or facilitates a processing of the availability information and the cost information using, at least in part, one or more homomorphic functions to determine one or more recommended time slots for the appointment. In this case, use of homomorphic functions enables the scheduling platform  to preserve user privacy. In one embodiment, the scheduling platform  can also receive or determine one or more threshold criteria for the one or more cost functions or more threshold criteria for the one or more cost functions and\/or cost information. The threshold criteria are then used to select or determine one or more recommended timeslots and\/or locations.","In one embodiment, the scheduling platform  can also receive an input from at least one of the one or more users for specifying one or more cost ratings of the one or more recommended time slots. This cost rating can represent, for instance, user feedback on the value or usefulness of the recommended timeslots. Accordingly, the scheduling platform  can process and\/or facilitate a processing of the inputted one or more cost ratings to determine one or more cost parameters for one or more subsequent applications of the one or more cost functions (step ). In addition, the scheduling platform  can determine acceptance information, attendance information, or a combination thereof of the appointment. The scheduling platform  can then process and\/or facilitate a processing of the acceptance information, attendance information, or a combination thereof to determine or to modify one or more parameters of the one or more cost functions.",{"@attributes":{"id":"p-0063","num":"0062"},"figref":["FIG. 4","FIG. 4"],"b":["103","103","101"],"i":["a","n "]},"In one embodiment, privacy-preserving scheduling involves N different participants, UEs -respectively labeled as Pto P. In this example, Pis the Initiator of the protocol. Moreover, each P(for i\u03b5[1,N]) maintains a private calendar, divided into divided into m timeslots. Typical timeslot guarantees are 30 or 60 minutes (but this can be tuned according to users' preferences). Each Passigns a cost c(0\u2266c\u2266c), for each timeslot j\u03b5[1,N] (e.g., ranging from 0 to 10). In one embodiment, the process of  relies on the Paillier Cryptosystem, a public-key probabilistic encryption scheme that provides additive homomorphism\u2014i.e., the product of two ciphertexts decrypts to the sum of the corresponding plaintexts. By way of example, additively homomorphic cryptosystems, such as Paillier, can be used to compute homomorphic minimization (or maximization), i.e., one can find the minimum of some integers while operating on ciphertexts only, thus, without learning any information on those integers.","The process of  extends this technique to obtain the homomorphic argmin, i.e., to additionally find which integer corresponds to the minimum. In addition, the process of  uses a tagging system based on, for instance, powers of 2. The process of  also encodes integers in a unary system. In other words, to represent an integer X, the process of  repeats X times encryptions of 0's. In one embodiment, this encoding technique uses a vector-based representation (vbr):",{"@attributes":{"id":"p-0066","num":"0065"},"maths":{"@attributes":{"id":"MATH-US-00001","num":"00001"},"math":{"@attributes":{"overflow":"scroll"},"mrow":{"mrow":[{"mi":"x","mo":["\u2062","\u2062"],"munder":{"mo":"\u27f6","mi":"vbr"},"mover":{"mi":"X","mo":"\u27f6"}},{"mo":["[","]"],"mrow":{"munder":{"mrow":{"mrow":[{"mi":"E","mo":"\u2061","mrow":{"mo":["(",")"],"mn":"0"}},{"mi":"E","mo":"\u2061","mrow":{"mo":["(",")"],"mn":"0"}}],"mo":[",","\u2062",","],"mi":"\u2026","mstyle":{"mspace":{"@attributes":{"width":"0.8em","height":"0.8ex"}}}},"munder":{"mi":["\ufe38","xtimes"]}},"mo":[",",",",",","\u2062",","],"mrow":[{"mi":"E","mo":"\u2061","mrow":{"mo":["(",")"],"mn":"1"}},{"mi":"E","mo":"\u2061","mrow":{"mo":["(",")"],"mi":"z"}},{"mi":"E","mo":"\u2061","mrow":{"mo":["(",")"],"mi":"z"}}],"mi":"\u2026","mstyle":{"mspace":{"@attributes":{"width":"0.8em","height":"0.8ex"}}}}}],"mo":"="}}}},"By way of example, E(\u00b7) denotes encryption using Paillier, and z a random number in the Paillier setting. In one embodiment, this is used for padding. Then, the process of  raises each element of the vbr to the value of a tag\u2014a power of 2. In one embodiment, the tagging is performed on ciphertexts, rather than plaintexts. After tagging, E(0) remains E(0), while E(1) becomes E(tag): this enables identification of which value corresponds to the minimum, after the homomorphic minimization is performed. In one embodiment, the vector {right arrow over (X)} is large enough to contain possible domain values. Moreover, since the Paillier cryptosystem is probabilistic\u2014the elements E(\u00b7) (and the vectors too) are mutually computationally indistinguishable and do not reveal any information about plaintext values.","At step , the Initiator Pgenerates Paillier public and private keys, denoted with PKand SK, respectively. In one embodiment, encryptions\/decryptions are performed using these keys. Note that, randomness used by the encryption algorithm is specified using the following notation: E(M,R) to denote encryption of M under PKusing the random value R).","Next, Pcomputes, for each time slot j\u03b5[1,m], the {right arrow over (v)}:",{"@attributes":{"id":"p-0070","num":"0069"},"maths":{"@attributes":{"id":"MATH-US-00002","num":"00002"},"math":{"@attributes":{"overflow":"scroll"},"mrow":{"mover":{"msub":{"mi":["v","j"]},"mo":"\u27f6"},"mo":"=","mrow":{"mo":["[","]"],"mrow":{"munder":[{"mrow":{"mrow":[{"mi":"E","mo":"\u2061","mrow":{"mo":["(",")"],"mn":"0"}},{"mi":"E","mo":"\u2061","mrow":{"mo":["(",")"],"mn":"0"}}],"mo":[",","\u2062",","],"mi":"\u2026","mstyle":{"mspace":{"@attributes":{"width":"0.8em","height":"0.8ex"}}}},"munder":{"mi":"\ufe38","msub":{"mi":"c","mrow":{"mn":"1","mo":":","mi":"j"}}}},{"mrow":{"mrow":[{"mi":"E","mo":"\u2062","mrow":{"mo":["(",")"],"mn":"1"}},{"mi":"E","mo":"\u2061","mrow":{"mo":["(",")"],"mi":"z"}},{"mi":"E","mo":"\u2061","mrow":{"mo":["(",")"],"mi":"z"}}],"mo":[",",",","\u2062",","],"mi":"\u2026","mstyle":{"mspace":{"@attributes":{"width":"0.8em","height":"0.8ex"}}}},"munder":{"mi":"\ufe38","mrow":{"mi":"r","mo":"-","msub":{"mi":"c","mrow":{"mn":"1","mo":":","mi":"j"}}}}}],"mo":","}}}}}},"Finally, Psends {{right arrow over (v)}, . . . , {right arrow over (v)}}, along with the identities of the other participants to S (e.g., the scheduling platform ).","After receiving the initial input from Pthe server S sequentially forwards {{right arrow over (v)}, . . . , {right arrow over (v)}} to each participant involved in the protocol (steps , , and ).","Next (steps , , and ), each P(for i\u03b5[2,N]) adds the respective participant's cost cto each vector {right arrow over (v)} (for j\u03b5[2,N]) by shifting the elements of each vector cpositions right, and replacing them by E(0):",{"@attributes":{"id":"p-0074","num":"0073"},"maths":{"@attributes":{"id":"MATH-US-00003","num":"00003"},"math":{"@attributes":{"overflow":"scroll"},"mrow":{"mrow":[{"mover":[{"msub":{"mi":["v","j"]},"mo":"\u27f6"},{"msub":{"mi":["v","j"]},"mo":"\u27f6"}],"mo":"\u2190"},{"msub":{"mi":"c","mrow":{"mi":["i","j"],"mo":":"}},"mo":["\u2062","\u2062"],"mover":{"mo":"=","mi":"def"},"mrow":{"mo":["[","]"],"mrow":{"munder":{"munder":{"mrow":{"mrow":[{"mi":"E","mo":"\u2061","mrow":{"mo":["(",")"],"mn":"0"}},{"mi":"E","mo":"\u2061","mrow":{"mo":["(",")"],"mn":"0"}}],"mo":[",","\u2062",","],"mi":"\u2026","mstyle":{"mspace":{"@attributes":{"width":"0.8em","height":"0.8ex"}}}},"mi":"\ufe38"},"msub":{"mi":"c","mrow":{"mi":["i","j"],"mo":":"}}},"mo":[",",",","\u2062",","],"msub":{"mi":"v","mrow":{"mi":"j","mo":",","mn":"1"}},"mi":"\u2026","mstyle":{"mspace":{"@attributes":{"width":"0.8em","height":"0.8ex"}}},"mrow":{"msub":[{"mi":"v","mrow":{"mi":["j","r"],"mo":","}},{"mi":"c","mrow":{"mi":["i","j"],"mo":","}}],"mo":"-"}}}}],"mo":">>"}}}},"To mask the participants' modifications, Pre-randomizes the vectors {right arrow over (v)}'s by multiplying the generic element vby a random E(0). Finally, the participants send the updated {{right arrow over (v)}, . . . , {right arrow over (v)}}back to S. As shown, this phase is repeated, sequentially, for each participant, P, . . . , P. At the end of the phase (step ), S obtains the final {{right arrow over (v)}, . . . , {right arrow over (v)}} where, for j\u03b5[1,m]:",{"@attributes":{"id":"p-0076","num":"0075"},"maths":{"@attributes":{"id":"MATH-US-00004","num":"00004"},"math":{"@attributes":{"overflow":"scroll"},"mrow":{"mover":{"msub":{"mi":["v","j"]},"mo":"\u27f6"},"mo":"=","mrow":{"mo":["[","]"],"mrow":{"munder":[{"mrow":{"mrow":[{"mi":"E","mo":"\u2061","mrow":{"mo":["(",")"],"mn":"0"}},{"mi":"E","mo":"\u2061","mrow":{"mo":["(",")"],"mn":"0"}}],"mo":[",","\u2062",","],"mi":"\u2026","mstyle":{"mspace":{"@attributes":{"width":"0.8em","height":"0.8ex"}}}},"munder":{"mi":"\ufe38","msub":{"mi":["ac","j"]}}},{"mrow":{"mrow":[{"mi":"E","mo":"\u2062","mrow":{"mo":["(",")"],"mn":"1"}},{"mi":"E","mo":"\u2061","mrow":{"mo":["(",")"],"mi":"z"}},{"mi":"E","mo":"\u2061","mrow":{"mo":["(",")"],"mi":"z"}}],"mo":[",",",","\u2062",","],"mi":"\u2026","mstyle":{"mspace":{"@attributes":{"width":"0.8em","height":"0.8ex"}}}},"munder":{"mi":"\ufe38","mrow":{"mi":"\u03c4","mo":"-","msub":{"mi":["ac","j"]}}}}],"mo":","}}}}}},"Upon receiving the final {{right arrow over (v)}, . . . , {right arrow over (v)}}, S computes the homomorphic argmin. First, S raises each element of {right arrow over (v)} to 2. Then, S computes a vector {right arrow over (q)}. In one embodiment, the sum of all tags should not exceed the size of the Paillier modulus.",{"@attributes":{"id":"p-0078","num":"0077"},"maths":[{"@attributes":{"id":"MATH-US-00005","num":"00005"},"math":{"@attributes":{"overflow":"scroll"},"mrow":{"mover":{"msubsup":{"mi":["v","j","\u2032"]},"mo":"\u27f6"},"mo":"=","mrow":{"msup":{"mrow":{"mo":["(",")"],"mover":{"msub":{"mi":["v","j"]},"mo":"\u27f6"}},"msup":{"mn":"2","mi":"j"}},"mo":"=","mrow":{"mo":["[","]"],"mrow":{"msup":[{"mrow":{"mo":["(",")"],"msub":{"mi":"v","mrow":{"mi":"j","mo":",","mn":"1"}}},"msup":{"mn":"2","mi":"j"}},{"mrow":{"mo":["(",")"],"msub":{"mi":"v","mrow":{"mi":"j","mo":",","mn":"2"}}},"msup":{"mn":"2","mi":"j"}},{"mrow":{"mo":["(",")"],"msub":{"mi":"v","mrow":{"mi":["j","\u03c4"],"mo":","}}},"msup":{"mn":"2","mi":"j"}}],"mo":[",",",","\u2062",","],"mi":"\u2026","mstyle":{"mspace":{"@attributes":{"width":"0.8em","height":"0.8ex"}}}}}}}}},{"@attributes":{"id":"MATH-US-00005-2","num":"00005.2"},"math":{"@attributes":{"overflow":"scroll"},"mtable":{"mtr":[{"mtd":{"mrow":{"mover":{"mi":"q","mo":"\u27f6"},"mo":["=","\u2062"],"mi":{},"mrow":{"mo":["[","]"],"mrow":{"msub":[{"mi":"q","mn":"1"},{"mi":"q","mn":"2"},{"mi":["q","\u03c4"]}],"mo":[",",",","\u2062",","],"mi":"\u2026","mstyle":{"mspace":{"@attributes":{"width":"0.8em","height":"0.8ex"}}}}}}}},{"mtd":{"mrow":{"mover":{"mo":"=","mi":"def"},"mo":["\u2062","\u2062"],"mi":{},"mrow":{"mrow":{"mo":["[","]"],"mrow":{"mrow":[{"munderover":{"mo":"\u220f","mrow":{"mi":"j","mo":"=","mn":"1"},"mi":"m"},"mo":"\u2062","msubsup":{"mi":["v","\u2032"],"mrow":{"mi":"j","mo":",","mn":"1"}}},{"munderover":{"mo":"\u220f","mrow":{"mi":"j","mo":"=","mn":"1"},"mi":"m"},"mo":"\u2062","msubsup":{"mi":["v","\u2032"],"mrow":{"mi":["j","\u03c4"],"mo":","}}}],"mo":[",","\u2062",","],"mi":"\u2026","mstyle":{"mspace":{"@attributes":{"width":"0.8em","height":"0.8ex"}}}}},"mo":"="}}}},{"mtd":{"mrow":{"mo":["=","\u2062"],"mi":{},"mrow":{"mo":["[","]"],"mrow":{"munder":{"mrow":{"mrow":[{"mi":"E","mo":"\u2061","mrow":{"mo":["(",")"],"mn":"0"}},{"mi":"E","mo":"\u2061","mrow":{"mo":["(",")"],"mn":"0"}}],"mo":[",","\u2062",","],"mi":"\u2026","mstyle":{"mspace":{"@attributes":{"width":"0.8em","height":"0.8ex"}}}},"munder":{"mi":["\ufe38","min"]}},"mo":[",",",","\u2062",","],"msub":[{"mi":"q","mrow":{"mi":"min","mo":"+","mn":"1"}},{"mi":["q","\u03c4"]}],"mi":"\u2026","mstyle":{"mspace":{"@attributes":{"width":"0.8em","height":"0.8ex"}}}}}}}}]}}}]},"At step , S sends {right arrow over (q)} to the Initiator P, that decrypts each element of {right arrow over (q)} using SK. In one embodiment, the minimum aggregated cost corresponds to the number of consecutive 0's in the first positions of {right arrow over (q)}. Also, qdecrypts to the sum of tags corresponding to the timeslot(s) producing the minimum aggregated cost. In one embodiment, this sum is denoted with \u03c6. Pretrieves the index of this timeslot by observing which bits are equal to 1 in the binary decomposition of \u03c6. Pmay additionally retrieve the second minimum timeslot by subtracting (\u03c6\u00b7z) from the non-null decrypted elements of {right arrow over (q)}. In one embodiment, iterating this method leads to retrieval of all timeslots with aggregated cost less than \u03c4.","In one embodiment, that \u03c4 (e.g., cost threshold value) is a system parameter and can be tuned to meet different requirements. For example, smaller values of \u03c4 result into a smaller {right arrow over (q)} vector: this would reduce computations performed by participants and by the server, as well as the total bandwidth overhead. Also, the knowledge of Pon aggregated cost values can be limited to fewer timeslots, while the likelihood that the protocol execution terminates with no suitable timeslot would be increased. Therefore, an appropriate choice of \u03c4 depends on the specific setting and should be agreed on by the participants. In one embodiment, at the end of the protocol, only Plearns the timeslots with aggregated cost smaller than the threshold, and takes appropriate actions to schedule a meeting. In one embodiment, standard encryption techniques can be used by Pto multicast the meeting invitation to the other participants.","In one embodiment, during each protocol execution, the Initiator performs four Paillier encryptions: E(1), E(0), E(z) and rand=E(0,w) where w is a random value chosen with the same size as the Paillier modulus. To create vector {right arrow over (v)}, the Initiator selects the encryptions E(0), E(1) or E(z) and multiplies them by a different rand to perform re-randomization. Alternatively, in one embodiment, to create the vectors, the Initiator can use a pool of pre-computed E(0)'s). Thus, the Initiator computes (2\u00b7m\u00b7\u03c4) multiplications (to create {{right arrow over (v)}, . . . , {right arrow over (v)}}), and at most \u03c4 decryptions (to retrieve suitable timeslots). In one embodiment, all other participants perform two encryptions (E(0) and rand) and (2\u00b7m\u00b7\u03c4) multiplications to update the vectors. The server performs (m\u00b7\u03c4) exponentiations for the tagging and (m\u00b7\u03c4) multiplications to create vector {right arrow over (q)}. Communication overhead amounts to (m\u00b7\u03c4) ciphertexts for all participants. Additionally, the Initiator receives \u03c4 ciphertexts (in {right arrow over (q)}).",{"@attributes":{"id":"p-0082","num":"0081"},"figref":["FIG. 5","FIG. 5"],"b":["103","103","101"],"i":["a","n "],"sub":["1","N"]},"In one embodiment, prior to beginning the process of , each participant P(e.g., the UEs -) computes public\/private keypairs (PK, SK). By way of example, public keys, PKare distributed, before protocol execution, using the scheduling platform  (e.g., server S).","In step , the Initiator Pcomputes a mapping, MAP, and sends it to the server S. In one embodiment, S uses the mapping during aggregation to transform each aggregated cost into the corresponding vbr. Assuming Nis the maximum number of participants, \u03c4 max=\u222b(c, N), and (a, y) are random values in the Paillier setting generated by P, MAP is pre-computed by Pas follows:",{"@attributes":{"id":"p-0085","num":"0084"},"maths":[{"@attributes":{"id":"MATH-US-00006","num":"00006"},"math":{"@attributes":{"overflow":"scroll"},"mrow":{"mrow":[{"mi":"E","mo":"\u2061","mrow":{"mo":["(",")"],"mrow":{"mn":"0","mo":",","msub":{"mi":"a","mn":"1"}}}},{"mo":["[","]"],"mrow":{"mrow":[{"mi":"E","mo":"\u2061","mrow":{"mo":["(",")"],"mn":"1"}},{"mi":"E","mo":"\u2061","mrow":{"mo":["(",")"],"mi":"z"}},{"mi":"E","mo":"\u2061","mrow":{"mo":["(",")"],"mi":"z"}},{"mi":"E","mo":"\u2061","mrow":{"mo":["(",")"],"mi":"z"}},{"mi":"E","mo":"\u2061","mrow":{"mo":["(",")"],"mi":"z"}}],"mo":[",",",",",",",","\u2062",","],"mi":"\u2026","mstyle":{"mspace":{"@attributes":{"width":"0.8em","height":"0.8ex"}}}}}],"mo":"\u27f6"}}},{"@attributes":{"id":"MATH-US-00006-2","num":"00006.2"},"math":{"@attributes":{"overflow":"scroll"},"mrow":{"mrow":[{"mi":"E","mo":"\u2061","mrow":{"mo":["(",")"],"mrow":{"mn":"1","mo":",","mrow":{"msub":[{"mi":"a","mn":"1"},{"mi":"y","mn":"1"}],"mo":"\u2062"}}}},{"mo":["[","]"],"mrow":{"munder":{"mrow":{"mi":"E","mo":"\u2061","mrow":{"mo":["(",")"],"mn":"0"}},"munder":{"mi":"\ufe38","mn":"1"}},"mo":[",",",",",",",","\u2062",","],"mrow":[{"mi":"E","mo":"\u2061","mrow":{"mo":["(",")"],"mn":"1"}},{"mi":"E","mo":"\u2061","mrow":{"mo":["(",")"],"mi":"z"}},{"mi":"E","mo":"\u2061","mrow":{"mo":["(",")"],"mi":"z"}},{"mi":"E","mo":"\u2061","mrow":{"mo":["(",")"],"mi":"z"}}],"mi":"\u2026","mstyle":{"mspace":{"@attributes":{"width":"0.8em","height":"0.8ex"}}}}}],"mo":"\u27f6"}}},{"@attributes":{"id":"MATH-US-00006-3","num":"00006.3"},"math":{"@attributes":{"overflow":"scroll"},"mrow":{"mi":["\u2026","\u2026"],"mo":"\u27f6"}}},{"@attributes":{"id":"MATH-US-00006-4","num":"00006.4"},"math":{"@attributes":{"overflow":"scroll"},"mrow":{"mrow":{"mrow":[{"mi":"E","mo":"\u2061","mrow":{"mo":["(",")"],"mrow":{"msub":{"mi":["\u03c4","max"]},"mo":",","mrow":{"msub":{"mi":"a","mn":"1"},"mo":"\u2062","msubsup":{"mi":"y","mn":"1","msub":{"mi":["\u03c4","max"]}}}}}},{"mo":["[","]"],"munder":{"munder":{"mrow":{"mrow":[{"mi":"E","mo":"\u2061","mrow":{"mo":["(",")"],"mn":"0"}},{"mi":"E","mo":"\u2061","mrow":{"mo":["(",")"],"mn":"0"}},{"mi":"E","mo":"\u2061","mrow":{"mo":["(",")"],"mn":"0"}},{"mi":"E","mo":"\u2061","mrow":{"mo":["(",")"],"mn":"0"}},{"mi":"E","mo":"\u2061","mrow":{"mo":["(",")"],"mn":"0"}}],"mo":[",",",",",",",","\u2062",","],"mi":"\u2026","mstyle":{"mspace":{"@attributes":{"width":"0.8em","height":"0.8ex"}}}},"mi":"\ufe38"},"msub":{"mi":["\u03c4","max"]}}}],"mo":"\u27f6"},"mo":"."}}}]},"In one embodiment, yand arandomize the mapping and prevent S from learning any private information. By way of example, yis raised to the value of the aggregated costs in order to randomize the costs differently. Since (y)=1, the random value ais added to address the special case where an aggregated cost equals 0. In addition, asimplifies future updates: Pwould only need to change this random value to re-randomize the mapping without performing exponentiations again. Finally, in one embodiment, Pshuffles the mapping to randomize the position of each aggregated cost.","More specifically, Ppicks a random r, then, for each time slot j\u03b5[1,m], computes and sends S the value ec:",{"@attributes":{"id":"p-0088","num":"0087"},"maths":{"@attributes":{"id":"MATH-US-00007","num":"00007"},"math":{"@attributes":{"overflow":"scroll"},"mtable":{"mtr":[{"mtd":{"mrow":{"msub":{"mi":"ec","mrow":{"mn":"1","mo":":","mi":"j"}},"mo":["=","\u2062"],"mi":{},"mrow":{"mrow":{"mi":"E","mo":"\u2061","mrow":{"mo":["(",")"],"mrow":{"msub":{"mi":"c","mrow":{"mi":["i","j"],"mo":":"}},"mo":",","mrow":{"mrow":{"msub":{"mi":"a","mn":"1"},"mo":["\u00b7","\u00b7"],"msup":{"mrow":{"mo":["(",")"],"msub":{"mi":"r","mn":"1"}},"mi":"j"},"mrow":{"mo":["(",")"],"msub":{"mi":"y","mn":"1"}}},"mo":"\u2062","msub":{"mi":"c","mrow":{"mn":"1","mo":":","mi":"j"}}}}}},"mo":"="}}}},{"mtd":{"mrow":{"mo":["=","\u2062"],"mi":{},"mrow":{"mrow":[{"mi":"E","mo":"\u2061","mrow":{"mo":["(",")"],"mrow":{"msub":[{"mi":"c","mrow":{"mn":"1","mo":":","mi":"j"}},{"mi":"a","mn":"1"}],"mo":","}}},{"msup":{"mrow":{"mo":["(",")"],"mrow":{"mi":"E","mo":"\u2061","mrow":{"mo":["(",")"],"mrow":{"mn":"0","mo":",","msub":{"mi":"y","mn":"1"}}}}},"msub":{"mi":"c","mrow":{"mn":"1","mo":":","mi":"j"}}},"mo":"."}],"mo":["\u00b7","\u00b7"],"msup":{"mrow":{"mo":["(",")"],"mrow":{"mi":"E","mo":"\u2061","mrow":{"mo":["(",")"],"mrow":{"mn":"0","mo":",","msub":{"mi":"r","mn":"1"}}}}},"mi":"j"}}}}}]}}}},"Next, Ppicks N\u22121 random values, (x, . . . , x). For each i\u03b5[2,N], Pencrypts <x,E(0, y)> under the public key PKof each participant Pand sends them to S, which forwards to the corresponding participant(s) (step ). In one embodiment, this encryption hides these values from the server S. Finally, Pcomputes er=E(\u2212\u03a3x),r) and sends it to S.","First, each participant Pgenerates a random value rin the Paillier setting generated by P. Then, for each timeslot j\u03b5[2,m], Pencrypts the cost c, using as randomness the decrypted E(0, y):",{"@attributes":{"id":"p-0091","num":"0090"},"maths":{"@attributes":{"id":"MATH-US-00008","num":"00008"},"math":{"@attributes":{"overflow":"scroll"},"mtable":{"mtr":[{"mtd":{"mrow":{"msub":{"mi":"ec","mrow":{"mi":["i","j"],"mo":":"}},"mo":["=","\u2062"],"mi":{},"mrow":{"mi":"E","mo":"\u2061","mrow":{"mo":["(",")"],"mrow":{"msub":{"mi":"c","mrow":{"mi":["i","j"],"mo":":"}},"mo":",","mrow":{"msub":{"mi":["r","i"]},"mo":"\u00b7","msup":{"mrow":{"mo":["(",")"],"msub":{"mi":"y","mn":"1"}},"msub":{"mi":"c","mrow":{"mi":["i","j"],"mo":":"}}}}}}}}}},{"mtd":{"mrow":{"mo":["=","\u2062"],"mi":{},"mrow":{"mrow":{"mi":"E","mo":"\u2061","mrow":{"mo":["(",")"],"mrow":{"msub":{"mi":"c","mrow":{"mi":["i","j"],"mo":":"}},"mo":",","mn":"1"}}},"mo":["\u00b7","\u00b7"],"msup":[{"mrow":{"mo":["(",")"],"mrow":{"mi":"E","mo":"\u2061","mrow":{"mo":["(",")"],"mrow":{"mn":"0","mo":",","msub":{"mi":["r","i"]}}}}},"mi":"j"},{"mrow":{"mo":["(",")"],"mrow":{"mi":"E","mo":"\u2061","mrow":{"mo":["(",")"],"mrow":{"mn":"0","mo":",","msub":{"mi":"y","mn":"1"}}}}},"msub":{"mi":"c","mrow":{"mi":["i","j"],"mo":":"}}}]}}}}]}}}},"Then, Psends S {e, . . . , e} and E(x, r) (step ). Next, S computes the (encrypted) aggregated cost of each timeslot j\u03b5[2,m], using Paillier's homomorphism:\n\n\u03a0(,()\u00b7())\n\nwhere ar\u03a0rmod n(n begin the public Paillier modulus of PK). Finally, S reconstructs:\n",{"@attributes":{"id":"p-0093","num":"0092"},"maths":{"@attributes":{"id":"MATH-US-00009","num":"00009"},"math":{"@attributes":{"overflow":"scroll"},"mrow":{"mrow":[{"mi":"E","mo":"\u2061","mrow":{"mo":["(",")"],"mrow":{"mn":"0","mo":",","mi":"ar"}}},{"mrow":[{"mi":"E","mo":"\u2061","mrow":{"mo":["(",")"],"mrow":{"mrow":{"mo":"-","mrow":{"mo":["(",")"],"mrow":{"munderover":{"mo":"\u2211","mrow":{"mi":"i","mo":"=","mn":"2"},"mi":"N"},"mo":"\u2062","msub":{"mi":["x","i"]}}}},"mo":",","msub":{"mi":"r","mn":"1"}}}},{"mi":"E","mo":"\u2061","mrow":{"mo":["(",")"],"mrow":{"msub":[{"mi":"x","mn":"2"},{"mi":"r","mn":"2"}],"mo":","}}},{"mi":"E","mo":"\u2061","mrow":{"mo":["(",")"],"mrow":{"msub":[{"mi":["x","N"]},{"mi":["r","N"]}],"mo":","}}}],"mo":["\u00b7","\u00b7","\u00b7"],"mi":"\u2026"}],"mo":"="}}}},"After the reconstruction, the server S computes, for instance, the (encrypted) minimum aggregated cost and sends it to P(step ). To this end, S first transforms each encrypted aggregated cost (eac) into its vbr. Next, S computes the vbr using the mapping MAP and the value E(0, ar), namely, for each timeslot j\u03b5[1,m], S:","(i) Multiplies the first column of MAP by E(0, ar) and gets: (recall that the position of each aggregated cost is shuffled in the mapping stored by the server).",{"@attributes":{"id":"p-0096","num":"0095"},"maths":[{"@attributes":{"id":"MATH-US-00010","num":"00010"},"math":{"@attributes":{"overflow":"scroll"},"mrow":{"mrow":[{"mi":"E","mo":"\u2061","mrow":{"mo":["(",")"],"mrow":{"mn":"0","mo":",","mrow":{"msup":{"mi":["ar","j"]},"mo":"\u2062","msub":{"mi":"a","mn":"1"}}}}},{"mo":["[","]"],"mrow":{"mrow":[{"mi":"E","mo":"\u2061","mrow":{"mo":["(",")"],"mn":"1"}},{"mi":"E","mo":"\u2061","mrow":{"mo":["(",")"],"mi":"z"}},{"mi":"E","mo":"\u2061","mrow":{"mo":["(",")"],"mi":"z"}},{"mi":"E","mo":"\u2061","mrow":{"mo":["(",")"],"mi":"z"}},{"mi":"E","mo":"\u2061","mrow":{"mo":["(",")"],"mi":"z"}}],"mo":[",",",",",",",","\u2062",","],"mi":"\u2026","mstyle":{"mspace":{"@attributes":{"width":"0.8em","height":"0.8ex"}}}}}],"mo":"\u27f6"}}},{"@attributes":{"id":"MATH-US-00010-2","num":"00010.2"},"math":{"@attributes":{"overflow":"scroll"},"mrow":{"mrow":[{"mi":"E","mo":"\u2061","mrow":{"mo":["(",")"],"mrow":{"mn":"1","mo":",","mrow":{"msup":{"mi":["ar","j"]},"mo":"\u2062","mrow":{"msub":[{"mi":"a","mn":"1"},{"mi":"y","mn":"1"}],"mo":"\u00b7"}}}}},{"mo":["[","]"],"mrow":{"munder":{"mrow":{"mi":"E","mo":"\u2061","mrow":{"mo":["(",")"],"mn":"0"}},"munder":{"mi":"\ufe38","mn":"1"}},"mo":[",",",",",",",","\u2062",","],"mrow":[{"mi":"E","mo":"\u2061","mrow":{"mo":["(",")"],"mn":"1"}},{"mi":"E","mo":"\u2061","mrow":{"mo":["(",")"],"mi":"z"}},{"mi":"E","mo":"\u2061","mrow":{"mo":["(",")"],"mi":"z"}},{"mi":"E","mo":"\u2061","mrow":{"mo":["(",")"],"mi":"z"}}],"mi":"\u2026","mstyle":{"mspace":{"@attributes":{"width":"0.8em","height":"0.8ex"}}}}}],"mo":"\u27f6"}}},{"@attributes":{"id":"MATH-US-00010-3","num":"00010.3"},"math":{"@attributes":{"overflow":"scroll"},"mrow":{"mi":["\u2026","\u2026"],"mo":"\u27f6"}}},{"@attributes":{"id":"MATH-US-00010-4","num":"00010.4"},"math":{"@attributes":{"overflow":"scroll"},"mrow":{"mrow":{"mrow":[{"mi":"E","mo":"\u2061","mrow":{"mo":["(",")"],"mrow":{"msub":{"mi":["\u03c4","max"]},"mo":",","mrow":{"msup":{"mi":["ar","j"]},"mo":["\u2062","\u2062"],"msub":{"mi":"a","mn":"1"},"msubsup":{"mi":"y","mn":"1","msub":{"mi":["\u03c4","max"]}}}}}},{"mo":["[","]"],"munder":{"munder":{"mrow":{"mrow":[{"mi":"E","mo":"\u2061","mrow":{"mo":["(",")"],"mn":"0"}},{"mi":"E","mo":"\u2061","mrow":{"mo":["(",")"],"mn":"0"}},{"mi":"E","mo":"\u2061","mrow":{"mo":["(",")"],"mn":"0"}},{"mi":"E","mo":"\u2061","mrow":{"mo":["(",")"],"mn":"0"}},{"mi":"E","mo":"\u2061","mrow":{"mo":["(",")"],"mn":"0"}}],"mo":[",",",",",",",","\u2062",","],"mi":"\u2026","mstyle":{"mspace":{"@attributes":{"width":"0.8em","height":"0.8ex"}}}},"mi":"\ufe38"},"msub":{"mi":["\u03c4","max"]}}}],"mo":"\u27f6"},"mo":"."}}}]},"(ii) Finds eacin MAP and stores the right side of the mapping as {right arrow over (v)}.","(iii) Increments j and goes back to (i). Next, S starts the homomorphic argmin using vectors {right arrow over (v)}, i.e., the vbr of each aggregated cost, leveraging the following tagging technique. The server raises each element of {right arrow over (v)} to 2(for j\u03b5[1,m]):\n\n{right arrow over ()}=({right arrow over ()})=[(),(), . . . ,()]\n","Then, the server S computes the vector {right arrow over (q)} and sends it to P:",{"@attributes":{"id":"p-0100","num":"0099"},"maths":{"@attributes":{"id":"MATH-US-00011","num":"00011"},"math":{"@attributes":{"overflow":"scroll"},"mtable":{"mtr":[{"mtd":{"mrow":{"mover":{"mi":"q","mo":"\u27f6"},"mo":["=","\u2062"],"mi":{},"mrow":{"mo":["[","]"],"mrow":{"msub":[{"mi":"q","mn":"1"},{"mi":"q","mn":"2"},{"mi":["q","\u03c4"]}],"mo":[",",",","\u2062",","],"mi":"\u2026","mstyle":{"mspace":{"@attributes":{"width":"0.8em","height":"0.8ex"}}}}}}}},{"mtd":{"mrow":{"mover":{"mo":"=","mi":"def"},"mo":["\u2062","\u2062"],"mi":{},"mrow":{"mo":["[","]"],"mrow":{"mrow":[{"munderover":{"mo":"\u220f","mrow":{"mi":"j","mo":"=","mn":"1"},"mi":"m"},"mo":"\u2062","msubsup":{"mi":["v","\u2032"],"mrow":{"mi":"j","mo":",","mn":"1"}}},{"munderover":{"mo":"\u220f","mrow":{"mi":"j","mo":"=","mn":"1"},"mi":"m"},"mo":"\u2062","msubsup":{"mi":["v","\u2032"],"mrow":{"mi":["j","\u03c4"],"mo":","}}}],"mo":[",","\u2062",","],"mi":"\u2026","mstyle":{"mspace":{"@attributes":{"width":"0.8em","height":"0.8ex"}}}}}}}},{"mtd":{"mrow":{"mo":["=","\u2062"],"mi":{},"mrow":{"mo":["[","]"],"mrow":{"munder":{"mrow":{"mrow":[{"mi":"E","mo":"\u2061","mrow":{"mo":["(",")"],"mn":"0"}},{"mi":"E","mo":"\u2061","mrow":{"mo":["(",")"],"mn":"0"}}],"mo":[",","\u2062",","],"mi":"\u2026","mstyle":{"mspace":{"@attributes":{"width":"0.8em","height":"0.8ex"}}}},"munder":{"mi":["\ufe38","min"]}},"mo":[",",",","\u2062",","],"msub":[{"mi":"q","mrow":{"mi":"min","mo":"+","mn":"1"}},{"mi":["q","\u03c4"]}],"mi":"\u2026","mstyle":{"mspace":{"@attributes":{"width":"0.8em","height":"0.8ex"}}}}}}}}]}}}},"Finally, Pdecrypts each element of {right arrow over (q)} using SK. Similar to the process of , in one embodiment, the minimum aggregated cost corresponds to the number of consecutive 0's in the first positions of {right arrow over (q)}. qdecrypts to the sum of tags corresponding to the timeslot(s) producing the minimum aggregated cost. By way of example, this sum is denoted with \u03c6. Pretrieves the index of this timeslot by observing which bits are equal to 1 in the binary decomposition of \u03c6. Pmay additionally retrieve the second minimum timeslot by subtracting (\u03c6\u00b7z) from the nonnull decrypted elements of {right arrow over (q)}. Iterating this method leads to retrieval of all timeslots with aggregated cost smaller than \u03c4. At the end of the protocol, only Plearns the timeslots with aggregated cost smaller than the threshold, and takes appropriate actions to schedule the meeting. Again, standard encryption techniques can be used by Pto multicast meeting invitation to the other participants.","In one embodiment, during each protocol execution, the Initiator performs, in the worst case, (c+3) Paillier encryptions and (c+3\u00b7m) multiplications to create j\u03b5[1,m] (e.g., using the randomization with rand as mentioned with respect to ). In addition, Initiator needs N\u22121 Paillier encryptions to protect <x,E(0,y)>, and at most \u03c4 decryptions to retrieve suitable timeslots. Each participant performs one decryption to get <(x,E(0,y)>, and (c+1) Paillier encryptions plus (c+3\u00b7m) multiplications to create encrypted costs. In one embodiment, the server S performs (m\u00b7\u03c4) exponentiations for tagging and (m\u00b7\u03c4) mults to create {right arrow over (q)}. Communication overhead amounts to m ciphertexts for all participants. Additionally, the Initiator receives \u03c4 ciphertexts (in {right arrow over (q)}).",{"@attributes":{"id":"p-0103","num":"0102"},"figref":["FIGS. 6A-6I","FIGS. 1-5","FIGS. 6A-6H","FIG. 6A","FIG. 6B"],"b":["600","601","601","610"]},"Person A can then choose one or more of the contacts in the UI  to invite. On making this selection, the UI  of  is presented to enable Person A to specify meeting parameters and\/or criteria. For example, UI  enables Person A to specify a title, privacy level, importance level, date and time range to search, time slot intervals, meeting duration, and a general description of the meeting.","On entering the meeting parameters in the UI , Person A is presented with the UI  of  to initiate the privacy-preserving scheduling process. For example, UI  provides a status  of the scheduling process and an option  to schedule the meeting based on the recommended time slots. Concurrently, the meeting invitees (e.g., Person B) are presented with the UI  of  to notify them of the meeting request with a potential date range  specified. In this case, the invited users are prompted in order to check if they accept or deny such a meeting, and the users do not have to deal with finding an available timeslot in their calendar. Instead, on accepting the meeting, their availability information (encrypted availability information) is sent to the scheduling platform  which computes (e.g., in a privacy preserving manner) the recommended (e.g., earliest or least costly) common timeslot.","The UI  of  presents the results of the privacy-preserving scheduling process to Person A. In this case, a recommended timeslot is provided. Person A can then either reject, change the date, or accept the meeting to send invitations to the meeting invitees. On deciding to send invitations, Person A also can presented with an option to include the meeting in Person A's calendar or other PIM application on the user's device as shown in the UI  of . In one embodiment, Person A can also be requested to assign a cost rating or weight to the time slot as shown in the UI  of . This scheduling platform  can then use this cost rating to refine its recommendations for scheduling future appointments.","Finally, as shown in the UI  of , invitations can be sent to the potential meeting attendees in an email. In one embodiment, the email may include the appointment date and time in standard calendar format (e.g., .ics format) so that the invitee can click on the link to automatically insert the appointment into the invitees' calendar applications.","The processes described herein for preserving privacy for appointment scheduling may be advantageously implemented via software, hardware, firmware or a combination of software and\/or firmware and\/or hardware. For example, the processes described herein, may be advantageously implemented via processor(s), Digital Signal Processing (DSP) chip, an Application Specific Integrated Circuit (ASIC), Field Programmable Gate Arrays (FPGAs), etc. Such exemplary hardware for performing the described functions is detailed below.",{"@attributes":{"id":"p-0109","num":"0108"},"figref":["FIG. 7","FIG. 7"],"b":["700","700","700","700","710","700","700"]},"A bus  includes one or more parallel conductors of information so that information is transferred quickly among devices coupled to the bus . One or more processors  for processing information are coupled with the bus .","A processor (or multiple processors)  performs a set of operations on information as specified by computer program code related to preserving privacy for appointment scheduling. The computer program code is a set of instructions or statements providing instructions for the operation of the processor and\/or the computer system to perform specified functions. The code, for example, may be written in a computer programming language that is compiled into a native instruction set of the processor. The code may also be written directly using the native instruction set (e.g., machine language). The set of operations include bringing information in from the bus  and placing information on the bus . The set of operations also typically include comparing two or more units of information, shifting positions of units of information, and combining two or more units of information, such as by addition or multiplication or logical operations like OR, exclusive OR (XOR), and AND. Each operation of the set of operations that can be performed by the processor is represented to the processor by information called instructions, such as an operation code of one or more digits. A sequence of operations to be executed by the processor , such as a sequence of operation codes, constitute processor instructions, also called computer system instructions or, simply, computer instructions. Processors may be implemented as mechanical, electrical, magnetic, optical, chemical or quantum components, among others, alone or in combination.","Computer system  also includes a memory  coupled to bus . The memory , such as a random access memory (RAM) or any other dynamic storage device, stores information including processor instructions for preserving privacy for appointment scheduling. Dynamic memory allows information stored therein to be changed by the computer system . RAM allows a unit of information stored at a location called a memory address to be stored and retrieved independently of information at neighboring addresses. The memory  is also used by the processor  to store temporary values during execution of processor instructions. The computer system  also includes a read only memory (ROM)  or any other static storage device coupled to the bus  for storing static information, including instructions, that is not changed by the computer system . Some memory is composed of volatile storage that loses the information stored thereon when power is lost. Also coupled to bus  is a non-volatile (persistent) storage device , such as a magnetic disk, optical disk or flash card, for storing information, including instructions, that persists even when the computer system  is turned off or otherwise loses power.","Information, including instructions for preserving privacy for appointment scheduling, is provided to the bus  for use by the processor from an external input device , such as a keyboard containing alphanumeric keys operated by a human user, or a sensor. A sensor detects conditions in its vicinity and transforms those detections into physical expression compatible with the measurable phenomenon used to represent information in computer system . Other external devices coupled to bus , used primarily for interacting with humans, include a display device , such as a cathode ray tube (CRT), a liquid crystal display (LCD), a light emitting diode (LED) display, an organic LED (OLED) display, a plasma screen, or a printer for presenting text or images, and a pointing device , such as a mouse, a trackball, cursor direction keys, or a motion sensor, for controlling a position of a small cursor image presented on the display  and issuing commands associated with graphical elements presented on the display . In some embodiments, for example, in embodiments in which the computer system  performs all functions automatically without human input, one or more of external input device , display device  and pointing device  is omitted.","In the illustrated embodiment, special purpose hardware, such as an application specific integrated circuit (ASIC) , is coupled to bus . The special purpose hardware is configured to perform operations not performed by processor  quickly enough for special purposes. Examples of ASICs include graphics accelerator cards for generating images for display , cryptographic boards for encrypting and decrypting messages sent over a network, speech recognition, and interfaces to special external devices, such as robotic arms and medical scanning equipment that repeatedly perform some complex sequence of operations that are more efficiently implemented in hardware.","Computer system  also includes one or more instances of a communications interface  coupled to bus . Communication interface  provides a one-way or two-way communication coupling to a variety of external devices that operate with their own processors, such as printers, scanners and external disks. In general the coupling is with a network link  that is connected to a local network  to which a variety of external devices with their own processors are connected. For example, communication interface  may be a parallel port or a serial port or a universal serial bus (USB) port on a personal computer. In some embodiments, communications interface  is an integrated services digital network (ISDN) card or a digital subscriber line (DSL) card or a telephone modem that provides an information communication connection to a corresponding type of telephone line. In some embodiments, a communication interface  is a cable modern that converts signals on bus  into signals for a communication connection over a coaxial cable or into optical signals for a communication connection over a fiber optic cable. As another example, communications interface  may be a local area network (LAN) card to provide a data communication connection to a compatible LAN, such as Ethernet. Wireless links may also be implemented. For wireless links, the communications interface  sends or receives or both sends and receives electrical, acoustic or electromagnetic signals, including infrared and optical signals, that carry information streams, such as digital data. For example, in wireless handheld devices, such as mobile telephones like cell phones, the communications interface  includes a radio band electromagnetic transmitter and receiver called a radio transceiver. In certain embodiments, the communications interface  enables connection to the communication network  for preserving privacy for appointment scheduling.","The term \u201ccomputer-readable medium\u201d as used herein refers to any medium that participates in providing information to processor , including instructions for execution. Such a medium may take many forms, including, but not limited to computer-readable storage medium (e.g., non-volatile media, volatile media), and transmission media. Non-transitory media, such as non-volatile media, include, for example, optical or magnetic disks, such as storage device . Volatile media include, for example, dynamic memory . Transmission media include, for example, twisted pair cables, coaxial cables, copper wire, fiber optic cables, and carrier waves that travel through space without wires or cables, such as acoustic waves and electromagnetic waves, including radio, optical and infrared waves. Signals include man-made transient variations in amplitude, frequency, phase, polarization or other physical properties transmitted through the transmission media. Common forms of computer-readable media include, for example, a floppy disk, a flexible disk, hard disk, magnetic tape, any other magnetic medium, a CD-ROM, CDRW, DVD, any other optical medium, punch cards, paper tape, optical mark sheets, any other physical medium with patterns of holes or other optically recognizable indicia, a RAM, a PROM, an EPROM, a FLASH-EPROM, an EEPROM, a flash memory, any other memory chip or cartridge, a carrier wave, or any other medium from which a computer can read. The term computer-readable storage medium is used herein to refer to any computer-readable medium except transmission media.","Logic encoded in one or more tangible media includes one or both of processor instructions on a computer-readable storage media and special purpose hardware, such as ASIC .","Network link  typically provides information communication using transmission media through one or more networks to other devices that use or process the information. For example, network link  may provide a connection through local network  to a host computer  or to equipment  operated by an Internet Service Provider (ISP). ISP equipment  in turn provides data communication services through the public, world-wide packet-switching communication network of networks now commonly referred to as the Internet .","A computer called a server host  connected to the Internet hosts a process that provides a service in response to information received over the Internet. For example, server host  hosts a process that provides information representing video data for presentation at display . It is contemplated that the components of system  can be deployed in various configurations within other computer systems, e.g., host  and server .","At least some embodiments of the invention are related to the use of computer system  for implementing some or all of the techniques described herein. According to one embodiment of the invention, those techniques are performed by computer system  in response to processor  executing one or more sequences of one or more processor instructions contained in memory . Such instructions, also called computer instructions, software and program code, may be read into memory  from another computer-readable medium such as storage device  or network link . Execution of the sequences of instructions contained in memory  causes processor  to perform one or more of the method steps described herein. In alternative embodiments, hardware, such as ASIC , may be used in place of or in combination with software to implement the invention. Thus, embodiments of the invention are not limited to any specific combination of hardware and software, unless otherwise explicitly stated herein.","The signals transmitted over network link  and other networks through communications interface , carry information to and from computer system . Computer system  can send and receive information, including program code, through the networks ,  among others, through network link  and communications interface . In an example using the Internet , a server host  transmits program code for a particular application, requested by a message sent from computer , through Internet , ISP equipment , local network  and communications interface . The received code may be executed by processor  as it is received, or may be stored in memory  or in storage device  or any other non-volatile storage for later execution, or both. In this manner, computer system  may obtain application program code in the form of signals on a carrier wave.","Various forms of computer readable media may be involved in carrying one or more sequence of instructions or data or both to processor  for execution. For example, instructions and data may initially be carried on a magnetic disk of a remote computer such as host . The remote computer loads the instructions and data into its dynamic memory and sends the instructions and data over a telephone line using a modem. A modem local to the computer system  receives the instructions and data on a telephone line and uses an infra-red transmitter to convert the instructions and data to a signal on an infra-red carrier wave serving as the network link . An infrared detector serving as communications interface  receives the instructions and data carried in the infrared signal and places information representing the instructions and data onto bus . Bus  carries the information to memory  from which processor  retrieves and executes the instructions using some of the data sent with the instructions. The instructions and data received in memory  may optionally be stored on storage device , either before or after execution by the processor .",{"@attributes":{"id":"p-0123","num":"0122"},"figref":["FIG. 8","FIG. 7"],"b":["800","800","800","800","800","800"]},"In one embodiment, the chip set or chip  includes a communication mechanism such as a bus  for passing information among the components of the chip set . A processor  has connectivity to the bus  to execute instructions and process information stored in, for example, a memory . The processor  may include one or more processing cores with each core configured to perform independently. A multi-core processor enables multiprocessing within a single physical package. Examples of a multi-core processor include two, four, eight, or greater numbers of processing cores. Alternatively or in addition, the processor  may include one or more microprocessors configured in tandem via the bus  to enable independent execution of instructions, pipelining, and multithreading. The processor  may also be accompanied with one or more specialized components to perform certain processing functions and tasks such as one or more digital signal processors (DSP) , or one or more application-specific integrated circuits (ASIC) . A DSP  typically is configured to process real-world signals (e.g., sound) in real time independently of the processor . Similarly, an ASIC  can be configured to performed specialized functions not easily performed by a more general purpose processor. Other specialized components to aid in performing the inventive functions described herein may include one or more field programmable gate arrays (FPGA) (not shown), one or more controllers (not shown), or one or more other special-purpose computer chips.","In one embodiment, the chip set or chip  includes merely one or more processors and some software and\/or firmware supporting and\/or relating to and\/or for the one or more processors.","The processor  and accompanying components have connectivity to the memory  via the bus . The memory  includes both dynamic memory (e.g., RAM, magnetic disk, writable optical disk, etc.) and static memory (e.g., ROM, CD-ROM, etc.) for storing executable instructions that when executed perform the inventive steps described herein to preserve privacy for appointment scheduling. The memory  also stores the data associated with or generated by the execution of the inventive steps.",{"@attributes":{"id":"p-0127","num":"0126"},"figref":["FIG. 9","FIG. 1"],"b":"901"},"Pertinent internal components of the telephone include a Main Control Unit (MCU) , a Digital Signal Processor (DSP) , and a receiver\/transmitter unit including a microphone gain control unit and a speaker gain control unit. A main display unit  provides a display to the user in support of various applications and mobile terminal functions that perform or support the steps of preserving privacy for appointment scheduling. The display  includes display circuitry configured to display at least a portion of a user interface of the mobile terminal (e.g., mobile telephone). Additionally, the display  and display circuitry are configured to facilitate user control of at least some functions of the mobile terminal. An audio function circuitry  includes a microphone  and microphone amplifier that amplifies the speech signal output from the microphone . The amplified speech signal output from the microphone  is fed to a coder\/decoder (CODEC) .","A radio section  amplifies power and converts frequency in order to communicate with a base station, which is included in a mobile communication system, via antenna . The power amplifier (PA)  and the transmitter\/modulation circuitry are operationally responsive to the MCU , with an output from the PA  coupled to the duplexer  or circulator or antenna switch, as known in the art. The PA  also couples to a battery interface and power control unit .","In use, a user of mobile terminal  speaks into the microphone  and his or her voice along with any detected background noise is converted into an analog voltage. The analog voltage is then converted into a digital signal through the Analog to Digital Converter (ADC) . The control unit  routes the digital signal into the DSP  for processing therein, such as speech encoding, channel encoding, encrypting, and interleaving. In one embodiment, the processed voice signals are encoded, by units not separately shown, using a cellular transmission protocol such as enhanced data rates for global evolution (EDGE), general packet radio service (GPRS), global system for mobile communications (GSM), Internet protocol multimedia subsystem (IMS), universal mobile telecommunications system (UMTS), etc., as well as any other suitable wireless medium, e.g., microwave access (WiMAX), Long Term Evolution (LTE) networks, code division multiple access (CDMA), wideband code division multiple access (WCDMA), wireless fidelity (WiFi), satellite, and the like, or any combination thereof.","The encoded signals are then routed to an equalizer  for compensation of any frequency-dependent impairments that occur during transmission though the air such as phase and amplitude distortion. After equalizing the bit stream, the modulator  combines the signal with a RF signal generated in the RF interface . The modulator  generates a sine wave by way of frequency or phase modulation. In order to prepare the signal for transmission, an up-converter  combines the sine wave output from the modulator  with another sine wave generated by a synthesizer  to achieve the desired frequency of transmission. The signal is then sent through a PA  to increase the signal to an appropriate power level. In practical systems, the PA  acts as a variable gain amplifier whose gain is controlled by the DSP  from information received from a network base station. The signal is then filtered within the duplexer  and optionally sent to an antenna coupler  to match impedances to provide maximum power transfer. Finally, the signal is transmitted via antenna  to a local base station. An automatic gain control (AGC) can be supplied to control the gain of the final stages of the receiver. The signals may be forwarded from there to a remote telephone which may be another cellular telephone, any other mobile phone or a land-line connected to a Public Switched Telephone Network (PSTN), or other telephony networks.","Voice signals transmitted to the mobile terminal  are received via antenna  and immediately amplified by a low noise amplifier (LNA) . A down-converter  lowers the carrier frequency while the demodulator  strips away the RF leaving only a digital bit stream. The signal then goes through the equalizer  and is processed by the DSP . A Digital to Analog Converter (DAC)  converts the signal and the resulting output is transmitted to the user through the speaker , all under control of a Main Control Unit (MCU)  which can be implemented as a Central Processing Unit (CPU) (not shown).","The MCU  receives various signals including input signals from the keyboard . The keyboard  and\/or the MCU  in combination with other user input components (e.g., the microphone ) comprise a user interface circuitry for managing user input. The MCU  runs a user interface software to facilitate user control of at least some functions of the mobile terminal  to preserving privacy for appointment scheduling. The MCU  also delivers a display command and a switch command to the display  and to the speech output switching controller, respectively. Further, the MCU  exchanges information with the DSP  and can access an optionally incorporated SIM card  and a memory . In addition, the MCU  executes various control functions required of the terminal. The DSP  may, depending upon the implementation, perform any of a variety of conventional digital processing functions on the voice signals. Additionally, DSP  determines the background noise level of the local environment from the signals detected by microphone  and sets the gain of microphone  to a level selected to compensate for the natural tendency of the user of the mobile terminal .","The CODEC  includes the ADC  and DAC . The memory  stores various data including call incoming tone data and is capable of storing other data including music data received via, e.g., the global Internet. The software module could reside in RAM memory, flash memory, registers, or any other form of writable storage medium known in the art. The memory device  may be, but not limited to, a single memory, CD, DVD, ROM, RAM, EEPROM, optical storage, magnetic disk storage, flash memory storage, or any other non-volatile storage medium capable of storing digital data.","An optionally incorporated SIM card  carries, for instance, important information, such as the cellular phone number, the carrier supplying service, subscription details, and security information. The SIM card  serves primarily to identify the mobile terminal  on a radio network. The card  also contains a memory for storing a personal telephone number registry, text messages, and user specific mobile terminal settings.","While the invention has been described in connection with a number of embodiments and implementations, the invention is not so limited but covers various obvious modifications and equivalent arrangements, which fall within the purview of the appended claims. Although features of the invention are expressed in certain combinations among the claims, it is contemplated that these features can be arranged in any combination and order."],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"BRIEF DESCRIPTION OF THE DRAWINGS","p":["The embodiments of the invention are illustrated by way of example, and not by way of limitation, in the figures of the accompanying drawings:",{"@attributes":{"id":"p-0016","num":"0015"},"figref":"FIG. 1"},{"@attributes":{"id":"p-0017","num":"0016"},"figref":"FIG. 2"},{"@attributes":{"id":"p-0018","num":"0017"},"figref":"FIG. 3"},{"@attributes":{"id":"p-0019","num":"0018"},"figref":"FIG. 4"},{"@attributes":{"id":"p-0020","num":"0019"},"figref":"FIG. 5"},{"@attributes":{"id":"p-0021","num":"0020"},"figref":["FIGS. 6A-6I","FIGS. 1-5"]},{"@attributes":{"id":"p-0022","num":"0021"},"figref":"FIG. 7"},{"@attributes":{"id":"p-0023","num":"0022"},"figref":"FIG. 8"},{"@attributes":{"id":"p-0024","num":"0023"},"figref":"FIG. 9"}]},"DETDESC":[{},{}]}
