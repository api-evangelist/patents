---
title: Systems and methods of providing push-to-application services
abstract: Systems and methods of providing push-to-application services are provided. A network includes a push-to-application session controller that manages a push-to-application session between an application and a client. The network also includes a media controller, coupled to the session controller, that transfers media between the client and the application. The network further includes an application synchronizer, coupled to the session controller, that controls synchronization between media provided by the media controller to the client and data provided by the application to the client.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08738710&OS=08738710&RS=08738710
owner: Nextel Communications Inc.
number: 08738710
owner_city: Reston
owner_country: US
publication_date: 20090805
---

{"@attributes":{"id":"description"},"BRFSUM":[{},{}],"heading":["CROSS REFERENCE TO RELATED APPLICATIONS","BACKGROUND OF THE INVENTION","SUMMARY OF THE INVENTION","DETAILED DESCRIPTION OF THE PREFERRED EMBODIMENTS"],"p":["This application is related to U.S. patent application Ser. No. 12\/209,525, filed on Sep. 12, 2008, entitled \u201cSystems and Methods of Push-to-Applications\u201d, the entire disclosure of which is herein expressly incorporated by reference.","Wireless communication networks provide one or more communication services to mobile stations. These communication services can include voice interconnect calls, voice push-to-talk calls and non-voice data services. Voice interconnect calls are full-duplex calls and are the type commonly provided in wireless communication networks. Push-to-talk (PTT) voice calls are half-duplex calls and historically have only been provided on a limited number of wireless communication networks, such as the iDEN\u00ae network owned and operated by Sprint Nextel Corporation.","Recent developments have expanded the use of push-to-talk call beyond the iDEN network. These developments include the Push-to-Talk over Cellular (PoC) standard, as well as the QChat\u00ae system developed by Qualcomm, Inc. Nevertheless, these systems, like the iDEN\u00ae network, focus the use of push-to-talk technology for voice calls.","Systems and methods of providing push-to-application services are provided. An exemplary system includes a push-to-application session controller that manages a push-to-application session between an application and a client; a media controller, coupled to the session controller, that transfers media between the client and the application; and an application synchronizer, coupled to the session controller, that controls synchronization between media provided by the media controller to the client and data provided by the application to the client.","An exemplary method involves receiving, by a push-to-application session controller from a client, a request for a particular push-to-application service; receiving, by the push-to-application session controller from the client, a request for information for the particular push-to-application service; obtaining, by the push-to-application session controller from the particular push-to-application service, the requested information; and providing, by the push-to-application session controller, the requested information to the client.","Other objects, advantages and novel features of the present invention will become apparent from the following detailed description of the invention when considered in conjunction with the accompanying drawings.",{"@attributes":{"id":"p-0011","num":"0010"},"figref":"FIG. 1","b":"102"},"PTx Client  can be any type of client capable of communicating with a push-to-talk (PTT) communication infrastructure . This infrastructure can be any type of PTT infrastructure, including, but not limited to infrastructure compliant with the Push-to-Talk over Cellular (PoC) standard, QChat\u00ae protocols or iDEN\u00ae protocols. PTT infrastructure  can include one or more gateways (not illustrated) to couple client  via a particular type of PTT network to PTx application platform . These gateways convert the specific protocols used by the particular PTT network into common protocols used by PTx application platform . In the embodiment illustrated in , PTx application platform  uses session initiation protocol (SIP) for signaling and real-time protocol (RTP) for media.","PTx application platform  includes a PTx session controller (PSC)  coupled to streaming media controller (SMC) , multi-modal application synchronizer , application authentication and authorization server (AAS)  and customer data records (CDR) logging server (CLS) . PTx application platform  also includes an automatic speech recognition engine (ASR)  and a text-to-speech engine , both of which are coupled to streaming media controller  and PTx application container (PAC) .","PTx session controller  is coupled to PTT infrastructure , which communicate with each other using SIP. PTx session controller  maintains real-time media session with the PTx client  on behalf of the PTx application container . PTx session controller  also selects the streaming media controller to handle the particular screening of media (if more than one streaming media controller is deployed), notifies the PTx application container  of call-related events, and authenticates incoming service requests from client . PTx session controller  communicates with elements , , , and  using, for example, Java message service (JMS).","Streaming media controller  communicates with PTT infrastructure  using real-time protocol, and with automatic speech recognition engine  and text-to-speech engine  using HTTP. Streaming media controller  handles streaming media on behalf of PTx applications, and can transfer audio clips to the automatic speech recognition engine  for speech recognition and retrieve audio clips from the text-to-speech engine  for playback to PTx client .","Multi-modal application synchronizer  is coupled to PTx client . These elements communicate using HTTP. Although multi-modal application synchronizer  and PTx client  are illustrated as communicating outside of PTT infrastructure , these elements can communicate through the PTT infrastructure using, for example, SIP. It should be recognized that using HTTP and a direct path to PTx client  is more efficient than transporting this information through the PTT infrastructure. Synchronizer  is also coupled to PTx service application programming interface (API)  of PTx application container . Elements  and  communicate with each other using Java message service. Multi-modal application synchronizer  maintains the data session with the client  on behalf of applications executed on PTx application container  and manages the synchronization between the data and streaming media sessions with PTx client .","Automatic speech recognition engine  performs speech recognition of audio received from PTx client  and\/or from an application executed on PTx application container . Text-to-speech engine  performs text-to-speech conversion for text received from PTx client  and\/or an application executed on PTx application container . Text-to-speech engine  can maintain a cache of audio clips that correspond to the text that is converted into speech. Automatic speech recognition engine  and text-to-speech engine  are coupled to PTx service API  of PTx application container , all of which communicate using media resource control protocol (MRCP).","Application authentication and authorization server  authenticates service requests from applications executed on PTx application container  and communicates with a billing, provisioning, and operation and maintenance system  using HTTPS. Customer data record logging server  generates call detail records and forwards them to billing, provisioning, operation and maintenance system  using FTP. Billing, provisioning, and operation and maintenance system  includes a subscriber database  that includes user identity, authentication information and call detail records.","PTx application container  manages PTx instances of PTx applications executed on the container, notifies PTx session controller  of call events via PTx service API  using JMS. PTx application container  also receives and sends call requests to the PTx session controller  and receives and sends data to multi-modal application synchronizer  via PTx service API  on behalf of applications executed on PTx application container . PTx application container  is also coupled to web services  via an internet and\/or intranet  to content  and\/or portal  to pull web service content for the PTx applications.","PTx application container  can include any type of PTx application that provides push-to-application services, including a voice XML (VXML) application  and\/or non-VXML PTx application . VXML application  communicates with PTx service API  via VXML interpreter . PTx application  communicates directly with PTx service API . Applications  and  can communicate with network services  using network service API . This communication can employ any type of protocol, including, but not limited to, mobile location protocol (MLP), MM7 and\/or the like. Those skilled in the art will recognize that MM7 is a 3GPP interface, based on SOAP protocol, for sending MMS messages from 3rd party providers. Network services  include, for example, wireless application protocol (WAP) , presence services  and\/or location services . Although  illustrates PTx application container  as including one VXML application  and one PTx application , the present invention is not so limited. Instead, PTx application container  can include one or more of either type of application. These applications can be deployed by an operator of the PTT network or provided by third parties.",{"@attributes":{"id":"p-0021","num":"0020"},"figref":["FIG. 2","FIG. 2","FIG. 2","FIG. 2"],"b":["102","110","101","102","202","210","212","204","208","102","204","206","208","208","116","104","210","126","110","148","160","220","222","164","166","208","210","126","110"]},{"@attributes":{"id":"p-0022","num":"0021"},"figref":"FIGS. 3 and 4"},"Initially, PTx client  sends an Invite message to PTT infrastructure  (step ), which forwards the Invite message to PTx session controller  (step ). PTT infrastructure  also sends a Trying message to client  (step ). PTx session controller  sends an Authorization Query message to application authentication server  (step ), which replies with an Authorization Granted message (step ). PTx session controller  sends a Trying message to PTT infrastructure  after sending the Authorization Query (step ).","In response to the Authorization granted message, PTx session controller  sends a Media Create message to streaming media controller  (step ), which replies with a Create OK message (step ). PTx session controller  then sends a 200 OK message to PTT infrastructure  (step ), which then forwards the message to PTx client  (step ). PTx Client  responds with an ACK message (step ), which is then forwarded to PTT session controller  (step ). While the 200 OK and ACK messages are being exchanged, PTx session controller  sends a Media Open message to streaming media controller  (step ), which replies with an Open OK message (step ).","In response to receipt of the ACK message from PTT infrastructure  (step ) and the Open OK message from streaming media controller  (step ), PTx session controller  sends a new voice session message to PTx application container  (step ), which then sends a Cache Session Location message to multi-modal application synchronizer  (step ). PTx application container  also sends a Voice Session OK message (step ) in response to the new voice session message. Multi-modal application synchronizer  sends a Cache OK message in response to the cache session location message (step ). Thus, an instance of the PTx application has been initiated for PTx client , and the next stage is to set up the data session.","Exemplary embodiments of the present invention can be employed with devices that can support simultaneous voice and data sessions (e.g., 3G-enabled devices) and devices that can only support a voice or data session at any particular time. In this latter case, a data session will not be setup and processing will proceed to the issue voice command stage. For devices that support simultaneous voice and data sessions, the voice and data sessions can be setup in parallel or serially. Accordingly, although  is described below as setting up the data session first and then the voice session, the present invention can be employed such that the sessions are setup in parallel. Setting up the voice and data session in parallel will reduce the overall latency of the process. Additionally, if the voice and data sessions are setup serially, the voice sessions can be setup first and then the data session can be setup.","Initiation of setting up the data session starts with PTx client  sending an Establish Data Session message to multi-modal application synchronizer  (step ), which replies with a Data Session OK message (step ). Multi-modal application synchronizer  looks up the particular PTx application container serving this particular PTx session (step ), and sends an Individual Data Session message to the identified PTx application container (step ), which replies with a Data Session OK message (step ). The multi-modal application synchronizer can lookup the particular PTx application container using an internal database or a domain name server (DNS) query based on the PTX client identification (ID). The lookup is also performed to determine where a particular application is located. Step  assumes that the system employs more than one PTx application container, e.g., one container for the network operator's applications and one or more different containers for third party applications. When, however, the system includes only one PTx application container, this step can be omitted. The Data Session OK message completes establishment of the data session between client  and the particular PTx application.","Now that the data session has been set up PTx client  can issue voice commands. Because the present invention involves a PTT system, which operate using a shared floor, after the data session is setup PTT infrastructure  sends an RTCP (Floor Taken) message to streaming media controller  (step ), to seize the floor of the PTT session. When PTx client  desires to issue a voice command, the PTT button on PTx device  is depressed and the microphone of device  captures the audio until the PTT button is released. Specifically, the voice command is sent in an RTP message to PTT infrastructure  (step ), which forwards the message to streaming media controller  (step ). Streaming media controller  captures the audio (step ). When the client has finished providing audio, a Floor Release message is sent to the PTT infrastructure  (step ), which then sends an RTCP (Floor Open) message to streaming media controller  (step ). This causes the streaming media controller to cease capturing the audio. In response to receiving the Floor Release message, PTT infrastructure  sends a Floor Open message to PTx client  (step ).","After streaming media controller  has finished capturing the audio the controller sends a Media Received message to PTx session controller  to confirm receipt of the voice command (step ), and PTx session controller  replies with a Received OK message (). PTx session controller  then sends a Receive Audio message to PTx application container  (step ), which then sends an ST_Start (Grammar) message to automatic speech recognition engine  (step ). PTx application container  responds to the PTx session controller  with an OK message (step ). Automatic speech recognition engine  then sends a HTTP GET message to streaming media controller  (step ), which replies with a GET OK (audio file) message (step ). Automatic speech recognition engine  performs speech-to-text conversion (step ), and then sends an ST_Complete (Text) message (step ). This completes the inbound processing of the issued voice command.","Once the inbound voice command has been processed, the content requested by the voice command is retrieved. Specifically, turning now to , PTx application container  sends a Get Content message to web services  (step ), which responds with a Content OK message (step ). PTx application container  then sends a TS_Start (Text, Audio Clips) message to text-to-speech converter  (step ), which stitches the audio clips into an audio file for playback (step ) and sends a HTTP Put (audio file) message to streaming media controller  (step ). Streaming media controller  then sends an OK message to text-to-speech converter  (step ). Text-to-speech converter  sends a TS_Complete message to PTx application container  (step ), which then sends a Play Audio message to PTx session controller  (step ). PTx session controller  then responds with a OK message (step ), and PTx application container  then sends a Post Content message to multi-modal application synchronizer  (step ). Multi-modal application synchronizer  responds with an OK message (step ), which completes the retrieval of the content by the PTx application. PTx application container  can store the retrieved content for a configurable amount of time so that subsequent requests for the information can be obtained from a local storage or cache instead of having to retrieve the information again from the web services . The local storage can reduce latency for subsequent requests for the information.","Next the content is played back to the PTx client , which is initiated by PTx session controller  sending a Play Audio message to streaming media controller  (step ). Streaming media controller  then sends a RTCP (Floor Request) message to PTT infrastructure  (step ) in order to seize the floor of the PTT session. PTT infrastructure  sends a RTCP (Floor Granted) message to streaming media controller  (step ) and a Floor Taken message to PTx client  (step ). Streaming media controller  then sends a RTP (audio) message to PTT infrastructure  (step ), which forwards the audio to PTx client  (step ). Multi-modal application synchronizer  then sends a Publish Content message to PTx client  (step ), which replies with an OK message (step ). After reproduction of the audio has completed, streaming media controller  sends a RTCP (Floor Release) message to PTT infrastructure  (step ), which forwards the message to PTx client  (step ). Streaming media controller  then sends a Media Played message to PTx session controller  (step ), which responds with a Played OK message (step ). PTx session controller  then sends a Play Complete message to PTx application container  (step ), which replies with a Play Complete OK message (step ). This completes the playback of the content.","After the content has been played the application should be closed, which is initiated by PTx client  sending a Bye message to PTT infrastructure  (step ), which sends a BYE message to PTx session controller  (step ). PTx session controller  responds with a 200 OK message (step ), and PTT infrastructure forwards the message to PTx client  (step ). In response to the BYE message (step ), PTx session controller  sends an End Voice Session message to PTx application container  (step ), which then sends a Clear Session Location message to multi-modal application server  (step ). PTx application container  also sends an End OK message to PTx session controller  (step ). In response to the Clear Session Location message (step ), multi-modal application server  sends a Clear OK message (step ). In response to receiving the End OK message (step ), PTx session controller  sends a Media Destroy Message to streaming media controller  (step ), which responds with a Destroy OK message (step ). PTx client  sends a Close message to multi-modal application server (step ), which replies with an OK message (step ). This closes the application and completes the PTx session.","Although the call flow diagrams of  include messages designated with particular names, the present invention can employ similar messages with other names. Furthermore, the present invention can also send a data command instead of a voice command. In this case there would be no need to convert audio into text, and instead the text would be sent from PTx session controller to PTx application container without conversion. If desired, however, the text can be converted from a format of PTx client  into a format used by the particular PTx application. Additionally, or alternatively, the present invention can send data to PTx client  instead of audio. In this case there would be no need to convert the data into audio, and instead the text would be sent from PTx session controller  to PTx client  without conversion. If desired, however, the data can be converted from a format of the PTx application into a format for PTx client  (e.g., formatted for the display of PTx client ). Additionally, although the call flow diagram discusses providing the requested information in audio form, the requested information can be provided picture, video, formatted text, or a combination of picture, video and formatted text. Moreover, data and audio can be sent to PTx client , which can then synchronize the reproduction of the data and audio via the PTT user interface.","The foregoing disclosure has been set forth merely to illustrate the invention and is not intended to be limiting. Since modifications of the disclosed embodiments incorporating the spirit and substance of the invention may occur to persons skilled in the art, the invention should be construed to include everything within the scope of the appended claims and equivalents thereof."],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"BRIEF DESCRIPTION OF THE DRAWING FIGURES","p":[{"@attributes":{"id":"p-0008","num":"0007"},"figref":"FIG. 1"},{"@attributes":{"id":"p-0009","num":"0008"},"figref":"FIG. 2"},{"@attributes":{"id":"p-0010","num":"0009"},"figref":"FIGS. 3 and 4"}]},"DETDESC":[{},{}]}
