---
title: Co-channel interference receiver
abstract: A digital receiver automatically detects and non-coherently demodulates a multiplicity of interfering digitally modulated signals transmitted simultaneously at approximately the same carrier frequency. The receiver includes one or more antenna inputs (e.g., polarization and/or space diverse), a parameter estimator module, and a multiuser detector for estimating the data transmitted by each interfering signals and adapted to operate with at least one of a MUD algorithm with partially quantized prior information and a MUD algorithm based on prewhitened data.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=07092452&OS=07092452&RS=07092452
owner: Bae Systems Information and Electronic Systems Integration INC
number: 07092452
owner_city: Nashua
owner_country: US
publication_date: 20030425
---

{"@attributes":{"id":"description"},"RELAPP":[{},{}],"heading":["RELATED APPLICATIONS","STATEMENT OF GOVERNMENT INTEREST","FIELD OF THE INVENTION","BACKGROUND OF THE INVENTION","BRIEF SUMMARY OF THE INVENTION","DETAILED DESCRIPTION OF THE INVENTION"],"p":["This application claims the benefit of U.S. Provisional Application No. 60\/398,451, filed Jul. 24, 2002. This application is a continuation-in-part of U.S. application Ser. No. 10\/228,787 filed Aug. 26, 2002, which claims priority to U.S. Provisional Application No. 60\/372,956, filed Apr. 16, 2002. This application is also a continuation-in-part of U.S. application Ser. No. 10\/105,918, filed Mar. 25, 2002. This application is related to U.S. application Ser. No. 10\/423,695, filed Apr. 25, 2003, This application is related to U.S. application Ser. No. 10\/423,655, filed Apr. 25, 2003. Each of these applications is herein incorporated in its entirety by reference.","The present invention was made with United States Government support under a United States Government Contract. The United States Government has certain rights in this invention.","The invention relates to wireless communications, and more particularly, to a wireless digital signal receiver for applications where recovery of digital signals corrupted by co-channel interference from similarly modulated interfering signals is desirable.","Wireless networks are employed for communication between various devices, such as cell phones and computers. Digitally modulated signals such as binary phase shift keyed and quadrature phase shift keyed signals are transmitted between nodes of the network. Examples include satellite communications networks where terminals transmit through satellite transponders, terrestrial systems where terminals transmit through repeating towers, and indoor local area networks where terminals transmit through central repeating elements.","Computer elements connected to these networks provide a variety of user services. Examples include telephone traffic with digital voice encoding, video conferencing, wide area computer network connectivity, and internet service. In such applications, it is desirable to maximize the network traffic capacity in a given bandwidth in the presence of interference and noise.","To that end, a variety of schemes exist for efficiently partitioning the network elements into communication channels. For example, frequency domain multiple access (FDMA) schemes assign each network terminal to a separate, non-overlapping frequency band. Time domain multiple access (TDMA) schemes assign each terminal to a separate non-overlapping time slot. Code division multiple access (CDMA) schemes assign each terminal to a separate modulating waveform so that the cross correlation between each terminal is negligible.","Such schemes are inefficient in that given sufficient signal to noise ratio or coding redundancy, more communicators could use the allocated bandwidth if provided with a means for detecting the excess signal margin, as well as a means for demodulating signals in the presence of interference. In short, despite the advancements in wireless transmission and reception, conventional systems do not properly account for the real world wireless communication signals that suffer from signal degradation such as interference and multipath problems.","More specifically, a real world multiuser system includes a number of independent users simultaneously transmitting signals. Each of these transmissions are associated with real-time problems of multipath and co-channel interference that manifest in the received signals. Multipath occurs when a signal proceeds to the receiver along not one but many paths so that the receiver encounters echoes having different and randomly varying delays and amplitudes. Co-channel interference refers to signals received from other users.","A multiuser detection (MUD) receiver can be used to jointly demodulate co-channel interfering digital signals. In general, MUD refers to the detection of data in non-orthogonal multiplexes. MUD processing increases the number of information bits available per chip or signaling dimension for interference limited systems. Optimal MUD based on the maximum likelihood principle operates by comparing the received signal with the entire number of possibilities that may have occurred at the ensemble of transmitters, to give rise to the waveform received at the receiver.","However, for multiuser detectors that examine a larger capacity of signal, the computations are complex and time-consuming, thus making real-time operation impractical. Reduced complexity approaches based on conventional tree-pruning algorithms help to some extent. However, performance of such multiuser detection algorithms degrades as the parameter M (pruning factor) is decreased, but M governs the number of computations required. Thus, to combat improper pruning, basic tree-pruning must ensure that M is large enough. As a result, conventional pruning methods are still associated with increased complexity, particularly when the number of interfering signals is moderate to large.","What is needed therefore are techniques for allowing multiple users to operate in the same communication channel. Such techniques should accurately separate co-channel signals and reduce complex processing.","One embodiment of the present invention provides a co-channel interference receiver. The receiver includes a multiuser detector module that is adapted to receive a complex signal that contains information from K co-channel interfering signals. The receiver further includes a parameter estimation module that is adapted to receive the complex signal, and to generate estimated signature waveforms of each of the K co-channel interfering signals. The estimated signature waveforms are provided to the multiuser detector thereby enabling demodulation of the K co-channel interfering signals. Note that the multiuser detector module and the parameter estimation module can each be adapted to receive a plurality of complex signals.","The multiuser detector module is configured to operate, for example, with an algorithm with partially quantized prior information. Alternatively, the multiuser detector module is configured to operate with an algorithm based on prewhitened data. Alternatively, the receiver may be configured to operate with both algorithms. In one such embodiment, the algorithm with partially quantized prior information is a low complexity linear MMSE algorithm. In another such embodiment, the algorithm based on prewhitened data in one of an M-algorithm and T-algorithm.","The receiver may further include an analog front end that is operatively coupled to the multiuser detector module and the parameter estimation module. The analog front end is adapted to receive one or more composite waveform signals each from a plurality of transmitters, and to convert each received composite waveform signal to a corresponding complex signal. In one such embodiment, the analog front end includes one or more analog to digital converters, each adapted to convert a received composite waveform to a digital waveform, and also includes one or more downconverters, each operatively coupled to a respective analog to digital converter, and adapted to translate frequency associated with a received composite waveform to a lower frequency.","The analog front end may further include one or more antennas each configured to receive a corresponding composite waveform signal from the plurality of transmitters. In one such embodiment, the one or more antennas is a singly polarized antenna. Alternatively, the one or more antennas is a dual polarized antenna adapted with two polarization ports, thereby providing polarization diversity. Alternatively, the one or more antennas include two or more dual polarized antennas, each adapted with two polarization ports, thereby providing space and polarization diversity.","In an embodiment where the multiuser detector module is configured to operate with the low complexity linear MMSE algorithm with partially quantized prior information, the multiuser detector module includes a turbo MUD module, a combiner module, an error correction module, and a thresholding module. The turbo MUD module is adapted to provide estimates of individual bits for each of the K co-channel interfering signals. The estimates are iteratively applied in a feedback loop, which includes the error correction module, until an error rate associated with the bits drops below a predetermined figure. The combiner module is operatively coupled to the turbo MUD, and is adapted to combine recomputed bit estimates output by the turbo MUD with quantized bit values on a next iteration. The thresholding module is operatively coupled to the output of the error correction module, and is adapted to assign a quantized value for each bit estimate above a predetermined threshold, and to pass through those quantized bit values to the combiner module, thereby enabling partially quantized prior information. In one such embodiment, the error correction module on each subsequent iteration processes a combination of recomputed bit estimates output by the turbo MUD and quantized bit values output by the thresholding module, and provides its output back to the turbo MUD through the thresholding module, thereby reducing the number of uncertain bit estimates with every iteration.","In an embodiment where the multiuser detector module is configured to operate with the low complexity M-algorithm based on prewhitened data, the multiuser detector module includes a matched filter, a whitener designer module, an asynchronous whitener module, and a symbol hypothesis testing module. The matched filter is adapted to prewhiten complex signals received by the receiver, thereby partially decoupling users from multiple access interference. The whitener designer module is operatively coupled to the parameter estimator, and is adapted to develop a model of each received complex signal based on parameter estimates from the parameter estimator, and to compute an asynchronous whitener module that whitens filtered data output by the matched filter. The symbol hypothesis testing module is operatively coupled to the whitener designer module, and configured to receive whitened data output by the asynchronous whitener module. The symbol hypothesis testing module is adapted to conduct symbol hypothesis testing based on sequential evaluation of metric characterizing likelihood of hypotheses. In one such embodiment, the whitener designer module employs a square-root factorization. For example, the whitener designer module utilizes a correlation matrix provided by the parameter estimation module to compute a diagonally loaded Cholesky Factorization, which is used for whitening in the whitening module, and is also used in hypothesis testing in the symbol hypothesis testing module. Alternatively, the whitener designer module employs a QR factorization using Householder transformations. In addition, the whitener designer module can employ Hyperbolic Householder transformations to efficiently update the asynchronous whitener module when only received energies and\/or phases change between symbol periods.","The parameter estimates of the parameter estimation module can be used to model a channel associated with each received complex signal, thereby enabling application of the matched filter and development of an asynchronous decorrelating filter bank. In one embodiment, the parameter estimation module includes a training sequence locator module, a noise estimator module, and a signature waveform estimator module, an active user tester module, a transformation matrix rebuilder module. The training sequence locator module is adapted to estimate a training sequence location index in each frame of the received complex signal. The noise estimator module is adapted to calculate an estimate of an average noise power in the received complex signal in accordance with the training sequence location index. The signature waveform estimator module is adapted to estimate signature waveforms unique to each user in the received complex signal in accordance with the training sequence location index and a transformation matrix. The active user tester module is operatively coupled to an output of the noise estimator module and to an output of the signature waveform estimator module, and is adapted to determine a number of active users associated with the received complex signal. The transformation matrix rebuilder module is operatively coupled to the active user tester module and to pre-stored known training sequences for each user, and is adapted to generate the transformation matrix used by the signature waveform estimating module.","Another embodiment of the present invention provides a method for receiving a complex signal that contains information from K co-channel interfering signals. The method includes estimating signature waveforms of each of the K co-channel interfering signals, and processing the complex signal based on the signature waveforms with at least one of: a low complexity linear MMSE algorithm with partially quantized prior information, and a low complexity M-algorithm based on prewhitened data. In one such embodiment, the low complexity linear MMSE algorithm with partially quantized prior information includes eliminating from each processing iteration consideration of those bits having an estimate value that exceeds a predetermined threshold, wherein bit estimates exceeding the threshold are considered certain. In another such embodiment, the low complexity M-algorithm based on prewhitened data includes filtering the complex signal, thereby partially decoupling users from multiple access interference and providing prewhitened data. The method proceeds with developing a model of the received complex signal based on parameter estimates, computing an asynchronous whitener based on the model for whitening the prewhitened data, and conducting symbol hypothesis testing based on sequential evaluation of metric characterizing likelihood of hypotheses.","The features and advantages described herein are not all-inclusive and, in particular, many additional features and advantages will be apparent to one of ordinary skill in the art in view of the drawings, specification, and claims. Moreover, it should be noted that the language used in the specification has been principally selected for readability and instructional purposes, and not to limit the scope of the inventive subject matter.","In present day communication systems, a central controller normally assigns one communicator to each channel, during a communication channel setup period. Channels may be some combination of a time slot, a frequency, and a spreading code. In most systems, channels are re-used in distant regions, thereby giving rise to co-channel interference. If there is a large distance between the regions wherein the re-use occurs, then signal attenuation reduces the co-channel interference to tolerable levels. This is a necessary result, as conventional receivers cannot demodulate a signal in the presence of significant co-channel interference.","A Co-Channel Interference Receiver configured in accordance with the principles of the present invention can jointly demodulate two or more signals transmitted on the same channel. Systems utilizing an embodiment of the Co-Channel Interference Receiver could use a similar channel setup format, but the channel assignments would not be limited to a single communicator per channel in any given region. More specifically, when all available channels are filled with one user per channel, the central controller can begin filling new channel requests by adding the new communicator to an already occupied channel.","This will slightly degrade the bit error rate of the first communicator. The central controller may optionally direct the transmitters on this channel to increase transmit power to bring the bit error rate back down. Alternatively, the central controller may optionally direct the transmitters and receivers on this channel to decrease the bandwidth to bring the bit error rate back down.","In addition, the receiver of the present invention is configured to receive data using spatially diverse and or polarization diverse antennas. Both concepts are within the scope of the invention, as well as the use of a single antenna. Encompassing more than one polarization port allows the transmitter to transmit in both polarizations and in the event of significant multipaths or electromagnetic scattering, both polarizations may be received and processed even though only one was transmitted. Polarization and\/or space diversity increases the number of dimensions in the signal space, which effectively increases the distance between constellation points. As a result, the bit error rate is improved.","Embodiments of the invention can be used in several applications. One such application is a co-channel communications system for airborne-to-ground communications, where the system simultaneously receives signals from several independent communication networks transmitting similarly modulated data on nearly identical carrier frequencies. The main beam area coverage can be low density (e.g., 10,000 square kilometers) or high density (e.g., 100 square kilometers). Consider, for example, a main beam covering 28 base stations and a frequency reuse factor of 7, where there are 8 users per base station, with 4 of the base stations operating on the same frequency. Such a system would receive up to 224 users' downlink signals, and a variety of signal types originating from diverse sources would need to be processed by a single receiver.","Another example co-channel system application is a terrestrial frequency communications receiver simultaneously receiving signals from elements of the same communication network employing frequency reuse. The communications network might be, for instance, a packet radio network, a cell phone network, or a wireless local area network. Due to inadvertent positioning of the network elements, the network is degraded by interference.","While the discussion herein illustrates wireless communication applications, the principles of the present invention are equally applicable to wired cable systems and local area networks, read\/write operations of a disc drive or other storage devices, satellite communications, and any application that benefits from manipulating digital data from among many multiple sources.","Co-Channel Interference Receiver","Referring to , a system block diagram is shown of a Communication System  comprising a Multiuser Detection (MUD) Receiver  and a plurality of User Transmitters to , which are all simultaneously transmitting co-channel, interfering digital signals, all on the same frequency, all using the same type of modulation scheme such as digital phase shift key (PSK) or quadrature amplitude modulated (QAM) signals, with the same nominal data rate.","Each of the User Transmitters to has a unique, known training sequence. The training sequences are roughly aligned as received at a Receiver Antenna , so that the training sequences mostly overlap. This type of synchronization is normally provided in communication systems through the use of a synchronization signal transmitted from a unit co-located with the MUD receiver . Alignment of the symbol transitions is not required.","In this particular embodiment, the MUD Receiver  an analog front end that includes the Antenna , a Signal Sampler , and a Downconverter , and the output (e.g., baseband signals or other lower frequency versions of the received signals) of the Downconverter  are fed to a Multiuser Detector  and a Parameter Estimator  which estimates the signature waveforms for each user.","K signals from the User Transmitters to are received by the Antenna  as the sum of the signals from Transmitters to . The Antenna  is a singly polarized antenna with a single connection to the Signal Sampler . This connection is made, for example, by a transmission line or Waveguide  that connects from one Antenna  to one Signal Sampler .","The Signal Sampler  may be embodied by an analog-to-digital converter (A\/D). The output of the Signal Sampler  is a Snapshot  of the sampled waveform (R) received from the Antenna  and this Snapshot  is composed of at least the number of samples in two frames of data. Alternately, the snapshot  may be composed of the number of samples in several frames of data. The Snapshot  is fed to a Downconverter , which is typically used in digital radios to translate the frequency of the received signal, R, to baseband. The output  of the Downconverter  is a complex baseband signal, r(n, ), which contains information from all K co-channel interfering signals in the same frequency and time space.","The baseband signal, r(n, ), is sent to the Parameter Estimator . The Multiuser Detector  jointly demodulates the co-channel interfering digital signals, using information provided by the Parameter Estimator . The Parameter Estimator  uses knowledge (stored in Memory ) of the unique training symbols transmitted by User Transmitters to , and contained in the composite received signal r(n, ) to solve for the signature waveforms of the K signals. The term \u201csignature waveform\u201d is herein used to denote the impulse response of the channel through which the signal passes. The term \u201cchannel\u201d is used herein to include not only the propagation channel and antenna effects, but also any filtering used in the transmitters to and Receiver  front end. In addition, in a direct sequence spread spectrum system, it would also include the spreading code.","The optimal Multiuser Detector  is one that minimizes the mean square error between the received signal and all possible combinations of each users transmitted data symbols transformed by their unique signature response. This optimal Multiuser Detector  can be expressed mathematically as follows:",{"@attributes":{"id":"p-0056","num":"0055"},"maths":{"@attributes":{"id":"MATH-US-00001","num":"00001"},"math":{"@attributes":{"overflow":"scroll"},"mtable":{"mtr":{"mtd":[{"mrow":{"msub":{"mover":{"mi":"d","mo":"^"},"mi":"ML"},"mo":"=","mrow":{"mi":"arg","mo":["\u2062","\u2062"],"mstyle":{"mspace":{"@attributes":{"width":"0.3em","height":"0.3ex"}}},"mrow":{"munder":{"mi":"min","mrow":{"mi":["d","\u03a9"],"mo":"\u2208"}},"mo":"\u2062","mrow":{"mo":["{","}"],"mrow":{"mrow":[{"mi":"E","mo":["\u2062","\u2062"],"mrow":[{"mo":["{","\uf606"]},{"mi":"r","mo":"\u2061","mrow":{"mo":["(",")"],"mrow":{"mi":["n","p"],"mo":","}}}]},{"munderover":{"mo":"\u2211","mrow":{"mi":["k","l"],"mo":"-"},"mi":"K"},"mo":"\u2062","mrow":{"mrow":[{"msub":{"mi":["d","k"]},"mo":"\u2061","mrow":{"mo":["(",")"],"mi":"n"}},{"msub":{"mi":["s","k"]},"mo":"\u2061","mrow":{"mo":["(",")"],"mrow":{"mi":["n","p"],"mo":","}}},{"msup":{"mo":"\uf605","mn":"2"},"mo":"}"}],"mo":["*","\u2062"]}}],"mo":"-"}}}}}},{"mrow":{"mo":["(",")"],"mn":"1"}}]}}}},"br":{}},"The purpose of the Parameter Estimator  is to supply the Multiuser Detector  with the information needed to solve Equation 1. The signature waveforms , which are unique to each user and each diversity port, describe the transformation of each user's transmitted symbols as they propagate from Transmitters to to Receiver . This includes pulse shape filtering on the Transmitters to and receiver filtering on the Receiver . Some multiuser detectors may also require information about the location of the training sequence in each frame of data for synchronization, and they may also require information about the noise power in the received signal to make better estimates of the transmitted symbols for each user. The Parameter Estimator  may be configured to calculate such parameters, and therefore, will operate with any Multiuser Detector  that requires these inputs.","In one embodiment, the Parameter Estimator  generates outputs that occur once per snapshot and contain parameter estimates for each frame of data in that snapshot. These parameter estimates include estimated signature waveforms , \u015d(n, p, m), for each diversity port (p), frame (m), and active user (k). The outputs also include an estimated noise power  {circumflex over (\u03c3)}(p), which is a scalar that represents the average power of the noise and a training sequence index , \u03c4, which is a pointer to the location of the training sequence in each frame of the snapshot . The outputs also include an active users vector  (u(k)) that contains the state of each user, k. State refers to the user being \u201cactively transmitting\u201d or \u201cnot transmitting\u201d.","The outputs of the Parameter Estimator  are sent to the MUD , which also receives the r(n, ) baseband signal , and produces separate streams of transmitter I symbols  to transmitter K symbols  for signal , signal , up to signal K which correspond to each of the K co-channel interfering signals sent by Transmitters to The system may further include additional post-MUD processing componentry (not shown) adapted to receive the outputs of the MUD , such as frequency mismatch compensation modules, block error decoding modules, demultiplexing or depacketizing modules, and routing modules.","Polarization Diversity MUD",{"@attributes":{"id":"p-0061","num":"0060"},"figref":"FIG. 2","b":["40","18","20","18","30","30","18","18"]},"The use of a dual polarized antenna will be of benefit, for example, in the following two cases: first, where the signal is transmitted in dual orthogonal polarizations, and second, where electromagnetic scattering causes significant cross polarized energy to be received at the Receive Antenna , even though only one polarization was transmitted.","Space and Polarization Diversity MUD",{"@attributes":{"id":"p-0064","num":"0063"},"figref":"FIG. 3","b":["18","20","30","18"]},"Frame Structure and Training Sequence Sliding Search Windows",{"@attributes":{"id":"p-0066","num":"0065"},"figref":"FIG. 4","sub":["m","m"]},"In one embodiment, the received composite training sequence, \u03b2(n,p), is defined as the complex baseband version of the sum of each users training sequence, b(n), convolved (indicated by an asterisk) with its respective signature waveform, s(n,p), plus additive white Gaussian noise, w(n,p). This relation is defined mathematically as follows:",{"@attributes":{"id":"p-0068","num":"0067"},"maths":{"@attributes":{"id":"MATH-US-00002","num":"00002"},"math":{"@attributes":{"overflow":"scroll"},"mtable":{"mtr":{"mtd":[{"mrow":{"mrow":[{"mi":"\u03b2","mo":"\u2061","mrow":{"mo":["(",")"],"mrow":{"mi":["n","p"],"mo":","}}},{"mrow":[{"munderover":{"mo":"\u2211","mrow":{"mi":"k","mo":"-","mn":"1"},"mi":"K"},"mo":"\u2062","mrow":{"mrow":[{"msub":{"mi":["b","k"]},"mo":"\u2061","mrow":{"mo":["(",")"],"mi":"n"}},{"msub":{"mi":["s","k"]},"mo":"\u2061","mrow":{"mo":["(",")"],"mrow":{"mi":["n","p"],"mo":","}}}],"mo":"*"}},{"mi":"w","mo":"\u2061","mrow":{"mo":["(",")"],"mrow":{"mi":["n","p"],"mo":","}}}],"mo":"+"}],"mo":"="}},{"mrow":{"mo":["(",")"],"mn":"2"}}]}}}}},{"@attributes":{"id":"p-0069","num":"0068"},"figref":["FIG. 4","FIG. 6"],"sub":["m","p","m","m","m"],"b":["90","56","90"]},"Parameter Estimation",{"@attributes":{"id":"p-0071","num":"0070"},"figref":"FIG. 5","b":["20","56","52","57","63","57","58","60","61","62"]},"The Training Sequence Locator  is used to estimate the location index, \u03c4, in each frame of received data, f(n,p), of the composite received training sequence, \u03b2(n,p), and the Noise Estimator  is used to calculate an estimate of the average noise power ({circumflex over (\u03c3)}(p)) in the received signal r(n,p) for each diversity port, p. The Signature Waveform Estimator  is used to estimate the characteristic signature waveforms, \u015d(n, p, m), unique to each user K, and each diversity port p, for each frame m, in the received snapshot.","The output of the Signature Waveform Estimator  is fed to an Active Users Tester  which detects which users signals are present in the given snapshot, and provides an output to a Transformation Matrix Rebuilder  which rebuilds the Transformation Matrix () that is used in the Signature Waveform Estimator . This matrix is rebuilt by using only the training sequences, b(n), of the active users as calculated by the Active Users Tester .","The output of the Transformation Matrix Rebuilder  is fed to a Transformation Matrix Selector  which selects the output from an Initial Transformation Matrix Builder  or the output from the Transformation Matrix Rebuilder  to send to the Signature Waveform Estimator . In this particular embodiment, the Transformation Matrix Selector  always selects for the initial estimate of the signature waveforms in the given snapshot, and always selects for all subsequent recalculations of the signature estimates for the same snapshot of data. This allows the Signature Waveform Estimator  to calculate a better estimate of the characteristic signature waveforms, \u015d(n, p, m), for only the active users as determined by the Active User Tester .","This process of performing the Signature Waveform Estimator , performing the Active User Tester , and running the Transformation Matrix Rebuilder , is referred to as the Signature Estimation Loop . The Signature Estimation Loop  can be repeated until the output of the Active User Tester  calculated on the previous iteration equals the output of the Active User Tester  on the current iteration. It is also possible to set the maximum number of Signature Estimators Loops  in the Parameter Estimation  component.","Note that with each iteration through this Loop , the number of signature waveforms at the output of the Signature Waveform Estimator  is equal to the number of active users calculated on the previous iteration. Further note that on the first iteration, the number of signature estimates is equal to the total number of possible users, K. Once the final signature estimates of the active users are calculated, the resulting waveforms are passed as outputs of the Parameter Estimator  along with the user states vector, u(k) that reports which users are active in the current snapshot.","The Initial Transformation Matrix Builder  receives known training sequence data, b(n), for each user, which may be prestored, for example, in a Memory  of the Multiuser Detection Receiver . Each user's training sequence data is used to build the Initial Transformation Matrix, , which is fed to the Transformation Matrix Selector .","The Noise Estimator  estimates the noise power in the incoming signal, r(n,p) for all p=1,2, . . . P, diversity ports and feeds the information to the Active User Tester  and the MUD . This estimation is typically done once per snapshot wherein the snapshot is at least the number of samples in two frames, but need not be done as often if the noise power is changing slowly or not at all. Note that the accuracy of the Noise Estimator  improves as the number of composite training sequence estimates, {circumflex over (\u03b2)}(n, p), increases. To increase the number of composite training sequence estimates, the number of frames, f(n,p), in the received complex baseband signal, r(n,p), must increase. This results in an increased snapshot size. Alternatively, the Training Sequence Selector  must store the composite training sequence estimates, {circumflex over (\u03b2)}(n, p), for multiple snapshots of received data, and calculate the estimated noise power using the total number of stored composite training sequence estimates {circumflex over (\u03b2)}(n, p).","The Training Sequence Locator  determines the position of the training sequence in each frame, f(n,p) of the received snapshot vector, r(n,p) and feeds this information in the form of a sample index, \u03c4, referred to as the Training Sequence Location Index , to the MUD . In addition, the position of the training sequence in the received snapshot is fed to the Noise Estimator  and to the Signature Waveform Estimator  where it is used to determine which section of each frame, f(n,p), in r(n,p) to process in order to determine the average noise power estimate, {circumflex over (\u03c3)}(p)and signature estimates \u015d(n, p, m), respectively. The Signature Waveform Estimator  estimates the signature waveforms \u015d(n, p, m) in each frame, m, of each K individual co-channel interfering signal in the composite received input signal, r(n,p), for each diversity port p, and outputs this information to the Active User Tester  and MUD .",{"@attributes":{"id":"p-0080","num":"0079"},"figref":"FIG. 6","b":"56","sub":["m","m","m"]},"The Training Sequence Locator  finds the location of the training sequence in each frame of received data. To do this, a sliding search window vector, l(\u03c4,p), that is L samples long (the same length as the received composite training sequence) is applied simultaneously through each frame of received data, and the correlation between each combination of windowed frames is computed and then averaged in a Detection Statistic Calculator . The result is a detection statistic, d(\u03c4), which is exactly the length of a frame of received data (F samples long). Because the payload data is uncorrelated from frame to frame, the detection statistic will have a very low value when the sliding search windows are over the payload data in each frame. On the other hand, the composite training sequence, \u03b2(n,p), is highly correlated from frame to frame. Therefore, the detection statistic will be very high when the sliding search windows are over the composite training sequence in each frame. Thus, the location \u03c4, of the peak in the detection statistic, d(\u03c4), will be the location of the training sequence in each frame sequence, f(n,p).","The inputs to the Training Sequence Locator  component are complex baseband received signals, r(n,p), from each diversity port, (p=1,2, . . . P). An estimate of the training sequence location index, \u03c4, is calculated separately for each diversity port signal, r(n,p) by the Detection Statistic Calculator . The first step in estimating the training sequence location index, \u03c4, is to provide the received signal, r(n,p), to the Detection Statistic Calculator , for calculating the detection statistic, d(\u03c4), using that received signal. As previously stated, each element of this detection statistic is generated by calculating the correlation coefficients, \u03c1(\u03c4,p), for each combination of sliding search windows for a given training sequence sample index, \u03c4. Once each combination of correlation coefficients is calculated, they are averaged and output as the value of the detection statistic, d(\u03c4), for the specified value of \u03c4. The step by step calculations needed to perform this process in accordance with one embodiment of the present invention are as follows:","Step 1. Define the sliding search window, l(\u03c4,p) for each frame of received data in the given signal, r(n,p), for the given search window sample index, \u03c4.",{"@attributes":{"id":"p-0084","num":"0083"},"maths":{"@attributes":{"id":"MATH-US-00003","num":"00003"},"math":{"@attributes":{"overflow":"scroll"},"mtable":{"mtr":{"mtd":[{"mrow":{"mrow":[{"mrow":[{"msub":{"munder":{"mi":["l","_"]},"mi":"m"},"mo":"\u2061","mrow":{"mo":["(",")"],"mrow":{"mi":["\u03c4","p"],"mo":","}}},{"mo":["[","]"],"mtable":{"mtr":[{"mtd":{"mrow":{"mi":"r","mo":"\u2061","mrow":{"mo":["(",")"],"mrow":{"mrow":{"mi":"\u03c4","mo":"+","mrow":{"mrow":{"mo":["(",")"],"mrow":{"mi":"m","mo":"-","mn":"1"}},"mo":"\u00b7","mi":"F"}},"mo":",","mi":"p"}}}}},{"mtd":{"mrow":{"mi":"r","mo":"\u2061","mrow":{"mo":["(",")"],"mrow":{"mrow":{"mi":"\u03c4","mo":["+","+"],"mrow":{"mrow":{"mo":["(",")"],"mrow":{"mi":"m","mo":"-","mn":"1"}},"mo":"\u00b7","mi":"F"},"mn":"1"},"mo":",","mi":"p"}}}}},{"mtd":{"mi":"\u22ee"}},{"mtd":{"mrow":{"mi":"r","mo":"\u2061","mrow":{"mo":["(",")"],"mrow":{"mrow":{"mi":"\u03c4","mo":["+","+"],"mrow":[{"mrow":{"mo":["(",")"],"mrow":{"mi":"m","mo":"-","mn":"1"}},"mo":"\u00b7","mi":"F"},{"mo":["(",")"],"mrow":{"mi":"L","mo":"-","mn":"1"}}]},"mo":",","mi":"p"}}}}}]}}],"mo":"="},{"mrow":{"mo":"\u2200","mi":"m"},"mo":"=","mn":"1"},{"mn":"2","mo":"\u2062","mi":"\u2026"}],"mo":[",",",","\u2062",","],"mstyle":{"mspace":{"@attributes":{"width":"0.6em","height":"0.6ex"}}},"mi":"M"}},{"mrow":{"mo":["(",")"],"mn":"3"}}]}}}}},"Step 2. Calculate the energy, e(\u03c4,p), in each sliding search window, l(\u03c4,p):\n\n(\u03c4,)=(\u03c4,)(\u03c4,), \u22001,2\u2003\u2003(4)\n","Step 3. Calculate the correlation coefficient, \u03c1(\u03c4,p), for each combination of sliding search windows:",{"@attributes":{"id":"p-0087","num":"0086"},"maths":{"@attributes":{"id":"MATH-US-00004","num":"00004"},"math":{"@attributes":{"overflow":"scroll"},"mtable":{"mtr":{"mtd":[{"mrow":{"mrow":[{"mrow":{"msub":{"mi":"\u03c1","mrow":{"mi":["i","j"],"mo":","}},"mo":"\u2061","mrow":{"mo":["(",")"],"mrow":{"mi":["\u03c4","p"],"mo":","}}},"mo":"=","mfrac":{"mrow":{"mo":["\uf606","\u2062","\uf605"],"msub":{"munder":{"mi":["l","_"]},"mi":"i"},"mrow":{"msup":{"mrow":{"mo":["(",")"],"mrow":{"mi":["\u03c4","p"],"mo":","}},"mi":"H"},"mo":"\u00b7","mrow":{"msub":{"munder":{"mi":["l","_"]},"mi":"j"},"mo":"\u2061","mrow":{"mo":["(",")"],"mrow":{"mi":["\u03c4","p"],"mo":","}}}}},"msqrt":{"mrow":{"mrow":[{"msub":{"mi":["e","i"]},"mo":"\u2061","mrow":{"mo":["(",")"],"mrow":{"mi":["\u03c4","p"],"mo":","}}},{"msub":{"mi":["e","j"]},"mo":"\u2061","mrow":{"mo":["(",")"],"mrow":{"mi":["\u03c4","p"],"mo":","}}}],"mo":"\u00b7"}}}},{"mrow":[{"mo":"\u2200","mrow":{"mo":["(",")"],"mrow":{"mi":["i","j"],"mo":","}}},{"mo":["{","}"],"mtable":{"mtr":[{"mtd":{"mrow":{"mrow":[{"mo":["(",")"],"mrow":{"mn":["1","2"],"mo":","}},{"mo":["(",")"],"mrow":{"mn":["1","3"],"mo":","}},{"mi":"\u2026","mo":["\u2062","\u2062"],"mstyle":{"mspace":{"@attributes":{"width":"0.6em","height":"0.6ex"}}},"mrow":{"mo":["(",")"],"mrow":{"mn":"1","mo":",","mi":"M"}}}],"mo":[",",",",","]}}},{"mtd":{"mrow":{"mrow":[{"mo":["(",")"],"mrow":{"mn":["2","3"],"mo":","}},{"mo":["(",")"],"mrow":{"mn":["2","4"],"mo":","}},{"mi":"\u2026","mo":["\u2062","\u2062"],"mstyle":{"mspace":{"@attributes":{"width":"0.6em","height":"0.6ex"}}},"mrow":{"mo":["(",")"],"mrow":{"mn":"2","mo":",","mi":"M"}}}],"mo":[",",",",","]}}},{"mtd":{"mrow":{"mi":"\u2026","mo":["\u2062",","],"mstyle":{"mspace":{"@attributes":{"width":"0.6em","height":"0.6ex"}}},"mrow":{"mo":["(",")"],"mrow":{"mrow":{"mi":"M","mo":"-","mn":"1"},"mo":",","mi":"M"}}}}}]}}],"mo":"="}],"mo":[",","\u2062"],"mstyle":{"mtext":{}}}},{"mrow":{"mo":["(",")"],"mn":"5"}}]}}}}},"Step 4. Calculate the detection statistic, d(\u03c4), for the given search window sample index, \u03c4, for diversity port, p, by averaging the corresponding correlation coefficients:",{"@attributes":{"id":"p-0089","num":"0088"},"maths":{"@attributes":{"id":"MATH-US-00005","num":"00005"},"math":{"@attributes":{"overflow":"scroll"},"mtable":{"mtr":{"mtd":[{"mrow":{"mrow":{"msub":{"mi":["d","p"]},"mo":"\u2061","mrow":{"mo":["(",")"],"mi":"\u03c4"}},"mo":"=","mfrac":{"mrow":[{"munderover":{"mo":"\u2211","mrow":[{"mi":"i","mo":"=","mn":"1"},{"mi":"M","mo":"-","mn":"1"}]},"mo":"\u2062","mrow":{"munderover":{"mo":"\u2211","mrow":{"mi":"j","mo":"=","mrow":{"mi":"i","mo":"+","mn":"1"}},"mi":"M"},"mo":"\u2062","mrow":{"msub":{"mi":"\u03c1","mrow":{"mi":["i","j"],"mo":","}},"mo":"\u2061","mrow":{"mo":["(",")"],"mrow":{"mi":["\u03c4","p"],"mo":","}}}}},{"munderover":{"mo":"\u2211","mrow":[{"mi":"i","mo":"=","mn":"1"},{"mi":"M","mo":"-","mn":"1"}]},"mo":"\u2062","mi":"i"}]}}},{"mrow":{"mo":["(",")"],"mn":"6"}}]}}}}},"This process (steps 1\u20134) is repeated for each search window sample index, {\u03c4=1,2, . . . ,F} and for each diversity port {p=1,2, . . . P}.","Still referring to , once the detection statistic, d(\u03c4), for each diversity ports received signal, r(n,p), is calculated, it is fed to a Training Index Finder , where the estimated location, \u03c4, of the training sequence for each diversity port signal is calculated by finding the sliding search window index, \u03c4, that maximizes the detection statistic. The Training Index Finder , calculates the following equation for each detection statistic, d(\u03c4):",{"@attributes":{"id":"p-0092","num":"0091"},"maths":{"@attributes":{"id":"MATH-US-00006","num":"00006"},"math":{"@attributes":{"overflow":"scroll"},"mtable":{"mtr":{"mtd":[{"mrow":{"mrow":[{"msub":{"mi":["\u03c4","p"]},"mo":"=","mrow":{"mi":"arg","mo":"\u2062","mrow":{"mo":["{","}"],"mrow":{"munder":{"mi":"max","mrow":{"mi":"\u03c4","mo":"\u2208","mrow":{"mo":["{","}"],"mrow":{"mn":["1","2"],"mo":[",",","],"mrow":{"mi":["\u2026","F"],"mo":"\u2062"}}}}},"mo":"\u2062","mrow":{"mo":["(",")"],"mrow":{"msub":{"mi":["d","p"]},"mo":"\u2061","mrow":{"mo":["(",")"],"mi":"\u03c4"}}}}}}},{"mrow":{"mo":"\u2200","mi":"p"},"mo":"=","mn":"1"}],"mo":[",",",",",","\u2062",","],"mn":"2","mi":["\u2026","P"],"mstyle":{"mspace":{"@attributes":{"width":"0.6em","height":"0.6ex"}}}}},{"mrow":{"mo":["(",")"],"mn":"7"}}]}}}}},"Next, a Confidence Metric Calculator , calculates a confidence metric from each detection statistic. This is done by calculating the peak to rms value of each detection statistic. This process can be implemented, for instance, by performing the following calculation for each detection statistic, d(\u03c4).",{"@attributes":{"id":"p-0094","num":"0093"},"maths":{"@attributes":{"id":"MATH-US-00007","num":"00007"},"math":{"@attributes":{"overflow":"scroll"},"mtable":{"mtr":{"mtd":[{"mrow":{"mrow":[{"msub":{"mi":["c","p"]},"mo":"=","mfrac":{"mrow":[{"mi":"max","mo":"\u2061","mrow":{"mo":["(",")"],"mrow":{"msub":{"mi":["d","p"]},"mo":"\u2061","mrow":{"mo":["(",")"],"mi":"\u03c4"}}}},{"mi":"rms","mo":"\u2061","mrow":{"mo":["(",")"],"mrow":{"msub":{"mi":["d","p"]},"mo":"\u2061","mrow":{"mo":["(",")"],"mi":"\u03c4"}}}}]}},{"mrow":{"mo":"\u2200","mi":"p"},"mo":"=","mn":"1"}],"mo":[",",",",",","\u2062",","],"mn":"2","mi":["\u2026","P"],"mstyle":{"mspace":{"@attributes":{"width":"0.6em","height":"0.6ex"}}}}},{"mrow":{"mo":["(",")"],"mn":"8"}}]}}}}},"As previously stated, this entire detection process is applied to the received signal, r(n,p), of each diversity port, p, separately. Once the training sequence location, \u03c4, has been estimated and the confidence metric, c, has been computed for each signal, a decision test is applied to determine which estimate to use. Comparator  performs this decision test by comparing the values of each confidence metric and setting the output training sequence location, \u03c4, equal to the estimated training sequence, \u03c4, that has the highest confidence metric, c. This process is described mathematically in the following equation:",{"@attributes":{"id":"p-0096","num":"0095"},"maths":{"@attributes":{"id":"MATH-US-00008","num":"00008"},"math":{"@attributes":{"overflow":"scroll"},"mtable":{"mtr":{"mtd":[{"mrow":{"msub":{"mi":["\u03c4","TS"]},"mo":"=","mrow":{"mrow":[{"msub":{"mi":["\u03c4","p"]},"mo":"\u220b","mi":"p"},{"mi":"arg","mo":"\u2062","mrow":{"mo":["{","}"],"mrow":{"munder":{"mi":"max","mrow":{"mi":"p","mo":"\u2208","mrow":{"mo":["{","}"],"mrow":{"mn":["1","2"],"mo":[",",",",","],"mi":["\u2026","P"]}}}},"mo":"\u2062","mrow":{"mo":["(",")"],"msub":{"mi":["c","p"]}}}}}],"mo":"="}}},{"mrow":{"mo":["(",")"],"mn":"9"}}]}}}}},{"@attributes":{"id":"p-0097","num":"0096"},"figref":"FIG. 7","b":["52","20","14"]},"Because each diversity port p contains its own stage of LNAs, the noise power in the received signal, r(n,p), may be slightly different from port to port. Therefore, it is important to obtain a separate estimate of the noise power for each diversity port p. Because the noise is additive, the section in each frame of received data, r(n,p), which contains the composite training sequence, \u03b2(n,p), can be modeled as the composite training sequence plus additive white noise, w(n,p). This noise is also considered to be statistically independent of the received data. As previously explained, the Training Sequence Locator  component determines the location index in each frame f(n,p) of received data that contains the composite training sequences. This allows the Noise Estimator  to extract the section of each frame, which contains an estimate of the received composite training sequence {circumflex over (\u03b2)}(n, p) .","Training Sequence Selector  receives the complex baseband signal r(n,p) for diversity port p into a routine that outputs the sections of that signal corresponding to the received training sequence for each frame of received data. Training Sequence Selector  also receives the training sequence index, \u03c4 and the number of frames of data, M, captured in the received signal r(n,p) for use in selecting such outputs. M is calculated based on the size of the received signal r(n,p) and the known number of samples per frame, F.","The Training Sequence Selector  outputs, {circumflex over (\u03b2)}(n, p) for (m=1,2, . . . M), which are fed to an Averager  that calculates the average value of each of the vectors, {circumflex over (\u03b2)}(n, p) in order to get a good representation of the composite training sequences {circumflex over (\u03b2)}(n, p) . In this particular embodiment, the Averager  comprises a summing routine  and a 1\/M multiplier .","The estimated signal, {circumflex over (\u03b2)}(n, p), is subtracted from each vector, {circumflex over (\u03b2)}(n, p), in summers , , . . . to obtain an estimated noise signal, \u0175(n, p), contained in each vector, {circumflex over (\u03b2)}(n, p). Then each noise signal, \u0175(n, p),\u0175(n, p), . . . \u0175(n, p), is fed to a variance calculator . . . where the variance of each noise signal is calculated to obtain an estimate of the average noise power, {circumflex over (\u03c3)}(p), in each frame, M. The average noise power, {circumflex over (\u03c3)}(p), in each frame is fed to an Averager  which determines an estimate of the average noise power, {circumflex over (\u03c3)}(p), in the received signal r(n,p) for diversity port p. If there is more than one diversity port, the above process is repeated to obtain a noise power estimate for the received signal, r(n,p) received by each diversity port (p=1,2, . . . ,P).","An accurate estimate of the received composite training sequence, {circumflex over (\u03b2)}(n, p), is used to obtain a noise power estimate for the received signal, r(n,p), from each diversity port, p, separately. The first step in estimating the noise power in the received signal, r(n,p), for diversity port, p, is for the Training Sequence Selector  to extract the estimated composite training sequences, {circumflex over (\u03b2)}(n, p), in each frame of received data based on the training sequence location index (\u03c4), the number of samples per frame (F), the number of samples in each received training sequence to process (N) and the offset into each received training sequence (\u03b4) to use. Note that both Nand \u03b4are parameters that are stored in the memory of the Training Sequence Selector , and therefore can be modified to select any section of the received composite training sequences. These values would typically be set so that the central portion of each composite received training sequence is extracted from the received signal, r(n,p). The Training Sequence Selector  is described mathematically as follows:",{"@attributes":{"id":"p-0103","num":"0102"},"maths":{"@attributes":{"id":"MATH-US-00009","num":"00009"},"math":{"@attributes":{"overflow":"scroll"},"mtable":{"mtr":{"mtd":[{"mrow":{"mrow":{"mrow":[{"msub":{"mover":{"mi":"\u03b2","mo":"^"},"mi":"m"},"mo":"\u2061","mrow":{"mo":["(",")"],"mrow":{"mi":["n","p"],"mo":","}}},{"mi":"r","mo":"\u2061","mrow":{"mo":["(",")"],"mrow":{"mrow":{"mrow":[{"mo":["(",")"],"mrow":{"mi":"n","mo":"-","mn":"1"}},{"mrow":{"mo":["(",")"],"mrow":{"mi":"m","mo":"-","mn":"1"}},"mo":"\u00b7","mi":"F"}],"mo":["+","+","+"],"msub":[{"mi":["\u03c4","TS"]},{"mi":["\u03b4","w"]}]},"mo":",","mi":"p"}}}],"mo":"="},"mo":[",","\u2062"],"mstyle":{"mtext":{}},"mtable":{"mtr":[{"mtd":{"mrow":{"mi":{},"mo":"\u2062","mrow":{"mrow":{"mrow":{"mo":"\u2200","mi":"n"},"mo":"=","mn":"1"},"mo":[",",",","\u2062",","],"mn":"2","mi":"\u2026","mstyle":{"mspace":{"@attributes":{"width":"0.6em","height":"0.6ex"}}},"msub":{"mi":["N","w"]}}}}},{"mtd":{"mrow":{"mi":{},"mo":"\u2062","mrow":{"mrow":{"mrow":{"mo":"\u2200","mi":"m"},"mo":"=","mn":"1"},"mo":[",",",","\u2062",","],"mn":"2","mi":["\u2026","M"],"mstyle":{"mspace":{"@attributes":{"width":"0.6em","height":"0.6ex"}}}}}}}]}}},{"mrow":{"mo":["(",")"],"mn":"10"}}]}}}}},"Once the estimated received training sequences, {circumflex over (\u03b2)}(n, p), for each frame, m, of received data have been extracted from the received signal, r(n,p), they are all averaged with each other by the Averager  in order to minimize the affects of the noise vector, w(n,p), added to each estimate of the received training sequence. This produces a more accurate estimate of the actual received training sequence, {circumflex over (\u03b2)}(n, p). This process is expressed mathematically as follows:",{"@attributes":{"id":"p-0105","num":"0104"},"maths":{"@attributes":{"id":"MATH-US-00010","num":"00010"},"math":{"@attributes":{"overflow":"scroll"},"mtable":{"mtr":{"mtd":[{"mrow":{"mrow":[{"mrow":[{"msub":{"mover":{"mi":"\u03b2","mo":"^"},"mi":"m"},"mo":"\u2061","mrow":{"mo":["(",")"],"mrow":{"mi":["n","p"],"mo":","}}},{"mfrac":{"mn":"1","mi":"M"},"mo":"\u2062","mrow":{"munderover":{"mo":"\u2211","mrow":{"mi":"m","mo":"=","mn":"1"},"mi":"M"},"mo":"\u2062","mrow":{"msub":{"mover":{"mi":"\u03b2","mo":"^"},"mi":"m"},"mo":"\u2061","mrow":{"mo":["(",")"],"mrow":{"mi":["n","p"],"mo":","}}}}}],"mo":"="},{"mrow":{"mo":"\u2200","mi":"n"},"mo":"=","mn":"1"}],"mo":[",",",",",","\u2062",","],"mn":"2","mi":"\u2026","mstyle":{"mspace":{"@attributes":{"width":"0.6em","height":"0.6ex"}}},"msub":{"mi":["N","w"]}}},{"mrow":{"mo":["(",")"],"mn":"11"}}]}}}}},"Once this is done, the estimated received training sequence, {circumflex over (\u03b2)}(n, p), is subtracted from each vector, {circumflex over (\u03b2)}(n, p), in order to obtain an estimate of the noise signal, \u0175(n, p) contained in each.","Next, the variance of each noise signal is calculated by Variance Calculators , to to obtain an estimate of the average noise power, {circumflex over (\u03c3)}(p), in each frame. This calculation is expressed as follows:",{"@attributes":{"id":"p-0108","num":"0107"},"maths":{"@attributes":{"id":"MATH-US-00011","num":"00011"},"math":{"@attributes":{"overflow":"scroll"},"mtable":{"mtr":{"mtd":[{"mrow":{"mrow":[{"msup":{"mrow":{"msub":{"mover":{"mi":"\u03c3","mo":"^"},"mi":"m"},"mo":"\u2061","mrow":{"mo":["(",")"],"mi":"p"}},"mn":"2"},"mo":"=","mrow":{"mfrac":{"mn":"1","msub":{"mi":["N","w"]}},"mo":"\u2062","mrow":{"munderover":{"mo":"\u2211","mrow":{"mi":"n","mo":"=","mn":"1"},"msub":{"mi":["N","w"]}},"mo":["\u2062","\u2062"],"mstyle":{"mspace":{"@attributes":{"width":"0.3em","height":"0.3ex"}}},"msup":{"mrow":{"mo":["\uf605","\uf606"],"mrow":{"msub":{"mover":{"mi":"w","mo":"^"},"mi":"m"},"mo":"\u2061","mrow":{"mo":["(",")"],"mrow":{"mi":["n","p"],"mo":","}}}},"mn":"2"}}}},{"mrow":{"mo":"\u2200","mi":"m"},"mo":"=","mn":"1"}],"mo":[",",",",",","\u2062",","],"mn":"2","mi":["\u2026","M"],"mstyle":{"mspace":{"@attributes":{"width":"0.6em","height":"0.6ex"}}}}},{"mrow":{"mo":["(",")"],"mn":"12"}}]}}}}},"Each of these noise power estimates, {circumflex over (\u03c3)}(p), are then averaged in Averager  to obtain an estimate of the average noise power, {circumflex over (\u03c3)}(p)in the received signal, r(n,p). This averaging is performed mathematically as follows:",{"@attributes":{"id":"p-0110","num":"0109"},"maths":{"@attributes":{"id":"MATH-US-00012","num":"00012"},"math":{"@attributes":{"overflow":"scroll"},"mtable":{"mtr":{"mtd":[{"mrow":{"msup":{"mrow":{"mover":{"mi":"\u03c3","mo":"^"},"mo":"\u2061","mrow":{"mo":["(",")"],"mi":"p"}},"mn":"2"},"mo":"=","mrow":{"mfrac":{"mn":"1","mi":"M"},"mo":"\u2062","mrow":{"munderover":{"mo":"\u2211","mrow":{"mi":"m","mo":"=","mn":"1"},"mi":"M"},"mo":["\u2062","\u2062"],"mstyle":{"mspace":{"@attributes":{"width":"0.3em","height":"0.3ex"}}},"msup":{"mrow":{"msub":{"mover":{"mi":"\u03c3","mo":"^"},"mi":"m"},"mo":"\u2061","mrow":{"mo":["(",")"],"mi":"p"}},"mn":"2"}}}}},{"mrow":{"mo":["(",")"],"mn":"13"}}]}}}}},"This entire process is repeated for each diversity port, p, in order to obtain a noise power estimate for each received signal, r(n,p).",{"@attributes":{"id":"p-0112","num":"0111"},"figref":"FIG. 8","b":["58","64","66","58"],"sub":["m","m","k"]},{"@attributes":{"id":"p-0113","num":"0112"},"maths":{"@attributes":{"id":"MATH-US-00013","num":"00013"},"math":{"@attributes":{"overflow":"scroll"},"mtable":{"mtr":{"mtd":[{"mrow":{"mrow":[{"mi":"r","mo":"\u2061","mrow":{"mo":["(",")"],"mrow":{"mi":["n","p"],"mo":","}}},{"mrow":[{"munderover":{"mo":"\u2211","mrow":{"mi":"k","mo":"=","mn":"1"},"mi":"K"},"mo":["\u2062","\u2062"],"mstyle":{"mspace":{"@attributes":{"width":"0.3em","height":"0.3ex"}}},"mrow":{"mrow":[{"msub":{"mi":["d","k"]},"mo":"\u2061","mrow":{"mo":["(",")"],"mi":"n"}},{"msub":{"mi":["s","k"]},"mo":"\u2061","mrow":{"mo":["(",")"],"mrow":{"msub":{"mi":["nT","n"]},"mo":",","mi":"p"}}}],"mo":"*"}},{"mi":"w","mo":"\u2061","mrow":{"mo":["(",")"],"mrow":{"mi":["n","p"],"mo":","}}}],"mo":"+"}],"mo":"="}},{"mrow":{"mo":["(",")"],"mn":"14"}}]}}}}},"This equation shows that the complex baseband signal received from diversity port (p) is the sum of each users transmission signal, d(n), convolved (indicated by the asterisk) with a corresponding characteristic signature waveform, s(nT,p), sampled at Tseconds per sample, that is unique to user, k, and diversity port, p, plus additive white noise, w(n,p). This expression can be rewritten in matrix form as follows:",{"@attributes":{"id":"p-0115","num":"0114"},"maths":{"@attributes":{"id":"MATH-US-00014","num":"00014"},"math":{"@attributes":{"overflow":"scroll"},"mtable":{"mtr":[{"mtd":[{"mrow":{"mrow":[{"mrow":[{"mo":"\u2234","mover":{"mrow":[{"munder":{"mi":["r","_"]},"mo":"\u2061","mrow":{"mo":["(",")"],"mi":"p"}},{"mo":["(",")"],"mrow":{"mi":"N","mo":"\u00d7","mn":"1"}}]}},{"mrow":{"munderover":{"mi":"D","mo":"=","mrow":{"mo":["(",")"],"mrow":{"mi":"N","mo":"\u00d7","msub":{"mi":["KN","s"]}}}},"mo":"\u00b7","mover":{"mrow":[{"munder":{"mi":["s","_"]},"mo":"\u2061","mrow":{"mo":["(",")"],"mi":"p"}},{"mo":["(",")"],"mrow":{"msub":{"mi":["KN","s"]},"mo":"\u00d7","mn":"1"}}]}},"mo":"+","mover":{"mrow":[{"munder":{"mi":["w","_"]},"mo":"\u2061","mrow":{"mo":["(",")"],"mi":"p"}},{"mo":["(",")"],"mrow":{"mi":"N","mo":"\u00d7","mn":"1"}}]}}],"mo":"="},{"mi":"where","mo":":"}],"mo":["\u2062","\u2062"],"mstyle":{"mtext":{}}}},{"mrow":{"mo":["(",")"],"mn":"15"}}]},{"mtd":[{"mrow":{"mrow":{"mrow":[{"munderover":{"msub":{"mi":["D","k"]},"mo":"=","mrow":{"mo":["(",")"],"mrow":{"mi":"N","mo":"\u00d7","msub":{"mi":["N","s"]}}}},"mo":"=","mrow":{"mo":["[","]"],"mtable":{"mtr":[{"mtd":[{"mrow":{"msub":{"mi":["d","k"]},"mo":"\u2061","mrow":{"mo":["(",")"],"mn":"1"}}},{"mn":"0"},{"mi":"\u22ef"},{"mn":"0"}]},{"mtd":[{"mrow":{"msub":{"mi":["d","k"]},"mo":"\u2061","mrow":{"mo":["(",")"],"mn":"2"}}},{"mrow":{"msub":{"mi":["d","k"]},"mo":"\u2061","mrow":{"mo":["(",")"],"mn":"1"}}},{"mi":"\u22f0"},{"mi":"\u22ee"}]},{"mtd":[{"mi":"\u22ee"},{"mrow":{"msub":{"mi":["d","k"]},"mo":"\u2061","mrow":{"mo":["(",")"],"mn":"2"}}},{"mi":"\u22f0"},{"mn":"0"}]},{"mtd":[{"mi":"\u22ee"},{"mi":"\u22ee"},{"mi":"\u22f0"},{"mrow":{"msub":{"mi":["d","k"]},"mo":"\u2061","mrow":{"mo":["(",")"],"mn":"1"}}}]},{"mtd":[{"mrow":{"msub":{"mi":["d","k"]},"mo":"\u2061","mrow":{"mo":["(",")"],"msub":{"mi":["N","d"]}}}},{"mi":"\u22ee"},{"mi":"\u22f0"},{"mrow":{"msub":{"mi":["d","k"]},"mo":"\u2061","mrow":{"mo":["(",")"],"mn":"2"}}}]},{"mtd":[{"mn":"0"},{"mrow":{"msub":{"mi":["d","k"]},"mo":"\u2061","mrow":{"mo":["(",")"],"msub":{"mi":["N","d"]}}}},{"mi":"\u22f0"},{"mi":"\u22ee"}]},{"mtd":[{"mi":"\u22ee"},{"mi":"\u22f0"},{"mi":"\u22f0"},{"mi":"\u22ee"}]},{"mtd":[{"mn":"0"},{"mi":"\u22ef"},{"mn":"0"},{"mrow":{"msub":{"mi":["d","k"]},"mo":"\u2061","mrow":{"mo":["(",")"],"msub":{"mi":["N","d"]}}}}]}]}}},{"mover":{"mrow":[{"msub":{"munder":{"mi":["s","_"]},"mi":"k"},"mo":"\u2061","mrow":{"mo":["(",")"],"mi":"p"}},{"mo":["(",")"],"mrow":{"msub":{"mi":["N","s"]},"mo":"\u00d7","mn":"1"}}]},"mo":"=","mrow":{"mo":["[","]"],"mtable":{"mtr":[{"mtd":{"mrow":{"msub":{"mi":["s","k"]},"mo":"\u2061","mrow":{"mo":["(",")"],"mrow":{"mn":"1","mo":",","mi":"p"}}}}},{"mtd":{"mrow":{"msub":{"mi":["s","k"]},"mo":"\u2061","mrow":{"mo":["(",")"],"mrow":{"mn":"2","mo":",","mi":"p"}}}}},{"mtd":{"mi":"\u22ee"}},{"mtd":{"mrow":{"msub":{"mi":["s","k"]},"mo":"\u2061","mrow":{"mo":["(",")"],"mrow":{"msub":{"mi":["N","s"]},"mo":",","mi":"p"}}}}}]}}}],"mo":";"},"mo":"\u2062","mstyle":{"mtext":{}}}},{"mrow":{"mo":["(",")"],"mn":"16"}}]},{"mtd":[{"mrow":{"mrow":[{"munderover":{"mi":"D","mo":"=","mrow":{"mo":["(",")"],"mrow":{"mi":"N","mo":"\u00d7","msub":{"mi":["KN","s"]}}}},"mo":"=","mrow":{"mo":["[","]"],"mrow":{"munder":[{"msub":{"mi":"D","mn":"1"},"mo":"="},{"msub":{"mi":"D","mn":"2"},"mo":"="}],"mo":[",",","],"mrow":{"mi":"\u2026","mo":["\u2062","\u2062"],"mstyle":{"mspace":{"@attributes":{"width":"0.6em","height":"0.6ex"}}},"munder":{"msub":{"mi":["D","K"]},"mo":"="}}}}},{"mover":{"mrow":[{"munder":{"mi":["s","_"]},"mo":"\u2061","mrow":{"mo":["(",")"],"mi":"p"}},{"mo":["(",")"],"mrow":{"msub":{"mi":["KN","s"]},"mo":"\u00d7","mn":"1"}}]},"mo":"=","msup":{"mrow":{"mo":["[","]"],"mrow":{"msup":[{"mrow":{"msub":{"munder":{"mi":["s","_"]},"mn":"1"},"mo":"\u2061","mrow":{"mo":["(",")"],"mi":"p"}},"mi":"T"},{"mrow":{"msub":{"munder":{"mi":["s","_"]},"mn":"2"},"mo":"\u2061","mrow":{"mo":["(",")"],"mi":"p"}},"mi":"T"},{"mrow":{"msub":{"munder":{"mi":["s","_"]},"mi":"K"},"mo":"\u2061","mrow":{"mo":["(",")"],"mi":"p"}},"mi":"T"}],"mo":["\u2062","\u2062","\u2062","\u2062","\u2062","\u2062"],"mstyle":[{"mspace":{"@attributes":{"width":"0.8em","height":"0.8ex"}}},{"mspace":{"@attributes":{"width":"0.8em","height":"0.8ex"}}},{"mspace":{"@attributes":{"width":"1.1em","height":"1.1ex"}}}],"mi":"\u2026"}},"mi":"T"}}],"mo":";"}},{"mrow":{"mo":["(",")"],"mn":"17"}}]},{"mtd":[{"mrow":{"mrow":{"mrow":[{"mover":{"mrow":[{"munder":{"mi":["r","_"]},"mo":"\u2061","mrow":{"mo":["(",")"],"mi":"p"}},{"mo":["(",")"],"mrow":{"mi":"N","mo":"\u00d7","mn":"1"}}]},"mo":"=","msup":{"mrow":{"mo":["[","]"],"mrow":{"mrow":[{"mi":"r","mo":"\u2061","mrow":{"mo":["(",")"],"mrow":{"mn":"1","mo":",","mi":"p"}}},{"mi":"r","mo":"\u2061","mrow":{"mo":["(",")"],"mrow":{"mn":"2","mo":",","mi":"p"}}},{"mi":"r","mo":"\u2061","mrow":{"mo":["(",")"],"mrow":{"mi":["N","p"],"mo":","}}}],"mo":["\u2062","\u2062","\u2062","\u2062","\u2062","\u2062"],"mstyle":[{"mspace":{"@attributes":{"width":"0.8em","height":"0.8ex"}}},{"mspace":{"@attributes":{"width":"0.8em","height":"0.8ex"}}},{"mspace":{"@attributes":{"width":"0.6em","height":"0.6ex"}}}],"mi":"\u2026"}},"mi":"T"}},{"mover":{"mrow":[{"munder":{"mi":["w","_"]},"mo":"\u2061","mrow":{"mo":["(",")"],"mi":"p"}},{"mo":["(",")"],"mrow":{"mi":"N","mo":"\u00d7","mn":"1"}}]},"mo":"=","msup":{"mrow":{"mo":["[","]"],"mrow":{"mrow":[{"mi":"w","mo":"\u2061","mrow":{"mo":["(",")"],"mrow":{"mn":"1","mo":",","mi":"p"}}},{"mi":"w","mo":"\u2061","mrow":{"mo":["(",")"],"mrow":{"mn":"2","mo":",","mi":"p"}}},{"mi":"w","mo":"\u2061","mrow":{"mo":["(",")"],"mrow":{"mi":["N","p"],"mo":","}}}],"mo":["\u2062","\u2062","\u2062","\u2062","\u2062","\u2062"],"mstyle":[{"mspace":{"@attributes":{"width":"0.8em","height":"0.8ex"}}},{"mspace":{"@attributes":{"width":"0.8em","height":"0.8ex"}}},{"mspace":{"@attributes":{"width":"0.6em","height":"0.6ex"}}}],"mi":"\u2026"}},"mi":"T"}}],"mo":";"},"mo":"\u2062","mstyle":{"mspace":{"@attributes":{"width":"0.6em","height":"0.6ex"}}}}},{"mrow":{"mo":["(",")"],"mn":"18"}}]}]}}}},"For a given diversity port, p, the approach used to estimate these signature responses is to compare the section of the received signal that contains the composite training sequence, \u03b2(n,p), with the actual known training sequences, b(n), transmitted by each user, k=1,2, . . . K. This can be accomplished because the transmitted training sequences, b(n), from each user are known by the Receiver  and because an estimate of the received composite training sequence, \u03b2(n,p) can be extracted from the received signal, r(n,p), using the Training Sequence Locator . In this case\n\n()=(),()=\u03b2(), and )=().\u2003\u2003(19)\n","The maximum likelihood estimate of the characteristic signature waveforms \u015d(n, p), for each user, k, and each diversity port, p, is the one that collectively minimize the square error between the received composite training sequence, \u03b2(n,p), and the sum of each users training sequence convolved with its corresponding signature waveform",{"@attributes":{"id":"p-0118","num":"0117"},"maths":{"@attributes":{"id":"MATH-US-00015","num":"00015"},"math":{"@attributes":{"overflow":"scroll"},"mrow":{"mrow":{"mo":["(",")"],"mrow":{"munderover":{"mo":"\u2211","mrow":{"mi":"k","mo":"=","mn":"1"},"mi":"K"},"mo":["\u2062","\u2062"],"mstyle":{"mspace":{"@attributes":{"width":"0.3em","height":"0.3ex"}}},"mrow":{"mrow":[{"msub":{"mi":["b","k"]},"mo":"\u2061","mrow":{"mo":["(",")"],"mi":"n"}},{"msub":{"mover":{"mi":"s","mo":"^"},"mi":"k"},"mo":"\u2061","mrow":{"mo":["(",")"],"mrow":{"mi":["n","p"],"mo":","}}}],"mo":"*"}}},"mo":"."}}},"br":{}},{"@attributes":{"id":"p-0119","num":"0118"},"maths":{"@attributes":{"id":"MATH-US-00016","num":"00016"},"math":{"@attributes":{"overflow":"scroll"},"mtable":{"mtr":{"mtd":[{"mrow":{"mrow":[{"msub":{"munder":{"mi":["s","_"]},"mi":"ML"},"mo":"\u2061","mrow":{"mo":["(",")"],"mi":"p"}},{"mi":"arg","mo":["\u2062","\u2062"],"mstyle":{"mspace":{"@attributes":{"width":"0.8em","height":"0.8ex"}}},"mrow":{"munder":{"mi":"min","mrow":{"munder":{"mi":["s","_"]},"mo":"\u2208","mi":"\u03a9"}},"mo":"\u2062","mrow":{"mo":["{","}"],"msup":{"mrow":{"mo":["\uf605","\uf606"],"mrow":{"mrow":[{"munder":{"mi":["\u03b2","_"]},"mo":"\u2061","mrow":{"mo":["(",")"],"mi":"p"}},{"munder":[{"mi":"B","mo":"="},{"mi":["s","_"]}],"mo":"\u00b7"}],"mo":"-"}},"mn":"2"}}}}],"mo":"="}},{"mrow":{"mo":["(",")"],"mn":"20"}}]}}}},"br":{},"u":"s"},"Using the maximum likelihood approach, the signature estimates can be solved for by using a zero forcing criteria. This is done by setting the expression inside the minimization equal to zero as follows:\n\n\u2225()\u2212()\u2225=0\u2003\u2003(21)\n","Once this is done, the characteristic signature waveform vector can be calculated by solving the above set of linear equations for s(p) as follows:\n\n()=(())()\u2003\u2003(22)\n","Based on the solution of the maximum likelihood equation above, the first step is for Training Sequence Selector  in the Signature Waveform Estimator  to extract the portion of the received signal, r(n,p), for each frame, m, that contains the received composite training sequence, {circumflex over (\u03b2)}(n, p), in that frame. This is done in the Training Sequence Selector (step ) and is based on the location of the training sequence, \u03c4, the number of samples per frame, F, the number of samples of the received training sequence to select, N, and the offset into each received training sequence, \u03b4, to use.","Note that N is equal to (N+N\u22121), where Nis the number of samples to use for each signature estimate, and Nis the number of samples to in the known training sequences. Further note that Nand \u03b4 are parameters that are stored in the memory of this Training Sequence Selector  and therefore can be modified to select any section of the received composite training sequences in each frame. These values would typically be set so that the entire composite received training sequence is extracted from the received signal, r(n,p). The Training Sequence Selector step  is described mathematically as follows:",{"@attributes":{"id":"p-0124","num":"0123"},"maths":{"@attributes":{"id":"MATH-US-00017","num":"00017"},"math":{"@attributes":{"overflow":"scroll"},"mtable":{"mtr":{"mtd":[{"mrow":{"mrow":{"mrow":{"mrow":[{"msub":{"mover":{"mi":"\u03b2","mo":"^"},"mi":"m"},"mo":"\u2061","mrow":{"mo":["(",")"],"mrow":{"mi":["n","p"],"mo":","}}},{"mi":"r","mo":"\u2061","mrow":{"mo":["(",")"],"mrow":{"mrow":{"mrow":[{"mo":["(",")"],"mrow":{"mi":"n","mo":"-","mn":"1"}},{"mrow":{"mo":["(",")"],"mrow":{"mi":"m","mo":"-","mn":"1"}},"mo":"\u00b7","mi":"F"}],"mo":["+","+","+"],"msub":[{"mi":["\u03c4","TS"]},{"mi":["\u03b4","\u03b2"]}]},"mo":",","mi":"p"}}}],"mo":"="},"mo":")"},"mo":",","mtable":{"mtr":[{"mtd":{"mrow":{"mrow":{"mrow":{"mo":"\u2200","mi":"n"},"mo":"=","mn":"1"},"mo":[",",",","\u2062",","],"mn":"2","mi":"\u2026","mstyle":{"mspace":{"@attributes":{"width":"0.3em","height":"0.3ex"}}},"msub":{"mi":["N","\u03b2"]}}}},{"mtd":{"mrow":{"mrow":{"mrow":{"mo":"\u2200","mi":"m"},"mo":"=","mn":"1"},"mo":[",",",","\u2062",","],"mn":"2","mi":["\u2026","M"],"mstyle":{"mspace":{"@attributes":{"width":"0.6em","height":"0.6ex"}}}}}}]}}},{"mrow":{"mo":["(",")"],"mn":"23"}}]}}}}},"The next step to in estimating the signature waveforms is to multiply the transformation matrix , received from the Transformation Matrix Selector , with the section of the received complex baseband signal that contains the composite received training sequence estimate, {circumflex over (\u03b2)}(n, p), for each frame, m, where m=1,2, . . . M, using the Matrix Multiplier step to as follows:\n\n()=[{circumflex over (\u03b2)}(1 ){circumflex over (\u03b2)}(2 ) . . . {circumflex over (\u03b2)}()]=1,2\u2003\u2003(24)\n\n()=\u00b7{circumflex over ()}(), \u22001,2\u2003\u2003(25)\n\nwhere:\n",{"@attributes":{"id":"p-0126","num":"0125"},"maths":{"@attributes":{"id":"MATH-US-00018","num":"00018"},"math":{"@attributes":{"overflow":"scroll"},"mtable":{"mtr":{"mtd":[{"mrow":{"mrow":[{"mrow":[{"mover":{"munder":{"mi":["s","_"]},"mo":"^"},"mo":"\u2061","mrow":{"mo":["(",")"],"mrow":{"mi":["p","m"],"mo":","}}},{"mo":["[","]"],"mtable":{"mtr":[{"mtd":{"mrow":{"msub":{"munder":{"mover":{"mi":"s","mo":"^"},"mi":"_"},"msub":{"mi":"k","mn":"1"}},"mo":"\u2061","mrow":{"mo":["(",")"],"mrow":{"mi":["p","m"],"mo":","}}}}},{"mtd":{"mrow":{"msub":{"munder":{"mover":{"mi":"s","mo":"^"},"mi":"_"},"msub":{"mi":"k","mn":"2"}},"mo":"\u2061","mrow":{"mo":["(",")"],"mrow":{"mi":["p","m"],"mo":","}}}}},{"mtd":{"mi":"\u22ee"}},{"mtd":{"mrow":{"msub":{"munder":{"mover":{"mi":"s","mo":"^"},"mi":"_"},"msub":{"mi":["k","A"]}},"mo":"\u2061","mrow":{"mo":["(",")"],"mrow":{"mi":["p","m"],"mo":","}}}}}]}}],"mo":"="},{"mrow":[{"msub":{"munder":{"mover":{"mi":"s","mo":"^"},"mi":"_"},"msub":{"mi":["k","a"]}},"mo":"\u2061","mrow":{"mo":["(",")"],"mrow":{"mi":["p","m"],"mo":","}}},{"mo":["[","]"],"mtable":{"mtr":[{"mtd":{"mrow":{"msub":{"munder":{"mover":{"mi":"s","mo":"^"},"mi":"_"},"msub":{"mi":["k","a"]}},"mo":"\u2061","mrow":{"mo":["(",")"],"mrow":{"mn":"1","mo":[",",","],"mi":["p","m"]}}}}},{"mtd":{"mrow":{"msub":{"munder":{"mover":{"mi":"s","mo":"^"},"mi":"_"},"msub":{"mi":["k","a"]}},"mo":"\u2061","mrow":{"mo":["(",")"],"mrow":{"mn":"2","mo":[",",","],"mi":["p","m"]}}}}},{"mtd":{"mi":"\u22ee"}},{"mtd":{"mrow":{"msub":{"munder":{"mover":{"mi":"s","mo":"^"},"mi":"_"},"msub":{"mi":["k","a"]}},"mo":"\u2061","mrow":{"mo":["(",")"],"mrow":{"msub":{"mi":["N","s"]},"mo":[",",","],"mi":["p","m"]}}}}}]}}],"mo":"="}],"mo":";"}},{"mrow":{"mo":["(",")"],"mn":"26"}}]}}}}},"Note that A equals the total number of active users, and kequals the index of the aactive user. Therefore, for the first iteration through the signature estimation loop, k=k and A=K for k\u22121,2, . . . K because for the first iteration, it is assumed that all K users are active.","On the initial calculation of the signature waveform estimates the transformation matrix, , is passed into the Signature Waveform Estimator  from the Initial Transformation Matrix Builder  by way of the Transformation Matrix Selector  routine. On all subsequent estimates of the signature waveforms for the given complex baseband received signal, r(n,p), the Transformation matrix is passed to the Signature Waveform Estimator  from the Transformation matrix Rebuilder  by way of the Transformation Matrix Selector routine . This is done so that only signature estimates of the Active users (k) are calculated. Note that the dimensions of the Transformation Matrix are a function of the number of samples (N) in each characteristic signature estimate, \u015d(n, p, m), the estimated number of currently active users (A), and the number of samples (N) in each received composite training sequence estimate ({circumflex over (\u03b2)}(n, p)).",{"@attributes":{"id":"p-0129","num":"0128"},"figref":"FIG. 9","sub":["k",{"sub2":"a "},"a","k",{"sub2":"a "},"k",{"sub2":"a "},"th"],"sup":"2"},"To perform the Active User Test, the signature estimates, \u015d(n, p, m), are processed for each diversity port, p, separately by a step  p referred to as the Active User Test For Diversity Port \u201cp\u201d. The output of this step is a sequence, u(k), of ones and zeros that is (K) elements long. If u(k)=0, then user k is estimated to be \u201cinactive\u201d and if u(k)=1, then user k is estimated to be \u201cactively transmitting\u201d based on the signature estimates for diversity port p. This output sequence, u(k), is referred to as the active user test results sequence for diversity port p.","Once this test result sequence is calculated for each diversity port, the sequences are passed to a logical \u201cOR\u201d Operator . This logical \u201cOR\u201d function sets the combined active user test result sequence, u(k), equal to 1 if any of the P u(k) sequences are equal to 1 for each value of k, where k={1,2, . . . K}. Therefore, the combined active user test result sequence u(k) equals 1 if any of the u(k) sequences equal 1, and u(k) equals 0 otherwise, for each user k=1,2, . . . K.",{"@attributes":{"id":"p-0132","num":"0131"},"figref":"FIG. 10","sub":["p","a","a"]},"The first step to is to estimate the average received signal power for each user (k) using the estimated characteristic signature response, \u015d(n, p, m), for each frame, m, and each user, k, where k=k, k, . . . kas shown in , and it is calculated as follows:",{"@attributes":{"id":"p-0134","num":"0133"},"maths":{"@attributes":{"id":"MATH-US-00019","num":"00019"},"math":{"@attributes":{"overflow":"scroll"},"mtable":{"mtr":{"mtd":[{"mrow":{"mrow":{"mrow":[{"msub":{"mover":{"mi":"P","mo":"^"},"msub":{"mi":["k","a"]}},"mo":"\u2061","mrow":{"mo":["(",")"],"mrow":{"mi":["p","m"],"mo":","}}},{"mfrac":{"mn":"1","msub":{"mi":["F","sym"]}},"mo":"\u2062","mrow":{"munderover":{"mo":"\u2211","mrow":{"mi":"n","mo":"=","mn":"1"},"msub":{"mi":["N","s"]}},"mo":["\u2062","\u2062"],"mstyle":{"mspace":{"@attributes":{"width":"0.3em","height":"0.3ex"}}},"msup":{"mrow":{"mo":["\uf605","\uf606"],"mrow":{"msub":{"mover":{"mi":"s","mo":"^"},"msub":{"mi":["k","a"]}},"mo":"\u2061","mrow":{"mo":["(",")"],"mrow":{"mi":["n","p","m"],"mo":[",",","]}}}},"mn":"2"}}}],"mo":"="},"mo":",","mtable":{"mtr":[{"mtd":{"mrow":{"mrow":{"mrow":{"mo":"\u2200","msub":{"mi":["k","a"]}},"mo":"=","msub":{"mi":"k","mn":"1"}},"mo":[",",",","\u2062",","],"msub":[{"mi":"k","mn":"2"},{"mi":["k","A"]}],"mi":"\u2026","mstyle":{"mspace":{"@attributes":{"width":"0.3em","height":"0.3ex"}}}}}},{"mtd":{"mrow":{"mrow":{"mrow":{"mo":"\u2200","mi":"m"},"mo":"=","mn":"1"},"mo":[",",",","\u2062",","],"mn":"2","mi":["\u2026","M"],"mstyle":{"mspace":{"@attributes":{"width":"0.6em","height":"0.6ex"}}}}}}]}}},{"mrow":{"mo":["(",")"],"mn":"27"}}]}}}},"br":{},"sub":"sym "},"Once the signal powers, {circumflex over (P)}(p, m), are estimated for each user, k, the results from each frame are averaged as follows:",{"@attributes":{"id":"p-0136","num":"0135"},"maths":{"@attributes":{"id":"MATH-US-00020","num":"00020"},"math":{"@attributes":{"overflow":"scroll"},"mtable":{"mtr":{"mtd":[{"mrow":{"mrow":[{"mrow":[{"msub":{"mover":{"mi":"P","mo":"^"},"msub":{"mi":["k","a"]}},"mo":"\u2061","mrow":{"mo":["(",")"],"mi":"p"}},{"mfrac":{"mn":"1","mi":"M"},"mo":"\u2062","mrow":{"munderover":{"mo":"\u2211","mrow":{"mi":"m","mo":"-","mn":"1"},"mi":"M"},"mo":"\u2062","mrow":{"msub":{"mover":{"mi":"P","mo":"^"},"msub":{"mi":["k","a"]}},"mo":"\u2061","mrow":{"mo":["(",")"],"mrow":{"mi":["p","m"],"mo":","}}}}}],"mo":"="},{"mrow":{"mo":"\u2200","msub":{"mi":["k","a"]}},"mo":"=","msub":{"mi":"k","mn":"1"}}],"mo":[",",",",",","\u2062",","],"msub":[{"mi":"k","mn":"2"},{"mi":["k","A"]}],"mi":"\u2026","mstyle":{"mspace":{"@attributes":{"width":"0.3em","height":"0.3ex"}}}}},{"mrow":{"mo":["(",")"],"mn":"28"}}]}}}}},"In the next step to , these estimated signature powers for each user (k=k, k, . . . ,k) are compared to a detection threshold, r, relative to the estimated noise floor, {circumflex over (\u03c3)}(p). If the estimated signature power, {circumflex over (P)}(p), for user kis greater than or equal to the product of the relative threshold, r, with the estimated noise floor, {circumflex over (\u03c3)}(p), then the active user test result, u(k), for that user kis set to 1. Otherwise, it is set to 0. This test is expressed mathematically as follows:",{"@attributes":{"id":"p-0138","num":"0137"},"maths":{"@attributes":{"id":"MATH-US-00021","num":"00021"},"math":{"@attributes":{"overflow":"scroll"},"mtable":{"mtr":{"mtd":[{"mrow":{"mrow":[{"msub":{"mi":["u","p"]},"mo":"\u2061","mrow":{"mo":["(",")"],"msub":{"mi":["k","a"]}}},{"mo":"{","mrow":{"mtable":{"mtr":[{"mtd":[{"mn":"1"},{"mrow":{"mrow":[{"msub":{"mover":{"mi":"P","mo":"^"},"msub":{"mi":["k","a"]}},"mo":"\u2061","mrow":{"mo":["(",")"],"mi":"p"}},{"mo":["(",")"],"mrow":{"msup":{"mrow":{"mover":{"mi":"\u03c3","mo":"^"},"mo":"\u2061","mrow":{"mo":["(",")"],"mi":"p"}},"mn":"2"},"mo":"\u00b7","msub":{"mi":["r","th"]}}}],"mo":"\u2265"}}]},{"mtd":[{"mn":"0"},{"mi":"otherwise"}]}]},"mo":[",",",",",","\u2062",","],"mrow":{"mrow":{"mo":"\u2200","msub":{"mi":["k","a"]}},"mo":"=","msub":{"mi":"k","mn":"1"}},"msub":[{"mi":"k","mn":"2"},{"mi":["k","A"]}],"mi":"\u2026","mstyle":{"mspace":{"@attributes":{"width":"0.6em","height":"0.6ex"}}}}}],"mo":"="}},{"mrow":{"mo":["(",")"],"mn":"29"}}]}}}}},"In Combine Results step , all of the results for u(k) are then combined with the original user states vector, u(k) as follows:",{"@attributes":{"id":"p-0140","num":"0139"},"maths":{"@attributes":{"id":"MATH-US-00022","num":"00022"},"math":{"@attributes":{"overflow":"scroll"},"mtable":{"mtr":{"mtd":[{"mrow":{"mrow":[{"msub":{"mi":["u","p"]},"mo":"\u2061","mrow":{"mo":["(",")"],"mi":"k"}},{"mo":"{","mrow":{"mtable":{"mtr":[{"mtd":[{"mrow":{"msub":{"mi":["u","p"]},"mo":"\u2061","mrow":{"mo":["(",")"],"msub":{"mi":["k","a"]}}}},{"mrow":{"mi":"k","mo":"=","msub":{"mi":["k","a"]}}}]},{"mtd":[{"mn":"0"},{"mi":"otherwise"}]}]},"mo":[",",",",",","\u2062",","],"mrow":{"mrow":{"mo":"\u2200","mi":"k"},"mo":"=","mn":"1"},"mn":"2","mi":["\u2026","K"],"mstyle":{"mspace":{"@attributes":{"width":"0.6em","height":"0.6ex"}}}}}],"mo":"="}},{"mrow":{"mo":["(",")"],"mn":"30"}}]}}}}},"Referring to , the Transformation Matrix Rebuilder  uses the results of the Active User Tester  to rebuild the transformation matrix, , which is used by the Signature Waveform Estimator  to estimate the signature responses for each user, k, diversity port, p, and frame, m. This transformation matrix is rebuilt by removing the sub matrices, , in the training sequence matrix, , that correspond to the inactive users. This is done to create an updated transformation matrix, , that is used to only estimate the signature responses of the active users, k. This process is represented mathematically as follows:\n\n\u2518\u2003\u2003(31)\n\n\u2234=()\u2003\u2003(32)\n","Where kcan be defined using the following algorithm:",{"@attributes":{"id":"p-0143","num":"0142"},"tables":{"@attributes":{"id":"TABLE-US-00001","num":"00001"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"70pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"147pt","align":"left"}}],"thead":{"row":{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"a = 1;"]},{"entry":[{},"for k = 1:K"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"84pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"133pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"if(u(k) = 1)"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"98pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"119pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"k= k"]},{"entry":[{},"a=a+1"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"84pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"133pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"end"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"70pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"147pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"end"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}]}}]}}},"The updated transformation matrix, , is passed to the Signature Waveform Estimator  by way of the Transformation Matrix Selector . Inside the Signature Waveform Estimator , the updated transformation matrix, , is reapplied to each estimated received training sequence, {circumflex over (\u03b2)}(n, p), for each diversity port, p, and for each frame, m, in order to calculate more accurate signature waveform estimates for only the active users.","The Initial Transformation Matrix Builder  calculates the initial transformation matrix , based on the known training sequences (b(n)), which are Nsamples long, for each possible user (k=1,2, . . . K). This transformation matrix is calculated as follows:","First, the known training sequence convolution matrix () is determined:",{"@attributes":{"id":"p-0147","num":"0146"},"maths":{"@attributes":{"id":"MATH-US-00023","num":"00023"},"math":{"@attributes":{"overflow":"scroll"},"mtable":{"mtr":[{"mtd":[{"mrow":{"mover":{"msub":{"munder":{"mi":"B","mo":"="},"mi":"k"},"mrow":{"mo":["(",")"],"mrow":{"mrow":{"mo":["(",")"],"mrow":{"msub":[{"mi":["N","b"]},{"mi":["N","s"]}],"mo":["+","-"],"mn":"1"}},"mo":["\u2062","\u2062","\u2062"],"mi":"x","mstyle":{"mspace":{"@attributes":{"width":"0.3em","height":"0.3ex"}}},"msub":{"mi":["N","s"]}}}},"mo":"=","mrow":{"mo":["[","]"],"mtable":{"mtr":[{"mtd":[{"mrow":{"msub":{"mi":["b","k"]},"mo":"\u2061","mrow":{"mo":["(",")"],"mn":"1"}}},{"mn":"0"},{"mi":"\u22ef"},{"mn":"0"}]},{"mtd":[{"mrow":{"msub":{"mi":["b","k"]},"mo":"\u2061","mrow":{"mo":["(",")"],"mn":"2"}}},{"mrow":{"msub":{"mi":["b","k"]},"mo":"\u2061","mrow":{"mo":["(",")"],"mn":"1"}}},{"mi":"\u22f0"},{"mi":"\u22ee"}]},{"mtd":[{"mi":"\u22ee"},{"mrow":{"msub":{"mi":["b","k"]},"mo":"\u2061","mrow":{"mo":["(",")"],"mn":"2"}}},{"mi":"\u22f0"},{"mn":"0"}]},{"mtd":[{"mi":"\u22ee"},{"mi":"\u22ee"},{"mi":"\u22f0"},{"mrow":{"msub":{"mi":["b","k"]},"mo":"\u2061","mrow":{"mo":["(",")"],"mn":"1"}}}]},{"mtd":[{"mrow":{"msub":{"mi":["b","k"]},"mo":"\u2061","mrow":{"mo":["(",")"],"msub":{"mi":["N","b"]}}}},{"mi":"\u22ee"},{"mi":"\u22f0"},{"mrow":{"msub":{"mi":["b","k"]},"mo":"\u2061","mrow":{"mo":["(",")"],"mn":"2"}}}]},{"mtd":[{"mn":"0"},{"mrow":{"msub":{"mi":["b","k"]},"mo":"\u2061","mrow":{"mo":["(",")"],"msub":{"mi":["N","b"]}}}},{"mi":"\u22f0"},{"mi":"\u22ee"}]},{"mtd":[{"mi":"\u22ee"},{"mi":"\u22f0"},{"mi":"\u22f0"},{"mi":"\u22ee"}]},{"mtd":[{"mn":"0"},{"mi":"\u22ef"},{"mn":"0"},{"mrow":{"msub":{"mi":["b","k"]},"mo":"\u2061","mrow":{"mo":["(",")"],"msub":{"mi":["N","b"]}}}}]}]}}}},{"mrow":{"mo":["(",")"],"mn":"33"}}]},{"mtd":[{"mrow":{"mover":{"munder":{"mi":"B","mo":"="},"mrow":{"mo":["(",")"],"mrow":{"mrow":{"mo":["(",")"],"mrow":{"msub":[{"mi":["N","b"]},{"mi":["N","s"]}],"mo":["+","-"],"mn":"1"}},"mo":["\u2062","\u2062","\u2062"],"mi":"x","mstyle":{"mspace":{"@attributes":{"width":"0.3em","height":"0.3ex"}}},"msub":{"mi":["KN","s"]}}}},"mo":"=","mrow":{"mo":["[","]"],"mrow":{"msub":[{"munder":{"mi":"B","mo":"="},"mn":"1"},{"munder":{"mi":"B","mo":"="},"mn":"2"}],"mo":[",",","],"mrow":{"mi":"\u2026","mo":["\u2062","\u2062"],"mstyle":{"mspace":{"@attributes":{"width":"0.6em","height":"0.6ex"}}},"msub":{"munder":{"mi":"B","mo":"="},"mi":"K"}}}}}},{"mrow":{"mo":["(",")"],"mn":"34"}}]}]}}}},"Second, the transformation matrix () is calculated as follows:",{"@attributes":{"id":"p-0149","num":"0148"},"maths":{"@attributes":{"id":"MATH-US-00024","num":"00024"},"math":{"@attributes":{"overflow":"scroll"},"mtable":{"mtr":{"mtd":[{"mrow":{"mover":{"msub":{"munder":{"mi":"T","mo":"="},"mi":"r1"},"mrow":{"mo":["(",")"],"mrow":{"msub":{"mi":["KN","s"]},"mo":"\u2062","mrow":{"mi":"x","mo":"\u2061","mrow":{"mo":["(",")"],"mrow":{"msub":[{"mi":["N","b"]},{"mi":["N","s"]}],"mo":["+","-"],"mn":"1"}}}}}},"mo":"=","mrow":{"msup":[{"mrow":[{"mo":["(",")"],"mrow":{"msup":{"munder":{"mi":"B","mo":"="},"mi":"H"},"mo":"\u2062","munder":{"mi":"B","mo":"="}}},{"mo":"-","mn":"1"}]},{"munder":{"mi":"B","mo":"="},"mi":"H"}],"mo":"\u2062"}}},{"mrow":{"mo":["(",")"],"mn":"35"}}]}}}}},"The Initial Transformation Matrix (), is passed to the Signature Waveform Estimator  by way of the Transformation Matrix Selector , and is used to calculate the initial signature waveform estimates, \u015d(n, p, m), for each possible user, k, across each diversity port, p, and each frame, m, of received data. Also, the known training sequence convolution matrix is passed to the Transformation Matrix Rebuilder  so that the sub matrices (,. . . ) do not need to be regenerated for each iteration of the signature estimation loop.","The Transformation Matrix Selector  component is used to select which transformation matrix will be passed to the Signature Waveform Estimator . For a given snapshot of the complex baseband received signal, r(n,p), the initial signature waveform estimates, \u015d(n, p, m), are calculated using the initial transformation matrix, . Therefore, in this case, the Transformation Matrix Selector passes to the Signature Waveform Estimator  by setting its output, , equal to . Once the Signature Waveform Estimator  estimates the signature waveforms for each user, the results are passed to the Active User Tester  to determine which users are currently active. These results are then passed to the Transformation Matrix Rebuilder  to rebuild the transformation matrix using only the known training sequence convolution matrices () for the active users. Therefore, after the initial signature waveform estimates have been calculated, the Transformation Matrix Selector  passes the rebuilt transformation matrix, , to the Signature Waveform Estimator  by setting its output, , equal to .","Low Complexity MUD Algorithms","Conventional Minimum Mean Squared Error (MMSE) multiuser detectors with prior information typically show up in a turbo setting. Algebraic means are used to compute linear operators for the entire set of users (communications channels) simultaneously. This is done by utilizing prior information, or knowledge of the likely value of each user's bit of information, each at a particular instant in time. Such conventional multiuser detectors, however, were not designed for overloaded communication systems, and are subject to numerical instability, as well as unreasonable computational complexity.","Using the principles of the present invention, the instability problem of conventional detectors is solved. This solution can work with many varieties of multiuser detectors currently available or emerging, and dramatically reduces the number of computations needed in the multiuser detector block of a Turbo detector, so that reliable operation can be achieved in a real-time implementation. In one embodiment, the MUD module employs partial quantization of probability data in a MMSE detector. MMSE detection and hybrid cancellation are enabled in the same multiuser detection block, as well as variable size matrix operations in the turbo detector.","An example embodiment of a low complexity MUD with partially quantized prior information is discussed in reference to . Another example embodiment of a low complexity MUD based on prewhitened data is discussed in reference to .","Low Complexity MUD with Partially Quantized Prior Information",{"@attributes":{"id":"p-0157","num":"0156"},"figref":"FIG. 11","b":"110"},"In order to separate out the interfering signals, the incoming signals are applied as illustrated by arrow  to a Turbo MUD  which processes the incoming signals on a time interval by time interval basis, and provides best guesses or estimates of the individual bits for each user, as illustrated at . These best guesses or estimates are then applied in a feedback loop to the MUD so as to increase the likelihood that the particular bit is what it is supposed to be. This is done in an iterative process until such time as the error rate is statistically known to drop below a predetermined value. When it does, the bits corresponding to the digital incoming streams are outputted such that the incoming data is recovered with the interfering signals having been separated by the Turbo MUD .",{"@attributes":{"id":"p-0159","num":"0158"},"figref":["FIG. 12","FIGS. 1\u20133"],"b":"18"},"In more detail, MUD  is adapted to process independent bits in the bit stream where L is used to indicate that there are, for example, several hundred bits during the L time interval. The L time interval is illustrated at  to delineate a portion of an incoming data stream of interfering signals illustrated by waveform . The MUD  considers only a bit-size portion of these incoming signals at a time, here illustrated by , and processes these signals so as to produce a number of best estimates of the bits from each of the users at that time instant. Here, the best estimates for a first user are illustrated in column  and for a second user in column .","These estimates in terms of real numbers called \u201csoft\u201d MUD outputs are coupled to an Error Correction Unit  which performs error correction functions such that as illustrated at  which determines the likelihood that a bit is either 1 or 0 in one embodiment based on a window of preceding and succeeding bits for each user. Thus, a bit  is determined by the bits in the preceding window  and the succeeding window . The output of the Error Correction Unit is applied back to MUD  so as to permit iterative processing of the bits for increasing the likelihood that a particular bit is what it is said to be.","This iterative processing is what takes an inordinate amount of time even under the best of circumstances due to the enormous number of possibilities for each of the bits from each of the users. One embodiment of the present invention eliminates from consideration during the next iteration of the MUD those bits that are determined to be almost certain.","Assume, for example, that out of 10 bits three are certain, then the processing by the MUD on the next iteration can be reduced to 12% of what the processing was during the last iteration. In order to do this, a Thresholding Module  eliminates from being passed back to the MUD  those bits that are determined to be certain enough so that they can be assigned either \u22121 or +1 in one embodiment. This Thresholding Module  passes through the relatively uncertain bit estimates on line  and passes through the relatively certain bit estimates as their quantized values, +1 or \u22121, on lines  and  to a Combining Unit , which combines these certain bits with the recomputed best guesses from MUD  on the next iteration.","The result is that the information provided to Error Correction Module  on the next iteration takes into account the certain bits and also the recomputed best guesses for the remainder of the bits. The Error Correction Unit  processes these combined estimates. The output of the Error Correction Unit  is again fed back to MUD  through Thresholding Unit , such that on this next pass, even more bits can be declared certain, with the following iteration only considering the leftover uncertain bit estimates, again resulting in a dramatic processing advantage on this subsequent iteration. When the output of the Error Correction Unit  is predicted to have an error rate less than a predetermined figure, then the iteration stops and the output is available on line  as the separated and demodulated signals.",{"@attributes":{"id":"p-0165","num":"0164"},"figref":["FIG. 13","FIG. 12"],"b":["30","132","144","146","138","114"]},{"@attributes":{"id":"p-0166","num":"0165"},"figref":["FIG. 14","FIG. 12"],"b":["114","150"]},{"@attributes":{"id":"p-0167","num":"0166"},"figref":["FIG. 15A","FIG. 14"],"sub":["1","2 ","3 ","1","2 ","3","3","1 ","2","3 "],"b":["130","152","154","114","114","114"]},"This processing of the values from the matrix is shown more clearly in , which shows the MUD  processes seven of the best estimate values (designated as ) in the feedback loop. The two certain values (designated as ) are passed through.  is a diagrammatic illustration of MUD signals which are processed on a next iteration combined with unprocessed signals so as to provide the error correction unit  with appropriate estimates.","The processed and unprocessed bits are thereafter combined at  such that the result that is coupled to the Error Corrector  is as illustrated at . As will be appreciated, after the thresholding, that which was passed through on the next iteration to Error Corrector  are new best estimates of what the bits should be, along with the certain bits. This enables the Error Corrector  to better process the output from Combiner  and to provide better estimates back through the Thresholding Circuit  to MUD . The result is that the final bit estimates are more quickly ascertained, which results in dramatically reduced processing times. Thus, the original incoming interfering signals are recovered quicker with fewer iterations and less computation.","Quantized Turbo MUD","The mathematical background underpinning the Low Complexity Mud with Partially Quantized Prior Information algorithm is now described. It is well known in the literature that the MUD processing block of a Turbo MUD processor reaches its ultimate performance when it directly maximizes the likelihood function:",{"@attributes":{"id":"p-0172","num":"0171"},"maths":{"@attributes":{"id":"MATH-US-00025","num":"00025"},"math":{"@attributes":{"overflow":"scroll"},"mtable":{"mtr":{"mtd":[{"mrow":{"mover":{"mi":"b","mo":"^"},"mo":"=","mrow":{"mrow":[{"munder":{"mrow":{"mi":["arg","max"],"mo":["\u2062","\u2062"],"mstyle":{"mspace":{"@attributes":{"width":"0.3em","height":"0.3ex"}}}},"mi":"b"},"mo":"\u2062","mrow":{"mo":["{","}"],"mrow":{"msup":{"mi":["\u039b","\u2032"]},"mo":"\u2061","mrow":{"mo":["(",")"],"mi":"b"}}}},{"munder":{"mrow":{"mi":["arg","max"],"mo":["\u2062","\u2062"],"mstyle":{"mspace":{"@attributes":{"width":"0.3em","height":"0.3ex"}}}},"mi":"b"},"mo":"\u2062","mrow":{"mo":["{","}"],"mrow":{"mrow":[{"mn":"2","mo":["*","\u2062"],"mi":"Re","mrow":{"mo":["{","}"],"mrow":{"msup":[{"mi":["b","\u2032"]},{"mi":["AS","\u2032"]}],"mo":["\u2062","\u2062"],"mi":"r"}}},{"msup":[{"mi":["b","\u2032"]},{"mi":["S","\u2032"]}],"mo":["\u2062","\u2062"],"mi":"Sb"},{"mn":"2","mo":["\u2062","\u2062","\u2062"],"msup":{"mi":"\u03c3","mn":"2"},"mi":"ln","mrow":{"mo":["{","}"],"mrow":{"msub":{"mi":["p","b"]},"mo":"\u2061","mrow":{"mo":["(",")"],"mi":"b"}}}}],"mo":["-","+"]}}}],"mo":"="}}},{"mrow":{"mo":["(",")"],"mn":"36"}}]}}}},"br":{}},{"@attributes":{"id":"p-0173","num":"0172"},"maths":{"@attributes":{"id":"MATH-US-00026","num":"00026"},"math":{"@attributes":{"overflow":"scroll"},"mtable":{"mtr":{"mtd":[{"mrow":{"mn":"2","mo":["\u2062","\u2062","\u2062"],"mstyle":{"mspace":{"@attributes":{"width":"0.3em","height":"0.3ex"}}},"msup":{"mi":"\u03c3","mn":"2"},"mrow":{"munderover":{"mo":"\u2211","mrow":{"mi":"i","mo":"=","mn":"1"},"mi":"K"},"mo":["\u2062","\u2062"],"mstyle":{"mspace":{"@attributes":{"width":"0.3em","height":"0.3ex"}}},"mrow":{"mrow":{"mi":"ln","mo":"\u2061","mrow":{"mo":["(",")"],"mrow":{"msub":{"mi":["p","b"]},"mo":"\u2061","mrow":{"mo":["(",")"],"msub":{"mi":["b","i"]}}}}},"mo":"."}}}},{"mrow":{"mo":["(",")"],"mn":"37"}}]}}}}},"In the Low Complexity Mud with Partially Quantized Prior Information, Equation 36 is approximately solved by quantizing the second likelihood contribution to its extreme values. In fact, if a bit's prior likelihood is completely unknown, the probability of it being a 1 or a 0 are equal (does not influence Equation 36), and if the prior likelihood is perfectly known, the probability is 1 for the correct choice, and 0 for the incorrect choice. This forces a contribution to Equation 36 of \u2212\u221e for the unlikely or incorrect guess of that bit.","This simplification or quantization of the likelihood function Equation 36 mathematically implies that the bit decisions at that point in the turbo iteration can be separated into two parts S=[SS], b=\u2514bb\u2518, \u2018known\u2019 and \u2018unknown\u2019. This simplifies the likelihood to:\n\n\u039b\u2032()\u2192\u039b\u2032()=2()}\u2212\u2003\u2003(38)\n\nwhere it is understood that an optimization will only be conducted over the unknown bits (subscripted by 2), and the known bits (subscripted by 1) will be passed into the computation as inputs. Furthermore, the likelihood equation, and therefore processing implied by Equation 38 for the unknown bits is equivalent to normal MUD processing, replacing the data with the modified data r\u2212Sb.\n","In this embodiment, a MMSE MUD algorithm is used to compute equation 38, although any number of MUD algorithms could be substituted. The MMSE operator will be b=(\u03c3+ASSA)(SA)(r\u2212SAb), and can be computed using the algorithmic steps:\n\n","Low Complexity M-Algorithm Based on Prewhitened Data","The data to be processed by the MUD can be prewhitened in a manner that partially decouples the users from multiple access interference, which dramatically improves performance.  implements an M-algorithm based on prewhitened data in accordance with an embodiment of the present invention. Modules , , , and  of this embodiment could be used, for example, to implement the Multiuser Detector  of .","The apparatus in  is now described in more detail. A data stream , potentially complex, is received from some source. For the case of Code Division Multiple Access (CDMA) communications schemes, the data stream is sampled by some multiple of the chip rate. For TDMA communication schemes, the data stream is sampled at some multiple of the symbol rate.","The data  represents a vector of data, transferred at some rate (e.g., the symbol rate). This data  is transmitted to the matched filter . In addition, the same vector  is passed on to the parameter estimation module . The purpose of the parameter estimation module is to estimate timing, signal amplitudes, phases, polarization, and identification of transmission channels. Estimates of the parameters are passed to design the matched filter bank  and estimates of the parameters are also passed to design the corresponding whitener .","Symbol hypothesis testing, conducted in  of , could include the maximum likelihood detector which is expressed mathematically as,",{"@attributes":{"id":"p-0182","num":"0187"},"maths":{"@attributes":{"id":"MATH-US-00027","num":"00027"},"math":{"@attributes":{"overflow":"scroll"},"mtable":{"mtr":{"mtd":[{"mrow":{"msub":{"mover":{"mi":"b","mo":"^"},"mi":"ML"},"mo":"=","mrow":{"mi":"arg","mo":["\u2062","\u2062"],"mstyle":{"mspace":{"@attributes":{"width":"0.3em","height":"0.3ex"}}},"mrow":{"msup":{"munder":{"mrow":{"mi":"min","mo":"\u2062","mrow":{"mo":["\uf605","\uf606"],"mrow":{"mi":["r","SAb"],"mo":"-"}}},"mi":"b"},"mn":"2"},"mo":"."}}}},{"mrow":{"mo":["(",")"],"mn":"39"}}]}}}}},"Equation 39 is based on the linear model for the received samples illustrated by\n\n,\u2003\u2003(40)\n\nwhich defines the received samples in terms of the transmitted bits, b, and a model of the channel defined in S. The maximum likelihood detector is a brute force approach which requires an exhaustive search. The maximum likelihood solution consists of exhaustively evaluating the Euclidean distance between the received samples and the linear model of the samples using every possible hypothesis of the bit sequence. It is too computationally intensive for problems with a large number of users or severe intersymbol interference from multipath. The approach considered here consists of a simplified version of the maximum likelihood detector that nearly achieves the same performance in a supersaturated environment with large savings in the number of computations. This approach is described as follows.\n","The maximum likelihood solution is rewritten as",{"@attributes":{"id":"p-0185","num":"0190"},"maths":{"@attributes":{"id":"MATH-US-00028","num":"00028"},"math":{"@attributes":{"overflow":"scroll"},"mtable":{"mtr":{"mtd":[{"mrow":{"mrow":{"mrow":{"msub":{"mover":{"mi":"b","mo":"^"},"mi":"ML"},"mo":"=","mrow":{"mi":"arg","mo":["\u2062","\u2062","\u2062"],"mstyle":{"mspace":{"@attributes":{"width":"0.3em","height":"0.3ex"}}},"munder":{"mrow":{"mi":"min","mo":"\u2062","mrow":{"mo":["{","\u2062"],"mstyle":{"mspace":{"@attributes":{"width":"0.3em","height":"0.3ex"}}},"msup":{"mrow":{"mo":["(",")"],"mrow":{"mi":["r","SAb"],"mo":"-"}},"mi":"H"}}},"mi":"b"},"mrow":{"mover":{"mo":"\u2211","mrow":{"mo":"-","mn":"1"}},"mo":["\u2062","\u2062"],"mstyle":{"mspace":{"@attributes":{"width":"0.3em","height":"0.3ex"}}},"mrow":{"mo":["(",")"],"mrow":{"mi":["r","SAb"],"mo":"-"}}}}},"mo":"}"},"mo":","}},{"mrow":{"mo":["(",")"],"mn":"41"}}]}}}},"br":{},"sub":"w"},{"@attributes":{"id":"p-0186","num":"0191"},"maths":{"@attributes":{"id":"MATH-US-00029","num":"00029"},"math":{"@attributes":{"overflow":"scroll"},"mtable":{"mtr":{"mtd":[{"mrow":{"mrow":{"mrow":{"msub":{"mover":{"mi":"b","mo":"^"},"mi":"ML"},"mo":"=","mrow":{"mi":"arg","mo":["\u2062","\u2062","\u2062"],"mstyle":{"mspace":{"@attributes":{"width":"0.3em","height":"0.3ex"}}},"munder":{"mrow":{"mi":"min","mo":"\u2062","mrow":{"mo":["{","\u2062"],"mstyle":{"mspace":{"@attributes":{"width":"0.3em","height":"0.3ex"}}},"msup":{"mrow":{"mo":["(",")"],"mrow":{"mi":["w","WSAb"],"mo":"-"}},"mi":"H"}}},"mi":"b"},"mrow":{"mover":{"munder":{"mo":"\u2211","mi":"W"},"mrow":{"mo":"-","mn":"1"}},"mo":["\u2062","\u2062"],"mstyle":{"mspace":{"@attributes":{"width":"0.3em","height":"0.3ex"}}},"mrow":{"mo":["(",")"],"mrow":{"mi":["w","WSAb"],"mo":"-"}}}}},"mo":"}"},"mo":","}},{"mrow":{"mo":["(",")"],"mn":"42"}}]}}}},"br":{},"sub":"w","sup":"H"},"Let\n\n=(),\u2003\u2003(43)\n\nthen the filter bank defined by the matrix W is the filter bank used in the decorrelator receiver. The decorrelator receiver is attractive because it optimally mitigates the multiple access interference but does not account for the colored noise. Specifically, while the multiple access interference is eliminated, assuming known correlation matrix, the white noise component has been colored (when the signature waveforms are not orthonormal). A more suitable filter bank includes the inverse of the square root of the correlation matrix. This combination results in a filter bank that partially decouples the multiple access interference yet maintains uncorrelated noise components. The cascade of the square root filter and the matched filter represents an orthonormal set of filters that are closest in a least squares sense to the signature waveforms. A square root filter bank defined using the Cholesky factorization of the correlation matrix is one of the more attractive square root factorizations. The correlation matrix is represented in Equation 43 by\n\n=().\u2003\u2003(44)\n","The Cholesky factorization of the correlation matrix H is defined by\n\n=()=(),\u2003\u2003(45)\n\nwhere F is an upper-triangular matrix. Therefore the whitening filter is defined as Fwhich is a lower triangular matrix. Therefore, rather than utilize decorrelating filter bank in Equation 43, the following partial decorrelating filter bank, defined as\n\n,\u2003\u2003(46)\n\nwhich is more suitable for efficient searches of the weighted least squares solution. The attraction of this particular square root factorization is illustrated by\n",{"@attributes":{"id":"p-0189","num":"0194"},"maths":{"@attributes":{"id":"MATH-US-00030","num":"00030"},"math":{"@attributes":{"overflow":"scroll"},"mtable":{"mtr":{"mtd":[{"mrow":{"mi":"w","mo":"=","mrow":{"mrow":[{"msup":[{"mi":"F","mrow":{"mo":"-","mi":"H"}},{"mi":["A","H"]},{"mi":["S","H"]}],"mo":["\u2062","\u2062","\u2062"],"mi":"r"},{"mrow":[{"mi":["Fb","z"],"mo":"+"},{"mrow":[{"mrow":[{"mo":["[","]"],"mtable":{"mtr":[{"mtd":[{"msub":{"mi":"F","mn":"11"}},{"msub":{"mi":"F","mn":"12"}},{"msub":{"mi":"F","mn":"13"}},{"msub":{"mi":"F","mn":"14"}},{"mi":"\u22ef"},{"msub":{"mi":"F","mrow":{"mn":"1","mo":"\u2062","mi":"K"}}}]},{"mtd":[{"mn":"0"},{"msub":{"mi":"F","mn":"22"}},{"msub":{"mi":"F","mn":"23"}},{"msub":{"mi":"F","mn":"24"}},{"mi":"\u22ef"},{"msub":{"mi":"F","mrow":{"mn":"2","mo":"\u2062","mi":"K"}}}]},{"mtd":[{"mn":"0"},{"mn":"0"},{"msub":{"mi":"F","mn":"33"}},{"msub":{"mi":"F","mn":"34"}},{"mi":"\u22ef"},{"msub":{"mi":"F","mrow":{"mn":"3","mo":"\u2062","mi":"K"}}}]},{"mtd":[{"mn":"0"},{"mn":"0"},{"mn":"0"},{"msub":{"mi":"F","mn":"44"}},{"mi":"\u22ef"},{"msub":{"mi":"F","mrow":{"mn":"4","mo":"\u2062","mi":"K"}}}]},{"mtd":[{"mi":"\u22ee"},{"mi":"\u22ee"},{"mi":"\u22ee"},{"mi":"\u22ee"},{"mi":"\u22f0"},{"mi":"\u22ee"}]},{"mtd":[{"mn":"0"},{"mn":"0"},{"mn":"0"},{"mn":"0"},{"mi":"\u22ef"},{"msub":{"mi":["F","KK"]}}]}]}},{"mo":["[","]"],"mtable":{"mtr":[{"mtd":{"msub":{"mi":"b","mn":"1"}}},{"mtd":{"msub":{"mi":"b","mn":"2"}}},{"mtd":{"msub":{"mi":"b","mn":"3"}}},{"mtd":{"msub":{"mi":"b","mn":"4"}}},{"mtd":{"mi":"\u22ee"}},{"mtd":{"msub":{"mi":["b","K"]}}}]}}],"mo":"\u2061"},{"mrow":{"mo":["[","]"],"mtable":{"mtr":[{"mtd":{"msub":{"mi":"z","mn":"1"}}},{"mtd":{"msub":{"mi":"z","mn":"2"}}},{"mtd":{"msub":{"mi":"z","mn":"3"}}},{"mtd":{"msub":{"mi":"z","mn":"4"}}},{"mtd":{"mi":"\u22ee"}},{"mtd":{"msub":{"mi":["z","K"]}}}]}},"mo":"."}],"mo":"+"}],"mo":"="}],"mo":"="}}},{"mrow":{"mo":["(",")"],"mn":"47"}}]}}}}},"The partial decoupling of the co-channel interference is illustrated by the mean of the whitened output, w, defined to be Fb where F is an upper triangular matrix. Let the column vector, b, be ordered by user such that the top row represents the user and the bottom row represents the Kuser. Computing the terms in Fb shows that the Kuser is completely decoupled from all other user's bit hypotheses. Also the (K\u22121)users bit hypothesis is only coupled with the bit hypothesis for user K. The term partial decoupling is used because the decisions for the (K\u2212m) users are decoupled from any of the other users such that knowledge of the first 1 to (K\u2212m\u22121) users are not required for making decisions on the later (K\u2212m) users.","Continuing in this manner illustrates how measurements for any user have been decoupled from the actual bits of any \u201cfuture\u201d user. Note, the term \u201cfuture\u201d for user k refers to all users 1 through k\u22121.","The noise is whitened by using the partial decorrelator defined by\n\n.\u2003\u2003(48)\n\nThe white noise is illustrated by\n\n()}()=\u03c3()()=\u03c3\u2003\u2003(49)\n\nwhere I represents the identify matrix and E represents the expectation of the random variables. The diagonal covariance matrix proves that noise has been whitened using the partially decorrelating filter bank defined in Equation 48. Substituting the decorrelating filter bank in Equation 48 into Equation 42, produces the same maximum likelihood solution.\n","The maximum likelihood expression in Equation 42 is rewritten in terms of the metric \u03a9(b) which is illustrated by",{"@attributes":{"id":"p-0194","num":"0199"},"maths":{"@attributes":{"id":"MATH-US-00031","num":"00031"},"math":{"@attributes":{"overflow":"scroll"},"mtable":{"mtr":{"mtd":[{"mrow":{"mrow":{"msub":{"mover":{"mi":"b","mo":"^"},"mi":"ML"},"mo":"=","mrow":{"mi":"arg","mo":["\u2062","\u2062"],"mstyle":{"mspace":{"@attributes":{"width":"0.6em","height":"0.6ex"}}},"mrow":{"munder":{"mi":["min","b"]},"mo":"\u2062","mrow":{"mi":"\u03a9","mo":["\u2062","\u2062"],"mstyle":{"mspace":{"@attributes":{"width":"0.6em","height":"0.6ex"}}},"mrow":{"mo":["(",")"],"mi":"b"}}}}},"mo":","}},{"mrow":{"mo":["(",")"],"mn":"50"}}]}}}},"br":{}},{"@attributes":{"id":"p-0195","num":"0200"},"maths":{"@attributes":{"id":"MATH-US-00032","num":"00032"},"math":{"@attributes":{"overflow":"scroll"},"mtable":{"mtr":{"mtd":[{"mrow":{"mrow":[{"mi":"\u03a9","mo":"\u2061","mrow":{"mo":["(",")"],"mi":"b"}},{"munderover":{"mo":"\u2211","mrow":{"mi":"k","mo":"=","mn":"1"},"mi":"K"},"mo":["\u2062","\u2062"],"mstyle":{"mspace":{"@attributes":{"width":"0.3em","height":"0.3ex"}}},"mrow":{"msup":{"mrow":{"mo":["\uf603","\uf604"],"mrow":{"msub":{"mi":["w","k"]},"mo":"-","mrow":{"munderover":{"mo":"\u2211","mrow":{"mi":["j","k"],"mo":"="},"mi":"K"},"mo":["\u2062","\u2062"],"mstyle":{"mspace":{"@attributes":{"width":"0.3em","height":"0.3ex"}}},"mrow":{"msub":[{"mi":["F","kj"]},{"mi":["b","j"]}],"mo":"\u2062"}}}},"mn":"2"},"mo":"."}}],"mo":"="}},{"mrow":{"mo":["(",")"],"mn":"51"}}]}}}}},"Using Equation 51, the search for the optimal set of bits can be reformulated in terms of a decision tree in which the metric characterizing the likelihood of the bit hypothesis for user k, b, is now represented by the component",{"@attributes":{"id":"p-0197","num":"0202"},"maths":{"@attributes":{"id":"MATH-US-00033","num":"00033"},"math":{"@attributes":{"overflow":"scroll"},"mtable":{"mtr":{"mtd":[{"mrow":{"msub":{"mi":["w","k"]},"mo":"-","mrow":{"munderover":{"mo":"\u2211","mrow":{"mi":["j","k"],"mo":"="},"mi":"K"},"mo":["\u2062","\u2062"],"mstyle":{"mspace":{"@attributes":{"width":"0.3em","height":"0.3ex"}}},"mrow":{"msub":{"mi":["F","kj"]},"mo":"\u2062","mrow":{"msubsup":{"mi":["b","j"],"mn":"2"},"mo":"."}}}}},{"mrow":{"mo":["(",")"],"mn":"52"}}]}}}}},"The term brepresents the bit hypothesis for user k and the term wrepresents the filter bank output for filter k which has been matched to the signature waveform used by user k. The term frepresents the Cholesky factor defined for users j and users k. The sequential nature of the ML metric is more clearly illustrated by the following expression. Each component of the summation (see Equation 52) can be considered as one of K stages of a decision tree. The following expression illustrates the first three terms of distance metric which would correspond to the components for the first three stages of the decision tree.\n\n\u03a9()|\u2212()|\u2212()|+. . . \u2003\u2003(53)\n","Evaluating the metric over these first three stages is illustrated in  for the QPSK alphabet. At the first stage, the first component |w\u2212Fb|assesses the likelihood of the four possible states for user K. As indicated by , this likelihood metric is not dependent on any other decisions on other user's bits. At the second stage, an estimate of the (K\u22121)th users bit, b, is based on the |w\u2212(Fb+Fb)|. The decision at the second on the filtered data corresponding to user band the decision made for the K th user. Similarly, the estimate of the (K\u22122)th user is evaluated at the third stage using the third component of the distance metric, which is dependent on the previous two decisions. This continues for all K of these components. The trend shows that early decisions on users' bits are decoupled from \u201cfuture\u201d decisions made for the remaining users' bits.","Since the entire ML metric is a summation of K of these components, there are K stages to the decision tree. The jointly optimal decision requires each one of the branches of the decision tree must be explored. The decision tree approach still requires 4hypotheses to be evaluated for the QPSK case with no multipath. Expressing the problem in terms of a decision tree enables exploration of pruning techniques such as the M-algorithm or T-algorithm.","For the super-saturated communications problem, there are more users than statistically independent dimensions and therefore have an under-determined problem, such that the correlation matrix is positive semidefinite (i.e., not invertible). Since the correlation matrix is not invertible, the partial decorrelator in Equation 48 no longer exists because of the correlation between the channels.","A technique commonly used in regression analysis to combat multicolinearity is referred to as ridge regression. Multicolinearity results form high correlation between independent variables, which in this particular case corresponds to user's transmitted waveforms. Simply put (ASSA) has large off-diagonal terms producing an unstable correlation matrix with high condition numbers (i.e., ratio of maximum eigenvalue to lowest eigenvalue). In regression analysis, this produces estimates with very high variance. This is resolved by accepting a small bias to minimize the variance in the estimates. This is done by transforming the correlation matrix from (ASSA) to (ASSA+\u03b3I), where \u03b3 represents the diagonal loading. This raises the minimum eigenvalues to produce a more stable correlation matrix at the price of biased estimates in regression analysis.","The approach considered here is to alter the partial decorrelating filter bank by diagonally loading the correlation matrix thus intentionally introducing a bias with the objective of reducing the variance of the estimate which becomes more critical for the non-linear decision process inherent in the decision trees. Specifically, the new partial decorrelating filterbank is defined by\n\n,\u2003\u2003(54)\n\nwhere the Cholesky factorization of the diagonally loaded correlation matrix is such that\n\n=().\u2003\u2003(55)\n","As previously mentioned, the concept of ridge regression consists of intentionally introducing a bias with the intention of reducing the variance of the estimates. Applying the partial decorrelating filter bank defined in Equation 54 to the received samples produces a vector K samples out of the filter bank defined by the K element column vector w. Applying the Equation 54 to the received samples is represented by\n\n\u2003\u2003(56)\n","Substituting the matrix model representation of the received samples, defined in Equation 40 provides the resulting simplification\n\n,\u2003\u2003(57)\n\nwhere the correlation matrix H is defined in Equation 44. Based on Equation 57, it is clear the bias that was intentionally introduced through diagonal loading using the noise variance is\n\n\u0394\u2003\u2003(58)\n","The Cholesky factorization of the diagonally loading correlation matrix does not completely whiten the noise as indicated by the covariance of the noise term in Equation 57 which is defined by\n\n\u03c3().\u2003\u2003(59)\n","For the case of reasonable signal to noise ratios and modest diagonal loading the noise covariance after applying the diagonally loaded based partial decorrelator is approximated by \u03c3I. In addition, for small diagonal loadings, the bias is considered small. Based on these approximations the weighted least squares solution is approximated by",{"@attributes":{"id":"p-0208","num":"0213"},"maths":{"@attributes":{"id":"MATH-US-00034","num":"00034"},"math":{"@attributes":{"overflow":"scroll"},"mtable":{"mtr":{"mtd":[{"mrow":{"msub":{"mover":{"mi":"b","mo":"^"},"mi":"ML"},"mo":"=","mrow":{"mi":"arg","mo":["\u2062","\u2062"],"mstyle":{"mspace":{"@attributes":{"width":"0.6em","height":"0.6ex"}}},"mrow":{"munder":{"mi":["min","b"]},"mo":"\u2062","mrow":{"mrow":{"mo":["{","}"],"mrow":{"msup":{"mrow":{"mo":["(",")"],"mrow":{"mi":"w","mo":"-","mrow":{"msub":{"mi":["F","\u03b3"]},"mo":"\u2062","mi":"b"}}},"mi":"H"},"mo":"\u2062","mrow":{"mo":["(",")"],"mrow":{"mi":"w","mo":"-","mrow":{"msub":{"mi":["F","\u03b3"]},"mo":"\u2062","mi":"b"}}}}},"mo":"."}}}}},{"mrow":{"mo":["(",")"],"mn":"60"}}]}}}}},"As before, the maximum likelihood solution is express by",{"@attributes":{"id":"p-0210","num":"0215"},"maths":{"@attributes":{"id":"MATH-US-00035","num":"00035"},"math":{"@attributes":{"overflow":"scroll"},"mtable":{"mtr":{"mtd":[{"mrow":{"mrow":{"msub":{"mover":{"mi":"b","mo":"^"},"mi":"ML"},"mo":"=","mrow":{"mi":"arg","mo":["\u2062","\u2062"],"mstyle":{"mspace":{"@attributes":{"width":"0.6em","height":"0.6ex"}}},"mrow":{"munder":{"mi":["min","b"]},"mo":"\u2062","mrow":{"msub":{"mrow":{"mi":"\u03a9","mo":"\u2062","mstyle":{"mspace":{"@attributes":{"width":"0.3em","height":"0.3ex"}}}},"mi":"\u03b3"},"mo":["\u2062","\u2062"],"mstyle":{"mspace":{"@attributes":{"width":"0.3em","height":"0.3ex"}}},"mrow":{"mo":["(",")"],"mi":"b"}}}}},"mo":","}},{"mrow":{"mo":["(",")"],"mn":"61"}}]}}}},"br":{}},{"@attributes":{"id":"p-0211","num":"0216"},"maths":{"@attributes":{"id":"MATH-US-00036","num":"00036"},"math":{"@attributes":{"overflow":"scroll"},"mtable":{"mtr":{"mtd":[{"mrow":{"mrow":[{"msub":{"mi":["\u03a9","\u03b3"]},"mo":"\u2061","mrow":{"mo":["(",")"],"mi":"b"}},{"munderover":{"mo":"\u2211","mrow":{"mi":"k","mo":"=","mn":"1"},"mi":"K"},"mo":["\u2062","\u2062"],"mstyle":{"mspace":{"@attributes":{"width":"0.3em","height":"0.3ex"}}},"mrow":{"msup":{"mrow":{"mo":["\uf603","\uf604"],"mrow":{"msub":{"mi":["w","k"]},"mo":"-","mrow":{"munderover":{"mo":"\u2211","mrow":{"mi":["j","k"],"mo":"="},"mi":"K"},"mo":["\u2062","\u2062"],"mstyle":{"mspace":{"@attributes":{"width":"0.3em","height":"0.3ex"}}},"mrow":{"msub":[{"mrow":{"mo":["\u2308","\u2309"],"msub":{"mi":["F","\u03b3"]}},"mi":"kj"},{"mi":["b","j"]}],"mo":"\u2062"}}}},"mn":"2"},"mo":"."}}],"mo":"="}},{"mrow":{"mo":["(",")"],"mn":"62"}}]}}}}},"The procedure for evaluating Equation 62 is consistent with the approach described in  in which the individual metrics described by",{"@attributes":{"id":"p-0213","num":"0218"},"maths":{"@attributes":{"id":"MATH-US-00037","num":"00037"},"math":{"@attributes":{"overflow":"scroll"},"mtable":{"mtr":{"mtd":[{"mrow":{"mstyle":{"mspace":{"@attributes":{"width":"0.3em","height":"0.3ex"}}},"mo":"\u2062","msup":{"mrow":{"mo":["\uf603","\uf604"],"mrow":{"msub":{"mi":["w","k"]},"mo":"-","mrow":{"munderover":{"mo":"\u2211","mrow":{"mi":["j","k"],"mo":"="},"mi":"K"},"mo":["\u2062","\u2062"],"mstyle":{"mspace":{"@attributes":{"width":"0.3em","height":"0.3ex"}}},"mrow":{"msub":[{"mrow":{"mo":["\u2308","\u2309"],"msub":{"mi":["F","\u03b3"]}},"mi":"kj"},{"mi":["b","j"]}],"mo":"\u2062"}}}},"mn":"2"}}},{"mrow":{"mo":["(",")"],"mn":"63"}}]}}}},"br":{},"figref":"FIG. 17"},{"@attributes":{"id":"p-0214","num":"0219"},"figref":"FIG. 16","b":["205","210","207","210"]},"The purpose of the parameter estimation module, , is to estimate timing, signal amplitudes, phases, polarizations, and identification of active channels. Estimates of the parameters are used to model the channel which is required for application of the matched filter and development of the asynchronous decorrelating filter bank. The parameter estimation module provides the channel model  and the correlation matrix .","The purpose of the  is to design the whitener used in box . Box  utilizes the correlation matrix, , provided by the parameter estimation module to compute the diagonally loaded Cholesky Factorization described in Equation 55. The factorization is used for whitening in box  and used in hypothesis testing in box . Since this approach is an extension of decorrelating decision feedback detection, the concept of ordering the users by \u201cdecreasing received energies\u201d is maintained such that the strongest users are evaluated first. This ordering defines the type of square-root matrix and must be maintained in the hypothesis testing module, . Variations include other ordering techniques, such as SNR based and likelihood based. The approach used in box  includes an asynchronous factorization that exploits the block-banded structure of the correlation matrix. The symbol synchronous problem is a degenerate case and therefore may be addressed by embodiments of the invention. Windowing based techniques may also be employed here.","Box  may also be adapted for reducing wordlengths and improving processing speed. For example, a QR factorization using Householder transformations implemented on a matrix that consists of signature waveform matrix augmented with diagonal matrix requires smaller wordlengths than the Cholesky factorization of the diagonally loaded correlation matrix. Algorithm implementations that use small wordlengths are more suitable for fixed-point processing hardware configurations. In addition, one embodiment of the invention includes the use of Hyperbolic Householder transformations in box  to efficiently update the whitener when only the received energies and\/or phases change between symbol periods.","The square-root factorization of the correlation matrix produced in box  is used to whiten the data in box . Embodiments of the invention can be adapted to cover two approaches to whitening the matched filtered data. The first approach can be based on applying a bank of filters defined by the inverse of the conjugate transpose of the square-root matrix. Since the square-root has been defined with a triangular structure a whitening procedure using back-substitution can be implemented. This alternative approach requires less number of operations.","The whitened data stream exits box  and is passed to box  over the line . The square-root factorization defined in box  is passed to box  over line . This factorization is used in the metrics to sequentially evaluate the bit hypotheses in the decision tree which can be implemented using breadth-first techniques such as the M-algorithm or T-algorithm. Recall, the user ordering used to define the correlation matrix factorization and whitening filter is maintained in the symbol hypothesis testing module, box .","The purpose of box  is to efficiently investigate the more likely bit hypotheses for all K users. In one embodiment, the symbol hypothesis testing conducted in box , is based on sequential evaluation of metric characterizing likelihood of hypotheses described in . This evaluation is based on the metrics described in Equations 61 and 62.","The metric corresponding to a particular user's bit hypothesis at a stage in the decision tree will now be explained in words. The metric consists of the Euclidean distance between the output of the one of the whitening filters along the line  and the hypothesized mean signal energy based on the bit hypothesis for the user in question and the mean signal energy corresponding to the hypotheses selected for users previously tested. This mean signal energy is based on the Cholesky factorization of the diagonally loaded correlation matrix that was computed in box  and provided over line . The metric at each node of the decision tree illustrated in  includes the accumulation of metrics corresponding to previous decisions.","Unlike the decision feedback approaches, decisions are not immediately made. However, the approach considered here is a generalization of the decision feedback techniques and therefore include the decision feedback techniques. This sequential concept was observed in  and Equation 53 by expanding out the terms of the Euclidean distance between all the filter banks samples and the hypothesized mean signal based on arbitrary bit hypotheses. The output of box , are constrained estimates of the symbols for all users in the symbol period of interest, which are reported on line .","Various efficient decision tree search strategies can be employed in box . For example, the M-algorithm is one such approach that restricts the number of hypotheses at each stage to a fixed number. The T-algorithm is similar in nature to the M-algorithm, however, it restricts the number of hypotheses by comparing the accrued metric to a threshold. Variation of this approach and other efficient approaches to decision tree searches will be apparent in light of this disclosure.","There are numerous alternative embodiments for the Co-channel Interference Receiver configured in accordance with the principles of the present invention, as will be apparent in light of this disclosure. For example, the MUD conforms to various Turbo MUD designs and allows different combinations for the MUD core and error correction decoder. The MUD core can comprise MMSE MUD, windowed optimum MUD as well as various M-algorithm implementations. In addition, the convolutional error correction decoder in the turbo loop can comprise soft output Viterbi or soft output BCJR among others.","Embodiments of the invention may be implemented in software, hardware, firmware, or any combination thereof. For instance, the parameter estimation and MUD modules may be implemented in a set of instructions executing on a digital signal processor or other suitable processing environment. Alternatively, the modules can be implemented in purpose built silicon (e.g., ASIC, FPGA, or other system-on-a chip designs).","The foregoing description of the embodiments of the invention has been presented for the purposes of illustration and description. It is not intended to be exhaustive or to limit the invention to the precise form disclosed. Many modifications and variations are possible in light of this disclosure. It is intended that the scope of the invention be limited not by this detailed description, but rather by the claims appended hereto."],"GOVINT":[{},{}],"BRFSUM":[{},{}],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"BRIEF DESCRIPTION OF THE DRAWINGS","p":[{"@attributes":{"id":"p-0022","num":"0021"},"figref":"FIG. 1"},{"@attributes":{"id":"p-0023","num":"0022"},"figref":"FIG. 2"},{"@attributes":{"id":"p-0024","num":"0023"},"figref":"FIG. 3"},{"@attributes":{"id":"p-0025","num":"0024"},"figref":"FIG. 4"},{"@attributes":{"id":"p-0026","num":"0025"},"figref":"FIG. 5"},{"@attributes":{"id":"p-0027","num":"0026"},"figref":"FIG. 6"},{"@attributes":{"id":"p-0028","num":"0027"},"figref":"FIG. 7"},{"@attributes":{"id":"p-0029","num":"0028"},"figref":"FIG. 8"},{"@attributes":{"id":"p-0030","num":"0029"},"figref":"FIG. 9"},{"@attributes":{"id":"p-0031","num":"0030"},"figref":"FIG. 10"},{"@attributes":{"id":"p-0032","num":"0031"},"figref":"FIG. 11"},{"@attributes":{"id":"p-0033","num":"0032"},"figref":"FIG. 12"},{"@attributes":{"id":"p-0034","num":"0033"},"figref":["FIG. 13","FIG. 12"]},{"@attributes":{"id":"p-0035","num":"0034"},"figref":["FIG. 14","FIG. 12"]},{"@attributes":{"id":"p-0036","num":"0035"},"figref":["FIG. 15A","FIG. 14"]},{"@attributes":{"id":"p-0037","num":"0036"},"figref":["FIG. 15B","FIG. 14"]},{"@attributes":{"id":"p-0038","num":"0037"},"figref":["FIG. 15C","FIG. 14"]},{"@attributes":{"id":"p-0039","num":"0038"},"figref":"FIG. 16"},{"@attributes":{"id":"p-0040","num":"0039"},"figref":"FIG. 17"}]},"DETDESC":[{},{}]}
