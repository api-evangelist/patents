---
title: Automated application programming interface (API) system and method
abstract: A method for leveraging email to complete an online transaction from a third party vendor, the method comprising: storing customer information, the customer information including a customer name, customer email address, customer shipping address, and customer billing information. The method further comprises receiving an authorization request from an application programming interface associated with a third party vendor requesting access to a portion of the customer information and receiving confirmation from a customer to allow the third party vendor to access the portion of the customer information. The method further comprising transmitting an access code to the third party vendor and receiving a request message from the third party vendor, wherein the request message comprises the access code, and wherein the request message requests an authorization token. The method may further comprise confirming the received access code and transmitting an authorization token to the third party vendor.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09495679&OS=09495679&RS=09495679
owner: @Pay IP HOLDINGS LLC
number: 09495679
owner_city: Wilmington
owner_country: US
publication_date: 20140317
---

{"@attributes":{"id":"description"},"RELAPP":[{},{}],"heading":["CROSS REFERENCE TO RELATED APPLICATION","FIELD OF INVENTION","BACKGROUND","SUMMARY","DETAILED DESCRIPTION"],"p":["This application claims the benefit of U.S. Provisional Application No. 61\/791,816 filed on Mar. 15, 2013, which is incorporated by reference as if fully set forth.","The present invention is related to e-commerce.","Many companies purchase software as a service (SaaS), platform as a service (PaaS), Infrastructure as a Service (IaaS) or something similar. SaaS is essentially \u201con-demand software\u201d supplied by software vendors where software and associated data are centrally hosted on the cloud. SaaS software can be accessed by customers using a thin client via a web browser. Similarly IaaS is a model wherein a company outsources the equipment for operation, such as storage, hardware, servers and networking components. PaaS is a model allowing customers to rent hardware, operating systems, storage and network capacity over the Internet. However, many companies and non-profit organizations do not like being tied to a monthly fee. Also, the flexibility to customize to a particular business's needs may be limited based on the rules of the SaaS, PaaS, and IaaS provides.","Methods and apparatus are desired allowing companies the flexibility to enable e-commerce transactions.","The application programming interface (API) disclosed herein allows third parties to request two-click payment buttons for inclusion in HTML formatted electronic communications. The methods and apparatus disclosed herein allow the process to be automated and scaled. It also allows access control for button generation at a per-account basis.","A method for leveraging email to complete an online transaction from a third party vendor, the method comprising: storing customer information, the customer information including a customer name, customer email address, customer shipping address, and customer billing information. The method further comprises receiving an authorization request from an application programming interface associated with a third party vendor requesting access to a portion of the customer information and receiving confirmation from a customer to allow the third party vendor to access the portion of the customer information. The method further comprising transmitting an access code to the third party vendor and receiving a request message from the third party vendor, wherein the request message comprises the access code, and wherein the request message requests an authorization token. The method may further comprise confirming the received access code and transmitting an authorization token to the third party vendor.","When used herein, the term \u201ctoken\u201d may refer to a sequence of byte data or a string or a file used to authenticate a transaction. A token may be one or multiple encrypted strings, files, passwords, cyphers or other data which may contain information used to perform or authenticate a transaction when sent to payment servers. These tokens may be encrypted using a public-private key encryption system. The vendor or a party with knowledge of the vendor's private key may generate an encrypted token. Alternatively, a payment system or e-commerce site may generate this token on behalf of the vendor.","Disclosed herein are processor-executable methods, computing systems, and related technologies for an automated application programming interface (API). The system and method may use an email server\/account to complete an e-commerce transaction (e.g., for items\/services\/events\/donations) for a transfer of funds from a customer to a vendor (e.g. retail site, charity, political organization or other vendor.) While the technologies described herein are discussed using e-mail as an example, they may also be applicable to similar communication mediums, such as SMS and MMS communication channels.",{"@attributes":{"id":"p-0023","num":"0022"},"figref":"FIG. 1","b":["100","100","150","120","140","110","110"]},"The customer device  may be, for example, a cellular phone, a smartphone, a desktop computer, a laptop computer, a tablet computer, or any other appropriate computing device. The customer device  includes a processor , memory , a communications unit , a display unit  and web browser unit , which may communicate data to\/from the web server module(s) in the vendor server  and payment server . The web browser unit  may include and\/or communicate with one or more sub-modules that perform functionality such as rendering HTML (including but not limited to HTML5), rendering raster and\/or vector graphics, executing JAVASCRIPT, and\/or rendering multimedia content.","Alternatively or additionally, the web browser unit  may implement Rich Internet Application (RIA) and\/or multimedia technologies such as ADOBE FLASH and\/or other technologies compatible with Internet based communications. The web browser unit  may implement RIA and\/or multimedia technologies using one or web browser plug-in modules (e.g., ADOBE FLASH), and\/or using one or more sub-modules within the web browser unit  itself. The web browser unit  may display data on one or more display devices (not depicted) that are included in or connected to the customer device , such as a liquid crystal display (LCD) display or monitor. The customer device  may receive input from the user of the customer device  from input devices (not depicted) that are included in, or connected to, the customer device , such as a keyboard, a mouse, a microphone or a touch screen, and provide data that indicates the input to the web browser unit .","The vendor server  may include an HTTP server module , a token generator , a button generator , a processor , memory , a payment gateway  and a communications unit .","The HTTP server module  provides a website that may be accessed by a customer device . The HTTP server module  may implement the HTTP protocol, and may communicate Hypertext Markup Language (HTML) pages and related data from the website to\/from the customer device  using HTTP. The vendor server  may be connected to one or more private or public networks (such as the Internet), via which the HTTP server module  communicates with devices such as the customer device . The HTTP server module  may generate one or more web pages and may communicate the web pages to the customer device , and may receive responsive information from the customer device .","The HTTP server module  may be, for example, an NGINX server APACHE HTTP server, a SUN-ONE Web Server, a MICROSOFT INTERNET Information Services (IIS) server, and\/or may be based on any other appropriate HTTP server technology. The vendor server  may also include one or more additional components or modules (not depicted), such as one or more load balancers, firewall devices, routers, switches, and devices that handle power backup and data redundancy.","The payment gateway  may be a proprietary service that directly connects with the payment processors, such as banking server  to handle the credit card data, and authorize credit card payments.","The token generator  may generate tokens for use in e-commerce transactions. Tokens may be encrypted sequence of data which contain information to perform a transaction when sent to the payment server(s) . Additionally or alternatively, a token may be one or multiple encrypted strings, files, passwords, cyphers or other data which may contain information used to perform or authenticate a transaction. A token may include one or more of the following parameters or other parameters not listed below:\n\n","To confirm an e-commerce transaction via email, the customer sends an email embedded with a token to the payment server's  address. The system  is designed to allow the vendor flexibility to offer deals for a limited time or number or responsive to available inventory. For example, the token may be configured to expire by default after two weeks, or any predetermined time, or never expire. The vendor server  may be configured to extend or shorten the expiration time of a particular offer associated with a token without resending an email or generating a new token. Also, the vendor server  may send email updates for an offer associated with a token. This may be predetermined, or may be later set, depending upon demand by customers. Additionally, the vendor server  may generate groups of token values that may automatically invalidate members of the group when one token is processed. This is useful when sending out multiple tokens via email to a single customer or when sending out tokens to multiple customers, but when the vendor wants only one or a predetermined number of tokens to be processed. Therefore when these predetermined number of tokens are used, the other tokens are invalidated, effectively rescinding the offered deal. The vendor server  may further be configured to send email notifications that the previously submitted token is now invalid.","The button generator  may create cross-client and cross-browser compatible buttons for e-commerce transactions. In one embodiment, the button generator  may include the token generator  to automatically generate an associated token for each button that is created. As discussed in greater below, the token generator  and button generator  may be configured to access an API that is stored in memory  and controlled by processor .","The vendor server , using the API, as disclosed herein may communicate with the payment server  to provide information to the button generator  and the token generator . A button and an associated token, generated by the button generator  and\/or the token generator  may be embedded on a web page created by the HTTP server module .","The memory  may be configured to store information associated with e-commerce transactions. This may include inventory information, information used to generate web pages, customer information, and other e-commerce data.","The payment server  may include an HTTP server module , a token generator , a processor , memory , payment gateway  and a communications unit . While only one vendor server  is shown communicating with the payment server , this is shown as only an example but there may be many payment servers . Payment server  may communicate with multiple vendor servers . A customer, wishing to use the services of the payment server , may register his\/her email address and payment information with the payment server . Similarly, vendors may register with the payment server . The payment server  may provide the vendor server  with a public key and private key to be used in token transaction in accordance with the methods described herein. When a transaction is attempted, the payment server  decodes the token, authenticates the sender of the email, and may process the transaction. While the payment server  is depicted as a separate entity in , this is shown as an example only. The payment server  may be controlled and\/or co-located with the vendor server , the banking server .","The banking server  may be controlled by a third party system bank. The payment server  may communicate with the banking server  to verify that the customer has adequate funds or credit for the requested purchase. For example, the banking server  may be a controlled by VISA, AMERICAN EXPRESS, MASTERCARD or any other bank or banking or financial network that a customer may use for online payment. The banking server  may be a server for virtual currencies, such as BITCOIN, etc.",{"@attributes":{"id":"p-0037","num":"0052"},"figref":"FIG. 2","b":["200","150","205","140","210","215","140","120","220","120","225","140","120","230","120","235"]},{"@attributes":{"id":"p-0038","num":"0053"},"figref":["FIG. 3","FIG. 3","FIG. 3"],"b":["140","120","120","120","140"]},"Also shown in , the API also permits the vendor server  to securely generate two-click payment buttons for a customer that has granted permission, from a list of recipient email addresses. The vendor server  transmits an account information request to the payment server , for an account associated with a customer. The payment server  responds by providing the vendor server  with a customer's account information, such as email, username, first name, last name, and an avatar URL. The vendor server  may request a button, and the API provides information for the inclusion of payment buttons in content not being generated directly by payment server .","The API enables an exchange of information between any business entity and payment server , extending a business' application's capabilities with two-click payment technology.","The API may perform an entire transaction invoicing system, and may be applied to any similar email payment technologies. In addition, the API may be used within other companies email marketing systems for the creation of different workflows.","With authentication, there may be a secure workflow, but the email may not be encrypted. In an alternative embodiment, the email may use DomainKeys Identified Mail (DKIM) and\/or Sender Policy Framework (SPF) technology. DKIM provides a method for validating a domain name identity that is associated with a message through cryptographic authentication. SPM is an email validation system designed to prevent email spam by detecting email spoofing. If DKIM and\/or SPF are used for authentication, then tokens unique to each user may be unnecessary.","The API provides an OAuth 2.0 authentication system and a number of endpoints that enable its users to extend an application's capabilities with, for example, a two-click transaction. The system may comprise an API developer dashboard that provides access to client configurations as well as statistical information allowing a user to have access to API performance and status on a real time basis. For example, the API Dashboard may comprise a user interface to manage API information. Clients may be able to reset security keys, add OAuth client and update Postback URL.",{"@attributes":{"id":"p-0044","num":"0059"},"figref":"FIGS. 4-11","b":["155","150","150","155","155","120","140"]},"The web browser window may include a control area  that includes a back button , forward button , refresh button , home button , and address field . The control area  may also include one or more additional control elements, such as bookmark page etc. The user of the customer device  may select the control elements in the control area . The selection may be performed, for example, by clicking a mouse or providing input via keyboard, touch screen, and\/or other type of input device. When one of the control elements is selected, the web browser unit  may perform an action that corresponds to the selected element. For example, when the refresh button  is selected, the web browser unit  may refresh the page currently viewed in the web browser window.",{"@attributes":{"id":"p-0046","num":"0061"},"figref":["FIG. 4","FIG. 4"],"b":["410","411","414","411","413","150","411","414","155","155","410","414","510"]},{"@attributes":{"id":"p-0047","num":"0062"},"figref":["FIG. 5","FIG. 5"],"b":["510","140","510","511","516","511","515","150","511","515","155","155","510","516","610"]},{"@attributes":{"id":"p-0048","num":"0063"},"figref":["FIG. 6","FIG. 6"],"b":["610","140","610","610","617","611","616","150","610","617","155","155","610","617","710"]},{"@attributes":{"id":"p-0049","num":"0064"},"figref":["FIG. 7","FIG. 7"],"b":["710","140","710","712","713","711","712","713","150","712","713","155","155","710","713","810"]},{"@attributes":{"id":"p-0050","num":"0065"},"figref":["FIG. 8","FIG. 8"],"b":["810","810","811","812","810","150","811","812","155","811","812","155","810"]},{"@attributes":{"id":"p-0051","num":"0066"},"figref":["FIG. 9","FIG. 9","FIG. 9"],"b":["910","150","120","910","911","912","911","150","811","812","155","155","810","155","913","914","915","913","150","915","914"]},{"@attributes":{"id":"p-0052","num":"0067"},"figref":["FIG. 10","FIG. 9","FIG. 10"],"b":["910","150","120","915","155","910","916","916"]},{"@attributes":{"id":"p-0053","num":"0068"},"figref":["FIG. 11","FIG. 9","FIG. 11","FIG. 11"],"b":["910","150","120","915","155","917","918","917","120","140","120","120","120","140"]},"To perform a transaction, such as the transaction showed in , an application may generate a \u201cclient\u201d record for each of its environments. The vendor server  copies keys for each client and securely stores them for later use in application development.","A vendor logs in and creates a client, this may allow them begin processing authentications.","Once the vendor server  has created a client, customers, operating customer devices  connect their accounts to a vendor server's  application e.g. via OAuth 2.0. This may allow the payment server  to make basic account information, such as the information entered in input fields , -, and - to be available to the vendor server .","This basic information may be available to the vendor server  by transmitting a request. This request may be, e.g. \u201cGET\/api\/account\/show\u201d. To prevent unauthorized requests, the request may require an access token.","The payment server  may respond as follows:",{"@attributes":{"id":"p-0059","num":"0074"},"tables":{"@attributes":{"id":"TABLE-US-00001","num":"00001"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"thead":{"row":{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"{"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"189pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"\u201cemail\u201d: \u201capi@atpay.com\u201d,"]},{"entry":[{},"\u201cusername\u201d: \u201capi@atpay.com\u201d,"]},{"entry":[{},"\u201cname\u201d: \u201cAPI User Example\u201d,"]},{"entry":[{},"\u201cfirst_name\u201d: \u201cAPI User\u201d,"]},{"entry":[{},"\u201clast_name\u201d: \u201cExample\u201d,"]},{"entry":[{},"\u201cavatar\u201d:"]},{"entry":[{},"\u201chttps:\/\/secure.atpay.com\/images\/missing_avatar_small.png\u201d"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"}"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}]}}]}}},"The following parameters may be entered in a request:",{"@attributes":{"id":"p-0061","num":"0076"},"tables":{"@attributes":{"id":"TABLE-US-00002","num":"00002"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"49pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"168pt","align":"left"}}],"thead":{"row":[{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}},{"entry":["Param name","Description"]},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}}]},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["oauth_token","The Access Token corresponding to the user you wish to"]},{"entry":["required","get info for."]},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}}]}}}},"ul":{"@attributes":{"id":"ul0003","list-style":"none"},"li":{"@attributes":{"id":"ul0003-0001","num":"0000"},"ul":{"@attributes":{"id":"ul0004","list-style":"none"},"li":"Value: String"}}}},"Referring back to , input buttons  and  are examples of payment buttons. The payment button is the nucleus of @Pay's technology. When included in an outgoing email to a member, it packages the two-click transaction and enables seamless email checkout from within the customer's email client. When included in an outgoing email to a non-member, it provides the ability to quickly sign up with the payment server  and process a transaction with a vendor server  through the web interface. The API enables the vendor server  to generate payment buttons for inclusion in outgoing emails. The API allows the vendor server  to create HTML Payment Buttons. This endpoint requires the \u2018buttons\u2019 scope. To create a button, the API associated with the vendor server  may generate a request from the payment server . A request may include the following parameters: access token, amount, and email.","An example scenario is shown below. In this scenario bob@test.com has an account with the payment server  while tim@test.net does not.","An example response, when a request for a button sent is as follows:",{"@attributes":{"id":"p-0065","num":"0081"},"tables":{"@attributes":{"id":"TABLE-US-00003","num":"00003"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"thead":{"row":{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"["]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"189pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"{ \u201cemail\u201d: \u201cbob@test.com\u201d, \u201camount\u201d: \u201c20.00\u201d, \u201cbutton\u201d:"]},{"entry":[{},"<key_button> },"]},{"entry":[{},"{ \u201cemail\u201d: \u201ctim@test.net\u201d, \u201camount\u201d: \u201c20.00\u201d, \u201cbutton\u201d:"]},{"entry":[{},"<link_button> }"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"]"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}]}}]}}},"The difference between a key_button and a link_button is the interpolation of {{url}} in the Button Template. A key_button {{url}} is replaced with a mailto link, while a link_button puts a regular link in the {{url}} spot.","The API at the vendor server  may generate mailto links for any email address associated with a customer account with the payment server . Any address that is not identified by the payment server  generates a link which may be used to make a purchase, but the customer is directed to the payment server  website to complete the purchase and sign up.","Parameters associated with a button generated by the API may include the following:","Params",{"@attributes":{"id":"p-0070","num":"0086"},"tables":{"@attributes":{"id":"TABLE-US-00004","num":"00004"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"49pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"168pt","align":"left"}}],"thead":{"row":[{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}},{"entry":["Param name","Description"]},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}}]},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["amount","For example, the amount of the transaction"]},{"entry":["email","A list of email addresses that will be receiving the"]},{"entry":[{},"message."]},{"entry":["oauth_token","The Access Token ID corresponding to the user you wish"]},{"entry":[{},"to build buttons for."]},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}}]}}}}},"As discussed above, the API may include an authorization procedure. For example, the API may use OAuth2 for authorization and authentication to all available endpoints.","The vendor server  may include an application to create a client record on the payment server , granting it API access and identifying it with a pair of cryptographic signatures. The vendor server  may create multiple client records for each environment in the application.","A customer, using a customer device  may access the vendor server  via a website. The customer connects their account with the vendor server's  application, granting the vendor server  the ability to take action on behalf of the customer part over resources stored at the payment server . This action may be similar to the \u201cLog in with\u201d options provided by services such as GOOGLE, FACEBOOK and GITHUB. The vendor server's  application begins this authentication process by redirecting to the authorization endpoint with information about the client record identification, and predetermined redirect URLs. The vendor server's  authorization client library (e.g. OAuth 2.0) may perform the generation of this authorization URL.","If the customer is a registered with the payment server , but not logged in, they will be prompted to do so. After successfully authenticating customer credentials, the customer may be redirected to another page on the payment server's  website where the customer will be prompted to enter an input to either Accept or Deny an application access to the scopes the vendor server  requested. After selecting an option, customer is redirected back to the vendor server , and the vendor server  may request an authorization token with the code sent by the payment server  in the redirect. This token is used in subsequent requests by the vendor server  application to access the payment server's  API endpoints.","The life of the token may not be related to the session state of the customer. The customer may log in or out of the payment server  or the vendor server  application and not affect the usability of the token itself. This allows the vendor server  to perform requests with this token in scheduled tasks and background processes.","The payment server  API may be configured to allow a vendor server  to refresh a token when it expires, and handle invalid token requests with authorization on part of the customer.","An API core controlled by the processor  may generate a security key that may be as a mailto link. The key is validated based on whether it matches the email that it came from, and is tied to no transaction or workflow. Its validation is just a validation, and is not related to a transaction\u2014it may provide the ability to process a two-click e-commerce transaction. The key may be linked to autopilot or built into one or more applications.",{"@attributes":{"id":"p-0078","num":"0094"},"figref":["FIG. 12","FIG. 12"],"b":["120","1211","1221","1200","1200","1202","1210","1220","1211","1221","1211","1221","1211","1221","150","140","140","1202"]},"While the examples described herein show a customer device  accessing the e-commerce features using a web browser, it should be understood that this is just one example. The methods described herein may be performed by different types of customer devices  such as a mobile phone, tablet, personal computer etc. The customer device  may perform e-commerce transactions using, e.g., a web browser, an app, a program installed on a personal computer, etc.","As used herein, the term \u201cprocessor\u201d broadly refers to and is not limited to a single- or multi-core processor, a special purpose processor, a conventional processor, a Graphics Processing Unit (GPU), a digital signal processor (DSP), a plurality of microprocessors, one or more microprocessors in association with a DSP core, a controller, a microcontroller, one or more Application Specific Integrated Circuits (ASICs), one or more Field Programmable Gate Array (FPGA) circuits, any other type of integrated circuit (IC), a system-on-a-chip (SOC), and\/or a state machine.","As used to herein, the term \u201ccomputer-readable medium\u201d broadly refers to and is not limited to a register, a cache memory, a ROM, a semiconductor memory device (such as a D-RAM, S-RAM, or other RAM), a magnetic medium such as a flash memory, a hard disk, a magneto-optical medium, an optical medium such as a CD-ROM, a DVDs, or Bluray-Disc, or other type of device for electronic data storage.","Although the methods and features described above with reference to  are described above as performed using the example system  of , the methods and features described above may be performed, mutatis mutandis, using any appropriate architecture and\/or computing environment. Although features and elements are described above in particular combinations, each feature or element can be used alone or in any combination with or without the other features and elements. For example, each feature or element as described above with reference to  may be used alone without the other features and elements or in various combinations with or without other features and elements. Sub-elements of the methods and features described above with reference to  may be performed in any arbitrary order (including concurrently), in any combination or sub-combination."],"BRFSUM":[{},{}],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"BRIEF DESCRIPTION OF THE DRAWINGS","p":["A more detailed understanding may be had from the following description, given by way of example in conjunction with the accompanying drawings wherein:",{"@attributes":{"id":"p-0009","num":"0008"},"figref":"FIG. 1"},{"@attributes":{"id":"p-0010","num":"0009"},"figref":"FIG. 2"},{"@attributes":{"id":"p-0011","num":"0010"},"figref":"FIG. 3"},{"@attributes":{"id":"p-0012","num":"0011"},"figref":"FIG. 4"},{"@attributes":{"id":"p-0013","num":"0012"},"figref":"FIG. 5"},{"@attributes":{"id":"p-0014","num":"0013"},"figref":"FIG. 6"},{"@attributes":{"id":"p-0015","num":"0014"},"figref":"FIG. 7"},{"@attributes":{"id":"p-0016","num":"0015"},"figref":"FIG. 8"},{"@attributes":{"id":"p-0017","num":"0016"},"figref":"FIG. 9"},{"@attributes":{"id":"p-0018","num":"0017"},"figref":"FIG. 10"},{"@attributes":{"id":"p-0019","num":"0018"},"figref":"FIG. 11"},{"@attributes":{"id":"p-0020","num":"0019"},"figref":"FIG. 12"}]},"DETDESC":[{},{}]}
