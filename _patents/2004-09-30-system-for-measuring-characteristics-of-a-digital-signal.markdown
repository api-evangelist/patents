---
title: System for measuring characteristics of a digital signal
abstract: An electronic device under test (DUT) responds to a digital input signal by generating a digital DUT output signal conveying a repetitive digital signal pattern. An apparatus for measuring various characteristics of the DUT output signal includes a trigger generator for generating a series of trigger signal edges in response to selected DUT output signal edges occurring during separate repetitions of the digital signal pattern. The trigger generator can be configured to generate each trigger signal edge in response to the same or a different edge of the digital signal pattern. The apparatus determines when a DUT output signal edge occurs by determining when the DUT output signal rises above or falls below adjustable reference voltages. The apparatus alternatively responds to each trigger signal edge by measuring a period between two different edges of the digital signal pattern and or by repetitively sampling the DUT output signal to determine its state.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=07409617&OS=07409617&RS=07409617
owner: Credence Systems Corporation
number: 07409617
owner_city: Milpitas
owner_country: US
publication_date: 20040930
---

{"@attributes":{"id":"description"},"BRFSUM":[{},{}],"heading":["BACKGROUND OF THE INVENTION","BRIEF SUMMARY OF THE INVENTION","DETAILED DESCRIPTION OF THE INVENTION"],"p":["1. Field of the Invention","The invention relates in general to automated test equipment, and in particular to a system for measuring characteristics of a digital signal including its jitter, analog noise levels, period, frequency, skew, and rise and fall times.","2. Description of Related Art","Digital integrated circuits (ICs) communicate through digital data signals, and when a transmitting IC transmits a digital data signal to a receiving IC, the transmitter typically synchronizes state changes in the digital data signal to leading (or trailing) edges of a periodic clock signal so that the state changes within the data signal will occur at predictable times. To produce a data sequence represented by successive states of the digital signal, the receiver need only digitize the data signal with an appropriate sampling phase and frequency. In some communication systems, a transmitter sending a digital data signal to a receiver also sends a clock signal to the receiver for controlling the timing with which the receiver samples the data signal. In other communication systems the receiver may include a \u201cclock recovery\u201d system for generating the sampling clock signal locally, using a feedback control system to adjust the phase and frequency of the sampling clock signal based on an analysis of data the receiver acquires by observing the data signal.",{"@attributes":{"id":"p-0006","num":"0005"},"figref":["FIG. 1","FIG. 1"],"sub":"PP ","b":["10","11","12","14","15"]},"Variation in signal edge timing (jitter) can be random or deterministic. Random jitter arises from random noise in the transmitting IC or in the signal path conveying the signal to the receiving IC. Noise in the signal path conveying the data signal to the receiving IC can introduce jitter into the data signal. In a system where the transmitter sends a clock signal to the receiver, noise in the clock signal path can also cause the receiving IC to perceive the data signal to be jittery relative to the clock signal. In a receiving IC employing a clock recovery system to generate a local clock signal, feedback errors or noise in the clock recovery system can cause jitter in the clock signal, thereby causing the data signal to appear jittery relative to the clock signal. Random jitter renders the timing of each signal edge somewhat non-deterministic in that is not possible to predict the amount of timing error in any individual signal edge arising from random noise.","Deterministic jitter arises from inherent characteristics of the transmitting and receiving ICs and the signal path interconnecting them. For example all signal paths delay signal edges by an amount that is a function of signal frequency. When a digital data signal conveys a bit pattern such as {01010101 . . . }, it will act as a relatively higher frequency signal than when it conveys a bit pattern such as {00000111110000011111 . . . }. Thus the amount by which a signal path delays an edge of such a signal depends on the particular data pattern the signal currently conveys. This \u201cpattern-dependant\u201d jitter is deterministic in that timing error in each data signal edge due to pattern-dependant jitter for a given pattern is predictable based on the nature of the pattern and on characteristics of the channel hardware. Deterministic jitter that is not pattern-dependant can arise, for example, from periodic noise that is coherent with the clock signal the transmitting IC uses to time edges.",{"@attributes":{"id":"p-0009","num":"0008"},"figref":["FIG. 2","FIG. 2","FIG. 2"]},"Since a receiver periodically samples a digital signal between transitions to determine the data sequence it represents, it can tolerate some amount of jitter, but when a digital signal is too jittery, the receiver will not be able to correctly determine each successive state of the digital signal from the samples it acquires because it will sometimes sample the signal to soon or too late. Digital system specifications therefore require that the amount of jitter in a digital signal remain within acceptable limits. One measure of jitter, called \u201cpeak-to-peak jitter\u201d corresponds to the width of the shaded area of  at the nominal crossover point , representing a difference in relative timing of earliest and latest arriving signal edges. System specifications typically require peak-to-peak jitter to remain within a predetermined limit.","A receiver can also tolerate some amount of noise induced variation in the voltage of its signal logic levels, but when the variation becomes too large, it will not be able to correctly determine the logic level represented by each sample because the signal may sometimes may fail to be on the correct side of the midpoint voltage at the moment the receiver samples it. Digital system specifications therefore require that the amount of voltage variation in a digital signal remain within acceptable limits. For example, some digital system specifications require that difference between the lowest detected high logic level and the highest detected low logic level (the \u201cvertical eye opening\u201d shown in ) to be no smaller than some specified minimum.","To determine whether an IC can tolerate a specified amount of jitter or logic level variation, some testers can add a specified amount of jitter to one or more of the IC's input data or clock signals while monitoring the IC's output signals to determine whether the digital output signals exhibit their expected sequences of logic states. It would also be beneficial if an IC tester could also measure the amount of jitter and logical level variation in an IC's digital output signal to determine whether they are within specified limits. It would further be helpful if the tester could also measure other characteristics of a digital signal including, for example, period, skew and rise and fall times.","The invention relates to a method or apparatus for measuring characteristics of a digital signal produced by an electronic device under test (DUT) when the DUT generates an output signal conveying a repetitive digital signal pattern.","In accordance with the invention, rising and falling edges of the DUT output signal are detected when the DUT output signal rises above or falls below adjustable reference voltages, and one or more trigger signal edges are generated in response to selected DUT output signal edges occurring during separate repetitions of the digital signal pattern. The trigger generator can be configured to generate each trigger signal edge in response to the same or a different edge of the digital signal pattern during successive repetitions of the pattern. The apparatus can be configured to respond to each trigger signal edge by measuring a period between two selected signal edges occurring after the trigger signal edge. Depending on the magnitudes of the reference voltage levels used when detecting trigger signal edges and on the source of the two signal edges, the measured period between the two edges can represent, for example, the rise or fall time of the DUT output signal, a period between rising and or falling edges of the DUT output signal, or the skew between an edge of a DUT output signal and a reference timing signal. By performing measurements of periods between edges of the DUT output signal in response to many successive trigger signal edges, the resulting period measurements can be analyzed to determine either deterministic or non-deterministic jitter in the DUT output signal, depending on whether the trigger signal edges are generated in response to the same or different edges of the DUT output signal.","The apparatus also includes a digitizing circuit for repeatedly sampling the DUT output signal at an adjustable period and phase following each trigger signal edge and generating data indicate the DUT output signal state during each sample. The data can be used, for example, to control a display of the DUT output signal waveform similar to that produced by a conventional sampling oscilloscope.","The claims appended to this specification particularly point out and distinctly claim the subject matter of the invention. However those skilled in the art will best understand both the organization and method of operation of what the applicant(s) consider to be the best mode(s) of practicing the invention, together with further advantages and objects of the invention, by reading the remaining portions of the specification in view of the accompanying drawing(s) wherein like reference characters refer to like elements.","The invention relates in general to automated test equipment, and in particular to a system for measuring characteristics of a digital signal including, for example, jitter, noise, period or frequency, skew, rise time and fall time. While the specification describes in detail an exemplary embodiment of the invention considered a best mode of practicing the invention, those of skill in the art will appreciate that other modes of practicing the invention may not include many of the details of the exemplary embodiment of invention described or may implement such details in other ways.",{"@attributes":{"id":"p-0035","num":"0034"},"figref":"FIG. 3","b":["22","22","26","24","28","30","29","26","24","24"]},"Tester  also includes one or more measurement channels  in accordance with the invention, each capable performing various measurements on a digital DUT output signal. Such measurements enable host computer  to determine, for example, the amount of random and deterministic jitter in the DUT output signal, the amount of variation in its logic levels, its period or frequency, its rise and fall times, and its skew relative to a reference signal. Each measurement channel  can also transmit a high speed digital input signal to DUT , and can add a controlled amount of jitter to the DUT input signal for testing the DUT's jitter tolerance. Channels  are particularly suited for measuring characteristics of high frequency digital signals such as serialization\/deserialization (SERDES) signals where noise and jitter can be particularly problematic.",{"@attributes":{"id":"p-0037","num":"0036"},"figref":"FIG. 4","b":["32","32","47","50","51","47","33","34","48","49","49","33","34","48","50","53","47","50"]},"Host computer  can program the conventional receiver circuit  with programming data supplied via bus , FPGA  and serial interface  to receive a DUT output signal VR, to determine whether the data sequence it represents exhibits an expected bit pattern, and to report the results back to host computer . The nature of receiver circuit  depends on the nature of DUT output signal VR. When the VR signal is a high-speed serial signal such as a SERDES signal, receiver circuit  may include a clock recovery system for deriving the receiver's sampling clock from VR and circuits for de-serializing and decoding the data sequence. Alternatively receiver circuit  may be clocked by a clock signal (CLOCK) supplied by the DUT or by the tester's master clock MCLK.","IC  also implements a transmitter circuit  for transmitting a test signal VT input to a DUT terminal. During a test in which transmitter circuit  is to supply a test signal to DUT , FPGA  supplies a digital drive signal D via serial interface circuit  and a multiplexer  to an input of a tri-state driver , and supplies a tri-state control signal Z to driver . During portions of a test in which the test signal VT is to exhibit a controlled amount of jitter, bus interface circuit  signals multiplexer  to select the output of a jitter generator  as input to driver . Jitter generator  variably delays drive signal D to add an amount of jitter to the test signal VT. Before the start of a jitter test, host computer  of  writes control data into jitter generator  via FPGA  and serial interface  defining characteristics of the jitter to be added to VT.","In accordance with the invention, channel  also includes a measurement circuit  capable of measuring various characteristics of DUT output signal VR and generating data describing those signal characteristics. FPGA  processes that data and provides an interface between Measurement circuit  and bus . Channel  also includes a random access memory (RAM):  that FPGA  uses for storing data. Receiver circuit , transmitter circuit  and measurement circuit  are implemented on the same integrated circuit  which includes a high speed serial interface  providing a data communication link between FPGA  and the other devices implemented within IC . Jitter generators are well known to those of skill in the art.","Measurement circuit  has two basic functions, digitizing and time measurement. When acting as a digitizer, measurement circuit  periodically samples the DUT output signal VR several times in succession and generates sample data in which each bit indicates whether a corresponding sample of the VR signal is above or below a threshold level. When performing time measurements, measurement circuit  measures an interval between two successive signal edges and produces data indicating the results of the interval measurement. FPGA  responds to commands and control data from host computer  of  by configuring measurement circuit  to carry out one or more digitizing or time measurement operations. As discussed in more detail below, FPGA  can also process the data output of measurement circuit  to generate results data depicting various characteristics of DUT output signal VR. Host computer  can then access the results data via bus .","Measurement Circuit",{"@attributes":{"id":"p-0042","num":"0041"},"figref":["FIG. 5","FIG. 4"],"b":["48","48","48","61","2"]},"Measurement circuit  also includes a time measurement unit (TMU)  for responding to an ARM signal edge by measuring a period between edges of two signals (CLKl and CLK) and by providing output data CNTl and CNT representing the measured period.","A trigger circuit  generates edges of a trigger signal TRIG in response to selected edges of another signal CLKSEQ. A multiplexer  may select either the TRIG signal or an ARM signal supplied by FPGA  as the source of the ARM signal input to TMU , or may disable TMU  by selecting a hard-wired 0 as the ARM signal input to TMU .","A multiplexer  selects sources of the CLK, CLK and CLKSEQ signals from among a set of signals V, V, JITTER and ARM. A comparator  drives V high whenever the DUT output signal VR rises above a voltage VH provided by a digital-to-analog converter (DAC)  and drives V high when VR falls below a voltage VL generated by a DAC . The JITTER signal is the signal appearing at the output of jitter generator  of . FPGA  supplies the ARM signal.","FPGA  of  writes control data into a set of control registers  via serial interface  for controlling multiplexers  and , for controlling the output voltages VH and VL of DACs  and , and for controlling various operating modes of trigger circuit  and TMU .","Digitizer","Digitizer  includes a synchronizing circuit  for responding to an edge of the TRIG signal output of trigger circuit  by triggering a triggered oscillator  on the next edge of the CLK signal. Control data in registers  controls the phase and frequency of the output OSC of oscillator . The OSC clocks a sampling circuit  which acquires a sample of the CLK signal on the first  leading edges of the OSC signal and stores a bit of its 12-bit output word SDATA resenting the sampled state of the CLK signal. Sampling circuit  transmits a FINISHED signal to FPGA  to indicate when it has acquired all 12 samples. A RESET signal from FPGA  resets synchronizer , oscillator  and sampling circuit  to enable them to acquire another set of 12 samples in response to a next TRIG signal edge.",{"@attributes":{"id":"p-0048","num":"0047"},"figref":["FIG. 6","FIG. 5"],"b":["61","50","60","50","60","62","63","3","56","64","2"]},"Time Measurement Unit",{"@attributes":{"id":"p-0049","num":"0048"},"figref":["FIG. 7","FIG. 5","FIG. 8","FIG. 7","FIG. 5"],"b":["66","1","2","65","66","68","80","81","1","82","1","83","2","84","2","50","1","2","82","1","84","2","68","2","50","82","84"]},"T and T signal edges  and  respectively trigger a pair of triggered oscillators  and  producing output signals OSC and OSC having slightly differing periods. A pair of multiplexers  and  controlled by data in registers  of  delivers OSC and OSC to clock inputs of a pair of counters  and . Counters  and  count cycles of the OSC and OSC signals. A coincidence detector  sets the FINISHED signal true at time  when the leading edges  and  of the OSC and OSC signals coincide. The FINISHED signal disables counters  and  so that they halt their counts and signals FPGA  of  to acquire and process the count data CNT and CNT. After acquiring the CNT and CNT data, FPGA  pulses the RESET signal to reset the T and T outputs of trigger logic circuit  so that oscillators  and  stop generating OSC and OSC. The RESET signal also resets coincidence detector  so that it begins looking for another coincidence in OSC and OSC, and resets counters  and . The time delay (DELAY) between CLK signal edge  and CLK edge  can be determined from the CNT data alone. See U.S. Pat. No. 6,295,315 issued Sep. 25, 2001 to Frisch et al, incorporated herein by reference, for a description of a related TMU.","Trigger Circuit",{"@attributes":{"id":"p-0051","num":"0050"},"figref":["FIG. 9","FIG. 5","FIG. 4","FIG. 5"],"b":["60","60","2","2","50","60","28","60","1","2","6","2","66"]},"When the CLKSEQ signal conveys a repetitive pattern, trigger circuit  can produce (at most) a single TRIG signal pulse during each repetition of the pattern when enabled by the START signal from FPGA . In a repetitive triggering mode, trigger circuit  always generates a TRIG signal pulse in response to the same particular edge of the repetitive pattern. Before generating the START signal, FPGA  transmits a SYNC signal to trigger circuit  indicating when a particular edge of the CLKSEQ signal pattern has arrived. When the CLKSEQ signal pattern includes a known number N of edges, with the value of N being supplied by control registers  of , then the SYNC signal enables trigger circuit  to thereafter keep track of the current position of the CLKSEQ signal with the representative pattern by counting edges of the CLKSEQ signal. With the START signal from FPGA  asserted, then after receiving the SYNC signal, trigger circuit  generates a first TRIG signal edge on the Krising edge of the CLKSEQ pattern following assertion of the SYNC signal, where K is input data supplied by control registers  of . If the repetitive pattern has N edges, numbered from N-1 to 0 starting with the first edge following the SYNC signal edge and ending with the Nth edge, trigger circuit  generates a first TRIG edge on the first occurrence of the Kth edge following the SYNC signal. Control data (K) stored in registers  of  sets the value of K.","In an \u201cequivalent time\u201d triggering mode, trigger circuit  generates each edge of successive set of N TRIG signal edges in response to a different edge of the CLKSEQ pattern, with the edges being selected in sequential order starting with the edge selected by K. Trigger circuit  generates each of the next N-1 TRIG signal edges during successive repetitions of the pattern in the CLKSEQ signal on an occurrence of a separate one of the other N-1 edges","In a \u201crepetitive\u201d triggering mode, trigger circuit  generates the TRIG signal generates each edge of successive set of N TRIG signal edges in response to same selected edge of the CLKSEQ pattern.","Trigger circuit  includes a counter  for responding to the SYNC edge by generating a data sequence CURRENT_EDGE by counting down from N-1 to 0 in response to successive leading edges of the CLKSEQ signal. Counter  restarts its count down at N-1 each time its count reaches 0. Input control data supplies the value of N where N is the number of leading edges in the repetitive pattern in the CLKSEQ signal. The pattern should always start with a rising edge and end with a falling edge. Thus the CURRENT_EDGE data indicates a number of the current edge of the CLKSEQ signal within the repetitive pattern. A peak-to-peak jitter operates in either of two modes selected by MODE control data from data processing unit  of .","In the repetitive triggering mode, counter  sets output data NEXT_TRIG equal to K when FPGA  toggles an INIT bit in control registers  of  and thereafter keeps NEXT_TRIG at that value. This causes trigger circuit  to produce all TRIG signal pulses in response to the same Kedge of the repetitive CLKSEQ pattern. In the equivalent time triggering mode, pattern generator initially sets its NEXT_TRIG output data equal to K but changes its value in response to the next CLKSEQ edge each time the TRIG signal is asserted. Thus whenever CURRENT_EDGE matches NEXT_TRIG, comparator  and AND gate  assert the TRIG signal, provided the START signal is true, and the TRIG signal tells counter  to select another value for NEXT_EDGE in response to the next CLKSEQ edge. After trigger circuit  has generated N TRIG signal edges in the equivalent time triggering mode, counter  will have set NEXT_EDGE to every value between 0 and N-1 with values occurring in consecutive order beginning with STARTCNT and will then continue to repeat the same TRIG signal edge pattern as long as FPGA  continues to assert the START signal.",{"@attributes":{"id":"p-0057","num":"0056"},"figref":["FIG. 10","FIG. 4","FIG. 4","FIG. 10"],"b":["60","50","56","56","91","91","50","93","90","92","93","91","50","66","5","50","66","92","93"],"sup":"th "},"When the MODE bit sets trigger circuit  for the repetitive mode of operation, peak-to-peak jitter sets NEXT_TRIG to the value of K and keeps it there so that NEXT_TRIG always has the same value. Thus when START is asserted, trigger circuit  always produces a TRIG signal edge when CURRENT_EDGE matches the value of K. Trigger circuit  therefore always produces TRIG signal edges in response to the same edge of the repetitive CLKSEQ signal pattern.","Operating Modes","Host computer  writes control data into registers  to configure measurement circuit  of  to operate in any of several operating modes.","In a \u201cScope\u201d operating mode digitizer  acquires samples of the CLK signal in response to the TRIG signal to produce data (SDATA) that can be used, for example, to control waveform displays similar to those produced by a sampling oscilloscope.","In a \u201cFrequency\u201d operating mode TMU  measures the frequency or period of a signal and returns the results as CNT data.","In a \u201cVernier\u201d operating mode, TMU  measures a period between edges of the CLK and CLK signals in response to a single TRIG signal edge.","In a \u201cSequencing\u201d operating mode TMU  performs a series of period measurements in response to a succession of TRIG signal edges.","In a \u201cCalibratel\u201d operating mode, TMU  measures periods of its internal oscillator output signals OSC and OSC for purposes of calibrating oscillators  and  of ","In a \u201cCalibrate\u201d operating mode, TMU  measures a period of OSC for purposes of calibrating oscillator  of .","High Level Commands","FPGA  responds to the following high level commands from host computer : PERIOD, READCNTR, SYNCHRONIZE, SINGLEMEASURE, HISTOGRAM, LOGGING, and BINNING.","The PERIOD command tells FPGA  to assert the ARM signal for a known period of time and to signal TMU  to count the number of cycles of the CLK and CLK signals occurring between the rising and falling edges of the ARM signal. Since FPGA  asserts the ARM signal for a predetermined number of cycles of the FPGA's master clock (MCLK), each count (CNTl and CNT) reaches a value during that time that is proportional to the frequency of the signal whose edges are being counted. In particular, the signal frequency is equal to the product of the MCLK (signal frequency and the count, divided by the number of MCLK cycles FPGA  asserts the ARM signal.","The PERIOD command therefore enables the host computer to determine the frequency (or period) of each of the CLK and CLK signals.","With measurement circuit  configured for Calibratel or Calibrate operating modes, those signals could be the output signals of any two of the three adjustable frequency oscillators (, , ) within measurement circuit  used as timing references during digitizing and time measurement operations. The resulting data enables host computer  to calibrate the operating frequencies of those oscillators.","With measurement circuit  configured for the Frequency operating mode, the PERIOD command enables host computer  to determine the period or frequency of the sources of signals CLK and CK supplied by a multiplexer  controlled by control data stored in control registers . Multiplexer  selects the sources of CLK and CLK signal from among a JITTER signal, an ARM signal and a pair of signals V and V produced by a comparator . When the host computer configures jitter generator  of  to generate a periodic JITTER signal, the host computer can use the PERIOD command to have TMU  measure the period of the JITTER signal. The resulting data TMU  generates enables host computer  to calibrate jitter generator . The V and V signals are derived from the DUT output signal VR. Signal V is true when VR is higher in voltage than a signal VH produced by a digital-to-analog converter (DAC)  controlled by data stored in registers . Signal V is true when VR is lower in voltage than a signal VH produced by a digital-to-analog converter (DAC)  controlled by data stored in registers . Host computer  could use a PERIOD command to have TMU  measure the period (and therefore the frequency) of DUT output signal VR when it is a periodic signal by measuring the period between edges of the V or V signal. FPGA  generates the ARM signal with a period that is a multiple of the period of the MCLK signal. The host computer can use the PERIOD command to measure the period of the ARM signal.","The READCNTR command tells FPGA  to read one of the data outputs (CNT) of TMU , when CNT conveys the count TMU  produces in response to a PERIOD command.","The SYNCHRONIZE command tells FPGA  to assert a synchronization signal (SYNC) on occurrence of a particular point in a repetitive pattern appearing the CLKSEQ signal. As discussed above, the SYNC signal synchronizes the timing of TRIG signal edges trigger circuit  to an identifiable point in the CLKSEQ signal pattern. Host computer  sends a SYNCHRONIZE command to FPGA  before sending it a command requiring the use of trigger circuit ","The SINGLEMEASURE command tells FPGA  to use TMU  to measure the time difference between leading edges of the CLK and CLK signals. For example, it is possible for TMU  to measure the skew of DUT output signal VR by measuring the period between an edge of the VR signal and an edge of the ARM signal. Host computer  may issue a SINGLEMEASURE command with measurement circuit  either in the Vernier, Sequencing or Scope operating mode.","In the vernier mode, the SINGLEMEASURE command tells FPGA  to transmit an ARM signal edge to a multiplexer  to supply the ARM signal input to TMU . The ARM signal edge tells TMU  to carry out the measurement relative to the next two leading edges of the CLK and CLK signal. The output data CNT and CNT of TMU  indicates the measured period between those two CLK and CLK signal edges. A CLK_FIRST bit TMU  provides indicates whether the CLK edge occurred before the CLK edge. TMU  sets the FINISHED bit to indicate when the measurement is complete and the CNT and CNT data is ready","A sequencing mode SINGLEMEASURE command is similar to a vernier mode SINGLEMEASURE command except that trigger circuit  supplies a trigger signal (TRIG) for controlling the ARM signal input to TMU . Trigger circuit  asserts the TRIG signal repeatedly, synchronizing it to selected edges of the CLOCKSEQ signal. TMU  may make more than one measurement in response to a sequencing mode SINGLEMEASURE command. Host computer  supplies control data to FPGA  indicating the number of measurement repetitions to be performed. For example, when the CLKSEQ signal is derived from a DUT output signal VR conveying a repetitive pattern, FPGA  can set a MODE control bit in registers  to tell trigger circuit  to operate in a repetitive triggering mode where it asserts the TRIG signal repeatedly at the same point in the pattern so that TMU  repeatedly measures the period between the same two edges within the pattern. Before supplying a sequencing mode SINGLEMEASURE command to FPGA , host computer  sends it a SYNCHRONIZE command and FPGA  responds by supplying a SYNC signal to synchronize the TRIG signal output of trigger circuit  to the pattern before signaling trigger circuit  via a START signal to begin generating TRIG signals in response to the SINGLEMEASURE command. FPGA  can process the data derived from these repeated sequencing mode period measurements, for example, to determine the amount of random jitter in DUT output signal VR.","Alternatively FPGA  can set the MODE bit to configure trigger circuit  to operate in an equivalent time triggering mode where it asserts the TRIG signal at different points during successive repetitions of the VR signal pattern so that TMU  measures the period between a different pair of edges within the repetitive pattern following each TRIG signal assertion. As discussed below, FPGA  can process period data collected in this fashion and quantify the deterministic or pattern-dependent jitter in DUT output signal VR.","A scope mode SINGLEMEASURE command tells FPGA  to configure MEASUREMENT CIRCUIT  to respond to the TRIG signal produced by trigger circuit  by storing  successive samples of the CLK signal in a shift register  and to supply a 12-bit SDATA word resenting the 12 sampled states of the CLK to FPGA . Since TMU  is not used in this mode, FPGA  initially sets multiplexer  to supply a hard-wired 0 to the ARM input of TMU  so that the TRIG signal does not trigger a TMU measurement operation. Instead, a synchronizing circuit  responds to the TRIG signal edge by triggering an oscillator  on the next edge of the CLK signal. Following a delay controlled by data in registers , oscillator  begins generating a periodic output signal OSC for clocking shift register  so that it samples CLK and stores the resulting 12-bit SDATA. The frequency and triggering delay of triggered oscillator  are determined by control data in registers  supplied by FPGA  in response to data supplied by host computer  in connection with the SINGLEMEASURE command. Shift register  sets the FINISHED bit true when it has captured the  samples to tell FPGA  that same data is ready. FPGA  then generates a REST signal to stop oscillator , to reset synchronizing circuit  and to clear shift register .","The HISTOGRAM command tells FPGA  to acquire a set of period measurements from TMU  and to store data representing a histogram of that data in RAM  so that host computer  can access it. The histogram is in the form of a data sequence in which each element of the sequence corresponds to a different range of periods and indicates a number of period measurements falling within that range. Host computer  can use the histogram data, for example, to calculate the non-deterministic jitter in a signal or to determine the average period between edges of a periodic signal more accurately than with only a single period measurement.","The LOGGING command tells FPGA  to perform up to  FPGA SINGLEMEASUREMENT operations with the same setting and to save the least significant  bits of each measurement result in RAM .","A BINNING command is specifically designed for use in testing a SERDES DUT output signal VR. Digital signals, including SERDES signals, are typically produced at some clock rate P such that the nominal period between successive transitions of the VR signal is some multiple of P, although jitter in the signal can cause actual periods between edges to vary somewhat. During the test carried out in response to a BINNING command, the DUT produces a particular repetitive pattern in its output signal wherein the nominal period between successive edges range from 1 P to 5 P. The BINNING command tells FPGA  to configure TMU  to carry out a large number of period measurements with trigger circuit  set in its sequencing mode of operation wherein it triggers period measurements at varying times during the pattern so that TMU  measures the period between each pair of successive edges within the repetitive pattern several times. FPGA  assigns each period measurement data value to one of a set of five \u201cbins\u201d, each corresponding to a separate one of the five possible nominal edge-to-edges delays from 1 P to 5 P. Due to signal jitter, each measurement may vary somewhat from a multiple of P, but FPGA  assigns each measurement to the bin corresponding to the delay nearest the measured period. FPGA  then stores data in RAM  indicating the longest and shortest delay assigned to each bin. The resulting data indicates the pattern dependant jitter in the DUT output signal VR.","FPGA","FPGA  of  includes logic programmed for carrying out several functions, and though in the preferred embodiment of the invention an FPGA implements those functions, those of skill in the art will appreciate the such functions could be implemented by other types of programmable logic circuits or by one or more application specific ICs (ASICS).","FPGA  provides an interface between bus  and IC  enabling host computer  of  to supply control and programming data to transmitter circuit , receiver circuit  and measurement circuit  for setting up those circuits to carry out various tests. As discussed above, FPGA  also acts as a pattern generator for supplying input signals to transmitter circuit  and for receiving, storing and\/or processing output data produced by receiver  and measurement circuit .",{"@attributes":{"id":"p-0083","num":"0082"},"figref":["FIG. 11","FIG. 4","FIG. 11","FIG. 3","FIG. 4","FIG. 4","FIG. 5","FIG. 5","FIG. 4","FIG. 4"],"b":["50","50","100","101","102","28","100","51","56","50","104","28","100","1","2","2","1","48","50","50","106","108","110","48","111","34","2","104","28","51","113","53","49"]},"Min-Max Unit",{"@attributes":{"id":"p-0084","num":"0083"},"figref":["FIG. 12","FIG. 11","FIG. 4","FIG. 5","FIG. 5"],"b":["106","104","106","28","101","28","56","53","54","58","1","2","1","2","1","66","60","66","1","106","104","1","100"]},{"@attributes":{"id":"p-0085","num":"0084"},"figref":["FIG. 13","FIG. 5"],"b":["1","11","1","66","1"],"br":[{},{},{},{},{},{}],"in-line-formulae":[{},{},{},{},{},{},{},{},{},{}],"i":["T","\u2212T","=T","\u2212T","=D","T","\u2212T","=T","\u2212T","T","\u2212T","=T","\u2212T","T","\u2212T","=T","\u2212T","T","\u2212T","=T","\u2212T"]},"State machine  () uses min-max circuit  to sort the CNT data generated by TMU  into five different bins corresponding five different delay ranges. For the example pattern of , min-max circuit  could establish the following delay ranges:\n\n","Min-max circuit  of  includes a multiplexer  and a comparator . The CNT output of TMU  of  provides a data input to each of a set ten of registers  of  and state machine  of  can write enable any of those ten registers. Multiplexer , controlled by data from state machine , can supply the contents of any one of  registers  as input to comparator . Comparator  compares CNT to the output of multiplexer  to provide a signal COMP indicating whether CNT is less than the output of multiplexer .","Four of registers  store data (BORDER, BORDER, BORDER and BORDER) provided by host computer  indicating the borders between the five ranges of CNT data values. For the example pattern of , host computer  would select the following values:\n\nBORDER12=1.5 D\u2032\n\nBORDER23=2.5 D\u2032\n\nBORDER34=3.5 D\u2032\n\nBORDER45=4.5 D\u2032\n\nD\u2032 is the value of CNT representing the nominal unit delay D. Another five of registers  store data (MINCOUNT to MINCOUNT) indicating the smallest observed values of CNT for each of the five ranges. The last five of register  store data (MAXCOUNT to MAXCOUNT) indicating the largest observed values of CNT for each of the five ranges.\n","To initiate a peak-to-peak jitter measurement, the host computer  first configures trigger circuit  of  to operate in the equivalent time triggering mode, sets multiplexer  () to select V and V as the CLK and CLK signals and to select V as the CLKSEQ signal, and appropriately sets the outputs VH and VL of DACs  and . Host computer  also writes the appropriate values of the BORDER** data into registers  to establish the ranges of interest, and writes the nominal delay for each range as initial MINCOUNT* and MAXCOUNT* data in registers . Thus for the example pattern of  the host computer would initialize the registers as follows:\n\nBORDER12=1.5 D\u2032\n\nBORDER23=2.5 D\u2032\n\nBORDER34=3.5 D\u2032\n\nBORDER45=4.5 D\u2032\n\nMINCOUNT1=CNT1MAX\n\nMINCOUNT2=CNT1MAX\n\nMINCOUNT3=CNT1MAX\n\nMINCOUNT4=CNT1MAX\n\nMINCOUNT5=CNT1MAX\n\nMAXCOUNT1=0\n\nMAXCOUNT2=0\n\nMAXCOUNT3=0\n\nMAXCOUNT4=0\n\nMAXCOUNT5=0\n\nCNTMAX is the maximum possible value of CNT.\n","Host computer  also writes data to register  () indicating the number of samples to be acquired. Host computer  next writes a SYNCHRONIZE command into register  () telling state machine  to transmit a SYNC signal to trigger circuit  in response to the next occurrence of the MATCH signal. Thereafter host computer  writes a BINNING command into register  causing state machine  to begin BINNING operation.",{"@attributes":{"id":"p-0091","num":"0095"},"figref":["FIG. 14","FIG. 11","FIG. 5","FIG. 11"],"b":["104","104","60","124","66","104","126","1","66","105","1","2","1","104","112","23","114","114","1","23","130","114","23","132","1","1","2","104","112","12","114","134","114","1","1","2","104","1","1","138","2","140","1","1","2","132","104","112","34","114","142","104","1","3","146","148","114","45","114","148","114","1","4","152","104","1","5","154"]},"After determining the range N in which CNT lies at one of steps , , ,  or , state machine  sets multiplexer  to deliver MINCOUNT(N) to comparator  so that COMP will indicate whether the current value of CNT is lower than the current value of MINCOUNT(N). If so, state machine writes CNT into the registers  storing MINCOUNT(N) (step ). At step , state machine  sets multiplexer  to select MAXCOUNT(N) so that COMP will indicate whether the current value of CNT is lower than the current value of MAXCOUNT(N) (step ). If COMP is false, state machine  writes CNT into the registers  MAXCOUNT(N) (step ). State machine  keeps track of the number of interval measurements it has processed, and if has not processed the last measurement data (step ), it resets the FINISHED bit in register  () and returns to step  to start a next interval measurement. If all interval measurements have been processed, state machine  ends the measurement process following step .","Histogram Unit",{"@attributes":{"id":"p-0093","num":"0097"},"figref":["FIG. 15","FIG. 11","FIG. 11","FIG. 4"],"b":["108","104","108","104","66","51","28","256","28"]},"Before issuing a HISTOGRAM command, host computer  sets all the data values stored in the first 256 address of RAM  to a 0 and switches multiplexer  () to select V and V as the sources of CLK, CLK and CLKSEQ and configures trigger circuit  to operate in the repetitive triggering mode. In that mode trigger circuit  generates a TRIG signal in response to the same particular edge during each repetition of the repetitive pattern appearing in the CLKSEQ signal. The CLK and CLK signals will also convey repetitive patterns, and TMU  will respond to each TRIG signal edge by measuring the interval between the same two CLK and CLK edges of their repetitive patterns. The amount of variation in successive interval measurements indicates the amount of random jitter in DUT output signal VR. The combination of values CNT and CNT TMU  generates after each trigger signal represents the measured value of the interval. Host computer  also writes the number of measurements to be made into register . After issuing a SYNCHRONIZE command causing state machine  to send a SYNC signal to trigger circuit  () on the next MATCH signal edge, host computer  issues the HISTOGRAM command. State machine  then initiates the first measurement by sending a START signal to trigger circuit . When valid CNT and CNT data is available, an encoder  () encodes the CNT and CNT data into an 8-bit RAM address representing the period indicated by the CNT and CNT data with 8-bit resolution. RAM  reads out a count stored at that address to an increment circuit  which increments the count and supplies it to the data input terminals of RAM . State machine  then initiates a write operation overwriting the count at that address with the incremented count. When state machine  repeats this operation for every period measurement, the resulting data in the first 256 address of RAM  will be a histogram of the period measurements.",{"@attributes":{"id":"p-0095","num":"0099"},"figref":"FIG. 16","b":["122","108"]},"Data Acquisition Unit",{"@attributes":{"id":"p-0096","num":"0100"},"figref":["FIG. 17","FIG. 11"],"b":["110","104","110","51","110","180","04","1","2","51","182","51","104","182","104","51"]},"The foregoing specification and the drawings depict exemplary embodiments of the best mode(s) of practicing the invention, and elements or steps of the depicted best mode(s) exemplify the elements or steps of the invention as recited in the appended claims. However, the appended claims are intended to apply to any mode of practicing the invention comprising the combination of elements or steps as described in any one of the claims, including elements or steps that are functional equivalents of the example elements or steps of the exemplary embodiment(s) of the invention depicted in the specification and drawings."],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"BRIEF DESCRIPTION OF THE DRAWINGS","p":[{"@attributes":{"id":"p-0017","num":"0016"},"figref":"FIG. 1"},{"@attributes":{"id":"p-0018","num":"0017"},"figref":"FIG. 2"},{"@attributes":{"id":"p-0019","num":"0018"},"figref":"FIG. 3"},{"@attributes":{"id":"p-0020","num":"0019"},"figref":["FIG. 4","FIG. 3"]},{"@attributes":{"id":"p-0021","num":"0020"},"figref":["FIG. 5","FIG. 4"],"b":"48"},{"@attributes":{"id":"p-0022","num":"0021"},"figref":["FIG. 6","FIG. 5"]},{"@attributes":{"id":"p-0023","num":"0022"},"figref":["FIG. 7","FIG. 5"]},{"@attributes":{"id":"p-0024","num":"0023"},"figref":["FIG. 8","FIG. 7"]},{"@attributes":{"id":"p-0025","num":"0024"},"figref":["FIG. 9","FIG. 5"]},{"@attributes":{"id":"p-0026","num":"0025"},"figref":["FIG. 10","FIG. 5"]},{"@attributes":{"id":"p-0027","num":"0026"},"figref":["FIG. 11","FIG. 4"]},{"@attributes":{"id":"p-0028","num":"0027"},"figref":["FIG. 12","FIG. 11"]},{"@attributes":{"id":"p-0029","num":"0028"},"figref":"FIG. 13"},{"@attributes":{"id":"p-0030","num":"0029"},"figref":["FIG. 14","FIG. 11"]},{"@attributes":{"id":"p-0031","num":"0030"},"figref":["FIG. 15","FIG. 11"]},{"@attributes":{"id":"p-0032","num":"0031"},"figref":["FIG. 16","FIG. 15"]},{"@attributes":{"id":"p-0033","num":"0032"},"figref":["FIG. 17","FIG. 11"]}]},"DETDESC":[{},{}]}
