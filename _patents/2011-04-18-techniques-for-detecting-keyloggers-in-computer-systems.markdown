---
title: Techniques for detecting keyloggers in computer systems
abstract: Keyloggers are detected in a computer. A test string is generated in the computer. Keyboard input is simulated using the test string. The test string may be input to a hidden browser connected to a sensitive site or a hidden application program, for example. Files modified during the input procedure are detected. Processes running in memory and modified files are scanned for presence of the test string to detect keyloggers.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08707437&OS=08707437&RS=08707437
owner: Trend Micro Incorporated
number: 08707437
owner_city: Tokyo
owner_country: JP
publication_date: 20110418
---

{"@attributes":{"id":"description"},"BRFSUM":[{},{}],"heading":["BACKGROUND OF THE INVENTION","SUMMARY","DETAILED DESCRIPTION"],"p":["1. Field of the Invention","The present invention relates generally to computer security, and more particularly but not exclusively to methods and apparatus for detecting keyloggers.","2. Description of the Background Art","Keyloggers track and record keys struck on a keyboard. While keyloggers may be employed for legitimate purposes, they are typically employed in a covert manner to steal confidential information, such as passwords and account information, entered by way of a keyboard of an infected computer.","Keyloggers may be implemented in hardware or software. Hardware based keyloggers require physical access to the computer to install a keystroke recording device. Hardware based keyloggers are thus harder to deploy compared to software based keyloggers. Software based keyloggers are a form of malicious code and may thus be easily propagated by infecting unprotected computers. A keylogger may steal confidential information from an infected computer for subsequent transmission to a remotely located computer operated or controlled by a cyber criminal.",{"@attributes":{"id":"p-0007","num":"0006"},"figref":["FIG. 1","FIG. 1"],"b":["150","160","160","150","151","152","171","152","161","172","163","162","173","164","174"]},"Keyboard inputs may be monitored at various points in the computer. For example, keyboard inputs may be monitored using an electrical circuit connected between the keyboard  and the main module , such as inline with the keyboard's cable connector. Keyboard inputs may also be monitored at the kernel level by using kernel driver and hooking on the interrupt descriptor table, monitoring I\/O (input\/output) port status, or replacing the operating system's keyboard driver. At the application level, keyboard inputs may be monitored using an application programming interface (API) hook, using a form grabber, or by capturing network traffic, to name some examples.","Hardware based keyloggers may be detected by physical inspection and securing the location of the computer. Software based keyloggers, being a form of malicious code, are more problematic for the average computer user as they are easily contracted, such as by receiving infectious files over a computer network or from computer-readable storage medium inserted into the computer.","There are various ways of protecting a computer from malicious code that is configured as a keylogger. Example methods include using a virtual keyboard, automatic form filler, or speech recognition. While these methods may prevent a keylogger from monitoring and logging keyboard inputs, they do not detect the presence of the keylogger. That is, the keylogger remains in the infected computer to monitor keyboard inputs, i.e., inputs entered by way of the physical keyboard . Antivirus software may be employed to detect software based keyloggers using pattern-matching and heuristic algorithms. However, because of the large number of keyloggers and their variants, the size of the pattern file containing the keylogger patterns may get very big. Furthermore, the behavior of keyloggers operating at the kernel level is relatively difficult to detect.","In one embodiment, a computer-implemented method of detecting a keylogger in a computer comprises generating a test string. Simulated keyboard input is performed using the test string. Files that have been modified during a procedure of performing the simulated keyboard input are detected. Modified files are scanned for presence of the test string to detect the keylogger.","In another embodiment, a computer comprises a processor and a memory, the memory comprises computer-readable program code configured to be executed by the processor to generate a test string, to use the test string to simulate a keyboard input, and to detect a keylogger by scanning files and processes of the computer for presence of the test string.","In yet another embodiment, a computer-implemented method of detecting a keylogger in a computer comprises randomly generating a test string. The test string is written into an I\/O port of the computer for accepting a keyboard input. The keylogger is detected by scanning files and processes for presence of the test string.","These and other features of the present invention will be readily apparent to persons of ordinary skill in the art upon reading the entirety of this disclosure, which includes the accompanying drawings and claims.","The use of the same reference label in different drawings indicates the same or like components.","In the present disclosure, numerous specific details are provided, such as examples of apparatus, components, and methods, to provide a thorough understanding of embodiments of the invention. Persons of ordinary skill in the art will recognize, however, that the invention can be practiced without one or more of the specific details. In other instances, well-known details are not shown or described to avoid obscuring aspects of the invention.","Referring now to , there is shown a schematic diagram of a computer  in accordance with an embodiment of the present invention. The computer  may have fewer or more components to meet the needs of a particular application. The computer  may include a processor , such as those from the Intel Corporation or Advanced Micro Devices, for example. The computer  may have one or more buses  coupling its various components. The computer  may include a keyboard  and other user input devices (e.g., mouse), one or more data storage devices  (e.g., hard drive, optical disk, USB memory), a display monitor  (e.g., LCD, flat panel monitor, CRT), a computer network interface  (e.g., network adapter, modem), and a main memory  (e.g., RAM). The computer network interface  may be coupled to a computer network .","The computer  is a particular machine as programmed with computer-readable program code. In the example of , the main memory  contains computer-readable program code including a keystroke security module . The keystroke security module  may comprise computer-readable program code stored non-transitory in the main memory  for execution by the processor . The keystroke security module  may be loaded from the data storage device  to the main memory . The keystroke security module  may also be made available in other computer-readable medium including optical disk, flash drive, and other memory device.",{"@attributes":{"id":"p-0027","num":"0026"},"figref":["FIG. 3","FIG. 3","FIG. 1","FIG. 3"],"b":["100","100","360","361","100","101","108","108","301","301","1","301","2","301","3","362","110","363","301","301","108"]},"The keystroke security module  may comprise computer-readable program code configured to be executed by the processor  to detect malicious codes configured as a keystroke logger. The keystroke security module  may be configured to generate a user interface  (arrow ). In one embodiment, activating a button  (e.g., using a mouse) of the user interface  initiates detection of keyloggers by the keystroke security module . The keystroke security module  may include components running in kernel mode. In one embodiment, the keystroke security module  includes a file system driver running kernel mode to detect file modification. The keystroke security module  may also include components running in user mode, e.g., to scan processes running in user memory space.","In one embodiment, the keystroke security module  is configured to randomly generate a test string, use the test string to simulate a keyboard input, and detect a keylogger by scanning files and processes  for presence of the test string. The operation of the keystroke security module  in accordance with this embodiment is now described with reference to .",{"@attributes":{"id":"p-0030","num":"0029"},"figref":["FIG. 4","FIG. 4","FIG. 4","FIGS. 2 and 3"]},"The method of  may begin with the keylogger security module  displaying the user interface  on the display monitor  of the computer . When the button  of the user interface  is activated, the keyboard security module  initiates detection of the keylogger by generating a string, also referred to herein as a \u201ctest string\u201d (step ). In one embodiment, the keyboard security module  randomly generates the test string. The test string may comprise alphabetic, numeric, or alphanumeric characters, for example.","Preferably, to prevent false positives, the test string is unique and readily identifiable as being generated by the keyboard security module . For example, the test string may comprise a non-existent email address, such as \u201cwahaha@com.tw\u201d. Only the keystroke security module , such as its file and\/or process, is expected to have the test string. Therefore, any other file or process containing the test string may be deemed to be a keylogger.","The keystroke security module  simulates a keyboard input by writing the test string directly to an I\/O port for accepting keyboard inputs (step ). This allows for test string input without using the keyboard . The keystroke security module  may monitor for files that have been modified during the test string input procedure (step ). For example, the keystroke security module  may include a file system driver running in kernel mode. The file system driver may monitor for files that have been modified during a window of time that includes the inputting of the test string into the I\/O port. The keystroke security module  scans the modified files and the processes  for presence of the test string (step ). Because no other process or file is expected to receive the test string, the keystroke security module  may deem a file or process  that contains the test string as being a keylogger. The keystroke security module  may perform a responsive action upon detection of a keylogger (step ), including directing an antivirus to scan the particular file or process for further verification to minimize false positives, putting the file in quarantine, terminating the process, and\/or alerting a system administrator or user (e.g., by displaying a warning message, sending an alert email, etc.). As can be appreciated, detection of the presence of the keylogger in the computer allows the user to avoid using the computer until the keylogger is removed. This approach is much more effective than simply trying to prevent the keylogger from monitoring keyboard inputs while the keylogger remains undetected in the computer.","In another embodiment, the keystroke security module  is configured to open a hidden browser to a sensitive site, randomly generate a test string, sign-on to the sensitive site using the test string, and detect a keylogger by scanning files and processes  for presence of the test string. The operation of the keystroke security module  in accordance with this embodiment is now described with reference to .",{"@attributes":{"id":"p-0035","num":"0034"},"figref":["FIG. 5","FIG. 5","FIG. 5"],"b":["110","306","303","110","511","501","511","511","110","511","511","511"]},{"@attributes":{"id":"p-0036","num":"0035"},"figref":["FIG. 6","FIG. 6","FIG. 6","FIGS. 2"],"b":["3","5"]},"The method of  may begin with the keylogger security module  displaying the user interface  on the display monitor . When the button  of the user interface  is activated, the keyboard security module  opens a hidden web browser window  to a sensitive website (step ). The keyboard security module  generates a test string (step ). In one embodiment, the keyboard security module  randomly generates the test string. The test string may comprise alphabetic, numeric, or alphanumeric characters, for example.","The keystroke security module  uses the test string to sign onto the sensitive website (step ). For example, the keystroke security module  may enter the test string to a password entry field and the user ID field of the web page displayed on the web browser window . The keystroke security module  may simulate keyboard entry to enter the test string into fields of the web page. For example, the keystroke security module  may enter the test string by directly writing the test string to an I\/O port for keyboard input. Using the test string as an input to a web page of a sensitive website increases the chance that any keylogger monitoring keyboard inputs in the computer  will harvest and log the test string.","The keystroke security module  may monitor for files that have been modified during the sign-on procedure (step ). For example, the file system driver of the keystroke security module  may monitor for files that have been modified during a window of time that includes the time when the test string is employed to sign onto the sensitive website. The keystroke security module  scans the modified files and the processes  for presence of the test string (step ). In one embodiment, the keystroke security module  deems a file or process  that contains the test string as being a keylogger. The keystroke security module  may perform a responsive action upon detection of a keylogger (step ).","In another embodiment, the keystroke security module  is configured to open a hidden application, randomly generate a test string, input the test string into the application, and detect a keylogger by scanning files and processes  for presence of the test string. The operation of the keystroke security module  in accordance with this embodiment is now described with reference to .",{"@attributes":{"id":"p-0041","num":"0040"},"figref":["FIG. 7","FIG. 7"],"b":["110","306","303","110","710","701","710","710","100","710","710","110","710"]},{"@attributes":{"id":"p-0042","num":"0041"},"figref":["FIG. 8","FIG. 8","FIG. 8","FIGS. 2"],"b":["3","7"]},"The method of  may begin with the keylogger security module  displaying the user interface  on the display monitor . When the button  of the user interface  is activated, the keyboard security module  opens a hidden application  (step ). The keyboard security module  generates a test string (step ). In one embodiment, the keyboard security module  randomly generates the test string. The test string may comprise alphabetic, numeric, or alphanumeric characters, for example.","The keystroke security module  inputs the test string into the application  (step ). For example, the keystroke security module  may enter the test string to a password entry field and\/or account ID field of the application . Examples of application programs with a password entry field or account ID field include FTP programs for uploading\/downloading files and instant messaging programs. As can be appreciated, the test string may also be entered into other fields or data entry area likely to be monitored by a keylogger. The keystroke security module  may simulate keyboard entry to enter the test string into the application . For example, the keystroke security module  may input the test string by directly writing the test string to an I\/O port for keyboard input. Using the test string as an input to an application program increases the chance that any keylogger monitoring keyboard inputs in the computer  will harvest and log the test string.","The keystroke security module  may monitor for files that have been modified during the test string input procedure (step ). For example, the file system driver of the keystroke security module  may monitor for files that have been modified during a window of time that includes the time when the test string is input into the application . The keystroke security module  scans the modified files and the processes  for presence of the test string (step ). In one embodiment, the keystroke security module  deems a file or process  that contains the test string as being a keylogger. The keystroke security module  may then perform a responsive action upon detection of a keylogger (step ).","As can be appreciated from the foregoing, embodiments of the present invention provide significant advantages. For one, unlike previous approaches that simply try to prevent monitoring of keyboard inputs by a keylogger, embodiments of the present invention allow for detection of presence of the keylogger, making the computer safer in the long run. Furthermore, embodiments of the present invention allow for detection of keyloggers without necessarily having to use pattern files containing patterns of keyloggers. Yet another advantage, unlike heuristic-based approaches that require continuous monitoring of program behavior, embodiments of the present invention may be activated on as needed basis and do not necessarily require pattern files containing keylogger behavior patterns.","Methods and apparatus for detecting keyloggers have been disclosed. While specific embodiments of the present invention have been provided, it is to be understood that these embodiments are for illustration purposes and not limiting. Many additional embodiments will be apparent to persons of ordinary skill in the art reading this disclosure."],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"DESCRIPTION OF THE DRAWINGS","p":[{"@attributes":{"id":"p-0015","num":"0014"},"figref":"FIG. 1"},{"@attributes":{"id":"p-0016","num":"0015"},"figref":"FIG. 2"},{"@attributes":{"id":"p-0017","num":"0016"},"figref":["FIG. 3","FIG. 2"]},{"@attributes":{"id":"p-0018","num":"0017"},"figref":"FIG. 4"},{"@attributes":{"id":"p-0019","num":"0018"},"figref":"FIG. 5"},{"@attributes":{"id":"p-0020","num":"0019"},"figref":"FIG. 6"},{"@attributes":{"id":"p-0021","num":"0020"},"figref":"FIG. 7"},{"@attributes":{"id":"p-0022","num":"0021"},"figref":"FIG. 8"}]},"DETDESC":[{},{}]}
