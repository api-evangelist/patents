---
title: Secure safe sender list
abstract: Secure safe sender lists are described. In an implementation, a method includes determining which of a plurality of hierarchical levels corresponds to a message received via a network. Each of the hierarchical level is defined by mechanisms for identifying a sender of the message. The message is routed according to the corresponding one of the hierarchical levels.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=07603422&OS=07603422&RS=07603422
owner: Microsoft Corporation
number: 07603422
owner_city: Redmond
owner_country: US
publication_date: 20041227
---

{"@attributes":{"id":"description"},"BRFSUM":[{},{}],"heading":["TECHNICAL FIELD","BACKGROUND","SUMMARY","DETAILED DESCRIPTION","CONCLUSION"],"p":["The present invention generally relates to the field of message communication and more particularly relates to message communication which may employ a secure safe sender list.","Communication utilizing messages has provided a wide range of increased functionality to users of computing devices, such as desktop computers, wireless phones, and so on. For example, users may communicate, one to another, through the use of email (i.e., electronic mail). Email employs standards and conventions for addressing and routing such that the email may be delivered across a network, such as the Internet, utilizing a plurality of devices. In this way, emails may be transferred within a company over an intranet, across the world using the Internet, and so on.","The use of email has provided a number of advantages to the user. For example, even though email may be communicated almost instantaneously, email can be dealt with according to the recipient's own schedule, such as when the email is received to provide an immediate response, at a later time when the user has sufficient resources to answer the message, and so on. Additionally, email may allow the user to prioritize messages, such as when to respond to one or more particular emails that were received by the user. Because of these and other advantages, the prevalence of email has continued to expand such that email is now considered an indispensable part of everyday life, both at home and during a typical business day.","In another example, users may communicate, one to another, through the use of instant messaging. For instance, when two users are online at the same time, instant messages may be exchanged in real time between the two users. In this way, the instant messages may be utilized to support a text conversation between the two users in a manner that mimics how the two users would participate in a typical spoken conversation.","Unfortunately, as the prevalence of these techniques for sending messaging has continued to expand, the amount of \u201cspam\u201d encountered by the user has also continued to increase. Spam is typically thought of as an email that is sent to a large number of recipients, such as to promote a product or service. Because sending an email generally costs the sender little or nothing to send, \u201cspammers\u201d have developed which send the equivalent of junk mail to as many users as can be located. Even though a minute fraction of the recipients may actually desire the described product or service, this minute fraction may be enough to offset the minimal costs in sending the spam. Consequently, a vast number of spammers are responsible for communicating a vast number of unwanted and irrelevant emails. Thus, a typical user may receive a large number of these irrelevant emails, thereby hindering the user's interaction with relevant emails. In some instances, for example, the user may be required to spend a significant amount of time interacting with each of the unwanted emails in order to determine which, if any, of the emails received by the user might actually be of interest.","Therefore, there is a continuing need for techniques that may be employed to limit unwanted messages which are communicated over a network.","A secure safe sender list is described which may be utilized to limit unwanted messages. In an email implementation, for example, the secure safe senders list may reference a plurality of identifying mechanisms that may be utilized to determine whether the email is \u201cgenuine\u201d (i.e., is from the indicated sender), such as an email address, third-party certificates, self-signed certificates, monetary attachment (e.g., an \u201ce-stamp\u201d), and so on. Therefore, in this implementation, the secure safe sender list may be utilized to determine whether the email is from a trusted source and therefore may be routed for viewing by the user, and prevent emails that are not from trusted sources from interfering with the user's interaction with relevant emails.","The secure safe sender list may also provide a scalable treatment of messages depending on a level of security associated with the message. For example, the identifying techniques (whether alone or in differing combinations) may provide several different levels (i.e., hierarchies) of security. Messages may be routed based on which of the different levels of security are satisfied by the message. For example, if an email from a particular email address complies with a \u201chigh-level\u201d security requirement (e.g., includes a third-party certificate) as designated by the secure safe sender list, then the email may be routed to the user's inbox. However, if the email only meets \u201clower-level\u201d security requirements, the email may be routed for further processing (such as by a \u201cspam\u201d filter), routed to a dedicated \u201cspam\u201d folder, and so on.","Further, the secure safe sender list may be dynamically configured through use of a user interface. For example, an email may be examined to determine which identifying mechanisms, if any, may be employed to verify the identity of the sender. If the email includes an identifying mechanism that indicates a likelihood that the email was sent from a trusted source, the user may be prompted to add the sender's email address to the secure safe sender list for future routing of emails from that user. In addition, the secure safe sender list may also reference one or more identifying mechanisms (e.g., the third party certificate) that are to be employed for routing future emails from the sender for viewing by the user.","The same reference numbers are utilized in instances in the discussion to reference like structures and components.",{"@attributes":{"id":"p-0017","num":"0016"},"figref":"FIG. 1","b":["100","100","102","1","102","102","104","102","1","102","102","1","102","104","102","1","102","102","1","102","102","1","102"]},"Additionally, although the network  is illustrated as the Internet, the network may assume a wide variety of configurations. For example, the network  may include a wide area network (WAN), a local area network (LAN), a wireless network, a public telephone network, an intranet, and so on. Further, although a single network  is shown, the network  may be configured to include multiple networks. For instance, clients (), (n) may be communicatively coupled via a peer-to-peer network to communicate, one to another. Each of the clients (), (n) may also be communicatively coupled to client (N) over the Internet. In another instance, the clients (), (n) are communicatively coupled via an intranet to communicate, one to another. Each of the clients (), (n) in this other instance is also communicatively coupled via a gateway to access to client (N) over the Internet.","Each of the plurality of clients ()-(N) is illustrated as including a respective one of a plurality of communication modules (), . . . , (n), . . . , (N). In the illustrated implementation, each of the plurality of communication modules ()-(N) is executable on a respective one of the plurality of clients ()-(N) to send and receive messages. For example, one or more of the communication modules ()-(N) may be configured to send and receive email. As previously described, email employs standards and conventions for addressing and routing such that the email may be delivered across the network  utilizing a plurality of devices, such as routers, other computing devices (e.g., email servers), and so on. In this way, emails may be transferred within a company over an intranet, across the world using the Internet, and so on. An email, for instance, may include a header, text, and attachments, such as documents, computer-executable files, and so on. The header contains technical information about the source and oftentimes may describe the route the message took from sender to recipient.","In another example, one or more of the communication modules ()-(N) may be configured to send and receive instant messages. Instant messaging provides a mechanism such that each of the clients ()-(N), when participating in an instant messaging session, may send text messages to each other. The instant messages are typically communicated in real time, although delayed delivery may also be utilized, such as by logging the text messages when one of the clients ()-(N) is unavailable, e.g., offline. Thus, instant messaging may be though of as a combination of e-mail and Internet chat in that instant messaging supports message exchange and is designed for two-way live chats. Therefore, instant messaging may be utilized for synchronous communication. For instance, like a voice telephone call, an instant messaging session may be performed in real-time such that each user may respond to each other user as the instant messages are received.","In an implementation, the communication modules ()-(N) communicate with each other through use of a server cluster . The communication module (n) is executed to verify email using the detected identifying mechanisms and determine an appropriate action from the SSSL (n). For example, the communication module (n) may query the certificate provider () of  to determine if the third-party certificate () is valid. If the verification is successfully performed (e.g., the third-party certificate () is verified as valid), the communication module (n) may then determine which action should be performed on the email from the SSSL (n). The server cluster  includes a plurality of servers (m), where \u201cm\u201d can be any integer from one to \u201cM\u201d. The server cluster  may be configured to provide a wide variety of functionality, such as load balancing and failover. One or more of the plurality of servers (m) in the server cluster  may include a respective database (m) for storing a plurality of messages (h), where \u201ch\u201d can be any integer from one to \u201cH\u201d, for communication between the plurality of clients ()-(N).","Server (m), for instance, may include a communication manager module (m) (hereinafter \u201cmanager module\u201d) which is executable thereon to route instant messages between the communication modules ()-(N). For instance, client () may cause the communication module () to form an instant message for communication to client (n). The communication module () is executed to communicate the instant message to the server (m), which then executes the manager module (m) to route the instant message to the client (n) over the network . The client (n) receives the instant message and executes the respective communication module (n) to display the instant message to a respective user. In another instance, when the clients (), (n) are communicatively coupled directly, one to another (e.g., via a peer-to-peer network), the instant messages are communicated without utilizing the server cluster .","In another example, the server cluster  may be configured to store and route email, such as through configuration as an email provider. For instance, like the previous example, client () may execute the communication module () to form an email for communication to client (n). The communication module () communicates the email to the server (m), which is then stored as one of the plurality of messages (h). Client (n), to retrieve the email, \u201clogs on\u201d to the server cluster  (e.g., by providing a user identification and password) and retrieves emails from a respective user's account. In this way, a user may retrieve corresponding emails from one or more of the plurality of clients ()-(N) that are communicatively coupled to the server cluster  over the network . Although messages configured as emails and instant messages have been described, a variety of textual and non-textual messages (e.g., graphical messages, audio messages, and so on) may be communicated via the environment  without departing from the sprit and scope thereof. Additionally, SSSL can be utilized for a wide variety of other communication techniques, such as to determine if a user will accept a voice-over-IP (VOIP) call or route the call to voicemail.","As previously described, the efficiently of the environment  has also resulted in communication of unwanted messages, commonly referred to as \u201cspam\u201d. Spam is typically provided via email that is sent to a large number of recipients, such as to promote a product or service. Thus, spam may be thought of as an electronic form of \u201cjunk\u201d mail. Because a vast number of emails may be communicated through the environment  for little or no cost to the sender, a vast number of spammers are responsible for communicating a vast number of unwanted and irrelevant messages. Thus, each of the plurality of clients ()-(N) may receive a large number of these irrelevant messages, thereby hindering the client's interaction with actual emails of interest.","One technique which may be utilized to hinder the communication of unwanted messages is through the use of a \u201csafe sender\u201d list. A safe sender list, for example, may allow email users to specify email addresses (e.g., an address of an entity used to send the email), from which, the user is willing to receive email. For instance, the safe sender list may be utilized to give an email from a specified address \u201csafe passage\u201d through any spam filtering employed by the client for storage in the user's inbox. Unfortunately, some implementations of safe sender lists can be \u201cspoofed\u201d. For example, if an attacker discovers an email addresses that is included in the user's safe sender list, the attacker can impersonate the entity represented by one of these addresses, such as by spoofing the \u201cFROM\u201d line in a simple mail transfer protocol (SMTP) communication. Consequently, the attacker's message will be passed directly to the receiver's inbox. Attackers may utilize a wide array of techniques for acquiring the contents of a safe sender list, such as by hacking, guessing, crawling the web for other addresses on the recipient's home page (or on pages that link to or are linked from the recipient's homepage), and so on.","To protect against spoofing and other identity attacks, the environment  may incorporate a plurality of secure safe sender lists (), . . . , (n), . . . , (N) (hereinafter \u201cSSSL\u201d). The SSSLs ()-(N) may be configured to combine a variety of identifying mechanisms to verify whether the message was actually communicated from the sender as indicated by the message. For example, SSSL (n) may be configured to allow a user to combine information (e.g., an identifying mechanism) that is difficult to spoof along with an email address to form combinations that are more difficult to attack. A SSSL, for instance, may reference a combination that includes an email address \u201ctest@test.com\u201d and a third-party certificate. Therefore, a message received by the client (n) from test@test.com that is signed with the referenced third-party certificate is passed to the client's inbox. However, another message from test@test.com that does not include the third-party certificate may be treated as if it were not on the SSSL (n). Therefore, even if an attacker guesses that \u201ctest@test.com\u201d is on a user's safe sender list, the attacker cannot take advantage of that information unless the attacker is also able to sign the email with the corresponding third-party certificate, thereby providing additional protect against spam.","The SSSLs ()-(N) maybe provided in the environment  in a variety of ways. In the illustrated example of , for instance, each of the plurality of clients ()-(N) includes a respective one of a plurality of SSSLs ()-(N) which reference particular identifying mechanisms that may be utilized to verify sender's of email. As also illustrated in , a plurality of SSSLs (k), where \u201ck\u201d can be any integer from one to \u201cK\u201d, may be stored in the server cluster . For instance, the server (m) may include a database l(m) which is configured to store a plurality of SSSLs (k). The plurality of SSSLs (k), for instance, may be copies of the SSSLs ()-(N) from the plurality of clients ()-(N). Therefore, the server (m) may utilize the SSSLs ()-(N) in a manner similar to how the SSSLs ()-(N) are employed to process messages. However, by performing the processing of the messages at the server cluster , the processing functionality may be employed without taxing resources on the plurality of clients ()-(N), which may be utilized to provide this functionality to \u201cthin\u201d clients as previously described. Additionally, a user may seamlessly gain the advantage of a corresponding single SSSL, even when logging on using different clients. Further discussion of identifying mechanisms that may be referenced and employed by the plurality of SSSLs ()-(N) may be found in relation to .","In an implementation, one or more of the identifying mechanisms encompassed by the SSSLs ()-(N) provide for differing levels of security against attack and spoofing. Thus, in this implementation, each of the entries in the SSSLs ()-(N) may be utilized to provide differing levels of access, such as to a user's inbox. In other words, the SSSL () may describe a hierarchy of identity verification in which one entry describes one or more identifying mechanisms that are more likely to represent a valid identity than verification performed by another entry that references one or more different identifying mechanisms. For example, a SSSL () entry that combines an e-mail address with a third-party certificate from a highly-trusted third-party certifier might provide the largest possible boost to a message (e.g. guaranteed delivery to a user's inbox), while an entry that combines an email address with a valid self-signed certificate might provide a strong \u201chint\u201d as to the identity of the sender, but not guarantee delivery.","The hierarchies may be employed and maintained in a variety of ways. For example, the hierarchies may be built into the SSSLs ()-(N) (e.g., by hand crafted rules, machine learning, and so on), provided by the user, deployed and updated dynamically from an anti-spam web service, and so on. For example, when SSSLs use secure third-party certificates to guarantee delivery, this can result in closed email system in which users can be confident that each message that is received is valid, e.g., is not \u201cspoofed\u201d. Further discussion of use of a SSSL and its referenced identifying mechanisms for processing messages may be found in relation to .","Additionally, maintaining the SSSLs ()-(N) may be performed in a variety of ways. For example, one or more of the communication modules ()-(N) may be executed to provide a user interface for assisting users in specifying identifying mechanisms and levels of access for entries in the SSSLs ()-(N). Further discussion of user interfaces may be found in relation to .","Generally, any of the functions described herein can be implemented using software, firmware (e.g., fixed logic circuitry), manual processing, or a combination of these implementations. The terms \u201cmodule,\u201d \u201cfunctionality,\u201d and \u201clogic\u201d as used herein generally represent software, firmware, or a combination of software and firmware. In the case of a software implementation, the module, functionality, or logic represents program code that performs specified tasks when executed on a processor (e.g., CPU or CPUs). The program code can be stored in one or more computer readable memory devices, further description of which may be found in relation to . The features of the SSSL strategies described below are platform-independent, meaning that the strategies may be implemented on a variety of commercial computing platforms having a variety of processors.",{"@attributes":{"id":"p-0032","num":"0031"},"figref":["FIG. 2","FIG. 1","FIG. 2"],"b":["200","102","110","102","202","204","110","206","208","204","102","208","10"]},"The client (n) is illustrated as executing a communication module (n) on the processor (n), which is storable in memory (n). The communication module (n), when executed, may be utilized to process messages received by the client (n) utilizing the respective SSSL (n), which is illustrated as stored in the memory (n). The SSSL (n) references a plurality of identifying mechanisms (x), where \u201cx\u201d can be any integer from one to \u201cX\u201d, which may be utilized to verify an identity of a sender. In an implementation, the SSSL (n) combines one or more identifying mechanisms (x) and an action on the SSSL based on which entries (e.g., identifying mechanism, combination of identifying mechanisms, and so on) of the SSSL (n), if any, are satisfied by the message. Therefore, when a user receives a message, the communication modules (n) and\/or manager module (m) gather and validate messages utilizing one or more applicable identifying mechanisms (x). For example, the identifying mechanisms (x) may involve checking that part of a message is signed with a specific private key, that a message was sent from a machine that is approved via a sender's identification for a specified domain, and so on. A variety of identifying mechanisms (x) and combinations thereof may be employed in the SSSLs (n), examples of which are described as follows.","Email Address ()","The email address () is a standard form of identity used on safe sender lists, and thus the SSSL (n) can support and build upon a legacy safe sender list. The email address () may be checked by looking at a \u2018FROM\u2019 line in the header of a message. Although the email address () may be particularly vulnerable to attack as previously described, a combination of the email address () and another one of the identifying mechanisms (x) may result in substantial protection.","Third Party Certificates ()","Third party certificates () may involve the signing of a portion of a message with a certificate that can be traced to a third-party certifier. This signature can be attached utilizing a variety of techniques, such as through secure\/multipurpose Internet mail extension (S\/MIME) techniques, e.g., by including a header in the message that contains the signature. In this instance, the SSSL (n) entry also contains the identity of the third-party certifier, which may also be validated to further verify the authenticity of a message. The level of security provided by this technique may also be based on the reputation of the third party certifier, a type of certificate (e.g. some certifiers offer several levels of increasingly secure certification), and on the amount of the message signed (signing more of the message is presumably more secure). Thus, an action which is to be performed based on this type of identifying mechanism on the SSSL (x) may be chosen based on these pieces of information. For example, an action (e.g., guaranteed delivery) may be performed on messages which are signed by a particular third-party certifier, while messages signed by another third-party certifier may be further processed to determine whether the message is from a trusted source, is spam, and so on.","Self-Signed Certificate ()","A self-signed certificate involves signing a portion of a message with a certificate that the sender created. Like a third-party certificate (), this identifying mechanism may be attached using utilizing a variety of techniques, such as through secure\/multipurpose Internet mail extension (S\/MIME) techniques, e.g., by including a header in the message that contains the signature. In an implementation, use of a self-signed certificate involves the creation of a public\/private key pair by a sender, signing part of the message with the private key, and distributing the public key in the message (or via other standard methods). The level of security provided by this method is based on the amount of the message signed, and thus the action associated with this type of identity on the SSSL can also be chosen based on this information as previously described.","Passcode ()","The passcode () identifying mechanism involves the use of a passcode in a message, such as by including a public key in a message but not signing any portion of the message with the associated private key. This identity mechanism may be useful for users who have mail transfer agents that modify messages in transfer and destroy the cryptographic properties of signatures, such that the signatures cannot be verified. This identifying mechanism is useful as a lightweight way to establish a form of identity. Although a passcode () is still potentially spoofable, the passcode () may be utilized with other identifying mechanisms to provide greater likelihood of verification (i.e., authenticity of the sender's identity). In an implementation, when the passcode () is utilized alone, an associated action may be configured as a hint to a filter module (n).","The filter module (n), for instance, may employ a plurality of spam filters which are executable to filter messages for determining whether the message is spam, such as by looking at text and patterns of text in the message. An identifying mechanism (x) (e.g., passcode ()) may be utilized to verify the identity of a sender, and if successful, provide a hint to the filter module (n) for further processing of the message. Thus, the SSSL (n) may be utilized with a variety of new and\/or preexisting filters to provide additional spam filtering functionality. Although execution of the spam module (n) on the client (n) has been described, the server (m) may also employ a filter module (m) as illustrated which is executable to provide similar functionality.","Computational Proof ()","The computational proof () identifying mechanism involves attaching a computational proof to a message. For example, a sender may attach a pre-solved computation at some level on the message. The required amount of computation may act as a basis for choosing an action according to this identifying mechanism as previously described.","IP Address ()","The IP address () identifying mechanism involves validating whether a message was sent from a particular IP address or IP address range (e.g. the IP\/24 range 204.200.100.*). In an implementation, this identity method may support a less secure mode in which the IP address\/range may appear in any of a message's \u201creceived\u201d header lines. As before, the use of a particular IP address, IP address range, and\/or where the IP address or range may be located in a message can serve as a basis for choosing which action should be performed on the message.","Valid Sender ID ()","The valid Sender ID () identifying mechanism involves validating whether a message was sent from a computer that is authorized to send messages for a particular domain via the Sender's ID. For example, an SSSL (n) entry for this scenario may contain a reference to a trusted domain. For instance, \u201ctest@test.com\u201d is an address and \u201ctest.com\u201d is the domain. It should be noted that the domain does not need to match exactly, e.g. the domain could also formatted as foo.test.com. When a message from this address is received, the communication module (n) may perform a Sender ID test on the \u201ctest.com\u201d domain, and if the message matches the entry, it is valid. This identifying mechanism can also leverage algorithms for detecting IP addresses in clients and any forthcoming standards for communicating IP addresses from edge servers, standards for communicating the results of Sender ID checks from the edge servers, and so on. Additionally, it should be noted that the Sender ID test is not limited to any particular sender identification technique or framework (e.g., sender policy framework (SPF), sender ID framework from MICROSOFT (Microsoft is a trademark of the Microsoft Corporation, Redmond, Wash.), and so on), but may include any mechanism that provides for authentication of a user or domain.","Monetary Attachment ()","The monetary attachment () identifying mechanism involves inclusion of a monetary amount to a message for sending, in what may be referred to as an \u201ce-stamp\u201d. For example, a sender of the message may attach a monetary amount to the message that is credited to the recipient. By attaching even a minimal monetary amount, the likelihood of a spammer sending a multitude of such messages may decrease, thereby increasing the probability that the sender is not a spammer. A variety of other techniques may also be employed for monetary attachment (), such as through a central clearinghouse on the Internet that charges for certifying messages. Therefore, a certificate included with the message may act as a form of proof that the sender paid an amount of money to send the message. Although a variety of identifying mechanisms ()-() have been described, a variety of other identifying mechanisms (X) may also be employed without departing from the sprit and scope thereof.","As previously described, the SSSL (n) may reference one or more identifying mechanisms (x) and an action to be taken based on which of the identifying mechanisms (x) are satisfied by a message. For example, the communication module (n) may compare data from a message with the identifying mechanisms (x) and determine whether any associated actions are to be performed. These actions are then taken, which might result in guaranteed delivery, a message being passed on to the filter module (n) with a hint that the message is not spam, and so on. A variety of other actions may also be taken, examples of which are described as follows.","When a message complies with an entry in the SSSL (n), for example, an associated action is taken. For instance, one such action referenced in the SSSL (n) may specify that the message should be passed to a user's inbox with no further filtering. Therefore, in this instance the filter module (n) is bypassed to guarantee delivery.","In another example, the message may be further filtered by the filter module (n), but the actions that may be performed by the filter module (n) in response to the filtering are limited. In this way, the SSSL may be utilized to \u201cbound\u201d the actions that the filter module (n) may perform on the message. For example, a SSSL (n) entry may specify that a message that satisfies a particular identifying mechanism (x) is not to be discarded, no matter what the result is of processing the message by the filter module (n). In such an instance, the actions that may be performed by the filter module (n) include quarantining the message, routing the message to a spam filter, and so on.","In a further example, the action may be configured as a \u201chint\u201d to the filter module (n). For instance, the form and magnitude of the hint can be used to increase or decrease the probability that a message, when processed by the filter module (n), will be considered \u201cspam\u201d. The hint, for example, may take the form of a weight for adding to a probability calculation using a linear model, an absolute reduction in a probability assigned the message, a change in the filtering threshold (e.g., to be less aggressive), an additional feature that is included in the decision process, and so forth.","In an implementation, each identifying mechanism (x) (or combination of identifying mechanisms (x)) will have a default action in the SSSL (n). For example, if a user adds an entry to the SSSL (n) that references self-signed certificates (), the communication module (n) may suggest an action that reflects an understanding of the current security of the identifying mechanism (x). Over time, as certified mail and SSSLs become more prevalent and important to email and other types of messaging, attackers may be more motivated to attack SSSLs. As this happens, the default action for various identifying mechanisms (x) may be changed, such as based on feedback obtained by an email provider. Default actions may be selected in a variety of ways, such as manually by a user, through use of machine learning, and can be distributed through software updates, via an anti-spam web service, and so on.","The actions may also be configured to implement a hierarchy which addresses the various degrees of certainty afforded by the identifying mechanisms (x). For example, the manager module (m) may be executed on the server (m) to store the messages (h) of  in one of a plurality of folders (), . . . , (y), . . . , (Y) based on the identifying mechanisms satisfied by the messages. The plurality of folders ()-(Y) are illustrated as forming a hierarchy  from \u201cmore likely\u201d to \u201cless likely\u201d which indicate respective likelihoods that the identifying mechanisms indicate the actual identity of a sender of a message. The manager module (m), for instance, may receive a first message that satisfies each of the identifying mechanisms ()-() previously described. Therefore, such a message is very likely to correctly identify a sender of the message, and is thus routed to the \u201cmore likely\u201d folder (), which may be configured as a user's inbox. Another message, however, may not satisfy any of the identity mechanisms ()-(), and therefore is route to the \u201cless likely\u201d folder (Y), which may be configured as a \u201cspam\u201d folder. A further message may satisfy the email address () and self-signed certificate () identifying mechanisms. Such a message may be routed to an \u201cintermediate\u201d folder (y), which may be configured as a \u201cquarantine\u201d folder in an email implementation. A variety of other hierarchical identifying mechanisms and corresponding actions may be employed, further discussion of which may be found in relation to .","Although the following discussion will describe the utilization of a SSSL (n) on a client (n), SSSLs (n), (k) may be configured to work similarly on the clients (n) and servers (m), respectively. However, how the SSSLs (n), (k) are stored may be different. For instance, the SSSL (n) on the client (n) may be stored in binary format in a registry, in a separate file, and so on. Certificates (which will be described in greater detail in the following discussion) can be stored with the SSSL, can be stored securely in a \u201ccertificate store\u201d of an Operating System (e.g., \u201cmy Certificates\u201d), and so on. The storage and management of the certificate, for instance, may be performed by a configuration application programming interface (CAPI). A reference\/index to the certificate is stored along with the email address of the sender in the SSSL in the registry\/file. For servers, the SSSL may be stored as part of the per-account information for the clients (n) on the server (m).","Exemplary Procedures","The following discussion describes techniques of SSSLs that may be implemented utilizing the previously described systems and devices. Aspects of each of the procedures may be implemented in hardware, firmware, or software, or a combination thereof. The procedures are shown as a set of blocks that specify operations performed by one or more devices and are not necessarily limited to the orders shown for performing the operations by the respective blocks. It should also be noted that the following exemplary procedures may be implemented in a wide variety of other environments without departing from the spirit and scope thereof.",{"@attributes":{"id":"p-0060","num":"0059"},"figref":["FIG. 3","FIG. 1"],"b":["300","102","302","102","1","104","304","102","1","104","110","302","102","106"]},"The communication module (n), when executed on the client (n), detects which identifying mechanism, if any, is employable to verify the email  (block ). For example, the communication module (n) may examine the email  to determine if any of the plurality of identifying mechanisms ()-(X) of  may be utilized to verifying the identity of the sender. For instance, the communication module (n) may examine header information in the email  to determine an email address , from which, the email  was sent. The communication module (n) may also examine the email  to locate a third-party certificate .","The communication module (n) is then executed to verify the email  using the detected identifying mechanisms (x) and determine an appropriate action from the SSSL (n) (block ). For example, the communication module (n) may query the certificate provider () of  to determine if the third-party certificate  is valid. If the verification is successfully performed (e.g., the third-party certificate is verified as valid), the communication module (n) may then determine which action should be performed on the email  from the SSSL (n). For instance, the SSSL (n) may have a plurality of entries which reference combinations of identifying mechanisms (x) and corresponding actions. Therefore, the communication module (n) may inspect the SSSL (n) to determine which action should be performed when the email  is verified as having a specified email address  and a verified third-party certificate . The SSSL (n) may also reference actions to be performed when one or more of the identifying mechanisms (x) fail. For instance, the third-party certificate  included in the email  may not be able to be verified, such as through unavailability of the certificate provider () of , counterfeiting of the third-party certificate , and so on.","One example of such an action is the routing of the email  based on the verification (block ). For instance, the client (n) may include a plurality of folders (), . . . , (), . . . , (A). Each of the plurality of folders ()-(A) in this example is configured to correspond to a hierarchical level of certainty that the email  was sent by the indicated sender, progressing from least certain (e.g., folder (A)) to most certain (e.g., folder ()). Therefore, an email  having an email address  included in the SSSL (n) and a verified third-party certificate  may provide a great deal of certainty that the sender is valid (i.e., who they say they are), and thus be routed to folder (), such as the client's inbox. On the other hand, if verification of the third-party certificate  failed, but the email address  matches an email address in the SSSL (n), the email  may be routed to an intermediate folder (), such as a quarantine folder. A variety of other routing techniques and other actions may be performed based on a result of the verification of the email , such as routing to the filter module (n) of  for further processing, including a \u201chint\u201d regarding the result of the verification to the filter module (n), and so on, further discussion of which may be found in relation to the following figure.",{"@attributes":{"id":"p-0064","num":"0063"},"figref":"FIG. 4","b":["400","402"]},"As before, a communication module is executed to detect which of a plurality of identifying mechanisms may be utilized to verify the message (block ). For example, the message may be examined to determine if it includes a sender's address (e.g., email address), a third-party certificate, a self-signed certificate, a passcode, a computational proof, an IP address, a sender identifier, a monetary attachment, and so on. The communication module then verifies the message using one or more of the detected mechanisms (block ). For example, a communication module may determine that the message includes the sender's address and then verify whether the sender's address is included in a SSSL. The communication module may then determine if another identifying mechanism is available (decision block ), and if so, verify the message using the detected identifying mechanism (block ). Continuing with the previous example, the communication module may determine that the message includes a result of a computational proof, and then verify whether the result is correct.","Once no other identifying mechanisms are available (decision block ), a result of the verifying and the message are both communicated to a filter module for further processing (block ). For example, the result may indicate which identifying mechanisms were utilized for consideration by the filter module when processing the message. In another example, the result may be a value indicating a relative likelihood that the message was sent from a trusted sender. For instance, the value may be configured as a likelihood score that the sender is not a spammer.","The filter module may then process the message using a plurality of filters and the result (block ) as previously described. For example, the result may act as a \u201chint\u201d to the filter module for use with one or more spam filters for further processing, such as a weight for adding to a probability calculation using a linear model, an absolute reduction in a probability assigned the message, a change in the filtering threshold (e.g., to be less aggressive), an additional feature to the decision process, and so forth. Thus, the SSSL may be employed with other spam filters to process a message.",{"@attributes":{"id":"p-0068","num":"0067"},"figref":["FIG. 5","FIG. 4"],"b":["500","502","400","504"]},"In a \u201cuser driven\u201d mode, for instance, the user is presented with a list of the identifying mechanisms for selection (block ). In an implementation, the identifying mechanisms output to the user are those which are present in the message. For example, the communication module may indicate which of the plurality of identifying mechanisms (x) are met by the message, such as through highlighting, inclusion of just those identifying mechanisms in a menu, and so on. The user can then select the methods to be added to the SSSL, such as not to include self-signed certificates if the user knows that the mail transport agent (MTA) sometimes breaks signatures, and so on.","In a \u201csoftware driven\u201d mode, the communication module is executed to select each identifying mechanism met by the message that is deemed secure (block ). For instance, the communication module may include a configuration file that describes which of the plurality of identifying mechanisms (x) of  is secure as previously described. The configuration file may be modified via software updates, via an anti-spam web service, configured by the user, and so on.","In a \u201cmost secure\u201d mode, the communication module is executed to select the \u201cmost secure\u201d identifying mechanism (or combination thereof) (block ) for verifying the identity of a sender. The relative security of the identifying mechanisms may be contained in a configuration file and can be changed via software updates, via an anti-spam web service, by user configuration, and so forth.","The selected identifying mechanism(s) and the corresponding action are then added to the SSSL (block ). Thus, another email may be processed using the identified selection mechanism and corresponding action when indicated by the SSSL (block ). In an implementation, when a new entry is made to the SSSL, the communication module is executed to check if there are any less secure entries and offer to remove these entries, such as by prompting a user as to the existence of entries for a particular sender having less secure identifying mechanisms.","In another implementation, the communication module may utilize a variety of additional considerations when adding a user to the SSSL, i.e., a user's address and another identifying mechanism. For example, the communication module may offer to add a sender when the user has received and read one or more messages from the particular sender. The criteria for making this suggestion can also be affected by the presence of the identifying mechanisms discussed above. A message with accompanying computational proof, for instance, may result in immediately suggesting that the user add the sender to the SSSL, while the presence of a third-party certificate might result in a prompt the second time a message from that sender is read. In general, the criteria used to suggest (or even automatically add) senders to the SSSL can be made easier or more stringent depending on the presence or absence of any of the identifying mechanisms that were previously described.","Although the invention has been described in language specific to structural features and\/or methodological acts, it is to be understood that the invention defined in the appended claims is not necessarily limited to the specific features or acts described. Rather, the specific features and acts are disclosed as exemplary forms of implementing the claimed invention."],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"BRIEF DESCRIPTION OF THE DRAWINGS","p":[{"@attributes":{"id":"p-0011","num":"0010"},"figref":"FIG. 1"},{"@attributes":{"id":"p-0012","num":"0011"},"figref":["FIG. 2","FIG. 1"]},{"@attributes":{"id":"p-0013","num":"0012"},"figref":"FIG. 3"},{"@attributes":{"id":"p-0014","num":"0013"},"figref":"FIG. 4"},{"@attributes":{"id":"p-0015","num":"0014"},"figref":"FIG. 5"}]},"DETDESC":[{},{}]}
