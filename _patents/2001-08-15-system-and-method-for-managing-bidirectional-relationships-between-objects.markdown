---
title: System and method for managing bi-directional relationships between objects
abstract: A bi-directional relationship manager is described for setting a new reference value for managing bi-directional relationships between objects in an object model. The bi-directional relationship manager receives bi-directional relationship information indicating interrelation between objects having one or more bi-directional relationships. It creates proxy objects based on the bi-directional relationship information for selected bi-directional relationship objects having bi-directional relationships. A created proxy object receives a new reference value to be set in a selected object relating to a bi-directional relationship. It determines, using one or more of the proxy objects, a new peer value to be set in a peer object which has the bi-directional relationship with the selected object, and sets the new peer value to a proxy object created for the peer object. It may also update reference values of other related objects that are related to the selected object through one or more bi-directional relationships to reflect the change in references.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=07020659&OS=07020659&RS=07020659
owner: OIC Acquistion I Corporation
number: 07020659
owner_city: Redwood Shores
owner_country: US
publication_date: 20010815
---

{"@attributes":{"id":"description"},"BRFSUM":[{},{}],"p":["This invention relates to a system and method for managing relationships between objects, and more particularly, to a system and method for managing bi-directional relationships between objects.","Object model technology is becoming more popular for building enterprise applications. However, many organizations have already developed non-object oriented data storage systems and have their corporate data stored in those databases. Accordingly, it is desirable to provide a mechanism to allow object oriented applications to manipulate data in non-object oriented databases, such as relational databases (i.e., write, read, delete and update data in or from the databases as application objects). Object-oriented applications are built using object models with inheritance and relationships, whereas relational databases consist of flat tables and foreign keys. It is desirable to be able to represent the raw database data as application objects.","Databases are queried through a database query language, such as Structured Query Language (SQL), however it is desirable to query objects at the object level and through traversing the object model. To do so effectively, the relationships among objects need to be considered.","In an object model, some objects may reference other objects. When an object referenced by an other object has a reference back to the first object, these objects are related through a bi-directional relationship. When a user changes a reference in one object to another object, the relationship needs to be modified accordingly to maintain the bi-directional relationships among the related objects.","In existing systems, it is the user's responsibility to maintain these relationships. The user may need to develop code to modify references in objects one by one each time when a reference is changed. This is time and labor consuming and may involve errors. This prior solution results in added code maintenance by client developers. Also, this prior solution increases the chances of developer-created code error.","Accordingly, it is desirable to provide users with an automated means of maintaining bi-directional relationships among objects in an object model.","It is an object of the invention to provide a novel system and method for managing bi-directional relationships between objects that obviates or mitigates at least one of the disadvantages of existing systems.","The present invention uses proxy objects which have information regarding bi-directional relationships to determine a new value to be set in an object having a bi-directional relationship.","In accordance with an aspect of the present invention, there is provided a method for setting a new reference value for managing bi-directional relationships between objects in an object model. The method comprises the steps of receiving bi-directional relationship information indicating an interrelation between objects having one or more bi-directional relationships; creating proxy objects based on the bi-directional relationship information for selected bi-directional relationship objects having bi-directional relationships; receiving a new reference value to be set in a selected object relating to a bi-directional relationship; determining, using one or more of the proxy objects, a new peer value to be set in a peer object which has the bi-directional relationship with the selected object; and setting the new peer value to a proxy object created for the peer object.","In accordance with another aspect of the invention, there is provided a method for creating proxy objects for managing bi-directional relationships between objects in an object model. The method comprises the steps of receiving bi-directional relationship information indicating interrelation between objects having one or more bi-directional relationships; and creating proxy objects based on the bi-directional relationship information for selected bi-directional relationship objects having bi-directional relationships at peer relationships that comprise the bi-directional relationships, a created proxy object being capable of receiving a new reference value to be set in a selected object relating to a bi-directional relationship, determining, using one or more of the proxy objects, a new peer value to be set in a peer object which has the bi-directional relationship with the selected object, and setting the new peer value to a proxy object created for the peer object.","In accordance with another aspect of the invention, there is provided a bi-directional relationship manager for setting a new reference value for managing bi-directional relationships between objects in an object model. The bi-directional relationship manager comprises a bi-directional relationship information receiver for receiving bi-directional relationship information indicating interrelation between objects having one or more bi-directional relationships; and a proxy object creator for creating proxy objects based on the bi-directional relationship information, for selected bi-directional relationship objects having bi-directional relationships, at peer relationships that comprise the bi-directional relationships, a created proxy object receiving a new reference value to be set in a selected object relating to a bi-directional relationship, determining, using one or more of the proxy objects, a new peer value to be set in a peer object which has the bi-directional relationship with the selected object and setting the new peer value to a proxy object created for the peer object.","In accordance with another aspect of the invention, there is provided a proxy object for setting a new reference value for managing bi-directional relationships between objects in an object model. The proxy object comprises a new value receiver for receiving a new reference value to be set in a selected object relating to a bi-directional relationship; a new peer value determiner for determining a new peer value to be set in a peer object which has the bi-directional relationship with the selected object, the new peer value determiner using bi-directional relationship information indicating interrelation between objects having one or more bi-directional relationships; and a new peer value setter for setting the new peer value to a proxy object created for the peer object.","In accordance with another aspect of the invention, there is provided computer media storing the instructions or statements for use in the execution in a computer of a method for creating proxy objects for managing bi-directional relationships between objects in an object model. The method comprises the steps of receiving bi-directional relationship information indicating interrelation between objects having one or more bi-directional relationships; and creating proxy objects based on the bi-directional relationship information for selected bi-directional relationship objects having bi-directional relationships at peer relationships that comprise the bi-directional relationships, a created proxy object being capable of receiving a new reference value to be set in a selected object relating to a bi-directional relationship, determining, using one or more of the proxy objects, a new peer value to be set in a peer object which has the bi-directional relationship with the selected object, and setting the new peer value to a proxy object created for the peer object.","In accordance with another aspect of the invention, there is provided electronic signals for use in the execution in a computer of a method for creating proxy objects for managing bi-directional relationships between objects in an object model. The method comprises the steps of receiving bi-directional relationship information indicating interrelation between objects having one or more bi-directional relationships; and creating proxy objects based on the bi-directional relationship information for selected bi-directional relationship objects having bi-directional relationships at peer relationships that comprise the bi-directional relationships, a created proxy object being capable of receiving a new reference value to be set in a selected object relating to a bi-directional relationship, determining, using one or more of the proxy objects, a new peer value to be set in a peer object which has the bi-directional relationship with the selected object, and setting the new peer value to a proxy object created for the peer object.","In accordance with another aspect of the invention, there is provided a computer program product for use in the execution in a computer of a method for creating proxy objects for managing bi-directional relationships between objects in an object model. The product comprises a module for receiving bi-directional relationship information indicating interrelation between objects having one or more bi-directional relationships; and a module for creating proxy objects based on the bi-directional relationship information for selected bi-directional relationship objects having bi-directional relationships at peer relationships that comprise the bi-directional relationships, a created proxy object being capable of receiving a new reference value to be set in a selected object relating to a bi-directional relationship, determining, using one or more of the proxy objects, a new peer value to be set in a peer object which has the bi-directional relationship with the selected object, and setting the new peer value to a proxy object created for the peer object.","Other aspects and features of the present invention will be readily apparent to those skilled in the art from a review of the following detailed description of preferred embodiments in conjunction with the accompanying drawings.","Referring to , a bi-directional relationship (BDR) manager  in accordance with an embodiment of the present invention is described. The BDR manager  manages bi-directional relationships between objects in an object model .  will be further described below, however, object relationships will now be described.","A bi-directional relationship is a relationship between a group of objects and another group of objects in which each group of objects has a reference to the other group of objects. A group of objects may contain one or more objects. A bi-directional relationship may be defined between object classes that contain objects.  shows examples of different types of bi-directional relationships.","In , object class A contains object a, object class B contains object b, object class C contains objects c and c, object class D contains objects d and d and object class E contains objects e, e and e.","Object class A and object class B are related through a one-to-one bi-directional relationship. This means that an object in object class A has a reference to a single object in object class B, and an object in object class B has a reference to a single object in object class A. For example, object a has a one-to-one bi-directional relationship with object b as shown with arrow . The one-to-one bi-directional relationship  between objects may be considered as a pair of one-to-one unidirectional peer relationships, e.g., a peer relationship  from object a to object b, and the other peer relationship  from object b to object a.","Object class A and object class C are related through a one-to-many bi-directional relationship. This means that an object in object class A has a reference to one or more objects in object class C, and an object in object class C has a reference to a single object in object class A. For example, object a has a one-to-many bi-directional relationship with objects c and c as shown with arrow . The one-to-many bi-directional relationship  between objects may be considered as a pair of uni-directional peer relationships, e.g., a one-to-many uni-directional peer relationship  from object a to objects c and c, and a one-to-one uni-directional peer relationship  from objects c and c to object a.","Object class D and object class E are related through a many-to-many bi-directional relationship. This means that an object in object class D has a reference to one or more objects in object class E, and an object in object class E has a reference to one or more objects in object class D. For example, objects d and d have a many-to-many bi-directional relationship with objects e, e and e as shown with arrow . The many-to-many bi-directional relationship  between objects may be considered as a pair of uni-directional peer relationships, e.g., a one-to-many uni-directional peer relationship  from objects d and d to objects e, e and e, and a one-to-many uni-directional peer relationship  from objects e, e and e to objects d and d.","An object class may have multiple bi-directional relationships with multiple object classes, as exemplified by object class A in . In that case, multiple bi-directional relationships may be the same type or different type of bi-directional relationships.","The objects having a bi-directional relationship may be called BDR objects. A BDR object is a peer object for the corresponding BDR object related to the BDR object through a bi-directional relationship. For example, objects a and b are peer objects for the one-to-one bi-directional relationship; and object a and objects c and c are peer objects for the one-to-many bi-directional relationship.","Bi-directional relationships are provided through references set in objects to identify their peer objects.","Referring back to , an object model defining unit  assists a developer of the object model  to define the structure and relationships of objects and\/or object classes in the object model . Bi-directional relationships between objects are also defined through the object model defining unit .","The BDR manager  has a BDR information receiver  and a proxy object creator . The BDR information receiver  is provided for receiving from the object model defining unit  BDR information regarding bi-directional relationships in the object model . The proxy object creator  is provided for creating proxy objects based on the BDR information for handling the bi-directional relationships in the object model . A created proxy object  has a new reference receiver , a new peer reference determiner  and a new peer reference setter . The new reference receiver  receives a new reference to be set for an object. The new peer reference determiner  determines a new reference for a peer object, i.e., a new peer reference, in response to the new reference. The new peer reference setter  sets the new peer reference to a corresponding proxy object of the peer object. The new reference may be a value of a new reference to be added, a value of a new reference for changing a current reference to the new references, or a value of a current reference for removing it. The functions of these elements are further described referring to .","After the object model  is defined, the BDR manager  receives BDR information from the object model defining unit  through the BDR information receiver  (). The BDR information includes information regarding those BDR objects having bi-directional relationships, the type of bi-directional relationships the BDR objects have, and which objects are peer objects for the BDR objects.","At the time of creating instances of objects according to the object model definition defined by the object model defining unit , based on the BDR information, the BDR manager  creates, using the proxy object creator , a proxy object for a BDR object at a peer relationship which is part of a bi-directional relationship (). The BDR manager  may create proxy objects for some or all BDR objects at some or all of their peer relationships comprising bi-directional relationships.","To explain proxy objects,  shows examples of proxy objects created by the BDR manager . Objects a, b, c, d and e correspond to those shown in . In , multiple objects in the same object class are shown overlapped for the sake of simplicity of the illustration. Proxy object  is created for object a at the peer relationship  to its peer object b, and proxy object  is created for object b at the peer relationship  to its peer object a. Similarly, proxy object  is created for object a at the peer relationship  with its peer objects c and c, and proxy object  is created for object c at the peer relationship  with its peer object a. Proxy object  handles references to objects c and c as a collection of references. Another proxy object is also provided for a peer relationship from object c to object a, but is not shown for simplicity of the illustration. Proxy object  is created for object d at the peer relationship  to a collection of its peer objects e, e and e, and proxy object  is created for object e at the peer relationship  with a collection of its peer objects d and d. Similar proxy objects are also provided for objects d, e and e.","Referring back to , during the run time, when a user attempts to change a reference in a BDR object, the proxy object  of the BDR object receives the new reference through the new value receiver  (). As the proxy objects are created based on the BDR information, each proxy object has knowledge regarding its host object to which it belongs, one or more peer objects with which the host object relates through a bi-directional relationship and the type of the bi-directional relationship. Based on this knowledge, the new peer reference determiner  determines a new peer reference to be set for the peer object(s) in response to the received new reference ().","For example, in , in the original state , objects a and b and objects a and b are respectively related through one-to-one bi-directional relationships as represented by peer relationships , , , . Proxy , proxy , proxy  and proxy  are provided for objects a, b, a and b, respectively. When a user attempts to set a new reference b in object a, this new reference is received by proxy object  provided for object a. Since proxy object  knows that the relationships between objects a and b and objects a and b are one-to-one bi-directional relationships, it can determine what reference is to be set for its peer object b. It sets the reference in object b as null to delete the one-to-one bi-directional relationship between objects a and b in order to allow a new one-to-one bi-directional relationship between objects a and b.","The new peer reference setter  sets the new peer reference in the proxy object of the peer object (). In the above example shown in , the new peer reference \u201cnull\u201d will be set in proxy object  to delete peer relationships. Also, the proxy objects of the related objects a and b are set with new references. This may be expressed as follows:\n\n","Thus, when a reference is changed in an object having a bi-directional relationship, the BDR manager  automatically maintains the bi-directional relationships among the related objects. Accordingly, it is no longer up to the developer of the object model to ensure that all references are maintained. It reduces the amount of work required by the developer who would otherwise have to code the management within his or her application leaving the application open to errors and requiring higher levels of maintenance when changes occur in the design.","In the above embodiment, the BDR manager  receives the BDR information from the object model defining unit . However, it may receive the BDR information from a storage of the object model definition. Alternatively, the BDR manager  may have a similar object model defining unit or a storage internally and receive the BDR information from them.","BDR objects having bi-directional relationships may contain attributes to hold reference values that represent references to their peer objects.  shows examples of attributes in objects a, b, c and c shown in . Object a has attributes  and . Attribute  holds a reference value b to indicate the uni-directional peer relationship  to object b. Object b has an attribute  which contains a reference value to indicate the uni-directional peer relationship  to object a. The attribute  of object a contains a collection of reference values c and c to indicate the uni-directional peer relationship  to objects c and c. Objects c and c have attributes ,  respectively which hold a reference value a to indicate the uni-directional peer relationship  to object a. In this example, the reference values are the same as the object names, but may be any identification of the objects. An identification may not directly identify the object instance, but rather identify the type of object.","Using the example shown in , a BDR manager  in accordance with another embodiment of the present invention is now described referring to . The BDR manager  uses object model meta-data received from a meta-data and mapping system .","The meta-data and mapping system  is provided between an object application  and a data storage . It allows the application  to manipulate data in the data storage  at the object level, i.e., read, write, delete and update data in or from the data storage  as application objects in an object model . The application  may use an object oriented language, such as the Java (TM Sun Microsystems) programming language. However, the invention is not limited to the use of the Java language. The data storage  may be any data storage in which data is stored in a specific architecture such that the data can be queried. For example, it may be a database, such as a relational database, or a file system, such as an extensible Markup Language (XML) file system. It may be a collection of multiple data storage systems.","The meta-data and mapping system  has a meta-data defining unit , a meta-data storage  and a mapping engine . The meta-data defining unit  is a development-time tool that assists developers of the object model  or data storage  in defining object model meta-data representing how the object model  maps to the data architecture of the data storage , or vise versa. For example, when the data storage  is a database that contains tables having attributes and\/or foreign keys for referring to data in other tables, the meta-data defining unit  assists developers to map the tables, attributes and foreign keys in the database to object classes, objects and relationships in the object model . Thus, the meta-data contains the information that represents relationships and the structures of interrelated objects. For example, it contains the information regarding what attributes are used, in an object, to reference another object. The meta-data defining unit  may be a mapping tool for mapping between the object model  and the architecture of the data storage , an Application Programming Interface (API) or a tool for manually editing the meta-data.","For example, the meta-data relating to the one-to-many bi-directional relationship between classes A and B may be defined as follows:","For class A:",{"@attributes":{"id":"p-0057","num":"0000"},"ul":{"@attributes":{"id":"ul0003","list-style":"none"},"li":{"@attributes":{"id":"ul0003-0001","num":"0000"},"ul":{"@attributes":{"id":"ul0004","list-style":"none"},"li":["OneToManyMapping bMapping=new OneToManyMapping( );","bMapping.setAttributeName(\u201cb\u201d);","bMapping.setReferenceClass(B.class);","\/\/Set the mapping to use the proxy","bMapping.useTransparentCollection( );","bMapping.addTargetForeignKeyFieldName(\u201cB_TABLE.A_ID\u201d, \u201cA_TABLE.ID\u201d);","\/\/set bi-directional information","bMapping.addRelationshipPartnerAttributeName(\u201ca\u201d);","descriptor.addMapping(bMapping);\n\nFor class B:\n","OneToOneMapping aMapping=new OneToOneMapping( );","aMapping.setAttributeName(\u201ca\u201d);","aMapping.setReferenceClass(A.class);","\/\/Set the mapping to use the proxy","aMapping.useBasicindirection( );","aMapping.addForeignKeyFieldName(\u201cB_TABLE.A_ID\u201d, \u201cA_TABLE.ID\u201d);","\/\/set bi-directional information","aMapping.addRelationshipPartnerAttributeName(\u201cb\u201d);","descriptor.addMapping(aMapping);"]}}}},"The setting regarding the use of the proxy is further described below.","The meta-data storage  stores the meta-data defined by the meta-data defining unit . It may store the meta-data as XML files, in proprietary textual based representation, or in a runtime object structure. The object model meta-data storage  as provided is external to the object classes.","The mapping engine  is a run-time component that uses the meta-data and executes pre-defined mapping methods to map objects in the object model  into or from data in the data storage . The mapping methods are defined such that they are executable on the data storage  in terms of the object model , rather than the data storage architecture. This allows users to use the mapping system  without knowledge of data storage access APIs or data storage querying languages, such as Structured Query Language (SQL).","The BDR manager  receives the object model meta-data from the meta-data and mapping system , and manages bi-directional relationships between objects in the object model . It provides automatic bi-directional relationship maintenance functions using proxy objects, as further described below.","The BDR manager  receives the object model meta-data from the meta-data and mapping system  in this embodiment. However, the BDR manager  may receive it from an other meta-data system which is capable of defining the object model meta-data. Alternatively, the BDR manager  may include the meta-data defining unit  that allows users to define object-model meta-data. It may also include a meta-data storage for storing the meta-data.",{"@attributes":{"id":"p-0063","num":"0083"},"figref":["FIG. 7","FIG. 8"],"b":["500","500","602","604","606","610"]},"The meta-data receiver  receives the object model meta-data stored in the meta-data storage  (). The object model meta-data includes BDR information indicating those object classes that have bi-directional relationships with certain object classes, the type of the bi-directional relationships, and what attributes are used in an object to reference another object. However, the object model meta-data typically does not include actual reference values indicating current peer objects for BDR objects.","The proxy reference setter  allows the developer to select some or all of BDR objects for which the developer desires to use the automatic bi-directional relationship maintenance functions of the BDR manager . Through the proxy reference setter , the developer sets a proxy reference to the selected BDR objects (). The setting of proxy references is typically completed before the user start changing reference values.","For example, for object classes A and B having a one-to-one bi-directional relationship:",{"@attributes":{"id":"p-0067","num":"0087"},"tables":{"@attributes":{"id":"TABLE-US-00001","num":"00001"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"70pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"147pt","align":"left"}}],"thead":{"row":{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"public class A{"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"84pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"133pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"public String name;"]},{"entry":[{},"public B b0Object;"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"70pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"147pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"}"]},{"entry":[{},"public class B{"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"84pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"133pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"public String name;"]},{"entry":[{},"public A a0Object;"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"70pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"147pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"}"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}]}}]}},"br":{}},{"@attributes":{"id":"p-0068","num":"0088"},"tables":{"@attributes":{"id":"TABLE-US-00002","num":"00002"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"63pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"154pt","align":"left"}}],"thead":{"row":{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"public class A{"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"84pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"133pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"public String name;"]},{"entry":[{},"public Object b0Object;"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"63pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"154pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"}"]},{"entry":[{},"public class B{"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"84pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"133pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"public String name;"]},{"entry":[{},"public Object a0Object;"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"63pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"154pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"}"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}]}}]}}},"As shown in , the proxy references may be set by replacing the reference values of the attributes , , ,  and  of the selected BDR objects a, b, c and c to reference corresponding proxy objects \u2013, respectively.","At runtime, when the user attempts to manipulate data stored in the data storage , the mapping engine  creates instances of objects corresponding to the data, using the object model meta-data or uses the object value provided by the application . The object value may be passed in from the application  for newly created objects in cases where the client wishes to create data on the data storage  to represent those objects.","The object meta-data received from the meta-data storage  includes bi-directional information that indicates the interrelation between object classes, but it may not have reference information representing actual reference values that indicate the corresponding peer objects for BDR objects. In that case, the BDR manager  retrieves reference value information from the data storage  or from newly created objects in the object model , using the reference value retriever  (). The reference value retriever  may be a part of the mapping engine . The reference value information in individual selected BDR objects  is typically represented by values stored in one or more attributes  which are used to indicate the bi-directional relationships. This step may be omitted if the meta-data already has this reference value information.","Using the meta-data and reference value information, the BDR manager  creates a proxy object for the selected BDR objects at each of the peer relationships that comprise the bi-directional relationships for the selected BDR objects (). For the example of objects shown in , proxy objects , ,  and  are created for objects a, b and c and c at each peer relationship, as shown in . For the one-to-many peer relationships, multiple objects are treated as a collection, and a single proxy object  or  is created in this example. However, a single proxy object may be provided for each object or for a different group of objects.","Based on the object model meta-data and reference value information, each proxy object has knowledge of its host object to which the proxy object is provided, its peer object with which the host object has a bi-directional relationship and the type of the bi-directional relationship. For example, proxy object  has a host object attribute  indicating its host object a, and a reference attribute  indicating its referencing object b. Similarly, proxy object  has a host object attribute  indicating its host object b, and a reference attribute  indicating its referencing object a. Proxy object  has a host object attribute  indicating its host object a, and a reference attribute  indicating its referencing objects c and c. Proxy object  has a host object attribute  indicating its host objects c and c, and a reference attribute  indicating its referencing object a.","Referring back to , when a user attempts to set a new reference value for one of the selected BDR objects, the corresponding proxy object  of the BDR object receives the new reference value (). The proxy object  then determines a new reference value, i.e., new peer value, to be set for a peer object of the BDR object using the meta-data and reference value information (). This may be carried out by bringing the information regarding the new reference value through proxy objects related to the bi-directional relationship, as further described below. Then, the proxy object  sets the new peer value in a relevant proxy object of the peer object ().","Accordingly, the BDR manager  may automatically maintain bi-directional relationships when a reference value is changed in a selected BDR object.","The determination of new peer values is further described referring to  using some examples.",{"@attributes":{"id":"p-0077","num":"0097"},"figref":"FIG. 10","b":["0","0","800","0","0","443","445","412","414","0","0","810","0","0"],"ul":{"@attributes":{"id":"ul0005","list-style":"none"},"li":{"@attributes":{"id":"ul0005-0001","num":"0000"},"ul":{"@attributes":{"id":"ul0006","list-style":"none"},"li":["a.setB(b)\n\nThe proxy object  of the object a receives the new reference value b and sets it in its reference attribute . As the proxy object  has knowledge that objects a and b have a one-to-one bi-directional relationship, it determines that a new peer value a and sets it in the reference attribute  of the proxy object  for the peer object b. This determination and setting of the new values may be carried out automatically by the following process:\n","a.proxy.setValue(b);","a.proxy.b.proxy.setValue(a);\n\nThus, the one-to-one bi-directional relationship is updated through a pair of uni-directional peer relationships  and .\n"]}}}},{"@attributes":{"id":"p-0078","num":"0101"},"figref":"FIG. 11","b":["820","0","0","1","463","422","0","0","1","830","2","0"],"ul":{"@attributes":{"id":"ul0007","list-style":"none"},"li":{"@attributes":{"id":"ul0007-0001","num":"0000"},"ul":{"@attributes":{"id":"ul0008","list-style":"none"},"li":["a.addC(c)\n\nThe proxy object  of the object a receives the new reference value c and adds it in its reference attribute . As the proxy object  has knowledge that object a and object c have a one-to-many bi-directional relationship, it determines that a new peer value a and sets it in the reference attribute  of the proxy object  of the object c. This determination and setting of the new values may be carried out automatically by the following process:\n","a.proxy.addValue(c);","a.proxy.c.proxy.setValue(a);\n\nThus, the one-to-many bi-directional relationship is updated through a pair of uni-directional peer relationships  and .\n"]}}}},{"@attributes":{"id":"p-0079","num":"0105"},"figref":"FIG. 12","b":["840","0","0","1","463","422","0","0","1","467","426","1","0","850","1","1"],"ul":{"@attributes":{"id":"ul0009","list-style":"none"},"li":{"@attributes":{"id":"ul0009-0001","num":"0000"},"ul":{"@attributes":{"id":"ul0010","list-style":"none"},"li":["c.setA(a)\n\nThe proxy object  of the object c receives the new reference value a, which changes the reference value  of proxy object  from a to a, which results in removal of a peer relationship  from proxy object  to object a. As the proxy object  has knowledge that objects a and a and objects c and c have a one-to-many bi-directional relationship, the proxy object  determines a new peer value to be c, i.e., removing c, from the collection of reference values  in the proxy object  of object a. This results in removing the peer relationship  from proxy object  to object c. The proxy object  also determines another new peer value  to be c and sets this value in the reference attribute  proxy object  for object a This results in adding a peer relationship  from proxy object  to object c. The determination and setting of the new values may be carried out automatically by the following process:\n","c.proxy.a.proxy.removeValue(c);","c.proxy.removeValue(a);","c.proxy.setValue(a);","c.proxy.a.proxy.setValue(c);\n\nThus, the one-to-many bi-directional relationship is updated through a pair of uni-directional peer relationships  and .\n"]}}}},{"@attributes":{"id":"p-0080","num":"0111"},"figref":"FIG. 13","b":["860","0","1","0","1","2","862","861","1","0","1","2","864","863","1","0","1","870","1","1"],"ul":{"@attributes":{"id":"ul0011","list-style":"none"},"li":{"@attributes":{"id":"ul0011-0001","num":"0000"},"ul":{"@attributes":{"id":"ul0012","list-style":"none"},"li":["d.removeE(e)\n\nThe proxy object  of the object d receives the reference value e to be removed, which changes the reference value  of proxy object  from a collection of e, e and e to a new collection of e and e. This results in removal of the peer relationship  from proxy object  to object e. As the proxy object  has knowledge that objects d and d and objects e, e and e have a many-to-many bi-directional relationship, the proxy object  determines a new peer value to be d, i.e., removing d, from the collection of reference values  in the proxy object  of object e. This results in removing the peer relationship  from proxy object  to object d. The determination and setting of the new values may be carried out automatically by the following process:\n","d.proxy.e.proxy.removeValue(d);","d.proxy.removeValue(e);\n\nThus, the one-to-many bi-directional relationship is updated through the removal of the pair of uni-directional peer relationships  and .\n"]}}}},"The above embodiments are described using Java technology as an example of an object based technology and language. However, the applicability of the invention is not limited to Java or Java based technologies. The invention may be applied to other object-based languages and technologies, such as those developed by Microsoft Corporation or Hewlett Packard, with or without appropriate modification as necessary or desired, and such application is within the scope of the invention.","The bi-directional relationship manager of the present invention may be implemented by any hardware, software or a combination of hardware and software having the above described functions. The software code, either in its entirety or a part thereof, may be stored in a computer readable memory. Further, a computer data signal representing the software code which may be embedded in a carrier wave may be transmitted via a communication network. Such a computer readable memory and a computer data signal are also within the scope of the present invention, as well as the hardware, software and the combination thereof.","While particular embodiments of the present invention have been shown and described, changes and modifications may be made to such embodiments without departing from the true scope of the invention. For example, the elements of the bi-directional relationship manager are described individually, however, two or more elements may be provided as a single element, or one or more elements may be shared with other component in other computer systems."],"heading":["BACKGROUND OF THE INVENTION","SUMMARY OF THE INVENTION","DETAILED DESCRIPTION OF THE PREFERRED EMBODIMENTS"],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"BRIEF DESCRIPTION OF THE DRAWINGS","p":["The invention will be further understood from the following description with reference to the drawings in which:",{"@attributes":{"id":"p-0019","num":"0018"},"figref":"FIG. 1"},{"@attributes":{"id":"p-0020","num":"0019"},"figref":"FIG. 2"},{"@attributes":{"id":"p-0021","num":"0020"},"figref":"FIG. 3"},{"@attributes":{"id":"p-0022","num":"0021"},"figref":"FIG. 4"},{"@attributes":{"id":"p-0023","num":"0022"},"figref":"FIG. 4A"},{"@attributes":{"id":"p-0024","num":"0023"},"figref":"FIG. 5"},{"@attributes":{"id":"p-0025","num":"0024"},"figref":"FIG. 6"},{"@attributes":{"id":"p-0026","num":"0025"},"figref":["FIG. 7","FIG. 6"]},{"@attributes":{"id":"p-0027","num":"0026"},"figref":"FIG. 8"},{"@attributes":{"id":"p-0028","num":"0027"},"figref":"FIG. 9"},{"@attributes":{"id":"p-0029","num":"0028"},"figref":"FIG. 10"},{"@attributes":{"id":"p-0030","num":"0029"},"figref":"FIG. 11"},{"@attributes":{"id":"p-0031","num":"0030"},"figref":"FIG. 12"},{"@attributes":{"id":"p-0032","num":"0031"},"figref":"FIG. 13"}]},"DETDESC":[{},{}]}
