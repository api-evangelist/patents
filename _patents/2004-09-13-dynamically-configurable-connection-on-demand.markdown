---
title: Dynamically configurable connection on demand
abstract: Mechanisms to provide functionality that allows an electronic device to automatically use an appropriate network connection when an application requests access to a network resource. Initiation of the appropriate network connection may be determined based on contextual information provided by the application.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08127045&OS=08127045&RS=08127045
owner: Apple Inc.
number: 08127045
owner_city: Cupertino
owner_country: US
publication_date: 20040913
---

{"@attributes":{"id":"description"},"BRFSUM":[{},{}],"heading":["TECHNICAL FIELD","BACKGROUND","SUMMARY","DETAILED DESCRIPTION"],"p":["Embodiments of the invention relate to network communications. More particularly, embodiments of the invention relate to techniques for managing network connections.","Network connections for an electronic device (e.g., computer system, personal digital assistant, set top box) are requested in many situations. For example, a user may wish to check for electronic mail messages, an electronic mail application may automatically check for electronic mail messages, an application may automatically check for updates, a user may access a public page via the World Wide Web, or the user may access a private page via the World Wide Web. Each of these actions involving a network connection may have different characteristics.","Unfortunately, this may result in, for example, an electronic mail application initiating a virtual private network (VPN) connection periodically for background fetch operations, which may require active participation by a computer user. This results in less than optimal network interaction, which may be frustrating and\/or distracting to a user of the electronic device.","A network access request having context information may be generated by an application running on a host electronic system. The network access request may be passed to a system agent configured to service multiple applications running on the host electronic system. The system agent may determine whether to initiate a network connection in response to the network access request based on the context information. The network connection is selectively initiated based, at least in part, on the determining by the system agent.","In the following description, numerous specific details are set forth. However, embodiments of the invention may be practiced without these specific details. In other instances, well-known circuits, structures and techniques have not been shown in detail in order not to obscure the understanding of this description.","Described herein are mechanisms to provide functionality that allows a computer system (or other electronic device) to automatically utilize an appropriate network connection (e.g., VPN, PPP) when an application requests access to a network resource. In one embodiment, the appropriate network connection is determined based on contextual information provided by the application. For example, using a point-to-point protocol (PPP) connection (e.g., modem, PPPoE), typing a Universal Resource Locator (URL) in a Web browser should result in an automatic network connection.","For a Virtual Private Network (VPN) connection, the selection of network connection may be more complex. For example, typing a public URL (e.g., www.apple.com) may not result in utilization of a VPN connection, while typing a private URL (e.g., private.apple.com) may result in utilization of a VPN connection for authorized users. Utilization of the VPN connection for the public URL would result in authentication steps that may be distracting to a user or unnecessarily time consuming.","One mechanism for providing a network connection on demand is to provide a PPP connection each time an application attempts to send traffic to the network. When traffic arrives at the PPP networking layer, the system may not have enough information related to the context of the request in order to trigger the appropriate network connection. As a default, the system may attempt a connection for any traffic request. This is illustrated in the following example using an electronic mail application (hereinafter \u201cmail application\u201d for brevity).","A typical mail application may attempt to fetch new electronic mail in response to an explicit user request or as a background operation that occurs at predetermined time intervals. Fetching new electronic mail may include resolving a mail server address and making contact with the server. When such network traffic arrives in the networking stack, there is no way to effectively distinguish between a background fetch and a user initiated fetch. Both may be considered an application request that triggers a network connection. However, from a user perspective, these two functions are very distinct.","For the background fetch operation, the user may not be aware of the initiation of the fetch operation. The user may not be available to enter a password, if necessary. For the user initiated fetch operation, the user generally expects the fetch operation to occur. In addition when the application attempts a background fetch operation, the user may cancel the attempt. However, canceling one background fetch operation may not function to cancel subsequent background fetch operations. These subsequent background fetch operations may be distracting to the user.","An alternative mechanism may be to enable applications to provide contextual information along with a network access request. The contextual information may be used by system level components to determine what type of network connection should be triggered, if any. In this mechanism, the application is not required to determine the type of network connection to be triggered and the call may be made synchronously or asynchronously. The contextual information may be any type of contextual information, for example a flag indicating \u201cconnection mandatory\u201d or \u201cconnection optional,\u201d or may be more complex. Thus, the applications making the network calls are not required to include evaluation capability to determine the type of network connection to be triggered.","The mechanisms described herein are generally described with respect to the Macintosh\u00ae OS X environment; however, these mechanisms may also be applied to other operating systems, for example, Windows\u00ae, UNIX or LINUX. By way of background, the Mac OS X environment may be conceptualized by the layers illustrated in . User experience layer  is an abstraction for methodologies for creating applications. Each methodology may be a set of guidelines and\/of recommended technologies. Other operating systems may have similar conceptual layers.","Application environments layer  represents basic technologies for building applications. Application environment layer  may provide tools to developers for developing applications. Graphics and multimedia layer  may provide services for rendering two-dimensional and\/or three-dimensional graphics, audio and\/or video outputs. Application services layer  may provide features suited for applications rather than other types of software, for example, HTML rendering, font management, speech recognition, etc.","Core services layer  may implement low-level features that may be used by most types of software, for example, data formatting, memory management, process management, and\/or low-level network communications. In one embodiment, many of the features of core services layer  may be included in the Core Foundation layer, which may be composed of several frameworks within OSX of Apple Computer. Alternatively, in a Windows\u00ae operating system environment, similar functionality may be provided by sockets, which are known in the art. Core OS layer  may include the kernel, device drivers and\/or low-level commands of the operating system environment.","In general, the Core Foundation framework enables sharing of code and data among various frameworks and libraries and may enable some degree of operating system independence. In one embodiment the Core Foundation framework may provide common APIs and other structures including, for example, a plug-in architecture, XML property lists and\/or preferences.","In one embodiment, the Core Foundation framework may include a network connection API that allows an application to trigger a network connection. In one embodiment, the Core Foundation framework may send network traffic to available network connections and may not trigger a new network connection (e.g., a VPN connection). Thus, the Core Foundation framework may use a network connection that is not appropriate for the conditions.","Core operating system  may include system level functionality. That is core operating system  may provide control and access to system level hardware components, for example, network interfaces. Core operating system  may initiate, terminate and\/or otherwise control network connections using one or more network protocols. Thus, in order for an application to gain access to a network resource, interaction of multiple layers of an operating system environment may be required.",{"@attributes":{"id":"p-0024","num":"0023"},"figref":["FIG. 2","FIG. 2"]},"The API mechanism illustrated in  may provide dynamic network (e.g., PPP, VPN) connections based on contextual information to provide network connections that are appropriate for current system conditions. For example, network connections may not be allowed for applications checking for updates under certain conditions, or a VPN connection may be triggered only for private URLs and\/or user-initiated electronic mail fetch operations.","In one embodiment, a software component that requests a network connection may make a call to network API . The software components may be, for example, an electronic mail application (mail ) a Web browser (browser ) or any other type of application (application ). In one embodiment, network API  is a component of the Core Foundation framework or comparable system components (e.g., Sockets in a Windows\u00ae operating system environment), which are generally referred to herein as core API module . Core API module  may include other APIs or agents to provide additional functionality.","In one embodiment, a function call to network API  may include contextual information that may be used to determine characteristics of the network access in order to be used. For example, mail  may indicate whether the network connection is to be used for a background mail fetch or for a user initiated mail fetch. As another example, browser  may indicate whether a URL is entered or clicked by a user, or whether the URL is presented as part of an automatic refresh of a page. Other contextual information may also be provided by mail , application  and\/or browser .","In one embodiment, core API module  interacts with system module  to access network connection . In one embodiment system module  may include multiple APIs (e.g., , , , ) to interact with other system components and modules to provide desired functionality. In one embodiment, system module  may include agent preferences , agent  and PPP\/VPN agent  as well as additional and\/or different agents and related components.","In one embodiment, system module  includes functionality to analyze the contextual information received from core API module  to determine appropriate characteristics for the network connection to be used. For example, if a VPN connection is to be used to fetch e-mail, the fetch operation may only be performed for user initiated mail fetch operations. If a LAN connection is to be used to fetch e-mail, the fetch operation may be used for background as well as user initiated fetch operations. As another example, if a computer being used is not connected to a \u201chome\u201d network, a PPP connection may be used for public URLs and a VPN connection may be used for private URLs. When the computer is connected to the home network, both public and private URLs may be available via the LAN connection.",{"@attributes":{"id":"p-0030","num":"0029"},"figref":["FIG. 3","FIG. 3"]},"During execution, an application may require a network resource, . The electronic device running the application may be coupled with the network resource via a local area network, a PPP connection, a VPN connection, etc. The connection may be wired or wireless.","In one embodiment, the application may call for access to the network resource with contextual information, . The application may call for network access by performing a call to an API that supports network connections. The call my be followed by additional calls to other APIs. In one embodiment, the application provides to the API contextual information that is related to the network access.","The contextual information may include any type and\/or amount of contextual information. Using the example of an electronic mail program the contextual information may be a bit that indicates whether the network access is a background mail fetch operation or if the network access is a user initiated mail fetch operation. Other contextual information may include, for example, multiple bits, a priority, a status, a network connection type (e.g., a VPN connection, a modem connection, a PPP connection).","The contextual information may be evaluated to determine the appropriate network connection to be used, . In one embodiment, the contextual information is passed from the application to the Core Foundation framework and then from the Core Foundation framework to the system module as described above. In such an embodiment, the system module may perform the evaluation of the contextual information to determine the appropriate network connection.","In one embodiment, the system module may use system status or characteristics in evaluating the contextual information. For example, location and\/or connection information (e.g., work, home, remote) may be used with the contextual information in evaluating the network connection to be used. For example, if a user is at a work location coupled with a secure network, all mail fetch requests, whether background or user initiated, may be honored using the same local area network connection. When the user is in a different location, the evaluation of the contextual information may result in a different network connection being used.","In one embodiment, historical data may be used in evaluation of the contextual information, . The historical data may include, for example, previous actions by a user. For example, if a user has previously manually canceled a network connection attempt for a background mail fetch operation, the system module may not initiate a network connection under the same or similar conditions.","The evaluation using the historical data may be applied . Whether or not historical data is used, a network connection may be allowed or not allowed, , based on the evaluation of the system module (and\/or other components or agents). If the network connection is not allowed, , the connection is denied, .","If the network connection is allowed, , the system module may determine the connection type, . The connection type may include, for example, PPP, modem or VPN connections. The appropriate connection type is initiated, . When the network connection is accomplished the application may access the requested network resource.","In one embodiment, the techniques described herein may be implemented as instructions that may be executed by an electronic system. The electronic device may store the instructions and\/or receive by the instructions (e.g., via a network connection).  is a block diagram of one embodiment of an electronic system. The electronic system illustrated in  is intended to represent a range of electronic systems, for example, computer systems, network access devices, etc. Alternative systems, whether electronic or non-electronic, can include more, fewer and\/or different components.","Electronic system  includes bus  or other communication device to communicate information, and processor  coupled to bus  to process information. While electronic system  is illustrated with a single processor, electronic system  can include multiple processors and\/or co-processors. Electronic system  further includes random access memory (RAM) or other dynamic storage device  (referred to as memory), coupled to bus  to store information and instructions to be executed by processor . Memory  also can be used to store temporary variables or other intermediate information during execution of instructions by processor .","Electronic system  also includes read only memory (ROM) and\/or other static storage device  coupled to bus  to store static information and instructions for processor . Data storage device  is coupled to bus  to store information and instructions. Data storage device  such as a magnetic disk or optical disc and corresponding drive can be coupled to electronic system .","Electronic system  can also be coupled via bus  to display device , such as a cathode ray tube (CRT) or liquid crystal display (LCD), to display information to a user. Alphanumeric input device , including alphanumeric and other keys, is typically coupled to bus  to communicate information and command selections to processor . Another type of user input device is cursor control , such as a mouse, a trackball, or cursor direction keys to communicate direction information and command selections to processor  and to control cursor movement on display . Electronic system  further includes network interface  to provide access to a network, such as a local area network.","Instructions are provided to memory from a storage device, such as magnetic disk, a read-only memory (ROM) integrated circuit, CD-ROM, DVD, via a remote connection (e.g., over a network via network interface ) that is either wired or wireless providing access to one or more electronically-accessible media, etc. In alternative embodiments, hard-wired circuitry can be used in place of or in combination with software instructions. Thus, execution of sequences of instructions is not limited to any specific combination of hardware circuitry and software instructions.","An electronically-accessible medium includes any mechanism that provides (i.e., stores) content (e.g., computer executable instructions) in a form readable by an electronic device (e.g., a computer, a personal digital assistant, a cellular telephone). For example, a machine-accessible medium includes read only memory (ROM); random access memory (RAM); magnetic disk storage media; etc.","Reference in the specification to \u201cone embodiment\u201d or \u201can embodiment\u201d means that a particular feature, structure, or characteristic described in connection with the embodiment is included in at least one embodiment of the invention. The appearances of the phrase \u201cin one embodiment\u201d in various places in the specification are not necessarily all referring to the same embodiment.","In the foregoing specification, the invention has been described with reference to specific embodiments thereof. It will, however, be evident that various modifications and changes can be made thereto without departing from the broader spirit and scope of the invention. The specification and drawings are, accordingly, to be regarded in an illustrative rather than a restrictive sense."],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"BRIEF DESCRIPTION OF THE DRAWINGS","p":["The invention is illustrated by way of example, and not by way of limitation, in the figures of the accompanying drawings in which like reference numerals refer to similar elements.",{"@attributes":{"id":"p-0007","num":"0006"},"figref":"FIG. 1"},{"@attributes":{"id":"p-0008","num":"0007"},"figref":"FIG. 2"},{"@attributes":{"id":"p-0009","num":"0008"},"figref":"FIG. 3"},{"@attributes":{"id":"p-0010","num":"0009"},"figref":"FIG. 4"}]},"DETDESC":[{},{}]}
