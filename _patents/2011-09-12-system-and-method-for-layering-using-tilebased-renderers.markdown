---
title: System and method for layering using tile-based renderers
abstract: A method for tile-based rendering of content. Content may be rendered in a memory region organized as multiple tiles. In scenarios in which content is generated in layers, for operations that involve compositing image layers, an order in which portions of the image are processed may be selected to reduce the aggregate number of memory accesses times, which in turn may improve the performance of a computer that uses tile-based rendering. An image may be processed such that operations relating to rendering portions of different layers corresponding to the same tile are performed sequentially. Such processing may be used in a computer with a graphics processing unit that supports tile-based rendering, and may be particularly well suited for computers with a slate form factor. An interface to a graphics processing utility within the computer may provide a flag to allow an application to specify whether operations may be reordered.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09342322&OS=09342322&RS=09342322
owner: Microsoft Technology Licensing, LLC
number: 09342322
owner_city: Redmond
owner_country: US
publication_date: 20110912
---

{"@attributes":{"id":"description"},"BRFSUM":[{},{}],"heading":["BACKGROUND","SUMMARY","DETAILED DESCRIPTION"],"p":["A computing device may display content, such as images and\/or text, on a video display to one or more human users. To this end, the computing device may perform a rendering process for calculating pixel values from the content\u2014the pixel values, which may be organized in a memory region called an image plane, may be used by the video display to display the content.","Content to be displayed may comprise various elements, termed \u201cprimitives.\u201d Examples of primitives include line segments, curves, glyphs, windows, buttons, and\/or shapes such as circles and polygons. As such, rendering may be implemented on a \u201cpixel-by-pixel\u201d or on a \u201cprimitive-by-primitive\u201d basis. Pixel-by-pixel rendering may involve iterating over image plane pixels and determining each of their values in turn. On the other hand, primitive-by-primitive rendering may involve iterating over primitives in the content to be displayed and, for each such primitive, determining which image plane pixel values may be affected by the primitive, and modifying those pixel values accordingly.","Some computing devices may have specialized hardware, such as video cards and\/or graphics processing units, which may be used to perform one or more types of operations as part of a rendering process. For example, a graphics processing unit (GPU) may be used to calculate one or more image plane pixel values. These computing devices may provide software applications, which may generate content to display, access to such specialized hardware, for example, through a suitable application programming interface (e.g., a graphics library, a hardware driver, etc.).","Some GPUs support tile-based rendering. Such GPUs may have a fast on-chip memory smaller than the memory used for storing the rendered content (i.e., the image plane), and this on-chip memory may be used to perform certain GPU operations more quickly. Accordingly, in tile-based rendering, content may be rendered in portions, referred to as tiles, such that the GPU may perform operations on each such portion by using the fast memory as part of the rendering process. The content may be rendered one tile at a time, with pixel values being calculated on a per-tile basis. The memory region storing pixel values may be organized as multiple tiles. Accordingly, herein, each sub-region in which pixel values associated to a tile are stored is also referred to as a tile.","Some content may comprise one or more content layers. Each content layer may comprise one or more primitives and\/or may comprise any other suitable content. In rendering the content layers, the information in each layer may be combined such that the rendered information represents a composite of the information in multiple layers. Content layers may be combined in different ways to achieve different effects. For example, one or more layers may be presented as if partially transparent such that portions of an underlying layer appear through an upper layer. As another example, the layers may be clipped such that what appears on the display are portions of one layer combined with portions of another layer. Content comprising multiple content layers may be rendered one layer at a time and within each layer one primitive at a time, using multiple passes over image plane pixel values.","Improved content rendering techniques may improve utilization of resources, such as power and memory, in a computing device containing specialized graphics hardware. Techniques include more efficient tile-based rendering of content comprising multiple content layers by optimizing the order in which operations in the rendering process may be performed. Specialized hardware for content rendering, such as a GPU, may be configured to render more than one content layer corresponding to a tile before performing rendering of content corresponding to other tiles. As a result, the number of times pixel values associated with that single tile are brought into memory may be reduced. This may make the overall rendering process more efficient than a conventional approach of rendering the content one content layer at a time, each content layer organized as multiple tiles, which leads to cache thrashing and poor overall performance. A more efficient rendering process may lead to reduced or improved utilization of resources, such as power and memory, which may be beneficial for computing devices (e.g., laptops, mobile phones, devices having a slate form factor, other battery-powered devices, etc.) where such resources are limited.","Accordingly, in some embodiments, a method for tile-based rendering of content comprising a plurality of layers, wherein the content is organized as a plurality of tiles including at least a first tile and a second tile, is provided. The method may comprise rendering at least a first portion of the content corresponding to the first tile by using at least one processor to calculate one or more pixel values; and in response to the rendering, performing at least one operation, before rendering content corresponding to any other tile, wherein the at least one operation comprises operations for compositing at least two of the plurality of layers.","For example, in some embodiments, the content may be rendered one tile at a time so that pixel values calculated as part of the rendering process are calculated in groups corresponding to each tile. In addition, calculating pixel values in a group corresponding to a tile may comprise calculating pixel values from multiple content layers. Accordingly, in some embodiments, content may be rendered one tile at a time rather than one layer at a time so that multiple content layers corresponding to a particular may be rendered and composited before any content corresponding to any other tile is rendered.","In some embodiments, at east one computer-readable storage medium is provided. The at least one computer-readable storage medium may store an application comprising processor-executable instructions that, when executed by at least one processor, perform a method for configuring a graphics processing unit (GPU) to render content organized as a plurality of tiles including a first tile and a second tile. The method may comprise determining which of the following acts to perform first: performing at least one operation on one or more pixel values obtained by rendering content corresponding to the first tile, or rendering at least a portion of the content corresponding to the second tile; and if it is determined that the at least one operation is to be performed first: notifying the GPU to perform, first, the at least one operation and to perform, second, the rendering.","In some embodiments, a system for rendering content comprising a plurality of content layers, wherein the content is organized as a plurality of tiles including a first tile and a second tile, is provided. The system may comprise a memory communicatively coupled to a graphics processing unit (GPU); and the GPU, wherein the GPU is configured to render at least a first portion of the content corresponding to the first tile to calculate one or more pixel values; receive an indication of which of the following acts to perform first: performing at least one operation on one or more pixel values, wherein the at least one operation comprises operations for compositing at least two of the plurality of layers, or rendering at least a second portion of the content corresponding to the second tile; and if the indication indicates that the at least one operation is to be performed first, the GPU is configured to perform the at least one operation on the one or more pixel values the first tile, and render the second portion of the content corresponding to the second tile, after performing the at least one operation.","The foregoing is a non-limiting summary of the invention, which is defined by the attached claims.","The inventors have recognized and appreciated that greater utility can be derived from a GPU that supports tile-based rendering if the GPU may be configured to perform, more efficiently, tile-based rendering of content that comprises one or more content layers. In particular, the inventors have recognized that it may be advantageous to render such content one tile at a time, rather than render the content one layer at a time. In the former \u201clayer-then-tile\u201d approach, the content may be rendered one content layer at a time, and each such content layer may be rendered, one tile at a time. On the other hand, in the latter \u201ctile-then-layer\u201d approach, the content may be rendered one tile at a time\u2014calculating pixel values associated with each tile may comprise calculating pixel values from multiple content layers.","The inventors have recognized that tile-based rendering is likely to become more prevalent because devices that can benefit from tile-based rendering are becoming more widespread. Tile-based rendering may be advantageous for use in mobile devices because it may require less memory bandwidth and less power than conventional non-tile-based rendering techniques. Mobile devices (e.g., smart phones, PDAs, tablets, etc.) are becoming more widespread, and these mobile devices include graphics processing units that support tile-based rendering.","The inventors have also recognized that even though tile-based rendering techniques may be more efficient than other types of rendering techniques, conventional techniques of using tile-based rendering on GPUs, which support tile-based rendering, can be further improved. The inventors have appreciated that improving the way in which a GPU may be configured to perform tile-based rendering may lead to more efficient rendering, which, in turn, may lead to additional benefits (e.g., extending battery life) for a mobile device containing such a GPU. In particular, the inventors have recognized that conventional techniques for tile-based rendering of content comprising multiple content layers may be improved.","One conventional approach to tile-based rendering of content, which comprises multiple content layers, is the aforementioned \u201clayer-then-tile\u201d approach. In this approach, content layers may be rendered one content layer at a time, one after the other. Furthermore, each content layer may be rendered one tile at a time. Accordingly, in this approach, after a portion of a content layer corresponding to a particular tile is rendered, the un-rendered portion of the content layer corresponding to the remaining tiles is rendered before any portion of another content layer corresponding to that particular tile may be rendered. This is sometimes referred to as a \u201cmid-scene flush\u201d because it may force all rendering operations (thereby flushing these operations from the \u201cpipeline\u201d of rendering operations) associated with rendering the content layer before any operations associated with rendering another layer may be performed.","Operations associated with rendering another layer may be any suitable type of operations. As one example, the operations may comprise performing one or more calculations using already-computed pixel values. Such operations may be used in numerous situations and, for example, may be used when compositing information of already-rendered layers and the other layer. As a specific example, such operations may be used to apply one or more effects, such as a transparency or a clipping effect, to the rendered content.","As a specific non-limiting example of a mid-scene flush, consider the sequence of events that may occur in tile-based rendering of two content layers. The sequence of events may comprise rendering a portion of the first content layer corresponding to tile A and copying the obtained pixel values from a fast memory used for the rendering (e.g., the GPU cache) to another memory, rendering another portion of the first content layer corresponding to tile B, then copying the obtained pixels from the fast memory to the other memory, and so on, until the entire first content layer is rendered. After the entire first content layer is rendered, a portion of the second content layer corresponding to tile A may be rendered. At this point it may be desired to composite portions of the first and second content layers to achieve a visualization effect such as transparency or clipping. However, to composite the portions of the first and second content layers corresponding to tile A, pixel values previously copied from the fast memory to another memory need to be brought back to the fast memory.","The inventors have recognized that, in the conventional \u201clayer-then-tile\u201d approach, performing a mid-scene flush (e.g., as in the above-described example) may result in pixel values associated with a particular tile being brought into the GPU cache multiple times. For instance, the pixel values may be brought into the GPU cache every time another content layer is being rendered (as the case may be in the above-described example), so that new pixel values may be computed as a function of values obtained from multiple content layers (e.g., when multiple content layers are being composited).","The inventors have also recognized that the size of the GPU cache may be limited and pixel values associated with content corresponding to one tile may be removed from, or overwritten in, the cache prior to pixel values associated with content corresponding to another tile being brought into the cache. As a result, in the \u201clayer-then-tile\u201d approach, pixel values associated with content corresponding to a particular tile may be brought in and out of the cache multiple times as the content is being rendered\u2014a phenomenon termed \u201ccache thrashing.\u201d Cache thrashing is inefficient because repeatedly reading values into a cache from another, typically slower, memory and\/or repeatedly writing values into the other memory from the cache may incur delays.","The inventors have also recognized and appreciated that rendering content one tile at a time and, for each tile, performing calculations based on values associated with multiple content layers may overcome some of the above-mentioned drawbacks of conventional techniques for tile-based rendering. However, not every embodiment addresses every one of these drawbacks, and some embodiments may not address any of them. As such, it should be appreciated that the invention is not limited to addressing all or any of the above-discussed drawbacks of these conventional techniques for tile-based rendering.","Accordingly, in some embodiments, the aforementioned \u201ctile-then-layer\u201d approach to rendering may be performed. In such embodiments, at least a portion of a layer of content corresponding to a tile may be rendered and at least another portion of another content layer corresponding to the same tile may be rendered, both acts occurring prior to any content corresponding to another tile being rendered. Rendering content corresponding to a tile may comprise rendering a portion of the content by using a fast memory onboard the GPU. Rendering the other layer of content corresponding to the tile may comprise performing an operation on the already-rendered pixel values. The operation may be any suitable operation and may be performed as part of applying an effect to the content being rendered. In some embodiments, performing an operation on pixel values associated with the tile may comprise performing the operation on values stored in fast memory onboard the GPU (e.g., GPU cache).","In this \u201ctile-then-layer\u201d approach, the sequence of events in the above-described example for rendering content comprising two layers may comprise rendering a portion of the first content layer corresponding to tile A to obtain one or more pixel values, copying the calculated pixel values to another memory, then rendering a portion of the second layer corresponding to tile A, and, finally, compositing the previously-copied pixel values with the values obtained from rendering the portion of the second layer to blend content from the two content layers. In this example, cache thrashing may be avoided because all operations with respect to pixel values associated with content corresponding to tile A may be done together.","Accordingly, in some embodiments, processing of content comprising multiple content layers may entail determining an order in which operations for rendering the content may be processed. For example, after a portion of a content layer corresponding to a first tile is rendered there may be a choice as to whether to perform any operations on pixel values associated with the first tile (e.g., to render more content corresponding to the first tile, composite the already-rendered portion of the layer with another layer, etc.) or render another portion of content corresponding to a different tile. A different determination may be made when a \u201clayer-then-tile\u201d approach is employed than when a \u201ctile-then-layer\u201d approach is employed. In the latter case, operations on pixel values associated with content corresponding to the first tile may be performed before any content corresponding to other tiles may be rendered.","In some embodiments, a GPU may receive an indication indicating whether to render content comprising multiple layers using the \u201ctile-then-layer\u201d approach or the conventional \u201clayer-then-tile\u201d approach. As described in greater detail below, such an indication may be received as a result of a determination made by software that generates content to render and, in some instances, such an indication may comprise a parameter that was set by the software and\/or a function call that was made by the software. As a specific example, a component rendering content may be configured to provide such an indication in connection with a rendering operation that involves compositing of multiple layers in scenarios in which each tile of the rendering operation depends only on content of corresponding tiles in the layers to be composited.","Any suitable computing environment may be used to implement embodiments of the present invention. One such computing environment is illustrated in , which shows an exemplary computing environment  for rendering content.","Computing environment  includes a computing device  communicatively coupled to display . Computing device  may be configured to render content such that the rendered content may be displayed on display . In this illustrative example, a user (e.g., user ) may view the rendered content on display . Though, it should be recognized that any suitable number of users may view the rendered content as the number of users viewing the rendered content is not a limitation of the present invention.","Computing device  may be configured to render content in any suitable way and using any suitable technique. In some embodiments, computing device  may be configured to render content using tile-based rendering. Still in other embodiments, computing device  may be configured to render some content using tile-based rendering, but render other content without using tile-based rendering.","Computing device  may be configured to render any suitable content. Content may comprise any suitable type of content that may be visually presented. For example, content may comprise any suitable type of image data (e.g., images, photographs, computer-generated images, clip-art, etc.). As another example, content may comprise any suitable type of text data.","In some embodiments, the content may comprise one or more primitives. A primitive may be any suitable element within the content. For example, a primitive may be any suitable 2D or 3D shape and, for example, may be a point, a plane, line segment a curve, a spline curve, a polygon, a circle, an ellipse, a sphere, a cube, a box, a toroid, a cylinder, a pyramid, etc. As another example a primitive may be a window, a frame, a button, a field, etc. Though, it should be recognized the above examples of primitives are only illustrative and content may comprise any other suitable primitives, as known in the art.","The primitives may be represented as multiple layers that are composited to make a rendered image. Though, it should be appreciated that tile-then-layer techniques may be applied to graphics information to be rendered regardless of how it is represented.","Computing device  may be configured to render content in connection with any suitable purpose. In some embodiments, computing device  may be configured to render content for one or more software components executing, at least in part, on computing device . The software components may comprise any suitable software and, for example, may comprise one or more operating systems and\/or one or more software applications. A software application may be any suitable application that may desire to render content to a user and, for example, may be any application comprising a text and\/or a graphical user interface. Specific examples of such applications include video gaming applications, text and\/or image processing applications, and any web browsing applications. Many other examples will be apparent to those skilled in the art.","Computing system  may be any suitable type of computing system and may have any suitable form factor. For instance, computing system  may be one or more personal computers, one or more servers, one or more laptops, and one or more hand-held device each of which may be a smartphone, a tablet, a slate, a personal digital assistant, a text-reader, etc. Other examples of types of computing systems are described in greater detail below with reference to .","Display  may be any suitable type of display, may be implemented any suitable technology, and may have any suitable form factor. As such display  may be any display configured to display text and\/or images. Though, in computing environment , display  is shown as communicatively coupled to computing system  via wired connection , this is not a limitation of the present invention as display  may be communicatively coupled with computing system  in any suitable way. For example, display  may be external to computing system  and may be communicatively coupled to computing system  via a wireless connection. As another example, display  may be integrated with computing system  as, for example, the case may be when computing system  is a portable computing system such as a laptop or, a tablet computer.","Computing system  may comprise one or more processors of any suitable type. For instance, computing system  may comprise one or more CPUs such as CPU  and one or more Graphics Processing Units (GPUs) such as GPU . Each of the processors may be able to read data from and write data to a memory such as memory . Memory  may be any of numerous types of memories including any memory described below with reference to .","GPU  may be any suitable type of GPU. In some embodiments, GPU  may support tile-based rendering of content, whereas in other-embodiments GPU  may not provide support for tile-based rendering of content.","In some embodiments, GPU  may render content by calculating one or more pixel values from the content and storing them in memory. Regardless of how the pixel values may be calculated or stored, the stored pixel values may be used by a display (e.g., display ) to display content.","GPU  may store pixel values in any suitable memory. For example, GPU  may store pixel values in memory . In some instances, GPU  may store pixel values in a region of memory  such as image plane . Image plane  may be any suitable region of memory and may have any suitable size. For example, the size of image plane  may be such that it may store a substantial portion of pixel values calculated to render content. Pixel values stored in the image plane may be used to present the rendered content on a display, such as display . Though it should be recognized that pixel values may be stored in any suitable portion of memory  and are not limited to being stored in image plane . For example, pixel values may be stored in another region of memory  configured to store temporary pixel values or any other suitable region.","A memory region used for storing rendered content, such as image plane , may be organized into one or more sub-regions (or tiles). Each tile may be any suitable size. In some instances, the memory region may be tiled into one or multiple tiles of the same size such that each tile may store the same amount of data as any other tile. Though, in other instances tiles may have different sizes such that one tile may store an amount of data different from the amount of that another tile may store. As each content layer is being rendered, one tile at a time, each portion of rendered content may be stored a region of memory  (e.g., in image plane ). Thus, image plane  may be used to store all rendered content.","To render content, GPU  may use on-chip memory . On-chip memory  may be a fast, low-latency memory because it may be integrated with GPU . For example, on-chip memory  may be an on-chip cache. On-chip memory  may have any suitable size and, for example, may be large enough to store a portion of pixel values calculated to render content.","In some embodiments, the size of on-chip memory  may be the same as the size of a tile used to render content. Though, in other embodiments, the size of on-chip memory  may not be the same as the size of a tile. For example, the size of on-chip memory  may be larger than the size of a tile. As a specific, example, the size of on-chip memory may be a multiple of the size of a tile used to render content (e.g., 2, 3, 4, 5, 6, etc. times the size of a tile used to render content).",{"@attributes":{"id":"p-0048","num":"0047"},"figref":["FIG. 2","FIG. 2"],"b":["102","102"]},"Computing device  comprises hardware components . Hardware components  may include any of numerous hardware components of a physical computing device as is known in the art. For example, hardware components  may include GPU , memory , and CPU , as described with reference to . Though hardware components  are not limited by these examples and may include any other hardware components that may be needed to support rendering of content.",{"@attributes":{"id":"p-0050","num":"0049"},"figref":"FIG. 2","b":["102","120","130","110"]},"Software components executing within computing device  may be any suitable software components and may comprise one or more applications , an operating system , and\/or instructions that may configure a GPU to perform any of the functionality as described herein. Though it should be recognized that software components are not limited by any of the examples of software components described herein and, as such, computing device  may comprise any suitable software components.","Applications  may comprise any suitable number of applications and each application may be of any suitable type and\/or have any suitable purpose. For example, an application may be any suitable application that may desire to render content or to have content rendered so that the rendered content may be displayed to one or more users. Non-limiting examples of such applications include video gaming applications, text processing applications, and content browsing applications (e.g., Internet browsing software, book reading software, photo organization software, etc.).","In some embodiments, an application may wish to render content that may comprise one or multiple content layers. Each content layer may comprise one or more primitives and, in some instances, one or primitives may appear multiple times. For example, a primitive may appear multiple times in one content layer. As another example, a primitive may appear at least once in more than one content layer. As a specific non-limiting example, a primitive such as a box or an icon may appear multiple times on a webpage.","In some embodiments, an application that wishes to render content may issue one or more commands to have the content rendered. The application may issue the command(s) in any suitable way. For example, a command may be issued by setting one or more parameters and\/or by calling one or more functions. As a specific example, a command may be issued by using an application programming interface (API) such as a graphics library. Though, it should be recognized that a command may be issued in any other suitable way as known in the art.","A command issued by an application may be any suitable command and may be issued for any suitable reason. For example, an application may issue one or more commands to indicate what content may be rendered. As another example an application may issue one or more commands to indicate when that content may be rendered. As yet another example, an application may issue one or more commands to indicate the manner in which that content may be rendered. In this case, the command(s) may affect the way content layers may be rendered and, for example, may affect the order in which portions of content layers may be rendered using tile-based rendering. As a specific non-limiting example, the command(s) may provide an indication that portions of content layers corresponding to one tile may be rendered before portions of content layers associated with another tile may be rendered.","In some embodiments, an application may issue one or more commands in order to apply an effect or have an effect be applied to rendered content. The effect may be any suitable visualization effect and may be an effect such as transparency, where a first \u201cupper\u201d layer may be presented as partially transparent such that portions of a second \u201cunderlying\u201d layer may appear through the first layer. The effect may also be an effect such as clipping where multiple layers may be clipped together such that portions of these layers appear together on the screen. Though, it should be appreciated that these examples are only illustrative and that any of other numerous visualization effects as known in the art may be used. Any such effect may be applied to one or more primitives in the content and\/or to one or more layers in a case when the content may comprise multiple layers.","In some embodiments, an application may issue one or more commands to affect the way in which specialized hardware in computing device  may be used for rendering content. For instance, an application may issue one or more commands to affect the way in which a GPU may be used for rendering content and may issue one or more commands to affect the way a GPU may be used for tile-based content rendering. For example, an application may issue one or more commands to notify the GPU of an order in which certain operations associated with rendering content may be performed. In some instances, an application may notify the GPU that the GPU may employ a \u201ctile-then-layer\u201d approach to rendering. In other instances, the application may notify the GPU that the GPU may employ a \u201clayer-then-tile\u201d approach to rendering.","An application may make a determination as to which of the above-mentioned approaches to tile-based rendering may be used in any suitable way. For example, such a determination may be made dynamically based on one or more pre-programmed criteria and, for example, may be based at least in part on the content to be rendered. As a specific example, the application may determine that the GPU may employ a \u201ctile-then-layer\u201d approach if content to be rendered in one tile may not depend on content rendered in any other tile.","Another example of a software component executing within computing device  is operating system . Operating system  may be any suitable operating system and may support any of numerous applications (e.g., applications ) written for operating system .","Operating system  may comprise one or more graphics libraries that may be used for performing operations associated with content rendering. For instance, operating system  may comprise graphics library . Graphics library  may include an application programming interface that may be accessed by one or more applications (e.g. applications ) to issue one or more commands for rendering content. Non-limiting examples of such graphics libraries include the Direct2D, Direct3D, and OpenGL graphics libraries.","A graphics library, such as graphics library , may interface with hardware (e.g., CPU, GPU, video card, etc.) to execute any commands, issued by an application or the operating system, associated with rendering content. To this end, graphics library  may provide commands and\/or parameters  to one or more device drivers to interface with the hardware.","Accordingly, operating system  may comprise one or more device drivers that may be used for interfacing with any suitable hardware. For instance, operating system  may comprise GPU device driver  that may be used to interface with a GPU, such as GPU . GPU device driver  may be used to interface with the GPU in any of numerous ways. For example, device driver  may be used to send data to the GPU, send commands to the GPU, and\/or receive data from the GPU. Additionally or alternatively, operating system  may comprise any suitable number of drivers for interfacing with any suitable hardware part of or communicatively connected to computing device  (e.g., a display such as display  described with reference to ).","In some embodiments, GPU device driver  may facilitate sending data to the GPU as part of a process for rendering content. Device driver  may facilitate the sending of any suitable data as part of a process for rendering content and, for example, may facilitate the sending of any data associated with content to be rendered.","In some embodiments, as part of a process for rendering content, GPU device driver  may send one or more commands and\/or parameters  to GPU  and\/or any other suitable hardware performing aspects of the rendering process. The commands (and\/or parameters) may be of any suitable type and, for example, may be commands and\/or parameters that configure the GPU to perform tile-based rendering. For example, commands and\/or parameters  may configure the GPU to perform tile-based rendering using tiles of a particular size. As another example, commands and\/or parameters  may configure the GPU to perform tile-based rendering of content, which comprises multiple layers, using one of the \u201clayer-before-tile\u201d approach or the \u201ctile-before layer\u201d approach, as previously described above.","A computing device, such as computing device  described with reference to , may be configured to render content. One such process is described with reference to , which is a flowchart of illustrative process  for rendering content comprising at least two layers. At least a portion of the acts of process  may be performed by a processor such as a GPU or a CPU.","Process  begins in act , where content to be rendered may be obtained. The content may be any suitable content and, for example, may comprise one or more content layers. Each content layer may comprise any suitable type of content and may include any of the types of content previously described. In particular, each content layer may comprise one or more primitives.","The content to be rendered may be obtained in any suitable way. In some embodiments, the content to be rendered may be received from one or more software components of a computing device configured to execute process . For example, the content to be rendered may be received from any of the software components described with reference to . As a specific example, the content to be rendered may be received from a software application that may desire to render content and may have issued one or more commands to render the content.","Regardless of how content to be rendered may be obtained in act , process  proceeds to decision block , where it may be determined whether content may be rendered using the \u201clayer-then-tile\u201d approach, in which a mid-scene flush may be used, or the \u201ctile-then-layer\u201d approach, in which a mid-scene flush may not be used. In other words, it may be determined, in decision block , whether, after rendering at least a portion of the content corresponding to tile A, the content corresponding to other tiles may be rendered before at least one operation may be performed on pixel values associated with the content corresponding to tile A. As such, it may be determined, in decision block , whether to process commands associated with rendering in the order the commands were generated or to process them in a different order such that commands are processed in groups with each group related to rendering content corresponding to a particular tile.","This determination may be made in any suitable way. For example, the determination may be made by receiving an indication that may indicate which of the above two approaches to content rendering may be used. The indication may be any suitable type of indication and, for example, may comprise a parameter whose value may indicate which of the above approaches to content rendering may be used. Accordingly, receiving the indication may comprise receiving such a parameter. As an example, such a parameter may indicate when it is safe to avoid performing a mid-scene flush, such as when the pixel values in a composited image associated with a tile depend only on the content of corresponding tiles in the image layers combined to form the composite, whereby the tile-then-layer approach to rendering may be used. In this case, determining whether at least one operation may be performed on pixel values associated with content corresponding to tile A before content corresponding to any other tiles may be rendered may comprise receiving an indication to first perform at least one operation on the one or more pixel values.","In some embodiments, it may be determined that a \u201clayer-then-tile\u201d approach may be used. This may occur in any of numerous scenarios. For instance, an application may be configured to render content comprising multiple layers such that rendering one layer may require reading pixel values associated with arbitrary locations in another previously-rendered layer. In this case, rendering the one layer may require that all tiles of the other layer have been rendered. As a specific example, this situation may occur when a spatial blurring effect is applied to the content being rendered. In contrast, it may be determined that a \u201ctile-then-layer\u201d approach is taken when rendering a pixel of one layer may require pixel values from other layers in the same location in the layer as the pixel.","If it is determined, in decision block , that the \u201clayer-then-tile\u201d approach may be used so that a mid-scene flush may be used, process  proceeds to act , where a content layer may be rendered. A content layer may be rendered in any suitable way. For example, rendering the content layer may comprise calculating one or more pixel values from the content layer. In some cases, the calculated pixel value(s) may be stored in the image plane. In some instances, the content layer may be rendered using tile-based rendering such the content layer may be calculated on a per-tile basis so that pixel values may be calculated in groups associated with content corresponding to tiles. In this case, the content layer may be rendered by processing content corresponding to multiple tiles.","Rendering the content layer on a per-tile basis, in act , may comprise using a fast memory communicatively coupled to the processor (e.g., GPU or CPU). For example, rendering the content corresponding to a tile (or at least a portion of the content corresponding to the tile) may comprise using the on-chip memory  (). The fast memory may be used in any suitable way and, for example, may be used to store one or more pixel values calculated from the content-layer content corresponding to the tile.","It should be appreciated that rendering at least a portion of the content layer corresponding to utile may comprise overwriting one or more pixel values stored in on-chip memory  because the on-chip memory may not be large enough to store pixel values associated with the entire content layer. As a result, rendering the content layer may comprise copying pixel values associated with each tile from the fast memory to another larger, potentially slower, memory (e.g., memory , image plane , etc.) so that another tile of the same content layer may be rendered without previously-calculated pixel values being lost. Though, it should be recognized that any memory with sufficient capacity to store the one or more pixels associated with the content layer may be used. Accordingly, at the end of act , pixel values calculated from the first content layer may be stored in memory (e.g., memory , image plane , etc.).","Copying pixel values between the fast memory (e.g., on-chip memory ) and a larger memory may be an operation performed automatically by the GPU and\/or software controlling the GPU (e.g., GPU device driver ), and as such may be referred to as an \u201cimplicit\u201d copy, because applications may not need to explicitly instruct the GPU and\/or software controlling to the GPU to perform it. As previously mentioned, performing multiple implicit copies between the on-chip memory and another, potentially slower, memory may lead to cache thrashing.","After the first content layer is rendered in act , process  proceeds to act , where data stored in the image plane may be copied. Data stored in the image plane may be any suitable data and, for example, may comprise one or more pixel values. As a specific example, the data may comprise one or more pixel values calculated, in act , from the first content layer and stored in the image plane. Any suitable portion of the data may be copied. In some embodiments, all data stored in the image plane may be copied, while, in other embodiments a portion of the data stored in the image plane may be copied.","The data may be copied, in act , for any suitable reason. In some embodiments, the data may be copied as a result of an indication (e.g., a command, a function call, a parameter, etc.) indicating that the data should be copied. In this case, the copy is referred to as an explicit copy. Such an indication may be provided from any suitable source and, for example, may be provided by a software component (e.g., any of the software components described with reference to ) of a computing device.","Regardless of what portion of the data may be copied, the data may be copied to any suitable destination. For example, the data may be copied to any memory region that may have sufficient capacity to store a copy of the data. Such a memory region may be a region of any suitable memory. For example, the memory region may be a region of any memory communicatively coupled to a processor (e.g., CPU or GPU) such as memory  described with reference to . Accordingly, in some embodiments, the data may be copied from one region of memory  (e.g., image plane ) to another region of memory .","In some embodiments, an explicit copy of data, such as the copy performed in act , may be performed to create a copy of the data for any suitable subsequent use. For example, the copied data may be used as part of a compositing operation and\/or applying an effect to rendered content. As a specific example, the copied data may be used as part of a blending operation between pixel values calculated from the first content layer, in act , and pixel values calculated from the second content layer, in act , as described below. In this case, portions of the copied data may be brought into the fast memory as the second layer is being rendered.","Next, process  proceeds to act , where another layer of content may be rendered. The other layer of content may be rendered in any suitable way and, for example, may be rendered one tile at a time in a manner similar to the way that the first layer was rendered. As such, rendering the other content layer may comprise using fast memory and performing one or more implicit copy operations. It should also be appreciated that rendering the other layer may comprise overwriting one or more pixel values that may be stored in the image plane. For example, rendering the second layer may comprise overwriting the one or more pixel values calculated in act , while rendering the first content layer. Indeed, this possibility of overwriting stored pixel values may motivate the copying of the pixel values in act . As such, the copied pixel values may be retrieved and used to render the content.","In some embodiments, one or more operations may be performed on data stored in the fast memory and\/or the larger memory (e.g., memory ), as part of act . The operation(s) may be any suitable operation(s) and may be performed on one or more pixel values stored in the fast memory and\/or the larger memory. In some embodiments, the operation(s) may involve using one or more pixels in the fast memory and\/or the larger memory to calculate one or more new pixel values. In some cases, the operation(s) may involve using one or more pixels stored in the fast memory and data copied in act  (e.g., one more pixel values previously stored in the image plane) to calculate one or more new pixel values.","In some embodiments, operation(s) may be performed as part of applying an effect to at least a portion of the content. The effect may be any of numerous types of effects and, for example, may be an effect such as transparency, clipping, etc. As a specific example, operations may be performed to achieve a blending effect, such as a transparency or a clipping effect, by calculating one or more new pixel values from one or more pixel values calculated from the second content layer and one or more previously-calculated pixel values copied from the image plane in act . Though, it should be recognized that these effects are only illustrative and that operation(s) may be performed as part of applying any other suitable effect to at least a portion of the content. After the second content layer is rendered and one or more operations are performed in act , process  completes.","It should be recognized, that in acts -, multiple implicit copies may be performed for each tile of content being rendered. In particular, an implicit copy may be performed for each tile of a content layer being rendered. As discussed below, in the tile-then-layer approach, the number of implicit copies may be reduced as an implicit copy may be performed one time for each tile of content.","Recall that, in decision block , it may also be determined that the \u201ctile-then-layer\u201d approach may be used as part of process , so that an additional layer may be rendered without using a mid-scene flush. In other words, it may be determined in decision block , that after rendering at least a portion of the content corresponding to tile A, at least one operation may be performed on pixel values associated with content corresponding to tile A before at least another portion of the content corresponding to a tile other than tile A may be rendered.","In this case, process  proceeds to act , where at least a portion of the first content layer corresponding to a tile may be rendered. Any suitable portion of the content layer corresponding to the tile may be rendered. The portion of the content layer corresponding to the tile may be rendered in any suitable way. For example, rendering the portion of the content layer may comprise calculating one or more pixel values from the portion of the content layer using a fast on-chip memory of a processor.","Regardless of how the portion of the first content layer may be rendered, process  proceeds to act , where data stored in the fast memory, in which the portion was rendered, may be copied. Data stored in the fast memory may be any suitable data and, for example, may comprise one or more pixel values calculated in act . As a specific example, the data may comprise one or more pixel values calculated as part of rendering the portion of the content layer in act . Any suitable portion of the data stored in the fast memory may be copied.","Regardless of what portion of the data may be copied, the data may be copied to any suitable destination. For example, the data may be copied to any memory region that may have sufficient capacity to store a copy of the data. Such a memory region may be a region of any suitable memory. For example, the memory region may be a region of any memory communicatively coupled to a processor (e.g., CPU or GPU) such as memory  described with reference to .","The data may be copied, in act , for any suitable reason. In some embodiments, the data may be copied as a result of an indication (e.g., a command, a function call, a parameter, etc.) indicating that the data should be copied. Such an indication may be provided from any suitable source including the sources described with reference to act . Thus, the copy performed in act  may be an explicit copy.","In some embodiments, the copy performed in act  may be performed to create a copy for any suitable subsequent use. For example, the copied data may be used as part of a compositing operation and\/or applying an effect to rendered content. As a specific example, the copied data may be used as part of a blending operation between pixel values calculated from the first content layer, in act , and pixel values calculated from the second content layer, in act , as described below. In this case, portions of the copied data may be brought into the fast memory as the second layer is being rendered.","Next, process  proceeds to act  where at least a portion of a second content layer corresponding to the same tile may be rendered. The portion of the second layer may be rendered in any suitable way and, for example, may be rendered the same way that the portion first layer was rendered. As previously mentioned, rendering a portion of the second layer in the tile may comprise overwriting one or more pixel values that may be stored in the fast on-chip memory. For example, rendering the portion of the second layer may comprise overwriting the one or more pixel values calculated in act , while rendering the portion of the first content layer.","Next, process  proceeds to act , where one or more operations may be performed on the pixel values. The operation(s) may be any suitable operation(s). In some embodiments, the operation(s) may be performed on one or more pixels stored in the fast on-chip memory. In some embodiments, the operation(s) may involve using one or more pixels stored in a slower memory (e.g., memory ) to calculate one or more new pixel values. In some cases, the operation(s) may involve using one or more pixels stored in the fast on-chip memory and data copied in act  (e.g., one more pixel values calculated from a portion of the first layer) to calculate one or more new pixel values. Additionally, or alternatively, the operation(s) may involve saving one or more new pixel values in the tile.","As previously mentioned, in some embodiments, one or more operations may be performed as part of applying an effect to at least a portion of the content. The effect may be any of numerous types of effects and, for example, may be an effect such as transparency, clipping, etc. As a specific example, operations may be performed to achieve a blending effect, such as a transparency or a clipping effect, by calculating one or more new pixel values from one or more pixel values stored in the fast on-chip memory and one or more pixel values copied from the fast on-chip memory in act .","After one or more operations are performed in act , process  proceeds to act  where an implicit copy may be performed so that any data stored in the fast memory (e.g., GPU on-chip memory ) may be copied to another memory (e.g., memory ). Next process  proceeds to decision block , where it may be determined whether there are more tiles of content that may be rendered. This determination may be made any suitable way and, for example, may be made by checking whether acts - have been performed with respect to each portion of the content. As another example, the determination may be made by checking whether acts - have been performed with respect to each tile in the image plane that may store pixel values obtained from the content as there may be cases such that not every tile in the image plane may be used to render content (e.g., content may contain content for only a portion of the screen).","If it is determined in decision block  that there are more tiles of content that may be rendered, process  loops back to act  and acts - may be repeated. Alternatively, if is determined in decision block  that that there are no more tiles of content that may be rendered, process  completes.","It should be recognized that process  is illustrative and that many variations of process  are possible. For example, in the illustrated embodiment, content to be rendered comprises two content layers. However, this is not a limitation of the present invention as the content may comprise any suitable number of content layers. Accordingly, process  may be modified to render any suitable number of content layers (e.g., at least three layers, at least four layers, etc.). This may be done in any suitable way and, for example, may be done such that, as part of process , portions of content corresponding to one tile from more than two content layers (e.g., three layers, four layers, etc.), may be rendered and any suitable operations (e.g., to apply a transparency or clipping effect) may be performed on one or more pixel values associated with content corresponding to that one tile, before moving on to rendering content corresponding to another tile.","As another example, in the illustrated embodiment, operations to perform compositing of layers may be performed on pixel values stored in the fast on-chip memory using pixel values copied and stored in another memory (e.g., memory ). However, in other embodiments, such operations may be performed on pixel values stored in the other memory using pixel values from the on-chip memory. More generally, operations may be performed on pixels in any suitable memory so as to improve rendering performance and, as such, in the \u201ctile-then-layer\u201d approach, operations on a group of pixels associated with content corresponding to a tile may be performed in any memory and, for example, may be performed in any fast memory communicatively coupled to the GPU.","To further appreciate the differences in the two paths of process  (i.e., acts - and acts -), illustrate how content may be rendered in each case. In particular, shows an illustrative process  that uses the \u201clayer-then-tile\u201d approach and employs a mid-scene flush. On the other hand, shows an illustrative process  that uses the \u201ctile-then-layer\u201d approach and does not employ a mid-scene flush.","As illustrated, processes  and  are shown to render content comprising two content layers, each layer comprising two primitives, such that each content layer is rendered in two tiles. Specifically, in this non-limiting example, the first content layer and the second content layer each comprise two primitives, with each primitive corresponding to a particular tile. However, this is not a limitation of the present invention and each of these processes may be used to render content comprising any suitable number of layers, with each content layer comprising any suitable content corresponding to any suitable number of tiles. It should also be recognized that although in this example, each of the illustrated primitives correspond to a single tile, this is not a limitation of the present invention and that a primitive may correspond to any suitable number of tiles such that pixel values associated with multiple tiles may be used to render the primitive.","Process  begins in acts -, where the first content layer may be rendered. The first content layer may be rendered in any suitable way and, for example, may be rendered using tile-based rendering. Accordingly, at least a portion of the first content layer corresponding to the first tile may be rendered, in act , and at least another portion of the first content layer corresponding to the second tile may be rendered, in act . It should be noted that an implicit copy may be performed in acts  and , following acts  and , respectively, so that pixel values computed in acts  and  may be stored. In acts  and , the pixel values may be copied from a fast memory (e.g., GPU on-chip memory ) to an image plane (e.g., image plane ) or any other suitable memory.","Next, process  proceeds to act , where data from the image plane (e.g., image plane ) may be copied. The copied data may be any suitable data and may comprise pixel values calculated as part of rendering the first content layer. The data may be copied to any suitable destination and, for example, may be copied to any other region of memory that has sufficient capacity to store the copied data. The copying operation performed in act  may be an explicit copy operation.","Regardless of how the data may be copied or the destination to which it may be copied, process  proceeds to acts - where the second content layer may be rendered. The second layer may be rendered in any suitable way and, for example, may be rendered using tile-based rendering. Accordingly, at least a portion of the second content layer corresponding to the first tile may be rendered in act .","Next in act , one or more operations may be performed on pixels associated with content corresponding to the first tile. For instance, one or more operations may be performed to apply a blending effect in act . Such operations may comprise calculating new pixel values from pixel values calculated from the portion of the first content layer corresponding to tile  (in act ) and pixel values calculated from the portion of the second content layer corresponding to tile  (in act ). After one or more operations are performed, an implicit copy may be performed as part of act  such that any pixel values computed in acts - may be stored.","After acts -, at least another portion of the second content layer corresponding to the second tile may be rendered, in act . Next in act , one or more operations may be performed on pixels associated with content corresponding to the second tile. For instance, one or more operations may be performed to apply a blending effect. Such operations may comprise calculating new pixel values from pixel values calculated from the portion of the first content layer corresponding to tile  (in act ) and pixel values calculated from the portion of the second content layer corresponding to tile  (in act ). After one or more operations are performed, an implicit copy may be performed as part of act  such that any pixel values computed in acts - may be stored.","It should also be appreciated that, in process , no operations are performed on pixel values associated with content corresponding to tile , until after act  in which at least another portion of the first content layer corresponding to tile  is rendered. As a result process  may be said to perform a mid-scene flush: all tiles of the first content layer are executed before any operations on already-calculated pixel values are performed.","In contrast, no mid-scene flush is performed in process . Process  begins in act , where at least a portion of the first content layer corresponding to the first tile may be rendered. Next, process  proceeds to act  where data stored in the first tile may be copied. As described with respect to act  of process , the data may be any suitable data and may comprise pixel values calculated as part of rendering at least a portion of the first content layer. The data may be copied from a fast memory (e.g., on-chip memory ) to an image plane (e.g., image plane ) or any other suitable memory.","Regardless of how the data may be copied or the destination to which it may be copied, process  proceeds to act  where at least another portion of the first content layer corresponding to the first tile may be rendered.","Next, process  proceeds to act , where one or more operations may be performed on pixel values associated with content corresponding to the first tile. As previously described such operations may be performed for any suitable purpose and, for example, may be performed to apply a blending effect. In this case, new pixel values may be calculated from pixel values that were copied in act  and the pixel values calculated in act . After one or more operations are performed, an implicit copy may be performed as part of act  such that any pixel values computed in acts - may be stored.","After act , process  proceeds to acts -, where portions of both the first and the second layer may be rendered in the second tile in a manner analogous to how portions of the first and second layers were rendered in the first tile, during acts -. Process  completes after act .","It should be appreciated that, in process , no portion of the content is rendered in the second tile, until after one or more operations are performed on pixel values stored in the first tile. In particular, portions of both content layers are rendered in the first tile before any content is rendered in the second tile. As a result, there may be less cache thrashing in process  relative to process . As can be seen, only two implicit copies are performed (acts  and ) in process , whereas four implicit copies are performed in process  (acts , , , and ).",{"@attributes":{"id":"p-0109","num":"0108"},"figref":"FIG. 5","b":["500","500","500","500"]},"The invention is operational with numerous other general purpose or special purpose computing system environments or configurations. Examples of well-known computing systems, environments, and\/or configurations that may be suitable for use with the invention include, but are not limited to, personal computers, server computers, hand-held or laptop devices, multiprocessor systems, microprocessor-based systems, set top boxes, programmable consumer electronics, network PCs, minicomputers, mainframe computers, distributed computing environments that include any of the above systems or devices, and the like.","The computing environment may execute computer-executable instructions, such as program modules. Generally, program modules include routines, programs, objects, components, data structures, etc. that perform particular tasks or implement particular abstract data types. The invention may also be practiced in distributed computing environments where tasks are performed by remote processing devices that are linked through a communications network. In a distributed computing environment, program modules may be located in both local and remote computer storage media including memory storage devices.","With reference to , an exemplary system for implementing the invention includes a general purpose computing device in the form of a computer . Components of computer  may include, but are not limited to, a processing unit , a system memory , and a system bus  that couples various system components including the system memory to the processing unit . The system bus  may be any of several types of bus structures including a memory bus or memory controller, a peripheral bus, and a local bus using any of a variety of bus architectures. By way of example, and not limitation, such architectures include Industry Standard Architecture (ISA) bus, Micro Channel Architecture (MCA) bus, Enhanced ISA (EISA) bus, Video Electronics Standards Association (VESA) local bus, and Peripheral Component Interconnect (PCI) bus also known as Mezzanine bus.","Computer  typically includes a variety of computer readable media. Computer readable media can be any available media that can be accessed by computer  and includes both volatile and nonvolatile media, removable and non-removable media. By way of example, and not limitation, computer readable media may comprise computer storage media and communication media. Computer storage media includes volatile and nonvolatile, removable and non-removable media implemented in any method or technology for storage of information such as computer readable instructions, data structures, program modules or other data. Computer storage media includes, but is not limited to, RAM, ROM, EEPROM, flash memory or other memory technology, CD-ROM, digital versatile disks (DVD) or other optical disk storage, magnetic cassettes, magnetic tape, magnetic disk storage or other magnetic storage devices, or any other medium which can be used to store the desired information and which can accessed by computer . Communication media typically embodies computer readable instructions, data structures, program modules or other data in a modulated data signal such as a carrier wave or other transport mechanism and includes any information delivery media. The term \u201cmodulated data signal\u201d means a signal that has one or more of its characteristics set or changed in such a manner as to encode information in the signal. By way of example, and not limitation, communication media includes wired media such as a wired network or direct-wired connection, and wireless media such as acoustic, RF, infrared and other wireless media. Combinations of the any of the above should also be included within the scope of computer readable media.","The system memory  includes computer storage media in the form of volatile and\/or nonvolatile memory such as read only memory (ROM)  and random access memory (RAM) . A basic input\/output system  (BIOS), containing the basic routines that help to transfer information between elements within computer , such as during start-up, is typically stored in ROM . RAM  typically contains data and\/or program modules that are immediately accessible to and\/or presently being operated on by processing unit . By way of example, and not limitation,  illustrates operating system , application programs , other program modules , and program data .","The computer  may also include other removable\/non-removable, volatile\/nonvolatile computer storage media. By way of example only,  illustrates a hard disk drive  that reads from or writes to non-removable, nonvolatile magnetic media, a magnetic disk drive  that reads from or writes to a removable, nonvolatile magnetic disk , and an optical disk drive  that reads from or writes to a removable, nonvolatile optical disk  such as a CD ROM or other optical media. Other removable\/non-removable, volatile\/nonvolatile computer storage media that can be used in the exemplary operating environment include, but are not limited to, magnetic tape cassettes, flash memory cards, digital versatile disks, digital video tape, solid state RAM, solid state ROM, and the like. The hard disk drive  is typically connected to the system bus  through a non-removable memory interface such as interface , and magnetic disk drive  and optical disk drive  are typically connected to the system bus  by a removable memory interface, such as interface .","The drives and their associated computer storage media discussed above and illustrated in , provide storage of computer readable instructions, data structures, program modules and other data for the computer . In , for example, hard disk drive  is illustrated as storing operating system , application programs , other program modules , and program data . Note that these components can either be the same as or different from operating system , application programs , other program modules , and program data . Operating system , application programs , other program modules , and program data  are given different numbers here to illustrate that, at a minimum, they are different copies. A user may enter commands and information into the computer  through input devices such as a keyboard  and pointing device , commonly referred to as a mouse, trackball or touch pad. Other input devices (not shown) may include a microphone, joystick, game pad, satellite dish, scanner, or the like. These and other input devices are often connected to the processing unit  through a user input interface  that is coupled to the system bus, but may be connected by other interface and bus structures, such as a parallel port, game port or a universal serial bus (USB). A monitor  or other type of display device is also connected to the system bus  via an interface, such as a video interface . In addition to the monitor, computers may also include other peripheral output devices such as speakers  and printer , which may be connected through an output peripheral interface .","The computer  may operate in a networked environment using logical connections to one or more remote computers, such as a remote computer . The remote computer  may be a personal computer, a server, a router, a network PC, a peer device or other common network node, and typically includes many or all of the elements described above relative to the computer , although only a memory storage device  has been illustrated in . The logical connections depicted in  include a local area network (LAN)  and a wide area network (WAN) , but may also include other networks. Such networking environments are commonplace in offices, enterprise-wide computer networks, intranets and the Internet. When used in a LAN networking environment, the computer  is connected to the LAN  through a network interface or adapter . When used in a WAN networking environment, the computer  typically includes a modem  or other means for establishing communications over the WAN , such as the Internet. The modem , which may be internal or external, may be connected to the system bus  via the user input interface , or other appropriate mechanism. In a networked environment, program modules depicted relative to the computer , or portions thereof, may be stored in the remote memory storage device. By way of example, and not limitation,  illustrates remote application programs  as residing on memory device . It will be appreciated that the network connections shown are exemplary and other means of establishing a communications link between the computers may be used.","Having thus described several aspects of at least one embodiment of this invention, it is to be appreciated that various alterations, modifications, and improvements will readily occur to those skilled in the art.","Such alterations, modifications, and improvements are intended to be part of this disclosure, and are intended to be within the spirit and scope of the invention. Further, though advantages of the present invention are indicated, it should be appreciated that not every embodiment of the invention will include every described advantage. Accordingly, the foregoing description and drawings are by way of example only.","The above-described embodiments of the present invention can be implemented in any of numerous ways. For example, the embodiments may be implemented using hardware, software or a combination thereof. When implemented in software, the software code can be executed on any suitable processor or collection of processors, whether provided in a single computer or distributed among multiple computers. Such processors may be implemented as integrated circuits, with one or more processors in an integrated circuit component. Though, a processor may be implemented using circuitry in any suitable format.","Further, it should be appreciated that a computer may be embodied in any of a number of forms, such as a rack-mounted computer, a desktop computer, a laptop computer, or a tablet computer. Additionally, a computer may be embedded in a device not generally regarded as a computer but with suitable processing capabilities, including a Personal Digital Assistant (PDA), a smart phone or any other suitable portable or fixed electronic device.","Also, a computer may have one or more input and output devices. These devices can be used, among other things, to present a user interface. Examples of output devices that can be used to provide a user interface include printers or display screens for visual presentation of output and speakers or other sound generating devices for audible presentation of output. Examples of input devices that can be used for a user interface include keyboards, and pointing devices, such as mice, touch pads, and digitizing tablets. As another example, a computer may receive input information through speech recognition or in other audible format.","Such computers may be interconnected by one or more networks in any suitable form, including as a local area network or a wide area network, such as an enterprise network or the Internet. Such networks may be based on any suitable technology and may operate according to any suitable protocol and may include wireless networks, wired networks or fiber optic networks.","Also, the various methods or processes outlined herein may be coded as software that is executable on one or more processors that employ any one of a variety of operating systems or platforms. Additionally, such software may be written using any of a number of suitable programming languages and\/or programming or scripting tools, and also may be compiled as executable machine language code or intermediate code that is executed on a framework or virtual machine.","In this respect, the invention may be embodied as a computer readable storage medium (or multiple computer readable media) (e.g., a computer memory, one or more floppy discs, compact discs (CD), optical discs, digital video disks (DVD), magnetic tapes, flash memories, circuit configurations in Field Programmable Gate Arrays or other semiconductor devices, or other tangible computer storage medium) encoded with one or more programs that, when executed on one or more computers or other processors, perform methods that implement the various embodiments of the invention discussed above. As is apparent from the foregoing examples, a computer readable storage medium may retain information for a sufficient time to provide computer-executable instructions in a non-transitory form. Such a computer readable storage medium or media can be transportable, such that the program or programs stored thereon can be loaded onto one or more different computers or other processors to implement various aspects of the present invention as discussed above. As used herein, the term \u201ccomputer-readable storage medium\u201d encompasses only a computer-readable medium that can be considered to be a manufacture (i.e., article of manufacture) or a machine. Alternatively or additionally, the invention may be embodied as a computer readable medium other than a computer-readable storage medium, such as a propagating signal.","The terms \u201cprogram\u201d or \u201csoftware\u201d are used herein in a generic sense to refer to any type of computer code or set of computer-executable instructions that can be employed to program a computer or other processor to implement various aspects of the present invention as discussed above. Additionally, it should be appreciated that according to one aspect of this embodiment, one or more computer programs that when executed perform methods of the present invention need not reside on a single computer or processor, but may be distributed in a modular fashion amongst a number of different computers or processors to implement various aspects of the present invention.","Computer-executable instructions may be in many forms, such as program modules, executed by one or more computers or other devices. Generally, program modules include routines, programs, objects, components, data structures, etc. that perform particular tasks or implement particular abstract data types. Typically the functionality of the program modules may be combined or distributed as desired in various embodiments.","Also, data structures may be stored in computer-readable media in any suitable form. For simplicity of illustration, data structures may be shown to have fields that are related through location in the data structure. Such relationships may likewise be achieved by assigning storage for the fields with locations in a computer-readable medium that conveys relationship between the fields. However, any suitable mechanism may be used to establish a relationship between information in fields of a data structure, including through the use of pointers, tags or other mechanisms that establish relationship between data elements.","Various aspects of the present invention may be used alone, in combination, or in a variety of arrangements not specifically discussed in the embodiments described in the foregoing and is therefore not limited in its application to the details and arrangement of components set forth in the foregoing description or illustrated in the drawings. For example, aspects described in one embodiment may be combined in any manner with aspects described in other embodiments.","Also, the invention may be embodied as a method, of which an example has been provided. The acts performed as part of the method may be ordered in any suitable way. Accordingly, embodiments may be constructed in which acts are performed in an order different than illustrated, which may include performing some acts simultaneously, even though shown as sequential acts in illustrative embodiments.","Use of ordinal terms such as \u201cfirst,\u201d \u201csecond,\u201d \u201cthird,\u201d etc., in the claims to modify a claim element does not by itself connote any priority, precedence, or order of one claim element over another or the temporal order in which acts of a method are performed, but are used merely as labels to distinguish one claim element having a certain name from another element having a same name (but for use of the ordinal term) to distinguish the claim elements.","Also, the phraseology and terminology used herein is for the purpose of description and should not be regarded as limiting. The use of \u201cincluding,\u201d \u201ccomprising,\u201d or \u201chaving,\u201d \u201ccontaining,\u201d \u201cinvolving,\u201d and variations thereof herein, is meant to encompass the items listed thereafter and equivalents thereof as well as additional items."],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"BRIEF DESCRIPTION OF DRAWINGS","p":["The accompanying drawings are not intended to be drawn to scale. In the drawings, each identical or nearly identical component that is illustrated in various figures is represented by a like numeral. For purposes of clarity, not every component may be labeled in every drawing. In the drawings:",{"@attributes":{"id":"p-0014","num":"0013"},"figref":"FIG. 1"},{"@attributes":{"id":"p-0015","num":"0014"},"figref":"FIG. 2"},{"@attributes":{"id":"p-0016","num":"0015"},"figref":"FIG. 3"},{"@attributes":{"id":"p-0017","num":"0016"},"figref":"FIGS. 4and 4"},{"@attributes":{"id":"p-0018","num":"0017"},"figref":"FIG. 5"}]},"DETDESC":[{},{}]}
