---
title: Educational adaptive provider architecture
abstract: The educational adaptive provider architecture described herein provides a way for an educational services framework to be built on varying underlying existing technologies without any changes in the object model and services. The provider framework supports the ability to have multiple types of providers for various services, such as, for example, for authorization, authentication, communication, grouping, scoring, social-networking, storage and user functions. The educational adaptive provider architecture provides easy integration of existing institutional and educational service deployments.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08244872&OS=08244872&RS=08244872
owner: Microsoft Corp.
number: 08244872
owner_city: Redmond
owner_country: US
publication_date: 20090611
---

{"@attributes":{"id":"description"},"BRFSUM":[{},{}],"heading":["BACKGROUND","SUMMARY","DETAILED DESCRIPTION"],"p":["Many institutions and educational providers rely on computer systems for teaching classes and providing other types of services. These computer systems often rely on different providers of services to provide them with, for example, authorization to access their computer system, user authentication, grouping of various users into work groups, classes and the like, scoring or assessment of exams or other items, social networking, data storage and other user functions. Institutional and educational deployments of computer systems are different, and have existing underlying technological provider investments which are hard to change and difficult to integrate and use.","This Summary is provided to introduce a selection of concepts in a simplified form that are further described below in the Detailed Description. This Summary is not intended to identify key features or essential features of the claimed subject matter, nor is it intended to be used to limit the scope of the claimed subject matter.","In general, the educational adaptive provider architecture described herein provides a way for an educational services framework to be built on varying underlying existing technologies without any changes in the object model and services. The provider framework supports the ability to have multiple types of providers for various services, such as, for example, for authorization, authentication, communication, grouping, scoring, social-networking, storage and user functions. The educational adaptive provider architecture provides easy integration of existing institutional and educational service deployments.","More specifically, one embodiment of the educational adaptive provider architecture operates as follows. A request for computer services is received from a requester such as a user. For example, the service requested might be for authorization to access a computer system, user authentication, grouping of various users into a class, scoring or assessment of an exams, access to a social networking site or a class that is being taught, data storage or other user functions. The service request is reformatted into a format required by a pluggable external service or service provider of a set of pluggable external service providers. A pluggable service or service provider is one that is capable of being plugged in without significant interruption to a system that is operating. It is a configurable service that does not have to be preconfigured. (For the purpose of this disclosure the terms pluggable service and pluggable service provider will be used interchangeably.) Once created, the reformatted service request is then sent to a selected pluggable external service provider for servicing (e.g., providing the service requested). The requested service response is then obtained from the pluggable external service provider. The requested service response can be reformatted into a format usable by the requester, if necessary. The requested service response, either reformatted or not, is then provided to the requester.","In the following description of the educational adaptive provider architecture, reference is made to the accompanying drawings, which form a part thereof, and which is shown by way of illustration examples by which the educational adaptive provider architecture may be practiced. It is to be understood that other embodiments may be utilized and structural changes may be made without departing from the scope of the claimed subject matter.","1.0 Educational Adaptive Provider Architecture","The educational adaptive provider architecture described herein provides a way to support multiple provider technologies in the educational domain (or other domain for that matter) and provides for the easier adoption of different services and different service providers. It also helps extensibility without causing disruption to the applications, services or utilities that are built on existing services and entity architectures. The educational adaptive provider architecture provides integrated transactional-capability, error-handling and compensation-logic, and also supports providers for (but not limited to) authorization, authentication, communication, grouping, scoring, social-networking, storage and user functions.","1.1 Overview","The educational adaptive provider architecture described herein provides a way to support multiple service provider technologies in the educational domain. The educational adaptive provider architecture is not limited to existing service providers (such as, for example, for authorization, authentication, communication, grouping, scoring, social-networking, storage and user functions), but can also support additional providers, such as, for example, custom providers, at the same time, and provides the ability to add a custom provider for each pluggable provider category. The architecture also provides a way to turn off an external service provider if, for example, an institutional computer system does not have any provider technology investments in that provider area or if a software application chooses not to utilize a provider.","The educational adaptive provider architecture works for cloud hosted (e.g. hosted over a network such as the Internet) and locally-hosted institutional scenarios. The architecture employs pluggable external service providers, and they can be totally different for different institutional deployments. The architecture helps to seamlessly integrate pluggable external service provider technologies into an existing education services architecture without changes to any exposed Application Programming Interfaces (APIs). For example: A university may have an existing user services provider. The architecture helps to expose the existing user services provider capability in a consistent and similar manner to other existing services employed in an existing educational computer system and hence requires no changes in the exposed education services APIs. If the institution decides to the switch from an existing user services provider to a different user services provider supported by the educational adaptive provider architecture, only configuration changes are needed to consume the internal and external service providers since both external providers are supported in the educational adaptive provider architecture. Institutions do not have to change applications, services and utilities that are built on the existing computer system framework.","1.1.1 Pluggable Provider Framework for Educational Services:","The educational adaptive provider architecture interfaces with pluggable external service providers. A pluggable service provider is one that is capable of being plugged in without significant interruption to a system that is operating. It is a configurable service provider that does not have to be preconfigured. The use of pluggable external service providers allows the architecture to provide the ability to add, change or remove external service providers for communications, grouping, scoring, social-networking, storage and other user services via configuration settings.","1.1.2 Integrated Transactional Capability","The educational adaptive provider architecture provides the ability to make provider related operations to be transactional with other educational service entities and storage operations and with other external service provider based operations. This is due to the fact that the services provided by a pluggable external services provider can be reformatted by an internal service provider to present a consistent user-interface and functionality via one or more application programming interfaces (APIs).","1.1.3 Provider Compensation Logic Support:","The educational adaptive provider architecture provides additional compensation logic for requested external provider operations that are unsuccessful. Details of provider compensation logic support will be provided later in Section 4.5.","1.1.4 Integrated Error Handling:","The educational adaptive provider architecture provides for integrated error-handling for external provider operations so that errors are propagated and displayed in a consistent and similar manner to users. This makes it easier for entities to build applications, services and utilities on an educational services framework. Details of integrated error handing will be provided later in Section 4.6.","1.1.5 Easy Integration:","The educational adaptive provider architecture helps institutions integrate existing service providers into a common provider framework. In essence, the architecture provides the ability to use and integrate existing and new institutional providers for authorization, authentication, communications, grouping, scoring, social networking, storage, various user functions, and other services as desired. This is valuable since most institutions have existing underlying technological provider investments which are hard to change.","1.1.6 Extensibility for Partners and Clients:","The educational adaptive provider architecture provides extensibility to add, remove, change\/swap underlying technologies as needed without causing disruption to the applications, services or utilities that are built on existing computer systems and frameworks. Institutions and partners can develop their own providers if the existing providers do not meet their requirements. The newly developed providers can be easily plugged into the provider framework of the present education adaptive provider architecture without any code changes.","An overview of the educational adaptive provider architecture having been provided, the next sections will provide a description of exemplary processes for employing the educational adaptive provider architecture, an exemplary architecture in which the architecture can be practiced, and details and alternate embodiments of the architecture.","2.0 Exemplary Processes for Employing the Architecture","The educational adaptive provider architecture can be employed using various processes. Some exemplary processes for employing the adaptive provider architecture are described below.","In general, one exemplary process by which the educational adaptive provider architecture can be employed is shown in . As shown in , this embodiment of the educational adaptive provider architecture operates as follows. A request for computer services is received from a requester such as a user, as shown in block . For example, the service requested might be for authorization to access a computer system, user authentication, grouping of various users into a class, scoring or assessment of an exams, access to a social networking site or a class that is being taught, data storage and other user functions. The service request is reformatted into a format required by a pluggable external service provider of a set of pluggable external service providers, as shown in block . The format may be obtained, for example, by accessing a list of available pluggable external service providers and associated configurations and data formats. The reformatted service request is then sent to a pluggable external service provider for servicing (e.g., providing the service requested), as shown in block . As shown in block , the requested service is obtained from the pluggable external service provider. The requested service can be reformatted into a format usable by the requester, if required, as shown in block . As shown in block , the requested service, either reformatted or not, is then provided to the requester.","Another exemplary embodiment  for employing the educational adaptive provider architecture is shown in . In this embodiment a service request for computer services is received from a requester, as shown in block . The type of service request is determined, as shown in block . For example, the type of service requests can be determined by extracting a field in the service request that specifies the type of service requested. Based on the type of service request determined, the service request is routed to an internal service provider related to the type of service requested, as shown in block . As shown in block , the format of the service request required by a pluggable external service or a pluggable external component for the type of service determined is obtained. For example, the information can be extracted from a file that lists the pluggable external services providers and the associated configurations. The service request for computer services is then formatted to be compatible with one of a set of external services or external components based on the obtained format, as shown in block . The formatted service request is then sent to the pluggable external service provider or the pluggable external component for servicing, as shown in block . The requested service is then provided to the requester, as shown in block .","Yet another exemplary embodiment  for employing the adaptive provider architecture is shown in . In this embodiment, a requester sends a request for computer services, as shown in block . The request for computer services is routed to an internal services provider based on the type of request it is. For example, the service requested might be for authorization to access a computer system, user authentication, grouping of various users into a class, scoring or assessment of an exams, access to a social networking site or a class that is being taught, data storage and other user functions. So, as shown in , the service request might be routed to an internal communication provider (block ), a group provider (block ), a score provider (block ), a social networking provider (block ), a storage provider (block ), a user provider (block ) or another type of service provider . In this example, let it be assumed that the service request is for communication services and the request is submitted to an internal communication services provider (block ). (This path is indicated by darker lined blocks.)","The selected internal service provider determines the type of external services provider suited to provide the external service after obtaining the availability and configuration of the pluggable external service providers (blocks , , , , , , ). For each type of service there can be several pluggable external service providers available for selection, as shown in blocks , ,  and ). One of these can be a custom provider (e.g., block ). Any of these external service providers can also be designated as a default service provider. Additionally, one option is a selection of no service provider, in which case no service will be provided by any pluggable external service provider (block ). In this example, it is assumed that the internal communication provider (block ) selects the custom pluggable external communications provider (block ). The pluggable external service provider is selected based on the configuration obtained by the internal communication provider.","The internal service provider then employs the configuration required for the type of pluggable external service provider, and reformats the service request for the selected pluggable external service provider selected (as shown in blocks , , , , , , ). The reformatted message is sent to the chosen pluggable external service provider that provides the service (e.g., block  in this example). The selected pluggable external service provider can provide the service directly to the requester, or the internal services provider can reformat the services as required by the requester if necessary (blocks , , , , , , ).","It should be noted that although the above description generally relates to authorization, authentication, communication, grouping, scoring, social-networking, storage and user service providers, providers for other services can also be employed with the educational adaptive provider architecture.","3.0 Exemplary Embodiment of the Architecture","The exemplary process for employing the architecture having been provided, the following paragraphs describe an exemplary embodiment of an architecture in which one embodiment of the architecture can be practiced.",{"@attributes":{"id":"p-0041","num":"0040"},"figref":["FIG. 4","FIG. 5"],"b":["400","402","500","404","406","408"]},"Based on the type of service request, the request is routed to one of a set of internal service providers related to the determined type of service request . This internal service provider  can be related to one of, for example, communications, grouping users for different purposes, scoring exams or other data, social networking, data storage, and other user operations. The chosen internal service provider of a provider framework  accesses the configuration  and provides a list of registered pluggable external service providers, and chooses and initializes a pluggable external service provider to handle the service request. The chosen internal service provider also obtains the configuration of the chosen pluggable external service provider from the configuration storage module . This configuration will be used, for example, to configure the service request received into a format compatible with a pluggable external services provider. For example, the external service provider can be chosen from one or more existing external service providers for the determined type of service. Or a custom provider can be selected. Optionally, the internal service provider can choose not select a provider at all for this service, in which case no service of the requested type will be provided. More specifically, an internal service provider  can choose a pluggable external service provider , , , , ,  related to the type of service request from the set of pluggable external service providers . For each type of pluggable external service providers , , , , ,  there can be several pluggable external service providers available for selection , , . Any of these can be a custom provider . The pluggable external provider is chosen by the provider framework based on the configuration maintained in the configuration storage module . One of these pluggable external service providers can also be designated as a default service provider. Additionally, one option is a selection of no service provider  (e.g., a stub is employed), in which case no service will be provided by any pluggable external service provider. The chosen internal service provider can also access any additional information needed from a resource file or files .","Once the pluggable external service provider is selected, the chosen internal service provider then reformats the service request in accordance with the configuration required by the chosen external service provider, as shown in block .","Once the service request is properly formatted for the chosen pluggable external service provider, the reformatted service request is sent to the chosen pluggable external services provider that provides the requested service . Both the initial service request  and the provided requested service  can be sent directly to the requester, or can be sent over a network , such as the Internet, for example.","The chosen internal service provider can also interface with the chosen pluggable external service provider to perform error handling and compensation logic as required, as will be discussed in more detail later.","4.0 Additional Details and Alternate Embodiments","An overview of the adaptive provider architecture, an exemplary architecture and exemplary processes having been provided, the following paragraphs provide details and alternate embodiments of the architecture.","4.1 Service Request and Internal Provider Details:","As discussed above, the internal service providers reformat service requests from a user or other entity into a format recognizable to a pluggable external service provider. This provides the ability to add, remove, change\/swap underlying technologies and services without causing disruption to the applications, services or utilities that are built on existing computer systems and frameworks. Institutions and partners can develop their own providers if the existing providers do not meet their requirements. The newly developed providers can be easily plugged into the provider framework without any code changes.","4.1.1 Service Request:","As discussed previously, a service request is made for services. Generally such a service request includes the context (who is making the call), the action that needs to be performed, and the object that the action needs to be performed on (for example a blog or forum). For example, for a request for social networking services the service request would include the user ID of the requester, the ID of the social network (such as, for example a blog ID), and a request to access the social networking site. For a grouping service request (e.g., a request to be added to a group by a group provider ), the service request might include the user ID, the user login provider ID, as well as the reference of the group, along with the action requested (e.g., to be added to the group) and the registered application ID making the request.","4.1.2 Internal Communications Provider","The internal communications provider selects the pluggable external service to provide communications services and manages the communications with it. To this end, the internal communications provider reformats any communications service request routed to it to be compatible with a pluggable external communications provider. The external pluggable communications provider can provide, for example, the following communications services: send email, create schedule, update schedule, get schedule, cancel schedule, send message and get message (for e.g. these can be provided by Microsoft\u00ae Corporation's Office\u00ae Communication Server, Hotmail\u00ae and Microsoft\u00ae Exchange.)","The internal communications provider also provides error handling and compensation logic for the chosen pluggable external communication provider.","4.1.3 Internal Scoring Provider","The internal scoring provider selects a pluggable external service to provide scoring services and manages the scoring services provided by it. To this end, the internal scoring provider can reformat any scoring service request routed to it to be compatible with the pluggable external scoring provider. The pluggable external scoring provider can provide, for example, the following scoring services: scoring, rubrics, analytics retrievals and updates (For example. these are provided with Microsoft\u00ae Corporation's Semblio and Extended Type Service (ETS)).","The internal scoring provider also provides error handling and compensation logic for the chosen pluggable external scoring provider.","4.1.4 Internal Social Networking Provider","The internal social networking provider selects a pluggable external service to provide social networking services and manages the social networking services provided by it. These social networking services can include managing access to a course blog or forum provided over a network, for example. To this end, the internal social networking provider reformats any social networking service request routed to it to be compatible with the pluggable external social networking provider. The external pluggable social networking provider can provide, for example, the following social networking services: create blog, create forum (for example, these can be related to Microsoft\u00ae Corporation's Community Server, Windows Live\u2122 and SharePoint\u00ae team services and portal server).","The internal social networking provider also provides error handling and compensation logic for the chosen pluggable external social networking provider.","4.1.5 Internal Storage Provider","The internal storage provider selects a pluggable external service to provide storage services and manages the storage services provided by it. To this end, the internal storage provider reformats any storage service request routed to it to be compatible with a pluggable external storage provider. The pluggable external storage provider can provide, for example, the following file sharing and storage services: add file, add folder, create file, create folder, update file, update folder, delete file, delete folder, get file, get folder, copy file, and move file (for example these can related to Microsoft\u00ae Windows-Live\u2122, Sharepoint\u00ae, File Server and Sequence Query Language (SQL).","The internal storage provider also provides error handling and compensation logic for the chosen pluggable external storage provider.","4.1.6 Internal User Services Provider","The internal user services provider selects a pluggable external service to provide user services and manages the user services provided by it. To this end, the internal user services provider reformats any user services service request routed to it to be compatible with the pluggable external user services service provider. The external pluggable user services provider can provide, for example, the following user services: create user, update user, delete user, and get user profile (for example, these can be related to Microsoft's\u00ae Windows-Live\u2122, Active Directory\u00ae, SharePoint\u00ae and SQL).","The internal user services provider also provides error handling and compensation logic for the chosen pluggable external user services provider.","4.1.7 Internal Group Provider","The internal group provider selects a pluggable external service provider to provide grouping services and manages the grouping services provided by it. To this end, the internal group provider reformats any group service request routed to it to be compatible with the pluggable external group provider. The external pluggable group provider can provide, for example, the following group services: create group, get group information, get group members, update group, delete group, add member, get member, update member, remove member, and check if a member is in a group (for e.g. these are tied to Microsoft's\u00ae Address-Book Clearing House (ABCH)\u2014an online\/cloud directory service, Active Directory\u00ae, SharePoint\u00ae and SQL).","The internal group provider also provides error handling and compensation logic for the chosen pluggable external group provider.","4.2 Configuration Storage and Initialization","As discussed previously, the selected internal provider reformats the received service request message by accessing a configuration database or configuration file. The configuration database or configuration file provides the configurations of the types of external pluggable service providers available for each type of service and provides the types of classes of information available for each type of external pluggable service provider. In one embodiment of the architecture, the configuration file includes provider name, provider type, default provider; and provider properties. For example, an exemplary format of a configuration file would be:",{"@attributes":{"id":"p-0072","num":"0071"},"tables":{"@attributes":{"id":"TABLE-US-00001","num":"00001"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"thead":{"row":{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"<providerTypes>"},{"entry":"<groupProvider default=\u201cNoOpGroupProvider\u201d>"},{"entry":"\u2003<providers>"},{"entry":"\u2003\u2002<add name=\u201cABCHGroupProvider\u201d"},{"entry":"type=\u201cEducation.CoreService.GroupProvider.AbchGroupProvider,"},{"entry":"MS.Education.CoreServices.GroupProvider\u201d \/>"},{"entry":"\u2003\u2002<add name=\u201cNoOpGroupProvider\u201d"},{"entry":"type=\u201cEducation.CoreService.GroupProvider.NoOpGroupProvider,"},{"entry":"MS.Education.CoreServices.GroupProvider\u201d \/>"},{"entry":"\u2003<\/providers>"},{"entry":"\u2002<\/groupProvider>"},{"entry":"\u2002<storageProvider default=\u201cNoOPStorageProvider\u201d>"},{"entry":"\u2003\u2002<providers>"},{"entry":"\u2003\u2002\u2009<add name=\u201cLive-Storage\u201d"},{"entry":"type=\u201cEducation.CoreService.StorageProvider.WLStorageProvider,"},{"entry":"MS.Education.CoreServices.StorageProvider\u201d \/>"},{"entry":"\u2003\u2002<add name=\u201cSkyDrive\u201d"},{"entry":"type=\u201cEducation.CoreService.StorageProvider.SkyDriveStorageProvider,"},{"entry":"MS.Education.CoreServices.StorageProvider\u201d \/>"},{"entry":"\u2003\u2002<add name=\u201cNoOPStorageProvider\u201d"},{"entry":"type=\u201cEducation.CoreService.StorageProvider.NoOPStorageProvider,"},{"entry":"MS.Education.CoreServices.StorageProvider\u201d \/>"},{"entry":"\u2003\u2002<\/providers>"},{"entry":"\u2002<\/storageProvider>"},{"entry":"<\/providerTypes>"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}]}}}}},"4.3 Resource File","One or more resource files can be used to provide additional information necessary for error handling, compensation logic and other functions. To this end a resource file might include: error codes, error messages, request messages, and so forth.","4.4 Decision Logic on Selecting a Pluggable External Service Provider","The internal provider is selected based on the service request type. The provider framework (e.g. an internal service provider) chooses a pluggable service provider to handle the service request and initializes the chosen external pluggable service provider based on the previously discussed configuration file.","4.5 Provider Compensation Logic Support:","The educational adaptive provider architecture provides additional compensation logic for provider specific operations. The educational adaptive provider architecture provides additional compensation logic, such as in the case when a pluggable external service provider does not handle a type of request. In this case the internal service provider calls the necessary function of the chosen pluggable external services provider to undo any change(s) caused by an unsuccessful request to perform a given operation. A call to an external services provider typically has two outcomes: either the operation succeeded or failed. If the operation failed the pluggable external services provider is requested to undo any changes made by the internal services provider.","4.6 Integrated Error Handling:","The educational adaptive provider architecture provides the ability to have integrated error-handling tied to provider specific operations so that errors are propagated and displayed in a consistent and similar manner to users of any systems employing the architecture. This makes it easier for entities to build applications, services and utilities on an educational services framework. Integrated error handling, in one embodiment, is implemented by maintaining an error code mapping of the internal error messages and the external services provider error messages, such as, for example, in a resource file accessible by the internal service provider. If an error occurs at the pluggable service provider, the error code of the pluggable external services provided is converted to an internal error message format and presented to the user. If no mapping is found for the pluggable external service provider then a generic provider error is presented.","5.0 The Computing Environment","The educational adaptive provider architecture is designed to operate in a computing environment. The following description is intended to provide a brief, general description of a suitable computing environment in which the educational adaptive provider architecture can be implemented. The architecture is operational with numerous general purpose or special purpose computing system environments or configurations. Examples of well known computing systems, environments, and\/or configurations that may be suitable include, but are not limited to, personal computers, server computers, hand-held or laptop devices (for example, media players, notebook computers, cellular phones, personal data assistants, voice recorders), multiprocessor systems, microprocessor-based systems, set top boxes, programmable consumer electronics, network PCs, minicomputers, mainframe computers, distributed computing environments that include any of the above systems or devices, and the like.",{"@attributes":{"id":"p-0083","num":"0082"},"figref":["FIG. 5","FIG. 5","FIG. 5","FIG. 5"],"b":["500","500","502","504","500","520","504","506","500","500","508","510","504","508","510","500","500"]},"Device  has a display , and may also contain communications connection(s)  that allow the device to communicate with other devices. Communications connection(s)  is an example of communication media. Communication media typically embodies computer readable instructions, data structures, program modules or other data in a modulated data signal such as a carrier wave or other transport mechanism and includes any information delivery media. The term \u201cmodulated data signal\u201d means a signal that has one or more of its characteristics set or changed in such a manner as to encode information in the signal, thereby changing the configuration or state of the receiving device of the signal. By way of example, and not limitation, communication media includes wired media such as a wired network or direct-wired connection, and wireless media such as acoustic, RF, infrared and other wireless media. The term computer readable media as used herein includes both storage media and communication media.","Device  may have various input device(s)  such as a keyboard, mouse, pen, camera, touch input device, and so on. Output device(s)  such as speakers, a printer, and so on may also be included. All of these devices are well known in the art and need not be discussed at length here.","The educational adaptive provider architecture may be described in the general context of computer-executable instructions, such as program modules, being executed by a computing device. Generally, program modules include routines, programs, objects, components, data structures, and so on, that perform particular tasks or implement particular abstract data types. The educational adaptive provider architecture may be practiced in distributed computing environments where tasks are performed by remote processing devices that are linked through a communications network. In a distributed computing environment, program modules may be located in both local and remote computer storage media including memory storage devices.","6.0 Other Embodiments","It should also be noted that any or all of the aforementioned alternate embodiments described herein may be used in any combination desired to form additional hybrid embodiments. Although the subject matter has been described in language specific to structural features and\/or methodological acts, it is to be understood that the subject matter defined in the appended claims is not necessarily limited to the specific features or acts described above. For example, the architecture can be applied to other types of institutional computer systems besides educational systems. The specific features and acts described above are disclosed as example forms of implementing the claims."],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"DESCRIPTION OF THE DRAWINGS","p":["The specific features, aspects, and advantages of the disclosure will become better understood with regard to the following description, appended claims, and accompanying drawings where:",{"@attributes":{"id":"p-0007","num":"0006"},"figref":"FIG. 1"},{"@attributes":{"id":"p-0008","num":"0007"},"figref":"FIG. 2"},{"@attributes":{"id":"p-0009","num":"0008"},"figref":"FIG. 3"},{"@attributes":{"id":"p-0010","num":"0009"},"figref":"FIG. 4"},{"@attributes":{"id":"p-0011","num":"0010"},"figref":"FIG. 5"}]},"DETDESC":[{},{}]}
