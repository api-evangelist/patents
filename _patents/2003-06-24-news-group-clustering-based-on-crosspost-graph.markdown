---
title: News group clustering based on cross-post graph
abstract: A system and/or method that facilitates analyzing newsgroup clusters. A data reception component receives data relating to a plurality of newsgroups and relays the data to an engine that constructs a weighted graph. The weighted graph represents a subset of the newsgroups as vertices of the graph. The vertices are connected by edges, which represent cross-postings relating to the subset of newsgroups.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08312049&OS=08312049&RS=08312049
owner: Microsoft Corporation
number: 08312049
owner_city: Redmond
owner_country: US
publication_date: 20030624
---

{"@attributes":{"id":"description"},"BRFSUM":[{},{}],"heading":["TECHNICAL FIELD","BACKGROUND OF THE INVENTION","SUMMARY OF THE INVENTION","DETAILED DESCRIPTION OF THE INVENTION"],"p":["The present invention relates to organizing newsgroups via clustering. More particularly, the invention relates to a system and method which utilizes cross-posts to cluster newsgroups.","Self-organized structures (e.g., networks) have gained tremendous popularity over recent years, and such networks poses a significant challenge as to understanding respective constructs thereof. The networks (e.g., the Internet, world wide web, various social networks . . . ) can be very different from each other, but they all typically share a commonality in that their structures are not engineered, but rather are a result of dynamic non-Markovian processes of individual decisions. Understanding the respective structures of these networks can facilitate enabling modeling of as well as searching the networks effectively\u2014the greatest success thus far has been in searching the world wide web, which has now become a primary repository of information and\/or misinformation.","Internet newsgroups (e.g., Usenet) is another large network intermediate to the Internet and social networks. Usenet, the network of topic-oriented newsgroups on the Internet, comprises tens of thousands of newsgroups and hundreds of millions of postings by millions of authors throughout the world. Some basic workings of Usenet are as follows: each of over fifty thousand newsgroups has a unique name, with the name grouped into trees\u2014some of the more common roots of these trees include alt., biz., and rec. Within a newsgroup, the messages are organized as threads. Each message is typically generated by a single author; individuals may author more than one message along a thread. Each thread originates in a single message with a subject heading usually reflecting the content of the message; later messages in the thread, of which there can be thousands, are posted as responses to the original message. Any message along a thread can be cross-posted (e.g., by its author) to any number of additional newsgroups.","Newsgroups facilitate transfer of information and ideas on topics specific to each individual newsgroup. For example, a user interested in gaining travel tips prior to traveling to a country (e.g., Africa) can enter a newsgroup specifically created and operated to discuss such information (rec.travel.africa). There are currently thousands of newsgroups that cover nearly every topic imaginable. When properly utilized, newsgroups can provide for a user to submit highly specific queries and obtain answers thereto, wherein oftentimes such answers are only available from a very limited set of disparate individuals or entities.","Presently, however, it is difficult to quickly locate a particular newsgroup relevant to a specific topic of desire. Even if a newsgroup, that appears to be on-point to a topic, is located by a user, such a newsgroup may not be currently active or may comprise information not germane to the particular topic of interest\u2014thus, not really being on-point. Internet search engines are typically employed to locate newsgroup(s) which relate to information or discussion for a particular topic of interest. However, oftentimes, the search engines return newsgroups with low precision (e.g., non-relevant), due in part to such engines being primarily limited to employment of textual-based searching schemes. For example, if a user desires to join a newsgroup that discusses travel to Africa and enters keywords \u201ctravel\u201d and \u201cAfrica\u201d to a search engine, he\/she may receive an exact desired newsgroup, but the search engine may just as likely return newsgroups focusing on irrelevant respective content (e.g., sports, politics . . . ).","Undesirable results can occur because a conventional search engine typically only ranks the newsgroups based on some pre-determined criteria. The search engine may rank newsgroups according to number of times that both \u201cAfrica\u201d and \u201ctravel\u201d appear in discussion of the newsgroups. Therefore, if the discussion in a sports newsgroup and a political newsgroup is focused on a sports figure traveling to Africa and\/or a political figure traveling to Africa, respectively, they will be ranked highly when the search engine returns newsgroups from the search query, even though the user has no desire to discuss either sports or politics.","In view of at least the above, there exists a strong need in the art for a system and\/or methodology to facilitate improved searching and organization of newsgroups.","The following presents a simplified summary of the invention in order to provide a basis understanding of some aspects of the invention. This summary is not an extensive overview of the invention. It is intended to neither identify key or critical elements of the invention nor delineate the scope of the invention. Its sole purpose is to present some concepts of the invention in a simplified form as a prelude to the more detailed description that is presented later.","The subject invention facilitates locating and\/or organizing newsgroups, and overcomes many of the aforementioned deficiencies related to conventional systems for searching newsgroup-related information. The invention takes advantage of a realization by inventors of the subject invention that cross-postings between newsgroups can be indicative of degree of relatedness among respective newsgroups. As such, the subject invention provides for constructing a weighted graph of newsgroups utilizing cross-posting information. Such a weighted graph can be further refined via pre-processing, post-processing, segmenting schemes, and\/or filtering schemes. The weighted graph can facilitate locating and\/or understanding respective relationships of newsgroups.","Newsgroup(s) cross-postings are in a sense analogs of hyperlinks of a webpage, which reflect a webpage author's judgment that additional web pages may be of interest to readership of an original webpage. Cross-posts are employed via the subject invention as an indication for similarity between topics discussed in newsgroups or an interaction between related communities. A graph in accordance with the subject invention that is defined in part via cross-posts provides a mechanism that greatly facilitates understanding newsgroup(s) structure as well as exploiting such structure to enhance navigation thereof.","One particular aspect of the invention provides for creation of the weighted graph. Newsgroup data is received, which includes but is not limited to data indicating identification of newsgroups, number of postings within newsgroups, and number of cross-posting between newsgroups. The data can be obtained from a database, hard drive, Internet search engine, etc. Cross-postings refer to the posting(s) of a same message to more than one newsgroup (e.g., similar to a group email). The number of cross-postings between newsgroups indicates the degree of relatedness between newsgroups, and thus provides structural constructs for generating a weighted graph. The newsgroup data can be organized in matrices and arrays, wherein an array can indicate the number of newsgroups available on a network at a given time, and a second symmetrical matrix can indicate the number of cross-postings between newsgroups. Matrices and arrays can comprise newsgroups and newsgroup related data in any arbitrary but fixed order, thus facilitating efficient creation of a weighted graph.","A weighted graph is created based upon the newsgroups cross-postings, wherein the newsgroups are represented as vertices and the cross-posts are represented as edges of the weighted graph. The graph can facilitate analysis of newsgroup clusters, as a user can visually determine from the graph which newsgroups are most related. Moreover, the weighted graph can be employed via a search engine to provide meaningful results in connection with a query for newsgroup(s) related to a particular item of interest.","With respect to another aspect of the present invention, the weighted graph can be partitioned into small clusters, wherein a cluster contains a plurality of newsgroups which are highly related to one another. In other words, the newsgroups of a first cluster can be related by a number of internal cross-postings among them that is greater than the number of cross-posting between newsgroups of the first cluster and newsgroups of another cluster. Thus, the degree of relatedness of newsgroups within the first cluster is higher than that for newsgroups outside the first cluster. The present invention thus overcomes some of the deficiencies of prior art systems that do not provide for grouping of newsgroups.","The weighted graph can be clustered via a spectral clustering algorithm, for example. The spectral clustering algorithm can be applied recursively to the weighted graph, to provide for modifying results without executing the algorithm over an entire data set repeatedly. Also, segmented clusters can be merged in accordance with another particular aspect of the present invention as part of a post-processing aspect of the invention. If weights of edges between two or more clusters are sufficiently large, the clusters can be merged into a larger cluster so as to correct for undesired segmentation resulting from the approximation-based nature of the clustering algorithm.","With respect to another particular aspect of the invention, the data can be filtered prior to being graphed, so as to facilitate removing irrelevant data prior to constructing the weighted graph thereby optimizing utilization of processing bandwidth as well as providing for a more useful weighted graph in that better respective data is employed to build the graph. Newsgroups can be filtered when they do not contain a threshold of postings, as newsgroups with low postings are indicative of a low level of interest in the topic. Furthermore, edges of low weight can be pared, as a small number of cross-postings between newsgroups indicate that the newsgroups are not related. Moreover, isolated newsgroups or subsets of newsgroups can be excluded from the weighted graph, as isolation would indicate a very specific interest or a low-interest newsgroup.","The results from the weighted cluster graph can either be returned as final output or can be used as input to other processing components such as search engines, newsgroup browsers or email programs. For example, if an email program were used to post a response to a newsgroup message, the program could suggest to the user that the message be cross-posted to all newsgroups in a cluster containing the original newsgroup. Or, as another example, a search engine could use the weighted cluster graph (e.g., represented as a matrix, database, vectors, . . . ) in connection with executing a newsgroup search and providing results in response thereto.","Moreover, final output results from the weighted cluster graph can be output to a printer, monitor, floppy disk, CD, DVD, hard drive, etc. The results can be displayed graphically or textually. For example, if an Internet search engine were utilized to locate a newsgroup, a weighted cluster graph created in accordance with the present invention could be displayed to the user to facilitate user analysis of the clusters.","To the accomplishment of the foregoing and related ends, the invention then comprises the features hereinafter fully described and particularly pointed out in the claims. The following description and the annexed drawings set forth in detail certain illustrative aspects of the invention. These aspects are indicative, however, of but a few of the various ways in which the principles of the invention may be employed and the present invention is intended to include all such aspects and their equivalents. Other objects, advantages and novel features of the invention will become apparent from the following detailed description of the invention when considered in conjunction with the drawings.","The present invention is now described with reference to the drawings, wherein like reference numerals are used to refer to like elements throughout. In the following description, for purposes of explanation, numerous specific details are set forth in order to provide a thorough understanding of the present invention. It may be evident, however, that the present invention may be practiced without these specific details. In other instances, well-known structures and devices are shown in block diagram form in order to facilitate describing the present invention.","As used in this application, the term \u201ccomputer component\u201d is intended to refer to a computer-related entity, either hardware, a combination of hardware and software, software, or software in execution. For example, a computer component may be, but is not limited to being, a process running on a processor, a processor, an object, an executable, a thread of execution, a program, and\/or a computer. By way of illustration, both an application running on a server and the server can be a computer component. One or more computer components may reside within a process and\/or thread of execution and a component may be localized on one computer and\/or distributed between two or more computers.","Referring now to the drawings,  illustrates a high-level system overview in connection with one particular aspect of the subject invention. The subject invention relates to a novel system  for generating a weighted cluster graph of newsgroups utilizing cross-posting information. The weighted cluster graphing system  comprises a data reception component  that facilitates reception of newsgroup related data. Such data can include but is not limited to number of posts within newsgroup(s), dates and times of each posting, number of cross-post(s) within a newsgroup(s), corresponding newsgroup(s) conjointly comprising such cross-post(s), authors of each individual post and cross-post, subject lines of each individual post and cross-post, and number of cross-post(s) between two newsgroups. Cross-posting occurs when an identical message is simultaneously posted within more than one user-specified newsgroup. The data reception component  can receive newsgroup formatted in any suitable manner (e.g., data contained in matrices, vectors, XML data, . . . ). Furthermore, the data reception component  can be employed to recognize newsgroup data, wherein data not relating to newsgroups is discarded.","According to one particular aspect of the present invention, the data reception component  can receive matrices and arrays comprising newsgroup data. Alternatively, the data reception component  can facilitate organization of data into matrices, thus effecting efficient computation of data. For example, newsgroups can be organized in an array or matrix N, wherein the number of rows or columns of N corresponds to the number of newsgroups contained within a network at a given time. The entries of N can indicate the number of postings within a newsgroup, number of authors posting to a newsgroup, etc. corresponding to such entry N. A symmetrical matrix P can be created, wherein the number of rows and columns of P is equivalent to the number of newsgroups of N. Matrix P can contain data relating to the number of cross-postings between newsgroups.","In particular, let n=n(t) be a number of newsgroups at time t. The cross-post matrix P=P(t, \u03b4t) is a symmetric n\u00d7n matrix, with each row representing a different newsgroup, in some arbitrary but fixed order. Non-negative integer components Pof P represent a total number of cross-posts between all messages on newsgroup i and newsgroups j over time interval \u03b4t before time t. This information can be represented either as a multigraph (i.e., a graph in which there may be multiple edges between vertices) or as a weighted graph. In the multigraph representation, the vertices represent distinct newsgroups and the number of edges between i and j represent the total number of cross-postings between newsgroup i and newsgroup j. In the weighted graph representation, the vertices again represent distinct newsgroups and the weight of the edge between i and j represents the number of cross-postings between newsgroup i and newsgroup j.","In accordance with one aspect of the present invention, the data reception component  can be effectively coupled to a data store  within the system \u2014the data store  can be employed to retain data previously received by the data reception component  as well as various algorithms (e.g., clustering algorithms), historical data, profiles, contextual data, content-based data, and any other suitable information for carrying out the present invention. The data store  can be any storage component capable of retaining computer data, such as a CD, DVD, hard drive, floppy disk, server database, etc. The data store  can be further employed to store any suitable data type (e.g., XML, HTML, data tables . . . ), and any other data type or structure can be retained in the data store  in accordance with one aspect of present invention.","At least a subset of data received by the data reception component  and\/or held in the data store  can be relayed to and\/or from a graphing engine . The graphing engine  facilitates generation of a weighted graph relating to newsgroup data by utilizing data received by the data reception component  and\/or contained within the data store , such that the graph depicts relatedness of two or more newsgroups. Specifically, the weighted graph is created based upon cross-postings between a plurality of newsgroups, as cross-postings between newsgroups are indicative of relatedness. For example, two newsgroups entitled \u201cTravel to Africa\u201d and \u201cTravel by Air\u201d, respectively, will be related, as cross-posts regarding travel by air to Africa will be shared between both newsgroups. As cross-posting between two or more newsgroups increases numerically (or a percentage of cross-postings to total posts increases), relatedness between such newsgroups likewise increases. The graphing engine  can depict degrees of relatedness by representing newsgroups as vertices and cross-posts as edges of a weighted graph. An exemplary weighted graph  in accordance with one aspect of the present invention is illustrated in  and explained more fully below. The graph generated by the graphing component  can be relayed to the data store  for storage and\/or display. As discussed infra, such weighted graph can be employed via search engine to substantially enhance newsgroup searching.","Turning briefly to , an exemplary weighted graph  representing newsgroup data in accordance with an aspect of the present invention is displayed, wherein newsgroups are represented as vertices and cross-posts are represented as edges. The terms \u201cgraph\u201d and\/or \u201cgraphical representation\u201d used throughout this description are intended to refer not only to visual graph(s), but also to any suitable organized collection of data. For example, the term \u201cgraph\u201d as used in the subject claims can refer to a matrix constructed in such a manner to indicate relatedness of newsgroups using cross-posts.","Increasing degrees of relatedness between vertices can be represented by increasing weights of edges connecting such vertices (e.g., thicker edges between vertices indicate more cross-posting between newsgroups). For example, more cross-posting exists between newsgroups  and  than between  and , visually illustrated by a thicker edge  between the newsgroups  and  as compared to edge  that connects newsgroups  and . No cross-posting exists between newsgroups  and , as no edge exists between such newsgroups.","The weighted graph  can be conveyed via any suitable manner (e.g., graphically displayed to a user, mathematically represented to a computing system, . . . ), or utilized for further modification and\/or analysis thereof (e.g., in connection with a newsgroup search). It is to be understood that the illustrated weighted graph  is merely exemplary, and is not meant to be limiting in any manner as other embodiments of weighted graphs as well as other means for representing relatedness of newsgroups via utilization of cross-posting information are contemplated and intended to fall within the scope of the hereto appended claims. For example, an edge line can exist for each cross-posting (rather than increasing edge weights as cross-postings between newsgroups increase). Furthermore, vertices can be any suitable shape, and can be weighted to indicate a number of postings within each newsgroup (e.g., vertices representing newsgroups can be larger and\/or varying in color as the number of newsgroup postings increase or decrease). Moreover, weighted graph  can be a 3-dimensional graph, resulting in a more visually appealing graph during instances that a large number of newsgroups are considered. The weighted graph can also be represented numerically as well if desired.","Returning to , the system  can further comprise a segmenting component , which facilitates segmentation of the weighted graph into clusters of highly related newsgroups. Grouping of the newsgroups via clustering facilitates improved organization and searching thereof as compared to conventional systems and\/or methods of organizing and searching newsgroups and newsgroup related data. Individual clusters and\/or weighted graphs not modified by segmenting component  can be relayed to the data store  for storage and\/or display. The segmenting component  can employ various clustering algorithms to facilitate determination of segmentation locations between vertices of a weighted graph, wherein such segmentation provides for disassociation between substantially unrelated newsgroups. The clustering algorithms can be traditional clustering algorithms, such as k-median, or any other suitable clustering algorithm(s) for carrying out the subject invention. In one embodiment, the segmenting component  employs spectral clustering algorithms to partition the graph into clusters of a desirable size, such clusters comprising substantially related newsgroups. Spectral clustering algorithms and the segmenting component  are discussed in greater detail below. It is to be appreciated the invention contemplates use of any suitable clustering algorithm(s) for segmentation of clusters.","In accordance with one aspect of the present invention, the system  can be part of a search engine that employs the weighted graph in connection with searching newsgroups. For example, a search for newsgroups discussing a particular topic can be initialized by entering search terms into the system . The data reception component  can facilitate deliverance of newsgroup data to the graphing engine  and\/or data store , thereby in connection with generating a weighted graph having newsgroups as vertices and cross-posts as edges. The graphing engine  can be employed to relay such weighted graph to the data store  for storing and\/or displaying. Furthermore, the graphing engine  can relay the weighted graph to the segmenting component , which facilitates segmentation of the graph into clusters of highly related newsgroups. The system  can return clusters of relevant newsgroups to a user as part of results to a query for newsgroups corresponding to topic(s) of interest. Furthermore, the system  can be employed in accordance with searching newsgroups relating to sale of goods and\/or services (e.g., auction-related newsgroups, newsgroups containing classified listings, . . . ). For example, cross-postings between newsgroups employed to facilitate sale of goods and\/or services can be indicative of type of goods and\/or services being sold. The system  can facilitate clustering of such newsgroups, thereby enabling a buyer and\/or seller of goods and\/or services to quickly access most germane newsgroups.","In accordance with another aspect of the present invention, the data delivered to and\/or relayed from the data reception component  can be filtered to decrease size of a data set relating to newsgroups, thus reducing computation time required to create a weighted graph. The data set can be filtered by removing newsgroups with insufficient postings, removing newsgroups with insufficient cross-postings, through artificial intelligence means, or any other suitable means for pruning a superset of data to more relevant subset(s) that can be employed by the graphing engine  to generate a meaningful weighted graph.","The system  can employ various inference schemes and\/or techniques in connection with filtering undesirable newsgroups. As used herein, the term \u201cinference\u201d refers generally to the process of reasoning about or inferring states of the system, environment, and\/or user from a set of observations as captured via events and\/or data. Inference can be employed to identify a specific context or action, or can generate a probability distribution over states, for example. The inference can be probabilistic\u2014that is, the computation of a probability distribution over states of interest based on a consideration of data and events. Inference can also refer to techniques employed for composing higher-level events from a set of events and\/or data. Such inference results in the construction of new events or actions from a set of observed events and\/or stored event data, whether or not the events are correlated in close temporal proximity, and whether the events and data come from one or several event and data sources. Various classification schemes and\/or systems (e.g., support vector machines, neural networks, expert systems, Bayesian belief networks, fuzzy logic, data fusion engines . . . ) can be employed in connection with performing automatic and\/or inferred action in connection with the subject invention.","Turning now to , a method  for creating a cluster graph of newsgroups is illustrated. While, for purposes of simplicity of explanation, the methodology is shown and described as a series of acts, it is to be understood and appreciated that the present invention is not limited by the order of acts, as some acts may, in accordance with the present invention, occur in different orders and\/or concurrently with other acts from that shown and described herein. For example, those skilled in the art will understand and appreciate that a methodology could alternatively be represented as a series of interrelated states or events, such as in a state diagram. Moreover, not all illustrated acts may be required to implement a methodology in accordance with the present invention.","The discussing of the methodology is supplemented with source code in accordance with one particular implementation of the present method so as to facilitate understanding of the subject method. Any suitable program\/language can be employed in connection with the invention\u2014accordingly, the invention is not limited to any particular program and\/or language (e.g., Matlab). It is to be appreciated that the method of  is not limited to such particular implementation and that any suitable means for carrying out the various described acts can be employed and are intended to fall within the scope of the hereto appended claims. The following variables and functions are defined for each portion of the source code.","N is an n\u00d73 array, wherein each row of N contains three numbers indicating identification of a newsgroup, number of posts to each newsgroup over a certain period of time, and number of authors who have posted a message to such newsgroup over such period of time.","E is an m\u00d73 array. Each row of E contains identification of two newsgroups and number of cross-posts there between.","id and name are two n\u00d71 arrays. Entry i of array id is the identification of a newsgroup, whose name is stored in entry i of array name.","At , newsgroup data is received (e.g., via a data storage device such as a server database, compact disk, DVD, floppy disk, hard drive, etc., by manually entering data, or any other method of retrieving and\/or receiving data). The newsgroup data can include but is not limited to the number of newsgroups, a way to identify each newsgroup, number of posts in each newsgroup, number of cross-posts in each newsgroup, data identifying all newsgroups which contain each cross-post, and number of authors posting to each newsgroup. In the exemplary source code, all necessary data has been previously retrieved and stored in arrays N, E, id, and name.","At  the newsgroup data retrieved is filtered to exclude newsgroups and corresponding data that contain too few posts, posts from too few authors, or are irrelevant to the user given a particular user's identity, state, and context. Inference techniques can be utilized to determine whether newsgroup data received is relevant given a particular user. Furthermore, edges are removed if edge weight does not meet a certain threshold (e.g., if there are not enough cross-posts between two newsgroups, corresponding edges connecting vertices representing such two newsgroups are eliminated). It is to be understood that although the exemplary code filters newsgroups and eliminates edges adjacently, the present invention can be modified to filter undesirable newsgroups prior to reception of data and to pare insufficient edges after creation of a weighted graph. In the exemplary code in accordance with one aspect of the present invention, the newsgroups are filtered which contain less than 100 posts over a period of one year, and edges between vertices are pared when less than five cross-posts are shared between corresponding news groups over a period of one year.",{"@attributes":{"id":"p-0064","num":"0063"},"tables":{"@attributes":{"id":"TABLE-US-00001","num":"00001"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"thead":{"row":{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"\u2003[numcomp, compsize, comp, giantcomp, A] = preproc(N, E);"},{"entry":"\u2003[cluster, rep, father] = findclusters(A);"},{"entry":"\u2003[cluster] = postproc(A, cluster);"},{"entry":"\u2003writeclusters(A, cluster, giantcomp, N, id, name, \u2018clusters.txt\u2019);"},{"entry":"\u2003function [numcomp, compsize, comp, giantcomp, A] = preproc(N, E)"},{"entry":"\u2003minposts = 100;"},{"entry":"\u2003minxpost = 5;"},{"entry":"\u2003n = max(N(:,1));"},{"entry":"\u2003E = E(find(E(:,3)>minxpost),:);"},{"entry":"\u2003E = sortrows(E,1);"},{"entry":"\u2003a = zeros(size(E,1),1);"},{"entry":"\u2003deg = zeros(n,1);"},{"entry":"\u2003a(1) = 1;"},{"entry":"\u2003for i = 2:size(E,1),"},{"entry":"\u2003\u2003if (E(i,1) == E(i\u22121,1)),"},{"entry":"\u2003\u2003\u2003a(i) =a(i\u22121) + 1;"},{"entry":"\u2003\u2003else"},{"entry":"\u2003\u2003\u2003a(i) = 1;"},{"entry":"\u2003\u2003\u2003deg(E(i\u22121,1)) = a(i\u22121);"},{"entry":"\u2003\u2003end;"},{"entry":"\u2003end;"},{"entry":"\u2003deg(E(size(E,1),1)) = a(size(E,1));"},{"entry":"\u2003AdjList = sparse(E(:,1),a,E(:,2));"},{"entry":"\u2003ImportantNodes = N(find(N(:,2)>minposts),1);"},{"entry":"\u2003isimportant = zeros(n,1);"},{"entry":"\u2003isimportant(ImportantNodes) = 1;"},{"entry":"\u2003visited = zeros(n,1);"},{"entry":"\u2003numcomp = 0;"},{"entry":"\u2003for ii=1:size(ImportantNodes,1),"},{"entry":"\u2003\u2003i = ImportantNodes(ii);"},{"entry":"\u2003\u2003if (deg(i) > 0 & visited(i) == 0)"},{"entry":"\u2003\u2003\u2003count = 1;"},{"entry":"\u2003\u2003\u2003clear(\u2018current\u2019);"},{"entry":"\u2003\u2003\u2003current(1) = i;"},{"entry":"\u2003\u2003\u2003visited(i) = 1;"},{"entry":"\u2003\u2003\u2003ptr = 1;"},{"entry":"\u2003\u2003\u2003while (ptr <= count)"},{"entry":"\u2003\u2003\u2003\u2003u = current(ptr);"},{"entry":"\u2003\u2003\u2003\u2003for j=1:deg(u),"},{"entry":"\u2003\u2003\u2003\u2003\u2002if (visited(AdjList(u,j)) == 0 &isimportant(AdjList(u,j)) == 1)"},{"entry":"\u2003\u2003\u2003\u2003\u2003count = count + 1;"},{"entry":"\u2003\u2003\u2003\u2003\u2003current(count) = AdjList(u,j);"},{"entry":"\u2003\u2003\u2003\u2003\u2003visited(AdjList(u,j)) = 1;"},{"entry":"\u2003\u2003\u2003\u2003end;"},{"entry":"\u2003\u2003\u2003\u2002end;"},{"entry":"\u2003\u2003\u2003ptr = ptr + 1;"},{"entry":"\u2003\u2003end;"},{"entry":"\u2003\u2003if (count > size(ImportantNodes,1)\/2)"},{"entry":"\u2003\u2003\u2003giantcomp = current;"},{"entry":"\u2003\u2003else"},{"entry":"\u2003\u2003\u2003numcomp = numcomp + 1;"},{"entry":"\u2003\u2003\u2003compsize(numcomp,1) = count;"},{"entry":"\u2003\u2003\u2003comp(numcomp,1:count) = current(1:count);"},{"entry":"\u2003\u2003end;"},{"entry":"\u2003end;"},{"entry":"end;"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}]}}}}},"At  a weighted graph is created, with newsgroups represented as vertices and cross-posts represented as edges. Weights of edges connecting vertices are indicative of the number of cross-posts between newsgroups that such vertices represent. Moreover, a weighted graph can include weighted vertices, wherein such vertex weights indicate the number of postings within a newsgroup (e.g., newsgroups with several hundred postings will be represented by larger vertices when compared to vertices representing newsgroups with fewer postings). The source code in accordance with one aspect of the present invention simulates generation of a graph by constructing an adjacency matrix of the graph, thus indicating the weight of edges between all vertices.","A1=sparse(E(:,1), E(:,2), E(:,3));","A=A1 (giantcomp,giantcomp);","Then at  a weighted graph is recursively segmented into clusters of desirable size.",{"@attributes":{"id":"p-0069","num":"0068"},"tables":{"@attributes":{"id":"TABLE-US-00002","num":"00002"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"thead":{"row":{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"function [S1, S2, value, rep] = findcut(A, v2)"]},{"entry":[{},"L = 100;"]},{"entry":[{},"L2 = 50;"]},{"entry":[{},"n = size(A,1);"]},{"entry":[{},"if n == 1,"]},{"entry":[{},"\u2003value = Inf;"]},{"entry":[{},"\u2003rep = 1;"]},{"entry":[{},"\u2003return;"]},{"entry":[{},"end;"]},{"entry":[{},"rowsum = sum(A,2);"]},{"entry":[{},"total = full(sum(rowsum));"]},{"entry":[{},"S1 = find(rowsum==0);"]},{"entry":[{},"if size(S1(:),1) > 0,"]},{"entry":[{},"\u2003value = 0;"]},{"entry":[{},"\u2003S2 = find(rowsum~=0);"]},{"entry":[{},"\u2003if size(S2(:),1)==0,"]},{"entry":[{},"\u2003\u2003rowsum(1)=1;"]},{"entry":[{},"\u2003\u2003S1 = find(rowsum==0);"]},{"entry":[{},"\u2003\u2003S2 = find(rowsum~=0);"]},{"entry":[{},"\u2003end;"]},{"entry":[{},"\u2003rep = S2(1);"]},{"entry":[{},"\u2003return;"]},{"entry":[{},"end;"]},{"entry":[{},"if nargin < 2,"]},{"entry":[{},"\u2003D = diag(sum(A));"]},{"entry":[{},"\u2003[V, lambda] = eigs(D.{circumflex over (\u2009)}(\u22120.5)*A*D.{circumflex over (\u2009)}(\u22120.5), 2, \u2018lr\u2019);"]},{"entry":[{},"\u2003if (lambda(1,1) < lambda(2,2)),"]},{"entry":[{},"\u2003\u2003v1 = V(:, 2);"]},{"entry":[{},"\u2003\u2003v2 = V(:, 1);"]},{"entry":[{},"\u2003else"]},{"entry":[{},"\u2003\u2003v2 = V(:, 2);"]},{"entry":[{},"\u2003\u2003v1 = V(:, 1);"]},{"entry":[{},"\u2003end;"]},{"entry":[{},"\u2003v2 = D.{circumflex over (\u2009)}(\u22120.5) * v2;"]},{"entry":[{},"\u2003if (sum(v2) < 0), v2 = \u2212v2; end;"]},{"entry":[{},"\u2003if (sum(v1) < 0), v1 = \u2212v1; end;"]},{"entry":[{},"\u2003[temp rep] = max(v1);"]},{"entry":[{},"end;"]},{"entry":[{},"maxv = max(v2); minv = min(v2);"]},{"entry":[{},"step = (maxv \u2212 minv) \/ L;"]},{"entry":[{},"ratio = zeros(0, 2);"]},{"entry":[{},"last = 0;"]},{"entry":[{},"for i = 0:L\u22121,"]},{"entry":[{},"\u2003S1 = find(v2 <= minv + step*i);"]},{"entry":[{},"\u2003if size(S1(:),1) > last,"]},{"entry":[{},"\u2003\u2003S2 = find(v2 > minv + step*i);"]},{"entry":[{},"\u2003\u2003aS = sum(rowsum(S1));"]},{"entry":[{},"\u2003\u2003cut = full(aS\u2212sum(sum(A(S1, S1))));"]},{"entry":[{},"\u2003\u2003if cut == 0,"]},{"entry":[{},"\u2003\u2003\u2003Mcut = 0;"]},{"entry":[{},"\u2003\u2003else"]},{"entry":[{},"\u2003\u2003\u2003WS = (aS \u2212 cut) \/ 2;"]},{"entry":[{},"\u2003\u2003\u2003WCS = (total \u2212 aS \u2212 cut) \/ 2;"]},{"entry":[{},"\u2003\u2003\u2003Mcut = cut\/WS + cut\/WCS;"]},{"entry":[{},"\u2003\u2003end;"]},{"entry":[{},"\u2003\u2003ratio(end+1,:) = [minv + step*i, Mcut];"]},{"entry":[{},"\u2003\u2003last = size(S1(:),1);"]},{"entry":[{},"\u2003end;"]},{"entry":[{},"end;"]},{"entry":[{},"[value i] = min(ratio(:,2));"]},{"entry":[{},"[T I] = sort(v2);"]},{"entry":[{},"j = max(find(T <= ratio(i,1)));"]},{"entry":[{},"ratio = zeros(0,2);"]},{"entry":[{},"for i = max(1,j\u2212L2):min(n\u22121,j+L2),"]},{"entry":[{},"\u2003S1 = I(1:i);"]},{"entry":[{},"\u2003aS = sum(rowsum(S1));"]},{"entry":[{},"\u2003cut = full(aS\u2212sum(sum(A(S1, S1))));"]},{"entry":[{},"\u2003if cut == 0,"]},{"entry":[{},"\u2003\u2003Mcut = 0;"]},{"entry":[{},"\u2003else"]},{"entry":[{},"\u2003\u2003WS = (aS \u2212 cut) \/ 2;"]},{"entry":[{},"\u2003\u2003WCS = (total \u2212 aS \u2212 cut) \/ 2;"]},{"entry":[{},"\u2003\u2003Mcut = cut\/WS + cut\/WCS;"]},{"entry":[{},"\u2003end;"]},{"entry":[{},"\u2003ratio(end+1,:) = [i, Mcut];"]},{"entry":[{},"end;"]},{"entry":[{},"[value i] = min(ratio(:,2));"]},{"entry":[{},"S1 = I(1:ratio(i,1)); S2 = I(ratio(i,1)+1:n);"]},{"entry":[{},"function [cluster, rep, father] = findclusters(A)"]},{"entry":[{},"cluster(1:size(A,1)) = 1;"]},{"entry":[{},"numcluster = 1;"]},{"entry":[{},"next = 1;"]},{"entry":[{},"father = zeros(5000,1);"]},{"entry":[{},"rep = zeros(5000,1);"]},{"entry":[{},"while (next <= numcluster),"]},{"entry":[{},"\u2003CurrentCluster = find(cluster == next);"]},{"entry":[{},"\u2003if size(CurrentCluster(:),1) >= 2,"]},{"entry":[{},"\u2003[S1, S2, mcut(next), repindex] = findcut(A(CurrentCluster,"]},{"entry":[{},"\u2003CurrentCluster));"]},{"entry":[{},"\u2003\u2003rep(next) = CurrentCluster(repindex);"]},{"entry":[{},"\u2003\u2003threshold = (size(CurrentCluster(:),1){circumflex over (\u2009)}0.5)\/30;"]},{"entry":[{},"\u2003\u2003if mcut(next) < threshold,"]},{"entry":[{},"\u2003\u2003\u2003cluster(CurrentCluster(S1)) = numcluster + 1;"]},{"entry":[{},"\u2003\u2003\u2003cluster(CurrentCluster(S2)) = numcluster + 2;"]},{"entry":[{},"\u2003\u2003\u2003father(numcluster + 1) = next;"]},{"entry":[{},"\u2003\u2003\u2003father(numcluster + 2) = next;"]},{"entry":[{},"\u2003\u2003\u2003numcluster = numcluster + 2;"]},{"entry":[{},"\u2003\u2003end;"]},{"entry":[{},"\u2003end;"]},{"entry":[{},"\u2003next = next + 1;"]},{"entry":[{},"end;"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}]}}}}},"At , two or more resulting clusters after segmentation are merged if such clusters are substantially related to one another. Relatedness of two or more clusters can be determined by reviewing weighted edges between two clusters. Merging two separate clusters when summation of weights of edges between a first cluster and a second cluster is greater than half of the summation of weights of edges adjacent to such first cluster is one exemplary manner facilitating determination of instances that merging two clusters is appropriate. The method can merge two clusters A and B when",{"@attributes":{"id":"p-0071","num":"0070"},"maths":{"@attributes":{"id":"MATH-US-00001","num":"00001"},"math":{"@attributes":{"overflow":"scroll"},"mrow":{"mrow":{"mrow":[{"mi":"\u03b1","mo":"\u2061","mrow":{"mo":["(",")"],"mrow":{"mi":["A","B"],"mo":","}}},{"mfrac":{"mn":["1","2"]},"mo":"\u2062","msub":{"mi":["\u03b1","A"]}}],"mo":"\u2265"},"mo":","}}},"br":{},"sub":["i\u03b5A","j\u03b5B","ij ","A","i\u03b5A","j","ij ","ij "],"b":"306"},{"@attributes":{"id":"p-0072","num":"0071"},"tables":{"@attributes":{"id":"TABLE-US-00003","num":"00003"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"35pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"182pt","align":"left"}}],"thead":{"row":{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"\u2003function [newcluster] = postproc(A, cluster)"]},{"entry":[{},"\u2003[R, I] = reducegraph(A, cluster);"]},{"entry":[{},"\u2003n = size(R,1); % n = number of clusters"]},{"entry":[{},"\u2003change = 1;"]},{"entry":[{},"\u2003while (change),"]},{"entry":[{},"\u2003change = 0;"]},{"entry":[{},"\u2003for i = 1:n,"]},{"entry":[{},"\u2003\u2003[m, j] = max([R(i, 1:i\u22121) R(i, i+1:n)]);"]},{"entry":[{},"\u2003\u2003if (m > sum(R(i,:))\/2)"]},{"entry":[{},"\u2003\u2003\u2003R(j, :) = R(j, :) + R(i, :);"]},{"entry":[{},"\u2003\u2003\u2003R(:, j) = R(:, j) + R(:, i);"]},{"entry":[{},"\u2003\u2003\u2003R(i, :) = 0;"]},{"entry":[{},"\u2003\u2003\u2003R(:, i) = 0;"]},{"entry":[{},"\u2003\u2003\u2003cluster(find(cluster==I(i))) = I(j);"]},{"entry":[{},"\u2003\u2003\u2003change = 1;"]},{"entry":[{},"\u2003\u2003end;"]},{"entry":[{},"\u2003end;"]},{"entry":[{},"end;"]},{"entry":[{},"newcluster = cluster;"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}]}}}}},"Then, at  a weighted graph or substantially equivalent results are output to a user or relayed to a data store. Graphical results can be output to a monitor, printer, disk, hard drive, etc. Furthermore a resulting weighted cluster graph can be output to a user graphically or textually. In an instance of a search engine utilizing method , output newsgroup clusters can be displayed in hyperlink format, thus directing a user to a selected newsgroup or cluster of newsgroups. The method can store output results in a file on a hard drive, floppy disk, DVD, such as for example via the code below. Alternatively, the method can use the results as input to another processing component, such as a search engine, newsgroup browser, email program, etc.",{"@attributes":{"id":"p-0074","num":"0073"},"tables":{"@attributes":{"id":"TABLE-US-00004","num":"00004"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"thead":{"row":{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"function writeclusters(A, cluster, giantcomp, N, id, name, filename)"},{"entry":"rowsum = sum(A,2);"},{"entry":"total = sum(rowsum);"},{"entry":"clustersize = histc(cluster, 1:max(cluster));"},{"entry":"if nargin < 6, filename = \u2018clusters.txt\u2019; end;"},{"entry":"fid = fopen(filename,\u2018w\u2019);"},{"entry":"for i = 1:max(cluster), i,"},{"entry":"\u2003S = find(cluster == i);"},{"entry":"\u2003clsize = size(S(:),1);"},{"entry":"\u2003if clsize > 0,"},{"entry":"\u2003\u2003aS = sum(rowsum(S));"},{"entry":"\u2003\u2003cut = aS\u2212sum(sum(A(S, S)));"},{"entry":"\u2003\u2003ratio = full(cut \/ min(aS, total \u2212 aS));"},{"entry":"\u2003\u2003[S1, S2, mcut, rep] = findcut(A(S,S));"},{"entry":"\u2003\u2003fprintf(fid, \u2018Cluster #%d:\\n\u2019, i);"},{"entry":"\u2003\u2003fprintf(fid, \u2018 Size = %d\\n\u2019, clsize);"},{"entry":"\u2003\u2003fprintf(fid, \u2018 Representative = %s\\n\u2019,"},{"entry":"\u2003\u2003char(name(find(id == giantcomp(S(rep))))));"},{"entry":"\u2003fprintf(fid, \u2018 Ratio of the cut defined by this cluster = %f\\n\u2019, ratio);"},{"entry":"\u2003\u2003fprintf(fid, \u2018 M-cut value of the best cut found inside this"},{"entry":"\u2003\u2003cluster = %f\\n\\n\u2019, mcut);"},{"entry":"\u2003\u2003for j=1:clsize,"},{"entry":"\u2003\u2003\u2003u = S(j);"},{"entry":"\u2003\u2003\u2003uid = giantcomp(u);"},{"entry":"\u2003\u2003\u2003nm = char(name(find(id == uid)));"},{"entry":"\u2003\u2003\u2003k = find(N(:,1) == uid);"},{"entry":"\u2003\u2003\u2003fprintf(fid, \u2018\\t %s (%d posts, %d authors)\\n\u2019, nm, N(k,2), N(k,3));"},{"entry":"\u2003\u2003end;"},{"entry":"\u2003\u2003fprintf(fid, \u2018\\n\u2019);"},{"entry":"\u2003end;"},{"entry":"end;"},{"entry":"fclose(fid);"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}]}}}}},"Now turning to , a method  of clustering news group data in accordance with one aspect of the present invention is illustrated. At , data regarding newsgroups is received\u2014the data can be received via any suitable manner in accordance with the subject invention. At , such newsgroup data is filtered and pared. A subset of newsgroups are removed from the data received at  in instances where such newsgroups do not contain sufficient posts. The filtering and\/or paring can employ artificial intelligence-based techniques, for example, to determine that certain newsgroups are not relevant to a particular user given a user state, context and other extrinsic information. Cross-posts are removed from newsgroup data when insufficient cross-posting exists between two or more newsgroups. While  indicates that newsgroup data is pared prior to generation of a weighted graph, it is understood that paring newsgroup data after a weighted graph is generated is within the scope of the invention. Newsgroup data can be pared after a weighted graph has been generated by simply removing edges with insufficient weight. Filtering and paring newsgroup data will result in a reduced data set to be graphed and segmented.","At  a weighted graph is generated\u2014it is to be appreciated that formatting data in such a manner to substantially create a weighted graph is sufficient. For example, one could choose to create an adjacency matrix and still fall within the scope of the invention. At , size of a generated weighted graph is compared with a threshold. If the size of a weighted graph is greater than such threshold, the weighted graph can be subjected to further filtering and paring to facilitate reduction of size of such weighted graph to reach a suitable size. It should be noted that filtering and paring an extensive amount of newsgroup data could possibly bias remaining data during weighted graph segmentation. Moreover, the present invention can be employed to determine whether newsgroup data is to be additionally filtered and pared prior to generation of a weighted graph. For example, directly after initially filtering newsgroup data, the size of remaining newsgroup data following filtering can be compared with a threshold. If the size of the remaining subset of newsgroup data is greater than such threshold, more filtering can be done prior to generation of a weighted graph.","At , a weighted graph is recursively segmented into clusters of suitable size. Segmenting a weighted graph is discussed in greater detail infra. At , clusters created via segmentation are reviewed to determine whether merging two cluster would be beneficial. At , remaining clusters are reviewed to determine if cluster size and quality are acceptable. If one or more clusters are not of a sufficient size, they can be merged into another cluster with which they have substantial relation based upon the number of cross-postings between such two clusters. At , results of a weighted graph or substantial equivalent thereof are output.","Turning now to , an exemplary weighted cluster graph  is illustrated, wherein such graph has been segmented by a segmenting component  into clusters of related newsgroups. The weighted cluster graph  is divided into segments  and  upon determination by the segmenting component  that optimal segmentation occurs between vertices  and . Clustering facilitates providing for more granular and comprehensive understanding of relatedness between various newsgroups. For example, the above clustering illustrates that newsgroups residing in cluster  are not substantially related to newsgroups residing in cluster . Such understanding of the relatedness of the various newsgroups was not readily apparent prior to the segmentation.","Regarding segmentation of a weighted graph (for example, exemplary weighted cluster graph ), such graphs can ideally be partitioned by segmenting between vertices to substantially minimize edges between clusters while concurrently creating clusters of desirable size. Defining different tradeoffs between these two objectives can result in different optimization problems. In accordance with one particular aspect of the present invention, clusters of substantially equal size (e.g., clusters comprising an approximately equal number of newsgroups) should result from partitioning a weighted graph. For sake of brevity, the following algorithm functions are defined to partition each segment into two new segments, S and . It is to be understood, however, that such functions can be generalized to provide for segmentation resulting in creation of more than two segments.","Several traditional objective functions exist for determining where to segment between vertices in a weighted graph. A few examples are:",{"@attributes":{"id":"p-0081","num":"0080"},"maths":{"@attributes":{"id":"MATH-US-00002","num":"00002"},"math":{"@attributes":{"overflow":"scroll"},"mrow":{"mrow":{"mrow":[{"mi":"Rcut","mo":"=","mrow":{"mfrac":[{"mi":"cut","mrow":{"mo":["\uf603","\uf604"],"mi":"S"}},{"mi":"cut","mrow":{"mo":["\uf603","\uf604"],"mover":{"mi":["S","_"]}}}],"mo":"+"}},{"mi":"Ncut","mo":"=","mrow":{"mfrac":[{"mi":"cut","msub":{"mi":["\u03b1","S"]}},{"mi":"cut","msub":{"mi":"\u03b1","mover":{"mi":["S","_"]}}}],"mo":"+"}},{"mi":"Mcut","mo":"=","mrow":{"mfrac":[{"mi":"cut","msub":{"mi":["W","S"]}},{"mi":"cut","msub":{"mi":"W","mover":{"mi":["S","_"]}}}],"mo":"+"}}],"mo":[";","\u2062",";","\u2062"],"mstyle":[{"mspace":{"@attributes":{"width":"0.8em","height":"0.8ex"}}},{"mspace":{"@attributes":{"width":"0.8em","height":"0.8ex"}}}]},"mo":","}}},"br":{},"sub":["ij","i\u03b5S,j\u03b5 ","ij ","S","i,j\u03b5S","ij","S","i\u03b5S","j","ij","i\u03b5S","i","i","j","ij "],"o":"S"},"Spectral analysis is a method mainly based on analysis of eigenvectors of a normalization of the adjacency matrix of the graph. Determining a Laplacian of a matrix is one common method for normalizing such matrix (e.g., the Laplacian L=D\u2212A, where D is a diagonal matrix with d=\u03a3\u03b1). A Fiedler vector v of adjacency matrix A is an eigenvector corresponding to a second smallest eigenvalue of the Laplacian L, which can be determined using equation Lv=\u03bbv, where \u03bb is a second smallest eigenvalue of L. In practice, however, determining a vector corresponding to a second smallest solution of a generalized eigenvalue equation Lv=\u03bbDv performs better than determining the Fiedler vector. This vector v is equal to the eigenvector corresponding to the second largest eigenvalue of DADmultiplied to D.","Prior to performing any segmentation, a segmentation value s is defined and vertices of a weighted graph are divided into at least two segments based upon whether or not values assigned to each segment by vector v are greater than the segmentation value s. There are several different manners to define the segmenting value s, including equating s to the median of values assigned to the vertices by v; defining s as being 0; assigning s as the value in the larges gap in the sorted list of Fiedler vector values; and\/or utilizing one of the objective functions to find a value of s.","In order to partition a weighted graph into more than two clusters, the segmenting component  (shown in ) segments S and  recursively. The segmenting component  can employ an algorithm facilitating segmentation between two or more vertices if the value of the proposed cut is above segmentation value s.","Now turning briefly to , a method  which can be utilized by the segmenting component  in accordance with one aspect of the present invention is illustrated. At , a vector v, which defines the value of a partition between two or more vertices, is obtained. Vector v can be obtained by computing an eigenvector corresponding to the second largest eigenvalue of matrix DAD. By multiplying the resulting eigenvector by diagonal matrix D, the solution v of equation Lv=\u03bbDv can be obtained. At , maximum and minimum values of vector v, vand vrespectively, are determined. At , interval [v, v] is divided into Q smaller intervals. Q should be a value facilitating attainment of a desired accuracy and reliability in determining an appropriate segmentation of a weighted graph, while not being so large as to require unreasonable computation.","At , a segmentation position on the weighted graph is proposed. The minimum Mcut ratio of the Q intervals can be determined by calculating an Mcut ratio at endpoints of each of the Q intervals. After the minimum Mcut value is found from such Q intervals, then the Mcut is calculated at P values above and below the endpoint of the minimizing interval. P should be a value facilitating attainment of a desired accuracy and reliability in determining an appropriate segmentation of a weighted graph, while not being so large as to require unreasonable computation. Of these 2P eigenvector entries, the eigenvector entry where the Mcut ratio is lowest will be the proposed location of segmentation on the graph.","At , the Mcut ratio of the proposed segmenting position is compared to a pre-defined threshold t. If the Mcut ratio is less than t, at  the weighted graph is segmented at the proposed segmenting position, and acts - are recursively applied to both created segments. If the Mcut ratio is greater than threshold t, no segmentation occurs, and at  the algorithm determines whether any segments exist on which acts - have not been executed. If such acts - have not been executed on a segment, acts - are again applied to such segment. If all existing segments are of a desired size and\/or quality, method  completes at .","The threshold t should be chosen to create final clusters of a desired size and\/or quality, wherein quality is determined by some measure of relatedness within each segment (e.g., a sufficient degree of cross-posting exists between newsgroups within each cluster). In one particular aspect of the present invention, t can be defined as an increasing function of the number of nodes in a segment on which method  is currently being executed. For example,",{"@attributes":{"id":"p-0089","num":"0088"},"maths":{"@attributes":{"id":"MATH-US-00003","num":"00003"},"math":{"@attributes":{"overflow":"scroll"},"mrow":{"mi":"t","mo":"=","mrow":{"mrow":{"mfrac":{"msqrt":{"mi":"n"},"mn":"30"},"mo":["\u2062","\u2062","\u2062","\u2062"],"mstyle":[{"mspace":{"@attributes":{"width":"0.8em","height":"0.8ex"}}},{"mspace":{"@attributes":{"width":"0.8em","height":"0.8ex"}}}],"mi":["and","t"]},"mo":"=","mfrac":{"mi":"n","mn":"300"}}}}},"br":{},"figref":["FIGS. 7A-C","FIG. 7A"],"b":"730"},{"@attributes":{"id":"p-0090","num":"0089"},"maths":{"@attributes":{"id":"MATH-US-00004","num":"00004"},"math":{"@attributes":{"overflow":"scroll"},"mrow":{"mi":"t","mo":"=","mfrac":{"msqrt":{"mi":"n"},"mn":"30"}}}},"br":{},"figref":["FIG. 7B","FIG. 7C"],"b":["332","334"]},{"@attributes":{"id":"p-0091","num":"0090"},"maths":{"@attributes":{"id":"MATH-US-00005","num":"00005"},"math":{"@attributes":{"overflow":"scroll"},"mrow":{"mi":"t","mo":"=","mrow":{"mfrac":{"mi":"n","mn":"300"},"mo":"."}}}}},"Returning to , using a recursive spectral clustering technique such as that described in connection with method  provides for three distinct advantages over other spectral clustering methods, wherein such methods immediately separate a group of vertices into a predefined number of clusters. First, if a resulting cluster size is too large, clusters can be further partitioned without executing an algorithm at least a second time over an entire data set. Second, a cluster of insufficient size can be merged with other clusters without requiring an algorithm to be performed over an entire data set repeatedly. Finally, some measure of the quality of each cluster (e.g., a sufficient degree of cross-posting between newsgroups within each cluster) can be reviewed, and clusters can be partitioned or merged without requiring performance of an algorithm over a data set numerous times. In theory, if cluster A is segmented into clusters B and C, then the quality of clusters B and C should be greater than the quality of cluster A. However, because method  employs an approximation algorithm, cluster A can possibly possess greater quality than clusters B and C. The recursive spectral clustering method  can be utilized to output the quality of each cluster to data store  (), and such output data can later be employed to facilitate merging clusters B and C if their respective quality is less than original cluster A's quality.","Turning briefly to , exemplary results of method  on a large number of newsgroups is displayed. Turning first to , an exemplary adjacency matrix  depicting tens-of-thousands of newsgroups is illustrated. As is readily apparent from this figure, confusion regarding relatedness between newsgroups will likely result prior to clustering. Turning now to , an adjacency matrix  depicts results of clustering thousands of newsgroups into several different clusters. The adjacency matrix  is re-arranged following clustering to associate newsgroups with a high-level of cross-posting amongst one another. One execution of method  () resulted in approximately 76% of total cross-posts occurring between newsgroups residing in the same cluster. As displayed in , newsgroups re-locate in adjacency matrix  to associate themselves with other newsgroups with which they are substantially related.","Regarding , a cluster graphing system  in accordance with another aspect of the present invention is displayed. The system  comprises a data reception component , a filtering component , a paring component , a graphing engine , and a data store . Filtering component  is employed to facilitate reduction of computation required to create a weighted cluster graph . The filtering component  reduces size of a newsgroup data set by removing certain newsgroups that do not meet a predefined criteria prior to the graphing engine  constructing the weighted cluster graph . For example, a minimum threshold can be defined wherein newsgroups not containing a number of posts greater than such minimum threshold are effectively excluded from the data set utilized by the graphing engine  to generate the weighted cluster graph. Turning briefly to , an exemplary graph  displaying a fraction of newsgroups with at most x postings over a given period of time as a function of x is illustrated. The filtering component  can be utilized to facilitate reduction in size of a data set by eliminating newsgroups not containing a threshold number of postings. For example, if  is selected as the threshold number of postings to a newsgroup over a given period of time, the filtering component  can be employed to eliminate approximately 62% of newsgroups contained in the data set contemplated by graph .","Returning now to , the filtering component  can furthermore employ various inference schemes and\/or techniques in connection with excluding undesirable newsgroups from a data set contemplated by graphing engine . For example, the filtering component  can employ explicitly trained as well as implicitly trained classifiers in connection with inferring desired data to be delivered to and\/or relayed from the data reception component , the paring component , the graphing engine , and\/or the data store . The system  can be implicitly trained by watching a user over time to learn which types of newsgroups the user likes to access and thus automatically filter undesirable newsgroups based upon the training. For instance, if a user frequently desires to access news and newsgroups regarding travel, and rarely desires access to news and newsgroups regarding sports, sports newsgroups can be filtered prior to being delivered to and\/or relayed from the data reception component , the paring component , the graphing engine , and\/or the data store . The filtering component  can employ a utility-based analysis wherein the cost of filtering desirable newsgroups can be factored against the benefits of filtering undesirable newsgroups in connection with a particular user and computing context\/state.","To facilitate further reduction of size in a data set, the paring component  can eliminate cross-posts between newsgroups (and thus edges between vertices) when the number of cross-posts between two or more newsgroups is below a pre-defined threshold. Alternatively, the threshold can vary with the size of a data set contained in data reception component  by defining the threshold as an increasing function of number(s) of newsgroups contained in the data store . The paring component  can further be employed to eliminate newsgroups that do not contain a sufficient amount of cross-posting with other newsgroups. Thus, size of a cluster graph can be effectively reduced. Moreover, when the filter component  and\/or the paring component  are used in conjunction with a segmenting component (not shown), the computational cost of segmenting a weighted graph into small clusters can be greatly reduced.","Turning now to , an exemplary graph  created through use of a filtering component  and paring component  are displayed. The filtering component  effectively eliminates from a data set newsgroups with insufficient postings or irrelevant newsgroups, and the paring component  eliminates from a data set cross-posts between newsgroups, wherein an insufficient number of cross-posts exist between two or more newsgroups. Furthermore, the paring component  excludes newsgroups not containing a substantial number of cross-posts from the data set. Vertices (newsgroups) and edges (cross-posts) removed from the set of data prior to construction of the graph  are illustrated as dashed edges and vertices. Vertices  and  are shown as being excluded from a data set by the filtering component . Thereby the edges between the vertices  and , and between vertices  and  respectively, are removed from the data set.","The paring component  removed from the data set edges between vertices  and ,  and , and  and  respectively. An insubstantial number of cross-posts between a plurality of newsgroups is indicative of a minimal degree of relatedness between such newsgroups, which in turn insinuates that elimination of edges representing such cross-posts is desirable.","Turning now to , a cluster graphing system  is illustrated comprising a data reception component , a graphing engine , a segmenting component , a post-processing component , and a data store . The post-processing component  facilitates merging of clusters segmented by the segmenting component . The data reception component  receives data relating to newsgroups, and transfers such data to the data store . At least a subset of data from the data reception component  and\/or data store  is relayed to the graphing engine , which facilitates creation of a weighted graph . The segmenting component is employed to segment the weighted graph  into clusters of highly related newsgroups. The post-processing component  facilitates merging of two or more clusters if upon review such two or more clusters are substantially related. Defining a threshold value to determine whether or not two or more clusters are substantially related, wherein weights of edges between clusters is greater than such threshold, is one method that can be employed by the post processing component  for merging two or more clusters. Merging a first cluster into a second cluster if summation of weights of edges between such two clusters is more than half of a summation of weights of edges adjacent to such first cluster is one manner of determining an appropriate instance for merging two clusters. The previous method, written mathematically, provides for merging of two clusters A and B if",{"@attributes":{"id":"p-0100","num":"0099"},"maths":{"@attributes":{"id":"MATH-US-00006","num":"00006"},"math":{"@attributes":{"overflow":"scroll"},"mrow":{"mrow":{"mrow":[{"mi":"\u03b1","mo":"\u2061","mrow":{"mo":["(",")"],"mrow":{"mi":["A","B"],"mo":","}}},{"mfrac":{"mn":["1","2"]},"mo":"\u2062","msub":{"mi":["\u03b1","A"]}}],"mo":"\u2265"},"mo":","}}},"br":{},"sub":["i\u03b5A","j\u03b5B","ij ","A","i\u03b5A","j","ij "],"b":"1208"},"Turning now to , an exemplary weighted cluster graph  is displayed which illustrates a cluster graph  before and after determination by a post-processing component  of which, if any, clusters should be merged into a single cluster. A segmenting component  employed to partition a weighted graph previously segmented such graph into clusters , , and  based upon a recursive segmentation algorithm. The post-processing component  can be employed to review clusters , , and  and determine that clusters  and  are sufficiently related thereby to make merging clusters  and  into a single cluster  desirable. Thus, the final weighted cluster graph  contains only two clusters,  and  respectively.","Turning now to , a detailed weighted graph  is illustrated as data is removed from a data set to decrease size of the resulting weighted graph. Turning first to , a weighted graph  of newsgroups and cross-posts is illustrated, wherein newsgroups are represented by vertices  and cross-posts are represented by edges . Weights of the edges  between the vertices  are indicative of the number of cross-posts between newsgroups. While not utilized in these figures, size of the vertices  may indicate the number of postings within a newsgroup (e.g., as number of postings within newsgroups increase, size of vertices representing such newsgroups increases). Regarding , the exemplary weighted graph  is displayed wherein a subset of data defining weighted graph  has been excluded. Specifically, vertices , , and  have been removed from the weighted graph  as newsgroups represented by vertices , , and  do not contain a sufficient number of postings, or alternatively, upon artificial intelligence means determining from user state and context that topics discussed in such newsgroups were undesirable. As vertices , , and  were excluded from the data set, edges ,  and  corresponding to filtered vertices , , and  will also not be excluded from weighted graph .","Now turning to , the exemplary weighted graph  is displayed after a plurality of edges  between vertices  have been removed from exemplary weighted graph . Edges  are removed in instances that insufficient amount of cross-postings exists between two or more newsgroups. Few cross-posts between two newsgroups over a sufficient time period is indicative that such two newsgroups are not related. Therefore to facilitate reduction of graph size and computation cost for segmentation of the weighted graph , edges - respectively have been eliminated from the weighted graph .","Regarding , the exemplary weighted graph  is shown after all vertices not connected by a sufficient number of edges are removed from exemplary weighted graph . Removal of isolated newsgroups is desirable as isolated newsgroups are indicative of inactive newsgroups and\/or newsgroups discussing extremely specific topics. As shown in D, vertices - have been excluded from exemplary weighted graph . Furthermore, edge  located between vertices  and  has been removed from weighted graph . It should be noted that while pre-processing the data (e.g., filtering newsgroups, paring edges, and removing isolated newsgroups) will reduce size of a weighted graph and reduce computation time required for segmentation of such graph, processing a data set prior to segmentation can bias remaining data to be segmented. Therefore any pre-processing should be done with great care.","Turning now to , an exemplary weighted graph  is illustrated. The weighted graph  comprises several vertices , which represent newsgroups, interconnected with one another by weighted edges , which represent cross-posts. Weights of edges  are indicative of the number of cross-posts between newsgroups . A segmentation algorithm is utilized to facilitate determination of where partitioning the weighted graph  minimizes severance of the weighted edges  between vertices . As shown in , a segmenting line  is utilized to depict a segmentation position where optimal segmentation will occur. In order to segment the weighted graph , edges - must be cut, creating two new segments on each side of segmentation line , segments  and  respectively.","Turning to , a segmenting algorithm is run recursively to further partition segment  into smaller segments or clusters. In the exemplary segment , a segmenting algorithm has determined that an appropriate position to partition segment  occurs along segmenting line . Thus, edges - are cut, and segments  and  are created. The algorithm can be run recursively until a desirable final cluster size is attained. For example, a segment containing one thousand vertices would be too large, as a user would not be able to quickly decipher which newsgroups of the thousand are on-point. Furthermore, a segment containing two vertices could be too small, as extremely related newsgroups would be separated into different clusters.","Regarding , an exemplary weighted graph  is displayed. Turning specifically to , the weighted graph  has been previously partitioned into segments  and  by a segmenting algorithm. However, as can be determined by the number and weights of edges - wherein severance was required by a segmenting algorithm, segments  and  are substantially related. Turning now to , a post-processing algorithm merges segments  and  back into a single segment . A post-processing algorithm reviews two or more segments to determine whether they are substantially related. If such two segments are substantially related, a post-processing algorithm facilitates merging of segments  and  (as shown in ) into a single segment  as illustrated by the exemplary merger of .","In order to provide additional context for various aspects of the present invention,  and the following discussion are intended to provide a brief, general description of a suitable operating environment  in which various aspects of the present invention may be implemented. While the invention is described in the general context of computer-executable instructions, such as program modules, executed by one or more computers or other devices, those skilled in the art will recognize that the invention can also be implemented in combination with other program modules and\/or as a combination of hardware and software. Generally, however, program modules include routines, programs, objects, components, data structures, etc. that perform particular tasks or implement particular data types. The operating environment  is only one example of a suitable operating environment and is not intended to suggest any limitation as to the scope of use or functionality of the invention. Other well known computer systems, environments, and\/or configurations that may be suitable for use with the invention include but are not limited to, personal computers, hand-held or laptop devices, multiprocessor systems, microprocessor-based systems, programmable consumer electronics, network PCs, minicomputers, mainframe computers, distributed computing environments that include the above systems or devices, and the like.","With reference to , an exemplary environment  for implementing various aspects of the invention includes a computer . The computer  includes a processing unit , a system memory , and a system bus . The system bus  couples system components including, but not limited to, the system memory  to the processing unit . The processing unit  can be any of various available processors. Dual microprocessors and other multiprocessor architectures also can be employed as the processing unit .","The system bus  can be any of several types of bus structure(s) including the memory bus or memory controller, a peripheral bus or external bus, and\/or a local bus using any variety of available bus architectures including, but not limited to, an 8-bit bus, Industrial Standard Architecture (ISA), Micro-Channel Architecture (MSA), Extended ISA (EISA), Intelligent Drive Electronics (IDE), VESA Local Bus (VLB), Peripheral Component Interconnect (PCI), Universal Serial Bus (USB), Advanced Graphics Port (AGP), Personal Computer Memory Card International Association bus (PCMCIA), and Small Computer Systems Interface (SCSI).","The system memory  includes volatile memory  and nonvolatile memory . The basic input\/output system (BIOS), containing the basic routines to transfer information between elements within the computer , such as during start-up, is stored in nonvolatile memory . By way of illustration, and not limitation, nonvolatile memory  can include read only memory (ROM), programmable ROM (PROM), electrically programmable ROM (EPROM), electrically erasable ROM (EEPROM), or flash memory. Volatile memory  includes random access memory (RAM), which acts as external cache memory. By way of illustration and not limitation, RAM is available in many forms such as synchronous RAM (SRAM), dynamic RAM (DRAM), synchronous DRAM (SDRAM), double data rate SDRAM (DDR SDRAM), enhanced SDRAM (ESDRAM), Synchlink DRAM (SLDRAM), and direct Rambus RAM (DRRAM).","Computer  also includes removable\/nonremovable, volatile\/nonvolatile computer storage media.  illustrates, for example a disk storage . Disk storage  includes, but is not limited to, devices like a magnetic disk drive, floppy disk drive, tape drive, Jaz drive, Zip drive, LS-100 drive, flash memory card, or memory stick. In addition, disk storage  can include storage media separately or in combination with other storage media including, but not limited to, an optical disk drive such as a compact disk ROM device (CD-ROM), CD recordable drive (CD-R Drive), CD rewritable drive (CD-RW Drive) or a digital versatile disk ROM drive (DVD-ROM). To facilitate connection of the disk storage devices  to the system bus , a removable or non-removable interface is typically used such as interface .","It is to be appreciated that  describes software that acts as an intermediary between users and the basic computer resources described in suitable operating environment . Such software includes an operating system . Operating system , which can be stored on disk storage , acts to control and allocate resources of the computer system . System applications  take advantage of the management of resources by operating system  through program modules  and program data  stored either in system memory  or on disk storage . It is to be appreciated that the present invention can be implemented with various operating systems or combinations of operating systems.","A user enters commands or information into the computer  through input device(s) . Input devices  include, but are not limited to, a pointing device such as a mouse, trackball, stylus, touch pad, keyboard, microphone, joystick, game pad, satellite dish, scanner, TV tuner card, digital camera, digital video camera, web camera, and the like. These and other input devices connect to the processing unit  through the system bus  via interface port(s) . Interface port(s)  include, for example, a serial port, a parallel port, a game port, and a universal serial bus (USB). Output device(s)  use some of the same type of ports as input device(s) . Thus, for example, a USB port may be used to provide input to computer , and to output information from computer  to an output device . Output adapter  is provided to illustrate that there are some output devices  like monitors, speakers, and printers among other output devices  that require special adapters. The output adapters  include, by way of illustration and not limitation, video and sound cards that provide a means of connection between the output device  and the system bus . It should be noted that other devices and\/or systems of devices provide both input and output capabilities such as remote computer(s) .","Computer  can operate in a networked environment using logical connections to one or more remote computers, such as remote computer(s) . The remote computer(s)  can be a personal computer, a server, a router, a network PC, a workstation, a microprocessor based appliance, a peer device or other common network node and the like, and typically includes many or all of the elements described relative to computer . For purposes of brevity, only a memory storage device  is illustrated with remote computer(s) . Remote computer(s)  is logically connected to computer  through a network interface  and then physically connected via communication connection . Network interface  encompasses communication networks such as local-area networks (LAN) and wide-area networks (WAN). LAN technologies include Fiber Distributed Data Interface (FDDI), Copper Distributed Data Interface (CDDI), Ethernet\/IEEE 802.3, Token Ring\/IEEE 802.5 and the like. WAN technologies include, but are not limited to, point-to-point links, circuit switching networks like Integrated Services Digital Networks (ISDN) and variations thereon, packet switching networks, and Digital Subscriber Lines (DSL).","Communication connection(s)  refers to the hardware\/software employed to connect the network interface  to the bus . While communication connection  is shown for illustrative clarity inside computer , it can also be external to computer . The hardware\/software necessary for connection to the network interface  includes, for exemplary purposes only, internal and external technologies such as, modems including regular telephone grade modems, cable modems and DSL modems, ISDN adapters, and Ethernet cards. What has been described above includes examples of the present invention. It is, of course, not possible to describe every conceivable combination of components or methodologies for purposes of describing the present invention, but one of ordinary skill in the art may recognize that many further combinations and permutations of the present invention are possible. Accordingly, the present invention is intended to embrace all such alterations, modifications and variations that fall within the spirit and scope of the appended claims. Furthermore, to the extent that the term \u201cincludes\u201d is used in either the detailed description or the claims, such term is intended to be inclusive in a manner similar to the term \u201ccomprising\u201d as \u201ccomprising\u201d is interpreted when employed as a transitional word in a claim."],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"BRIEF DESCRIPTION OF THE DRAWINGS","p":[{"@attributes":{"id":"p-0020","num":"0019"},"figref":"FIG. 1"},{"@attributes":{"id":"p-0021","num":"0020"},"figref":"FIG. 2"},{"@attributes":{"id":"p-0022","num":"0021"},"figref":"FIG. 3"},{"@attributes":{"id":"p-0023","num":"0022"},"figref":"FIG. 4"},{"@attributes":{"id":"p-0024","num":"0023"},"figref":"FIG. 5"},{"@attributes":{"id":"p-0025","num":"0024"},"figref":"FIG. 6"},{"@attributes":{"id":"p-0026","num":"0025"},"figref":"FIGS. 7A-7C"},{"@attributes":{"id":"p-0027","num":"0026"},"figref":"FIG. 8A"},{"@attributes":{"id":"p-0028","num":"0027"},"figref":"FIG. 8B"},{"@attributes":{"id":"p-0029","num":"0028"},"figref":"FIG. 9"},{"@attributes":{"id":"p-0030","num":"0029"},"figref":"FIG. 10"},{"@attributes":{"id":"p-0031","num":"0030"},"figref":"FIG. 11"},{"@attributes":{"id":"p-0032","num":"0031"},"figref":"FIG. 12"},{"@attributes":{"id":"p-0033","num":"0032"},"figref":"FIG. 13"},{"@attributes":{"id":"p-0034","num":"0033"},"figref":"FIG. 14A"},{"@attributes":{"id":"p-0035","num":"0034"},"figref":"FIG. 14B"},{"@attributes":{"id":"p-0036","num":"0035"},"figref":"FIG. 14C"},{"@attributes":{"id":"p-0037","num":"0036"},"figref":"FIG. 14D"},{"@attributes":{"id":"p-0038","num":"0037"},"figref":"FIG. 15A"},{"@attributes":{"id":"p-0039","num":"0038"},"figref":"FIG. 15B"},{"@attributes":{"id":"p-0040","num":"0039"},"figref":"FIG. 16A"},{"@attributes":{"id":"p-0041","num":"0040"},"figref":"FIG. 16B"},{"@attributes":{"id":"p-0042","num":"0041"},"figref":"FIG. 17"}]},"DETDESC":[{},{}]}
