---
title: System, method, and computer program product for managing and analyzing intellectual property (IP) related transactions
abstract: A system, method, and computer program product for processing data are described herein. The system maintains first databases of patents, and second databases of non-patent information of interest to a corporate entity. The system also maintains one or more groups. Each of the groups comprises any number of the patents from the first databases. The system, upon receiving appropriate operator commands, automatically processes the patents in one of the groups in conjunction with non-patent information from the second databases. Accordingly, the system performs patent-centric and group-oriented processing of data. A group can also include any number of non-patent documents. The groups may be product based, person based, corporate entity based, or user-defined. Other types of groups are also covered, such as temporary groups. The processing automatically performed by the system relates to (but is not limited to) patent mapping, document mapping, patent citation (both forward and backward), patent aging, patent bracketing/clustering (both forward and backward), inventor patent count, inventor employment information, patent claim tree analysis, and finance. Other functions and capabilities are also covered, including the ability to utilize hyperbolic trees to visualize data generated by the system, method, and computer program product, and to track, analyze, and report on information related to intellectual property (IP) transactions, including license and related agreements.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=07949728&OS=07949728&RS=07949728
owner: Rose Blush Software LLC
number: 07949728
owner_city: Los Altos
owner_country: US
publication_date: 20060831
---

{"@attributes":{"id":"description"},"RELAPP":[{},{}],"heading":["CROSS REFERENCE TO RELATED APPLICATIONS","BACKGROUND OF THE INVENTION","SUMMARY OF THE INVENTION","DETAILED DESCRIPTION OF THE PREFERRED EMBODIMENTS","Table of Contents","CONCLUSION"],"p":["U.S. application Ser. No. 09\/545,608, filed Apr. 7, 2000 is a continuation-in-part of U.S. application Ser. No. 08\/921,369, filed Aug. 29, 1997, now U.S. Pat. No. 6,339,767, issued Jan. 15, 2002, which is a continuation-in-part of U.S. application Ser. No. 08\/867,392, filed Jun. 2, 1997, now U.S. Pat. No. 5,991,751, issued Nov. 23, 1999, each of which is incorporated herein by reference in its entirety.","U.S. application Ser. No. 09\/545,608, filed Apr. 7, 2000, is a continuation-in-part of U.S. application Ser. No. 09\/138,368, filed Aug. 21, 1998, now abandoned, which is a continuation-in-part of U.S. application Ser. No. 08\/921,369, filed Aug. 29, 1997, now U.S. Pat. No. 6,339,767, issued Jan. 15, 2002, each of which is incorporated herein by reference in its entirety.","U.S. application Ser. No. 09\/545,608, filed Apr. 7, 2000, is a continuation-in-part of U.S. application Ser. No. 09\/260,079, filed Mar. 2, 1999, now abandoned, which is a continuation-in-part of U.S. application Ser. No. 09\/138,368, filed Aug. 21, 1998, now abandoned, which is a continuation-in-part of U.S. application Ser. No. 08\/921,369, filed Aug. 29, 1997, now U.S. Pat. No. 6,339,767, issued Jan. 15, 2002, each of which is incorporated herein by reference in its entirety.","U.S. application Ser. No. 09\/545,608, filed Apr. 7, 2000, is a continuation-in-part of U.S. application Ser. No. 09\/057,557, filed Apr. 9, 1998, now U.S. Pat. No. 6,389,434, issued May 14, 2002, which is a continuation of U.S. application Ser. No. 08\/632,801, filed Apr. 17, 1996, now U.S. Pat. No. 5,806,079, issued Sep. 8, 1998, which is a continuation-in-part of U.S. application Ser. No. 08\/423,676, filed Apr. 18, 1995, now U.S. Pat. No. 5,623,679, issued Apr. 22, 1997, which is continuation-in-part of U.S. application Ser. No. 08\/341,129, filed Nov. 18, 1994, now abandoned, which is a continuation-in-part of U.S. application Ser. No. 08\/155,752, filed Nov. 19, 1993, now U.S. Pat. No. 5,623,681, issued Apr. 22, 1997, each of which is incorporated by reference herein in its entirety.","The present application is related to the following applications and patents, each of which is incorporated herein by reference in its entirety: U.S. application Ser. No. 08\/832,971, filed Apr. 4, 1997, now U.S. Pat. No. 5,809,318, issued Sep. 15, 1998; U.S. application Ser. No. 09\/058,275, filed Apr. 10, 1998, now U.S. Pat. No. 5,950,214, issued Sep. 7, 1999; U.S. application Ser. No. 08\/590,082, filed Jan. 23, 1996, now U.S. Pat. No. 5,754,840, issued May 19, 1998; and U.S. application Ser. No. 08\/662,377, filed Jun. 12, 1996, now U.S. Pat. No. 5,799,325, issued Aug. 25, 1998.","This application is a continuation of U.S. application Ser. No. 11\/178,367, filed Jul. 12, 2005, now U.S. Pat. No. 7,437,471, issued Oct. 14, 2008, which is a continuation of U.S. application Ser. No. 09\/545,608, filed Apr. 7, 2000, now U.S. Pat. No. 6,963,920, issued Nov. 8, 2005, which is a non-provisional of Provisional Application No. 60\/128,405, filed Apr. 8, 1999, each of which is incorporated herein by reference in its entirety.","1. Field of the Invention","The present invention is generally related to tools for data processing, and more particularly related to tools for patent-centric and group-oriented data processing. These tools comprise diverse capabilities for data presentation and processing, including data presentation and processing using hyperbolic trees. The tools include modules to track and process IP related transactions, such as license agreements.","2. Related Art","Patents are becoming more and more important to a business's success, especially in today's global economy. Patents can be viewed as a new type of currency in this global economy because they grant the holder with a right to exclude others from making, using, or selling the patented technology. In some industries, product turnover is fairly rapid. However, core technology, product features, and markets change at a much slower rate. Accordingly, even in fast-moving industries, patents which cover core technology are very valuable at protecting a company's research and development investment for an extended period of time.","Patents are also valuable as revenue generators. In 1993, for example, the revenue generated from patents by U.S. companies was over $60 billion. Fred Warshofsky, , John Wiley & Sons, Inc., New York, 1994. These patent revenue dollars are rising each year.","Patents are further valuable because they collectively represent a vast technological database. Much of this database is only available as issued patents (i.e., it is not released in any other form). According to Larry Kahaner's book, , Simon & Schuster, 1996, \u201cMore than 75 percent of the information contained in U.S. patents is never released anywhere else.\u201d","If corporations searched this database before developing and releasing new products they might be able to avoid costly patent infringement litigation. Often, however, corporations do not conduct such patent searches. One significant reason for this is the difficulty in identifying relevant patents, and the difficulty in analyzing patents. Computerized search tools are becoming available to the public, such as web sites on the Internet, that can be used to conduct patent searches. Many companies and practitioners are reluctant to use such tools, however, due to the concern that their highly sensitive patent searches will not be maintained in confidence when using such tools.","More and more corporations are recognizing the value of patents. The number of patents applied for and issued to U.S. companies is increasing every year, especially in fast moving industries such as computer software and biotechnology. Many international companies have also recognized the value of patents. In fact, foreign companies regularly rank among the leaders in issued U.S. patents.","Of course, not all patents are as valuable to the patent owner or patent licensees as others. Some owned or licensed patents provide little or no value to the corporate entity. These patents become a drain on corporate resources, both in obtaining the patents, paying maintenance fees, and paying license fees. It is difficult for corporations to assess the value of their patents because automated tools for patent analysis do not exist.","Yet, for all the heightened awareness being paid to patents in some quarters, patents remain one of the most underutilized assets in a company's portfolio. This is due, at least in significant part, to the fact that patent analysis, whether for purposes of licensing, infringement, enforcement, freedom to operate, technical research, product development, etc., is a very difficult, tedious, time consuming, and expensive task, particularly when performed with paper copies of patents.","Software providers have been slow in developing software tools for aiding in the patent analysis process. As a result, there are few automated tools for patent analysis currently available. There are software tools available for managing corporate patent prosecution and payment of maintenance fees, such as products from Master Data Corporation. The patent analysis capabilities of these tools are limited. These tools, for example, cannot be used to facilitate the analysis and development of business strategies to increase corporate shareholder value through the strategic and tactical use of patents.","A number of patent searching tools are available, such as the United States Patent and Trademark Office (USPTO) Automated Patent System (APS), and the on-line search services offered by Lexis and Westlaw. Other providers of patent information and patent search tools include Derwent, MicroPatent, Questel, Corporate Intelligence, STN, IFI\/Plenum, The Shadow Patent Office (EDS), IBM, and CAS. These tools are not analysis tools. Instead, they are search tools. These tools enable a user to identify patents that satisfy a specified key word search criteria. In essence, these tools provide the user with the ability to possibly find \u201cthe needle-in-the-haystack.\u201d However, these tools have limited, if any, automated functions to aid a user in analyzing the patents, whether the company's own patents or those of competitors, for the purpose of making tactical and strategic business decisions based on the patents.","SmartPatents Inc. (SPI) of Mountain View, Calif., provides electronic tools for analyzing patents. These tools, collectively called the SmartPatent Workbench, are very useful for analyzing patents. With the SmartPatent Workbench, a user can view the text and image of a patent, conduct text searches in the patent, copy and paste portions of the patent to other documents, build a case of patents, annotate the case and the patents in the case, import and export patents and cases, etc. The SmartPatent Workbench is commercially available from SPI, and is described in a number of publicly available documents, such as U.S. Pat. No. 5,623,679 and U.S. Pat. No. 5,623,681, incorporated by reference herein.","The SmartPatent Workbench is a patent analysis tool. The SmartPatent Workbench is primarily designed to assist a user in working with a single patent or a small collection of patents at a time. However, there are many instances when it would be very beneficial to be able to automatically and simultaneously analyze, correlate, or otherwise process multiple patents.","For example, in some instances it would be beneficial to automatically analyze the inventorship of a collection of patents. More particularly, it would be beneficial to identify the persons who are named most frequently on a collection of patents. It would be very useful if this task could be performed automatically. However, no existing software tools can perform this task automatically.","For the most part, existing patent-related tools can process only the information contained in patents. (It is noted, however, that the SmartPatent Workbench has functions to annotate patents with any information, whether or not patent related, and has additional functions to search within annotations.) These tools do not have functions for correlating, analyzing, and otherwise processing patent-related information with non-patent related information, including but not limited to corporate operational data, financial information, production information, human resources information, and other types of corporate information. Such non-patent information is critically important when evaluating the full strategic and tactical value and applicability of any given patent, or developing a corporate patent business strategy for gaining competitive advantage and increasing shareholder value based on patents.","Consider, for example, . A typical corporation  includes a research and development (R&D) department , a finance department , a manufacturing department , and a legal department  (that includes a licensing department  and a patent department ). In the course of performing their respective duties, these departments generate, collect, and maintain information, such as R&D information , financial information , manufacturing information  (such as bill of material information), licensing information , and patent information  (that includes the patents obtained by the company, and perhaps patents obtained by competitors).","A business analyst  may be assigned the job of evaluating the value of the corporation's patent portfolio (represented as part of the patent information ). In order to fully and accurately analyze the value and applicability of the corporation's patent portfolio, the analyst  should ideally take into account non-patent information, such as R&D information , financial information , manufacturing information , and licensing information .","For example, a patent's value may be linked to whether it covers technology that the corporation is currently using, or that the corporation may use in the future. Thus, an analysis of the patent should include an analysis of and correlation with manufacturing information  and R&D information . Also, a patent's value may be linked to whether it has generated licensing revenue. Thus, an analysis of the patent should include an analysis of and correlation with licensing information . Further, a patent's value may be linked to the degree of success of the corporation's commercial products that correspond to the patent (i.e., the commercial embodiments of the patented technology). Thus, an analysis of the patent should include an analysis of and correlation with financial information .","The processing described above, however, is usually not done (or it is done in an ad hoc, unorganized, incomplete, inefficient, and\/or ineffective manner) because it is difficult or, in many cases, impossible to manually collect, organize, correlate, and process all of the information pertinent to the patents under study. Often times, it is a difficult or even impossible task to simply identify the relevant patents. Accordingly, it would be very beneficial to have automated tools that automatically process patent-related information and non-patent related information for making corporate business decisions. Existing patent-related tools do not have this capability.","Briefly stated, the present invention is directed to a system, method, and computer program product for processing data. The present invention maintains first databases of patents, and second databases of non-patent information of interest to a corporate entity.","The present invention also maintains one or more groups. Each of the groups comprises any number of patents from the first databases. The present invention, upon receiving appropriate operator commands, automatically processes the patents in one or more of the groups in conjunction with non-patent information from the second databases. Accordingly, the present invention performs patent-centric and group-oriented processing of data.","A group can also include any number of non-patent documents.","The groups may be defined by the business practices of the corporation and could include groupings that are product based, person based, corporate entity based, or user-defined. Other types of groups also fall within the scope of the invention. For example, the invention supports temporary groups that are automatically generated in the course of the automatic processing performed by the invention.","The processing automatically performed by the invention relates to (but is a not limited to) patent mapping, document mapping, document\/patent citation (both forward and backward), document\/patent aging, patent bracketing\/clustering (both forward and backward), inventor patent count, inventor employment information, and finance. Other functions also fall within the scope of the invention.","The present invention includes the ability to display data in a wide range of formats, including the ability to display and process data using hyperbolic trees.","The present invention includes the ability to track, analyze, and report on information related to intellectual property (IP) transactions, including license and related agreements.","Further features and advantages of the invention, as well as the structure and operation of various embodiments of the invention, are described in detail below with reference to the accompanying drawings. In the drawings, like reference numbers generally indicate identical, functionally similar, and\/or structurally similar elements. The drawing in which an element first appears is indicated by the leftmost digit(s) in the corresponding reference number.","In the following text, reference is sometimes made to existing U.S. patents. Also, some of the figures reference or illustrate existing U.S. patents. For illustrative purposes, information from and\/or about these patents has sometimes been modified or created in order to support the particular examples being discussed. Accordingly, the information provided herein about these existing U.S. patents should be considered to be fictional unless verified through comparison with copies of the actual U.S. patents that are available from the U.S. Patent and Trademark Office.",{"@attributes":{"id":"p-0196","num":"0000"},"ul":{"@attributes":{"id":"ul0001","list-style":"none"},"li":["Overview of the Invention","Components of the Invention\n    \n    ","Databases\n    \n    ","Enterprise Server and Client Functional Modules\n    \n    ","Methodology Embodiments\n    \n    ","User Interface\n    \n    ","Data Presenting and Processing Hyperbolic Trees\n    \n    ","Licensing Module\n    \n    ","Conclusion\n\nOverview of the Invention\n"]}},"The present invention is directed to a system, components of the system, a method, components of the method, and a computer program product for patent-centric and group-oriented data processing. Such processing includes, but is not limited to, reporting, analyzing, and planning.","The present invention is intended to aid a corporate entity in developing business-related strategies, plans, and actions. Accordingly, the present invention is also referred to herein as a business decision system and method.",{"@attributes":{"id":"p-0199","num":"0386"},"figref":"FIG. 2","b":"204"},"More generally, the present invention processes any documents, some of which are related to patents, and others which are unrelated to patents. These documents are preferably of interest to a business entity, and include contracts, licenses, leases, notes, commercial papers, other legal and\/or financial papers, etc., as well as patents.","For illustrative purposes, the invention is often described herein with respect to patents. However, it should be understood that the invention is also applicable to all types of documents, and the structures, functions, and operations described herein are applicable to all types of documents, whether patent or non-patent.","The present invention also processes other information, preferably business-related information, including (but not limited to) research and development (R&D) information , financial information , patent licensing information , manufacturing information , and other relevant business information  (which may, for example, include human resources information). This other information is generally called non-patent information (since it includes documents other than patents and may further include information from operational and non-operational corporate databases).","The present invention is adapted to maintain and process massive amounts of documents (several hundred thousand or more). It is often necessary to maintain and process this large number of documents in order to develop strategic, patent-related business plans for the customer.","According to the present invention, processing of the patent information  can be conducted either with or without consideration of any of the other information , , , , .","For example, a user  (who may be a business analyst) may be assigned the job of evaluating the value of the corporation's patent portfolio (represented as part of the patent information ). In order to fully analyze the value and applicability of the corporation's patent portfolio, the user  must take into account other information, such as R&D information , financial information , manufacturing information , and licensing information , for both the corporation and its competitors.","For example, a patent's value may be linked to whether it covers technology that the corporation is currently using, or that the corporation may use in the future. For this and other purposes, the present invention includes functions for automatically analyzing the patent information  in conjunction with manufacturing information  and\/or R&D information . Also, a patent's value may be linked to whether it has generated licensing revenue. For this and other purposes, the present invention includes functions for automatically analyzing the patent information  in conjunction with the licensing information . Further, a patent's value may be linked to the degree of success of the corporation's commercial products related to the patent (i.e., the commercial embodiments of the patented technology). For this and other purposes, the present invention includes functions for automatically analyzing the patent information  in conjunction with the financial information .","The invention could also be used to determine the value of a corporate entity's patent portfolio for purposes of a merger or acquisition. The invention could also be used in a merger or acquisition context to determine a corporate entity's business direction. For example, if Company A is interested in acquiring Company B, Company A could use the invention to categorize all of Company B's patents into groups. The nature of these groups would be an indication of the types of work that Company B is involved in. Other uses of the invention are described below. Further uses of the invention will be apparent to persons skilled in the relevant art(s) based on the discussion contained herein.","The present invention is group enabled. According to the present invention, a group is a data structure that includes a collection of patents. The patents in a group typically follow a common theme or characteristic (although this is not a mandatory requirement of groups). For example, a first group may include patents that map to a product being manufactured and sold by a company. A second group may include patents that map to a product or product feature being considered for future manufacture and sale by a company. A third group may include patents owned by a corporate entity. A fourth group may include patents each having a particular person named as an inventor. A fifth group may include patents owned by a competitor. A sixth group may include patents related to a research project. A seventh group may include licensed patents. An eighth group may include patents and\/or non-patent documents related to a litigation in which the customer is involved or has an interest (such a group is also herein called a case). A ninth group may include patents and other documents arbitrarily selected by a customer.","The present invention is capable of automatically processing the patents in a group, or the patents in multiple groups (alternatively, the invention can automatically process a single patent). Accordingly, the present invention is said to support \u201cgroup-oriented\u201d data processing.","Being able to automatically process information on a group basis is a very important feature of the invention, and proves to be very valuable and useful. Consider the above example of , where the user  has the task of evaluating the value of the corporation's patent portfolio. Suppose that the corporation has two products on the market, Product A and Product B. Product A generated $10 million in revenue, and Product B generated $30 million in revenue. The corporation has 5 patents that map to Product A, and 3 patents that map to Product B. If the user  analyzes this data without regard to groups, then the user  will find that the corporation's revenue per patent is $5 million. That is, for every $5 million in revenue, the corporation obtains a patent. Suppose that a relevant industry benchmark indicates that a company should obtain a patent for every $6 million of revenue. According to this scenario, the user  will conclude that the corporation is potentially seeking greater patent protection than the industry benchmark with respect to its technology.","Consider, now, the scenario where the user  analyzes the data with regard to groups, in this case a first group composed of patents that map to Product A, and a second group composed of patents that map to Product B. The user  will find that corporation's revenue per patent is $2 million for the first group (i.e., patents that map to Product A), and $10 million for the second group (i.e., patents that map to Product B). According to this scenario, the user  will conclude that the corporation is potentially devoting too much of its patent-related resources with respect to its technology related to Product A (it is \u201coverpatenting\u201d technology related to Product A), and potentially devoting too little of its patent-related resources with respect to its technology related to Product B (it is \u201cunderpatenting\u201d technology related to Product B).","In addition, an analysis of the patents relative to a product may indicate that the core features or technology of the product are not patented and, thus, could be freely and legally copied by a competitor. This could adversely affect the product's price floor and revenue stream. With this information in hand, the company could then take steps to more comprehensively patent its technology (or make a conscious and knowledgeable decision to not seek further patent protection). Without group-oriented processing of the patents related to the product, this information is unavailable. Without this information, the company is more likely to make unwise and costly business decisions.","As indicated by the above example, group-oriented processing yields information on a scale whose granularity is defined by the definition of the group. The information produced by group-oriented processing is specific to the patents in the group. Accordingly, as with the above example, group-oriented processing is often more useful and more illuminating than non-group-processing.","Also, the invention supports hierarchically structured groups. The invention, in performing a function requested by the operator, may identify a particular group. Such identification of this group may yield very useful information, as apparent from the above example. This group, however, may have a number of parent and\/or child groups. The operator may be able to uncover additional useful data by viewing, analyzing, and\/or processing these parent and child groups, either with or without the original group.","Accordingly, the invention supports and facilitates \u201cdata drilling\u201d and\/or \u201cdata mining.\u201d","As noted above, according to the present invention, processing of the patent information  is conducted with consideration of other information , , , , , called non-patent information. The process of assigning patents to groups is an example of processing patent information with non-patent information. This is the case, because groups are often created according to non-patent considerations. Accordingly, any subsequent processing of the patents in a group involve, by definition, non-patent considerations.","For example, the customer may create groups to represent its products. In this case, the groups are created according to the customer's production information. In another example, the customer may create groups to represent persons of interest. In this case, the groups are created according to HR (human resources) information. In another example, the customer may create groups to represent its competitors. In this case, the groups are created according to business information or practices. In another example, the customer may create groups based on its future products or feature requirement. In this case, the groups are created according to its R&D information.","All of these groups are created based on or in consideration of non-patent information, not patent information. Accordingly, any subsequent group processing of the patents contained in any of these groups represents, by definition, processing of the patent information  with consideration of, or in conjunction with, or based on non-patent information , , , , . This is the case, even if such subsequent group processing involves only, for example, patent bibliographic information (i.e., patent information), such as group processing based on patent issue dates or group processing based on patent references, since the groups being processed were created based on or in consideration of non-patent information, including non-patent information , , , , .","A group may also contain non-patent documents. In fact, a group may contain only non-patent documents. Accordingly, a group is more generally defined as a collection of documents (such as patent documents only, non-patent documents only, or a combination of patent and non-patent documents). The documents in a group typically follow a common theme or characteristic (although this is not a mandatory requirement of groups). Referring to , the invention processes document information  alone, or in conjunction with other information , , , ,  (which may or may not be related to the documents). Accordingly, the processing performed by the present invention is more generally described as being document-centric and group-oriented.","Components of the Invention",{"@attributes":{"id":"p-0220","num":"0407"},"figref":"FIG. 3","b":["302","302","316"]},"An enterprise server  accesses and processes the information in the databases . In particular, the enterprise server  includes modules that are capable of automatically accessing and processing the information in the databases  in a patent-centric (or document-centric) and group-oriented manner. These modules are also capable of automatically accessing and processing the information in the databases on a patent by patent basis (\u201cone patent at a time\u201d). Such processing includes, but is not limited to, reporting, analyzing, and planning.","The enterprise server  may be a single physical server, or may be a hierarchy of multiple servers , , , . An example of this multiple server embodiment is illustrated in . A given client ,  may also connect to one or multiple servers. As is well known, in a client\/server environment, some work is done by the client, some work is done by the server, and data flows between the client and the server.","The system  preferably includes two types of clients, network clients  and web clients . These clients , , pursuant to instructions from human operators or users (not shown), interact with the enterprise server  to access and process the information in the databases . For example, the clients ,  may request that the enterprise server  retrieve certain information, or automatically analyze certain information. The enterprise server  performs the requested tasks, and sends the results to the requesting clients , . The clients ,  present these results to their respective operators, and enable the operators to process the results.","Clients ,  may also perform additional processing of data, such as creating a visualization of the data obtained from the enterprise server .","Generally speaking, the network clients  preferably communicate with the enterprise server  using the enterprise server 's natural language, which is called the enterprise server API (described in detail below). Accordingly, the network clients  communicate directly with the enterprise server  via a communication network , which is preferably a network that uses the well known HTTP (hypertext transport) protocol. Other protocols could alternatively be used. This network  may be of any size, such as (but not limited to) a local area network or a wide area network (it can even be a global network).","The web clients  do not preferably utilize the enterprise server 's natural language. Accordingly, the web clients  communicate with the enterprise server  via a web server , which translates between the language of the web clients  and the language of the enterprise server . This translation is described below.","In an embodiment of the present invention, the components of the present invention shown in  are implemented using well known computers, such as a computer  shown in . The computer  can be any commercially available and well known computer capable of performing the functions described herein, such as computers available from International Business Machines, Apple, Silicon Graphics Inc., Sun, HP, Dell, Compaq, Digital, Cray, etc.","The computer  includes one or more processors (also called central processing units, or CPUs), such as a processor . The processor  is connected to a communication bus . The computer  also includes a main or primary memory , preferably random access memory (RAM). The primary memory  has stored therein control logic  (computer software), and data .","The computer  also includes one or more secondary storage devices . The secondary storage devices  include, for example, a hard disk drive  and\/or a removable storage device or drive . The removable storage drive  represents a floppy disk drive, a magnetic tape drive, a compact disk drive, an optical storage device, tape backup, ZIP drive, JAZZ drive, etc.","The removable storage drive  interacts with a removable storage unit . As will be appreciated, the removable storage unit  includes a computer usable or readable storage medium having stored therein computer software (control logic) and\/or data. The removable storage drive  reads from and\/or writes to the removable storage unit  in a well known manner.","Removable storage unit , also called a program storage device or a computer program product, represents a floppy disk, magnetic tape, compact disk, optical storage disk, ZIP disk, JAZZ disk\/tape, or any other computer data storage device. Program storage devices or computer program products also include any device in which computer programs can be stored, such as hard drives.","In an embodiment, the present invention is directed to computer program products or program storage devices having software that enables the computer  to perform any combination of the functions described herein.","Computer programs (also called computer control logic) are stored in main memory  and\/or the secondary storage devices . Such computer programs, when executed, enable the computer  to perform the functions of the present invention as discussed herein. In particular, the computer programs, when executed, enable the processor  to perform the functions of the present invention. Accordingly, such computer programs represent controllers of the computer .","The modules of the invention discussed herein, such as the grouping module , the analysis modules , etc., preferably represent software executing in the computer .","The computer  also includes a display unit , such as a computer monitor, and one or more input devices , such as a keyboard, a mouse, other pointing devices (such as a light pen and trackball), etc.","The computer  further includes a communication or network interface . The network interface  enables the computer  to communicate over communication networks, such as networks  and , which preferably use the well known HTTP communication protocol.","The components of the invention (shown in ) are described in greater detail below. It should be understood that any specific software, hardware, or operating system implementations described herein are provided for purposes of illustration, and not limitation. The invention can work with software, hardware, and operating system implementations other than those described herein. Any software, hardware, and operating system implementations suitable for performing the functions described herein can be used.","Customer Corporate Entity","Preferably, the system  is adapted for use by a particular customer. Typically, the customer is a corporate entity. Accordingly, the customer is also called herein the customer corporate entity.","It should be understood, however, that the customer can be any organization or individual, such as an academic institution, a research organization, a non-profit or for-profit organization, or any person. Generally, the customer is any entity having an interest in patents.","The customer is an entity (such as a company) that has arranged to have use of the system  (by purchasing, leasing, or renting the system , for example).","The databases  and data contained therein are specific to the customer. For example, the databases  may contain information on the patents that the customer owns and\/or licensees, and information on the patents that the customer's competitors owns and\/or licenses. Also, the databases  may contain the customer's and the customer's competitors' R&D information, financial information, licensing information, manufacturing information, and HR information.","Also, the methodology functions supported by the enterprise server  may be specialized or augmented to meet the needs of the customer.","Implementation and use of the present invention may involve a number of persons associated with the customer corporate entity, such as employees, consultants, associates, and persons retained by the customer, such as attorneys. When interacting with the invention, these people are called operators or users. Table 1 lists some of such persons and their respective responsibilities according to an embodiment of the invention. These persons may be involved in all aspects of the invention for the customer, or may be involved in only some phases of the invention for the customer, such as the extract and load of the databases . It should be noted that the set up and use of the invention may also involve other people with different knowledge, skills, and\/or abilities.","In the discussion contained herein, reference is often made to a user or an operator associated with the customer. It should be understood that the terms \u201cuser\u201d and \u201coperator\u201d are synonymous, and refer to one or more persons from Table 1.",{"@attributes":{"id":"p-0246","num":"0433"},"tables":{"@attributes":{"id":"TABLE-US-00001","num":"00001"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"70pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"147pt","align":"left"}}],"thead":{"row":[{"entry":"TABLE 1"},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}},{"entry":["Role\/Function","Responsibilities"]},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}}]},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["Executive, PL, or","Ensure strategy meets short and long term"]},{"entry":["Division Managers","business goals and plans"]},{"entry":["Intellectual Property","Analysis of patents as related to mapping,"]},{"entry":["(IP) Attorneys","licensing, infringement, non-renewal, cross-"]},{"entry":[{},"licensing etc."]},{"entry":["Technical Personnel","Analysis of patents and how they relate to given"]},{"entry":[{},"product functions and features. Also domain"]},{"entry":[{},"R&D experts as needed for specific competitive"]},{"entry":[{},"technology assessment"]},{"entry":["MIS personnel","Help in data extraction from operational systems"]},{"entry":["Marketing personnel","Product Strategy, Features, Target Markets,"]},{"entry":[{},"Competitive Analysis"]},{"entry":["Business and","Economic implications, profit, loss, tax, market"]},{"entry":["Financial Analysts","share, etc."]},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}}]}}}}},"Databases",{"@attributes":{"id":"p-0248","num":"0435"},"figref":"FIG. 6","b":["316","316"]},{"@attributes":{"id":"p-0249","num":"0436"},"figref":["FIG. 6","FIG. 6"],"b":["316","316"]},"The databases  of  are collectively called methodology databases, and the data within them are called methodology data, because they support the functions and features, or the methodology, of the present invention. These functions and features (generically called methodology functions and features) are described in sections below.","Many of the databases , such as the BOM databases , the inventor databases , and corporate entity databases , the financial databases , the person databases , and the employee databases , are initially loaded using information provided by the customer. Such information includes R&D (research and development) information, financial information, licensing information, manufacturing information, HR (human resources) information, and any other information that may be pertinent to the analysis of the customer's patents and other relevant documents. After initial loading, these databases  are updated as necessary to reflect changes in the customer's information.","Other information, such as information for the patent bibliographic databases  and the patent database , may be loaded using information provided by a third party provider, such as a third party provider that specializes in the provision of patent information in electronic form. One such third party provider is SmartPatents Inc. (SPI) of Mountain View, Calif. The patent bibliographic databases  may be periodically updated through a subscription service from such third party providers. Similarly, the patent database  may be augmented through as-needed orders to the third party providers. It should be understood that the present invention works equally well with data provided by any party as long as the data's format matches the formats of the patent bibliographic databases  and the patent database .","The databases  are described in greater detail below.","Document Databases","The document databases  preferably include electronic representations of documents of interest to the customer. The document databases  represent the customer's repository of documents, and are thus also called the customer's document repository. (The \u201crepository\u201d could alternatively represent all documents represented in the databases , whether represented in the document databases  or the bibliographic databases .)","For example, the patent database  includes electronic representations of U.S. and foreign patents of interest to the customer. These patents may be patents owned and\/or licensed by the customer, patents owned and\/or licensed by competitors of the customer, patents that the customer is considering acquiring, patents that, for whatever reason, the customer is studying, etc. The patent database  represents the customer's repository of patents, and is thus also called (in some embodiments) the customer's patent repository.","The patent database  preferably has stored therein an image file and a text file for each patent represented in the patent database , where the image file and the text file are representations of the patent. Details of an embodiment of the image file and the text file are described in U.S. Pat. No. 5,623,681 and U.S. Pat. No. 5,623,679, which are both incorporated herein by reference in their entireties.","The document databases  also include electronic representations of other documents of interest to the customer, such as depositions, pleadings, and prior art references. These documents are respectively stored in a deposition database , a pleadings database  (generally, pleadings are papers filed with a court), and a prior art database . Text and\/or image representations of these documents may be stored. These documents may be pertinent to a patent litigation that the customer is involved in.","The documents in the document databases  may be text, images, graphics, audio, video, multimedia, and\/or any other information representation that can be stored in electronic form.","It should be understood that the document databases  of  are shown for purposes of illustration, and not limitation. As mentioned above, the document databases  store electronic representations of documents that are of interest to the customer. Accordingly, the types of document databases  and the contents of the document databases  are, by definition, customer and implementation specific.","Document Bibliographic Databases","The document bibliographic databases  store information about documents (as opposed to the documents themselves). More particularly, the document bibliographic databases  store bibliographic information about documents.","Patent Bibliographic Databases","The patent bibliographic databases  store bibliographic data about U.S. and non-U.S. patents. Such patent bibliographic data includes, but is not limited to, the information on the front page of patents, such as: the patent number, the issue date, the inventors, the title, the assignee, the serial number, the filing date, the U.S. and international classifications, the fields of search, the references cited, the primary examiner, the assistant examiner, the attorney, the agent, the law firm, priority information, related application information, the number of claims, the number of drawing pages, the patent term, the expiration date, etc. The patent bibliographic databases  can also include one or more user defined fields that can store large amounts of data, such as 32 Kbytes or more of data.","Operators can extend the bibliographic databases  in patent-centric ways. For example, a \u201ccurrent licensee\u201d field can be added to the patent bibliographic databases . This could be accomplished, for example, by defining one of the user defined fields to be a current licensee field.","In an embodiment of the invention, the patent bibliographic databases  store bibliographic information on all U.S. patents. In other embodiments of the invention, the patent bibliographic databases  store patent bibliographic information on a subset of all U.S. patents, such as all U.S. patents that are available in electronic form from the U.S. Patent Office, or all U.S. patents that issued after a certain date.","Generally, there is not a one-to-one relationship between the patents in the patent database , and the patents represented in the patent bibliographic databases . That is, the patent database  does not generally include a copy of each patent represented in the patent bibliographic databases . Instead, the patent database  includes only those patents that are of interest to the customer. In contrast, the patent bibliographic databases  store bibliographic information on all U.S. patents and\/or foreign patents (or, alternatively, all U.S. patents that issued after a certain date, and\/or a subset of foreign patents). Of course, if the customer has an interest in all U.S. patents, such that electronic copies of all U.S. patents are stored in the patent database , then there would be a one-to-one relationship between the patents in the patent database , and the patents represented in the patent bibliographic databases .","Other Document Bibliographic Databases","The document bibliographic databases  include store bibliographic information on other types of documents that are of interest to the customer. For example, if the customer is interested in depositions, pleadings, or prior art references, then the document bibliographic databases  would store bibliographic information on depositions, pleadings, or prior art references in deposition bibliographic databases , pleadings bibliographic databases , and prior art bibliographic databases , respectively.","The bibliographic information may include the parties or persons involved, the date of creation, the date of modification, the subject, the number of pages, the number of figures, etc. Such bibliographic information may be generated manually, and\/or may be generated automatically during the generation of the source document. For example, word processing tools often automatically generate bibliographic information about a document as the document is being created. Such information may include the creator, the typist, the date of creation, the date of modification, the subject, the title, the type of document, the storage format, etc. This automatically-created bibliographic information could be loaded into the document bibliographic databases .","Notes Database","The present invention supports annotation of the documents in the document databases . More particularly, the present invention allows users to create and link annotations (also called notes) to any portions of the documents in the document databases . Such annotations can include text, graphics, images, video, audio, and\/or any other information representation that can be stored in electronic form.","The present invention also allows various information to be stored with annotations, such as the date of creation, the creator, the date of modification, a note title and\/or subject, access rights, etc.","The annotations, linkage information (i.e., information that specifies the link between a note and a portion of a document), and information related to the annotations and\/or the linkage information (such as the position of the linked portion in the document, the date of creation, the creator, the date of modification, a note title and\/or subject, access rights, etc.) are stored in the notes databases . Embodiments of the notes databases  are described in U.S. Pat. No. 5,623,679 and U.S. Pat. No. 5,623,681, incorporated by reference herein, and in pending U.S. application Ser. No. 08\/590,082, which is herein incorporated by reference in its entirety.","Groups Databases","Information on groups is stored in the group databases . Generally, a group is a data structure that includes any number of documents that typically follow a common theme or characteristic (although this is not a mandatory requirement of groups). More particularly, a group is a data structure that includes any number of patents that typically follow a common theme or characteristic (although, again, this is not a mandatory requirement of groups). Groups are document-centric, or in many cases, patent-centric.","There are two classes of groups: predefined groups (also called system defined groups) and user-defined groups (also called arbitrary groups).","However, the invention also supports other types of groups. For example, the invention supports temporary groups. A temporary group is automatically created by the invention in the course of processing a command. One application of temporary groups involves search operations. Specifically, when conducting a search for documents, a new temporary group is created, and the search results are stored in the temporary group. The invention permits operators to convert temporary groups to predefined groups or user-defined groups.","Patents (and\/or documents) in predefined groups follow a predefined theme or characteristic. Database tables, fields, and attributes of a predefined group are specific to the predefined theme\/characteristic of the predefined group. Accordingly, different predefined groups have different database tables, different database fields, and different database attributes. Information on predefined groups is stored in the predefined or system defined group databases .","Patents (and\/or documents) in user-defined groups may or may not follow a common theme or characteristic. Any theme or characteristic that they do follow is defined by the user. Accordingly, user-defined groups are also called arbitrary groups.","All user-defined groups have the same, generic database tables, fields, and attributes. However, users may elect to use these database tables, fields and attributes differently for different user-defined groups. Information on user-defined groups is stored in the user-defined group databases .","Predefined groups can be more powerful than user-defined groups for at least two reasons. First, the databases associated with a predefined group store information that is specific to the predefined characteristics of the predefined group. As a result, more useful and specific information can be stored in predefined groups. Second, since the data attributes and characteristics of predefined groups are known in advance, specific functions can be generated in advance to automatically process the information associated with predefined groups. As a result, the information associated with predefined groups can be automatically processed in powerful and diverse ways that are useful given the attributes and characteristics of the predefined groups.","The tables and attributes of predefined groups are typically not applicable to other types of groups. In contrast, the tables and attributes of user-defined groups are generic, and are applicable to all groups. Thus, user-defined groups are more flexible than predefined groups.","Accordingly, in practice, a user-defined group is used by a customer until its attributes, characteristics, and functions are well defined. Once they are well defined, a new predefined group is created to replace the user-defined group. This new predefined group is designed to encompass and take advantage of the specific attributes, characteristics, and functions of the group. In other words, this new predefined group is designed to encompass and take advantage of the well defined structure of the group. Then, analysis and reporting modules are created which automatically analyze and report on the data in the new predefined group. It is possible to create such analysis and reporting modules specific to the new predefined group because of the well defined structure of the new predefined group. The new predefined groups and their reporting and analysis modules can then be distributed (i.e., its databases and functional modules can then be distributed) to interested customers of the invention.","The scope of the present invention includes the creation of new predefined groups and their reporting and analysis functions in the manner described above. The scope of the present invention also includes such new predefined groups and their reporting and analysis functions. The structure and operation of such new predefined groups and their reporting and analysis functions are implementation dependent, but would be apparent to persons skilled in the relevant art(s) based on the discussion contained herein.","In the present invention, groups are structured. Specifically, groups are organized into a directed, acyclic graph, where a group can have multiple children groups and multiple parent groups.","The system of the invention discourages or prevents non-sensical organizations of groups. Such non-sensical organizations of groups is at least partially discouraged or prevented by the automatic functions performed by the invention. For example, the system discourages or prevents making a corporate entity group a child of a BOM group, since running an analysis report on all of the subassemblies of the BOM group would yield questionable or undefined results since a corporate entity does not have subassemblies. In an embodiment of the invention, such non-sensical organization of groups is prevented by computer programming.","Also, when a specialized (predefined) group is created to perform specialized analysis functions, new restrictions regarding the rules that govern the inter-relationships between groups are also created. The rules manifest themselves in the database schema. The database schema of the invention prevents the creation of non-sensical group relationships.","Predefined Groups Databases","Various predefined groups are described below. It should be understood that the following represents examples of predefined groups supported by the invention. The invention is adapted and intended to include other predefined groups. As described above, predefined groups are often created from user-defined groups once the attributes, characteristics, and functions of the user-defined groups are well defined. The invention is adapted and intended to include these types of predefined groups. Accordingly, the following is provided for purposes of illustration, and not limitation.","Bill of Materials (BOM) Databases","A BOM (bill of materials) group is a group that contains patents (and perhaps other documents) that map to a product, or that map to parts of a product. More particularly, a BOM group is a group that contains patents that map to an assembly, a subassembly, or a part, where an assembly is composed of one or more subassemblies, and a subassembly is composed of other subassemblies and\/or parts.","The phrase \u201ca patent maps to a product\u201d means that the patent includes claims that appear to read on the product or process of making and\/or using the product, and\/or includes claims that are related to or relevant to the product or process of making and\/or using the product, and\/or that the patent discloses subject matter than encompasses the product or process of making and\/or using the product, and\/or that the patent discloses subject matter than is related to or relevant to the product or process of making and\/or using the product.","Information on BOM groups is stored in the BOM databases . BOM groups and the BOM databases  are discussed in greater detail in sections below.","Corporate Entity Databases","A corporate entity group is a group that contains patents (or other documents) that are owned, licensed, or otherwise of interest to a corporate entity. Information on corporate entity groups is stored in corporate entity databases . The corporate entity databases  can include information on any number of corporate entity groups. Such corporate entity groups can correspond to any corporate entities that are of interest to the customer, such as the customer itself, affiliates of the customer, competitors of the customer, etc. Corporate entity groups and the corporate entity databases  are discussed in greater detail in sections below.","Inventor Databases (and Employees and Person Databases)","An inventor group is a group that contains patents each of which name as inventor a particular person. Information on inventor groups is stored in inventor databases . The inventor databases  are supported by person databases , which include information on people of interest to the customer (people who play a role in the processing of the invention, such as an inventor or employee), and employee databases , which include information on employees of interest to the customer. Inventor groups, the inventor databases , the employee databases , and the person databases  are discussed in greater detail in sections below.","User-Defined Group Databases","A user-defined group is a data structure that contains documents that follow some user-defined theme or characteristic. Information on user-defined groups is stored in the user-defined group databases .","These user-defined group databases  are common to all user-defined groups. In particular, the attributes in these user-defined group databases  are the same for all user-defined groups. However, the customer can choose to utilize these attributes differently for each user-defined group. For example, the customer may choose to store different types of data in these attributes for different user-defined groups. User-defined groups and the user-defined group databases  are discussed in greater detail in sections below.","Financial Databases","The financial databases  store financial information pertaining to the customer's business. The financial databases  may also include financial information on competitors' businesses (to the extent that such information is publicly known, or can be determined or estimated based on publicly known information or business practices). Such financial information may include money spent on R&D on a product line basis, gross and net revenue on a product line basis, patent licensing revenue, patent acquisition costs, etc. The invention correlates and analyzes the information in the financial databases  with patent information to determine, among other things, the financial impact of patents on the customer's and competitors' respective businesses. The financial databases  are discussed in greater detail in sections below.","Security Database","The present invention includes multileveled security features for limiting access to data stored in the databases . Security is defined herein as privilege levels associated with operators and data objects, and a security methodology for applying the privilege levels so as to restrict access to the data objects to operators having the appropriate privilege levels.","The invention is capable of supporting security for all data items, including security for notes (stored in the notes databases ), groups (stored in the group databases ), financial information (stored in the financial databases ), personal information (stored in the person databases  and the employee databases ), and documents (stored in the document databases  and the document bibliographic databases ). Information for implementing these security features is stored in the security databases , which are discussed in greater detail in sections below.","Enterprise Server","The enterprise server  is preferably implemented as one or more computers (such as the computer  shown in ) each having at least 128 MBytes of main memory  and running Microsoft Windows NT. The enterprise server  could, alternatively, be implemented using other memory configurations, and other operating systems, such as (but not limited to) UNIX, Windows 95, MS-DOS, the Apple Operating System, etc. Accordingly, the specific hardware and software implementations discussed herein are provided for purposes of illustration, not limitation (this applies to all specific hardware and software implementations discussed herein, both for the enterprise server  and for other components of the invention). The invention can utilize any hardware, software, and operating system capable of performing the functions described herein.","The enterprise server  can be a single computer, or a hierarchy of multiple computers (). Logically, however, the enterprise server  is preferably a single computer.",{"@attributes":{"id":"p-0310","num":"0497"},"figref":"FIG. 4","b":["314","314","316","426","428","316","426","428","316","420"]},"The Network transport layer or interface  is used to receive command request objects from the client ,  based on a specific network protocol, preferably HTTP. On the enterprise server  these network command objects are reconstructed from a stream of bits received from the client , . Once the command objects have been reconstructed the specific operations (described herein) defined in this object are performed by the appropriate enterprise server modules. The command objects represent enterprise server API commands, discussed below.","According to an embodiment of the invention, command objects include autonomous intelligent agents that perform appropriate operations at the enterprise server  on behalf of the operator (i.e., the client , ). In this embodiment, the command objects sent to the enterprise server  represent computer programs that are executed in the enterprise server . These executing computer programs preferably represent threads each having an address space. These computer programs, when executing in the enterprise server , perform the functions discussed herein, such as patent mapping, patent aging, inventor count, inventor information, financial functions, etc.","The enterprise server  is a highly secure business decision system. The specific operations in each command object are checked against the security information maintained about each user in the system. This is logically done through a comprehensive security layer or module . (The specific implementation of security requires the interaction with ODBC , as all security information is stored in the databases ). Alternatively, the security module  could logically be shown as being under the server configuration module  and the command dispatch module .","As described elsewhere herein, the document storage and retrieval module  is part of a Virtual Patent System  () that presents a consistent, unified view of an arbitrary number of patent and patent-related documents.","The Searching subsystem or module  provides for patent searching using a search language (syntax) described below, an extensible language for searching patent and other patent-related documents. The search layer  also encapsulates the specific search engine  used in the implementation of the system, which can and will vary based on available search technologies.","The other layers shown in  work together to form the heart of the business decision system of the present invention. The Groups layer or grouping module  is responsible for managing all groups created by a user in support of patent analysis. The Notes layer or module  is responsible for managing all forms of annotations made by the user. The Analysis Queries layer or analysis modules  perform analysis queries in support of specific requests made by various modules in the decision support system. Finally, the server administration layer or module  provides services to manage the configuration of the enterprise server , such as adding or changing the security permissions associated with a specific user.","Each of these layers provides a mechanism to further decouple the operation of the enterprise server  from the specific implementation of the databases . Each of these layers also interact with ODBC (Open Database Connectivity) , a Microsoft defined industry standard mechanism for manipulating relational databases (other software for interacting with and manipulating databases could alternatively be used). ODBC  provides a final layer of decoupling and enables the enterprise server  to transparently connect to different relational databases .","The enterprise server modules are further described below.","Document Storage and Retrieval Module","The document storage and retrieval module  in the enterprise server  stores and retrieves documents from the document databases . Preferably, especially with respect to patent documents, the document storage and retrieval module  stores and retrieves text files and image files representative of documents in the document databases . The document storage and retrieval module  performs such data storage and retrieval operations pursuant to commands that conform to the enterprise server API, described below.","The document storage and retrieval module  preferably interacts directly with the operating system  of the enterprise server , where such direct interaction primarily pertains to data retrieval and storage.","As just noted, the document storage and retrieval module  operates to access data in the document databases , such as the customer's repository of patents represented by the patent database . Preferably, the patent database  stores electronic representations of all patents which are of interest to the customer. Additional electronic patents can be added to the patent database  at any time as the customer's interests change. The patent database  is capable of storing electronic representations of all U.S. patents, or any subset of all U.S. patents, and of any number of foreign patents as required by the customer's needs and interests. Accordingly, the document storage and retrieval module , in combination with the patent database  and the patent bibliographic databases , provide the customer with the ability to quickly, efficiently, and effectively access, display, and process any patent of interest. Accordingly, from the perspective of the client, the document storage and retrieval module , in combination with the patent database  and the patent bibliographic databases , represent a virtual patent system.  graphically depicts this virtual patent system .","The client document storage and retrieval module  in the clients ,  () displays the text and images received from the document storage and retrieval module  in the enterprise server . As shown in , the client document storage and retrieval module  is capable of simultaneously displaying the text of a document in a first window , and the image of a document in a second window .","The client document storage and retrieval module  has features and functions for enabling a user to manipulate and otherwise process the displayed data. For example, the client document storage and retrieval module  includes text searching features, powerful text and image navigation features, text processing features, image processing features (as represented by image toolbox  shown in ), document organization features, word list features, sophisticated text and image display features, text and image highlighting features, document importation and exportation features, case or group copying features, and print features.","The document storage and retrieval module  in the enterprise server  and the client document storage and retrieval module  in the clients ,  are collectively further described in U.S. Pat. No. 5,623,679 and U.S. Pat. No. 5,623,681, incorporated by reference herein, and in pending U.S. application Ser. No. 08\/341,129, which is herein incorporated by reference in its entirety.","Notes Module","The notes module  manages and interacts with the notes databases . The notes module  processes enterprise server API commands (described below) to: create new notes, update existing notes, add notes to a document, remove notes from a document, and retrieve all notes associated with a document.","The client notes module  enables a user to view and manipulate notes.  is a screen shot displayed by the client ,  on the client monitor . Text of a patent is displayed in a first window . The client notes module  displays upon command the notes that are linked to portions of this patent in a notes window .","The client notes module  receives from the user commands to, for example, edit note contents, create new notes, link new or existing notes to portions of documents, modify notes, and delete notes. The client notes module  modifies the display of the notes window  as necessary to reflect these user commands. The client notes module  also generates enterprise server API commands corresponding to these user commands, and forwards these enterprise server API commands to the enterprise server  for processing by the notes module  in the enterprise server .","Notes may have attributes, such as (but not limited to) the person who created the notes (relevant for security purposes), the date the note was created, the data format(s) of data stored in the note (text, image, graphics, video, audio, spreadsheet, database, etc.), the note title, the note subject, whether the note contains information that would be considered to be Attorney\/Client privileged or confidential, and the date the note was last modified.","According to an embodiment of the invention, notes are hierarchically organized. That is, a given note may be a child note of any number of parent notes, and may have any number of child notes. This, of course, is in addition to the linkage of notes to portions of documents. This hierarchical organization may be implemented by having in the note databases  a note_note_xref table, that would be similar to the group_group_xref table . The note_note_xref table would have a parent note attribute storing the note ID of the parent note, and a child note attribute storing the note ID of the child note. There would be a record in the note_note_xref table for each parent note\/child note relationship in the note hierarchies. It is noted that this note hierarchy provides a structure, organization, and hierarchy to the documents linked to the notes.","The notes module  in the enterprise server  and the client notes module  in the client ,  are collectively further described in U.S. Pat. No. 5,623,679 and U.S. Pat. No. 5,623,681, incorporated by reference herein, and in pending U.S. application Ser. No. 08\/590,082, incorporated by reference herein.","Searching Module","The searching module  in the enterprise server  interacts with a search engine  to conduct searches through the data in the databases  pursuant to search requests from the clients , . The search engine  is any commercial and well known search engine. Preferably, the search engine  is implemented as the Fulcrum search engine available from Fulcrum Technologies, Inc., Ottawa, Canada. Other commercial search engines could also be used, including (but not limited to) those from Verity Incorporated, Sunnyvale, Calif., Open Text of Canada, and others.","Preferably, the data in the databases  is indexed to facilitate and enhance searching by the search engine . For example, each field in each table of the patent bibliographic databases  is preferably indexed and searchable. Also, the documents (including the text files and possibly the image files) in the document databases  are preferably indexed and searchable. Any well known indexing procedure can be used to index the data in the databases . According to an embodiment of the invention, indexing and searching are performed as described in pending U.S. patent application Ser. No. 08\/422,528, which is incorporated herein by reference in its entirety. Searching for documents is performed by searching through these indexes. The index tables are preferably stored in the searching module , in the searching engine , and\/or in the databases .","An embodiment of the invention permits operator-defined indexing of data. In this embodiment, an operator can define what data in the databases  is to be indexed. For example, an operator can specify that only patents having as assignee \u201cIBM\u201d should be indexed. Or, the operator can specify that only the documents in a given group should be indexed. Such operator-defined indexing enhances searching performance, because the index that is searched is smaller and more targeted.","The searching module  receives enterprise server API commands from the clients , . The searching module  processes these enterprise server API commands and, as a result, causes the search engine  to perform at least the following functions: conduct a search to identify documents that satisfy a client-supplied search parameter (for example, to identify documents that contain instances of key words), retrieve and return the search results of a previously executed search, and retrieve and return search hit information for a particular document so that search term highlighting can be performed on the document.","According to the present invention, the documents identified by a search can be easily added to a new group or an existing group by invoking appropriate enterprise server commands, such as the ReqAddDocListToGroup command or the ReqAddPatents command. In the user interface at the client , , the operator implements this function using drag-and-drop techniques.","Preferably, the invention creates a new, temporary group to hold the results of a search. A subsequent search could then be scoped or restricted to the documents in this temporary group. Accordingly, the invention supports iterative searching using groups.","The invention supports many search strategies, including but not limited to keyword, keyword phrase, keyword phrases with boolean, thesaurus, concept searching, object searching, and graphical searching based on likeness of words\/images.","The client searching module  in the clients ,  receives search commands from the user. The client search module  converts these search commands to corresponding enterprise server API commands, if necessary, and transfers these enterprise server API commands to the enterprise server . The client searching module  receives from the enterprise server  search results. The client searching module  displays these search results and enables the user to manipulate and process the search results (such as by enabling the user to add the documents identified by a search to a new or existing group\u2014note that this functionality may also involve the client grouping module ).","The invention also supports restricting or defining a search according to aspects of the system, such as historical information. Such historical information can include, for example, the results of a prior search. Thus, the scope of a new search can be restricted to the results of a prior search, or the search criteria in a new search can be added to the search criteria in a prior search. Preferably, the system maintains a search log so that the operator can view and select prior search results and prior search criterions.","In some embodiments, a user's characteristics (i.e., security level) define the groups that the user can search in. In other words, searches are restricted to groups for which the user has access rights.","The operation of the client searching module  in a client ,  and the searching module  in the enterprise server  shall now be described in greater detail with reference to . The client searching module  supports a number of user interfaces for enabling the user to enter a search command. One user interface is a field driven graphical user interface (GUI) . Examples of field driven GUIs  are shown in .","Considering first , the client searching module  displays the searching window  on the client display monitor . The searching window  includes a Scope of Search field  through which the user can select a scope of search. The user presses a down-arrow button  to obtain a list of possible search scopes. This list may include, for example, all U.S. patents, all foreign patents, both U.S. and foreign patents, all patents in one or more selected groups, the patents in the customer's repository, etc. Searches can also be restricted to portions of documents, such as the claim section in patents. In the example of , the user has defined the search scope as being all U.S. patents.","The fields in the searching window  allow the user to specify a search of patent bibliographic information, and\/or a search of the text of patents. The user can search through patent bibliographic information by entering key terms in the patent number field , the title field , the inventor field , the assignee field , the class field , and\/or the date of issue field . The date of issue field  allows the user to specify patents that issued before or after a given date (by filling in fields  and ), or that issued between two dates (by filling in fields , , and ). It is noted that only some of the attributes of the patent bibliographic databases  are shown as being searchable in . In some embodiments, other field driven GUIs (not shown) supported by the invention have search fields corresponding to other attributes of the patent bibliographic databases . In these other embodiments, it is possible for the user to search through any of the attributes of the patent bibliographic databases .","The user can search through the text of patents by entering search parameters in an abstract field  and\/or the full patent text field .","It is noted that not all users may have access to all of the search options described above. For example, some users may be only able to search through the patent bibliographic information. Other users may be only able to search through certain attributes of the patent bibliographic information. Other users may be only able to search through the text of patents. The server configuration module , described below, controls the search options and capabilities of each user.","The user can specify the fields to include in the list of search results by appropriately selecting fields . The user can specify a sorting order to display the search results via field . Sorting options include: descending patent numbers, ascending patent numbers, issue date, filing date, serial number, score (the number of search hits), etc.",{"@attributes":{"id":"p-0350","num":"0537"},"figref":"FIG. 54","b":["710","1122","5406","5408","614","614"]},"By selecting a \u201cpatents not in local repository\u201d command , the user can display a list of the patents from the search results that are not represented in the patent database  (i.e., patents for which the user does not own electronic copies of). The report resulting from selecting the patents not in local repository command  can be used by the user to generate a purchase order to obtain electronic copies of the patents of interest from the search results. In some embodiments, electing this option will cause an electronic message to be sent to a third party service provider. The third party service provider would then electronically send electronic copies of the patents to the customer.","If the user selects (by double clicking or other well known GUI operation such as selecting a patent and pressing a return button) a patent from the list shown in , then the text and\/or image of the selected patent is displayed on the client display monitor .  depicts the display of text, and  depicts the display of an image. Alternatively, both the text and image can be simultaneously displayed on at least some clients ,  using a display format such as that shown in .","The field driven GUI  of  is similar to that of . Note that the GUI  of  includes a keywords field , which allows the user to search through user-definable fields in the patent bibliographic databases . The field driven GUI  of  also allows the user to define the scope of the search via fields . In the example of , the scope of the search can be the full text index (i.e., a search of the patent bibliographic information), only the patents stored in the patent database  (i.e., only the patents in the customer's patent repository), only the patents in the current group, or only the current patent. Other embodiments may a restrict searching to specific types of documents or specific predefined groups, such as all European patents, all PCT applications, all non-patent documents, documents in BOM groups, etc.","Referring again to , the client searching module  generates a query request A based on the search criteria that the user entered into the field driven GUI . Preferably, this query request A is in the native query language of the enterprise server . In other words, the query request A conforms to the enterprise server API.","The enterprise server API commands related to querying include the ReqSearch command. As described further below, this command takes searchParameters as a passed parameter. This passed parameter stores the search parameters for the search. A preferred syntax of the search parameters according to the enterprise server API is described below in Tables 2 and 3.",{"@attributes":{"id":"p-0356","num":"0543"},"tables":{"@attributes":{"id":"TABLE-US-00002","num":"00002"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"1","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"98pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"91pt","align":"left"}}],"thead":{"row":[{"entry":"TABLE 2"},{"entry":{"@attributes":{"namest":"1","nameend":"3","align":"center","rowsep":"1"}}},{"entry":[{},{},"Implementation in Search"]},{"entry":["Search",{},"Engine 424 (when using"]},{"entry":["string",{},"Fulcrum as the Search"]},{"entry":["operator","Meaning and Search Behavior","Engine 424)"]},{"entry":{"@attributes":{"namest":"1","nameend":"3","align":"center","rowsep":"1"}}}]},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["W\/n","Search for term expression on","Translate directly to"]},{"entry":[{},"left within n characters distance","\u201cWITHIN n CHARACTERS"]},{"entry":[{},"in either direction from term","OF\u201d"]},{"entry":[{},"expression on right."]},{"entry":["AND","Match only documents that","Translate directly to \u201c&\u201d"]},{"entry":[{},"satisfy the term expression on"]},{"entry":[{},"the left and the term expression"]},{"entry":[{},"on the right."]},{"entry":["OR","Match documents that satisfy","Translate directly to \u201c|\u201d"]},{"entry":[{},"the term expression on the left"]},{"entry":[{},"or the term expression on the"]},{"entry":[{},"right."]},{"entry":["NOT","Match only documents that do","Translate directly to \u201c!\u201d"]},{"entry":[{},"not satisfy the term expression"]},{"entry":[{},"on the right."]},{"entry":["( )","Parentheses. Used to group","Leave as is."]},{"entry":[{},"search expressions parts to"]},{"entry":[{},"control their order of"]},{"entry":[{},"evaluation."]},{"entry":{"@attributes":{"namest":"1","nameend":"3","align":"center","rowsep":"1"}}}]}}}}},"Each of the Operators in Table 2 (including any spaces to its immediate left or right) is considered to be a search syntax delimiter. Each sequence of characters before, after, or between one of these delimiters will be called a search string \u201celement\u201d. Each search string element will be enclosed between a pair of apostrophes to translate it for transmission to Fulcrum. The meaning of and translations for the specific characters that can appear in an element are listed below in Table 3.",{"@attributes":{"id":"p-0358","num":"0545"},"tables":{"@attributes":{"id":"TABLE-US-00003","num":"00003"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"1","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"140pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"49pt","align":"left"}}],"thead":{"row":[{"entry":"TABLE 3"},{"entry":{"@attributes":{"namest":"1","nameend":"3","align":"center","rowsep":"1"}}},{"entry":["Search",{},{}]},{"entry":["string",{},"Implementation"]},{"entry":["Element","Meaning and search behavior","in Fulcrum"]},{"entry":{"@attributes":{"namest":"1","nameend":"3","align":"center","rowsep":"1"}}}]},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["A-Z a-z","Alphabetic characters. A contiguous","Leave as is."]},{"entry":[{},"sequence of these (including any optional"]},{"entry":[{},"apostrophes) is considered a word for"]},{"entry":[{},"searching. All searching is case insensitive."]},{"entry":["0-9","Numeric characters. A contiguous sequence","Leave as is."]},{"entry":[{},"of these (including any optional commas or"]},{"entry":[{},"periods) is considered a word for searching."]},{"entry":["'","Apostrophe. This character only appears in","Translate"]},{"entry":[{},"the index when there is an alphabetic","directly to \u201c''\u201d"]},{"entry":[{},"character on either side of it. In this case,"]},{"entry":[{},"you must search for it explicitly. For"]},{"entry":[{},"example, searching for \u201cAdams\u201d will not find"]},{"entry":[{},"\u201cAdam's\u201d."]},{"entry":[", .","Comma and period. Each of these characters","Leave as is."]},{"entry":[{},"only appears in the index when there is a"]},{"entry":[{},"numeric character on either side of it. In this"]},{"entry":[{},"case, you must search for it explicitly. For"]},{"entry":[{},"example, searching for \u201c4,234.03\u201d will not"]},{"entry":[{},"find \u201c423403\u201d."]},{"entry":["*","Wildcard matching zero or more characters in","Translate"]},{"entry":[{},"a single word.","directly to \u201c%\u201d"]},{"entry":["?","Wildcard matching exactly one character in a","Translate"]},{"entry":[{},"single word.","directly to \u201c_\u201d"]},{"entry":["%","Fulcrum's wildcard matching zero or more","Translate"]},{"entry":[{},"characters in a single word.","directly to \u201c\\%\u201d"]},{"entry":[{"sub":"\u2014"},"Fulcrum's wildcard matching exactly one","Translate"]},{"entry":[{},"character in a single word.","directly to \u201c\\_\u201d"]},{"entry":["\\","Escape character in Fulcrum.","Translate"]},{"entry":[{},{},"directly to \u201c\\\\\u201d"]},{"entry":["Space","Space character.","Leave as is."]},{"entry":["-","Behaves like the \u201cother punctuation\u201d below","Leave as is."]},{"entry":[{},"with the exception that when one or more"]},{"entry":[{},"dashes appear in the middle of a word in a"]},{"entry":[{},"search string, the search engine will search"]},{"entry":[{},"for both the version with all the dashes and"]},{"entry":[{},"the version with none of the dashes."]},{"entry":["!@#$","All other punctuation. These are treated as","Leave as is."]},{"entry":["%{circumflex over (\u2009)}&_-","invisible word breaks. They are not indexed,"]},{"entry":["=+[ ]","but will break words."]},{"entry":"{ };:"},{"entry":"<>\u201d\/|\u2018~"},{"entry":{"@attributes":{"namest":"1","nameend":"3","align":"center","rowsep":"1"}}}]}}}}},"The searching module  in the enterprise server  receives the query request A. A query language syntax analyzer  in the searching module  checks the query request A for any format or syntax errors, such as unbalanced parentheses. The searching module  then translates the query request A to a new query request in the language of the search engine . The new query request is then transferred to the search engine  for processing.","The present invention also supports a native language command line GUI  for enabling a user to enter a search request. The command line GUI  is typically only used by users who are familiar with the enterprise server API. When using the command line GUI , the user enters at the command line a query request B. This query request B must conform to the enterprise server API. This query request B is then transferred to the searching module  in the enterprise server  where it is processed in the manner described above.","The present invention further supports any number of foreign language command line GUIs  for enabling the user to enter query requests. The invention provides foreign language command line GUIs  to support those users who are familiar with database query languages other than the enterprise server API. Such database query languages are herein called foreign query languages for reference purposes. There are many well known foreign query languages, such as the patent specific query language used by the U.S. Patent Office Web Site which is located at http:\/\/patents.cnidr.org\/access\/access.html. The client searching module  has a foreign language command line GUI  for each foreign query language of interest.","When using a foreign language command line GUI , the user enters at the command line a query request . The query request  is in the foreign query language associated with the foreign language command line GUI . The query request  is translated to a query request C in the enterprise server API by a translator  (there is a translator for each foreign query language supported by the invention). This query request C is then transferred to the searching module  in the enterprise server  where it is processed in the manner described above.","The present invention also supports searching of other data objects, such as groups (in the group databases ) and notes (in the notes databases ). In fact, the present invention supports searching of all the tables in the databases . Preferably, all fields in all tables of the databases  are indexed and searchable. In some embodiments, only some of the tables are indexed and searchable, such as the group databases  and the notes . GUIs, such as those discussed above, are used to enable operators to define searches of any attributes of these tables.","The present invention also supports context and linguistic type searching, and also supports image and object searching. The invention can be used, for example, with data blade search tools, such as those available from Informix.","Automatic Searches Related to Groups","The present invention also supports an automated search function related to groups. According to this aspect of the invention, a search is performed of all or part of the document databases  and\/or the document bibliographic databases  to identify documents that satisfy a specified search criteria. The documents identified via this search are added to a specified group.","For example, suppose that the customer has a group called XYZ group. This group contains the patents that name XYZ corporation as assignee. Periodically, the invention automatically searches the patent bibliographic databases  for any patents that name the XYZ corporation as assignee. Any patents found from this search are automatically added to the XYZ group.","The invention supports performing such automatic searches at user defined intervals (such as every month), or at the occurrence of user-specified events, such as whenever the patent bibliographic databases  are updated.","The invention allows the customer to define such automatic searches. In defining an automatic search, the customer specifies the target databases (what databases to search), the target groups (which groups receive the identified documents), the search criteria, and the frequency or circumstances that the automatic searches take place.","Preferably, the searching module  performs the automatic searches.","Searching Algorithm","The searching module  processes a search string according to a preferred searching algorithm that is designed to take advantage of the searching and data accessing capabilities of the objects that directly interact with the databases . Such objects are herein called database accessing objects because they directly access and interact with the databases , and include the search engine(s) , the SQL server , and other database servers .","A flowchart  shown in  represents a searching algorithm performed by the searching module  according to a preferred embodiment of the present invention. The searching module  performs the steps of flowchart  with respect to a search string that it has received from a requester, such as a client , , or any other entity that wishes to conduct a search of the databases .","The search string includes one or more search string components, also called search string elements, which are preferably in the format shown in Table 3. The search string components\/elements are separated by search syntax delimiters (Table 2).","In step , the searching module  identifies the search string components in the search string. The searching module  preferably performs step  by parsing through the search string. In the course of such parsing, the searching module  identifies search string components based on the location of search string delimiters (that is, search string components represent groups of characters that are separated by search string delimiters). For example, consider the following example search string:","(Phrase1 AND Phrase2) OR (Phrase6 AND (Phrase3 OR (Phrase4 AND Phrase5))).","In step , the searching module  identifies the following as search string components (parsing the example search string from left to right):","Phrase1, Phrase2, Phrase6, Phrase3, Phrase4, and Phrase5.","In step , the searching module  analyzes each search string component (identified in step ) and assigns each search string component to a database accessing object. The searching module  in step  assigns a search string component to a database accessing object based on the characteristics of the search string component and the capabilities of the database accessing object. Specifically, the searching module  analyzes and identifies the characteristics of the search string component. The searching module  then assigns the search string component to a data accessing object whose capabilities are matched to these characteristics (that is, whose capabilities are well suited for processing search string components having those characteristics).","For example, suppose that the search string component being considered represents a text search in a collection of documents. This type of search is best suited to be performed by a search engine, such as search engine . Search engine  is well suited for performing text searches because the text in the databases  is indexed.","As another example, suppose that the search string component represents a search for all patents that are referenced by U.S. Pat. No. 1,234,567. This search string component is best represented as a relational database query. Accordingly, it would be best processed by a relational database engine, such as the SQL server  or other relational database servers .","After the search string components have been assigned to data accessing objects, the data accessing objects in step  process their assigned search string components. Such processing preferably occurs in parallel. By processing the search string components in parallel, the length of time that it takes to conduct the search is reduced.","In step , the data accessing objects transfer their respective result sets or search results to the searching module . These search results represent multiple data streams. The searching module  in step  combines these data streams according to the logical linking operations represented by the search syntax delimiters in the original search string.","For example,  illustrates the manner in which the searching module  combines the search results resulting from the example search string presented above. R represents the search results generated by processing Phrase1. Similarly, R, R, R, R, and R represent the search results generated by processing Phrase 2, Phrase3, Phrase4, Phrase5, and Phrase6.","The searching module  combines R and R by logically AND'ing R and R. That result is OR'd with R. The result of that OR operation is AND'd with R. The result of that AND operation is OR'd with the result of the logical AND'ing operation of R and R. The result of this OR operation represents the final result of processing the original search string.","Preferably, for efficiency purposes, the result sets received from the database accessing objects are ordered according to a common criteria. Preferably, the result sets are ordered according to patent number.","The searching module  in step  then returns this final result to the requester. Operation of flowchart  is then complete, as indicated by step .","In the present invention, it is not necessary to store the intermediate search results. For example, it is not necessary to store R, R, R, R, R, and R. Instead, the searching module  processes the intermediate search results as they are received. Referring to , the searching module  processes R and R (as they are received) by AND'ing them together. The result of that AND operation is immediately processed with R (as it is received) by OR'ing them together. The other search results are processed as they are received in a similar manner. As a result, the searching module  does not need to store the intermediate search results R-R for any length of time.","The searching algorithm of the present invention shall now be further described with reference to the processing of the \u201cpatents in local repository\u201d command  and the \u201cpatents not in local repository\u201d command  (). These commands were discussed above.","The searching module  executes the \u201cpatents in local repository\u201d command  by first processing a search string in the manner shown in the flowchart  (). The results of processing this search string are then logically AND'ed with a listing of the patents in the patent repository (that is, in the patent database ). This logical AND operation yields a list of patents which satisfied the search string, and which are also in the patent database .","The searching module  performs the \u201cpatents not in local repository\u201d command  by first processing a search string in a manner discussed above with reference to flowchart  in . The results of processing the search string are then logically NAND'ed with the list of patents in the patent database . This NAND operation yields a list of patents which satisfy the search string, but which are not in the patent database .","Grouping Module","The grouping module  in the enterprise server  manages and interacts with the group databases . The grouping module  receives and processes enterprise server API commands (sent from clients , ) to perform at least the following functions: obtain information on the hierarchy of the groups stored in the group databases , make an existing group a child of another group, unlink a child group from one of its parent groups, update group properties, create a new group as a child of an existing group, obtain a list of documents in a group, add documents to a group, and remove documents from a group.","The grouping module  also supports group import and export functions. Some of these group import functions relating to BOM groups, corporate entity groups, and inventorship groups are described below. The grouping module  also supports a user-defined group (or generic) group import function. When performing this function, the grouping module  receives a properly structured file comprising a plurality of records (or lines of information), where each record specifies a name of a group and a physical level of the group in the group hierarchy. From this file, the grouping module  creates a user-defined group hierarchy in the user-defined group databases .","An example file for group importation is shown below (other file structures could alternatively be used):",{"@attributes":{"id":"p-0396","num":"0583"},"tables":{"@attributes":{"id":"TABLE-US-00004","num":"00004"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"63pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"14pt","align":"center"}},{"@attributes":{"colname":"2","colwidth":"140pt","align":"center"}}],"thead":{"row":{"entry":[{},{"@attributes":{"namest":"offset","nameend":"2","align":"center","rowsep":"1"}}]}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"1","A"]},{"entry":[{},"2","B"]},{"entry":[{},"3","C"]},{"entry":[{},"2","D"]},{"entry":[{},"3","E"]},{"entry":[{},"4","F"]},{"entry":[{},"3","G"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"2","align":"center","rowsep":"1"}}]}]}}}}},"The first column corresponds to the physical level in the group hierarchy, and the second column corresponds to the group name. The information contained in this example file corresponds to a group hierarchy shown in .","The grouping module , upon receipt of this file, creates a record in the group_table  for each of the groups represented in the file (i.e., for groups A, B, C, D, E, F, and G). The physical level information from the file is stored in the group_group_xref table . For example, the group_group_xref table  would have a record that indicates that Group A is the parent of Group B. The group_group_xref table  would also have a record that would indicate that Group G is a child of Group D. (It is noted that similar physical level information is also preferably in the customer BOM data  () with respect to load of the BOM databases .)","The client grouping module  displays the group hierarchy and the documents in a group, and enables a user to manipulate and process groups.  depicts an example screen shot displayed by the client grouping module  on the client monitor . In a first window , the client grouping module  displays a graphical representation of the hierarchy of groups stored in the group databases . Suppose that the user has selected an ALU group  in this first window . Selection of a group in the first window  causes a list of the documents in the selected group to be displayed in a second window . Accordingly, the client grouping module  displays the following list of documents: U.S. Pat. Nos. 4,333,AAA; 4,788,BBB; 5,278,CCC; 4,760,478 (as should be apparent from this example, many of the patents referred to herein for illustrative purposes are fictional). These documents are in the selected ALU group. Note that the second window  also displays bibliographic information on the listed documents. Preferably, the information listed in the second window  is in a spread sheet format. However, other formats could alternatively be used.","Selecting (by double clicking) a document from the list in the second window  causes the selected document to be displayed. For example, suppose that the user selected U.S. Pat. No. 4,760,478 from the list displayed in the second window. This would cause the client ,  to obtain the text and image of this patent from the databases  via the enterprise server . The client document storage retrieval module  would then display the retrieved text and image of the '478 patent at the client monitor  using the format shown in , where the text is displayed in a text window , and the image is displayed in an image window .","The client grouping module  receives from the user commands to navigate through the group hierarchy, to edit the group hierarchy, to edit groups, to add documents to groups, to delete documents from groups, to delete groups, etc. The client grouping module  modifies the display of the window  as necessary to reflect these user commands. The client grouping module  also generates enterprise server API commands corresponding to these user commands, and forwards these enterprise server API commands to the enterprise server  for processing by the grouping module  in the enterprise server .","Analysis Modules","The analysis modules  are shown in . These analysis modules , which are also called methodology modules , automatically interact and process data contained in the databases  pursuant to user commands. The analysis modules  are patent-centric (or document-centric) and group-oriented. The analysis modules  are patent-centric because they all involve the processing (including reporting, analysis, and planning) of patent data either with or without consideration of other data, such as production data, HR data, financial data, etc. The analysis modules  are group-oriented because they have the capability of processing the patents (or other documents) in one or more groups, and potentially the children of these groups.","It should be understood that the invention is adapted and intended to include a wide and varied range of analysis modules . The analysis modules  shown in  represent only a sampling of the analysis modules  that the invention is adapted and intended to support. The invention can support many other analysis modules  because the databases  are so rich. The analysis modules  can include any other module that performs useful processing (from the point of view of the customer) of the data in the databases . Accordingly, the particular collection of analysis modules  shown in  are described herein for the purpose of illustration, and not limitation.","For illustrative purposes, the analysis modules  are sometimes described herein as working with particular types of groups, such as BOM groups. However, it should be understood that the analysis modules  can work with any types of groups.","The analysis modules  are described in detail in sections below.","Security Module","The security module  in the enterprise server  manages and interacts with the security databases , which stores information required to implement the security features of the invention. The security module  utilizes the information in the security databases  to implement a multilevel security methodology. The security databases  and the multilevel security methodology implemented by the security module  are described in detail in sections below.","The client security module  in the clients ,  enable a user to access and modify the security information in the security databases . Typically, access to the client security module  and the security databases  is limited to users with high security clearances, such as system administrators.","Server Administration Module","The server administration module  performs functions related to the enterprise server 's resources, such as the databases  and the indexes to the databases . Some of the server administration module  functions include performing reindexing operations of the databases , when necessary, importing and exporting large portions of the databases , upon request, managing directories, etc. The server administration module  is also responsible for establishing user sessions with the enterprise server .","The client server administration module  at the client ,  and\/or the server administration module  in the enterprise server  preferably maintains one or more server configuration files. Information in the server configuration files identifies, for example, the physical location of the databases, the number of possible concurrent users, memory size allocations, etc. The server configuration files can also include log files. The server configuration files would indicate what events are to be logged to the log files, such as whether to track all user actions, track error conditions, etc.","Server Configuration Module","Not all users have access to all of the enterprise server functions. A normal user, for example, may be only able to search documents and document bibliographical information, view documents, and print documents. Accordingly, a normal user would be able to access only the document storage and retrieval module  and the searching module  of the enterprise server .","Also, different users may have different search capabilities. Some users may be able to search only document bibliographic information, while other users may be able to search both document bibliographic information and the text of documents.","A power user may be allowed access to all enterprise server functions. The power user could search documents and document bibliographical information, view documents, print documents, work with groups, work with notes, and invoke analysis functions. Accordingly, the power user would be able to access the document storage and retrieval module , the searching module , the grouping module , the notes module , and the analysis modules  of the enterprise server .","A system administrator may be able to set user security levels and perform enterprise server administration functions. Accordingly, a system administrator would have access to at least the security module  and the server administration module .","The modules loaded on a user's computer preferably depend on the user's security level, and correspond to the modules in the enterprise server  to which the user has access. Referring to , only the client document storage and retrieval module  and the client searching module  are preferably loaded on the computers (i.e., clients , ) of normal users. The client document storage and retrieval module , the client searching module , the client grouping module , the client notes module , and the client analysis module  are loaded on the computers of power users. The client security module  and the client server administration module  re preferably loaded on the computers of system administrators.","The system configuration module  in the enterprise server  keeps track of the functions and modules that each user is permitted to access. Preferably, the server configuration module  maintains a database (not shown) having access privilege information for each user (note that this is different than security access information). As shown in , when the enterprise server  receives a command from a user, the server configuration module  in step  ensures that the user has access to the target module (i.e., the module in the enterprise server  that would have responsibility for processing the command) before allowing the command dispatch module  to forward the command to the target module for processing.  is further described below.","The functions and enterprise server modules that a user is allowed to access is dependent on a number of factors, such as the user's level of need, the user's level of expertise, and\/or whether or not the user has purchased the modules and\/or databases (in some embodiments, it may be necessary for the user to pay a fee to access and obtain the benefits of an enterprise server module, such as the notes module , the grouping module , and\/or the analysis modules ).","The user's computer platform is also a consideration. In some embodiments, software for some client modules (such as the client grouping module , the client notes module , and\/or the client analysis module ) may not exist for the user's particular computer platform. This is especially true for the computer platforms used to implement the web clients . In these cases, the user will not be able to access any of the enterprise server modules for which the user's platform does not have a corresponding client module. In other embodiments, however, software for all of the client modules are available for all platforms. Accordingly, the user's computer platform is not a consideration with respect to the issue of which enterprise server modules the user is capable of accessing. In these embodiments, the client modules may be implemented using multi-platform enabled software, such as Java or other such software.","In some embodiments, the modules are not loaded on the user's computer. Instead, they are run from a server connected to the user's computer. However, a particular user may not have access to all of the modules on the server, for the reasons discussed above.","Command Dispatch Module","The command dispatch module  routes enterprise server API commands received from clients ,  to the enterprise server modules that are responsible for processing the commands. This functionality is represented in step  of , described below. The enterprise server API commands are described below. Also described below is the mapping of enterprise server API commands to enterprise server modules (i.e., which enterprise server modules process which enterprise server API commands).","Clients","As noted above, the system  preferably includes two types of clients, network clients  and web clients . The network clients  and the web clients  are discussed in greater detail below.","It is noted that the functional capabilities of network clients  and web clients  may differ in some embodiments, and may be the same in other embodiments (this is described below). However, for simplicity purposes, the present invention is sometimes described as interacting with \u201cclients , ,\u201d which may represent one or more network clients , one or more web clients , or any combination of network clients  and web clients .","Network Clients","The network clients  preferably communicate with the enterprise server  using the enterprise server 's natural language, which is called the enterprise server API (application program interface). The network clients  can be considered to represent web browsers that are specific to the language and the functions supported by the enterprise server . The enterprise server API is described below.","The network clients  preferably communicate directly with the enterprise server  via a communication network , which is preferably a network that supports the well known HTTP (hypertext transport) protocol.","Each network client  is preferably implemented using a computer, such as the computer  shown in . Preferably, the computers used to implement the network clients  are personal computers with at least 16 MBytes of main memory , running the Microsoft Windows 95 operating system or the Microsoft Windows NT operating system. The software executing in the network clients  is preferably written in the C++ computer programming language.","In fact, preferably all software of the invention is written using the C++ computer programming language. Database manipulation code is written in a combination of SQL and C++. Other computer programming languages could alternatively be used, such as SmallTalk, Java, C, Pascal, ADA, etc.","Web Clients","The web clients  are each preferably implemented using a computer such as that shown in . Commercial web browser software preferably executes in the web clients . Any commercial and well known web browser software can be used, such as web browser software from Netscape, Microsoft, Sun, etc.","Unlike the network clients , the web clients  do not typically utilize the enterprise server API. Accordingly, the web clients  communicate indirectly with the enterprise server  via the web server .",{"@attributes":{"id":"p-0436","num":"0623"},"figref":"FIG. 8","b":["310","304","314","310","310","804","304","314"]},"Specifically, the enterprise server  sends raw data  to the web server  over the network . The translator  in the web server  translates the raw data  to data in the well known HTML data format. This HTML data  is sent to the web client  over network . A browser  in the web client  renders the HTML data . The translator  translates data going from the web client  to the enterprise server  in a similar manner. It is noted that data formats other than HTML could alternatively be used. In particular, any data format used by the browser  could alternatively be used in the invention.","Since the web server  communicates with the enterprise server over the network  using the enterprise server API, the web server  appears to be a network client  from the perspective of the enterprise server . The interaction between the web clients  and the enterprise server , and the network clients  and the enterprise server , is further described below.","The use of commercial web browser software in the web clients  is advantageous because such software executes on different computer platforms (that is, there are versions of the browser software that executes on different computer platforms), such as computer platforms produced by IBM, Apple, Sun, SGI, HP, companies producing computers that are compatible with those produced by these companies, etc. Thus, the present invention via the web clients  enables users working on any type of computer platform for which a commercial web browser is available to access the enterprise server  and the databases . This feature of the invention is particularly important in the data processing world of today, where any given corporate entity may have users on many different computer platforms. The present invention allows all of these users (using commercial web browser software, which the corporation may already own) to access and work with the enterprise server  and the databases , irrespective of the type of computer that they are using.","Enterprise Server API (Application Programming Interface)","The enterprise server API includes commands for accessing functions and capabilities supported by the enterprise server modules (shown in ). Many of the enterprise server commands have an implicit parameter which is the sessionID (identifier) of the current server session. A sessionID is obtained by calling the ReqLogin command. All commands issue an exception on failure.","Interaction between the clients ,  and the enterprise server  is conducted via direct or indirect use of the enterprise server API, whether or not stated explicitly herein.","Other applications (not discussed herein) may interact with the enterprise server  as long as such applications conform to the enterprise server API.","An embodiment of the invention includes timed, automatic executing commands (such as the automatic searches described above). These commands execute upon the occurrence of an event (the event can be defined in the passed parameters of the commands). Such events include time (for example, execute every 30 days), system update (for example, run this search every time new patents are loaded into the enterprise server), data change (for example, automatically regroup these patents every time a corporate entity changes), etc. These timed automatic executing commands are essentially those listed and described below, with additional logic for detecting the occurrence of the defined condition(s)\/event(s), and for automatic execution upon such detection.","The commands that make up the enterprise server API according to an embodiment of the invention are described below. It should be understood that the enterprise server API is extendable to support other enterprise server modules, or to support additional or modified functions in existing enterprise server modules, or to support other functions described herein. Embodiments of the enterprise server API may include only a subset of the following commands. Also, modules other than the ones identified could process the following commands. For example, the Server Administration Module  could process the Security Module 's commands.","Commands Processed by the Server Administration Module ","ReqLogin(username, password)","Returns: sessionID","Description: Login command for the enterprise server  for user authentication and to establish a user session on the enterprise server .","ReqLogout( )","Returns: nothing","Description: Terminates user session with enterprise server .","ReqAddUsers(userList userSet)","Returns: nothing","Description: Adds the users specified in userSet to the system (as being able to access the system).","ReqGetAllUsers( )","Returns: list of users in system","Description: Returns a list of users registered to work with the system.","ReqGetUsers(userIdList userIDSet)","Description: Returns a list of users (identified by userIDSet) and their user IDs.","ReqRemoveUsers(userIdList userIDSet)","Description: Removes a list of users from system, specified by their user IDs (userIDSet).","Commands Processed by the Security Module ","ReqGetPermissionList(string docGroupID)","Description: Gets and returns the permission list for a group specified by docGroupID.","ReqRemovePermission(string docGroupID, string entityID)","Description: Removes all access privileges to a group (specified by docGroupID) from an entity (specified by entityID).","ReqSetPermission(string docGroupID, string entityID, string mode)","Description: Sets access permission (specified by mode) for an entity (specified by entityID) to use a group (specified by docGroupID).","Commands Processed by the Document Storage and Retrieval Module ","ReqCanPage(document, section, page)","Returns: raw image data","Description: Gets the bitmap image (also called the canonical representation) associated with a section and page of a document as specified in the passed parameter.","ReqDocList( )","Description\/Returns: Retrieves and returns a list of documents in the repository.","ReqTxt(document)","Returns: raw text data","Description: Gets the ASCII text of a document specified in the passed parameters.","ReqRawCan(document)","Returns: entire image file","Description: Gets the entire collection of images associated with a document specified in the passed parameter.","ReqRawEqv(document)","Returns: entire equivalent or text file","Description: Gets the document equivalent data or text data of a document specified in the passed parameter. This return data is a textual representation of the document.","ReqCanHeader(document)","Returns: Image file header data","Description: Gets header information about the collection of images associated with the document specified in the passed parameter, including the size, width, and height of the images.","ReqAbstract(spStringSet patentlist)","Returns: A list of abstract\/patent number pairs","Description: Retrieves abstracts associated with the patent list specified in the patentList parameter.","ReqGetAllPatentData(int sindex, int eindex)","Returns: list of patents with their bibliographic information, search handle","Description: Gets the list of patents plus their bibliographic information, starting from sindex and ending with eindex, where sindex and eindex are based on the ordering of the patents in the patent bibliographic databases . Example: ReqGetAllPatentData(0, 5) returns the first 6 patents in the patent bibliographic databases  with their bibliographic information. Also returns a handle that identifies the persistent result set on the enterprise server in order to get more patents from the result set.\n\nReqGetAllPatents(int sindex, int eindex)\n\nReturns: list of patents, search handle\n\nDescription: Gets the list of patents, starting from sindex and ending with eindex, where sindex and eindex are based on the ordering of the patents in the patent bibliographic databases . Example: ReqGetAllPatents(0, 5) returns the first 6 patents in the patent bibliographic databases . Also returns a handle that identifies the persistent result set on the enterprise server in order to get more patents from the result set.\n\nReqGetPatentDatalnGroup(string groupID, int sindex, int eindex)\n\nReturns: list of patents with their bibliographic information, search handle\n\nDescription: Gets a list of the patents in a group (specified by groupID) with their bibliographic information, starting from sindex and ending with eindex (relative to the ordering of the patents in the group). Example: ReqGetPatentDataInGroup(groupid, 0, 5) returns the first 6 patents and their bibliographic information from the group. Also returns a handle that identifies the persistent result set on the enterprise server in order to get more patents from the result set.\n\nReqGetPatents(string groupID, int sindex, int eindex)\n\nReturns: list of patents from sindex to eindex.\n\nDescription: This is similar to ReqDocsInGroup (described below), except it returns patents from sindex to eindex from the group specified by groupID. sindex and eindex are relative to the ordering of the patents in the group. Example: ReqGetPatents(groupid, 0, 5) returns the first 6 patents in the group. ReqGetPatents(groupid, 6, 11) returns the second 6 patents in the group. Also returns a search handle on which to get subsequent patents.\n\nReqDeletePatentHandle(string handle)\n\nReturns: nothing\n\nDescription: Deletes a generated result set of patents specified by handle, generated by ReqGetAllPatents or ReqGetPatents.\n\nReqGetPatentDataFromHandle(string handle, int sindex, int eindex)\n\nReturns: list of patents with their bibliographic information, search handle\n\nDescription: Receives a handle. From that handle, gets the patents from sindex to eindex (where sindex and eindex are relative to the handle), and also gets their bibliographic information. The handle is generated by ReqGetPatentDataInGroup or ReqGetAllPatentData.\n\nReqGetPatentsFromHandle(string handle, int sindex, int eindex)\n\nReturns: list of patents, search handle\n\nDescription: Receives a handle. From that handle, gets the patents from sindex to eindex (where sindex and eindex are relative to the handle). The handle is generated by ReqGetPatents or ReqGetAllPatents\n\nReqGetPatentsWithBibInfo(patentList list)\n\nReturns: list of patents with their bibliographic information\n\nDescription: Given a list of patents (specified by list), returns a list of patents with their bibliographic information.\n","Commands Processed by the Grouping Module ","ReqGetGroupHierarchy( )","Returns: group hierarchy information","Description: Retrieves information about the hierarchical structure of the groups stored in the databases .","ReqAddDocGroup(groupParentID, groupID)","Returns: nothing","Description: Adds an existing group (specified by groupID) as a child to another group (specified by groupParentID).","ReqRemoveDocGroup(groupParentID, groupID)","Returns: nothing","Description: Unlinks a group (specified by groupID) from its parent group (specified by groupParentID). If the group has no parent, the group is deleted.","ReqUpdateDocGroupProperties(group)","Returns: updated group","Description: Update group properties (such as description and title) of the group specified by the passed parameter.","ReqNewDocGroup(groupParentID, group)","Returns: new group","Description: Create a new group (corresponding to the group passed parameter) on the enterprise server  as a child of another group (specified by groupParentID).","ReqDocsInGroup(groupID)","Returns: list of document names","Description: Get the list of documents in the group specified by the passed parameter.","ReqAddDocListToGroup(groupID, documentList)","Returns: nothing","Description: Add a list of existing documents (specified by documentList) to the group specified by groupID.","ReqAddPatents(string groupID, patentList pList)","Returns: nothing","Description: Add the list of patents (specified by pList) to the group specified by groupID.","ReqRemoveDocListFromGroup(groupID, documentList)","Returns: nothing","Description: Remove a list of documents (specified by documentlist) from the group specified by groupID.","ReqRemovePatents(string groupID, patentlist pList)","Returns: nothing","Description: This is similar to ReqRemoveDocListFromGroup. This removes a list of patents (specified by pList) from the group specified by groupID.","ReqNewGroupWithSearchPatents(parentID, grp, handle)","Returns: group","Description: Creates a new group specified by grp under the parent group specified by parentID with documents\/patents from a persistent result set generated by ReqSearchRelevant. The persistent result set is specified by handle.","Commands Processed by the Notes Module ","ReqCreateNote(noteID, text, reference)","Returns: created note","Description: Create a new note on the enterprise server . The identifier of the new note is noteId, the text (or pointer to any type of data in any form) or content of the note is specified by text, and linkage information is specified by reference. The linkage information specifies the document and the portion within the document to which the new note is linked.\n\nReqUpdateNote(noteID, text, reference)\n\nReturns: updated note\n\nDescription: Update a note (specified by noteID) on the enterprise server  with new text (specified by text) or reference (i.e., linkage information specified by reference).\n\nReqAddNoteListToDoc(groupID, documentID, noteList)\n\nReturns: nothing\n\nDescription: Add a list of notes (specified to noteList) to a document (specified by documentID) in a group specified by groupID. groupID is used for security purposes (i.e., to ensure that the operator has the proper security level to add the notes to the document).\n\nReqRemoveNoteListFromDoc(groupID, documentID, noteList)\n\nReturns: nothing\n\nDescription: Remove a list of notes (specified by noteList) from a document (specified by documentID) in a group (specified by groupID). groupID is used for security purposes (i.e., to ensure that the operator has the proper security level to remove the notes from the document).\n\nReqNotesOnDoc(groupID, documentID)\n\nReturns: nothing\n\nDescription: Get all notes associated with a document (specified by documentID) in a group (specified by groupID). groupID is used for security purposes (i.e., to ensure that the operator has the proper security level to retrieve the notes associated with the document).\n\nAddGroupNote(groupID, gnote)\n\nReturns: A group note\n\nDescription: Adds a new group note represented by gnote to the group identified by groupID. Updates the note if it already exists.\n\nAddPatent Note(groupID, note)\n\nReturns: note\n\nDescription: Adds a new patent note represented by the parameter note to the group identified by groupID. Updates the note if it already exists.\n\nGetGroupNotes(groupID)\n\nReturns: returns group notes\n\nDescription: Retrieves all group notes associated with the group identified by groupID.\n\nGetPatent Notes(groupID)\n\nReturns: returns patent notes\n\nDescription: Retrieves all patent notes associated with the group identified by groupID.\n\nRemoveGroupNote(groupID, groupNoteID)\n\nReturns: nothing\n\nDescription: Removes the group note with groupNoteID from the group specified by groupID.\n\nRemovePatent Note(groupID, noteID)\n\nReturns: nothing\n\nDescription: Removes the patent note with NoteID from the group specified by groupID.\n\nUpdateGroupNote(gnote)\n\nReturns: a group note\n\nDescription: Updates an existing group note.\n\nUpdatePatent Note(note)\n\nReturns: a patent note\n\nDescription: Updates the properties of an existing note.\n\nAddNoteSegment(noteID, noteseg)\n\nReturns: a note segment\n\nDescription: Add given note segment represented by noteseg to a patent note identified by noteID.\n\nGetGroupNotesMatchingString(groupID, search)\n\nReturns: List of notes\n\nDescription: Return group note identifiers of notes in a group (specified by groupID) that contain the search string (represented by the search parameter).\n\nGetNoteSegments(noteID)\n\nReturn\/Description: Get and return all note segments associated with the given patent note specified by noteID. Also return their location information.\n\nGetNoteSegmentsMatchingString(groupID, search)\n\nReturns: List of note segments\n\nDescription: Return note segment identifiers of notes in a group (specified by groupID) that contain the search string (represented by the search parameter).\n\nGetPatentLocations(groupID, patentName)\n\nReturns: patent location list\n\nDescription: Returns all patent locations attached to the patentName.\n\nLinkNoteSegment(noteSegmentID, location)\n\nReturns: nothing\n\nDescription: Links note segment to location in a patent.\n\nUnlinkNoteSegment(noteSegmentID)\n\nReturns: nothing\n\nDescription: Unlinks note segment from location in patent.\n\nUpdateNoteSegment(noteseg)\n\nReturns: note segment\n\nDescription: Updates an existing note segment.\n\nRemoveNoteSegment(noteID, noteSegmentID)\n\nReturns: nothing\n\nDescription: Removes note segment specified by noteSegmentID from a patent note specified by noteID.\n","Commands Processed by the Searching Module ","ReqSearch(searchParameters, startIndex, endIndex)","Returns: list of search results, search handle","Description: Execute a search based on searchParameters, retrieve search results from startIndex to endIndex in result table.","ReqRetrieveSearchResult(searchHandle, startIndex, endIndex)","Returns: list of documents","Description: Retrieve search results of previously executed search (identified by searchHandle) from startIndex to endIndex in result table. Also implemented as ReqRetrieveSearchRelevantResult(string handle, int sindex, int eindex).","ReqSearchHighlights(searchHandle, documentID)","Returns: list of text offsets for highlighting","Description: Retrieve search hit information for a particular document (specified by documentID) so that search term highlighting can be performed on the document. The search is specified by searchHandle.","ReqSearchBib(spSearchParameters s, int sindex, int eindex)","Returns: list of search results, search handle","Description: Executes a search based on SearchParameters, retrieves search results from startIndex to endindex in result table, where the search results include the bibliographic information of the documents identified by the search.","ReqSearchRelevant(ReqRetrieveSearchRelevantResult(searchType, searchOrder, query, sindex, eindex, minRelevance)","Return: search results with bibliographic information","Description: Performs a search on either the repository patents, all patents, or patents not in the repository (selected by searchType) using the search parameters. Returns the results sorted by field specified in searchOrder. Only return results that have a relevance number greater than minRelevance. Gets the results from row sindex to row eindex. Also returns a handle that identifies the persistent result set on the enterprise server in order to get more patents from the result set.\n\nReqRetrieveSearchRelevantResult(handle, sindex, eindex)\n\nReturns: List of patent bibliographic information, and a search handle\n\nDescription: Retrieves portions of a persistent search result set generated by ReqSearchRelevant and identified by handle, from row sindex to row eindex.\n","Commands Processed by the Analysis Modules ","ReqFunction(function, level, PatExp1, PatExp2, PatTerm1, PatTerm2, GroupID)","Returns: Results generated by performing the function specified by the function passed parameter","Description: Performs the function specified by the function passed parameter. The function passed parameter can identify any function performed by the enterprise server , such as Patent Mapping, Patent Aging, Patent Citation, Inventor Employment Information, and Patent Count. Level specifies the number of levels in the group hierarchy to drill down. PatExp1 and PatExp2 specify two dates (a time range) that designate a search scope based on patent expiration (see ). PatTerm1 and PatTerm2 specify two dates (a time range) that designate a search scope based on patent term remaining (see ). GroupID identifies a group for which the function is performed.\n\nReqAnalysis Citation (documentID, direction, levels)\n\nReturns: patent\/child table and patent bibliographic information table\n\nDescription: Performs a patent citation function for a patent identified by documentID. Either a forward or a backward citation function is performed, as identified by the direction parameter. A multilevel citation function can be performed. The number of levels is specified by the levels parameter. For a detailed description of the operation of the enterprise server  when processing the ReqAnalysis Citation command, see step  (), discussed below.\n","Client\/Server Interaction",{"@attributes":{"id":"p-0458","num":"0645"},"figref":"FIG. 101","b":["306","304","314","10106","304","306","306","304","314","314","304","310","306"]},"In step , the security module  and the server configuration module  (see ) in the Enterprise Server  determine whether or not the client , , or the user who is using the client , , is authorized to issue the command. More particularly, the security module  determines whether or not the client ,  or user has the appropriate security privileges with respect to the target information in the databases  (that is, the information in the databases  that will be accessed if the requested function is performed by the enterprise server ). The server configuration module  determines whether or not the client ,  or user has access to the requested function (i.e., has the client ,  or user been configured to access the requested function?). If the client ,  or user is authorized to issue the command, then step  is performed. Otherwise, the enterprise server  does not honor (does not perform) the command (an appropriate message or exception may be sent back to the client , ).","In step , the command dispatch module  in the enterprise server  routes the command and the information to the appropriate enterprise server module. These enterprise server modules are described above.","In step , the enterprise server module performs the requested function.","In step , the Enterprise server  sends the results of the command to the client , . In the case of the web client , the web server  translates the results received from the enterprise server  to the language supported by the web client  (preferably HTML), and then forwards these translated results to the web client  over the network . This network may be a local area network or a wide area network (it can even be a global network).","In step , modules in the client ,  operate to display the results to the user, and also operate to enable the user to manipulate, process, and otherwise utilize the results.",{"@attributes":{"id":"p-0464","num":"0651"},"figref":"FIG. 7","b":["701","304","306","304","306","314","314","304","306","408","314","316"]},"The corresponding module in the clients ,  receives these results and presents them to the user, and enables the user to work with and manipulate the results. For example, the client document storage and retrieval module  presents to the user the information retrieved by the document storage and retrieval module  in the enterprise server .","The process just described is an iterative one, as represented by control arrow .","The interaction between the web clients  and the enterprise server , and the network clients  and the enterprise server , is further described with reference to .  generically depicts the interaction between the enterprise server  and the clients , . A client ,  (either a web client  or a network client ) sends, for example, a ReqSearch command to the enterprise server . The searching module  in the enterprise server  processes the ReqSearch command, and returns a handle (pointer) to the search results plus a list of documents from startIndex to endIndex. The client ,  then issues a ReqRetrieveSearchResult in order to obtain the search results. The searching module  processes the ReqRetrieveSearchResult, and returns a list of documents.",{"@attributes":{"id":"p-0468","num":"0655"},"figref":["FIGS. 82 and 83","FIG. 82"],"b":["314","306","314","304","314","306","306","314","408","306"]},{"@attributes":{"id":"p-0469","num":"0656"},"figref":["FIG. 83","FIG. 83"],"b":["314","304","304","310","314","304","310","304","310","304","304"]},"Patent-Centric URL Commands","The interaction between the enterprise server  and the web clients  shall now be more particularly described.",{"@attributes":{"id":"p-0472","num":"0659"},"figref":["FIG. 151","FIG. 151","FIG. 8","FIG. 151","FIG. 8"],"b":["314","304","304","314","304","314"]},"As discussed above, the web client  preferably includes a browser , which can be any commercially available browser, such as (but not limited to) those available from Netscape, Microsoft, IBM, SUN, Novell, etc. In an embodiment of the invention, the browser  issues URL (Uniform Resource Locator) commands in order to access and retrieve data from the databases  via the enterprise server .","The general format of URL commands is well known, and is presented in  for the convenience of the reader. A URL command  includes a protocol field , a destination field , and a command field .","The protocol field  specifies the protocol that is to be used in transporting the URL command  from its source to its destination. Example protocols include HTTP and FTP (file transfer protocol).","The destination field  specifies the destination of the URL command . For example, the destination field  may include information that identifies the server (such as the enterprise server ) from whom information is being requested from.","The Command field  stores information representing a command or an action or an identification of requested data. The effect of the URL command  is to request that the entity identified by the destination field  perform the command or action specified in the command field .","According to the invention, the commands inserted into the command field  are patent-centric or patent-specific. Accordingly, the URL commands generated by the present invention are patent-centric, or patent-specific.","In practice, HTML data representative of a web page is transferred to the browser  in the web client  upon connection with the Enterprise server . The browser  processes this received HTML data and, as a result, displays a web page. HTML processing is well known. Examples of web pages are shown in . An operator at the web client  enters information into the fields of the web page.","For example, with reference to , an operator could enter an inventor name into the inventor field  of web page . The information entered by the operator represents a search string. After receiving an appropriate user command (which the user issues by pressing the Search button , for example), the browser  in accordance with the software associated with the displayed web page  generates one or more URL commands. These URL commands include the information entered by the operator into the fields of the displayed web page . In other words, these URL commands include the search string entered by the operator. These URL commands are directed to the enterprise server , and request the enterprise server  to conduct one or more searches of the databases  in accordance with the operator-supplied search string.","Referring again to , a translator  in the Web server  receives the URL commands from the browser  in the web client . The translator  converts the URL commands to Enterprise server API commands. These Enterprise server API commands are received and processed by the Enterprise server . The Enterprise server API commands are discussed above.","According to an embodiment of the present invention, the URL commands sent from the browser  in the web client  to the translator  in the Web server  conform to a patent-centric URL command language. Accordingly, the URL commands sent from the browser  to the translator  represent patent-centric URL commands.","The patent-centric URL command language of the present invention essentially represents an API (Application Programming Interface) of the Web server . The patent-centric URL command language of the present invention includes the following patent-specific commands that are inserted in the command field  of URL commands. It should be understood that the following is a representation of the types of commands that can be placed into the command field  of URL commands according to the invention. The invention can support other patent-centric\/specific commands. Thus, the following is provided for purposes of illustration, not limitation.",{"@attributes":{"id":"p-0484","num":"0671"},"tables":{"@attributes":{"id":"TABLE-US-00005","num":"00005"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0","pgwide":"1"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"231pt","align":"left"}}],"thead":{"row":{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["Command:","Search"]},{"entry":["Description:","This command is used to instruct the enterprise server 314 to"]},{"entry":[{},"perform a search or to retrieve more results from a previous"]},{"entry":[{},"search."]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"1","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"49pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"182pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["Parameters:","scope","Identifies the patents or documents that should be"]},{"entry":[{},{},"searched, such as all patent\/documents in"]},{"entry":[{},{},"bibliographic databases 602, all patents\/documents"]},{"entry":[{},{},"in the document databases, etc."]},{"entry":[{},{},"numberSpecific patent (document) number to search for, if the"]},{"entry":[{},{},"operator specified such a search"]},{"entry":[{},"title","Specific patent\/document title to search for, if the"]},{"entry":[{},{},"operator specified such a search"]},{"entry":[{},"inventor","Specific inventor name to search for, if the"]},{"entry":[{},{},"operator specified such a search"]},{"entry":[{},"assignee","Specific assignee name to search for, if the"]},{"entry":[{},{},"operator specified such a search"]},{"entry":[{},"class","USPTO class\/subclass to search for, if the operator"]},{"entry":[{},{},"specified such a search"]},{"entry":[{},"udk","user defined keyword to search for, if the operator"]},{"entry":[{},{},"specified such a search"]},{"entry":[{},"datesearchtype","Equals 1 if date search criteria is BEFORE,"]},{"entry":[{},{},"AFTER, or ON;"]},{"entry":[{},{},"Equals 2 if date search criteria is"]},{"entry":[{},{},"BETWEEN"]},{"entry":[{},{},"(if the operator specified a date search)"]},{"entry":[{},"datequalifier","set equal to one of: AFTER, BEFORE, or ON"]},{"entry":[{},{},"(i.e., modifies the datasearchtype when"]},{"entry":[{},{},"datesearchtype is equal to 1)"]},{"entry":[{},{},"(if the operator specified a date search)"]},{"entry":[{},"date1","date for BEFORE, AFTER, or ON"]},{"entry":[{},{},"(if the operator specified a date search)"]},{"entry":[{},"date2","first date of BETWEEN"]},{"entry":[{},{},"(if the operator specified a date search)"]},{"entry":[{},"date3","second date of BETWEEN"]},{"entry":[{},{},"(if the operator specified a date search)"]},{"entry":[{},"abstractquery","search string for abstract, if the operator specified"]},{"entry":[{},{},"such a search"]},{"entry":[{},"fulltextquery","search string for full text, if the operator specified"]},{"entry":[{},{},"such a search"]},{"entry":[{},"showtitle","flag to show title in search results"]},{"entry":[{},"showdate","flag to show date in search results"]},{"entry":[{},"showinventor","flag to show inventor in search results"]},{"entry":[{},"showassignee","flag to show assignee in search results"]},{"entry":[{},"showudk","flag to show udk (user defined keyword) in search"]},{"entry":[{},{},"results"]},{"entry":[{},"orderby","Specifies ordering preference; one of:"]},{"entry":[{},{},"RELEVANCE, PATENT NUMBER, etc."]},{"entry":[{},"guid","contains the GUID (globally unique identifier) of a"]},{"entry":[{},{},"search results table (generated by a prior search)"]},{"entry":[{},{},"that is potentially still on the enterprise server 314"]},{"entry":[{},"begin","beginning part of a hitlist range displayed to the"]},{"entry":[{},{},"user"]},{"entry":[{},"end","ending part of the hitlist range displayed to the user"]},{"entry":[{},"rel","a generic \u201ccatchall\u201d field. Used to deal with"]},{"entry":[{},{},"characteristics of HTML. Possible values include:"]},{"entry":[{},{},"NEXT, PREVIOUS, FIRST, LAST,"]},{"entry":[{},{},"GET_RESULTS_IN_FILE, and SKIM_IMAGES."]},{"entry":[{},"total","total number of hits"]},{"entry":[{},"numberpage","number of hits to be displayed per page"]},{"entry":{"@attributes":{"namest":"1","nameend":"3","align":"center","rowsep":"1"}}}]}}]}},"br":{}},"An operator defines a search using, for example, the patent search screen  of . The web client  generates a patent-centric URL command that contains a search command in the command field . The parameters of the search command reflect the search defined by the operator. For example, if the operator defined a search based on patent number and PTO class, then the number and class parameters of the search command would be filled in.","For a new search, the begin parameter is equal to 0, indicating that the enterprise server  should return the search results beginning from record 0 (of the search results). The numberpage parameter indicates to the enterprise server  the number of items to return search results on. For example, if the numberpage parameter equals 10, then the enterprise server  returns information on 10 search results items, starting with the first item (where begin is equal to 0).","In a new search, the total parameter is returned by the enterprise server , and represents the number of search hits. This value of the total parameter is then returned to the enterprise server  in any subsequent, related search commands (to obtain additional search results, for example). The browser  receives the search results provided by the enterprise server  and displays the search results in a screen such as that shown in . The operator presses the navigation icons  to obtain additional search results. If the operator presses a Next icon , for example, a new URL command with the search command in the command field  is generated to obtain the next page of search results.","For this and any other subsequent, related search commands, the parameters (such as scope, search key terms, items to display, etc.) that define the search are the same as in the original search command. In this and subsequent related search commands, however, the GUID of the original search results is provided. The enterprise server  uses this GUID to access the original search results, if they are still available on the enterprise server  (they may have expired). If the original search results are not still available on the enterprise server , then the enterprise server  reexecutes the search.","In the case where the operator pressed the Next icon , the rel field is set equal to NEXT. If the operator pressed the Previous icon , the rel field is set equal to PREVIOUS. If the operator presses a Last icon , the rel field is set equal to LAST. If the operator pressed a First icon , the rel field is set equal to FIRST.","In the case where the operator pressed the Next icon , the begin field is set to 0. The enterprise server , upon receipt of this command, identifies the next page of search results to send to the web client . The enterprise server  does this by adding the value of the numberpage to the value of begin. The result of this addition operation identifies the first record in the search results to send to the web client . Starting from this value, the enterprise server  sends numberpage items to the web client . Thus, where the begin field is equal to 0, and the numberpage is equal to 10, the enterprise server  sends records 10-19 of the search results to the web client .","Suppose that the operator again presses the Next icon . In the resulting search command, the begin field is set to 10 (this is done by software associated with the link associated with the Next icon  in the display  in ). The enterprise server , upon receipt of this command, sends numberpage items to the web client  starting from begin plus numberpage. Thus, where the begin field is equal to 10, and the numberpage is equal to 10, the enterprise server  sends records 20-29 of the search results to the web client .","If rel is equal to GET_RESULTS_IN_FILE, then the enterprise server  returns HTML data to the web client . The web client  prompts the operator for a file name, and then saves this data in the file identified by the file name.","If rel is equal to SKIM_IMAGES, then the enterprise server  returns information that identifies two frames (or windows or panes). The enterprise server  supplies, for one of the frames, information that identifies a file in the enterprise server . This file stores a list of the search results. The web client  issues a URL command to retrieve this file from the enterprise server . The web client  then displays the list of the search results into this first frame. For the second frame, the enterprise server  provides information that identifies the location of the image of the first item in the search results. The web client  issues a URL command to retrieve this image (or a portion of the image, like the portion of the image corresponding to the first page of the document) from the enterprise server . The web client  then displays this image in the second frame. This two frame display is shown, for example, in .","In the above description, the enterprise server  is described as interpreting the URL commands generated by the web client . In practice, according to a preferred embodiment of the invention, the translator  in the web server  translates the URL commands to commands in the enterprise server API language. The enterprise server  then processes these enterprise server API commands as discussed herein. Such translation is described below.",{"@attributes":{"id":"p-0495","num":"0682"},"tables":{"@attributes":{"id":"TABLE-US-00006","num":"00006"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0","pgwide":"1"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"217pt","align":"left"}}],"thead":{"row":{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["Command:","GetText"]},{"entry":["Description:","This command instructs the enterprise server 314 to retrieve and"]},{"entry":[{},"return the text of a patent. Preferably, the web server 310 returns"]},{"entry":[{},"the entire text of the patent to the web client 304. However, the"]},{"entry":[{},"following additional parameters are used for text\/image"]},{"entry":[{},"synchronization purposes (i.e., when the operator switches"]},{"entry":[{},"between displaying text and displaying images)."]},{"entry":["Parameters:","section Image files can contain multiple sections. The first section"]},{"entry":[{},"is the image of a patent. Subsequent sections contain post-"]},{"entry":[{},"issuance documents, such as a certificate of correction."]},{"entry":[{},"This parameter describes the specific section desired from"]},{"entry":[{},"the image file and is used to help synchronize text and"]},{"entry":[{},"image display. Specifically, suppose that the operator is"]},{"entry":[{},"viewing an image. Then the operator elects to view text,"]},{"entry":[{},"such that a GetText command is generated. In the section"]},{"entry":[{},"and page parameters of this GetText command, the section"]},{"entry":[{},"and page of the image being viewed (when the GetText"]},{"entry":[{},"command is generated) is stored. Thus, if the operator"]},{"entry":[{},"then elects to switch back to viewing the image, the"]},{"entry":[{},"invention can identify which image to display by reference"]},{"entry":[{},"to the values stored in these section and page parameters."]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"175pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"page","Sections are decomposed into pages. This"]},{"entry":[{},{},"parameter keeps track of the page."]},{"entry":[{},"currentview","One of SPLIT_SCREEN or FULL_SCREEN."]},{"entry":[{},{},"This parameter identifies the current display mode,"]},{"entry":[{},{},"and is used by the invention to identify icons that"]},{"entry":[{},{},"should be active and inactive. For example, if"]},{"entry":[{},{},"currentview is equal to SPLIT_SCREEN, then any"]},{"entry":[{},{},"split screen icons are greyed out, to indicate that"]},{"entry":[{},{},"they are inactive."]},{"entry":[{},{},"numberIdentifies the document to retrieve (such as a patent"]},{"entry":[{},{},"number)"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"217pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["Command:","GetImage"]},{"entry":["Description:","This command instructs the enterprise server 314 to retrieve and"]},{"entry":[{},"return the image of a patent. Parameters are the same as described"]},{"entry":[{},"for GetText: section, page, and currentview. Section and page"]},{"entry":[{},"identify which image to retrieve."]},{"entry":["Command:","GetSplitScreen"]},{"entry":["Description:","This command returns two views of a patent, one of the text and"]},{"entry":[{},"one of the image. Number identifies the document whose text is"]},{"entry":[{},"retrieved and displayed. Section and page identify the image"]},{"entry":[{},"which is retrieved and displayed. In an embodiment, the enterprise"]},{"entry":[{},"server 314 returns information on two side-by-side frames (or"]},{"entry":[{},"panes or windows). For one of the windows, the enterprise server"]},{"entry":[{},"314 provides a GetText command (or equivalent enterprise server"]},{"entry":[{},"API command, which is then translated to the GetText command),"]},{"entry":[{},"to return the text corresponding to the document identified by"]},{"entry":[{},"number. In the other window, the enterprise server 314 provides"]},{"entry":[{},"a GetImage command (or equivalent enterprise server API"]},{"entry":[{},"command, which is then translated to the GetImage command), to"]},{"entry":[{},"return the image corresponding to section and page. The web"]},{"entry":[{},"client 304 then executes these GetText and GetImage command"]},{"entry":[{},"to retrieve this information from the enterprise server 314."]},{"entry":["Parameters","numberThe number of the patent"]},{"entry":[{},"section same as GetText"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"175pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"page","same as GetText"]},{"entry":[{},"currentview","same as GetText"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"217pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["Command:","GetAbstract"]},{"entry":["Description:","This command instructs the enterprise server 314 to return the"]},{"entry":[{},"abstract and predefined bibliographic fields of the patent (or other"]},{"entry":[{},"document) specified by the number parameter."]},{"entry":["Parameters:","numberPatent (document) number"]},{"entry":["Command:","GetTextOrAbstract"]},{"entry":["Description:","This command instructs the enterprise server 314 to return the text"]},{"entry":[{},"of a patent as specified by the number parameter, if available (if in"]},{"entry":[{},"the document databases 612); otherwise, it returns the abstract of"]},{"entry":[{},"the patent and some other predefined bibliographic fields."]},{"entry":["Parameters:","numberPatent (document) number"]},{"entry":["Command:","OrderPatents"]},{"entry":["Description:","This command, when executed, generates a message representing"]},{"entry":[{},"an order form to order electronic copies of the patents specified in"]},{"entry":[{},"the parameter list. This message is then sent to a third party"]},{"entry":[{},"provider, or sent to a party within the customer corporate entity"]},{"entry":[{},"who will take the message and then order electronic copies of the"]},{"entry":[{},"patents."]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"1","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"175pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["Parameters:","item0","first patent in the list"]},{"entry":[{},"item1","second patent in the list"]},{"entry":[{},"item2","third patent in the list"]},{"entry":[{},". . ."]},{"entry":[{},"itemN","Last item in the list."]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"217pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["Command:","GetCitationTree"]},{"entry":["Description:","This command instructs the enterprise server 314 to perform a"]},{"entry":[{},"patent citation function for a patent identified by the number"]},{"entry":[{},"parameter. Either a backward or forward function is performed,"]},{"entry":[{},"as indicated by the direction parameter. The number of levels"]},{"entry":[{},"for the citation function is specified by the levels parameter."]},{"entry":[{},"GetCitationTree maps to ReqAnalysisCitation, described above."]},{"entry":[{},"For a detailed description of the operation of the enterprise"]},{"entry":[{},"server 314 when processing the ReqAnalysisCitation command,"]},{"entry":[{},"see step 15806 (FIG. 158), discussed below."]},{"entry":["Parameters:","numberIdentifies a patent"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"175pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"direction","Identifies either a backward or forward citation"]},{"entry":[{},{},"function"]},{"entry":[{},"levels","Identifies the number of levels for the citation"]},{"entry":[{},{},"function."]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"2","align":"center","rowsep":"1"}}]}]}}]}}},"Translation","As described above, the translator  in the web server  translates between patent-centric URL commands and enterprise server API commands (see ). Such translation according to an embodiment of the invention is shown in the following table. Other translations between patent-centric URL commands and enterprise server API commands are possible.",{"@attributes":{"id":"p-0498","num":"0685"},"tables":{"@attributes":{"id":"TABLE-US-00007","num":"00007"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"98pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"119pt","align":"left"}}],"thead":{"row":[{"entry":"TABLE 4"},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}},{"entry":["Patent-centric URL command",{}]},{"entry":["language","Enterprise Server API language"]},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}}]},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["search","ReqSearchRelevant or"]},{"entry":[{},"ReqSearch"]},{"entry":["GetText","ReqTxt"]},{"entry":["GetImage","ReqCanPage"]},{"entry":["GetSplitScreen","Returns data that includes"]},{"entry":[{},"representations of a GetText"]},{"entry":[{},"command and a GetImage"]},{"entry":[{},"command (as described above)."]},{"entry":[{},"GetText corresponds to ReqTxt,"]},{"entry":[{},"and GetImage corresponds to"]},{"entry":[{},"ReqCanPage."]},{"entry":["GetAbstract","ReqSearchBib"]},{"entry":["GetTextOrAbstract","In the web client or the translator,"]},{"entry":[{},"this command is translated to"]},{"entry":[{},"GetText (corresponding to ReqTxt)."]},{"entry":[{},"If GetText is not successful, then"]},{"entry":[{},"GetAbstract is issued"]},{"entry":[{},"(corresponding to ReqSearchBib)."]},{"entry":[{},"See FIG. 152."]},{"entry":["OrderPatents","None"]},{"entry":["GetCitationTree","ReqAnalysisCitation"]},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}}]}}}}},"Client Architecture",{"@attributes":{"id":"p-0500","num":"0687"},"figref":["FIG. 114","FIG. 10"],"b":["306","304","304"]},"The User Interface layer  may be based on various well known user interfaces. The user interface layer in the web client  preferably processes HTML data. The user interface layer  in the network client  preferably uses MFC, or the Microsoft Foundation Class Library. In some embodiments, the user interface layer  is built using multi-platform enabled languages, such as Java.","The client modules  are shown in , and are described elsewhere herein.","The transaction management layer  implements the specific business-related operations of the invention. These operations include creating a group or changing the security permissions of the group (this could alternatively be done by the domain layer ). The transaction management layer  interacts with the client modules  to perform these functions.","The domain layer  includes all of the objects that are required to properly implement a patent-centric decision support system. These objects in the domain layer  represent the business and other high level intelligence of the client , , and enables the client ,  to work with business rules, notes, analysis modules, etc.","Supporting the domain layer  is a broker layer  that provides for sophisticated brokering and caching of objects in the client , . The broker layer  is responsible for managing the communication between the domain layer  and the server layer . This decouples the domain layer  from the enterprise server  and provides for maximum flexibility in the implementation of different enterprise servers .","The caching subsystem  of the broker layer  provides a means for objects to be cached on the client ,  after they have been retrieved from the enterprise server . The caching subsystem  enables the client ,  to manage an infinite number of objects obtained from the enterprise server  by only storing those objects that have been most recently used. In an embodiment of the invention, the client ,  utilizes a demand paging algorithm. In an embodiment of the invention, caching only takes place on the network client .","A demand paging algorithm according to an embodiment of the invention is represented by a flowchart  shown in . Preferably, the present invention utilizes a two-level demand paging methodology. The first level of the demand paging methodology is performed by the Caching subsystem  in the client , , and is represented by steps  in flowchart . The second level of the demand paging methodology is performed by the Enterprise server , and is represented by steps  in the flowchart .","In step , the Cache subsystem  receives a request for data from a requester (the requester is typically an upper layer in the architecture). This data request is described herein as being a request for patent data. However, the discussion described herein applies to both patent and non-patent data.","At this point, it would be useful to describe an example of how a data request is generated. Consider an example console user interface  shown in  ( is further described below). A group hierarchy  is shown in a first pane  of the console user interface . Patents contained within a selected group of the group hierarchy  are listed (with their bibliographical information) in a second pane . In the example shown in , a repository group  is selected. Accordingly, the patents in the repository group  are listed (along with their bibliographical information) in the second pane  of the console user interface .","In a preferred embodiment of the invention, at any given time, all of the information pertaining to the patents in the repository  is not stored in the client , . Instead, only a portion of the information pertaining to the patents in the repository  are stored in the client ,. Preferably, the client ,  retrieves data from the databases  as it needs it.","For example, 13 patents are currently listed in the second pane . The client ,  need only store information on these 13 listed patents. In practice, however, at any given time the client ,  may store information on more than the patents being displayed in the second pane . More generally, at any given time, the client ,  may store information on more than the patents being processed, analyzed, displayed, etc., at the client , . However, the client ,  does not store all of the data from the repository  (unless, for some reason, the client ,  is processing all of that data). Also, during a session with the enterprise server , the client ,  does not discard information that it has received from the enterprise server , even when the information is no longer being used at the client , . In other embodiments, the client ,  discards unused data received from the enterprise server  in order to make room for additional data.","The client , retrieves information from the enterprise server  by sending a data retrieval request to the Caching subsystem . The Caching subsystem  receives this request in step .","Further in step , the Caching subsystem  identifies from the data retrieval request the patent and the portions of the patent that are being requested. Preferably, in the present invention, a patent has multiple parts or portions. These parts include the patent bibliographic information, the patent (equivalent) text file, and the patent image file. A given data retrieval request may be requesting any or all of these portions of the patent. In step , the Caching subsystem  identifies from the data request which patent is being requested, and also which portions of the patent are being requested. For reference purposes, the patent that is being requested is called the identified patent, and the portions of the identified patent that are being requested are called the identified portions.","In step , the Caching subsystem  determines whether the identified portions of the identified patent are already stored in the local cache. For purposes of the present invention, the local cache is represented by the main memory  in the client , . In alternate embodiments of the invention, the local cache is represented by cache memory in the client ,.","If the identified portions of the identified patent are currently in the local cache, then in step  the Caching subsystem  retrieves those identified portions of the identified patent from the local cache and returns them to the requester. Operation of flowchart  is then complete, as indicated by step .","If, in step , the Caching subsystem  determines that the identified portions of the identified patent are not in the local cache, then step  is performed. In step , the caching subsystem  sends a message to the Enterprise server  to request retrieval of the identified portions of the identified patent from the databases .","As should be clear by the above description of steps , , , and , the caching subsystem  in the client , operates according to a caching methodology in which some data is stored in the local cache. When retrieving data, the Caching subsystem  first looks in the local cache to determine whether the requested data is located in the local cache. If the data is not found in the local cache, then the Caching subsystem  requests the data from the Enterprise server .","This caching methodology performed by the Caching subsystem  in the client , represents a first level caching methodology according to the present invention. As mentioned above, the Enterprise server  performs a second level caching methodology. This second level caching methodology shall now be described.","In step , the Enterprise server  receives the message from the client ,. The Enterprise server  determines whether the identified portions of the identified patent (as indicated in the received message) are currently stored in the local cache of the Enterprise server . The local cache of the Enterprise server  is represented by the Main memory  of the Enterprise server . In an alternative embodiment, the local cache of the Enterprise server  is represented by Cache memory in the Enterprise server .","If the identified portions of the identified patent are located in the local cache of the Enterprise server , then in step  the Enterprise server  retrieves the identified portions of the identified patent from its local cache, and sends this retrieved data to the client ,.","If, in step , the Enterprise server  determines that the identified portions of the identified patent were not located in its local cache, then in step  the Enterprise server  retrieves the identified portions of the identified patent from the databases . The Enterprise server  then in step  returns this retrieved data to the client ,. The operation of flowchart  is complete after the performance of step , as indicated by step .","As described above, in an embodiment of the invention, the Enterprise server  retrieves and returns only the identified portions of the identified patent. In some cases, the Enterprise server  instead returns data representative of a plurality of patents, where such data includes the identified portions of the identified patent. This is called the bulk or cluster retrieval mode of the invention.","Consider again . As described above, as the operator scrolls through the patents listed in the second panel  of the console , the caching subsystem  sends requests to the Enterprise server  to retrieve additional patent data for display in the second panel . When responding to such requests involving the console , the Enterprise server  preferably returns patent data representative of a plurality of patents. Specifically, the Enterprise server  returns data representative of a patent cluster.","A patent cluster represents a given number of patents. In an embodiment of the invention, the number of patents in a patent cluster is equal to 50, but this value is tuneable, and this value may be different for different contexts of the invention. When operating according to the cluster or bulk mode, the Enterprise server  in step  determines whether the identified portions of the identified patent are in a cluster that is stored in the local cache of the Enterprise server . If the identified portions of the identified patent are in a cluster stored in the Enterprise server , then in step  the Enterprise server  sends data representative of this cluster of patents to the client , . If, instead, the Enterprise server  determines in step  that the identified portions of the identified patent are not in a cluster currently stored in the Enterprise server , then the Enterprise server in step  retrieves data representative of the cluster from the databases . The Enterprise server  then, in step , sends this retrieved information to the client , .","Supporting both the domain layer  and the broker layer  is the persistence mapping layer . The persistence layer  is responsible for managing all interactions between the domain layer  and a specific persistent storage device (not shown in ). This decouples the domain objects from a particular physical representation, and enables various performance optimizations to be made.","Supporting all aspects of the client ,  is the abstract server interface . This layer  presents a logical server to the other layers of the client , . It is important to note that all interactions between the client ,  and the enterprise server  take place using a high-level, patent-centric set of business decision system command objects. These command objects represent atomic transactions between the client ,  and the enterprise server . These commands (or command objects) allow the client ,  to communicate with the enterprise server  in a manner that decouples the client ,  from any specific physical implementation of the enterprise server . For example, the enterprise server  could be running MS-DOS and storing objects in a flat file, or be running Unix and storing objects in Informix. As long as the enterprise server  responds to the set of command requests presented by the client ,  through the abstract server interface , the client ,  will work correctly. These commands represent the Enterprise server API commands.","The abstract server interface  communicates to make a physical connection to the enterprise server . This is done through the network transport layer , which is responsible for taking command objects and transmitting these command objects over a suitable communications network. The network transport layer  also manages appropriate context information that is needed to manage a network connection. The network transport layer : (a) does not require the physical presence of a network\u2014it is possible to run the client ,  and enterprise server  on the same physical machine and still have the system used properly; and (b) does not require the use of any specific network, even though one implementation of the system will be based on HTTP (HyperText Transport Protocol).","Additionally, general features of the architecture of  are described in Luke Hohmann, , Prentice Hall PTR, New Jersey, 1997, which is incorporated herein by reference in its entirety.","Databases","Referring to , some of the databases  are described in detail below. In particular, the document bibliographic databases , the group databases , the person databases , the employee databases , the security databases , the financial databases , and the methodology support databases  are described in detail below. Both the database structure and the methodology for extract and load of these databases are described below. The document databases , in particular the patent database , and the notes databases  are not described below since they are thoroughly covered in U.S. Pat. No. 5,623,681, U.S. Pat. No. 5,623,679, pending application Ser. No. 08\/341,129, and pending application Ser. No. 08\/590,082, all of which are incorporated by reference herein.","The database structures of the document bibliographic databases , the group databases , the person databases , the employee databases , the security databases , the financial databases , and the methodology support databases  are shown in . These figures also depict the interaction and connection between these databases.  illustrates the preferred orientation of  with respect to one another.","It should be understood that the tables and attributes shown in  only represent one embodiment of the present invention. The data in the databases  could be stored using other combinations of tables and attributes. Such other combinations of tables and attributes will be apparent to persons skilled in the relevant arts based on the discussion contained herein. Accordingly, the tables and attributes are shown in  only for purposes of illustration, and not limitation.",{"@attributes":{"id":"p-0532","num":"0719"},"figref":["FIG. 45","FIG. 95"],"b":["316","9502","316","316"]},"In step , the customer provides data  for upload into the databases  being processed. The customer provided data  is pertinent to the databases . For example, if the databases  are intended to store financial information, then the customer provided data  would comprise financial information of interest to the customer, including possibly both the customer's financial information and financial information of competitors.","In step , a filter  modifies the format of the customer provided data  to conform to the database format of the databases . The structure and operation of database filters, such as filter , are well known.","In step , the formatted customer provided data is loaded into the databases . More particularly, the formatted customer provided data  is loaded into a portion of the databases , called a first part  of the databases . Remaining portions of the databases , called the second part  of the databases , cannot be loaded using only the formatted customer provided data . Instead, loading of the second part  may require other information  pertinent to the databases . Additionally, loading of the second part  may require analysis of such additional information  in conjunction with the information in the first part  of the databases . Such analysis is performed by operators  with, potentially, the assistance of the system of the invention.","Accordingly, in step , other information  pertinent to the databases  is obtained.","In step , methodology reports  are run, as needed. Such methodology reports  represent the result of automatic processing and analysis of the databases  with other tables in the databases . Such automatic processing and methodology reports are performed and generated by the enterprise server , and is described in detail below.","In step , operators  analyze the customer provided data  in the first part  of the databases . The operators  may also analyze the other information . In performing this analysis, the operators  may refer to the methodology reports  run in step . Since these methodology reports  were prepared by the enterprise server , the system of the invention assists the operators  in performing this analysis. Based on the analysis of the operators , additional database information for the databases  is generated.","In step , this additional database information is loaded into the second part  of the databases . The databases , at that point, are fully loaded. Periodically, the steps of flowchart  must be repeated in order to update the databases  with additional and\/or modified customer provided data  and\/or additional and\/or modified other information .","In an alternate embodiment of the invention, data is not preloaded into the invention's databases. Instead, the invention accesses the customer's corporate databases for data on an as needed basis. This alternate embodiment is described below with respect to the BOM databases , but are applicable to the other tables in the databases  as well.","Document Bibliographic Databases",{"@attributes":{"id":"p-0542","num":"0729"},"figref":["FIGS. 12B-12F","FIG. 6"],"b":["12","602","602","604","604","604"]},"The patent bibliographic databases  include a patent table  (). The patent table  includes a record for each U.S. and foreign patent represented in the patent bibliographic databases . Each record in the patent database  includes a document_id attribute that stores a unique identifier (or key) for the associated patent. It is noted that, in the tables of the databases , the symbol FK stands for foreign key, AK stands for alternate key, and IE stands for inversion entry (which is a non-unique index).","Each record of the patent database  also includes attributes that, for the most part, correspond to the bibliographic information on the first page of U.S. patents. In an embodiment of the invention, each record of the patent database  includes attributes that, for the most part, correspond to the bibliographic information contained in the electronic representations of U.S. patents publicly available from the U.S. Patent and Trademark Office.","For example, a record in the patent database  includes a document_number attribute that stores a patent number  (see the example patent in ). In an entry of the patent database , the AppNo attribute corresponds to the application number , the AppDate corresponds to the filing data , the title corresponds to the title of the patent , the issue date corresponds to the date that the patent issued , the NumClaims corresponds to the number of claims in the patent , the AsstExaminerLastName corresponds the last name of the assistant examiner , the AsstExaminerFirstName corresponds to the first name of the assistant examiner , the PrimaryExaminerLastName corresponds to the last name of the primary examiner , and the PrimaryExaminerFirstName corresponds to the first name of the primary examiner .","Also in each record of the patent database , the NumDrawingPages corresponds to the number of drawing sheets , the disclaimer date corresponds to any terminal disclaimer  (), the ReissueLevel, ReissueAppNo, ReissueAppDate, ReissuePatentNo, and ReissueIssueDate corresponds to any reissue information , , and  ().","Each record of the patent database  also includes attributes that correspond to patent bibliographic information not shown on the front page of U.S. patents. For example, a record of the patent database  also includes a SeriesCode that corresponds to the series code of the patent. Other information contained in each record of the patent database  and not shown on the front page of the U.S. patent is the AppType, PubLevel, ArtUnit, ExemplaryClaimNo, NumFigures, NumSpecPages, TermYears, and IntlEdition. Each record of the patent database  may also include fields whose values are calculated during the loading phase. For example, each record of the patent database  may include a calc_exp_date that corresponds to the expiration date of the patent. This date is calculated and loaded into the patent database  during the load phase of the patent database  (described below). calc_exp_date and issue date are collectively referred to as patent term expiration related information.","Each record of the patent database  also includes one or more user_defined fields. Users may enter any information into this field. The amount of information that can be entered into this field is relatively large, such as 32 kbytes or greater. This field is preferably indexed searchable. The user can enter into this field information that is specific and\/or of interest to his company. For example, a user may enter into this field its own matter or reference\/tracking number.","Additionally, the invention allows operators to add any number of additional user defined fields, both into the patent database  and into any other table of the databases . The fields must be of certain predefined types, such as date fields, string fields, numeric fields, etc. The user can define the name of these fields and the types of these fields (from a number of available field types). Preferably, these fields are indexed and searchable.","The record in the patent table  corresponding to a particular patent is herein called the base record for the patent (because this record in the patent table  includes most of the bibliographical information about the patent). The patent bibliographic databases  include other tables that store additional patent bibliographic information about each patent represented in the patent bibliographic databases . Records in these other tables are linked to their respective base records in the patent database  via the document_id attribute.","An assignee table  () includes information on the assignees of a patent, if any. A given patent may have multiple assignees. For each assignee of a patent, there is a record in the assignee table . These assignee records in the assignee table  are linked to the corresponding base record in the patent table  via the document_id attribute. Each record of the assignee table  includes an assignee_id attribute which is an identifier that uniquely identifies the assignee. Each record of the assignee table  also includes information pertaining to the assignee, such as country information, state information, the name of the assignee, and the city and zip code of the assignee. This information is found on the front page of U.S. patents (see field  in ). In each entry of the assignee table , the country and state of the assignee as preferably specified using codes. These codes are defined in a state table  and a country table  ().","An intlclass table  () stores information pertaining to the international class of a patent and the international search classes of the patent. For a given patent, the intlclass table  includes a record for each international class to which the patent is assigned. Additionally, the intlclass table  includes a record for each international search class which was searched during the prosecution of the patent. Whether a record in the intlclass table  corresponds to an international class or an international search class is denoted by the attribute is_search_class. This attribute is set to true if the record corresponds to an international search class. Referring to , the international class is identified by reference number . Not all patents have international search classes, and this is the case with the patent shown in . The records in the intlclass table  are linked to the associated base record in the patent table  via the document_id attribute.","The patent_class_xref table  () includes information on the U.S. classification of a patent. For a given patent, the patent_class_xref table  includes an entry for the original classification of a patent. The patent_class_xref table  also includes an entry for each unofficial classification of the patent, and each digest classification of the patent. Whether or not a record in the patent_class_xref table  corresponds to the original classification is denoted by an original attribute. Whether or not an entry in the patent_class_xref table  corresponds to an unofficial classification or a digest classification is designated by a patent_class_type_id code, whose values are defined by a patent_class_type table . Records in the patent_class_xref table  are linked to the corresponding base record in the patent table  via the document_id attribute.","A patent class\/subclass is stored in a record of the patent_class_xref table  using the patent_class_id attribute, the subclass_id attribute, and the suffix_id attribute. Consider the following class\/subclass: 364\/419.19. For this example, the patent_class_id is equal to 364. The subclass_id is equal to 419. The suffix_id attribute is equal to 19. By breaking the class\/subclass into these three fields, it is possible to fine tune searches and direct searches to any combination of the class, subclass, or subclass suffix.","The patent_class_id attribute is actually a code. The same is true of the subclass_id and the suffix_id attributes. These patent class codes are defined in a patent_class table  ().","A RelatedApp table  () stores information on applications which are related to a patent. For a given patent, the RelatedApp table  includes a record for each application that is related to the patent. Related application data is shown, for example, in  at reference number . Records in the RelatedApp table  are linked to the associated base record in the patent table  via the document_id attribute. An entry in the RelatedApp table  includes attributes to store the serial number of the related application, the filing date of the related application, the status of the related application, and the patent number and issue date of the related application, if the related application issued as a patent. Each entry of the RelatedApp table  also includes a grammarcode attribute that stores a code corresponding to such text as \u201ccontinuation of\u201d, \u201ccontinuation-in-part,\u201d \u201cwhich is a continuation-in-part of\u201d. These grammar codes are found in the electronic representations of U.S. patents publicly available from the U.S. Patent and Trademark Office.","A LegalRepAttor table  includes information on the attorney or agent who prosecuted the patent. Such information is shown in  at reference number . There is a record in the LegalRepAttor table  for each attorney or agent who prosecuted and is listed on the front page of the patent. Records in the LegalRepAttor table  are linked to the corresponding base record in the patent table  via the document_id attribute.","Referring to , a PatentRef table  stores information on U.S. patents that were cited during the prosecution of a given patent. The PatentRef table  includes a record for each U.S. patent that was cited during the prosecution of a given patent. Such reference to U.S. patents are shown, for example, in  at reference number . Each record of the PatentRef table  includes a RefPatent No attribute that represents the patent number of the reference patent. Each record of the PatentRef table  also includes attributes that store the issue date of the reference patent, the first named inventor of the reference patent, and the class\/subclass of the reference patent. Records in the PatentRef table  are linked to the corresponding base record in the patent table  using the document_id attribute.","Referring now to , a SearchClass table  stores information on U.S. classes and subclasses which were searched during the prosecution of a patent. For any given patent, the SearchClass table  includes a record for each class\/subclass that was searched during the prosecution of the patent. U.S. search class information is shown, for example, in  at reference number . Records in the SearchClass table  are linked to the corresponding base record in the patent table  via the document_id attribute.","The inventor table  includes information on the inventors of a patent. The inventor table  includes a record for each inventor of a given patent. Records in the inventor table  are linked to the corresponding base record in the patent table  via the document_id attribute. Inventorship information is shown, for example, in  by reference number . Each record in the inventorship table  includes an inventor id attribute that stores a key that uniquely identifies the inventor. Each record of the inventorship table  also includes attributes to identify the first and last name of the inventor, the address of the inventor, and the state and country of the inventor. The state and country values are specified by the state_id and the country_id attributes, which are codes. The state and country codes are defined in the state table  and the country table , respectively ().","Referring now to , the LegalRepFirm table  includes information on the law firm that prosecuted the patent. There is one record in the LegalRepFirm table  for each law firm that prosecuted the patent and that is shown on the front page of the patent. This law firm information is shown, for example, in  by reference number . Records in the LegalRepFirm table  are linked to the corresponding base record in the patent table  via the document_id attribute.","The PatCoopTreaty table  stores information on a PCT application, in those cases where the U.S. patent was first filed as a PCT application. Such PCT information is shown, for example, in  at reference number . Records in the PatCoopTreaty table  are linked to the corresponding base record in the patent table  via the document_id attribute.","The priority table  includes priority information related to the patent. Such priority information is shown, for example, in  at reference number . Records in the priority table  are linked to the corresponding base record in the patent table  by using the document_id attribute.","Referring now to , the ForeignRef table  includes information on foreign references that were cited during the prosecution of the patent. Such citations of foreign references are shown, for example, in  at reference number . For a given patent, the ForeignRef table  includes a record for each foreign reference that was cited against the patent. Each record of the ForeignRef table  includes a ForeignPatent No attribute that corresponds to the patent number of the foreign reference. Each record of the ForeignRef table  also includes attributes that store information identifying the issue date of the foreign patent, the country of the foreign patent, and U.S. and international classes.","Referring again to , the document bibliographic databases  include other bibliographic databases corresponding to documents that are of interest to the customer. In the example of , the document bibliographic databases  include deposition bibliographic databases , pleadings bibliographic databases , and prior art bibliographic databases . These databases may be of interest to the customer if, for example, the customer is involved in a patent litigation. Examples of the database structure of the deposition bibliographic databases , the pleadings bibliographic databases , and the prior art bibliographic databases  are shown in . A depositions table  corresponds to the deposition bibliographic databases . The depositions table  includes a record for each deposition-related document that is of interest to the customer. Each record in the depositions table  includes a document_id attribute that is a key that uniquely identifies the document. Each record of the depositions table  also includes other bibliographic information about the deposition-related document, such as a deposition_id attribute that stores an identifier that identifies the deposition document. Each record of the depositions table  may also include other bibliographic information such as the date that the deposition took place, the parties involved in the deposition, the number of pages of the deposition transcript, the place that the deposition took place, a summary of the deposition, etc.","A pleadings table  corresponds to the pleadings bibliographic databases . The pleadings table  includes a record for each pleadings-related document that is of interest to the customer. Each record of the pleadings table  includes a document_id attribute that stores a key that uniquely identifies the pleadings-related document. Each record of the pleadings database  may also include other bibliographic information, such as a pleadings_id attribute. The pleadings table  may include other attributes, such as attributes that identify the author of the pleadings, the date that the pleadings were created, the subject matter of the pleadings, the number of pages of the pleadings, the parties involved in the pleadings, the title of the pleadings, the type of the pleadings, etc.","The prior_art table  corresponds to the prior art bibliographic databases . There is a record in the prior_art table  for each prior art reference that is of interest to the customer. Each reference of the prior_art table  includes a document_id attribute that uniquely identifies the prior art reference. Each record of the prior_art table  also includes other attributes, such as a prior_art_id attribute, and attributes to store information identifying the author of the prior art reference, the publication date of the prior art reference, the title of the prior art reference, the subject matter of the prior art reference, the number of pages of the prior art reference, etc.","Still referring to , a document table  represents a table of the methodology support databases  (). The document table  represents a master index of all of the documents represented in the document bibliographic databases . The document table  has a record for each document represented in the patent bibliographic databases , the deposition bibliographic databases , the pleadings bibliographic databases , the prior art bibliographic databases , and any other bibliographic databases in the document bibliographic databases . Each record of the document table  includes a document_id attribute that is a key that uniquely identifies a document. The document_id attribute is a common attribute in the document bibliographic databases , and serves to link the tables in the document bibliographic databases  together. Each record of the document table  also includes a document_type attribute that identifies the type of the document (for example, whether the document is a patent, a deposition-related document, a pleadings-related document, a prior art-related document, etc.). Each record of the document table  also includes a document_guid attribute that serves as a second identifier for the document, and a version_number attribute that identifies the version of the document.","The document bibliographic databases  shall now be further described with reference to an example shown in .  illustrates an example patent table X. For simplicity, the example patent table X only shows the document_id attribute and the document_number. The patent table X stores therein bibliographic information on documents D-D, each of which corresponds to a patent.",{"@attributes":{"id":"p-0570","num":"0757"},"figref":"FIG. 14","b":["1225","1225","15","17"]},{"@attributes":{"id":"p-0571","num":"0758"},"figref":"FIG. 15","b":["1224","1224","18","21"]},{"@attributes":{"id":"p-0572","num":"0759"},"figref":"FIG. 16","b":["1226","1226","22","23"]},{"@attributes":{"id":"p-0573","num":"0760"},"figref":["FIG. 17","FIGS. 13-16"],"b":["1223","1223","1222","1225","1224","1226","1223","1","23","1223"]},"The preferred procedure for loading the document bibliographic databases  shall now be described.",{"@attributes":{"id":"p-0575","num":"0762"},"figref":["FIG. 46","FIG. 96","FIG. 46"],"b":["604","9602","4602","604"]},"In step , the patent text file  and the patent image file  of the patent being processed is received. For U.S. patents, electronic text and image files of patents are available from the U.S. Patent and Trademark Office. Similarly, text and image files corresponding to foreign patents are available from foreign patent offices.","In step , an error detection and correction module  in a parser  analyzes the patent text file  and detects any errors in the bibliographic data contained in the patent text file . The error detection and correction module  detects many types of errors. For example, an error which is detected by the error detection and correction module  involves the issue date. With regard to patent text files  received from the U.S. Patent Office, the issue date appears in the following format:\n\n","Thus, the issue date information is set off by the ISD token. This token is followed by four digits representing the year, two digits representing the month, and two digits representing the day. The error detection and correction module  detects errors in the date given known date ranges. For example, the error detection and correction module would identify the following as an error:\n\n","The error detection and correction module  would detect this as an error, since the year value is out of range. The error detection and correction module  operates in this manner to detect all date-related errors.","Another error which the error detection and correction module  detects involves state information and zip code information. The error detection and correction module  correlates the state information and zip code information contained in the patent text file  to determine if the zip code is possibly incorrect given the state, and vice versa. Such processing is possible, since each state is associated with a finite set of zip codes.","Another error which the error detection and correction module  detects involves the patent number. The patent number of a U.S. patent comprises seven digits. The error detection and correction module  confirms that the patent number has seven digits, and detects an error if it does not. The error detection and correction module  performs a similar function for non-U.S. patents, and other types of patent documents, such as reissues, reexams, etc.","The patent number of a reissued patent has the token RE followed by five digits. The error detection and correction module  detects an error if the patent number of a reissued patent does not follow this format.","The detection performed by the error detection and correction module  also involves street addresses. The error detection and correction module  detects a possible error if the street address has no alphabetic characters, or has no space characters, or has no digit characters. Similarly, the error detection and correction module  detects a possible error with the city name if the information in the patent text file  corresponding to a city name has no alphabetic characters.","The error detection and correction module  performs additional error correction with regard to U.S. states by comparing information corresponding to U.S. state names from the patent text file  with a list of the U.S. state abbreviations used by the U.S. Patent Office. If the state information does not match one of the state abbreviations, the error detection and correction module  detects an error.","Similarly, the error detection and correction module  detects errors with information in the patent text file  corresponding to country abbreviations by comparing such country information from the patent text file  with the list of country codes utilized by the U.S. Patent and Trademark Office (and any other appropriate foreign patent office).","The error detection and correction module  also checks to ensure that mandatory data is contained in the patent text file . Some bibliographic fields in the patent text file  are mandatory, while others are optional. For example, the patent text file  must contain document type information that identifies whether the patent is a utility patent, a design patent, a plant patent, a defensive publication, etc. In contrast, the patent text file  may or may not include assignee information, since a patent does not have to have an assignee. The error detection and correction module  checks for mandatory information, and detects an error if mandatory information is not contained in the patent text file .","Many fields in the patent text file  must be in a proper format. Some of these fields were already discussed above, such as the patent number and date. Other fields which must be in a certain format are classes and subclasses, and dates. The error detection and correction module  determines whether this information from the patent text file  is in the proper format, and detects an error if they are not.","Also in step , the error detection and correction module  automatically corrects the errors that it detects, where such automatic correction is possible. For example, given the patent number, the error detection and correction module  can estimate the issue date. If the error detection and correction module  detected an error with the issue date, then the error detection and correction module  can attempt to automatically correct the error in the issue date based on the patent number (assuming that the patent number was found to contain no errors).","If the error detection and correction module  cannot automatically correct the errors that it detected, then the error detection and correction module  notifies an operator . The operator  then manually corrects the error.","The error detection and correction module  also detects for errors in the information in the patent text file  corresponding to assignees. The same company can be listed as assignee in different patents using different names. For example, IBM can be listed as the assignee in patents using various different names, such as IBM; International Business Machines; IBM, Inc.; etc. The error detection and correction module  includes a thesaurus feature that lists the most commonly used names for well-known companies. The error detection and correction module  compares the assignee name from the patent text file  with this thesaurus and replaces the assignee information in the patent text file  with the name retrieved from the thesaurus. Alternatively, the name retrieved from the thesaurus may be written to an appropriate user-defined field of the bibliographic databases .","In step , a formatting module  in the parser  formats the error detected and corrected patent text file . This formatting is performed in order to convert the format of the patent text file  to the format of the patent bibliographic databases . Such formatting includes formatting performed with respect to patent numbers. The required formats for different types of patents are presented in Table 4, below. It is noted that Table 4 is not a complete list, but just an illustrative one. Other types of patents (applicable in both the U.S. and foreign countries) could also be processed by the formatting module .",{"@attributes":{"id":"p-0592","num":"0781"},"tables":{"@attributes":{"id":"TABLE-US-00008","num":"00008"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"126pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"63pt","align":"left"}}],"thead":{"row":[{"entry":[{},"TABLE 4"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"2","align":"center","rowsep":"1"}}]},{"entry":[{},"Type of Patent","Format"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"2","align":"center","rowsep":"1"}}]}]},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"Utility patent","7"]},{"entry":[{},"Design patent","D6"]},{"entry":[{},"Plant patent","PP5"]},{"entry":[{},"Utility SIR","H7"]},{"entry":[{},"Design SIR","HD6"]},{"entry":[{},"Plant SIR","HP6"]},{"entry":[{},"Defensive publication","T6"]},{"entry":[{},"X patent","X7"]},{"entry":[{},"Additional improvements patent","AI4"]},{"entry":[{},"Non-patent literature","NP6"]},{"entry":[{},"Reissued utility patent","RE5"]},{"entry":[{},"Reissued design patent","RD5"]},{"entry":[{},"Reissued plant patent","RP5"]},{"entry":[{},"Reissued X patent","RX5"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"2","align":"center","rowsep":"1"}}]}]}}}}},"The formatting module  confirms that the information in the patent text file  corresponding to patent numbers corresponds to the formats shown in Table 4. If the format is not as shown in Table 4, the formatting module  modifies the patent text file  so that the patent number conforms with the format of Table 4. For example, consider the format of a plant patent, which is a token PP immediately followed by five digits. Assume that the information in the patent text file  was as follows: PP-11111 (for illustrative purposes, spaces are indicated as dashes). This patent number is not in the proper format because five digits do not immediately follow the PP token. Instead, there is a space between the PP token and the five digits. Accordingly, the formatting module  modifies the patent text file  so that the patent number is in the proper format. In the example above, the formatting module  deletes the space between the PP token and the five digits.","In step , the parser  generates a corrected and normalized patent text file  from the error detected and corrected, and formatted patent text file . The corrected and normalized patent text file includes both the text from the patent text file  and the error detected and corrected, and formatted patent bibliographic information from the patent text file .","When generating the corrected and normalized patent text file , the parser  may take into consideration other patent information . The parser  may modify the information from the patent text file  with this other patent information  when generating the corrected and normalized patent text file . For example, a patent is sometimes reassigned to another company after it issues. The new assignee, however, is not indicated on the front page of the patent (because the patent was published before the reassignment took place). Often, patent reassignment information is in the assignment records of the U.S. Patent and Trademark Office (if such information was recorded with the USPTO). Such assignment records may constitute part of the other patent information . The parser  in generating the corrected and normalized patent text file  may take into account such assignment information when generating the corrected and normalized patent text file. For example, the parser  may include a note in the corresponding record of the corrected and normalized patent text file  that the patent has been reassigned, and indicate the new assignee(s). This note may be, for example, in a field of the corrected and normalized patent text file  corresponding to the user defined attribute in the record of the patent table  ().","The patent bibliographic information in the corrected and normalized patent text file  is stored in normalized format. Preferably, this normalized format is a condensed, field delimited format. Essentially, in normalizing the patent bibliographic information from the patent text file , the parser  separates the patent bibliographic information into fields that correspond to the attributes in the patent bibliographic databases . These fields are delimited either using commas, tabs, or some other symbol.","For example, the format of a class\/subclass in the patent text file  is as follows: XCL---17-34-2 (for illustrative purposes, spaces are indicated as dashes). Therefore, in the patent text file , a class\/subclass is denoted by the token XCL, followed by two spaces. Three characters follow this token that correspond to the class. This is followed by three characters that correspond to the subclass. Finally, two characters follow the subclass. These two characters correspond to the suffix. In the corrected and normalized patent text file , this class\/subclass information is represented in a field delimited format, as follows: 17, 34, 2. This is a comma delimited format. In other embodiments, the corrected and normalized patent text file  uses a tab delimited format for the patent bibliographic information.","In step , the corrected and normalized patent text file  is used to regenerate the patent text file . The regenerated patent text file is designated by reference number . A comparison module  then compares the patent text file  with the regenerated patent text file . If the regenerated patent text file  differs from the patent text file , then the comparison module  determines that the parser  incorrectly generated the corrected and normalized patent text file  from the patent text file . If such an error is detected, then the comparison module  notifies an operator . It is noted that step  is optional.","Preferably, the corrected and normalized patent text file  represents an object-oriented framework. Generating the corrected and normalized patent text file  as a framework is useful because it can then be easily exported to a number of different formats, for later processing. Accordingly, in step , the corrected and normalized patent text file is stored in various formats for later retrieval. Such formats may include a human editable production format , and\/or a SPML format . It is noted that step  is optional.","In step , the corrected and normalized patent text file is paginated by a pagination module  to generate a patent equivalent text file . The patent equivalent text file  includes equivalency information that establishes an equivalency relationship between the text in the patent equivalent text file  and the image in the patent image file . For example, this equivalency information includes pagination information that enables the patent equivalent text file  to be displayed having the same pagination (line breaks, column breaks, page breaks) as the patent image file . The pagination module  generates the patent equivalent text file  by comparing the patent text in the corrected and normalized patent text file  with the patent image file  to detect equivalency information. This equivalency information is then embedded in the patent equivalent text file , along with the patent text. While the pagination module  is capable of performing the pagination operation automatically, in some cases some manual intervention is required. In accordance, an operator  is sometimes involved with the pagination process performed by the pagination module . The pagination process performed by the pagination module  is further described in U.S. Pat. No. 5,623,681, U.S. Pat. No. 5,623,679, and pending U.S. patent application Ser. No. 08\/341,129, all of which are incorporated by reference herein. It is noted that step  is optional.","In step , a patent bibliographic flat file  is generated from the corrected and normalized patent text file . The patent bibliographic flat file  includes the normalized patent bibliographic information from the corrected and normalized patent text file . Preferably, the patent bibliographic flat file  does not include the patent text. The patent bibliographic flat file  is generated using standard database utilities.","In step , the patent bibliographic information in the patent bibliographic flat file  is loaded into the tables of the patent bibliographic databases . This loading operation is performed by using standard database loading utilities.","After completion of step , the patent bibliographic information from the patent being processed is completely loaded into the patent bibliographic databases . The steps of flowchart  are repeated for each patent that is to be represented in the patent bibliographic databases .","Referring again to , the loading of the deposition bibliographic databases , the pleadings bibliographic databases , and the prior art bibliographic databases  (and any other bibliographic databases in the document bibliographic databases ) is conducted generally according to the methodology shown in  for U.S. patents. More generally, the extract and load for these bibliographic databases may be performed according to the methodology shown in , described above. The actual implementation of the extract and load methodologies for these bibliographic databases will necessarily be case specific and depend on a number of factors, including the bibliographic information contained in the source documents, the format of the source documents (that is, whether or not they are electronically stored, the storage format, how bibliographic data is represented in the storage format, etc.), etc. The extract and load processes for these other bibliographic databases will be apparent to persons skilled in the relevant art(s) based on the discussion contained herein.","Group Databases","The group databases  are described below. In particular, the structure of the group databases  and the methodologies for loading the group databases  with data are described in the following sections.","User Defined Groups",{"@attributes":{"id":"p-0608","num":"0797"},"figref":"FIG. 12I","b":["624","1227","1227","1227"]},"According to the present invention, groups are hierarchically organized. In other words, a given group can be a child of one or more parent groups, and can also be a parent to one or more child groups. This hierarchical organization is illustrated by way of example in , which is an example screen shot  displayed by the client grouping module  on the client display unit . This screen shot  includes a first window  and a second window . The first window  graphically depicts the hierarchical organization of the groups, both user-defined and predefined. The highest level group is called the root group, or repository. A BOM group is a child of the root group. The BOM group is a pre-defined group and is discussed below.","A user-defined group is also a child of the root group. The user-defined group has a number of child groups. These child groups are user-defined groups. In the example, the child groups are: companies to acquire, patents about bikes, and litigation. The companies to acquire user-defined group has a number of child user-defined groups. They include: ABC Corp., XYZ Corp., and PQR Corp.","The hierarchical structure of the user-defined groups is defined by information in a group_group_xref table  (). The group_group_xref table  includes a record for each parent\/child relationship in the user-defined group hierarchical structure. Each record of the group_group_xref table  includes a parent attribute and a group_id attribute. Both the parent attribute and the group_id attribute store group_id values. The parent attribute stores the group_id of the parent group, and the group_id stores the group_id of the child group.","The group_table database  and the group_group_xref table  shall be further described with reference to an example illustrated in .  illustrates an example group_table database X that includes information representative of the user-defined group hierarchical structure shown in . The example group_table database X in  has a record for each user-defined group shown in . Accordingly, there is an entry in the group_table database X for the following user-defined groups: companies to acquire, ABC Corp., XYZ Corp., PQR Corp., patents about bikes, and litigation. The group_id values of these user-defined groups are GRP-GRP, respectively. Note that the group_table database X has no information pertaining to the hierarchical structure of the user-defined groups. Instead, such information on the hierarchical structure of the user-defined groups is contained in the group_group_xref table .",{"@attributes":{"id":"p-0613","num":"0802"},"figref":"FIG. 20","b":["1229","1229","2002","1","2","2002","1229","2004","2006"]},"Referring again to , a user-defined group can contain any number of documents, such as patents. The documents in a group are considered to be relevant to the group. In practice, a user places the documents in a group.","A group_document_xref table  stores information that identifies the documents that are in each user-defined group. The group_document_xref table  includes a record for each document in each user-defined group. Each record of the group_document_xref table  stores a group_id attribute to identify the user-defined group, a document_id attribute to identify a document in that group, and a modification_date attribute that stores the date that the record in the group_document_xref table  was last modified.","The group_document_xref table  shall be further described with reference to an example shown in .  illustrates an example group_document_xref table X. The example in  indicates that documents D-D are in the user-defined group having the group_id of GRP (that is, the ABC Corp. group). Documents D and D are in the XYZ Corp. group; documents D and  are in the PQR Corp. group; documents D-D and D are in the patents about bikes group; documents D, D, D, D, D and D are in the litigation group.","Referring again to , note that the user has selected the ABC Corp. group in the window  (this is indicated by the dotted circle ). Selection of a group in window  results in a listing of the documents in the selected group being displayed in a window . Accordingly, a list including documents D-D is displayed in window . Other bibliographic information pertaining to these documents can also be displayed in window  in a tabular or \u201cspreadsheet\u201d format by retrieving such bibliographic information from the appropriate tables in the document bibliographic databases .","A user can view a document by double-clicking (or use any other well known GUI technique) on that document in the window . In the example of , the user has selected document D (indicated by dotted circle ). This results in the document being displayed in a window . The window  includes a window , where the text of document D is displayed, and\/or a window , where the image of document D is displayed. The example of window  where text and images of a document are selectively displayed is more particularly shown in . An example of screen shot  where the user-defined group hierarchical structure is shown in one window  and a list of documents is displayed in another window  is more particularly shown in .","The procedures for initially loading the user-defined group databases  with data generally track the generic extract and load procedures illustrated in . Such an initial extract and load procedure will only be required if any user-defined groups exist prior to initiation of the enterprise server  for a particular customer. If the customer does not have any user-defined groups prior to initiating the enterprise server  for the first time, then the user-defined group databases  will be loaded with information as the user creates and modifies user-defined groups.","Predefined Group Databases","The predefined group databases  (also called system defined group databases) are described in the following sections.","Bill of Materials (BOM) Databases","A bill of materials (BOM) is a well-known data structure often used by companies to abstractly represent a product. A BOM is a hierarchical and recursive data structure that identifies the subassemblies of a product, and that identifies the parts of the subassemblies. Accordingly, a product's BOM is useful for recording the sub-assemblies and parts needed to construct the product. BOMs are also called herein BOM data structures, or BOM structures, or BOM trees.",{"@attributes":{"id":"p-0624","num":"0813"},"figref":["FIG. 22","FIG. 22"],"b":"2202"},"The frame, the two wheels, and the handle bar are subassemblies because they each are composed of one or more subassemblies or parts. For example, the frame subassembly includes a screw, which is a part. A part is defined as an item which does not have component parts separately represented in the BOM. Each of the two wheel subassemblies includes a rim and a tire, which are both parts. The handlebar subassembly includes a metal rod and two hand grips, all three of which are parts.","Although not indicated in the example of , a subassembly may be composed of any combination of parts and\/or subassemblies.","The BOM  in  includes a number of nodes, called BOM nodes. A node corresponds to each assembly (i.e., the bicycle node), each subassembly (i.e., the frame, wheel, and handle bar nodes), and each part (i.e., the screw, rim, tire, metal rod, and hand grip nodes).","In the context of and as applied by the present invention, each BOM node has a logical level in the hierarchical structure of the BOM. According to an embodiment of the invention, there are three BOM logical levels (although a customer can define others): assembly, subassembly, and part. Accordingly, the logical level of the bicycle node is assembly. The logical level of the frame, wheel, and handle bar nodes is subassembly. The logical level of the screw, rim, tire, metal rod, and hand grip is part.","In the invention, the reason for using logical levels is to enable enhanced reporting and analysis functions, such as the reporting functions described herein that are organized according to BOM logical level. As discussed above, an advantage of predefined groups is that their structure and attributes are better defined and more extensive than user-defined groups. Accordingly, more extensive and more useful analysis and reporting functions can be developed for predefined groups.",{"@attributes":{"id":"p-0630","num":"0819"},"figref":["FIG. 23A","FIG. 23A"],"b":["2302","2302","2202","2302","2202","2302","2202","2302","2202","2302"]},{"@attributes":{"id":"p-0631","num":"0820"},"figref":["FIG. 23B","FIG. 22"],"b":"626"},"The BOM databases  are illustrated in . A BOM table  includes a record for each unique BOM node of each BOM of interest. Accordingly, each record in the BOM table  represents a BOM node in a BOM of interest to the customer.","The BOM table  includes entries for only unique BOM nodes of interest. Again referring to , the two wheel subassembly BOM nodes are not unique with respect to each other. Therefore, the BOM table  only includes a single record for the wheel BOM node. Similarly, the screw node in the BOMs of  represent the same physical part. Accordingly, the BOM table  only includes one record for the screw part.","Each record in the BOM table  includes a BOM_id attribute which stores a key that is unique to the associated BOM node. Each record of the BOM table  also includes a BOM_guid representing an alternate key of the record, a name attribute storing a name of the BOM node, a level_id attribute representing the logical level of the BOM node (that is, whether the BOM node represents an assembly, a subassembly, apart, etc.), a status_id attribute representing the status of the BOM node in the customer's business (that is, whether the part, subassembly, or assembly represented by the BOM node is in production, is discontinued, is contemplated for a future product, etc.), a creation_date attribute identifying the date that the record was created, a modification_date attribute indicating the date that the BOM record was last modified, and a version_number attribute identifying the version of the BOM record.","The level_id attribute is actually a code. The values of the level_id codes are defined in a BOM_level table . Similarly, the status_id attribute is a code whose values are defined in a BOM_status table .","As evident by the examples of , a BOM is a hierarchical and recursive structure, where each node in the structure may be a child of multiple parent nodes, and\/or may itself have multiple child nodes. Information pertaining to this BOM hierarchical structure is not contained in the BOM table . Instead, this information is contained in the BOM_BOM_xref table .","The BOM_BOM_xref table  includes a record for each parent\/child relationship in the BOMs represented in the BOM table . Each record of the BOM_BOM_xreftable  includes a parent_BOM_id attribute and a BOM_id attribute. The parent_BOM_id attribute stores the BOM_id of the parent BOM node, and the BOM_id attribute stores the BOM_id of the child BOM node. Each record of the BOM_BOM_xref table  also includes a sort_order attribute which specifies the order in which the records in the BOM_BOM_xref table  should be displayed or printed, when an appropriate command is received from the user. The value of the sort_order attribute is set to a default value, which is preferably 100. The user may change this value to any other number, either below or above 100. When printing or displaying the records of the BOM_BOM_xref table , such records are printed or displayed in ascending or descending order (as indicated in the user command) based on the sort_order attribute.","The BOM table  and the BOM_BOM_xref table  shall be further described by reference to examples shown in .  includes an example BOM table X and  illustrates an example BOM_BOM_xref table X. These tables in  store data corresponding to the example BOMs  and  shown in , respectively. Accordingly, the example BOM table X in  includes an entry for each BOM node in the bicycle BOM  and the lawnmower BOM . For simplicity purposes, only the BOM_id attribute and the name attribute are shown in the example BOM table X. Accordingly, the BOM table  includes an entry for the bicycle assembly, the bicycle frame subassembly, the screw part, the wheel subassembly, the rim part, the tire part, the bicycle handle bar subassembly, the metal rod part, the hand grip part, the lawnmower assembly, the lawnmower frame subassembly, the engine subassembly, and the lawnmower handle bar subassembly.","Information pertaining to the hierarchical structure of the bicycle BOM  and the lawnmower  is contained in an example BOM_BOM_xref table X shown in . The BOM_BOM_xref table X includes a record for each parent\/child relationship in the BOM tables  and . Accordingly, record  in the BOM_BOM_xref table X indicates that BOM node  is a child of BOM node . In other words, record  indicates that the bicycle frame node is a child of the bicycle node. Similarly, record  indicates that the screw node is a child of the bicycle frame node, record  indicates that the wheel node is a child of the bicycle node, record  indicates that the rim node is a child of the wheel node, and record  indicates that the tire node is a child of the wheel node. Further, record  indicates that the bicycle handlebar node is a child of the bicycle node; record  indicates that the metal rod node is a child of the bicycle handlebar node; record  indicates that the handgrip node is a child of the bicycle handlebar node; record  indicates that the lawnmower frame node is a child of the lawnmower node; record  indicates that the screw node is a child of the lawnmower frame node; record  indicates that the engine node is a child of the lawnmower node; record  indicates that the lawnmower handle bar node is a child of the lawnmower node; and record  indicates that the hand grip node is a child of the lawnmower handle bar node.","A BOM group represented in the BOM table  may contain any number of documents. Preferably, the documents in a BOM group include patents that map to the BOM group. In other words, the documents in a BOM group include patents that map to the product represented by the BOM node corresponding to the BOM group in the BOM table . As used herein, the term \u201cproduct\u201d refers to any assembly, subassembly, or part in a BOM.","A BOM_patent_xref table  stores information that identifies the documents in a BOM group. The BOM_patent_xref table  includes a record for each document in each BOM group. Each record of the BOM_patent_xref table  includes a BOM_id attribute that identifies the BOM group, and a document_id attribute that identifies the document that is in that BOM group.",{"@attributes":{"id":"p-0642","num":"0831"},"figref":["FIG. 26","FIGS. 24 and 25","FIG. 17"],"b":["1218","1218","1","2","1","2","1","2","1"]},"The preferred methodology for initially loading the BOM databases  is represented by a data flow diagram in  and a corresponding flowchart  in . In step , customer BOM data is received. Typically, a customer will have his own database that stores BOM data. In preparation for performing step , the customer exports the BOM data from his database into a computer file. This computer file is represented as the customer BOM data  in .","In step , a BOM filter  formats the customer BOM data  so as to conform with the format of the BOM databases . The formatting done by the BOM filter  may be minor or extensive, depending on whether, during the extract of the BOM data from the customer's databases, the customer was able to format the extracted data (represented as the customer BOM data ) in a format that closely matched the format of the BOM databases . Database filters, such as the BOM filter , for formatting data in preparation for upload to a database are well-known.","In some embodiments, the invention includes a filter that is specific to the database format of the BOM databases  (this is true for all filters discussed herein\u2014that is, the filters are specific to their respective databases). The structure and operation of this specialized filter will be apparent to persons skilled in the relevant art(s) based on the discussion herein, particularly the discussion of the database formats.","In step , the formatted customer BOM data  is loaded into a portion of the BOM databases . This portion is indicated as the first part  in . It is not possible to load the remaining parts of the BOM databases , indicated as the second part , using only the customer BOM data , since the customer BOM data  probably does not include the data attributes represented by the second part . For example, the customer BOM data  probably does not contain BOM logical level information or status information required by attributes in the BOM table . Additionally, the customer BOM data  will not include the patent mapping information (that is, an identification of which patents\/documents map to which BOM groups) required by the BOM_patent_xref table .","In step , data on the customer's products is obtained. This data is obtained from the customer, such as the customer's production department or R&D) department, and pertains to the status of the products (such as whether the products or parts are currently in production, whether they are contemplated for future production, whether they are discontinued, etc.).","In step , patent related information is obtained. This patent related information may include, for example, a list of the customer's patents, and a list of competitor patents. Bibliographic information on these patents are loaded into the patent bibliographic databases  in the manner described above, to the extent that the patent bibliographic databases  do not already include patent bibliographic information on these patents.","In step , operators  may run methodology reports which will be later used to aid in the analysis of the data gathered in prior steps. The methodology reports which may be run include a patent mapping report (described below). The patent mapping report may be incomplete due to the lack of information in the BOM databases . However, even an incomplete patent mapping report may be useful to aid in the analysis of the data.","In step , operators  analyze the customer BOM data , the product data , and the patent related information  to determine, for each BOM group, the BOM level, the BOM status, and the documents (that is, patents) that map to the BOM groups. For example, the operators  will analyze the BOM data and the product data to determine the status (that is, whether discontinued, in production, contemplated for future production, etc.) of the BOM node associated with each BOM group. Additionally, the operators  will analyze the customer BOM data  and the patent related information to identify patents which map to the BOM group (that is, patents which map to the products represented by the BOM nodes corresponding to the BOM groups).","In step , the information generated in step  is loaded into the appropriate attribute fields of the BOM databases  (i.e., the second part  of the BOM databases ).","The steps of flowchart  are periodically performed to update the BOM databases  with changes in BOMs, patents that map to BOMs, production changes, new products and features, etc.","In an alternate embodiment, the BOM databases  are not preloaded in the manner shown in  and discussed with reference to . Instead, referring to , BOM data is downloaded from a corporate BOM database  via a corporate BOM database management system  to the enterprise server  when needed. A translator  translates the customer BOM data from the format of the corporate BOM database  to the required format of the BOM databases  in the enterprise server .","It is noted that this alternative embodiment could also be used with the other tables of the databases .","The approach of  is advantageous because the enterprise server  is assured of receiving and, accordingly, processing the most up to date BOM data. The disadvantage of the approach in  is that, typically, analysis of a customer corporation takes a number of weeks. During that period of analysis, the BOM data should be stable. In other words, during the period of analysis, the analysis should be conducted on a snapshot of the customer's BOM data. The approach illustrated in  would not lend this stability, since the corporate BOM database  will no doubt change during the course of the analysis period. Accordingly, the enterprise server  when downloading BOM data from the corporate BOM database  will be working with different versions of the BOM data at different times. In contrast, the approach of  provide the desired stability of the BOM data during the analysis period.","BOM groups (and, in fact, any predefined group) can also be represented using user-defined groups as long as the operator is willing to abstract and map the BOM group attributes to the attributes supported by the user-defined groups. Such definition of BOM groups may be useful with BOMs that change frequently but core technologies change slowly, as in consumer products.","Corporate Entity Databases","A corporate entity is considered to be a predefined group because any number of documents can be associated with the corporate entity. These documents are preferably relevant and of interest to the corporate entity. For example, the documents could be patents that are owned, licensed, or otherwise of interest to the corporate entity.","The corporate entity databases  include information on the customer corporation, the corporations associated or affiliated with the customer corporation, and\/or corporations that are otherwise of interest to the customer corporation, such as the customer corporation's competitors or potential competitors.","The corporate entity databases  are shown in . A corporate_entity table  includes a record for each corporate entity of interest. In each record of the corporate_entity table  includes a corp_entity_id attribute that stores a key that is unique to the corporate entity. Each record of the corporate_entity database  also includes a corp_level_id attribute that specifies the level of the corporate entity in its respective corporate structure (it is noted that data pertaining to one or many corporate structures may be stored in the corporate_entity table ). Possible values of the corp_level_id attribute include parent corporation, subsidiary corporation, franchise, headquarters, etc. A name attribute stores the name of the corporate entity.","Information on the corporate structure is also stored in the corporate_entity table . In particular, each entry of the corporate_entity table  includes a parent_corp_entity_id attribute. This attribute stores the corp_entity_id of the immediate parent corporation of the corporate entity.","A sort_order attribute stores information that identifies the order in which the records of the corporate entity database  should be displayed or printed when requested by the user. The sort_order attribute is set to a default value of preferably 100. The user can change this value of the sort_order attribute. The records of the corporate_entity table  are displayed and printed according to the sort_order attribute in the records. In particular, the records of the corporate_entity table  are displayed or printed in ascending or descending order (specified by the user) of the sort_order attributes in the records.","The corp_level_id attribute is implemented as a code whose values are defined in a corporate_level database .","A primary_corp database  stores the corp_entity_id of the customer corporation. This primary_corp table  is referenced when the enterprise server  needs to identify who the customer is during analysis operations. For example, if the user requests a listing of all patents owned by the customer corporation, the enterprise server  refers to the primary_corp table  to identify who the customer is, and then refers to the corp_patents_xref table  (described below) to identify all patents owned by the corporate customer.","A corporate entity group represented in the corporate_entity table  can include any number of documents, such as any number of patents. Typically, the patents in a corporate entity group represent patents for which the corporate entity has some interest, such as patents owned by the corporate entity, patents assigned to the corporate entity, or patents that, for whatever reason, the corporate entity is analyzing. A corp_patent_xref table  stores information that identifies the documents contained in each corporate entity group. The corp_patent_xref table  includes a record for each document in each corporate entity group.","Each record of the corp_patent_xref table  includes a corp_entity_id attribute that identifies the corporate entity group, and a document_id attribute that identifies the document that is in the corporate entity group.","Each record of the corp_patent_xref table  also includes an ownership_id attribute and a relevance_id attribute. The ownership_attribute identifies the relationship of the document to the corporate entity. Possible values of the ownership_id attribute include owned, assigned, interested in, etc. The ownership_id attribute is implemented as a code whose values are defined by a patent_ownership table , and are ultimately under the control of (i.e., defined by) the customer.","The relevance_id attribute identifies the relevance of the document to the corporate entity. Preferably, the possible values of the relevant_id attribute are core and non-core. A relevance of core indicates that the patent (identified by the document_id) maps to an assembly, subassembly or part that is currently in production, or that is contemplated for future production, or for some other reason is important to the corporate entity. As discussed above, such assemblies, subassemblies and parts are represented in the BOM table  as BOM groups. A non-core relevancy value indicates that the patent either does not map to any assembly, subassembly or part of interest or that the patent maps to an assembly, subassembly, or part that is currently discontinued, or that, for whatever reason the corporate entity does not have great interest in the patent. The relevance_id attribute is implemented as a code whose values are specified in a relevance table , and are ultimately under the control of (i.e., defined by) the customer.","The corporate entity databases  shall be further described with reference to an example in . These figures correspond to an example corporate structure  illustrated in , wherein corp has two child corporations, corp and corp, and corp has a child corporation, corp. Corp is a competitor of Corp.",{"@attributes":{"id":"p-0670","num":"0859"},"figref":["FIG. 33","FIG. 33","FIG. 32"],"b":["1230","1230","1230","3304","1230","2","1","3306","3","1","3308","4","3"]},"Note that corp in  is not a part of the corporate structure that includes corp, corp, corp and corp. In the example of , corp is a competitor of corp.","The corporate_entity table X also includes a record  for corp . As indicated above, corp is a competitor of the customer corporation corp. Therefore, the example of  indicates that the corporate_entity table X includes a record for each corporate entity of interest including the competitors of the customer corporation corp.",{"@attributes":{"id":"p-0673","num":"0862"},"figref":["FIG. 36","FIG. 17","FIG. 35","FIG. 34"],"b":["1233","1","1","2","3","1234","1235","1","1","2","3","1"]},"The methodology for initially loading the corporate entity databases  shall now be described with reference to the data flow diagrams in  and the flowchart  in . In step , information on all corporate entities of interest is obtained. Such information includes compiling a list of the corporate entities of interest, determining their names, and determining their respective corporate structures. This information is represented in  as corporate entity data .","In step , a corporate entity filter  formats the corporate entity data  to conform to the format of the corporate_entity table . Database filters for formatting data prior to upload to a database are well known.","In step , the formatted corporate entity data  is loaded into a part of the corporate_entity table  (this portion is indicated as the first part  in ). It is possible that the corporate entity data  may include all the data necessary to load all of the fields of the corporate_entity database . In this case, the formatted corporate entity data  is also loaded into the second part  of the corporate_entity database . In other cases, however, the corporate entity data  will not include all of the information necessary to load all of the fields of the corporate_entity table , such as the parent_corp_entity_id attribute. In such cases, in step , an operator  analyzes the corporate entity data  and determines values for the corp_level_id attribute and the parent_corp_entity_id attribute, when necessary. This information is loaded into the remaining portion of the corporate_entity table  (this remaining portion is identified in  as the second part ).","In step , information on patents of interest which are not already represented in the patent bibliographic databases  is obtained. This information is loaded into the patent bibliographic databases  in the manner discussed above to the extent that it is not already represented in the patent bibliographic databases .","Referring to , this patent information that is of interest to the corporate entities represented in the corporate_entity table  is represented as patent information .","In step , operators  map patents to corporate entities. In particular, these operators  determine which patents are relevant to which corporate entities. This data is stored in the corporate_patent_xref table . In other words, the operators  determine which patents go into which corporate entity groups, and store this information in the corp_patent_xref table .","In step , the operators  and  run methodology reports, as needed, such as patent mapping reports. These reports will aid the operators  and  in performing the analysis of .","In step , the operators  and  identify the ownership relationship for each patent\/corporate entity pair specified in the corp_patent_xref table . In other words, for each record in the corp_patent_xref table , the operators  and  identify the ownership relationship between the corporate entity and the patent. Additionally in step , the operators  and  identify, for each record of the corp_patent_xref table , the relevance of the patent to the corporate entity. Relevance can be core, non-core, etc.","In step , this additional data generated in step  is stored in the appropriate fields of the corp_patent_xref table . These fields are presented by the second part  in .","The steps of flowchart  are periodically performed to update the corporate entity databases  to reflect changes in corporate structure, corporate acquisitions, corporate acquisition of patents, product line changes (that may change the relevance_id attribute), patent expirations (that would change the ownership_id attribute), etc.","Inventor, Employee, and Person Databases","An inventor is a predefined group because any number of patents can be associated with the inventor (i.e., patents where the person has been named an inventor). The inventorship databases  of the present invention preferably include information on the customer's past and present employee inventors, inventors of other companies, such as competitors, and inventors of any other patents of interest to the customer.","The inventor databases  are shown in . These inventorship databases  interact with the person databases  and the employee . The person and employee databases  and  are shown in .","In particular, the person table  represents the person databases . The person table  includes a record of each person of interest to the customer. These persons could be past and present employees of the customer, inventors of patents of interest to the customer, employees (past and present) of competitors, etc. Each record of the person table  includes a person_id attribute that represents a unique key of the person. Also included in each record of the person_id table  are attributes that store the first name, middle name, and last name of the person, and the preferred suffix (Mr., Mrs., Ms., Dr., etc.) of the person.","An employee table  is a table in the employee databases . The employee table  includes a record of each employee of interest (whether or not the employee is an employee of the customer or a competitor, or is a past or present employee). Each record of the employee database  includes a person_id attribute that identifies the person (from the person table ), and a corporate_entity_id attribute that identifies the corporate entity who is related to the person_id. There could be multiple entries in the employee table  for the same person, if the person worked for many corporate entities represented in the databases .","Each record of the employee table  further includes a job_function_id attribute that identifies the job function of the employee (for example, engineer, attorney, computer programmer, etc.), an employee_type_id that identifies the type of employee (such as part-time, full-time, etc.), an employee_status_id attribute that identifies the status of the employee (active, inactive, etc.), a start_date attribute and an end_date attribute that identify the period that the employee was employed by the corporate entity, and an employee_id attribute that indicates the employee's identification number within the corporate entity. The job_function_id attribute, the employee_type_id, and the employee_status_id attribute are preferably implemented as codes whose values are defined in an employee_job_func table , an employee_type table , and an employee_status table , respectively.","Referring to , a validated_inventor table  represents the inventor databases . The validated_inventor table  stores information that identifies the patents to which a person is a named inventor. In particular, the validated_inventor table  includes a record for each patent for which a person or employee is an inventor. Each record of the validated_inventor table  includes a person_id attribute that identifies a person, and a document_id attribute that identifies a patent with which the person is a named inventor. Each record of the validated_inventor table  also includes a corp_entity_id attribute that identifies a corporate entity. This corporate entity is the corporate entity that the person was associated with when the patent was filed or issued, or the corporate entity with whom the person was employed when the invention of the patent was invented. If the person was not employed by or associated with a company, this field is left empty.","The inventor databases , person databases , and employee databases  will now further be described with reference to the example shown in .  illustrates an example person table X. For simplicity purposes, only the person_id attribute is shown. As indicated by , there are five persons of interest to the customer.",{"@attributes":{"id":"p-0692","num":"0881"},"figref":["FIG. 38","FIG. 38"],"b":["1243","1","1","2","2","4","1","5","3"]},{"@attributes":{"id":"p-0693","num":"0882"},"figref":["FIG. 39","FIG. 39","FIG. 39"],"b":["1236","1","1","3","3","1","4","5","5","6"]},"The preferred methodology for initially loading the person databases , the employee databases , and the inventor databases  shall now be described with reference to the data flow diagrams in , and the flowcharts in .  corresponds to the extract and load procedures for the person databases  and the employee databases . In step , information on the customer's past and present employees of interest are obtained, preferably from the customer's HR (Human Resources) or personnel department. This data is represented in  as the customer provided person and employee data .","In step , information on other people of interest (such as inventors of patents of interest or employees of competitors) is obtained. Such information is represented in  as other person and employee data .","In step , a person filter  modifies the format of the customer provided person and employee data  and the other person and employee data  to match the format of the person databases  (that is, the person table ). Database filters for formatting data in preparation for database uploading are well-known.","In step , the formatted customer provided person and employee data  and the formatted other person and employee data  are loaded into the person databases  (that is, the person table ).","In step , an employee filter  formats the customer provided person and employee data  and the other person and employee data  to match the format of the employee databases .","In step , the formatted customer provided person and employee data  and the formatted other person and employee data  are loaded into the employee databases .","It is noted that in some cases, depending on the state of the data , , loading of the person databases  and the employee databases  may require the involvement of operators , .",{"@attributes":{"id":"p-0701","num":"0890"},"figref":"FIGS. 50 and 99","b":["628","1236","9906"]},"In step , bibliographic information on the patents obtained in step  is loaded into the patent bibliographic databases  to the extent that such information is not already stored in the patent bibliographic databases .","In step , operators  analyze the patent information  in conjunction with the person databases  and the employee databases  to map the patents obtained in step  to the persons represented in the person databases  and in the employee databases . In other words, in step , the operators  identify, for each person represented in the person databases  and in the employee databases , the patents where that person is a named inventor.","In step , the information generated in step  is modified by a validated inventor filter  to place the information in a form conforming with the format of the validated_inventor table . Such formatted information is then loaded into the validated_inventor table .","The steps of flowcharts  in  in  are periodically repeated to update the inventor databases , the person databases , and the employee databases .","Financial Databases","Example financial databases  are shown in . These example financial databases include a BOM financial table  and a patent licensing table . The BOM financial table  includes financial information pertaining to BOM groups. Each record of the BOM financial table includes a BOM_id attribute which identifies the BOM group, and also includes attributes that specify the R&D dollars that the customer spent to develop the assembly, subassembly, or part corresponding to the BOM group. Each record of the BOM financial table  also includes attributes that specify the gross revenue generated by that assembly, subassembly, or part corresponding to the BOM group, and the net revenue generated by that assembly, subassembly, or part.","The patent licensing table  includes financial information pertaining to the licensing fees generated by patents of interest. Each record of the patent licensing table  includes a document_id attribute that identifies a document (more specifically, that identifies a patent). Each record of the patent licensing table  also includes attributes that identifies the licensee of the patent, the licensor of the patent, and the current licensing revenue generated by such licensing of the patent.","It is noted that the financial tables  and  shown in  are only examples of the financial databases  supported and envisioned by the present invention. The invention is adapted and intended to include other financial tables directed to other financial information of interest to the customer. Accordingly, tables ,  of  are provided for purposes of illustration, and not limitation.","The financial databases  are generally loaded as described above with reference to . The extract and load procedure represented in these  may need to be modified to accommodate the particular financial information being processed. Such modifications will be apparent to persons skilled in the relevant art(s) based on the discussion herein.","Security Databases","The security databases  are shown in . A user_table database  includes a record for each user (that is, each person having rights to any of the data in the databases ). Each record of the user_table database  includes a user_id representing a key that uniquely identifies the user. Each record of the user_table  also includes a user_name attribute that is an alternate key of the record, a user_full name attribute that stores the full name of the user, and a password attribute that stores the user's password.","The present invention supports a multi-level security methodology. A first level of this security methodology specifies that the creator of a data item has full access privileges with respect to the data item. For example, consider the group_table database  in . Each record of the group_table database  includes an owner_user_id attribute which identifies the creator (i.e., the owner) of the associated user-defined group. The owner_user_id attribute is implemented using codes whose values (user_id) are defined by the user_table database  (). Accordingly, the creator of a user-defined group as represented in a record of the group_table database  has full access privileges with respect to that user-defined group.","A second level of the invention's security methodology defines that a user may have specific access privileges with respect to an object, called a secured object. Such secured objects include, for example, a note, a document and its notes, a document, and a database. Such secured objects also include a user-defined group.","This level of the security methodology as it relates to user-defined groups as secured objects is implemented using a group_user_xref table . It is noted that other types of secured objects can be implemented in a similar manner.","Each record of the group_user_xref table  includes a group_id attribute that identifies a user-defined group, and a user_id attributed that defines a user. Each record of the group_user_xref table  also includes a permission attribute which defines the access privileges that the user has with respect to the group. Possible access privileges include no access privileges, a read access privilege, a change access privilege (which allows the user to both read and modify the data item), and a delete access privilege (that allows the user to read, modify, and delete the data item). Other access privileges could also be defined. Accordingly, a record in the group_user_xref table  specifies that a person (represented by user_id) has specific privileges (indicated by the permission attribute) to a particular user-defined group (represented by the group_id).","A third level of the security methodology of the present invention specifies that a user group (such as a department) may have a particular access privilege with respect to a user-defined group. If a user is in that user group, then that user would also have that access privilege with respect to the user-defined group. This level of the security methodology is implemented using a grp_usr_grp_xref table . Each record of this table  includes a group_id attribute that identifies a user-defined group, and a user_group_id that identifies a user group. The user_group_id attribute is implemented as a code whose values are defined in a user_group table . Each record of the grp_usr_grp_xref table  also includes a permission attribute that defines the access privilege that the user group (specified by the user_group_id attribute) has with respect to the user-defined group (specified by the group_id attribute). Preferably, a user group permission is overridden by a users explicit permission, allowing the system administrator to give a user a higher or lower permission than the user group that the user is in.","A usr_grp_usr_xref table  specifies the users who are in each user group. In particular, each record of this table  includes a user_group_id attribute that identifies a user group, and a user_id attribute that identifies a user who is in that user group.","The security databases  will now be further described with reference to an example in .  illustrates an example user_table X. As evident by , three users have access privileges with respect to the data in databases , Mike, Jen, and Kathryn. Referring again to , a group_table database X is shown wherein user  (Mike) is indicated as being the owner of groups GRP-GRP. User  (Jen) is indicated as being the owner of group GRP. User  (Kathryn) is indicated as being the owner of group GRP. Accordingly, according to the security methodology of the present invention, user  (Mike) has complete access privileges (that is, the delete access privilege) with respect to groups GRP-GRP. User  (Jen) has delete access privileges with respect to group GRP. User  (Kathryn) has delete access privileges with respect to group GRP.",{"@attributes":{"id":"p-0720","num":"0909"},"figref":"FIG. 28","b":["1237","2","1","2"]},{"@attributes":{"id":"p-0721","num":"0910"},"figref":["FIG. 31","FIG. 29"],"b":["1240","1240","2","5","3","5","3","6","1241"]},{"@attributes":{"id":"p-0722","num":"0911"},"figref":"FIG. 30","b":["1239","1239","2","2","1","3","3","4","1239","1240","2","5","1","6","3","5"]},"The various levels of the security methodology of the present invention do not work individually. Instead, these security methodology levels work together in a well defined and integrated manner. This integrated security methodology is implemented by the security module  in the enterprise server . The operation of the security module  when processing a request to access a data item (in particular, a user-defined group) is depicted in a flowchart  in .","The security module  performs the steps of flowchart  to determine whether a user who is requesting an operation involving a data item has sufficient security access privileges with respect to that data item. Preferably, all operations performed by the enterprise server  are security checked. In other embodiments, only some operations performed by the enterprise server  are security checked. For example, operations involving reading patent documents are not security checked in some embodiments because patents are widely available public documents.","The user requesting the operation involving the data item is called the requestor for reference purposes. For purposes of example, the data item that is involved in the operation is assumed to be a user-defined group having associated with it a record in the group_table database  ().","In step , the security module  determines whether or not the requester is the owner of the requested user-defined group. The security module  performs step  by comparing the requestor's user_id with the owner_user_id attribute in the record of the group_table database  corresponding to the requested user-defined group. If it is determined that the requestor is the owner of the requested user-defined group, then the requester is granted all access privileges (that is, the delete access privilege) with respect to the requested user-defined group. Processing of flowchart  is then complete. If it is determined that the requester is not the owner of the requested user-defined group, then step  is performed.","In step , the security module  determines if the requester has an explicit access right with respect to the requested user-defined group. The security module  performs step  by referring to the group_user_xref table  (). The security module  determines whether there is a record in the group_user_xref table  having group_id equal to the key of the requested user-defined group, and also having the user_id attribute equal to the user_id of the requester. If such a record exists in the group_user_xref table , then the requestor is given access to the requested user-defined group in accordance with the access right specified by the permission attribute in the record of the group_user_xref table . Processing of flowchart  is then complete. If such a record does not exist in the group_user_xref table , then step  is performed.","In step , the security module  determines whether or not the requestor is in a user group that has an explicit access right with respect to the requested user-defined group. The security module  performs step  by accessing the usr_grp_usr_xref table  to identify all groups that has the requestor as a member. The security module  then accesses the grp_usr_grp_xref table  to determine whether any of the user groups in which the requester is a member has an explicit access right with respect to the requested user-defined group. This is done by identifying a record in the grp_usr_grp_xref table  where the group_id attribute is equal to the identifier of the requested user-defined group, and the user_group_id attribute is equal to an identifier of a user group in which the requestor is a member. If such a record exists, then the requester is given the explicit access right specified by the permission attribute in the record of the grp_usr_grp_xref table .","Processing of flowchart  is then complete. If such a record does not exist in the grp_usr_grp_xref table , then step  is performed.","In step , the security module  accesses a record in the grp_usr_grp_xref table  corresponding to a user group called World, if such a record is available. All users are considered to be a member of the user group World. The requester is then granted the access rights associated with the user group World (again, if such a World record is available). Referring to the example in , the World user group has the access right of read. Accordingly, in step , the security module  grants the requester the read access right with respect to the requested user-defined group. Processing of flowchart  is incomplete. Note that, if a World record is not available, the requester is given no access rights.","Some embodiments of the invention also include other levels of security. These levels can be in addition to, or in place of, one or more levels of security shown in . For example, the security module  before performing step  may check to see if the requester has been explicitly revoked access to a particular portion of the database  that includes the data object. The requester may be revoked access to all of the data in the databases . As another example, the security module  before performing step  may check to see if the requester is a super user, in which case the requester has complete access rights (i.e., the delete privilege) as to all data in the databases . These additional security levels can be implemented using tables in addition to the ones shown in , or using modified variations of the tables shown in . For example, additional fields can be added to the user_table  that would indicate whether the user was a super user, or whether all access privileges for the user had been revoked as to a part of or all of the databases .","In an embodiment of the invention, the security module  preferably processes these security levels in the following order (other orderings of the security levels could also be used):\n\n","It is noted that the security databases  shown in  and as described above apply only to the user-defined group databases . In other words, the security databases  only apply security measures as to the user-defined group databases . However, the invention is adapted and intended to extend the security of the security databases  and the security module  to all tables in the databases . The modifications necessary to the databases  and to the security module  to extend the security methodology of the present invention to all of the tables in the databases  will be apparent to persons skilled in the relevant art(s). For example, in order to extend the security methodology of the present invention to the BOM databases , it is only necessary to modify the BOM table  to include an owner_user_id attribute. It would not be necessary to modify any of the security databases , as long as the group_id attribute could store identifiers of BOM groups.","In order to extent the security methodology to the notes databases , it would only be necessary to modify the notes databases  to include an owner_user_id. No modifications to the security databases  would be necessary, as long as the group_id attribute in the security databases  could be overloaded to store the identifiers of notes. Alternatively, additional security tables could be added to the security databases .","Only select persons have the ability to view and\/or modify the data in the security databases . Such persons must have a high security level, and are typically system administrators. The client security module  provides a user interface at the clients ,  that enable persons with sufficient security to view and\/or modify the data in the security databases .","Some security information may be obtained from the underlying operating system, such as user IDs and passwords, and perhaps even access privileges. This information is then loaded into the security databases .","Enterprise Server and Client Functional Modules","The analysis modules  in the enterprise server  and the corresponding client analysis module  in the clients ,  are described in detail below.  illustrates a block diagram of the analysis modules  in the enterprise server . The analysis modules  in  are not intended to be an exhaustive list of analysis modules that the invention is adapted or intended to support. The invention, instead, can support any analysis modules capable of processing data in the databases  in a useful manner as judged by the customer. The scope of the invention is intended to include these modules.","For the most part, the analysis modules  perform functions in a patent-centric and a group-oriented manner. In other words, the analysis modules  perform functions on patent related information, with or without consideration of other information. Also, the analysis modules  perform functions on documents in groups.","Patent Mapping Module","The patent mapping module  operates to identify all patents that are mapped to a product. As discussed above, each product (assembly, subassembly, part) of interest to the customer is represented by a node in a BOM. Each BOM node is represented by a BOM group. Each BOM group is represented by a record in the BOM table  (). Accordingly, the patent mapping module  operates to identify all patents within a BOM group. Such patents map to a product that is represented by the BOM group.","The operation of the patent mapping module  is represented by a flowchart  in . In step , the patent mapping module  receives from the operator (working at a client , , called the requesting client , ) information that identifies one or more BOM groups (for reference purposes, these are called the operator-specified BOM groups). In an embodiment of the invention, this information identifies one or more BOM group names. The patent mapping module  matches these BOM group names to BOM_ids by searching in the BOM table  for matches of the operator-provided BOM names to the name attribute.","In step , the patent mapping module  identifies the patents contained in the BOM groups having the BOM_ids identified in step . The patent mapping module  performs step  by searching in the BOM_patent_xref table  for records having BOM_id attributes equal to the BOM_ids identified in step .","In step , the patent mapping module  retrieves patent bibliographical information pertaining to the patents identified in step . This is done by using the document_ids from the records of the BOM_patent_xref table  identified in step  as indexes into the patent bibliographic databases . This patent bibliographic information is transferred to the requesting client , .","In step , the corresponding client analysis module  in the requesting client ,  displays the received information.  illustrate example display formats which the client analysis module  uses to display the patent data. In the display format  of , the patent mapping data is sorted by BOM groups of logical level \u201csubassembly\u201d. There are three BOM groups of logical level \u201csubassembly\u201d displayed in the example of , indicated by reference numbers ,  and . The BOM group of logical level \u201csubassembly\u201d having reference number  is called \u201canalog special effects controller subassembly\u201d. Each of its child BOM groups of logical level \u201cpart\u201d are displayed under this title . For each of these child BOM groups of logical level \u201cpart\u201d, the part description and part number (corresponding to data from the name attribute in the BOM table ) are displayed. Also displayed is the patent number of a patent that maps to the part (obtained from the BOM_patent_xref table ), as well as the part status (obtained from the status_id attribute in the BOM table ), the ownership (obtained from the corp_patent_xref table ), and the relevancy status (obtained from the corp_patent_xref table ).","The display format  in  is similar to the display format  in . Patent mapping data in the display format  is also organized according to the BOM logical level \u201csubassembly\u201d. Child BOM groups of logical level \u201cpart\u201d are displayed below the respective titles of the BOM groups of logical level \u201csubassembly\u201d.","In some embodiments of the invention, the patent mapping module  can also perform a document (as opposed to a patent) mapping function. This functionality is depicted in flowchart  in . In step , the patent mapping module  receives from the operator (at the requesting client , ) information that preferably identifies one or more group names. The patent mapping module  matches these group names to group ids by reference to the BOM table .","In step , the patent mapping module  identifies the documents that are in the groups corresponding to the group_ids identified in step . The patent mapping module  performs step  by reference to the BOM_patent_xref table . These identified documents may include patents and non-patent documents.","In step , the patent mapping module  extracts bibliographic information pertaining to the documents identified in step  from the appropriate document bibliographic databases . This information is transferred to the requesting client , .","In step , the client analysis module  in the requesting client ,  displays the information using display formats similar to that shown in .","Patent Citation Module","The patent citation module  operates to identify, for a particular patent (called the source patent), the patents which were cited during the prosecution of the selected patent (these patents are called citing patents). This is called a backwards citation report, because its focus is on looking backwards from the perspective of the source patent.","The patent citation module  also performs a forward citation function. In performing the forward patent citation function, the patent citation module  identifies, for a source patent, the patents in which the source patent was cited. Again, these patents are called citing patents for reference purposes.","A flowchart  in  represents the operation of the patent citation module  while performing the backward patent citation function.","In step , the patent citation module  receives information from the operator (at a client ,  called the requesting client , ) that identifies one or more BOM groups. In an embodiment of the invention, the information provided by the operator identifies one or more group names corresponding to one or more BOM groups. The patent citation module  identifies the BOM_ids for the BOM groups corresponding to the BOM group names by conducting a search through the BOM table  using the BOM group names (provided by the operator) as an index.","More generally, the patent citation module  operates on any type of group, such as user-defined groups, inventor groups, corporate entity groups, etc. The operation of the patent citation module  is discussed herein with reference to BOM groups for illustrative purposes only.","In step , the patent citation module  identifies the patents which are mapped to the BOM groups corresponding to the BOM_ids identified in step . The patent citation module  performs step  by searching in the BOM_patent_xref table  using the BOM_ids identified in step  as indexes.","In step , the patent citation module  identifies the patents (called the citing patents) that are cited in the patents identified in step  by reference to the PatentRef table  (). The patent citation module  performs step  by processing each patent identified in step  in turn. In particular, the patent citation module  selects one of the patents identified in step  and uses the document_id of the selected patent as an index into the PatentRef table . As a result of this operation, the patent citation module  will identify a record in the PatentRef table  for each patent that was cited in the selected patent. The patent citation module  performs this operation for each of the patents identified in step .","Also in step , patent bibliographic information is retrieved from the patent bibliographic databases  for each of the citing patents.","Also in step , the patent citation module  forwards the results of the above operations to the requesting client , .","In step , the client analysis module  in the requesting client , , displays the data received from the patent citation module  to the operator. The client analysis module  displays this data in a format selected by the operator.  depict example patent citation reporting formats. The operator can elect to view the patent citation information in any of these formats.","For example, if the operator chooses to view the patent citation information organized by BOM group, then the display format illustrated in  and\/or  is used. In the display format  of , the patent citation data is sorted by BOM group. A portion of the patent citation data for a BOM group titled \u201cdigital video recording system\u201d is shown in the example of . A table is displayed for each patent mapped to this BOM group. In the example of , such patents include U.S. Pat. Nos. 5,327,235 and 5,359,428. These patents are called source patents, and they were identified in step . Their patent numbers are displayed in the patent citation report in column  of the tables. The titles of the source patents are displayed in column  of the tables. The patents which are cited by the source patents are listed in column  of the tables. These citing patents were identified in step  of flowchart . Bibliographic information on the citing patents is displayed in the remaining columns of the tables, such as the assignee information which is displayed in column , title information which is displayed in , and date information which is displayed in . Other bibliographic information may be contained in the table and may be viewed by appropriate use of the navigation icons .","The display format  in  is similar to the display format  in . The patent citation data in the format  is organized by BOM group. Listed below each BOM group are the patents which are mapped to that BOM group. These patents are listed by their patent numbers in column , and are called source patents. The patents which are cited in these source patents (called citing patents) are listed by their patent number in column . Bibliographic information on these citing patents are displayed in the following columns of the tables.","Referring again to step , if the operator elects to display the patent citation information sorted by selected patent characteristics, such as owned\/license, then the display format  in  is used. The display format  includes a field  which indicates whether owned or licensed patents are being displayed. If the operator elects to display only owned patents, then field  would be modified to indicate this, and patent citation information on only patents owned by the customer (or any other corporate entity identified by the operator) would be displayed in the patent citation report using format .","Referring again to step , if the operator elects to display the patent citation information in conjunction with ownership information, then display format  in  is used. In display format , the patent citation data is sorted by source patent number. For each source patent, the patents which cite the source patent (called citing patents) are displayed by patent number. Other patent bibliographic information on the citing patents is also displayed. In addition, ownership information (that is, whether or not the citing patent is owned, licensed, etc.) is also displayed in column . This information was previously retrieved in step  by the patent citation module  by conducting a search of the corp_patent_xref table  () using as indexes the document_ids of the citing patents (identified earlier in step ) and the corp_entity_id of a corporate entity specified by the operator. Accordingly, the ownership information displayed in column  of display format  can be relative to any operator-specified corporate entity, not just the customer corporate entity. The operator may have specified a corporate entity for purposes of data mining in the information received by the patent citation module  in step .","Referring again to step  in , the patent citation report can be performed and displayed in a recursive fashion with an operator specified depth. The display of such a recursive patent citation function is shown in . In the example of , patent  is the source patent, and patents - are cited in patent  (that is, patents - are citing patents with respect to source patent ). The patent citation report of  is multi-leveled. Accordingly, the display format of  indicates that patents - are cited in patent , patent  is cited in patent , and patents - are cited in patent . The example format  shown in  is a two level patent citation report. The present invention can support patent citation reports of any operator specified level. Other display formats could be used by the invention to more effectively display the results of multi-level patent citation reports, such as the well-known Xerox hyperbolic tree display format.","The patent citation module  collects data for a multi-level patent citation report by repetitively performing the steps of flowchart , which will be apparent to persons skilled in the relevant arts. The level of the report desired by the operator could be contained in the information that the patent citation module  receives in step .","The forward patent citation function performed by the patent citation module  is depicted in a flowchart  shown in . In step , the patent citation module  receives information from the operator at the requesting client ,  that identifies one or more BOM groups. In one embodiment, the information received from the operator identifies one or more BOM names that correspond to the one or more BOM groups. Also in step , the patent citation module  identifies the BOM_ids of the BOM groups by conducting a search in the BOM table  using the BOM names as an index.","In step , the patent citation module  identifies the patents which are mapped to the BOM groups associated with the BOM_ids identified in step . The patent citation module  performs step  by conducting a search in the BOM_patent_xref table  using the BOM_ids identified in step  as indexes.","In step , the patent citation module  determines the patents that cite the patents identified in step . The patent citation module  performs step  by conducting a search through the PatentRef table  using the document_ids corresponding to the citing patents identified in step  as indexes. The patent citation module  forwards the results of the above operation to the client analysis module  in the requesting client , .","In step , the client analysis module  displays this information received from the patent citation module  on the client display monitor . The client analysis module  displays this information to the operator in any one of a number of display formats, examples of which are shown in . These display formats are described above.","Patent Aging Module","The patent aging module  operates to identify and analyze the remaining terms of patents that map to products, corporate entities, or inventors (that is, that are in BOM groups, corporate entity groups, or inventor groups that correspond to the products, corporate entities, or inventors). The patent aging module  also operates to identify and analyze the remaining terms of patents that are in user-defined groups. The operation of the patent aging module  is depicted in a flowchart  shown in .","In step , the patent aging module  receives from the operator at the requesting client , , information that identifies one or more groups. These can be user-defined groups or predefined groups, or any combination of such groups. In an embodiment of the invention, the patent aging module  receives information from the operator that identifies group names that correspond to groups. The operator can identify such groups while located at the client ,  by selecting one or more groups from the group hierarchy user interface (). This is true in all cases herein where the user identifies groups to the enterprise server .","In some embodiments, the information may also have to identify the group types (i.e., BOM group, corporate entity group, inventor group, user-defined group, etc.). The patent aging module  identifies the appropriate group IDs of these groups by reference to the appropriate group tables (that is, the BOM table  for BOM groups, the corporate_entity table  for corporate entity groups, the validated_inventor table  for inventor groups, the group_table database  for user-defined groups, etc.).","In step , the patent aging module  identifies the patents which are contained in the groups corresponding to the group IDs identified in step . The patent aging module  performs step  by searching through the appropriate patent xref tables, for example, the BOM_patent_xref table , the group_document_xref table , the corp_patent_xref table , the validated_inventor table , etc.","In step , the patent aging module  identifies the issue dates of the patents identified in step  by reference to the patent table  (). The patent aging module  does this by searching through the patent table  using the document_ids identified in step . In some embodiments, in step , the patent aging module  retrieves the expiration dates of the patents identified in step  by reference to the calc_exp_date attribute in the patent table .","In step , to the extent that the expiration dates of the identified patents were not loaded in the patent table , the patent aging module  calculates the expiration dates of the identified patents in accordance with the existing patent laws of the appropriate jurisdiction. The patent aging module  does this by using the patent issue dates. The patent aging module  then forwards the results of the above operation to the client analysis module  in the requesting client , .","The client analysis module  then displays this information received from the patent aging module  in an operator selected format. Such display of the patent aging information is described in the following steps.","In step , the client analysis module  determines whether the operator requested to display the patent aging information in a standard report format. If the operator wishes to display the patent aging information in a standard report format, then the client analysis module  uses the display formats shown in  and\/or  to display the patent aging information.","The display format  of  is sorted by BOM group. The information for a BOM group titled \u201canalog controller & imaging system patents\u201d is shown in the example of . The display format  displays the remaining patent term for the patents that map to the BOM group in a bar graph format.","The display format  shown in  is similar to that of display format  shown in .","In step , the client analysis module  determines whether the operator wishes to display the patent information in a standard format in conjunction with ownership information. If the operator elects to display the patent aging information in a standard report in conjunction with ownership information, then example display format  shown in  is used. It is noted that, in order to utilize the display format , the patent aging module  must have previously have obtained ownership information on the patents identified in step  from the corp_patent_xref table , and forwarded this information to the requesting client , . Such an operation is represented by step .","The example display format  shown in  is organized by ownership status relative to a corporate entity which the operator previously identified (this corporate entity could have been identified, for example, in the information received by the patent aging module  in step ). Thus, the information shown in the display format  can refer to patents owned and licensed by the customer or any other corporate entity, such as the customer's competitors.","In step , the patent aging module  determines whether or not the operator wishes to view the patent aging information sorted by group. If the operator wishes to view the patent aging information sorted by group, then in step  the patent aging information is displayed using an example format  shown in . The display format  displays patent expiration information sorted by group.","In step , the patent aging module  determines whether the operator wishes to view the patent aging information sorted by organization level. If the operator wishes to view the patent aging information sorted by organization level, then the patent aging information is displayed in step  using an example format  shown in . It is noted that format  can be used only if corporate_level_id information is obtained from the corporate_entity table  for each patent identified in step , and if this information is forwarded to the requesting client , . This operation is performed by the patent aging module  in the enterprise server , and is represented by step . Additionally, the display format  also requires that ownership information be obtained from the corp_patent_xref table  by the patent aging module , and that this information be forwarded to the requesting client , . Such ownership information is obtained for each patent identified in step  and for the corporate entity identified by the operator in the information preferably received by the patent aging module  in step . This operation is represented by step .","In the display format  of , the patent aging information is sorted by organization level (that is, by the information from the corp_level_id attribute retrieved from the corporate_entity table ). Additionally, ownership information relative to the specified corporate entity is displayed along with remaining patent term information.","In step , the patent aging module  determines whether the operator wishes to view the patent aging information organized by BOM level. If the operator wishes to view the patent aging information organized by BOM level, then the client analysis module  displays the patent aging information in a display format similar to that shown in , however instead of being sorted by organization level as currently shown in , the patent aging information is sorted by BOM level. It is noted that, in order to display the patent aging information in this manner, the BOM level_id information must be retrieved from the BOM table  for each of the patents identified in step , and ownership information for these identified patents and for the operator-specified corporate entity must be obtained from the corp_patent_xref table . Such operation is performed by the patent aging module  in the enterprise server , and is represented by steps  and .","Patent Clustering and Bracketing Module","The patent clustering\/bracketing module  in the enterprise server  operates to identify and graphically represent potential relationships between a source patent and citing patents, where the citing patents are either cited in the source patent, or cite the source patent. Accordingly, the patent bracketing\/clustering module performs a backwards operation, where it operates to identify potential relationships between a source patent and citing patents which were cited during the prosecution of the source patent. Additionally, the patent bracketing\/clustering module  also performs a forward function, where it attempts to identify potential relationships between a source patent and citing patents in which the source patent was cited.","The operation of the patent clustering\/bracketing module  when performing its backwards operation is represented by a flowchart  in . In step , the patent clustering\/bracketing module  receives information identifying a patent number from an operator at the requesting client ,. The patent clustering\/bracketing module  operates to identify the document_id of the patent having this patent number by using the patent number as an index in a search of the patent table . This patent is called the source patent, for reference purposes.","In step , the patent clustering\/bracketing module  identifies patents (called citing patents) that are cited by the source patent. The patent clustering\/bracketing module  performs step  by using the document_id identified in step  as an index during a search of the PatentRef table .","In step , the patent clustering\/bracketing module  identifies the ownership of the source patent and ownership of the citing patents by reference to the assignee table  and\/or the core_patent_xref table . The patent clustering\/bracketing module  forwards the results of the above operations to the client analysis module  in the requesting client ,.","In step , the client analysis module  displays the information received from the patent clustering\/bracketing module  in the client display unit . The client analysis module  displays this information using any one of a number of formats, such as the example formats shown in .","In an embodiment, the display format  in  displays the patent bracketing\/clustering information in a horizontal-oriented tree format (this is also called a connected graph format). An icon  at the root of the tree represents the source patent. This icon is filled with a first pattern designated by reference number  in key . Icons ,  and  represent the citing patents.","In the display format , links  are used to represent the relationship between the source patent (represented by icon ) and the citing patents (represented by icons ,  and ). In particular, the links  indicate that the citing patterns were cited during the prosecution of the source patent .","The icons , ,  corresponding to citing patents are filled with the same pattern  of the icon  corresponding to the source patent if the citing patents are owned by the same corporate entity as the source patent. In the example of , the icons , ,  corresponding to the citing patents are all filled with the first pattern , which is the same that is used to fill the icon  corresponding to the source patent. Accordingly, the example in  indicates that all of the patents (both the source patent and the citing patents) are owned by the same corporate entity.",{"@attributes":{"id":"p-0797","num":"0992"},"figref":"FIG. 71"},"The example display format  shown in  illustrates a scenario where the source patent  is not owned by the same corporate entity as the citing patents , ,  and . The scenario in  represents a potential bracketing situation, because the corporate entity who owns the source patent has not managed to obtain additional patents in the area of technology of the source patent. Instead, other corporate entities have obtained patents (represented by icons , ,  and ) in this area of technology. The source patent is potentially surrounded or bracketed by the citing patents.","The patent clustering\/bracketing module  is capable of performing a multi-level, recursive patent bracketing\/clustering function. The patent clustering\/bracketing module  performs such a function by performing steps  and  for each of the citing patents. This operation by the patent clustering\/bracketing module  can continue to any operator specified level of recursion. An example display format generated by the client analysis module  on the client display unit  is shown in . The source patent is represented by icon , and has two citing patents represented by icons  and . The patent corresponding to  has itself two citing patents, represented by icons  and . The patent represented by  has a citing patent represented by , which itself has two citing patents represented by icons  and . The display in  represents a three-level patent bracketing\/clustering scenario. This scenario in  also represents a hybrid clustering\/bracketing situation. Note that the corporate entity who owns the root source patent (represented by icon ) also owns some of the citing patents in each level (that is, the patents represented by icons , ,  and ). However, there are some citing patents in the various levels which are not owned by this corporate entity.","The operation of the patent clustering\/bracketing module  when performing its forward operation is represented by a flowchart  in . In step , the patent clustering\/bracketing module  receives information from the operator that identifies a patent number. The patent clustering\/bracketing module  identifies the document_id that corresponds to a patent having this patent number by reference to the patent table . This patent is called the source patent, for reference purposes.","In step , the patent clustering\/bracketing module  identifies patents (called citing patents) in which the source patent is cited. The patent clustering\/bracketing module  performs step  by reference to the PatentRef table .","In step , the patent clustering\/bracketing module  identifies the ownership of the source patent and the citing patents by reference to the assignee table  and\/or the core_patent_xref table . The patent clustering\/bracketing module  sends the information obtained by the above operation to the client analysis module  at the requesting client , .","In step , the client analysis module  displays this information on the client display unit  using any of a number of display formats, such as the display formats shown in . These display formats were described above.","It is noted that the operation of the patent clustering\/bracketing module , in performing the backwards operation () and\/or the forwards operation (), can be done on a group basis, instead of the individual patent basis as described above. In performing this functionality on a group basis, the patent clustering\/bracketing module  identifies all patents contained in the operator-specified group, and then identifies all citing patents of those patents in the operator-specified group. The client analysis module  displays the results of such group-oriented processing using any of a number of display formats, such as the formats shown in , or in well-known formats suitable for displaying hierarchical data, such as the Xerox hyperbolic tree display format. It is noted that such display formats useful for displaying hierarchical structured data, such as the Xerox hyperbolic tree format, could also be used in the case of the individual patent operation represented by .","Financial Module","The financial modules  in the enterprise server  perform patent-centric and group-oriented processing of the data in the financial databases . Examples of the functions performed by the financial modules  include determining the research and design (R&D) expenditures on a product or product line basis, determining the R&D expenditures per inventor or per employee on a product or product line basis, determining net licensing revenue on a product or product line basis, determining the number of patents issued on a product or product line basis, determining patent maintenance fees on a product or product line basis, determining market share on a product or product line basis, determining the tax rate on a product or product line basis, determining marketing costs on a product or product line basis, determining selling costs on a product or product line basis, determining the number of outstanding shares (P\/E) on a product or product line basis, determining revenue on a product or product line basis, determining cumulative product revenue on a product or product line basis, etc. The financial modules  can also perform the above processing on a geographical region basis, or on a time basis.","Reference is made to the financial databases  and  shown in  for an example of the processing performed by the financial modules . For example, the financial modules  operate to determine the R&D dollars on a product basis (more particularly, the R&D dollars on a group basis, such as a BOM group basis). Given a operator-specified product (or an operator-specified group, such as a BOM group), the financial modules  reference the BOM financial table  using the associated BOM_id as a key to identify the record in the BOM financial table  associated with the operator-specified BOM group. From that record, the financial modules  can retrieve the values stored in the R&D dollars attribute. This value represents the R&D dollars spent in developing the product associated with the BOM group. The financial modules  can also retrieve from that record the gross revenue and the net revenue generated by that product.","As another example, the financial modules  can determine the licensing revenue associated with any patent owned by the company. This is done by referencing the patent licensing table  using the document_id of the operator-specified patent as an index to identify the record(s) in the patent licensing table  corresponding to that operator-specified patent. Once the record is found, the financial modules  can retrieve information on the licensee, licensor, and license revenue related to the license of the patent from the licensor to the licensee. It is noted that a given patent may have multiple entries in the patent licensing table , corresponding to each licensor\/licensee combination.","The financial modules  transfer the information generated from the above-described operation to the client analysis module  in the requesting client , . The client analysis module  displays this information on the client display unit , and enables the operator to manipulate the information.","Inventor Patent Count Module","The inventor patent count module  in the enterprise server  operates to analyze patent inventor information to identify the top inventors for an operator-specified group. Top inventors are defined herein as being persons who most frequently are named as inventors on the patents in the group. The operation of the inventor patent count module is represented in the flowchart  and .","In step , the inventor patent count module  receives from the operator at the requesting client ,  information that identifies one or more groups. These can be any types of groups, such as BOM groups, corporate entity groups, operator-defined groups, etc. In an embodiment of the invention, the information received from the user identifies the group names of groups. These groups are called the operator-specified groups for reference purposes. In some embodiments, this information may also identify the types of the groups (i.e., BOM group, corporate entity group, user-defined group, etc.).","The inventor patent count module  identifies the group IDs of the operator-specified groups by using the group names as indexes in searches of the appropriate group table (that is, the BOM table , the group_table database , and the corporate_entity table ).","In step , the inventor patent count module  identifies patents that are contained in the operator-specified groups. The inventor patent count module  performs step  by accessing the appropriate cross-reference tables using the group keys (identified in step ) as indexes. Such cross-reference tables include the BOM_patent_xref table , the group_document_xref table , and the corp_patent_xref table .","In step , the inventor patent count module  identifies the inventors of the patents identified in step  by reference to the validated_inventor table . The inventor patent count module  accesses the validated_inventor table  using the document_ids of the patents identified in step  as indexes. The inventor patent count module  processes the patent and inventorship information obtained as described above to determine, for each person, the number of patents (in the operator-specified group) in which the person is named as an inventor.","In step , the inventor patent count module  extracts additional pertinent information from the databases , such as each person's employment status from the employee table , the relevance of the identified patents from the corp_patent_xref table , and the corporate levels of the corporate entities that own the identified patents from the corporate_entity table . The inventor patent count module  forwards the information resulting from the above operation to the client analysis module  in the requesting client , .","In step , the client analysis module  displays this data to the operator on the client display unit . The client analysis module  displays the inventor patent count information in any of a number of display formats, such as display formats shown in .","The sample displays in  are similar, wherein the inventor patent count information is displayed in a bar graph format.","The display format  in  displays the inventor patent count information in more of a spreadsheet or tabular format. This table lists, for a given group, the persons who are named as inventors of patents. Also listed are the number of patents in which each person is listed as inventor, as well as other information such as each person's employment status. Also listed in the display format  of  is, for each person, the number of core patents and the number of non-core patents in which the person is named as an inventor.","The example display format  in  is also a spreadsheet or tabular format sorted by organization level. The information contained in the format  of  is similar to the information contained in the display format  of .","Inventor Employment Information Module","The inventor employment information module  in the enterprise server  operates to obtain information on persons who are named as inventors in patents that map to operator-specified groups. The operation of the inventor employment information module  is represented by a flowchart  in .","In step , the inventor employment information module  receives information from the operator at the requesting client , . This information identifies one or more groups, called operator-specified groups for reference purposes. Such groups may be BOM groups, user-defined groups, corporate entity groups, etc. In an embodiment of the invention, the information received from the operator identifies one or more group names that correspond to the operator-specified groups. The inventor employment information module  identifies the group IDs of the operator-specified groups by reference to the appropriate group tables, such as the BOM table , the corporate_entity table , the group_table database , etc. The inventor employment information module  accesses these group tables using the group names as indexes.","In step , the inventor employment information module  identifies the patents which are contained in these operator-specified groups. These patents are called the identified patents for reference purposes.","The inventor employment information module  performs step  by accessing the appropriate cross-reference tables using the group IDs identified in step . These cross-reference tables include the BOM_patent_xref table , the group_document_xref table , the corp_patent_xref table , etc.","In step , the inventor employment information module  identifies the inventors of the identified patents (identified in step ) by reference to the validated_inventor table . The inventor employment information module  accesses the validated_inventor table  using the document IDs for the identified patents identified in step .","In step , the inventor employment information module  extracts from the databases  information about the inventors. Such information is extracted by the inventor employment information module  from the person table  and the employee table .","In step , the inventor employment information module  extracts other information for display in reports, such as the names of the corporate entities who own or license the identified patents. Such information is retrieved from at least the corporate_entity table . The inventor employment information module  transfers the information obtained from the above processing to the client analysis module  at the requesting client , .","In step , the client analysis module  displays this information on the client display unit  in a variety of operator-selected display formats, such as the example display formats shown in .","The display format  in  sorts the inventorship data by group. Information pertaining to the patents that map to a particular group is displayed in tabular format. The display format  in  is similar to the display format  in .","The display format  in  organizes data according to the corporate entity that owns the identified patent. Information pertaining to the patents owned by each corporate entity is presented in a tabular format.","Exporting Patent Data Module","The exporting patent data module  in the enterprise server  operates to copy data from the databases  to an operator-specified location. For example, the exporting patent data module , pursuant to operator command, can export a subset of the patent database  to an operator-specified location. The operator could then utilize this data locally, separate from the enterprise server . Operation of the exporting patent data module  is represented by flowchart  in .","In step , the client analysis module  in the client ,  enables the operator to select which of the patents in the patent database  to export. The operator can select such patents by group, or individually, or both by group and individually. The client analysis module  transfers this operator request to the exporting patent data module  in the enterprise server .","In step , the exporting patent data module  causes the document storage and retrieval module  to retrieve information from the patent database  corresponding to the patents selected by the operator in step . The enterprise server  transmits this information to the client , .","In step , the client analysis module  copies the information retrieved from the enterprise server  to a operator-specified location.","Importing Patent Data Module","As discussed above, the exporting patent data module  operates to copy a portion of the customer's patent repository (stored in the patent database ) to a operator-specified location. The operator can then work locally with this patent information. Eventually, the operator may want to update the databases  in the enterprise server  with any updates made to this subset of the patent database .","The importing patent data module  in the enterprise server  operates to perform this functionality. In particular, the importing patent data module  imports to the databases  data that a operator has been working with locally, separate from the enterprise server . The operation of the importing patent data module  is represented by a flowchart  in .","In step , the client analysis module  in the client ,  accesses patent information stored in an operator-specified location  which is local to the client , . The client ,  transfers this patent information to the enterprise server .","In step , the importing patent data module  receives this information from the client ,  and loads the patent information into the databases , including the patent database  and the patent bibliographic databases .","Methodology Embodiments","The present invention can be used to perform many patent-centric and\/or group-oriented tasks. These tasks would be of interest to business customers. These tasks include, but are not limited to:\n\n","The tasks listed above, and other tasks that would be useful to the business customer, can be performed by invoking the analysis modules , either individually or in combination. For example, some of the tasks mentioned above can be performed by invoking the patent mapping module  alone. Others of the tasks listed above require, for example, the invocation of the patent mapping module  in combination with one or more of the other analysis modules , such as the patent citation module  or the patent aging module .","The performance of some of the tasks mentioned above involve human intervention. Specifically, with some of the tasks, one or more of the analysis modules  are invoked. These analysis modules  automatically process data in the databases , and automatically prepare reports (generally called methodology reports) based on such processing. One or more human operators then analyze the reports to complete the tasks. The invention supports and assists the human operators in performing their functions by automatically analyzing data and running reports.","In some embodiments, the invention includes expert system(s)  to automatically analyze and process the data in the reports that were automatically generated by the analysis modules . It is noted that the expert system  is shown as being a part of the analysis modules  in , but may in practice be a separate component of the enterprise server , or may form part of the client , .","In these embodiments, the expert system  either aids the human operators in performing the above-listed tasks, or completely replaces the human operators in analyzing the data that was automatically generated by the analysis modules . Such expert systems  could be trained (using well known procedures) with the knowledge and experience of the human operators. The structure and operation of expert and rule based systems, and the training of such systems, are well known and are described in a number of publicly available documents, including (but not limited to) Charniak et al., , Addison Wesley, 1986, and Nils J. Nilsson, , Morgan Kaufmann, Los Altos, Calif., 1980, which are incorporated herein by reference in their entireties. The manner in which to construct and train expert systems to automatically perform a part of or all of the processing described herein as being performed by human operators will be apparent to persons skilled in the relevant art(s).","Various patent-centric and group-oriented methodologies of the present invention are described below. These methodologies represent tasks that can be performed (either with or without human involvement) through use of the invention. These methodologies essentially involve two steps. In the first step, one or more analysis modules  are invoked for the purpose of automatically accessing and processing data contained in the databases , and for the purpose of automatically reporting on such processing (such reports are generally called methodology reports). In the second step, the reports generated by the analysis modules  are analyzed, and business-related actions, plans, and\/or strategies are taken or developed based on the analysis. This second step may be performed by human operators, or may be automatically performed by expert systems (as described above), or may be performed by a combination of human operators and expert systems. In the following description of the methodologies, the second step is described as being performed by human operators. It should be understood, however, that the second step could alternatively be performed by expert systems, or by expert systems in combination with human operators.","The methodologies described below represent a sampling of the tasks that can be performed through use of the invention. The invention is adapted and intended to perform other patent-centric and group-oriented tasks, particularly tasks that can be implemented through mining and\/or processing of the data in the databases . Accordingly, the following methodologies are described herein for purposes of illustration, and not limitation.","Patent Mapping and Mining","A corporate entity can utilize the present invention in order to perform a patent mapping and mining process. This process is an internally focused analysis where the impact of the corporate entity's patents (both owned and licensed) on the corporate entity is analyzed. The business impact of this process is to provide high financial leverage within the corporate entity. The patent mapping and mining process provides a tangible way of defining core (active) and non-core (non-active) patents and how they relate to the corporate entity's business. Short term financial results of the patent mapping and mining process can be found in licensing opportunities and non-renewal of inactive patents and licensed patents.","It is noted that the customer may, based on its own practices or needs, define the meaning of core and non-core. For example, core could correspond to patents being used by the customer, and non-core could correspond to patents not being used by the customer. Accordingly, the definition of core and non-core is implementation dependent.","A flowchart  in  illustrates an example patent mapping and mining process. In , an operator (that is, an employee or agent of the customer corporate entity) at a client ,  issues a command that causes the patent mapping module  to run a patent mapping report with respect to a product specified by the operator. The patent mapping module  runs a patent mapping report on the BOM group corresponding to the operator-specified product in the manner discussed above. Example patent mapping reports are shown in .","In step , the operator identifies from the patent mapping reports the core and non-core patents that map to the BOM group corresponding to the operator-specified product. For example, in the example display of , if the operator specified product is the analog special effects controller subassembly , then the operator would be able to determine from the patent mapping report that U.S. Pat. Nos. 4,719,523; 4,686,590; 4,716,476 and 5,029,013 were non-core patents. In contrast, if the operator specified group was the digital color correction subassembly , then the operator could identify from the patent mapping report that U.S. Patent Nos. 5,381,175; 5,452,018; and 5,353,059 were core patents.","In step , the operator considers various business options with respect to the non-core patents. In particular, the operator considers whether the non-core patents should be licensed or sold. This determination may be based on whether the corporate entity is contemplating the introduction of future products having features that would be covered by the non-core patents.","The operator may also consider whether or not the non-core patents should be held in reserve as a shield against a possible allegation of infringement by a competitor. This issue may depend on whether the non-core patents cover technology which is used by competitors. The operator can run patent citation reports (performed by the patent citation module ) and\/or patent clustering\/bracketing reports (performed by the patent clustering\/bracketing module ) to determine whether it appears that its competitors are active in the areas of technology covered by the non-core patents.","The operator could also consider whether patent maintenance fees should be paid on the non-core patents. This issue, like those discussed above, may depend on whether the corporate entity intends to use the technology covered by the non-core patents in future products, or whether or not the corporate entity's competitors are currently using the technology covered by the non-core patents. A decision to discontinue payment of maintenance fees on the non-core patents would result in an immediate monetary savings for the corporate entity.","Also, the operator could consider whether or not the corporate entity should continue to license the non-core patents. The issues involved with this determination are similar to those discussed above. If the corporate entity decides to discontinue the license of the non-core patents, then the corporate entity could realize an immediate cost savings.","Further, the operator could consider whether the technology covered by the non-core patents could be used in the development of new features or products for the corporate entity.","In the above, step  is described as being performed by a single operator. In practice, the performance of step  may require the involvement of many people with knowledge in many different fields and having different abilities (or expert systems with this knowledge and abilities).","The patent mapping and mining process as represented in flowchart  is an iterative process, as represented by control arrow . In other words, the patent mapping and mining process represented in flowchart  could be performed repeatedly over time for the same product, or could be performed a number of times, each time for a different product.","Situation Assessment","A corporate entity could use the present invention to perform a situation assessment process. A situation assessment process focuses on the corporate entity's current business situation. The situation assessment process determines the strategic \u201cplaying field\u201d of the corporate entity's business as it relates to its patents and products. By performing a situation assessment process or analysis, the corporate entity can begin to analyze its current market in the competitive situation in relation to its products and patents. The situation assessment analysis begins by running a number of methodology reports in order to better understand the corporate entity's competitive situation. These methodology reports provide a clear understanding of a number of patent related business metrics, including:\n\n","Based on the above patent related business metrics, the corporate entity can determine what strategic steps need to be implemented in relation to: merger and acquisitions, human resources (HR) retention programs, patent licensing programs, patent acquisition programs, product or division sale, appropriate tax strategies, etc.","A flowchart  in  illustrates an example situation assessment process.","In step , a competitive analysis process is performed to identify and analyze the positions of the corporate entity's competitors. In performing the competitive analysis process, the corporate entity examines the competitor's products per product line, examines competitor's patents via aging reports, profiles competitor's inventors, and determines whether competitors are potentially infringing the corporate entity's patents. Details of the competitive analysis process is described below.","In step , patent clustering and bracketing are evaluated. In performing this evaluation, the corporate entity runs clustering and bracketing reports for future product protection, determines if product features have been adequately protected, determines if the corporate entity's present and future core technologies have been adequately protected by patents, etc. Details of the clustering and bracketing process are described below.","In step , an inventor analysis is performed. In performing this inventor analysis, the corporate entity analyzes inventorship with respect to patents covering its core technology, analyzes cornpetitor's inventors, determines whether it should consider hiring the inventors of its competitors, determines whether its own employee retention program should be modified in any way, etc. Details of the inventor analysis are described below.","In step , the corporate entity performs a financial analysis process using the present invention. In performing this financial analysis, the corporate entity evaluates a number of patent-centric and group-oriented business metrics, such as the R&D expenditures per product, the R&D expenditures per inventor for a product line, the net licensing revenue per product line, the patent budget for a product line, the patent maintenance fees associated with a product line, the market share of a product line, the tax rate of a product line, marketing costs of a product line, selling costs of a product line, allocated costs of a product line, product revenue over product costs, etc. Details of this financial analysis process are described below.","The situation assessment process is an iterative one, as represented by control arrow  in the flowchart . The steps of flowchart  can be performed repeatedly, and in any order. Thus, the steps in  are provided for purposes of illustration, not limitation.","Competitive Analysis",{"@attributes":{"id":"p-0871","num":"1121"},"figref":"FIG. 104","b":"10402"},"In step , an operator associated with the corporate entity (such as an employee or consultant of the corporate entity) located at a client ,  issues a command to the patent citation module  to run a patent citation report on the patents in a group specified by the operator. The operator may request that either a backwards and\/or a forwards patent citation report be formed. The manner in which the patent citation module  performs the patent citation process is described above. Examples of patent citation reports are shown in .","In step , the operator, by reference to the patent citation report, identifies the companies who are the current assignees of the citing patents. These companies may be potentially working in the same technological areas as the source patents since their patents either cited the source patents (in the case of forwards patent citation reports), or they were cited in the source patents (in the case of backwards patent citation reports). Accordingly, the assignees of the citing patents may potentially be competitors of the customer corporate entity (assuming, of course, that the assignees of the citing patents are not the same as the customer corporate entity). Accordingly, in step , the operator, through analysis of the patent citation report, is able to identify potential competitors of the customer client entity with respect to the technological area of the operator-specified group. It is noted that these potential competitors may be infringing the corporate entity's patents (that is, the source patents). These potential competitors may also be interested in licensing the corporate entity's patents (the source patents). Further, the customer corporate entity may be interested in licensing or purchasing the patents listed as citing patents in the patent citation report.","In step , the operator further analyzes the patent citation report to determine the potential strength of the competitors' positions in the technological areas relative to the source patents. For example, if a large number of the citing patents are assigned to a given competitor company, then that may indicate that the competitor company has a strong patent position with respect to the technological area of the associated source patent. An operator may conclude from this that the customer corporate entity should consider reducing its product line or even discontinuing the product line given the potential strengths of the competitor's patents in the area. Other options would be to sell the product line to the potential competitor, or modify the product line to avoid any potential patent infringement by the customer client entity of the competitor's patents.","In step , the operator reviews the patent citation report to identify a competitor's potential future product direction. The operator performs step  by noting the number of patents that a potential competitor has in an area, and also noting the filing and issue dates of those patents. This information may indicate the extent to which a potential competitor is interested in a technological area. For example, if a potential competitor has a large number of patents in an area, and those patents were filed or issued relatively recently, then that may be an indication that the potential competitor is preparing to move into or expand its presence in the area.","In step , the operator issues a command that causes the patent aging module  to run an aging report. The patent aging reports are run with respect to the citing patents (that is, the patents which are owned by potential competitors). The manner in which the patent aging module  performs the patent aging function is described above. Examples of patent aging reports are shown in . The operator analyzes the patent aging report in view of issues including whether or not to license competitor patents, purchase competitor patents, design around competitor patents, ignore competitor patents, etc. These decisions are impacted by the remaining terms of the competitor patents. For example, if a potentially relevant competitor patent has a long patent term remaining, then the customer corporate entity may be more inclined to license or purchase the patent. In contrast, if the patent has a short term remaining, then the customer corporate entity may be more inclined to ignore the patent or design around the patent.","In step , the operator issues commands that cause the inventor patent count module  and the inventor employment information module  to run inventorship reports on the patents owned by the potential competitors. The manner in which the inventor patent count module  and the inventor employment information module  operate to run these inventorship reports are described above. Examples of inventor patent count reports are shown in . Examples of inventor employment information reports are shown in .","In step , the operator analyzes inventor patent count reports to identify the top inventors of patents covering key technology. The operator analyzes the inventor employment information reports to determine if these key inventors are still with the competitors. If they are not, then the operator can consider whether the corporate entity should consider hiring the inventors. Also from the inventor employment information reports, the operator can determine if the top inventors were former employees of the customer corporate entity. If they were, then the operator can set in motion processes to insure that these inventors are complying with their former employment agreements with the customer corporate entity. Further from the inventor employment information reports, the operator can determine if the top inventors are still employed by the competitors. If they are, the operator can consider whether the corporate entity should consider hiring these top inventors.","The competitive analysis process is an iterative one, as indicated by control arrow . The steps of flowchart  can be performed repeatedly, and in any order. Therefore, the steps of flowchart  are provided in  for purposes of illustration, and not limitation.","The above operation is described as being performed by a single operator. In practice, the above operation may require the involvement of many people with knowledge in many different fields and having different abilities (or expert systems with this knowledge and abilities).","Clustering and\/or Bracketing","The clustering and\/or bracketing process is illustrated in a flowchart  in . In step , an operator associated with the customer corporate entity at a client ,  issues commands to run patent clustering\/bracketing reports for a particular product, called the operator specified product for reference purposes. This product corresponds to a BOM group. The patent clustering\/bracketing module  in the enterprise server  runs these patent clustering\/bracketing reports for the operator specified BOM group. The operation of the patent clustering\/bracketing module  is described above. Examples of patent clustering\/bracketing reports are shown in .","In step , the operator studies the patent clustering\/bracketing reports to determine whether the customer client entity's product has been adequately protected by the customer corporate entity's patents. In other words, the operator reviews the clustering\/bracketing report to determine whether or not clustering exists. An example of clustering is shown in .","In step , the operator reviews the patent clustering\/bracketing reports to determine the extent to which others have patented the technology related to the patents in the BOM group associated with the operator-specified product. In other words, the operator in step  analyzes the patent clustering\/bracketing reports to determine whether full or partial bracketing exists. An example of full bracketing is shown in . An example of partial bracketing is shown in .","Based on the above analysis, the operator evaluates whether these patents owned by others should be licensed, purchased, ignored, designed around, etc. To assist in performing this evaluation, the operator may run patent aging reports and\/or inventorship reports on these patents owned by others. These reports will aid the operator in conducting the evaluation.","The clustering and\/or bracketing process is an iterative one, as represented by control flow arrow . The steps of the clustering and\/or bracketing flowchart  can be performed repeatedly for the same or different BOM groups, and can be performed in any order. Accordingly, the steps of the clustering and\/or bracketing flowchart  are presented in  for purposes of illustration, and not limitation.","The above operation is described as being performed by a single operator. In practice, the above operation may require the involvement of many people with knowledge in many different fields and having different abilities (or expert systems with this knowledge and abilities).","Inventor Analysis","The inventor analysis process is illustrated in the flowchart  shown in . In step , an operator associated with the customer client entity located at a client ,  issues commands to run inventorship reports for a product, called an operator specified product for reference purposes. The product corresponds to a BOM group. For references purposes, the BOM group is called the operator specified BOM group (because it corresponds to the operator specified product). The inventor patent count module  and the inventor employment information module  in the enterprise server  perform these inventorship report functions. In particular, the inventor patent count module  performs the inventor patent count function, and the inventor employment information module  performs the inventor employment information function. The operation of the inventor patent count module  and the inventor employment information  is described above. Examples of inventor patent count reports are shown in . Examples of inventor employment information reports are shown in .","In step , the operator identifies key or top inventors of the customer corporate entity's patents based on the inventorship reports.","In step , the operator refers to the inventor employment information reports to identify whether these key inventors are still employed by the customer corporate entity. If they are still employed by the customer corporate entity, then the operator can initiate steps to ensure that the customer corporate entity retains them. If they are not still employed by the customer corporate entity, then the operator can initiate steps to ensure that these former employees are in compliance with their employment agreement with the customer corporate entity. Also, the operator can consider whether the customer corporate entity should consider rehiring them.","In step , if the key inventors are still employed by the customer corporate entity, then the operator refers to the inventor employment information reports to determine whether the talents of these inventors are being most effectively utilized by the corporate entity. For example, if the inventors are no longer assigned to the department that developed the operator specified product, then the corporate entity may want to transfer them back to that department so that they can further enhance the product.","The inventor analysis process is an iterative one, as represented by control flow arrow . The steps of the inventor analysis flowchart  can be performed repeatedly or in any order for any given BOM group. Accordingly, the steps in the inventor analysis flowchart  are provided for purposes of illustration, not limitation.","The above operation is described as being performed by a single operator. In practice, the above operation may require the involvement of many people with knowledge in many different fields and having different abilities (or expert systems with this knowledge and abilities).","Financial Analysis","The financial analysis process is represented by a flowchart  in .","In step , an operator associated with the customer corporate entity at a client ,  issues instructions to the financial modules  in the enterprise server . These instructions command the financial modules  to calculate the research and development dollars per patent in a BOM group. The BOM group is specified by the operator.","The financial modules  perform this function by first determining the number of customer patents that map to the BOM group (by reference to the BOM_patent_xref table ). Next, the financial modules  determine the R&D dollars for a project (by reference to the BOM financial table ). Then, the financial modules  divide the R&D dollars by the number of patents.","In step , the financial modules  calculate the licensing dollars resulting from a project by identifying the customer patents that map to the product (by reference to the BOM_patent_xref table ), and determining the licensing revenue generated by those patents (by reference to the patent licensing table ).","Operators analyze the data obtained from the above processing to evaluate the customer's business from a patent\/financial point of view.","It is noted that the steps of flowchart  are provided for purposes of illustration, and not limitation. Additional steps directed to other financial operations that process the data in databases  can be added to the flowchart . Additionally, the financial analysis process of  is an iterative one, as represented by control flow arrow . Further, the steps of the financial analysis flowchart  can be repeatedly performed for the same or different BOM groups, and can be performed in any order. Therefore, the steps of the financial analysis flowchart  are provided in  for purposes of illustration, and not limitation.","Strategic Planning","The customer corporate entity can utilize the present invention to perform a strategic planning process. The overall goal of the strategic planning process is to develop a future product direction and\/or future business strategy that cannot be easily duplicated by competitors. This future product direction and\/or business strategy leverages the customer corporate entity's patent protection and technology ownership. The strategic planning process may result in considerable business process re-engineering based on future business analysis.","An example of the strategic planning process is represented by flowchart  shown in . In step , BOM data for a contemplated new product is received. This BOM data may have been generated by the R&D department, for example. This BOM data is loaded into the BOM databases  in the manner described above.","In step , an operator associated with the customer corporate entity maps the customer corporate entity's patents (both owned and licensed) to the new future product. The operator also maps competitors' patents to the new future product.","In step , the operator issues instructions to run patent mapping reports pertaining to the BOM group of the proposed future product. The operator also issues reports to run clustering\/bracketing reports for the proposed future product. The patent mapping module  and the patent clustering\/bracketing module  in the enterprise server  automatically runs these reports in the manner discussed above.","From these methodology reports, the operator is able to determine if the proposed future product is adequately protected by the patents which the customer corporate entity currently owns or licenses. If the proposed future product is not adequately covered by the customer corporate entity's current patents, then the customer corporate entity may consider whether or not it should prepare and file additional patent applications to further cover the proposed future product.","Also from these methodology reports, the operator can determine if the features of the proposed future product are covered by the patents owned by others. If some features of the proposed future product are covered by patents owned by others, then the customer corporate entity can consider whether it should license the patents, purchase the patents, modify the proposed future product in order to design around the patents, ignore the patents, abandon plans for the proposed future product, etc.","The above operation is described as being performed by a single operator. In practice, the above operation may require the involvement of many people with knowledge in many different fields and having different abilities (or expert systems with this knowledge and abilities).","The above analysis and decision making process performed by the customer corporate entity may involve running additional methodology reports, such as patent citation reports, patent aging reports, inventorship reports, and financial reports.","It is noted that the steps of the strategic planning flowchart  shown in  are only representative of the type of tactical and strategic functions that can be performed based on the analysis and methodology reports that are automatically prepared by the analysis modules .","The strategic planning process is an iterative one, as represented by control flow arrow . The steps of the strategic planning flowchart  can be performed repeatedly, and in any order. Additional steps can be added to represent the additional strategic planning functions mentioned above. Accordingly, the steps of the strategic planning flowchart  shown in  are provided for purposes of illustration, and not limitation.","Integrated Methodology Embodiment","The functions and methodologies described above can be performed individually or in any combination to achieve the objectives of the customer corporate entity. For example, at times, the customer may wish to run individual reports to examine a particular aspect of its business, such as the remaining patent terms of patents that map to a particular product line. At other times, the customer may wish to run a combination of reports to analyze a larger part of its business, such as a strategic planning analysis to develop a patent strategy for a proposed future product. At still other times, the customer may wish to perform an extensive and integrated examination of its business from a patent-centric and group-oriented point of view.","An example of such an integrated methodology is represented by a flowchart  in . In this example, the patent mapping and mining process (described above with reference to ) is combined with the situation assessment process (see ) and the strategic planning process (see ).","It should be understood that the patent mapping and mining process, the situation assessment process, and the strategic planning process can be performed individually or in any combination with any other functions described herein according to the needs, requirements, and characteristics of the particular corporate entity being served.","User Interface","Referring to , the user interface module  in the client ,  supports a variety of user interface display formats, windows, and screens for enabling operators working at the client ,  to view, manipulate, and otherwise interact with data. Many of the user interface display formats and display screens supported and provided by the user interface module  are described above. Such user interface display formats and display screens described above include: example user interface display formats pertinent to the searching features of the present invention shown in , an example user interface display format pertinent to the display of group information shown in , examples of patent mapping display formats shown in , examples of patent citation report display formats shown in , examples of patent aging display formats shown in , examples of patent clustering\/bracketing display formats shown in , examples of inventor patent count display formats shown in , examples of employment information display formats shown , an example display format showing the display of patent text in a first window and patent notes in a second window shown in , and an example display format showing the display of patent text in a first window and patent images in a second window shown in .","Other user interface display formats, display windows, and display screens supported and provided by the user interface module  in the client ,  shall now be described. It should be understood that the present invention is intended and adapted to support and provide display formats, display windows, and display screens other than those shown and described herein. In fact, the present invention can support and provide any display format, display window, or display screen useful for enabling operators to view and interact with the data and the data processing described herein. Accordingly, the display screens, display windows, and the display formats shown in the figures and discussed herein are provided solely for purposes of illustration, and not limitation.","User Login",{"@attributes":{"id":"p-0920","num":"1170"},"figref":"FIG. 116","b":["11602","304","306","11602","314"]},"In order to establish a session with the Enterprise server , the operator enters his user name in a login field , and enters his password into a password field . If the operator wishes to connect with the Enterprise server  via a specific server, then the operator enters the address of this server in a server field . If the customer's network is configured to use \u201cfire walls\u201d with proxy servers, the operator enters information about the proxy server(s) in the proxy field .","Console",{"@attributes":{"id":"p-0923","num":"1173"},"figref":["FIGS. 18 and 58","FIGS. 18 and 58"]},{"@attributes":{"id":"p-0924","num":"1174"},"figref":"FIG. 117","b":["11702","11704","11706","11708","11704","11704","11706","11706","11708","11708"]},"A group hierarchy is depicted in the group pane . In the example of , the top level or root group in the group hierarchy is called the repository group . The child groups of the repository group  are not shown in  (i.e., the operator has not expanded the repository group  in the group pane ). The child groups of the repository group  are shown in  (i.e., the operator has expanded the repository group  in the group pane  in the example of ).","Referring again to , the document pane  includes a list of patents and other documents which are contained within a group selected from the group hierarchy depicted in the group pane . The patents and documents are listed in a tabular or \u201cspreadsheet\u201d format. The list of patents and documents in the document pane  includes both the patent numbers and patent bibliographical information for the patents, and bibliographic information for the non-patent documents. Such patent bibliographic information displayed in the document pane  includes the title, abstract, inventor, class, issue date, and user-defined keywords. All additional patent bibliographic information can be viewed in the document pane  by utilizing the horizontal scroll bar  to sideways scroll in the document pane . Other embodiments of the invention allow the user to select an arbitrary number of bibliographic fields to view. In example of , no patents are listed in the document pane  because a group has not been selected in the group hierarchy depicted in the group pane .","The operator can restructure the group hierarchy displayed in the Group pane  using well-known drag-and-dop operations. The operator can add any of the documents displayed in the Docunent pane  to any group in the group hierarchy displayed in the Group pane  by using well-known drag-and-drop operations.","The notes pane  displays a list of the notes associated with either a group selected in the group pane , or a patent or document selected in the document pane . The list of notes in the notes pane  is presented in a tabular or \u201cspreadsheet\u201d format. The list of notes in the notes pane  includes information that identifies the type of the note (that is, either a patent\/document note or a group note), and the title of the note. All other bibliographic or other information relating to notes can be viewed by manipulating the horizontal scroll bar  in order to sideways scroll in the notes pane .","As indicated above,  illustrates an example console  wherein the repository group  is expanded in the group pane  so that its child groups are shown. In the example of , a group called \u201canalog special effects controller subassembly\u201d  has been selected. Accordingly, a list of all patents and other documents in the selected group  is displayed in the document pane . In the example of , the selected group  includes a single patent, U.S. Pat. No. 5,029,013.","According to the present invention, the operator can view the text and\/or image of any patent or other document listed in the document pane  by selecting the patent or document using well know item selection techniques. An operator can select a patent, for example, by double clicking on the patent number, or by using any other type of well known operator navigation procedure.","Suppose that the operator selects, from the document pane , U.S. Pat. No. 5,029,013. In accordance with this selection, the user interface module  displays the text of the selected patent in a text window , (see ), and the image of the selected patent in an image window  (see ). The operator may selectively view the text window  individually, the image window  individually, or the text window  and the image window  simultaneously.",{"@attributes":{"id":"p-0932","num":"1182"},"figref":["FIG. 118","FIG. 118"],"b":["11802","11712","11710","11704","11710","11710","11706","11710","11704","614"]},"Console Tool Bars","Referring again to , a Group toolbar  is displayed in the group pane . The tools in the Group toolbar  are used to manipulate the groups of the group hierarchy displayed in the group pane . A Document toolbar  is displayed in the second pane. The tools in the Document toolbar  are used to manipulate the documents listed in the document pane . A Note toolbar  is displayed in a notes pane . The tools in the Note toolbar  are used to manipulate the notes listed in the notes pane .","The Group toolbar  is illustrated in greater detail in . The Document toolbar  is illustrated in greater detail in . The Note toolbar  is illustrated in greater detail in .","Referring to , an operator presses a Search button  in the Group toolbar  in order to conduct a search for data in the databases . An operator presses a Delete Group button  in order to delete the group selected in the Group pane . An operator presses a create New Group button  in order to create a new group. The new group is created as a child group of the group selected in the Group pane .","An operator presses a Show Group Properties button  in the Group toolbar  in order to view and edit the properties of the group selected in the Group pane . An operator presses an Import Data button  in order to import data from an external data file into the repository , . An operator presses an Export Data button  in order to export data from the repository ,  into a user specified location, such as an external file.","An operator presses a Refresh Data button  in the Group toolbar  in order to refresh the listing of all data in the Group pane , the Document pane , and the Notes pane . Refresh is needed to synchronize multi-user access to the database. Such data refresh is performed by reading from the databases . An operator presses a Reports button  in order to execute methodology reports.","Referring now to , an operator presses a Show Text button  in the Document toolbar  in order to display the text of a document selected in the Document window . An operator presses a Show Image button  in order to display the image of the document selected in the Document pane . Examples of the display of text and images are shown in .","An operator selects a Skim Images button  in the Document toolbar  in order to perform a Skim Images function. In accordance with the Skim Images function, the first image page of each document listed in the Document window  is displayed in succession by repeatedly clicking the Show Images button .","An operator presses an Add Patent button  in order to add a new patent or document to the list of patents displayed in the Document pane  (that is, to add a new patent or document to the group selected in the Group pane ). An operator presses a delete patent button  in order to delete the patent or document selected in the Document pane  from the group selected in the Group pane  (this does not delete the document from the repository).","Referring now to , an operator presses an Add new Group Note button  in order to add a new group note to a group selected in the Group pane . An operator presses an Add New Patent\/Document Note button  in order to add a new patent note to the patent or document selected in the document pane .","An operator presses a Delete Selected Group Or Patent Note button  in order to delete the note selected in the Notes window . An operator presses the Sort Notes By Type button  in order to sort the list of notes depicted in the Notes window  by their type (that is, by group or by patent). An operator presses a Sort Notes By Title button  in order to sort the list of notes depicted in the Notes window  according to their titles.","Various ones of these functions that are invoked by pressing buttons in the Group toolbar , the Document toolbar , and the note toolbar  are further described in the following sections.","Creating a New Group","An operator presses the Create New Group button  in the Group toolbar  in order to create a new group in the group hierarchy displayed in the Group pane . The new group is created as a child group of the group selected in the Group pane .","Consider, for example, the Example console  illustrated in . Assume that the operator presses the Create New Group button  when a group entitled \u201canalog special effects controller subassembly\u201d  is selected. In this case, a new group  is created as a child group of the selected group . The default name of the new group  is \u201cA New Group\u201d. The name of the new group  can then be modified using well-known procedures (such as by selecting the new group , selecting a Rename command, and then typing in a new name for the new group ).  illustrates a scenario where the new group  has been renamed as \u201cSample New Name.\u201d","Editing Group Properties","An operator presses the Show Group Properties button  in the Group toolbar  in order to view and edit the properties of the group selected in the Group pane . Group Viewing And Editing windows  are shown in . Referring first to , a Group Properties tab  is displayed. The operator can view and edit general information about the group selected in the Group pane  by using the General Group Properties tab . In particular, the operator can view and edit the group name via a Name field , and a description about the group via a Description field . The General Group Properties tab  also displays the Group Identifier of the group selected in the Group pane  in a field .",{"@attributes":{"id":"p-0950","num":"1200"},"figref":"FIG. 126","b":["12604","12608","12610"]},"It is noted that access to the General Group Properties tab  and the Group Properties Security tab  is limited to operators having sufficiently high access levels with respect to the selected group.","Shared Groups","In an embodiment of the invention, shared groups are graphically depicted in the console using a stacked folders icon  ().  shows an example console  where both an \u201cOnly Luke can see!\u201d group  and an \u201cOscar Project\u201d group  share a \u201cNovember Project\u201d group , which is a shared group.",{"@attributes":{"id":"p-0954","num":"1204"},"figref":["FIG. 156","FIG. 156","FIG. 154","FIG. 156"],"b":["15602","15602"]},"Invoking Patent-Centric and Group-Oriented Analysis Functions","An operator presses the Run Reports button  in the Group toolbar  in order to execute methodology reports. These methodology reports are performed by the Analysis modules  in the Enterprise server  (see ), and are described above.","Upon the pressing of the Run Report button , a Report Generator screen  is displayed (). The operator selects the report or function that is to be executed by pressing a button . This results in displaying a list of all available reports\/functions. An example display of this function\/reports list  is shown in . The operator selects one of the function\/reports from this list in a well-known manner. In the example of , the operator has selected the inventor employment information function (which is executed by the inventor employment information module  of the Enterprise server ).","The operator can enter information into the other fields of the report generator screen  in order to define and\/or limit the scope of the function that is to be performed. In particular, the operator can specify the number of levels in the group hierarchy to consider in performing the function (specified in field ) by entering the appropriate level information into a field . If, for example, the operator enters the value 1 into field , then only the group selected in the Group pane  is considered in performing the selected function. If, instead, the operator enters the value 2 into field , then both the selected group and its immediate child group (one level down from the selected group) are considered in performing the selected function. In the example of , the operator has entered the value 5 into field . Accordingly, in performing the inventor employment information function, both the selected group and four levels of its child groups are considered.","The operator can limit the patents which are to be considered in performing the selected function by patent expiration dates by entering information into fields . In the example of , all patents which are expiring or which have expired between the dates of Jan. 1, 1900 and Dec. 21, 2100 are considered in performing employment information function.","The operator can also limit the patents which are to be considered in performing the selected function according to the remaining patent terms of the patents. This information is entered into fields . In the example of , only patents with remaining patent terms between three years and 10 years are considered in performing the inventor employment information function.","Once the operator has defined the function that is to be performed by entering information into the report generator screen , the operator presses the Execute button  in order to execute the selected function.","Adding Documents to a Group","The operator presses an Add a Patent\/Document button  in the Document toolbar  in order to add a patent or some other document to the group selected in the Group window . Upon pressing the Add a Patent\/Document button , a new Document window  is displayed (). The operator inserts information identifying the document that is to be added to the selected group in a Document Name field . In an alternative embodiment, the operator can select a document for insertion into the selected group by browsing through a graphical list of the documents in the Document databases , and use well-known drag and drop techniques to place documents into the selected group.","Adding a Document Note","The operator presses the Add a New Patent\/Document Note button  in the note toolbar  in order to add a new note to a document. Consider the example shown in . In this example, a Text window  displays a portion of the text from U.S. Pat. No. 5,029,013. The present invention allows the operator to attach a note to any portion of this patent. Suppose that the operator wishes to attach a note to the title, \u201cApparatus for Editing Videotapes\u201d . According to the present invention, the operator selects a pen , and then uses the selected pen  to highlight the title . The operator then presses the Add a New Patent\/Document Note button . This results in a new note being created. This new note is displayed in a Note window . The operator can enter a title for the note in field , and can enter the text or other information for the note in field . The operator can also indicate whether this note represents attorney work product via field .","The Note window  includes location information that identifies the location of the text in the document to which the note is linked. This location information is represented by reference numbers  and . The location information  indicates that the note is attached to a portion of U.S. Pat. No. 5,029,013 starting at line 6. The location information  indicates that this portion in U.S. Pat. No. 5,029,013 represents bibliographical information portion (indicated by the symbol B).","In some embodiments, it is not necessary for the operator to press the Add a New Patent\/Document Note button . Instead, the new note is automatically created once the selected pen  is used to highlight the title . Other aspects of the present invention relating to creating and manipulating notes are described in U.S. Pat. No. 5,623,681, U.S. Pat. No. 5,623,679, pending U.S. application Ser. No. 08\/341,129, and pending U.S. application Ser. No. 08\/590,082, incorporated herein by reference in their entireties.","The Notes window  includes an Unlink button  which, when pressed, operates to unlink the note from the document. The note is then called a floating note. The Notes window  also includes a Contract button  which operates to reduce the area on the display screen which is used to display notes. The Notes window  also includes an Expand button  which operates to increase the amount of space on the display screen which is used to display notes.","As described above, the Notes pane  in the console  lists the notes associated with the selected document in the Document pane , or the selected group in the Group pane . In the example of , the Notes window  lists the notes associated with the document selected in the Document pane . The document selected in Document pane  is U.S. Pat. No. 5,029,013. As just explained above, the operator has created a new note that is linked to this selected document. The title of this new note is \u201cSimple Note\u201d. Accordingly, this note is listed in the Notes window . The listing corresponding to this new note indicates the type of a note (in this case, the type is P, indicating a patent note) and the title of the new note (in this case, the title is \u201cSimple Note\u201d). Additional information relating to the new note, and any other notes listed in the Notes pane , can be viewed by sideways scrolling in the Notes pane  by use of the horizontal scroll bar .","Adding a Group Note","The operator presses the Add a New Group Note button  in the Note toolbar  in order to create a new group note for the group selected in the group pane . Upon selection of the Add a New Group Note button , a New Group window  is displayed (). In the New Group window , the user can enter the title of the group note in field , and can enter information for the group note in field . The operator can also indicate whether the group note constitutes attorney work product by checking field .","The Notes pane  lists the notes corresponding to the document selected in the Document pane , or the group selected in the Group pane . In the example of , the group titled \u201cAnalog special effects controller subsystem\u201d  is selected. Accordingly, the Notes pane  lists all group notes associated with this selected group . The New Group note (represented by the data in the New Group window ) is linked to the selected group . Accordingly, the new group note is listed in the notes pane . The listing for this new group note indicates the type of the note (in this case, the type is C, for a case or group note) and the title of the group note (in the example of , the title is \u201cPurpose of this group\u201d). Other information pertaining to the group notes can be viewed in the Notes pane  by horizontally scrolling in the Notes pane  by using the horizontal scroll bar .","Searching","The operator presses the Search button  in the Group toolbar  in order to perform a search of the data in the databases . Upon pressing the Search button , a search screen  is displayed (). Other example search screens are shown in . The operator enters information into the Search screen  in order to define the parameters of a new search. In the example of , the operator has entered the phrase \u201cvideo tape\u201d into an abstract field . Accordingly, the operator has indicated that he wishes to conduct a new search for all documents where the phrase \u201cvideo tape\u201d appears in the abstract.",{"@attributes":{"id":"p-0975","num":"1225"},"figref":["FIG. 122","FIG. 121"],"b":["12202","12102","12204","12204","12204","11704"]},"A list of the documents identified by operation of the search is displayed in the Document pane . The operator can add these documents to any other group in the group hierarchy (displayed in the Group pane ) using well-known drag-and-drop operations. Alternatively, the operator can convert the new group  to a permanent group (pre-defined or user-defined), and maintain these documents in the permanent group  entitled \u201cNew Search\u201d.",{"@attributes":{"id":"p-0977","num":"1227"},"figref":["FIG. 155","FIG. 155"],"b":["15502","15504","15508","11724","15506","15506","15504","15504"]},"In an embodiment of the invention, a temporary group is automatically deleted at some time in the future, such as after a timeout or at the conclusion of the session with the enterprise server , if not converted to a permanent group before then.","Web Searching","The operation of a web client  with regard to searching for data in the databases  according to an embodiment of the invention is described in this section. It should be understood, however, that the search capabilities described herein are applicable to all clients , in various embodiments of the invention. That is, in some embodiments of the invention, all clients , include at least the capabilities described herein.","In the following, searching at the web clients  is described in the context of patent searching. However, the following description applies to searching for all types of documents.","An operator at a web client  presses the Search button  in the Group toolbar  in order to access the search capabilities of the present invention. Upon pressing the Search button , a Patent Search screen or window  is displayed (). This Patent Search screen  is similar to the one shown in . In fact, some embodiments use the Patent Search screen  shown in . Other embodiments use both the Patent Search screens  and  shown in , respectively.","The operator enters information into the fields of the Patent Search screen  in order to define the parameters of the search. For example, the operator can define the search in terms of patent number, title, inventor, assignee, class, user-defined key words, date of issue, abstract, and\/or full patent text by entering search terms into the corresponding fields of the Patent Search screen . Also, the operator can select which fields to display in the search results by appropriate selection of the Check Box fields . Further, the operator can order the display or printing of the search results according to a number of factors, such as patent number, assignee, expiration date, number of years remaining in patent term, or score. The score corresponds to the number of hits of the search parameters in a patent. The operator orders the search results by appropriate selection in the Order field . The operator can also specify the number of patents in the search results to display per screen by entering the appropriate information in field .","In the example of , the operator has entered the search term \u201cPCMCIA\u201d in the Abstract field. In other words, the search defined by the operator is one that will identify all patents having abstracts with one or more occurrences of the word \u201cPCMCIA\u201d. After the operator has fully defined the search in the Patent Search screen , the operator presses the search button  in order to execute the search.",{"@attributes":{"id":"p-0985","num":"1235"},"figref":["FIGS. 141-143","FIG. 140","FIG. 142"],"b":["14002","14104","14102","14102","14106","14202","14204","14302","14304","14108","14102","14202","14302","14108"]},"Referring to , the information on the patents identified by performing the search is presented in a tabular format. The information displayed for each patent includes the score (that is, the number of hits of the search parameters in the patent), the patent number, and the title. More or less information can be displayed for each patent. This is controlled by the operator by appropriately checking the check boxes  in the Patent Search screen .","The information for each patent also includes an indication of whether or not the patent is in the local repository (i.e., stored in the patent database ). This is indicated in the column called \u201cIn Repository?\u201d In the example of , for example, U.S. Pat. No. 5,334,030 is not in the patent database . However, U.S. Pat. No. 5,540,597 is stored in the patent database .","The operator can view additional information on any of the patents listed in the Search Results screens , ,  by selecting the patent (for example, by double-clicking on the patent number in the list of patents). The extent of the information that is displayed for a selected patent depends on whether or not the patent is stored in the patent database . If the patent is not stored in the patent database, then patent bibliographic information (retrieved from the patent bibliographic databases ) is displayed for the selected patent. An example display of such patent bibliographic information for a selected patent is shown in . The information in this example display  corresponds to U.S. Pat. No. 5,183,404 (which the operator selected by selecting entry  in the Search Results screen  of ).","The display screen  includes patent bibliographic information  on U.S. Pat. No. 5,183,404. Also, in accordance with an embodiment of the invention, the display screen  also includes text corresponding to the abstract  of U.S. Pat. No. 5,183,404. In other words, for patents not stored in the patent database , the system of the present invention maintains both patent bibliographic information and the abstract. Such patent bibliographic information and abstract are stored in the patent bibliographic databases . (For example, the abstract can be stored in an Abstract database that is keyed to the primary patent table  according to document_ID.)",{"@attributes":{"id":"p-0990","num":"1240"},"figref":["FIGS. 145A-145C","FIG. 145A","FIG. 143"],"b":["614","14502","14310","14302"]},"The operator can elect to display the text of the selected patent by pressing the Text button . In the example of , the operator has pressed the Text button . Accordingly, the text of the selected patent is displayed in the Patent Information screens of .  represent the first three (of 15) electronic pages of the text of the selected patent.","The operator presses an Image button  to display the images of the selected patent. An example of such a display is shown in  (although the example in  does not correspond to U.S. Pat. No. 5,615,328). The operator presses a Text And Image button  to simultaneously display the text and images of the selected patent. An example display of such text and image is shown in  (although the example display in  does not correspond to U.S. Pat. No. 5,615,328 shown in ). If the operator wishes to initiate a new search, the operator presses a New Search button . This causes the Patent Search screen  () to be displayed.","The selected patent as displayed in the display screens of  is internally hyperlinked. Such hyperlinks are represented by buttons . This button represented hyperlinking is a well known use of HTML.","If the operator wishes to view the bibliography of the selected patent, for example, then the operator presses the Bibliography button . The operator presses the Cross Reference To Related Applications button  to view cross-reference information of the selected patent. The operator presses the Brief Description Of Drawings button  to view the brief description of the drawings section of the selected patent. The operator presses the Detailed Description Of The Invention button  to view the detailed description section of the selected patent. The operator presses the Claims button  to view the claims section of the selected patent.","Preferably, the invention implements such internal hyperlinking using a linked list of nodes, wherein each node corresponds to a section of the selected patent. Specifically, each node includes a link to the corresponding section of the selected patent. When the operator selects one of the Internal Linking buttons , the invention traverses through the linked list corresponding to the selected patent until it finds the node corresponding to the section that the operator wishes to view. The invention then follows the link stored in the node to access the data corresponding to the section that the operator wishes to view. Additional details pertaining to this linked list is described in U.S. Pat. No. 5,623,679, incorporated by reference herein.","The Patent Information display screens in  may also linked to external objects, such as other patents, documents, etc. In other words, the selected document is linked to external objects. For example, if the operator wishes to view the patent representing the immediate parent of the selected patent, then the operator presses a Parent Case Text button . This results in the parent patent being retrieved and displayed.","The selected patent may also be linked to references to other documents that are contained in the selected patent. For example, the selected patent as displayed in  includes links to cited U.S. patent documents. These links are represented by reference numbers  and . Hyperlinks in the selected patent are denoted by underlining. Alternatively, any other method of highlighting can be used, such as fonts, color coding, symbols, icons, etc.","The selected patent may also include links to citations of other publications, as represented by reference number , and citations to related applications, as represented by reference number .","For reference purposes, citations to documents that are linked to the actual documents are called linked citations.","The operator can view the document corresponding to any linked citation by selecting that linked citation. For example,  illustrates a display screen that shows information pertaining to U.S. Pat. No. 5,206,830. This display screen  was generated pursuant to the operator selecting a corresponding linked citation  in the selected patent (see ). In the display screen  of , the operator can elect to electronically order a copy of the patent from a third party provider by pressing an Order button .","Referring again to , not all document citations contained in the selected patent are linked to the cited documents. For example, referring to , the citation to U.S. Pat. No. 5,430,681 is not linked to the cited document (that is, it is not linked to an electronic copy of U.S. Pat. No. 5,430,681). According to the present invention, a citation in a document being displayed is linked to the cited reference only if that cited reference is represented in the document bibliographic databases  and\/or the document databases . In other words, the documents corresponding to linked citations are represented in the document bibliographic databases  and\/or the document databases .","A citation in a document being displayed is not a linked citation if the corresponding document is not represented in the document bibliographic databases  or the document databases . Accordingly, in the example of , the document bibliographic databases  and the document databases  include no information pertaining to U.S. Pat. No. 5,430,681.","In other words, whether a citation to a document is linked to the document depends on whether or not the databases  store information on that document. If the databases  store information on the document, then the citation to the document is linked to the document (i.e., the citation is a linked citation). Otherwise, the citation to the document is not linked to the document (i.e., the citation is not a linked citation).","According to an embodiment of the invention, hyperlinking information is stored in a table in the databases . This hyperlinking table stores information pertaining to the links between documents. For a particular document, the hyperlinking table stores information that identifies the links between that particular document and other documents (these other documents being cited in the particular document). More particularly, each entry of this table corresponds to a linked citation, and stores information identifying both ends of the link of the linked citation. Specifically, each entry stores information that identifies a first document and the linked portion in the first document, and also includes information that identifies the object to which the linked portion in the first document is linked. This object may be a second document, for example. In the example of , the hyperlinking table includes hyperlinking information that identifies the documents that are linked to the patent being displayed (that is, U.S. Pat. No. 5,615,328).","In an alternate embodiment, when a document is displayed, the document is automatically analyzed to identify and generate a list of all citations to other documents contained in the document. This list is then compared to the information stored in the databases . If the databases  have stored therein information on a document in the list, then the citation to that document becomes a linked citation. Otherwise, the citation to the document does not become a linked citation.","The invention also allows a document to have user-defined links. In operation, an operator would select a portion of a document being displayed, and then link that portion to some object. That object may be internal to the document (that is, linking a portion of a patent to another portion of the same patent), or external to the document (for example, linking a portion of a patent to another document or to a website). One portion corresponding to a user-defined link can completely or partially overlap with another portion corresponding to a user-defined link.","For example, as represented in , the user has selected the company name \u201cInternational Business Machines Corporation\u201d and has linked this selected portion  of the document being displayed to an external object. In the example of , the operator has linked this portion  of the document being displayed to the IBM patent website. Accordingly, when the operator selects this linked portion , the IBM website is accessed.","Preferably, information pertaining to user-defined links is stored in a user-defined linking table in the databases . Each entry of this table corresponds to a user-defined link, and stores information identifying both ends of the link. Specifically, each entry stores information that identifies the document and the linked portion in the document, and also includes information that identifies the object to which the linked portion in the document is linked.","In practice, when the operator selects a linked citation, the client , generates a request to the Enterprise server  to retrieve information pertaining to the document corresponding to that linked citation (assuming that such information is not already stored in the cache within the client ,). In the case of web clients , patent-centric URL commands are sent to the Enterprise server  (see ).","Referring again to the Search Results screens in , the operator can press a Get Results In File button  to write the search results to a user-specified file. The operator can also press an \u201cIn Repository\u201d button  to view a subset of the search results corresponding to patents that are in the local patent repository (that is, patents that are in the Patent database ). An example display screen that results from pressing the \u201cIn Repository\u201d button  is presented in .","Still referring to , the operator can press a \u201cNot In Repository\u201d button  in order to view a subset of the search results corresponding to patents that are not in the Patent database . This list of patents not in the Patent database  may be useful to the operator. For example, the operator can generate a purchase order to obtain these patents using this list.","Referring now to , the Search Results: Patents In Repository display screen  includes a Skim Images button . The operator presses the Skim Images button  in order to view the first image page of each of the patents listed in table  (this table lists the patents from the search results that are contained in the Patent database ). The operator displays the first image page of successive patents listed in table  by repeatedly clicking the Skip Images button .","A Skip Images display screen  is shown in . This Skim Images Display screen  results from clicking the Skip Images button  a first time (that is, the image displayed in the Skip Images display screen  corresponds to the first page of the first patent listed in table ). The operator can view the first image page of either a previous patent or a next patent in the list  by use of the Navigation buttons .","With regard to the web client , pressing the Skip Images button  causes the web browser  to generate a patent-centric URL command. This patent-centric URL command represents a request to the Enterprise server  to retrieve the first image page of the associated patent (that is, the next patent in the list ). Enterprise server  responds by returning raw data corresponding to this image page. The translator  in the web server  converts this raw data to HTML data. The HTML data is sent to the web client . The browser  in the web client  receives this HTML data, and renders the HTML data in order to display the first image page of the patent, as shown by way of example in .","An example patent-centric URL command is displayed in field  of the Skim Images display .","The Skim Images feature of the present invention is analogous to a manual search of patents in the shoes of the USPTO Search Room. During such manual searches, practitioners often quickly thumb through the patents in a patent shoe by looking at the first pages of the patents. The Skim Images feature of the present invention enables an operator to quickly electronically scan over the first image pages of the patents in the list , thereby emulating a manual search through the shoes in the PTO Search Room. It should be noted that the images displayed to the user are preferably HTML data rendered by the browser .","Importing Data","The operator presses the Import Data button  in the Group toolbar  in order to import data from an external location into the repository ,. Upon pressing the Import Data button , an Import Data window  is displayed (). In the Import Data window , the user specifies the external drive in field  (the user can browse through the available storage locations by pressing button ). The files in this selected location are displayed in window . The operator enters the name of the file to import in field . The type of this file (such as text, database, spreadsheet, etc.) is entered in field . After specifying the parameters of the import operation, the operator presses the Open button  in order to import the selected file from the selected external storage location into the repository , .","Exporting Data","The operator presses the Export Data button  in the Group toolbar  in order to export data from the repository , to an external location, such as an external file. Upon pressing the Export Data button , an Export window  is displayed (). In the Export window , the operator enters the external location of the file to which the export operation is to be directed. This external location is entered in field . It is noted that the operator can browse through all available external locations by pressing button . A list of the files located in the external location (specified in field ) is displayed in field . The user enters the name of the external location (to which the data is to be exported) in field . The type of the file (such as text, spreadsheet, database) is entered in field . After the operator has specified the parameters of the export operation, the operator presses the Save button  in order to execute the export data operation.","Data Presenting and Processing Hyperbolic Trees","As described above, hyperbolic trees can be used for processing and presenting data in the context of the patent citation function. In the following, example uses of hyperbolic trees for data presentation and processing in the context of the present invention are described. First, the hyperbolic tree mechanism is generally described. Next, various functions of the present invention that optionally use hyperbolic trees for data presentation and processing are described.","General Description of Hyperbolic Trees","A hyperbolic tree or hyperbolic browser is a well known \u201cfocus+context\u201d technique for visualizing and manipulating large hierarchies, such as trees. A hyperbolic browser assigns more display space to a portion of the tree while still embedding it in the context of the entire tree. The essence of this scheme is to lay out the tree in a uniform way on a hyperbolic plane and map this plane onto a circular display region. Thus, hyperbolic trees support a smooth blending between focus and context, as well as continuous redirection of the focus. Well known procedures exist for manipulating the focus using pointer clicks as well as interactive dragging, and for smoothly animating transitions across such manipulation.","A hyperbolic browser initially displays a tree with its root at the center, but the display can be smoothly transformed to bring other nodes into focus. This is shown in the example of .  illustrates an example hyperbolic tree . A portion of the hyperbolic tree  is displayed in a window . The hyperbolic tree  includes a root node  and a plurality of additional nodes connected either directly or indirectly to the root node . For example, node  is connected directly to root node . Node  is connected indirectly to root node .","Additional portions of the hyperbolic tree  can be expanded and displayed in the window  (that is, focus can be redirected to those portions) by traversing to the desired portions in the hyperbolic tree . An operator traverses the hyperbolic tree  using a pointer device, such as a mouse. For example, suppose that the operator wishes to focus the hyperbolic tree  at node . In this case, the operator moves the mouse (represented by icon ) and clicks proximate to node . In response, the portion of the hyperbolic tree  proximate to node  is expanded and displayed. This is shown in .","With hyperbolic trees, the amount of space available to a node falls off as a continuous function of its distance in the tree from the point in the center. Thus, the context always includes several generations of parents, siblings, and children, making it easier for the user to explore the hierarchy without getting lost.","Hyperbolic trees exploit well known hyperbolic geometry. Hyperbolic geometry is described in a number of publicly available documents, such as Coxeter, -, University of Toronto Press, 1965, and Moise, , Addison-Wesley, 1974. As is well known, the essence of hyperbolic trees is to lay out the hierarchy, such as a tree, on a hyperbolic plane and map this plane onto a circular display region. The hyperbolic plane is a non-Euclidean geometry in which parallel lines diverge away from each other. This leads to the convenient property that the circumference of a circle on the hyperbolic plane grows exponentially with its radius, which means that exponentially more space is available with increasing distance. Thus, trees\u2014which tend to expand exponentially with depth\u2014can be laid out in hyperbolic space in a uniform way, so that the distance (as measured in the hyperbolic geometry) between parents, children, and siblings is approximately the same everywhere in the hierarchy.","While the hyperbolic plane is a mathematical object, it can be mapped in a natural way onto the unit disk, which provides a means for displaying it on an ordinary (Euclidean) display. This mapping displays portions of the plane near the origin using more space than other portions of the plane. Very remote parts of the hyperbolic plane get minuscule amounts of space near the edge of the disk. Translating the tree on the hyperbolic plane provides a mechanism for controlling which portion of the structure receives the most space without compromising the illusion of viewing the entire hyperbolic plane.","Much of the above general description of hyperbolic trees and browsers was taken or adapted from Lamping et al., \u201cA Focus+Context Technique Based on Hyperbolic Geometry for Visualizing Large Hierarchies,\u201d 95 , Xerox Palo Alto Research Center, 1995 (including the Appendix entitled \u201cImplementing Hyperbolic Geometry\u201d), incorporated herein by reference in its entirety. In addition to conventional sources, the Lamping et al. document and its Appendix are available on the Internet at www.acm.org\/sigchi\/chi95\/Electronic\/documnts\/papers\/jl_bdy.htm. Hyperbolic trees and browsers are described in a number of additional publicly available documents, such as , Version 1.0, Xerox Corporation and InXight Software, Inc., January 1997, which is incorporated herein by reference in its entirety.","Each node in a hyperbolic tree, when being displayed, includes one parent node and zero or more child nodes. The one exception is the root node, which does not have a parent node, but which has zero or more child nodes. For example, node  in  includes one parent node (node ) and three child nodes (nodes , , and ).","This description of the hyperbolic tree is a general description of the \u201ctree\u201d construct. That is, a tree includes a root node and multiple non-root nodes each having a single parent node and zero or more child nodes.","A graph, such as a directed acyclic graph (DAG), differs from a tree. Like a tree, a DAG includes a root node that does not have any parent nodes, and that has zero or more child nodes. (Generally, a DAG is not limited to a single root, or parentless, node. However, DAGs when used with the present invention either include a single root node, or are made to include a single root node. This is done by creating an artificial root node, and adding to it as children all of the previously parentless nodes.)","Also like a tree, each non-root node in a DAG includes zero or more child nodes. However, unlike trees, each non-root node in a DAG includes one or more parent nodes. An example DAG  is shown in  where non-root node  includes parent nodes B and C.","Trees and graphs (such as DAGs) are well known and are described in many publicly available documents, such as Aho et al., , ISBN 0-201-00023-7, 1983.","Many of the modules of the present invention generate data which is optimally represented as a graph, such as a DAG. For example, patent citation data is best represented as a DAG since any given patent can be cited in multiple patents, and can also itself cite multiple patents. Also, claim charts are optimally represented as DAGs since any given dependent claim can depend from multiple parent claims (that is, a multiple dependent claim).","At the same time, the data generated by modules of the present invention can often be effectively represented through use of hyperbolic trees. This is the case, for example, with multi-level patent citation data (as described above). Accordingly, various modules of the present invention enable the operator to display data using hyperbolic trees.","Preferably, the present invention represents data, where appropriate, as a graph, such as a DAG. When an operator elects to display the data using a hyperbolic tree format, the invention does so.","Some well known hyperbolic browser implementations are capable of generating and displaying hyperbolic trees directly from DAGs. These hyperbolic browser implementations conceptually operate by mapping the root node in the DAG to the root node in the hyperbolic tree. Also, non-root nodes in DAG that have a single parent node are directly mapped to corresponding nodes in the hyperbolic tree. These hyperbolic browser implementations conceptually map non-root nodes in the DAG that have multiple parent nodes to multiple nodes in the hyperbolic tree, wherein each of these tree nodes are linked to a single parent node in the hyperbolic tree. This is shown in , where node D has parent nodes B and C in DAG . As a result of this conceptual mapping process in hyperbolic browser, nodes A and B are created in the hyperbolic tree . Each of these nodes A and B is linked to a single parent node (that is, nodes B and C) in the hyperbolic tree . The process of generating and populating a hyperbolic tree from a DAG by such hyperbolic browser implementations will be apparent to persons skilled in the relevant art(s).","When operating with such hyperbolic browser implementations, the invention passes the DAG to the hyperbolic browser. The hyperbolic browser generates and displays a hyperbolic tree directly from the DAG.","Other well known hyperbolic browser implementations are not capable of generating and displaying hyperbolic trees directly from DAGs. When working with such hyperbolic browser implementations, the invention translates or maps the DAG to a tree format. This mapping process is illustrated in . According to this mapping process, the root node in the DAG  is directly mapped to the root node in the tree  (see node A). Also, non-root nodes in DAG  that have a single parent node are directly mapped to corresponding nodes in the tree  (see nodes B and C). Non-root nodes in the DAG  that have multiple parent nodes are mapped to multiple nodes in the tree . Each of these tree nodes are linked to a single parent node in the tree . See node D, which has parent nodes B and C in DAG . As a result of the mapping process, nodes A and B are created in the tree . Each of these nodes A and B is linked to a single parent node (that is, nodes B and C).","The invention then passes the tree  to the hyperbolic browser. The hyperbolic browser generates and displays a hyperbolic tree from the tree . The process of generating and populating a hyperbolic tree from the tree  will be apparent to persons skilled in the relevant art(s).","In some embodiments, the invention performs this mapping process even when working with a DAG-enabled hyperbolic browser. This may be done for performance reasons. For example, performance may be enhanced by having the invention perform the mapping function, as opposed to the hyperbolic browser performing the mapping function.","Since the invention generates a graph or DAG  to represent data, where appropriate, it is possible to easily display the information in DAG  using other display mechanisms that are DAG-capable or DAG-enabled, or more generally graph-capable or graph-enabled. The scope and spirit of the present invention is intended and adapted to operate with DAG-capable or DAG-enabled display mechanisms, or more generally graph-capable or graph-enabled mechanisms, including those presently existing and those that will be developed in the future.","Various functions of the present invention that optionally use hyperbolic trees to present and process data are described in the following sections.","Patent Citation Tree","According to an embodiment of the present invention, the patent citation module  performs a patent citation tree function (in addition to the functions described above).",{"@attributes":{"id":"p-1047","num":"1297"},"figref":"FIG. 164","b":["16404","16412","16404"]},"As discussed below, the nodes in the patent citation tree  are preferably color coded or otherwise emphasized (by modifying the display properties of the nodes) according to patent ownership or assignee, or some other criteria, such as time (i.e., issue date) or user-selection (this is described below). As a result, the patent citation tree  is very useful when performing clustering analysis and\/or bracketing analysis. In fact, the patent clustering\/bracketing module  in some embodiments is capable of using hyperbolic trees to represent its data output. Accordingly, the description below of the patent citation module  when performing the patent citation tree function using hyperbolic trees is also applicable to the patent clustering\/bracketing module . Additionally, other modules of the invention are capable of presenting their data output using hyperbolic trees. Accordingly, the following description is also applicable to these other modules of the invention.","Patent Citation Tree (Network Client)","The patent citation tree function when being performed by a network client  interacting with the enterprise server  shall now be described with reference to a flowchart  in . For illustrative purposes, suppose that an operator at a network client  is viewing the example console  shown in .","In step , the operator selects a patent from a listing of patents displayed in document pane . The patent selected shall be referred to as the '484 patent. The operator selects the '484 patent using a pointing device, such as a mouse (represented by icon ). An indication of this selection of the '484 patent is received by the network client .","In step , while the '484 patent is selected, the operator issues a command to perform a citation analysis function. The operator may issue this command by right-clicking (while the mouse is positioned over the '484 patent in the document pane ) to bring up a context-sensitive pop-up menu , a portion of which is shown in . Alternatively, the operator can press a button associated with the citation analysis function in the toolbar  (which has been modified to include options in addition to those described above, such as the citation analysis function option), or make a selection from a menu accessible via the menu bar. The network client  receives an indication of this command issued by the operator.","In step , the network client  presents a dialogue box  () to the operator. In this dialogue box , the operator identifies whether he wishes to perform a forward citation function or a backward citation function. Also, the operator defines the scope of the citation analysis to be performed by indicating the number of levels that should be cited. This information entered into the dialogue box  is received by the network client .","In step , the network client  interacts with the enterprise server  as necessary to retrieve information from the databases  pertinent to the citation analysis tree function specified by the operator. The manner in which step  is performed is illustrated in a flowchart shown in .","In step , the network client  sends a request to the enterprise server . The network client  generates the request in accordance with the enterprise server API discussed above. Accordingly, the request generated by the network client  conforms to the enterprise server API. Preferably, the request is made using the ReqAnalysis Citation command (described above). Alternatively, the request can be made using a properly formed ReqFunction command (described above). The request specifies: (1) either a backward citation search or a forward citation search (as indicated by the user in dialogue box ); (2) the '484 patent; and (3) the number of levels (as specified by the operator in dialogue box ).","In step , the enterprise server  processes the request. In particular, the enterprise server  accesses the patent table  () to identify the document_id associated with the '484 patent. For backward citation searches, the enterprise server  then accesses the PatentRef Table  () using this document_id as the key to identify all patents which are cited in the '484 patent. Each hit in the PatentRef table  corresponds to a patent that is cited in the '484 patent. When performing a forward patent citation search, the enterprise server  accesses the PatentRef Table  to identify all patents which cite the '484 patent. In this case, the enterprise server  uses the document_id of the '484 patent as a key in searching the RefPatentNo field of the PatentRef table  (in backward searches, the document_id field of the PatentRef table  is searched). Each hit in the PatentRef table  corresponds to a patent that cites the '484 patent.","For patent citations of one level, the search is then complete. However, for patent citations of greater than one level, the enterprise server  must repeatedly accesses the Patent RefTable . For example, consider abackward patent citation function of two levels. Suppose that the above described operation identified that patents P and P are cited in the '484 patent. This is the first level. The second level refers to the patents that are cited in patents P and P. Accordingly, the enterprise server  must perform the above described operations for each of patents P and P, to identify the patents cited in P and P.","In practice, to enhance performance, a single search command is issued for each level of the citation function. For example, a first search command is issued to identify all patents that cite a patent P (for a forward citation function). This is the first level. Suppose that patents P, P, and P are identified by this first search command. In the second level, a second search command is issued to identify all patents that cite patents P, P, and P. In a similar manner, a single search command is issued for each of the other levels of the citation function being performed.","Further in step , the enterprise server  processes the information retrieved from the databases  and generates two tables. In particular, the enterprise server  generates a parent\/child table. An example patent\/child Table  is shown in . In the parent\/child Table , parent\/child relationships between the patents retrieved from the databases  are indicated. The parent\/child DAG  corresponding to the parent\/child Table  is shown in . In DAG , in the context of the example involving the '484 patent, node  corresponds to the '484 patent.","The enterprise server  also creates a patent bibliographic information table. An example patent bibliographic information Table  is shown in . In the patent bibliographic information Table , there is a row for each patent represented in the parent\/child Table . The row corresponding to each of these patents stores bibliographic information for that patent.","In other embodiments, the client  issues two commands, a first command to retrieve the parent\/child information, and a second command to retrieve bibliographic information on the parents and children. In such embodiments, the ReqAnalysis Citation function may be configured to optionally return only the parent\/child information. Other enterprise server API commands (described above) could be used to retrieve patent bibliographic information.","In step , the enterprise server  transfers the patent\/child table  and the patent bibliographic information table  to the requesting network client.","Referring again to , in step  the network client , after receiving the parent\/child table  and the patent bibliographic information table , generates a citation analysis DAG corresponding to the patent\/child relationships indicated in the parent\/child table . Alternatively, the patent bibliographic information table  can be retrieved as necessary, when the operator wants to view a patent (as described below). As indicated above,  illustrates the citation analysis DAG  for the parent\/child table  of . The manner in which the network client  performs step  is represented by a flowchart shown in .","In step , the network client  initializes the citation analysis DAG . The citation analysis DAG  includes a root node representing the selected patent (that is, the '484 patent), and nodes for each of the other patents (i.e., patents that cite the '484 patent, or that are cited in the '484 patent). In the example of , the root node, representing the '484 patent, is node . The other nodes - represent patents that are cited by the '484 patent (in the case of a backward citation function), or patents that cite the '484 patent (in the case of a forward citation function). Note that, upon completion of step , the links between nodes in the citation analysis DAG  have not yet been established.","In step , the network client  selects one of the nodes in the citation analysis DAG  for analysis.","In step , the network client  generates a link for each parent\/child relationship for the selected node, where the selected node is the child. Such parent\/child relationship information is obtained from the parent\/child Table . For example, assume that node  is the selected node. As indicated in the parent\/child Table , node  (or, equivalently, patent ) is the child of patent  and patent . Accordingly, in step , the network client  creates a link to node  in both node  and node . The information representing these links is preferably stored in the parent nodes of the selected node to allow navigation of the tree from the root down.","In step , the network client  determines whether there are any additional nodes in the citation analysis DAG  that have not yet been processed. If there are such nodes, then control returns to step . Otherwise, the citation analysis DAG  is complete, and control returns to flowchart  in .","Referring again to , in step  the network client  creates the citation analysis hyperbolic tree . When necessary (as described above), the network client  creates a tree (that differs from the hyperbolic tree  that will ultimately be constructed) that corresponds to the citation analysis DAG  generated in step . The manner in which the network client  performs this function is represented by a flowchart in .","In step , the network client  selects a node of the citation analysis DAG  (it is noted that the root node  corresponding to the '484 patent is not subject to selection). Also, the network client  initializes the tree  (an example of which is shown in ) by constructing the root node  that corresponds to the '484 patent.","In step , the network client  selects one of the parents of the selected node from the citation analysis DAG . It is noted that, by definition, the selected node must have at least one parent Assume, for example, that node  was selected in step , and node  was selected in step .","In step , the network client  generates a new node in the tree  being constructed. Specifically, the network client  generates node A in tree .","In step , the network client generates a link that represents the parent\/child relationship between nodes A and . The information corresponding to this link is stored in tree node  of tree .","In step , the network client  determines whether the selected node (that is, node  in the citation analysis DAG ) has any additional parents in the DAG  that have not yet been processed. In the case of the current example, node  has a parent, node , that has not yet been processed. Accordingly, control returns to step  to process the parent node  with respect to the selected node . If, in step , the selected node does not have any additional parents in the DAG  to process, then control flows to step .","In step , the network client  determines whether there are additional nodes in the citation analysis DAG  to process. If there are additional nodes to process, then control returns to step . Otherwise, construction of tree  is complete, and control returns to flowchart  in .","Referring again to , further in step  the tree  is used to generate a hyperbolic tree. In generating the hyperbolic tree, a hyperbolic tree node is generated for each node in the tree . Also, links between nodes in the hyperbolic tree correspond to links in the tree . In addition to linking information, the nodes in the hyperbolic tree may also include bibliographic information for corresponding patents. Such bibliographic information is obtained from the patent bibliographic information Table . Alternatively, such patent bibliographic information is maintained in the patent bibliographic information Table , and retrieved as necessary (that is, such patent bibliographic information is not stored in the hyperbolic tree). Further details concerning construction of a hyperbolic tree corresponding to tree  will be apparent to persons skilled in the relevant arts.","As discussed above, in some embodiments, the invention generates a hyperbolic tree directly from the DAG generated in step . Whether this is possible depends on the capabilities of the hyperbolic browser being used in the client , and potentially other issues, such as performance issues. In these embodiments of the invention where the hyperbolic tree is generated directly from the DAG, it is not necessary to perform the above described functions of step .","In step  the network client  displays the hyperbolic tree generated in step . An example patent citation hyperbolic tree  corresponding to the '484 patent is shown in , wherein a portion of the patent citation tree  is being displayed in a window .","As indicated above, the nodes of the patent citation tree  may be color coded or otherwise emphasized according to some criteria. Examples of such criterions are described below, although the invention is not limited to these examples. The operation of step  in performing this function is represented by a flowchart shown in .","In step , based on user command, the network client  color codes or otherwise emphasizes and displays the nodes in the patent citation tree  according to ownership and\/or assignee (or some other criteria specified by the operator). For example, the nodes corresponding to patents owned by company A may be color coded red, whereas the nodes corresponding to patents owned by company B may be color coded blue. Alternatively, the nodes corresponding to patents owned or licensed by the customer corporate entity may be color coded purple, whereas the nodes owned by any other corporate entity are color coded black.","It is noted that other means for highlighting or emphasizing the nodes in the patent citation tree  (other than color coding) can be used. In fact, any of the display properties of the nodes can be adjusted to reflect the criteria of interest. Such display properties include uppercase, lowercase, typefaces, fonts, underlining, bold, italics, type size, etc.","The enterprise server  retrieves ownership and\/or assignee information (upon receiving a command from the network client  requesting such information) from the assignee table  () and\/or the patent_ownership Table  (). This information is preferably returned to the network client  in the patent bibliographic information Table  from the enterprise server .","In one embodiment, the assignment information in the assignee Table  reflects any original assignment information on the front page of patents. In some embodiments, the assignee Table  is periodically modified to reflect updated assignment information as recorded in the U.S. Patent Office or other national Patent Offices (in the case of non-U.S. patents).","In other embodiments, such updated assignment information is stored in a separate table (not shown), called the current_assignee table. The original assignment information in the assignee table  is not changed.","In these other embodiments, according to the present invention, the operator can instruct the network client  to update the display of the patent citation tree  to reflect such current assignment information using the information in the current_assignee table.","Accordingly, in step , the network client  receives a command from the operator to update the patent citation tree  with the current assignee information in the current_assignee table.","In step , the network client  sends a request to the enterprise server  for updated assignment information. This request, which is in conformance with the enterprise server API, lists the patents represented in the patent citation tree . In accordance with this request, the enterprise server  accesses the current_assignee table for any updated assignment information regarding the listed patents. It is noted that not all patents may have updated assignment information. The enterprise server  transfers this information back to the requesting network client .","In step , the network client  adjusts the display properties (such as the color coding) of the nodes in the patent citation tree  to reflect any new assignment information as received from the enterprise server . According to an embodiment of the invention, the network client  allows the operator to switch back and forth between the original assignment information and the updated assignment information. In other words, upon appropriate operator command, the network client  toggles between displaying the patent citation tree  according to the assignment information stored in the assignee Table , and displaying the patent citation tree  according to the updated assignee information in the current_assignee table.","Nodes can also be color coded according to other criteria as selected by the operator. For example, in step , based on user command, the network client  color codes or otherwise emphasizes and displays the nodes in the patent citation tree  according to issue date. For example, patents that issued in 1984-1986 are color coded blue, patents that issued in 1986-1988 are color coded red, patents that issued in 1988-1990 are color coded yellow, etc. In a similar manner, the nodes can be color coded according to other time-based criteria, such as filing date, priority date, length of pendency, effective filing date, invention date, critical date, on-sale date, public disclosure date, public use date, etc. Such information is either retrieved from the databases , calculated based on information retrieved from the databases , or entered by operators. Information entered by an operator on a patent (such as the invention date) is preferably stored in the node that is associated with the patent. Such information is, upon receipt of appropriate user command, referred to when displaying and emphasizing the node.","Operators can also specify the time increment (1984-1986 or 1984-1988, for example), the beginning date to view, the ending date to view, etc.","The invention also allows operators to enter their own user-defined criteria. For example, an operator can specify that patents P and P should be color coded blue, patents P and P should be color coded red, etc. Such specification by the operator may be based on information or analysis conducted by the operator. For example, the operator may have previously determined that patents P and P are unenforceable, and patents P and P contain claims that are infringed.","In an embodiment, the operator right clicks over a node to display a context sensitive menu. Via this menu, the operator can specify user-defined criteria for displaying the node (i.e., that the node should be color coded blue, or the node should be color coded as an unenforceable patent, where the color for unenforceable patents is defined elsewhere). The operator has the option of entering text that describes the meaning of his criteria, such as \u201cBlue: Patents that are infringed.\u201d This text is displayed in the legend (described below).","Preferably, nodes can be emphasized using any combination of operator-selected criterions. This is done by using different display properties to represent different criterions. For example, color could be used to represent ownership, font could be used to represent issue date, underlining could be used to represent enforceable\/unenforceable, etc.","According to an embodiment of the invention, a legend is displayed next to the patent citation tree . This legend specifies the meaning for the colors or other display properties used to highlight the nodes of the patent citation tree . For example, the legend may indicate that blue is for patents owned by IBM, or is for patents issued in 1994-1997, or is for patents indicated by the operator as being infringed.","The present invention enables operators to interact with the data in the patent citation tree . For example, operators can elect to view information regarding any of the patents represented in the patent citation tree . Such operation is represented by steps , , and .","In step , the operator selects one of the patents represented in the patent citation tree . In the example of , the operator has selected the '168 patent by double-clicking while the mouse (represented by icon ) is positioned over node  corresponding to the '168 patent.","In step , the network client  retrieves information pertaining to the selected '168 patent.","In step , at a minimum, the network client  displays the Abstract and bibliographic information on the '168 patent. This information was preferably transferred to the network client  in the patent bibliographic information table  ().  illustrates an example window  where the Abstract and bibliographic information pertaining to the 186 patent is displayed.","If the selected patent (that is, the '168 patent) is in the local repository, then the network client  in step  interacts with the enterprise server  to download the patent text and\/or the patent image of the '168 patent. The network client  then displays the patent text and\/or patent image as described above (see, for example, ). This is represented by step .","As indicated above, the operator can elect to color code or otherwise adjust the display properties of the nodes in the patent citation tree  according to various criteria. Such criteria includes assignee and ownership information, as described above. Another criteria is patent aging. Specifically, an operator can elect to adjust the display properties of the nodes in the patent citation tree  according to the age of the patents relative to the base patent.","In the example of , the base patent is the '484 patent which was originally selected by the operator in step  (). According to this aspect of the invention, the nodes corresponding to the other patents in the patent citation tree  are color coded to reflect their age relative to the base '484 patent. For example, patents that issued less than a year after the '484 patent are color coded blue. Patents that issued more than one year but less than two years after the '484 patent are color coded red. Patents that issued more than two years but less than three years after the '484 patent are color coded yellow.","Alternatively, gray scales can be used to reflect the age of the patents relative to the base '484 patent. For example, the closer the issue date of a patent is to the issue date of the '484 patent, the darker the gray used, and the farther away the issue date of a patent is to the issue date of the '484 patent, the lighter the gray used.","Alternatively, patent aging can be visualized by displaying in the patent citation tree the root plus any patent that issued within a year of the root (or any other time increment specified by the operator). The tree then grows upon receipt of user command to include patents that issued later. For example, upon receipt of user command, the tree grows to additionally include patents that issued within two years of the root, then three years, four years, five years, etc.","Patent aging visualizations (described here and in other places of this application) are valuable because they represent when patent-related activity occurred with respect to a given technology.","Patent Citation Tree (Web Client)","The operation of the patent citation tree function when performed by a web client  interacting with the enterprise server  via the web server  () shall now be described with reference to a flowchart  shown in .","In step , the operator at the web client  defines a search to be performed by entering search criteria into a patent search window, such as patent search widow  shown in . In the manner described above, the web client  interacts with the enterprise server  via the web server  to conduct the search defined by the operator. The web client  displays the search results in a search results window, such as search results widow  shown in . This is represented by step  in flowchart .","In step , the operator selects one of the patents listed in the search results window . In step , the web client  interacts with the enterprise server  via the web server  to retrieve information pertaining to the selected patent, and to display such information (such processing is described above). Preferably, such information is displayed in windows, such as those shown in , A-C, and\/or . Further details regarding the operation of steps , , , and  are provided above.","In step , the operator at the web client  issues a command to perform a patent citation analysis of the patent being displayed. For example, suppose that in step , information regarding an  patent was retrieved and displayed in a window  shown in . In step , the operator presses a patent citation tree button  in order to perform a patent citation analysis of the '830 patent.","In step , the web client  presents a dialog box  () to the operator. In this dialog box , the operator identifies whether he wishes to perform a forward citation function or a backward citation function. Also, the operator defines the scope of the citation function to be performed by indicating the number of levels that should be cited. This information entered into the dialog box  is received by the web client .","In step , the web client  interacts with the enterprise server  via the web server  to retrieve information from the databases  pertinent to the citation analysis tree function specified by the operator. The manner in which step  is performed is illustrated in a flowchart shown in .","In step , the browser  in the web client  generates and sends a request to the web server  (see ). This request preferably includes patent-centric URL commands as described above. The request specifies: (1) either a backward citation search or a forward citation search (as indicated by the operator in dialog box ); (2) the '830 patent; and (3) the number of levels (as specified by the operator in dialog box ). Preferably, the request is formed using the GetCitationTree command, described above.","In step , the web server  receives the request from the browser . The translator  in the web server  translates the request to a new request that is in conformance with the enterprise server API. This translation function is described above. The web server  sends the translated request to the enterprise server . In effect, the web server  is playing the role of the network client .","In step , the enterprise server  processes the request. In particular, the enterprise server  access the patent table  () to identify the document_id associated with the '830 patent. For backward citation searches, the enterprise server  then accesses the PatentRef table  to identify all patents which are cited in the '830 patent. For forward patent citation searches, the enterprise server  accesses the PatentRef table  to identify all patents which cite the '830 patent. The enterprise server ' repeatedly accesses the PatentRef table  according to the number of levels as indicated in the request from the web server . Further details regarding the operation of the enterprise server  are described above.","The enterprise server  processes the information retrieved from the databases  and generates two tables, the parent child table  () and the patent bibliographic information table  (). The operation of the enterprise server  when performing step  is similar to its operation when performing step  (described above).","In step , the enterprise server  transmits the parent\/child table  and the patent bibliographic information table  to the web server .","In step , the translator  in the web server  translates, as necessary, the information received from the enterprise server , and forwards the translated information to the web client . The translator  translates the information from the enterprise server  to a format that is compatible with the capabilities and plug-ins associated with the browser . This operation shall be further described with reference to .","As shown in , in an embodiment of the invention, the web client  includes a hyperbolic tree module  that interacts with the browser . In some embodiments, the hyperbolic tree module  may optionally include or interact with a hyperbolic tree DLL (dynamic link library), not shown.","The translator  in step  translates the information received from the enterprise server  to a format that is useable by the hyperbolic tree module . Accordingly, the operation of the translator  in this respect is specific to the particular functions and capabilities of the hyperbolic tree module  being used in the web client . The browser  receives this translated information from the web server , and then forwards the translated information to the hyperbolic tree module  for processing. As described below, the hyperbolic tree module  modifies and formats this information from the browser , as necessary, and then displays and processes the patent citation hyperbolic tree.","Referring again to , in step , the hyperbolic tree module  in the web client  generates a citation analysis DAG from the information received from the enterprise server  via the web server . The operation of the hyperbolic tree module  when performing step  is similar to the operation of the network client  when performing step .","In step , the hyperbolic tree module  maps the citation analysis DAG to a tree where necessary (as described above), and then generates a hyperbolic tree from this tree. The operation of the hyperbolic tree module  when performing step  is similar to the operation of the network client  when performing step .","In some embodiments, at least parts of steps  and  are performed by the translator  in the web server . In particular, the translator  generates a citation analysis DAG from the information received from the enterprise server , and maps the citation analysis DAG to a tree. The translator  may also generate a hyperbolic tree from the tree. The translator  forwards the results of its processing (i.e., the translated information referred to above) to the browser .","As discussed above, in some embodiments, the invention generates a hyperbolic tree directly from the DAG generated in step . Whether this is possible depends on the capabilities of the hyperbolic tree module  in the web client , and potentially other issues, such as performance issues. In these embodiments of the invention where the hyperbolic tree is generated directly from the DAG, it is not necessary to perform the above described functions of step .","In step , the hyperbolic tree module  displays the patent citation information to the operator in a hyperbolic tree format. In other words, in step , the hyperbolic tree module  displays the hyperbolic tree generated in step . The operation of the hyperbolic tree module  when performing step  is similar to the operation of the network client  when performing step , wherein at the web client , the patent citation tree  is displayed in a window similar to the window  shown in .","In step , the operator at the web client  selects one of the patents represented in the patent citation tree . Step  is similar to step  ().","In step , the web client  retrieves information on the patent selected in step . Step  is similar to step  ().","In step , the web client  displays the retrieved patent information. Step  is similar to step  ().","Preferably, the web client , when displaying the patent citation tree , color codes or otherwise emphasizes the nodes of the patent citation tree  according to some user selected criteria, such as ownership, assignee, relative age, issue date, filing date, user-defined criteria, etc., as described above.","Additional Patent Citation Visualizations","The present invention includes the capability to display patent citation data in additional formats. For example,  illustrates an example display format  where patent citation information is visualized as a modified bar graph. Display format  represents a backward patent citation visualization of a '201 patent. The '201 patent is cited by a '567 patent, a '432 patent, a '123 patent, and an '888 patent. Each of these patents is represented by a bar. The horizontal length of each bar graphically represents the pendency duration of the associated patent. The longer the bar, the longer the pendency of the patent. Also, the beginning and ending locations of each bar graphically represent the filing and issue dates of the patent. For example, the '201 patent was filed at the beginning of 1989, and issued at the end of 1989. The bars in display format  can be color-coded or otherwise emphasized to reflect user-selected criteria, such as ownership, assignee, etc., as described above.","Note that display format  in  represents a one-level patent citation function. Additional levels can be viewed by selecting the patent of interest. For example, if the operator double clicks on the '123 patent, then the patents that cite the '123 patent will be displayed. This is shown in .","Patent Claims Tree","According to an embodiment of the present invention, the analysis modules  in the enterprise server  include a patent claim tree module  ().  illustrates an example patent claims tree . In this patent claims tree , the root node  represents the patent (in this case, U.S. Pat. No. 5,092,011). The nodes  directly connected to the root node  represent the independent claims in the patent. The nodes connected to these independent claim nodes represent the dependent claims of the respective independent claims. The links in the patent claims tree  represent the dependencies between claims.","The nodes in the patent claims tree  can be color coded or otherwise emphasized (by modifying some display property) according to various criteria, including user-defined criteria. For example, when performing an infringement analysis, the operator can elect to color code claims that are believed to be infringed using one color, and claims that are not believed to be infringed using another color. When conducting a validity analysis, the operator can elect to color code claims that are believed to be valid using one color, and claims that are believed to be invalid using a different color. As discussed below, nodes can also be color coded or emphasized according to whether they correspond to patents or claims, or whether they correspond to independent or dependent claims. Also, as with the patent citation tree (described above), operators can color code according to operator-defined criteria. Other criterions for color coding the claims will be apparent to persons skilled in the relevant art(s).","The patent claims tree function, when performed by either a network client  or a web client , shall now be described with reference to a flowchart  shown in .","In step , the operator selects a patent using any of the mechanisms described herein, such as selecting a patent from a listing of patents displayed in the document pane  of the console  ().","In step , information pertaining to the selected patent is retrieved from the databases  (as necessary) and displayed using any of the display formats described herein (see, for example, ).","In step , the operator issues a command to display a patent claims tree for the patent being displayed. The operator may issue this command using any of the mechanisms described herein, such as by selecting a command from the menu bar, selecting a command from a pop-up window, selecting the command from a toolbar, etc.","In step , the client \/ retrieves (as necessary) and analyzes the text of the claims section of the patent in order to identify claim dependencies (since it is necessary to analyze the claims, the patent claims tree function according to one embodiment of the invention is only available for those patents in the local repository). The dependency relationship between claims is identified by parsing the claim text of the patent and identifying claim dependency language contained therein (particularly in the claim preambles), such as \u201cthe apparatus of claim ,\u201d \u201cthe method of claim ,\u201d \u201cthe method according to claims  or ,\u201d \u201cthe system as in one of claims -,\u201d \u201ca product produced according to the method of claim ,\u201d \u201ca system, comprising,\u201d etc. The dependency between claims is derived by inspection and analysis of these phrases in the preambles of the claims.","In step , the client \/ generates a claims dependency DAG. For example,  illustrates a claims dependency DAG  corresponding to the '011 patent shown in . The manner in which the client \/ performs step  is represented in a flowchart shown in .","In step , the client \/ initializes the claims dependency DAG . This initial DAG  includes a root node representing the '011 patent, and a node for each claim in the '011 patent.","In step , the client \/ selects one of the nodes of the DAG  (or, equivalently, the client \/ selects one of the claims of the '011 patent).","In step , if the selected claim is an independent claim, then the client \/ creates a link from the root node to the selected node. For example, if claim  is the selected claim, then the client \/ creates a link between node  to the root node . Information representative of the link is stored in the parent of the selected claim. For example, information representing the link between node  and the root node  is stored in root node .","If the selected claim is a dependent claim, then in step  the client \/ creates a link between the selected node and each node (called parent nodes) corresponding to a claim from which the selected claim depends. Information representing these links is stored in the parent nodes. For example, assume that node  corresponding to claim  was selected in step . Claim  depends from claims  and , the parent nodes of claim . Accordingly, in step , the client \/ creates a link from node  to node  and node . The link information is stored in parent nodes  and .","In step , the client \/ determines whether there are additional claims in the '011 patent to process. If there are additional claims to process, then control returns to step . Otherwise, construction of the claims dependency DAG  is complete, and control returns to flowchart .","Referring again to , in step  the client \/ generates the patent claims hyperbolic tree. In so doing, the client \/ generates a claims dependency tree, if necessary (as described above).  illustrates a claims dependency tree  that corresponds to the claims dependency DAG  in . The manner in which client \/ generates the claims dependency tree  is represented by a flowchart in .","In step , the claims dependency tree  is initialized to include the root node  corresponding to patent '011. Also, the client \/ selects a node from the claims dependency DAG  for processing. Preferably, the root node  is not subject to selection (since a corresponding root node  in the claims dependency tree  has already been created). Preferably, nodes in the claims dependency DAG  are selected in ascending order of their corresponding claims. For example, the node corresponding to claim  is selected first. The nodes corresponding to claims , , , etc., are then selected. In this manner, it is assured that, in the claims dependency tree , the tree nodes corresponding to a dependent claim's parent claims will exist before the dependent claim is processed.","In step , the client \/ selects one of the parents of the selected node. By definition, each node (other than the root node) in the claims dependency DAG  includes at least one parent.","In step , the client \/ creates a new node in the claims dependency tree . This new tree node corresponds to the selected node of the claims dependency DAG . Any claim information (such as the text of the claim) is optionally stored in this new tree node.","In step , in the claims dependency tree , the client \/ generates a link between the node corresponding to the selected parent, and the new tree node. Information for this link is stored in the selected parent node. For example, assume in step  that node  corresponding to claim  was selected, and in step  claim  (parent to claim ) was selected. In step , a link is generated between node A (corresponding to claim ) and node  (corresponding to claim ) in the claims dependency tree . The link information is preferably stored in node .","In step , the client \/ determines whether the selected node has any additional parents in the claims dependency DAG  that has not yet been processed. If the selected node in the claims dependency DAG  has additional parents, then control returns to step  to process another parent. Otherwise, step  is performed.","In step , the client \/ determines whether there are additional nodes in the claims dependency DAG  to process. If there are additional nodes to process, then control returns to step . Otherwise, construction of the claims dependency tree  is complete.","Referring again to , further in step , the client \/ uses the claims dependency tree  to generate the patent claims hyperbolic tree . In generating the hyperbolic tree, a hyperbolic tree node is generated for each node in the claims dependency tree . Also, links between nodes in the patent claims hyperbolic tree  correspond to links in the claims dependency tree . In addition to linking information, the nodes in the patent claims hyperbolic tree  may also include any claim information that was in the corresponding node of the claims dependency tree , such as claim text. The node type and the sub-type are also stored in the nodes of the patent claims hyperbolic tree . The node type refers to whether or not the node is a patent node (such as node ) or a claim node (such as node A). The sub-type refers to whether the node corresponds to an independent claim (such as nodes ) or a dependent claim (such as nodes A and B). Further details concerning construction of a hyperbolic tree representative of the claims dependency tree  will be apparent to persons skilled in the relevant art(s).","As discussed above, in some embodiments, the invention generates a hyperbolic tree directly from the DAG generated in step . Whether this is possible depends on the capabilities of the hyperbolic browser being used in the client \/, and potentially other issues, such as performance issues. In these embodiments of the invention where the hyperbolic tree is generated directly from the DAG, it is not necessary to perform the above described functions of step .","In step , the client \/ displays the patent claims tree  generated in step . As indicated above, an example patent claims tree  is shown in .","In displaying the patent claims hyperbolic tree  in step , the nodes of the patent claims tree  may be color coded or otherwise emphasized (by modifying display properties) according to a number of criteria, such as node type and\/or sub-type. For example, patent nodes may be color coded a first color whereas claim nodes may be color coded a second color. Nodes corresponding to independent claims may be color coded a third color, and nodes corresponding to dependent claims may be color coded a four color. As described above, nodes can also be color coded according to user-defined criteria and user-provided information, such as claims that are being infringed, claims that are invalid, etc.","The present invention enables operators to interact with the data displayed in the patent claims tree . For example, operators can elect to view the text of claims of any of the claims represented in the patent claims tree . Such operation is represented by steps  and .","In step , the operator selects one of the patents in the patent claims tree  using any of the selection mechanisms described above.","In step , the client \/ retrieves information on the selected claim, such as the text of the selected claim, and displays the claim text. The invention includes a number of formats for displaying the claim text. For example,  illustrates a display format  where the text of the claim is displayed independent of and apart from the patent. In contrast,  illustrates a display format  where the claim is displayed in the context of the patent.","Such user interaction may be based on the node type and subtype. For example, if the user selects a patent node, such as node , then the patent would be displayed (see ). Alternatively, if the operator selects a node corresponding to a claim, then the text of the claim is displayed, as described above.","Licensing Module","As shown in , an embodiment of the invention includes a licensing module  (also herein called the licensing system ). The licensing module  is also referred to herein as the SmartPatents Prism\u2122 system.","Customers use the licensing module  to manage their intellectual property (IP) assets for maximal value through the creative use of licensing. The licensing module  provides the tools a licensor needs to manage its licensing effectively through tracking a variety of objects, including but not limited to out-licenses (i.e., licenses where the corporate entity is the licensor), in-licenses (i.e., licenses where the corporate entity is the licensee), licensing parties (i.e., any parties involved with a license agreement, such as the licensee(s), the licensor(s), license agents, license organizations, attorneys, etc.), royalty statements, royalty payments, etc.","Customers also use the licensing system  to better understand how they are making strategic use of their IP assets and to audit the licensees' contribution to the value of those assets.","As shown in , in an embodiment of the invention the licensing module  is a standalone system, existing and operating independently of the enterprise server  and the enterprise databases . In this standalone configuration , the licensing module  does not access data in enterprise\/IPAM database . Instead, the licensing module  utilizes data in its own databases, i.e., a licensing database  and a core database , among potentially others. These databases are described in detail below. (The invention is not limited to the arrangement of data described herein. In other embodiments, the data and attributes described herein are stored in combinations of databases and tables other than that described herein.)","As shown in , in another embodiment, the licensing module  interacts with the enterprise server  and\/or the enterprise databases , such that users of the licensing module  may access and utilize groups and\/or IP assets, as well as other information, stored in the enterprise databases , and\/or may interact with the enterprise server  to further manage groups of IP assets and\/or other objects that are being tracked through the licensing module .","According to some embodiments of the invention, the enterprise server  is herein also sometimes referred to as the Intellectual Property Asset Manager\u2122 (IPAM\u2122) server .","The database architecture associated with the licensing module  includes a number of databases. As noted above, the standalone embodiment of the licensing module  (shown in ) includes a Licensing database  and a Core database .","The IPAM-integrated embodiment of the licensing module  (shown in ) includes the Licensing database . The Core database  is substantially or completely replaced with the enterprise database  (also called the IPAM database ). The Core database  contains standalone versions of all of or at least a subset of the tables included in the IPAM Server database . Accordingly, when the IPAM database  is available, there is little or no need for the core database .","In an embodiment, the licensing module  is implemented as a two-tier client\/server model. In an alternate embodiment, the licensing module  is implemented as a three-tier model using standard middleware technology such as CORBA or COM along with technologies compatible with them, including the appropriate security manager for the application server middleware layer. The invention is not limited to these embodiments. The architecture preferably provides a thin-client C++ component, a secure application domain server, and a secure database server (such as a SQL Server), linking the latter two components with ODBC for maximal portability. The user interface and object model are tightly integrated and use well known component technologies such as ActiveX and DAO. In an embodiment, security relies on defining SQL Server database users with passwords and appropriate privileges on the database objects.","An example thread of operation of the licensing module  shall now be generally described. At initial set up of the licensing module , and periodically thereafter (or as the circumstances dictate), a License Administrator and a System Administrator must perform various set up tasks, such as entering territories, fields of use, and currency conversion intervals.","After initial set up, the customer enters IP business related information, such as but not limited to existing license agreements, new license agreements, and\/or related objects, such as but not limited to assets, asset packages, contacts, compensation terms, and so on. Specifically, in an embodiment, the Data Entry Clerk enters assets, and the License Administrator creates asset packages to package assets for licensing. The Data Entry Clerk enters contacts by entering organizations, people, and contact methods. Then the Data Entry Clerk enters the license information. At that point, the License Administrator takes over to modify the license agreement with more complex data that requires an understanding of licensing.","As data grows, the License Administrator begins querying the system interactively in response to questions and issues that arise. He or she will also start generating reports. At some point, an auditor or other interested party will also query and generate reports. The License Administrator then may need to do some maintenance on the agreements, accompanied by occasional maintenance by the IPAM Administrator on objects that require Administrator privileges to remove.","As time goes on, licensees submit royalty statements and payments. The Data Entry Clerk enters these. The License Administrator then allocates the payments to expected revenue and to royalty statement details. This linking enables the Licensing module  to generate meaningful revenue reports.","More generally, the licensing module  enables users to manage, track, interact with, process, analyze, etc., intellectual property (IP) related transactions. In a preferred embodiment, such IP related transactions include the licensing of IP assets, and the management, tracking, interaction with, processing, analysis, etc., of such licensing activities using license agreements, asset packages, royalty statements, payments, etc. However, the invention is not limited to this embodiment. Instead, the invention is intended and adapted to cover the management, tracking, interaction with, processing, analysis, etc., of IP related transactions using any object, vehicles, data, etc., in accordance with the scope and spirit of the functions described herein.","The Licensing module  includes a number of features, including but not limited to the following:\n\n","The licensing module  is described in greater detail in the following sections.","User Roles","Generally, the licensing module  involves a number of user roles, including but not limited to the following. The invention is not limited to these functions being performed by the people specified below. In other embodiments, other people in other user roles can perform the following functions.\n\n","Generally, the System and Database Administrators have full access to everything in the system. The other users have access granted to them by owners of asset packages or those with write access to security classifications. The different roles above do not imply any particular security access; each user has whatever access they are granted by the Administrator or other users.",{"@attributes":{"id":"p-1179","num":"1449"},"figref":["FIG. 191","FIG. 191","FIG. 191"],"b":["19102","18702","19104","18702","19106","19108","19112","19116","19104","19118","18702"]},"Architecture",{"@attributes":{"id":"p-1181","num":"1451"},"figref":"FIG. 187B","b":"18702"},"There are three general functions of the Licensing module : data entry, data exploration, and reports. Underneath the user interface, there is an object model that implements all the different kinds of licensing objects that Licensing module  needs to support data entry, to provide exploration of the database, and to permit generation of effective reports. Licensing module  preferably connects to a SQL Server database server  through ODBC  to provide persistent storage of its data and to support third-party report definitions.","User Interface","The user interface preferably includes the following components.","Licensing System User Interface Module","The licensing system user interface module  is the primary user interface for the licensing related functions of the licensing system  described herein. The licensing system user interface module  interacts with users via the windows and dialogs described herein. Preferably, the licensing system user interface module  is written in Visual C++ and MFC (Microsoft Foundation classes, a well known class library for Visual C++), although the invention is not limited to this implementation.","Licensing System Administrator User Interface Module","The licensing system administrator user interface module  is the user interface to the licensing related administrative functions described herein. The licensing system administrator user interface  is preferably written in Visual C++ and MFC, although the invention is not limited to this implementation.","Data Entry","In an embodiment, operation of the licensing module  is based on license agreements. (The invention is not limited to this embodiment. Specifically, in other embodiments, the licensing module  is based on other IP related transactions, such as assignment agreements, technology transfer agreements, security interests, or any other agreement involving a transaction that includes or relates to an IP asset.)","Generally, license agreements are completely nonstandard in text format, but customers need to track specific, standard information about the agreement: its terms, its duration, its parties, the payments and statements customers receive, etc. They need to explore how their IP assets are generating revenue. They need to be able to license IP assets including patents, trademarks, copyrights, know how, trade secrets, other licenses, etc. Customers need to package multiple assets for licensing through a single license. They need to report on different aspects of their license portfolio. They need to search the document text to identify agreements that they can use as templates for further agreements.","Consequently, the Licensing module  enables users to enter structured data about license agreements, royalty statements, payments (this information is preferably stored in the licensing database ). The licensing module  also enables users to enter data about companies and people to which IP assets can be licensed (this information is preferably stored in the licensing database ). The licensing module  also enables users to enter IP assets (patents and other types) (this information is preferably stored in the licensing database ). This part of the licensing system  can link to the IPAM Server  for access to the IP assets and groups it supports. The licensing module  also adds to those IP assets as necessary to round out the range of asset types that customers wish to license: trademarks, copyrights, and trade secrets as well as patents. Generally, information on non-patent assets are stored in the licensing database  or the core database . Information on patent assets are stored in the IPAM database  when working in the IPAM integrated mode (), and stored in the licensing database  or the core database  when working in the standalone mode (). The Licensing module  also provides asset packaging options beyond lists of assets, including search packages based on IPAM search groups and descriptive asset packages that define asset groups with text rather than enumerating assets.","Licensing Reports","Licensing reports are an important feature of the Licensing module . Customers use reports generated by the licensing module  to track the revenue due from licenses, to compare that expected revenue to the actual revenue received, and to evaluate the success of license management in their business units. The invention also supports other reports.","Preferably, the report generation module  is responsible for generating the reports requested by users. The report generation module  generates reports using the data in the licensing related databases, including printing the contents of each major object in the system (Print License, Print Asset, and so on). Preferably, the report generation module  connects to the databases through ODBC  or through the Microsoft SQL Server driver, for example. The report generation module  can be implemented using a commercial report generation product, such as Crystal Reports, although the invention is not limited to that embodiment.","In embodiments where the report generation module  is implemented using a commercial report generation product, a report generator interface  interacts with the report generator  to cause the report generator  to generate reports per user instructions. For example, the generator interface  may interact with the report generator  in a manner consistent with the API (application program interface) of the report generator  to cause the report generator  to access the databases  for appropriate information, and to process and format that information in reports, per user commands.","Data Exploration Module","Strategically, licensing managers will use the Licensing module  to access license data in creative ways.","A strategic use of the licensing system  involves ad-hoc query functions in combination with reports to identify IP assets that are underperforming or outperforming and to cross-reference between license agreements, licensees, royalty terms, royalty statements, and royalty payments. The ad-hoc query facility uses the same user interface that provides data entry facilities in an easy-to-use query-by-example format.","The ad-hoc query facilities also support licensing personnel and auditors in interactive tactical tracking down of issues such as payments due, payments not received, royalty statement details, and errors in data entry.","Object Model","The object model of the Licensing module  represents the transient aspect of the persistent data in the database server. The subsystems of the object model provide interfaces to the various licensing-related objects and higher-level objects that aggregate them for use in the Licensing module . The object model supports a number of subsystems and\/or object\/data types, including but not limited to the following:\n\n","More particularly, the licensing system domain A is an object layer called a licensing system domain  that represents a series of subsystems (generally indicated as  in ) that contain objects that the licensing system  requires to provide the functionality described herein. Preferably, each subsystem design minimizes the connections to other subsystems from its internal objects with the objective of maximal reusability as components. Each subsystem provides a complete interface to the subsystem and its component objects. Each subsystem is preferably a separate DLL (dynamic link library) and is preferably contained within a separate C++ namespace.","Each subsystem exports a set of Transaction subclasses, where a transaction is a Database subsystem component that provides support for database transactions. Each transaction subclass represents a transaction use case. Some transaction classes provide methods for generating objects either as new objects or as objects queried from the database. Others provide the ability to update and delete objects from the database. Each use case is a single transaction through the system, and each must execute entirely within a single thread to ensure thread safety. The use cases supported by an embodiment of the invention are described in sections below.","The user interface accesses the transaction subclasses as the primary interfaces. Transactions correspond to the work the user does with those objects (entering new assets, adding payments to a license, and so on). Block diagrams of the subsystems are illustrated in . Details on these subsystems will become apparent from the following discussion of use cases.","It is noted that allocation of functions to the subsystems  may vary according to the implementation. Accordingly, the subsystems shown in  should be considered only an example.","Data Access Module","The data access module  provides an interface between system databases  and the modules of the licensing system . Preferably, the data access module  includes the Microsoft Active Data Objects COM component (preferably version 1.5) that provides a SQL interface for accessing various data sources. In this case, it connects to ODBC .","Database Architecture","The database architecture preferably includes a Database Server  (such as a SQL Server or an Oracle server) that preferably manages the persistent data as a set of relational tables. The databases  in the database architecture each preferably includes a number of databases, each containing a well-defined and reusable set of data components. (It is noted that the invention is not limited to this arrangement of data. In other embodiments, the data described herein is stored in database arrangements other than that described below.)\n\n","The standalone version of Licensing module  has a stand-in version of the IPAM database  (i.e., the Core database ) that, in an embodiment, contains only some of the tables in that database that the module uses (for example, group, document, and a few miscellaneous tables). The patent tables in the IPAM Server database  also replaces the patent tables (but not non-patent asset tables) in the licensing database  or the core database  for the integrated version of the Licensing module  ().",{"@attributes":{"id":"p-1212","num":"1491"},"figref":"FIG. 19202","b":["19208","18804","18808","316","19204"]},"Licensing Module as a Standalone Module or Integrated with IPAM (IPAM Integrated)","As discussed above, in one embodiment the Licensing module  integrates with the IPAM Server  through the IPAM database , which it accesses directly.","The standalone version of the Licensing module  replaces the IPAM database  with a Core database  that emulates the IPAM tables  that the Licensing module  uses, including the Group-related tables, the Document table, the IP Document table hierarchy, and the UDD (unique document descriptor) tables. See .","With IPAM integration, the Licensing module  has all the patent and UDD (user defined documents) documents available as assets and all groups available for group asset packages from the IPAM database . With the standalone version of the Licensing module , the customer must enter patents through data entry screens in the Licensing module  interface (in an embodiment, these are not present when the system is integrated).","Preferably, the Licensing module  integrates with the IPAM security system through the IPAM security broker, a library that is part of the IPAM server technology.","Object Display Window of the User Interface of the Licensing module",{"@attributes":{"id":"p-1219","num":"1498"},"figref":"FIG. 190","b":["19002","18702","19002"],"ul":{"@attributes":{"id":"ul0053","list-style":"none"},"li":{"@attributes":{"id":"ul0053-0001","num":"0000"},"ul":{"@attributes":{"id":"ul0054","list-style":"none"},"li":["Menus: At the top of the object display window  are a variety of pull-down menus . These menus  allow easy access to all of the transactions you can accomplish with the Licensing module ","Tool Bar: Under the pull-down menus  is a tool bar , which presents a line of often-used tools, such as New, Save, Print, and Find.","Licensing Functions Tool Bar: Along the side of the object display window  is a licensing functions tool bar  that include icons providing access to the major objects in the Licensing module . These icons include a license agreements icon , a contacts icon , an asset packages icon , a royalty statements icon , a payments icon , a reports icon , and a recycle bin icon . Clicking on one of these icons changes the content of the content view area  so as to display the indicated kind of objects and the various components that make them up.","Content View area: The content view area  is the main area of the object display window . The content view area  contains one or more controls for managing the objects that make up Licensing module . These panes include spreadsheet views, and one or more \u201cexplorer\u201d or hierarchical views for organizational structure. A spreadsheet view lets you configure the columns to display and sorts on a column when you click on the header.","Status Bar: A status bar  appears at the bottom of the object display window . The status bar  displays application status, short help messages, keyboard status (CAPS LOCK, NUM, etc.), etc.","Recycle Bin: If you remove one of the major objects (entity, asset, asset package, license, royalty statement, payment, currency, etc.), the object gets recorded in the Recycle Bin . You can either restore individual objects in the Recycle Bin view, or you can empty the recycle bin  to make the changes permanent. An object in the recycle bin  is preferably not visible anywhere else in the application.","Dialogs: There are various dialogs that pop up (not shown in the example of ), usually as a result of clicking on a tool button or double-clicking on an object in a spreadsheet; the dialogs accomplish data entry, data modification, searching, etc."]}}}},"Operational Features of the Licensing Module","Operational functions supported by embodiments of the licensing module  are described in detail in the following sections.","Preferably, these functions are implemented by one or more computers operating according to control logic, or software. Such software is preferably written in an object oriented manner. Accordingly, the licensing module  can be said to be an object oriented system.","Use cases are sometimes used to describe the manner in which an object oriented system works. Generally, a use case describes a transaction processed in an object oriented system.","Use cases often include extensions. Extensions are conditional. For example, the enter contact method use case described below extends the enter entity method use case. In other words, under certain conditions when you are entering an entity, you will enter a contact method.","In the following section, the functions supported by embodiments of the licensing module  are described by describing use cases that correspond to these functions. Coding of software to achieve these functions will be readily apparent to persons skilled in the relevant arts, based on the description contained herein, including but not limited to the following description of use cases. In the following, use cases are described as being implemented as procedures, but in practice the functionality of any number of use cases can be achieved through one or more software procedures.","An embodiment of the licensing system  is shown in . Each of the ovals shown in  corresponds to a logical functional module of the licensing system . Generally, these functional modules correspond to the use cases that are described below. The relationships between the functional modules are indicated in .","The invention also preferably includes a licensing administration module  (). The licensing administration module  performs administrative tasks associated with the licensing system . The licensing administration module  is preferably accessible only by administrators.","A functional module may \u201cuse\u201d another functional module. In other words, in the course of performing its specified function, a functional module may call or invoke the services of another functional module. Alternatively, a functional module may \u201cextend\u201d another functional module. In other words, a functional module may extend the capabilities of another functional modules. In some cases, not all relationships between modules are shown in the figures. The relationships between functional modules are further described in the following sections.","In the following, certain steps are described as being preferably performed by some actors, but in practice and\/or in other embodiments, the steps are performed by other actors, including but not limited to those described herein.","General Purpose Use Cases","There are several general-purpose use cases that apply to all users or to generic objects. These are described in the following sections.","Login","The login use case  is diagramed in .","The User enters his or her user name and password and any connection string required by the ODBC data source in a login dialog  shown in . The licensing module  logs the user into the server preferably through the ODBC connection mechanism and authenticates the user through the IPAM security system .","Display Help","The display help use case  is diagramed in .","The User requests help in a specific context or requests display of the help contents, index, or query preferably using a standard help system, such as the Microsoft Windows help system. The display help module  displays the appropriate help screen by accessing, retrieving, and displaying pertinent information from a help file .","Print Object","The print object use case is diagramed in .","The Auditor or License Administrator selects an object and prints the object in a standard print format to a system printer using the print object module .","The operation of the print object module  is further detailed below:","Step 1: The Auditor or License Administrator (the Actor) starts the read-only transaction by selecting an object (license agreement, asset package, entity, royalty statement, or payment), and then selects the Print command.","Step 2: The print object module  displays a Print <Object> dialog, where <Object> is one of the five basic objects from step 1.","Step 3: The Actor sets the printing options, including any printer setup commands, then issues the instruction to print, ending the transaction.","Step 4: The print object module  prints the object.","If the Actor in step 1 selects a License Agreement, the Print License use case extends the print object module .","If the Actor selects an Asset Package, the Print Asset Package module  use case extends the print object module .","If the Actor selects an Entity, the Print Entity module  extends the print object module .","If the Actor selects a Royalty Statement, the Print Statement module  use case extends the print object module .","If the Actor selects a Payment, the Print Payment module  extends the print object module .","Contacts","A Contact is an organization or person (general term \u201centity\u201d, which also encompasses users and user groups in the security system). People play roles in organizations, and both people and organizations have contact methods (telephone, mail address, and email).","A Contact View  is displayed by selecting the contacts icon  (). The contact view  contains two panes, an explorer view (organization pane)  of organizations and a list of people (people pane) . It is possible to expand and contract the organization hierarchy in a well known manner. When you select an organization, the people in that organization appear in a people list pane  in a tabular spreadsheet format.","Double-clicking on an organization in the explorer view  displays the data modification dialog for organizations. Double-clicking on a person in the people list pane  displays the data modification dialog for people. You can double-click on an empty record or click the New button to create a new organization or person.","The Licensing System Administrator creates, modifies, and\/or removes roles from the Licensing Database .","Enter Entity","The enter entity use case  is diagramed in .","The Data Entry Clerk enters entity information for people and organizations, including organization levels, people's names, and (optionally) contact methods. The Data Entry Clerk may optionally link a person to an organization with a specific role.","The enter entity use case  is further described below:","Step 1: The Data Entry Clerk begins the transaction.","Step 2: The enter entity module  displays the organizations in the organization pane  and people in the people pane  stored in the licensing database  using the Display Entities module .","Step 3: The Data Entry Clerk takes any of these actions (for example):\n\n","Step 4: The enter entity module  displays a data entry form and creates a new entity unique identifier.","Step 5: The Data Entry Clerk enters an optional description for the new organization\/person.","Step 6: The Data Entry Clerk commits the transaction.","Step 7: The licensing system  stores the entered entity information in the licensing database  and confirms the commit to the Data Entry Clerk.","There are a number of extensions to the enter entity module .\n\n","Enter Contact Method","The enter contact method use case  is diagramed in .","This use case extends or is used by another use case, which supplies the unique identifier of an entity. The Data Entry Clerk enters one or more contact methods for that entity.","The enter contact method module  is further described below:","Step 1. The using use case passes in an object identifier for an entity with which to associate a contact method.","Step 2. The Data Entry Clerk chooses one of three types of contact method: telephone, email, or mail address.","Step 3. The enter contact method module  displays an entry form appropriate for the type of contact method selected and generates a unique priority, defaulting it to one more than the last priority entered for methods associated with this entity:",{"@attributes":{"id":"p-1275","num":"1569"},"tables":{"@attributes":{"id":"TABLE-US-00009","num":"00009"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"56pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"161pt","align":"left"}}],"thead":{"row":{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"SELECT MAX(Priority)+1"]},{"entry":[{},"\u2002FROM Contact_Method"]},{"entry":[{},"WHERE Entity_ID = :Entity_ID"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}]}}}},"br":{}},"Step 4. The Data Entry Clerk optionally enters a Description for the contact method and terminates the use case.","Step 5. The enter contact method module  inserts the contact method into the Licensing Database , linking the entity and contact method.","There are a number of extensions with this use case:\n\n","Display Entities","The display entities use case  is diagramed in .","The Enter Entity module  and Modify Entity module  both use the display entities module  to display organizations and people. The display entities module  displays a tree of organizations and displays all the people in an organization that the Data Entry Clerk selects.","The display entities module  is further described below:","Step 1. The display entities module  displays a list of top level organizations in alphabetical order from the Licensing database  in the organization pane  of the contact view . The display entities module  then displays in the organization pane , for each organization, the hierarchy of organizations that have the top-level organization as a parent.","Step 2. The Data Entry Clerk selects an organization from the organization pane .","Step 3. The display entities module  displays in the people pane  an alphabetical list of all the people in the organization from the Licensing database , preferably displaying the Entity unique identifier, the entity Name, the entity Description, the role Name, and the Start Date and End Date (if any) of the interval during which the person played the particular role in the organization, all preferably ordered by the last name then first name of the person. The user can select to order the data in other ways (this is true whenever data is displayed in the present invention). Note that a person may have different roles in the organization, perhaps at different times. The display entities module  displays the person only once but supplies a list of roles and time periods for the person with multiple roles.","Modify Entity","The modify entity use case  is diagramed in .","The Data Entry Clerk interacts with the modify entity use case  to modify entity information for people and organizations, including organization levels, people's names, and contact methods. The Data Entry Clerk may optionally modify the links between a person and their roles in organizations.","The modify entity module  is further described below:","Step 1. The Data Entry Clerk begins the transaction by selecting an appropriate menu option, or pressing an appropriate dialog button.","Step 2. The display entities module  displays a list of top level organizations in alphabetical order from the Licensing database  in the organization pane  of the contact view . The display entities module  then displays, for each organization, the hierarchy of organizations that have the top-level organization as a parent.","Step 3. The Data Entry Clerk selects an organization.","Step 4. The display entities module  displays an alphabetical list of all the people in the organization from the Licensing database  in the people pane .","Step 5. The Data Entry Clerk selects an entity (person or organization) for modification.","Step 6. The modify entity module  displays a data entry form for the appropriate kind of entity.","Step 7. The Data Entry Clerk optionally changes the entity name and\/or description in any order.","Step 8. The Data Entry Clerk commits the transaction.","Step 9. The modify entity module  updates the Licensing database  with the modified entity information and confirms the commit to the Data Entry Clerk.","This use case has a number of extensions:\n\n","Modify Contact Method","This use case is diagramed in .","This use case extends or is used by another use case, which supplies the object identifier for an entity and the priority of the contact method for that entity, which taken together identify the contact method. The Data Entry Clerk can change any of the characteristics of the contact method, which may be a telephone number, a mail address, an email address, etc.","The modify contact method module  is discussed further below:","Step 1. The modify contact method module  accesses a contact method from the licensing database . The modify contact method module  displays the contact method in a dialog.","Step 2. The Data Entry Clerk optionally modifies the Description and details (see Extensions) for the contact method and terminates the use case.","Step 3. The modify contact method module  inserts the contact method into the Licensing database , linking the entity and contact method.","This use case includes the following extensions:\n\n","Link Person to Organizational Role","The link person to organization role use case  is diagramed in .","This is a use case that extends other use cases when the Data Entry Clerk wants to model a particular person's role in an organization during a given period of time. The extended use case passes in the object identifier for the person and the organization. The Data Entry Clerk selects the role from a list of roles and sets the time period.","This use case is further described below:","Step 1. The extended use case passes in the object identifiers for aperson and an organization.","Step 2. The link person to organization role module  displays a form containing a list of roles ordered by name, displaying the Name and Description for each role, and entry fields for Start and End Dates.","Step 3. The Data Entry Clerk selects a role and enters the Start Date (required) and optionally the End Date.","Step 4. The link person to organization role module  creates a link between the person, the role, and the organization in the Licensing database  as an instance of Organization People and a time period using the Start and End Dates.","This use case has a number of extensions:\n\n","Print Entity","The print entity use case  is diagramed in .","This use case extends the Print Object use case. The print entity module  prints information on an Entity, including all information in the Licensing database  about the entity, its relationships to other objects, and its contact information.","The operation of this use case is further described below:","Step 1. The Actor via the print entity module  selects an Entity and selects a command to print it.","Step 2. The print entity module  prints a formatted report with the Entity ID, Name, Description, and Named Entity Type (Organization or Person).","Step 3. The print entity module  prints the contact information for the entity in priority order, printing the Priority, Description, and Contact Method Type for each method.","Step 4. The print entity module  prints the Role Name and Know How Description for any Contributor relationship the Entity participates in.","Step 5. The print entity module  prints the Role Name and Agreement Number and Name for any license agreement to which the Entity is a party.","This use case has a number of extensions.\n\n","Remove Entity","The remove entity use case  is diagramed in . According to this use case, the Licensing system Administrator selects an entity and removes it from the Licensing database . Preferably, an entity can be removed only if it does not participate as a party to a license agreement or as a contributor to a know-how asset. In removing an entity, a number of different objects are also removed:\n\n","The operation of this use case is further described below.","Step 1. The License Administrator begins the transaction.","Step 2. The Remove entity module  displays a list of existing entities ordered by name, displaying the name and entity type.","Step 3. The License Administrator selects an entity and removes it. This is allowed only if the entity is not associated with a license (no rows in the Party table for this entity) or has no payments (no rows in the Payment table with Payor_ID=OID) The License Administrator can select and remove multiple entities at once or in sequence. At the end of the process, the License Administrator commits the transaction.","Step 4. The Remove entity module  deletes the entity, removing also the corresponding subclass (Person or Organization), links to Organization for people, name fragments, and contact methods.","Step 5. The Remove entity module  confirms the commit to the License Administrator.","This use case has a number of extensions:\n\n","Query Entities","The query entities use case  is diagramed in . This use case is used by the Link Payment to Entity use case to supply an entity to that use case for linking to a license payment. The License Administrator (and potentially any User) queries a named entity from the Licensing Database  based on any of the structured fields of the entity (name, description, and entity type). The query entities module  displays the name, description, and entity type of the named entities that match the query conditions and allows the License Administrator to select some for further processing in a using use case. The operation of this use case is further described below.","Step 1. The query entities module  displays a query form with the name, description, and entity type fields available for specifying a query.","Step 2. The License Administrator enters the search criteria.","Step 3. The query entities module  queries all the entities that meet the query criteria from the Licensing Database . The query entities module  displays the entities, showing the name, description, and type.","Step 4. The License Administrator selects one or more entities for use in the using use case.","Asset Use Cases","An asset is an intellectual property document (for example, patent, copyright, trademark, trade secret, etc.) or an intellectual asset (for example, know how). According to the invention, assets are combined into asset packages, which may be standard (lists of assets), group (reference to an IPAM group, for example, described above), or descriptive (a text describing the assets with language from the license agreement).","Preferably, a group as described above (sometimes herein refer to as an IPAM group) differs from an asset package. When the licensing system  is integrated with the IPAM server , it is possible to create a type of an asset package (the IPAM group type) that links to a group and that acquires all of the documents associated with that group. In an embodiment, changes to the contents of the group automatically affect the asset package (in other embodiments, changes to the contents of the group do not automatically affect the asset package). The asset package is said to be linked (where the link is said to be \u201cactive\u201d) or associated with the group. But the asset package itself is a separate object from that group.","Linking the package to a license agreement preferably means that the license licenses all of the assets in the package to the licensee, unless the license agreement indicates otherwise.","An asset view  is displayed when the asset packages icon  is pressed (). The Asset View  contains two panes. The first pane, called the asset packages pane , displays a spreadsheet of asset packages, and the second pane, called the assets pane , displays the assets in the asset package selected in the asset packages pane .","Selecting an asset package in the asset packages pane  displays the assets in that package in the assets pane . Double-clicking on an asset package in the asset packages pane  displays the asset package modification dialog, while double-clicking on the asset in the asset pane  displays the asset modification dialog. You can enter a new package or asset by double-clicking on an empty record or clicking on the New button. If no package is selected, you create the new asset independently of any package; otherwise, you create the asset in the selected package.","Clicking on a Find tool displays the Find Asset dialog (, for example), which lets you enter search conditions to search for an asset. The find tool may be accessed in a number of ways, such as from the tool bar or via the menu (see ). Entering search conditions into this dialog and clicking on Find Now displays the matching assets in the extended dialog. See . You can then double-click on the asset to display the modification dialog with all the details of the asset, or you can drag-and-drop or copy-and-paste the assets into a selected asset package.","Enter Patent","The enter patent use case  is diagramed in .","The enter patent use case  enables a Data Entry Clerk to enter information for a patent (U.S. or foreign) asset. The patent can be packaged alone or with other assets into asset packages that can be licensed.","The operation of the enter patent use case  is further described below:","Step 1. The Data Entry Clerk starts a transaction to enter a new patent asset by issuing an appropriate command. This can be done, for example, by selecting New, Patent from the menu bar  ().","Step 2. The enter patent module  displays a data entry form called an enter new patent dialog  () for input and generates an object identifier for the new asset. The enter new patent dialog  has two tabs, a general tab  and a optional tab .","Step 3. The Data Entry Clerk chooses from a list of publishing organizations and document kinds. For example, the Data Entry Clerk can press a down arrow key  () to view a list of available publishing organizations  (). The Data Entry Clerk can press another down arrow key  to view and choose from a list of different types of documents, such as utility patent, design patent, plant patent, SIR, provisional application, patent application, etc.","Step 4. The Data Entry Clerk enters data into the following fields in any order: DocumentNumber, Long Display Name, Patent Type, and Filing Date. Optionally, the user can enter the following fields in any order: Description, Title, Filing Date, Issue Date, and Publication Date. See . The Data Entry Clerk sets the Security Class from a list of available security classes with Write privilege for the user.","Step 5. The Data Entry Clerk commits the transaction by pressing a save button  ().","Step 6. The enter patent module  creates an IP Document, a Document, and an object of the appropriate subclass for the patent type in the Core Database . The enter patent module  marks the Document as an IP Document.","This use case has a number of extensions:\n\n","Enter Trademark","The enter trademark use case  is diagramed in .","The Data Entry Clerk enters information for a trademark asset, including the trademark classes and the kind of trademark (US Federal, State, WIPO, etc.).","The operation of the enter trademark use case  is further described below.","Step 1. The Data Entry Clerk starts a transaction to enter a new trademark asset. This can be done in a number of ways, such as by selecting New, Trademark from the menu bar  ().","Step 2. The enter trademark module  displays a data entry form  () for input of trademark information and generates an object identifier for the new asset. The data entry form  has a general tab , an optional tab , and a classes tab .","Step 3. The Data Entry Clerk chooses from a list  of publishing organizations () and document\/trademark kinds (by pressing a down arrow key  to display a list of document\/trademark kinds, where such document\/trademark kinds are any known types).","Step 4. The Data Entry Clerk enters data into the following fields in any order: Doc Kind, Document Number, Long Display Name, and Filing Date. Optionally, the user can enter the following fields in any order: Description, Title, Filing Date, Issue Date, and Publication Date. The Data Entry Clerk enters a set of Trademark Classes from a list of classes. The Data Entry Clerk sets the Security Class from a list of available security classes with Write privilege for the user. See .","Step 5. The Data Entry Clerk commits the transaction by pressing a save button .","Step 6. The enter trademark module  creates an IP Document, a Document, an object of class Trademark, and an association object relating the trademark to a series of Trademark Classes in the Licensing Database . The enter trademark module  marks the Document as an IP Document.","At any time, if the Data Entry Clerk presses F1 or the equivalent, the application extends the use case with the Display Help use case.","Enter Copyright","The enter copyright use case  is diagramed in . In this use case, the Data Entry Clerk enters basic information for a copyright asset.","The operation of the enter copyright use case  is further described below:","Step 1. The Data Entry Clerk starts a transaction to enter a new copyright asset. This can be done in a number of ways, such as by selecting New, Copyright from the menu bar  ().","Step 2. The enter copyright module  displays a data entry form  () for input and generates an object identifier for the new asset. The data entry form  has a general tab  and an optional tab .","Step 3. The Data Entry Clerk chooses from a list of publishing organizations and document kinds. See, for example, .","Step 4. The Data Entry Clerk enters data into the following fields in any order: Document Number, Long Display Name, and Filing Date. Optionally, the user can enter the following fields in any order: Description, Title, Filing Date, Issue Date, and Publication Date. The Data Entry Clerk sets the Security Class from a list of available security classes with Write privilege for the user. See .","Step 5. The Data Entry Clerk commits the transaction by pressing a save button .","Step 6. The enter copyright module  creates an IP Document, a Document, and an object of class Copyright in the Licensing Database . The enter copyright module  marks the Document as an IP Document.","At any time, if the Data Entry Clerk presses F1 or the equivalent, the application extends the use case with the Display Help use case.","Enter Trade Secret","The enter trade secret use case  is diagramed in . According to this use case, the Data Entry Clerk enters information for a Trade Secret asset.","The operation of the enter trade secret use case  is further described below:","Step 1. The Data Entry Clerk starts a transaction to enter a new trade secret asset using any procedure described herein.","Step 2. The enter trade secret module  displays a data entry form for input and generates an object identifier for the new asset.","Step 3. The Data Entry Clerk chooses from a list of publishing organizations and document kinds.","Step 4. The Data Entry Clerk enters data into the following fields in any order: Document Number, Long Display Name, and Filing Date. Optionally, the user can enter the following fields in any order: Description, Title, Filing Date, Issue Date, and Publication Date. The Data Entry Clerk sets the Security Class from a list of available security classes with Write privilege for the user.","Step 5. The Data Entry Clerk commits the transaction.","Step 6. The enter trade secret module  creates an IP Document, a Document, and an object of class Trade Secret in the Licensing Database . The enter trade secret module  marks the Document as a type of know how.","As always, at any time, if the Data Entry Clerk presses F1 or the equivalent, the application extends the use case with the Display Context-Sensitive Help use case.","Enter Know How","The enter know how use case  is diagramed in . In this use case, the Data Entry Clerk enters information for a Know-How asset into the Licensing Database .","The operation of this use case is further described below:","Step 1. The Data Entry Clerk starts a transaction to enter a new know how asset. This can be done in a number of ways, such as by selecting New, Know How from the menu bar  ().","Step 2. The enter know how module  displays a data entry form  () for input and generates an object identifier for the new asset.","Step 3. The Data Entry Clerk enters various items:\n\n","Step 4. The Data Entry Clerk commits the transaction.","Step 5. The enter know how module  creates a Document and an object of class Know How in the Licensing Database . The enter know how module  marks the Document as a Know How.","At any time, if the Data Entry Clerk presses F1 or the equivalent, the application extends the use case with the Display Help use case.","Modify IP Asset","The modify IP asset use case  is diagramed in . According to this use case, the License Administrator queries an IP asset and modifies it. The operation of this use case is further described below.","Step 1. The License Administrator begins the transaction to modify an IP asset using any of the techniques described herein.","Step 2. The modify IP asset module  uses the Query Assets module  to display a set of assets and to allow the License Administrator to select one for modification.","Step 3. If the License Administrator has Write permission on the selected asset, the IP asset module  displays a form containing, for example, these fields for the asset document: Document Number, Title, Long Display Name, Issue Date, Filing Date, Publication Date, Description, Asset Type (\u201cDisc Switch\u201d), Publishing Organization (Description from Pub Organization class), and Doc Kind (Description from IP Doc Kind class).","Step 4. The License Administrator modifies any of the fields in any order and signals the end of the transaction.","Step 5. The IP asset module  writes the changes to the licensing database  or the core database  and confirms the commit to the License Administrator.","There are a number of extensions of this use case:\n\n","Asset Package Use Cases","An asset package includes one or more IP assets. Use cases related to asset packages are described below.","Create IP Asset Package","The create IP asset package use case  is diagramed in . According to this use case, the License Administrator creates a named package of intellectual property (IP) assets in the Licensing Database . All or part of this asset package (possibly along with one or more other asset packages) may then be licensed via a license agreement. An asset package can be generated in a number of ways: by querying the assets from the Licensing Database , by querying a group from the Core Database , or by entering a textual definition of the assets. The operation of this use case is further described below.","Step 1. The License Administrator begins the transaction to create a new IP asset package. This can be done in a number of ways, such as by selecting New, Asset Package from the menu bar  ().","Step 2. The create IP asset package module  displays an asset package dialog  (). From a pull down list , the License Administrator chooses the type of asset package to create (Asset\/Standard, Group, or Descriptive Package Type). The Asset\/Standard type is an asset package containing any combination of assets selected by the user. The Group type is an asset package containing the assets included in one or more pre-existing groups. The Descriptive Package type is an asset package whose assets are indicated by way of a description, such as a textual description, an audio description, a multimedia description (the files for those media types may be linked to this record).","Step 3. The create IP asset package module  creates a new package with a new object identifier.","Step 4. The License Administrator enters a Name for the package. Optionally, and in any order, the License Administrator enters the Description and\/or the capture period (Start and End timestamps). See .","If the Asset\/Standard type is selected, then an asset\/standard type dialog  is displayed (). The asset\/standard type dialog  has a general tab , assets tab , and allocation tab . The License Administrator can use the Query Assets module  to query a set of asset documents from the Licensing Database  for the package. The create IP asset package module  links these documents to the new package. The new assets are listed in the assets tab  ().","If the Package Type is Asset\/Standard or Group, the License Administrator can choose to allocate the assets within the package. The create IP asset package module  displays a list of the assets in the package, and the License Administrator enters an Allocation Percent for each asset. See . The License Administrator can select an even distribution or a custom distribution, where relative percentages are entered by the License Administrator. These allocations affect the manner in which license fees will be attributed to the assets in a package. For example, suppose an asset package includes an Asset having an allocation of 60%, and an Asset having an allocation of 40% (as shown in the example of ). In this case, 60% of any license revenue attributed to this asset package will be considered to have been generated by Asset, and 40% of any license revenue attributed to this asset package will be considered to have been generated by Asset.","If the Group type is selected, a group dialog  is displayed () having a general tab , a group tab , and an allocation tab . The create IP asset package module  displays a list of group names from the Core Database , preferably in alphabetical order. The License Administrator as a User must have the ability to read the groups in the list. The License Administrator selects one or more groups that hold the documents\/assets that the package is to package. The create IP asset package module  displays the group documents and links them to the package in the group tab  ().","If the Descriptive type is selected, then a descriptive dialog  is displayed () having a general tab  and a description tab . The License Administrator enters text regarding Inclusion Criteria that describes the legal qualities of the assets, preferably in the language from the Licensing Agreement, in addition to the Standard behavior. See .","Step 5. The create IP asset package module  writes the new asset package to the Licensing Database , making the License Administrator user the owner of the package, then confirms the transaction commit to the License Administrator.","Modify IP Asset Package","The modify IP asset package use case  is diagramed in . According to this use case, the License Administrator selects an IP Asset Package from the Licensing Database , then modifies the information about the package and\/or its contents: the documents listed in a standard package, the group contained within a Group package, or the text contained within a Descriptive package. The operation of this use case is further described below.","Step 1. The License Administrator starts the transaction to edit an IP asset package. This can be done, for example, by selecting the asset packages icon  to display an asset package view . The asset package view  has a package list pane  where asset packages are listed, and an asset list pane  where assets in a selected asset package (selected in the package list pane ) are listed.","Step 2. The modify IP asset package module  displays the asset packages in the packages list pane  by querying the Licensing Database , preferably displaying the Name, Description, and\/or Package Type preferably in alphabetical order by name. The modify IP asset package module  displays only those packages for which the License Administrator has Read permission or ownership.","Step 3. The License Administrator selects a package in the packages list pane .","Step 4. If the License Administrator has Write permission on the selected package or owns it, the modify IP asset package module  displays a form showing all the fields of the package, including the object identifier, the Package Name, the Description, the capture period (Start and End date\/time), and the Package Type. This is similar to the examples shown in .","Step 5. The License Administrator changes the Name, Description, Capture Period, Package Type, or other information in any order, then ends the transaction.","Step 6. The modify IP asset package module  updates the Licensing Database  with the changes and confirms the commit to the License Administrator.","This use case has a number of extensions:\n\n","Print Asset Package","The print asset package use case  is diagramed in . This use case extends the Print Object use case, and the Print License use case uses it. The print asset package module  prints an Asset Package, including all information in the Licensing Database  and the Core Database  about the package and its documents. The operation of the print asset package module  is further described below.","Step 1. The Actor in the Print Object use case or the Print License Use case selects an Asset Package and prints it.","Step 2. The print asset package module  prints a formatted report with the Start Date, End Date, Name, Description, Package Type, etc. It then prints package-specific information (see Extensions).","Step 3. The print asset package module  prints the Document IDs of the documents and the document-specific information (see Extensions).","This use case has a number of extensions:\n\n","Remove IP Asset","The remove IP asset use case  is diagramed in . This is preferably an administrator use case. According to this use case, the licensing system administrator removes an IP asset (an IP Document or a Know How document, for example) and its related data from the Licensing Database  and Core Database . The operation of this use case is further described below:","Step 1. The System administrator begins the transaction.","Step 2. The remove IP asset module  displays a list of all assets (the IP Documents and Know Documents) in the Licensing Database  and Core Database , displaying the Document ID, the Document Type (disc_switch for IP Documents and IA_Kind Description for Know How), the DocumentNumber and Title for IP Documents, ordering by the type and document ID.","Step 3. The Administrator selects one or more assets and removes them.","Step 4. The remove IP asset module  deletes the information from the Licensing and Core databases  and  and moves it to the Recycle Bin (implementation may differ, deferring the actual SQL deletes, and there is no notification of commit to the Administrator).","This use case has a number of extensions:\n\n","Remove IP Asset Package","The remove IP asset package use case  is diagramed in . According to this use case, the License Administrator selects an asset package from a list and removes it from the Licensing Database , subject to security access and links to license agreements. The operation of this use case is further described below.","Step 1. The License Administrator begins a transaction.","Step 2. The remove IP asset package module  displays a list of the asset packages to which the user has Read access or which the user owns, displaying the object identifier, the Name, the Description, and the Package Type, ordered by Name.","Step 3. The License Administrator selects one or more asset packages to which the user has Delete access or which the user owns and removes them. The License Administrator then commits the transaction.","Step 4. The remove IP asset package module  removes the persistent asset packages from the Licensing Database  and confirms the operation to the License Administrator. The remove IP asset package module  propagates the delete to the appropriate subclass based on Package_Type (Standard Asset Package, Descriptive Asset Package, Group Asset Package) and to the Secure Object superclass.","This use case has a number of extensions.\n\n","Query Assets","The query assets use case  is diagramed in . This use case is used by other use cases. The License Administrator queries the Licensing Database  for a set of asset documents by entering search criteria into a form (see , for example). The License Administrator can remove assets from this set individually. The use case returns a set of License object identifiers (OIDs). The operation of this use case is further described below.","Step 1. The using use case calls this use case, and the query assets module  displays, for example, a screen that contains these fields for search criteria: Document Number, Title, Long Display Name, Issue Date, Filing Date, Publication Date, Description, Asset Type (\u201cDisc Switch\u201d), Publishing Organization (Description from Pub Organization class), Doc Kind (Description from IP Doc Kind class), and\/or any other search fields discussed herein, or conventionally used. See example displays in , B, and .","Step 2. The License Administrator enters one or more fields of search criteria and submits the query.","Step 3. The query assets module  displays a list of documents  that satisfy the query, displaying the Asset Type, Document Number, and Title (for IP documents) and\/or IA Kind and Description (for Know How), and to which the License Administrator has READ access. See .","Step 4. The License Administrator may take any number of actions, including one of these actions:\n\n","Step 5. The License Administrator ends the use case.","This use case has a number of extensions:\n\n","Query Asset Packages","The query asset packages use case  is diagramed in . According to this use case, the Auditor, the Data Entry Clerk, or the License Administrator (and potentially any actor) queries an asset package from the Licensing Database  based on any of the structured fields of the package (including inclusion criteria for descriptive asset packages and group name and description for group packages) or the list of assets (documents) associated with the package. The query asset package module  displays the set of asset packages that qualify given the search criteria. The Modify Asset Package use case extends this one, enabling the actor to modify a package found through the query. This use case is further described below.","Step 1. The Actor begins the transaction.","Step 2. The query asset package module  displays a form that allows the Actor to specify a set of search criteria for the query. The main part of the form contains these fields:\n\n","Step 3. The Actor enters any of the fields and tells the query asset package module  to execute the query.","Step 4. The query asset package module  concatenates all the conditions with a logical AND, then queries the Licensing Database  using the resulting search condition. The query asset package module  then displays a list of all the asset packages that satisfy the search condition. The query asset package module  displays the Package Name, Description, and Package Type.","Step 5. The Actor ends the transaction.","This use case has a number of extensions:\n\n","License Agreements Use Cases","A license agreement is a contract in which an entity, the licensor, licenses intellectual property to another entity, the licensee. There may be a plurality of licensors and\/or licensees. In addition to a variety of contract clauses and the links to any number of asset packages, the license agreement in the context of the present invention contains definitions of the parties to the agreement, compensation terms, territorial restrictions, field-of-use (market area) restrictions, and any other terms and\/or clauses used in license agreements.","A License Agreements View  () displays a spreadsheet pane of all the license agreements. Double-clicking on a license displays the agreement modification dialog  (). This dialog  displays five tabs. The General tab  shown here contains the basic information about the agreement. The Asset Packages tab  lists the asset packages that are the subject of the license and lets the License Administrator administer the list. The Terms tab  lists the compensation terms of the license (fees, royalties, advances, minimum guarantees, and other). The License Administrator can modify these terms through that tab. The Royalty Statements tab  and Payments tabs  let the License Administrator see the linked statements and payments related to the license, but not modify them.","Double-clicking on the empty row or on the new button in the license agreements view  displays the license creation dialog  (). This dialog is the same as the modification dialog but does not display the Statements and Payments tabs, as a new license has none.","Selecting a Find tool in this view displays the Find Agreement dialog  (), which lets you enter search terms for agreements. Entering search conditions into this dialog  and clicking on Find Now displays the matching agreements in the extended dialog  (). You can then double-click on the agreement to display the modification dialog with all the details of the license.","Enter License Agreement","The enter license agreement use case  is diagramed in . According to this use case, the Data Entry Clerk enters a license agreement into the Licensing Database . Entering the agreement entails entering structured data (name, description, effective date, and so on). The Data Entry Clerk enters a set of compensation terms that describe the fee and royalty structure of the agreement. The Data Entry Clerk also links the agreement to a set of asset packages representing the licensed IP assets and to the various parties to the agreement (licensor, licensees, attorneys, and so on). The operation of this use case is further described below.","Step 1. The Data Entry Clerk begins the transaction.","Step 2. The enter license agreement module  generates a new object identifier for the license agreement and displays a data entry form  for the new license.","Step 3. The Data Entry Clerk enters data into the structured data fields of the license creation dialog  and links other objects as required:\n\n","Step 4. The Data Entry Clerk commits the transaction.","Step 5. The enter license agreement module  creates the License Agreement or Infringement Based Agreement in the Licensing Database . The enter license agreement module  confirms the commit to the Data Entry Clerk.","This use case has a number of extensions:\n\n","Link to Part","The link to party use case  is diagramed in . According to this use case, a Data Entry Clerk selects an entity from a list and a role from another list. The Licensing Database  creates a link between the entity, the role, and the license agreement from the using use case. This use case is further described below.","Step 1. The Data Entry Clerk starts the use case with an open transaction containing a license agreement that will link to the entity and role, passing in the object identifier for the license agreement.","Step 2. The link to party module  queries the Licensing database  and displays the names and descriptions of the entities and roles.","Step 3. The Data Entry Clerk selects one entity from the entity list and one role from the role list.","Step 4. The Data Entry Clerk signals the end of the use case.","Step 5. The Licensing Database  creates a Party link using the License Agreement OID, the Entity OID, and the Role OID.","This use case has a number of extensions.\n\n","Link to Asset Package","The link to asset package use case  is diagramed in . According to this use case, a Data Entry Clerk selects one or more asset packages from a list. The link to asset package module  creates a link between the input license agreement and the selected asset packages. The Data Entry Clerk sets the territorial and field-of-use restrictions (and any other license details) on each asset package link. The Data Entry Clerk indicates whether the link is a cross license and\/or has any further limitations, obligations, rights, etc. as part of this license. The link to asset package module  is further described below.","Step 1. The Data Entry Clerk starts the use case with an open transaction containing a license agreement that will link to the asset packages. The extended use case supplies the object identifier for the agreement.","Step 2. The link to asset package module  displays the names and descriptions of the asset packages in a list ordered by name.","Step 3. The Data Entry Clerk selects one or more packages from the list.","Step 4. The link to asset package module  creates and displays a link between the license agreement and each package the Data Entry Clerk selects and assigns default territorial and field-of-use values. The link to asset package module  sets the default Cross-Licensed flag to false.","Step 5. The Data Entry Clerk adds territorial and field-of-use restrictions to the links using lists of the available territories and fields of use from the Licensing Database . The Data Entry Clerk also sets the Cross-License flag to true if the particular package represents assets licensed by the licensee to the licensor instead of vice versa. The Data Entry Clerk removes unwanted territorial and field-of-use restrictions from the links. The Data Entry Clerk enters any additional limitations in the Limitations field. All of these actions may occur in any order. The Data Entry Clerk signals the end of the use case.","Step 6. The Licensing Database  links the asset packages and the input license agreement and adds links to the required territories and fields of use for each link.","This use case has a number of extensions:\n\n","Enter Compensation Term","The enter compensation term use case  is diagramed in .","The Enter License Agreement and Modify License Agreement use cases use this one to enter compensation terms to a license agreement in the Licensing Database . The Licensing Administrator or Data Entry Clerk creates a licensing term with the details appropriate to the particular term. AU terms have a description, an amount, and late payment penalties, and perhaps other attributes. Ongoing royalties have a time period and possibly tables of escalating amounts based on number of units\/sales plus tables of estimated number of units\/sales. Ongoing royalties break down into royalties on units sold, on revenue, or on revenue from sublicense royalties. A minimum guarantee also has a time period and possible escalations. An advance has a due date and may be refundable or not. A fee may be ongoing with a time period or a lump sum fee with a due date.","The operation of this use case is further described below.","Step 1. The using use case passes in the object identifier for the license agreement to which the Data Entry Clerk or License Administrator (the Actor) wants to add compensation terms.","Step 2. The enter compensation term module  displays a list of the current set of compensation terms (if any) for this license, preferably in order of term number, displaying the term Description, the compounding period Description, the Amount with its currency symbol, the Late Payment Interest Rate (if any), and the Term Type.","Step 3. The Actor creates a new term and selects one of the term types (Royalty Per Unit, Royalty Per Sales Amount, Royalty Per Royalty Amount, Minimum Guarantee, Advance, Ongoing Fee, Lump Sum Fee, or Other).","Step 4. The enter compensation term module  displays the term with default values (Amount 0, Currency from the last term or the default currency for the system, interest rate 0, fields for entering a Time Unit Period (see Extensions) with default Time Unit Type of Month, Term Type, Royalty_Per_Sales_Amount). The enter compensation term module  displays a form for the term given the default term type (see Extensions). It displays a choice of several period types and entry fields that differ depending on the period type the user chooses.","Step 5. The Actor enters the standard details for the term and the details for the particular term type (see Extensions), then either repeats from step 3 or ends the use case.","Step 6. The enter compensation term module  inserts the new terms into the Licensing Database . The enter compensation term module  extends the use case with the Create Expected Revenue use case, which computes the expected revenue amounts per period for the existing compensation terms.","This use case has a number of extensions:\n\n","Create Expected Revenue","The create expected revenue use case  is diagramed in . This use case extends the Enter Compensation Term use case to build a series of expected future revenue payments. In other words, based on the compensation terms of the license agreement, it is possible for the invention to calculate expected revenue to be generated in the future by the license agreement. Such expected future revenue can then be compared to actual revenue.","The extending use case passes in the compensation term object identifier. The create expected revenue module  queries the compensation term and its components and generates the appropriate payments expected from that term.","Operation of the create expected revenue module  is further described below.","Step 1. The create expected revenue module  queries the Compensation Term in question from the Licensing Database  to get the Amount and subtype of the term.","Step 2. For each period that is part of the structure of the compensation term, the create expected revenue module  creates an Expected License Revenue object in the Licensing Database , giving it a payment number and a due date as well as the expected amount of the payment.","Step 3. The create expected revenue module  iterates through the expected revenues calculated in step 2 to subtract advance payment amounts from expected royalties and to reset Minimum Guarantees to the amount needed to bring the guarantee up to the guaranteed amount.","This use case has a number of extensions:\n\n","Modify Compensation Term","The modify compensation term use case  is diagramed in . The Modify License Agreement use case uses this one to change existing compensation terms that belong to a license agreement in the Licensing Database . The Licensing Administrator selects a particular term and modifies its attributes. The operation of this use case is further described below.","Step 1. The using use case passes in the object identifier for the license agreement in which the License Administrator wants to change compensation terms.","Step 2. The modify compensation term module  displays a list of the current set of compensation terms for this license in order of term number, displaying the term Description and the Term Type.","Step 3. The License Administrator selects a term for modification.","Step 4. The modify compensation term module  displays the current values. It displays a data entry form for the term given the term type (see Extensions) that display the current values for the selected term.","Step 5. The License Administrator changes any of these values, then ends the use case.","Step 6. The modify compensation term module  updates the term in the Licensing Database .","This use case has a number of extensions:\n\n","If the term type is Ongoing Royalty and the Royalty Type is Royalty Per Sales Amount, the Modify compensation term module  displays fields for entering the Percentage, the Net flag (default True), the Estimated Revenue Per Period (default 0), a table for an escalation schedule (Starting Amount, Ending Amount, and Royalty Percentage), and a table for Estimated Revenue (Period Number, Estimated Revenue).\n\n","Remove Compensation Term","The remove compensation term use case  is diagramed in . The Modify License Agreement use case uses this one to remove existing compensation terms that belong to a license agreement in the Licensing Database . The Licensing Administrator selects a particular term and removes it. The operation of this use case is further described below.","Step 1. The using use case passes in the object identifier for the license agreement in which the License Administrator wants to change compensation terms.","Step 2. The Remove compensation term module  displays a list of the current set of compensation terms for this license in order of term number, displaying the term Description and the Term Type.","Step 3. The License Administrator selects a term to remove.","Step 4. The Remove compensation term module  deletes the information from the Licensing Database and moves it to the Recycle Bin (implementation may differ regarding deferring the actual SQL deletes, and there is no notification of commit to the Administrator).","Query License","The query license use case  is diagramed in . According to this use case, the Auditor, the Data Entry Clerk, or the License Administrator (and potentially any User) queries a license from the Licensing Database  based on any of the structured fields of the license. The system displays the details of the license agreement, including a list of asset packages, the parties to the agreement, a list of compensation terms, a list of royalty statements, etc. The operation of this use case is further described below.","Step 1. The Auditor starts the transaction. This can be accomplished in a number of ways, such as by selecting Tools, Find, License Agreement from the menu bar ().","Step 2. The Query license module  displays a query form . () with any combination of the following structured fields available for query specification: object identifier, Agreement ID, Name, Title, Licensee, Licensor, Description, Effective Date, Exclusivity, Assignable, Transferable, Revocable, Confidential, Terminated, Expiration Date, Perpetual, Infringement Based, Can Sublicense, Annual Audit, Audit at Licensee Expense, Favored Nation, Improvements, Grant Back, Withholding Percentage, Asset Package Name, Field of Use, Territory, Party Name, etc. The example query form  in  shows only a subset of these fields.","Step 3. The Auditor enters the search criteria.","Step 4. The Query license module  queries all the licenses that meet the query criteria from the licensing database  and for which the Auditor has Read access. The Query license module  displays the licenses, preferably showing all of the fields in step 2 except for Party Name, Asset Package Name, Territory, and Field of Use, which are extensions. The Query license module  orders the licenses by Agreement ID.","Step 5. The Auditor ends the transaction.","This use case has a number of extensions:\n\n","Modify License Agreement","The modify license agreement use case  is diagramed in . According to this use case, the Data Entry Clerk modifies a license agreement in the Licensing database . Modifying the agreement entails entering\/revising structured data (name, description, effective date, and so on). The Data Entry Clerk can edit or add new compensation terms that describe the fee and royalty structure of the agreement. The Data Entry Clerk can revise the links between the agreement and the set of asset packages representing the licensed IP assets. The Data Entry Clerk can revise the links between the agreement and the set of entity roles that identify the various parties to the agreement (licensor, licensees, attorneys, and so on). This use case is further described below.","Step 1. The License Administrator begins the transaction.","Step 2. The Modify license agreement module  displays the License Agreements in the Licensing Database.","Step 3. The License Administrator chooses a license agreement to modify.","Step 4. If the License Administrator has write permission on the selected document, the Modify license agreement module  displays the license agreement in a data entry form such as that used in the Enter License Agreement use case and shows the current values of all fields. See .","Step 5. The License Administrator modifies any of the structured fields and linked objects of the license agreement in any order\n\n","Step 6. The License Administrator commits the transaction.","Step 7. The Modify license agreement module  updates the Agreement, License Agreement, and Infr Based Agreement objects in the Licensing Database  and confirms the commit to the License Administrator.","This use case has a number of extensions:\n\n","Remove License Agreement","The remove license agreement use case  is diagramed in . This is preferably an administrator use case. According to this use case, the license system Administrator removes a license agreement and its related data from the Licensing Database , including infringement information, compensation terms, expected revenue, royalty statements, party links, asset package links, territorial restrictions, and field-of-use restrictions. The operation of this use case is described below.","Step 1. The License system Administrator begins the transaction.","Step 2. The Remove license agreement module  displays a list of all the licenses in the Licensing Database, displaying the document ID, the Agreement ID, and the Name.","Step 3. The License system Administrator selects one or more license agreements and removes them.","Step 4. The Remove license agreement module  uses the Remove Royalty Statement use case to remove the Royalty Statements with the agreements.","Step 5. The Remove license agreement module  deletes the information from the Licensing database  and moves it to the Recycle Bin (implementation may differ regarding deferring the actual SQL deletes, and there is no notification of commit to the License system Administrator).","This use case has a number of extensions:\n\n","Print License","The print license use case  is diagramed in . This use case extends the Print Object use case. The System prints a License Agreement, including all information in the Licensing Database  about the agreement, its parties, its compensation terms, its asset packages (with territorial and field-of-use restrictions), its royalty statements, and the expected revenue and payments received to date. The operation of this use case is further described below.","Step 1. The Actor in the Print Object use case selects a License Agreement and prints it.","Step 2. The Print license module  prints a formatted report with the Document ID, the Agreement ID, the Name, the Description, the Effective Date, the Expiration Date, and the various clause flags as check boxes.","Step 3. The Print license module  prints the parties to the agreement, with name, organization, and primary contact information.","Step 4. The Print license module  prints the compensation terms of the agreement, printing the Term Number, Term Type, and the Description of each term along with the currency symbol and the Amount and any Due Date for the term.","Step 5. The Print license module  prints the Asset Packages for the license using the Print Asset Package use case.","Step 6. The Print license module  prints the Royalty Statements received for the license using the Print Royalty Statement use case.","Step 7. The Print license module  prints the Expected Revenues and the Payments linked to them, printing the Payment Number, Amount, and Due Date for each Revenue and the Payment ID, Receipt Date, Currency Unit Symbol, and Amount Allocated for each Payment.","Administer Territories","The administer territories use case  is diagramed in . This is preferably an administrator use case. According to this use case, the system Administrator creates, modifies, and\/or removes territories from the Licensing Database . The system comes preinstalled with the territories Worldwide, USA, Japan, and EU. The operation of this use case is further described below.","Step 1. The System Administrator starts the transaction.","Step 2. The Administer territories module  displays a list of Territories, displaying the Territory ID, Abbreviation (such as EUSA), Full Name (such as East Coast of the United States of America), and Description (such as \u201cthe region including all eastern states of the United States of America\u201d).","Step 3. The System Administer takes one of the following actions:\n\n","Step 4. The System Administrator ends the transaction.","Step 5. The Administer territories module  commits the changes in the Licensing Database . The Administer territories module  confirms the commit to the System Administrator.","This use case has a number of extensions:\n\n","Administer Fields of Use","The administer fields of use case  is diagramed in . This is preferably an administrator use case. According to this use case, the system Administrator creates, modifies, and\/or removes fields of use from the Licensing Database . The operation of this use case is further described below.","Step 1. The System Administrator starts the transaction.","Step 2. The Administer fields of use module  displays a list of Fields of Use, displaying the Field of Use ID, Display Name (for example, \u201csemi\u201d), and Description (for example, \u201csemiconductor applications\u201d).","Step 3. The System Administer takes any of the following actions:\n\n","Step 4. The System Administrator ends the transaction.","Step 5. The Administer fields of use module  commits the changes in the Licensing Database . The Administer fields of use module  confirms the commit to the System Administrator.","This use case has a number of extensions:\n\n","Display License Agreements","The display license agreements use case  is diagramed in . This use case displays a table of license agreements with the basic data for each agreement. The Actor may select one or more agreements and conduct further operations such as Modify License Agreement. The operation of this use case is further described below.","Step 1. The Actor starts the transaction.","Step 2. The display license agreements module  displays a table of all the License Agreements to which the Actor has read access. Each row of the table corresponds to a License Agreement The columns include the License Agreement ID, the Name, the Description, the Effective Date, the Expiration Date, the Withholding Percentage, and a series of checkbox items: Exclusivity, Assignable, Transferable, Revocable, Confidential, Terminated, Perpetual, Infringement Based, Can Sublicense, Annual Audit, Audit At Licensee Expense, Favored Nation, Improvements, and Grant Back.","Step 3. The Actor ends the transaction.","This use case has a number of extensions:\n\n","Enter Adjustment","The enter adjustment use case  is diagramed in . The Enter License Agreement and Modify License Agreement use cases use this one to enter adjustments to compensation terms in a license agreement in the Licensing Database . The Licensing Administrator or Data Entry Clerk creates an adjustment with the details appropriate to the particular kind of adjustment. Adjustments have a description, an amount, a currency, and a due date. A minimum guarantee also has a time period and possible escalations. An advance may be refundable or not.","The adjustments modify the revenue stream that compensation terms generate, and the Link Adjustment to Terms use case relates an adjustment to the terms that generate the revenue that it adjusts.","It will be illustrative to consider selected background items. A license agreement structures its revenue stream based on a combination of fees and royalty payments (and possibly some other kinds of compensation). The agreement also contains terms that affect the revenue from these terms, the minimum guarantee and the advance.","A minimum guarantee is an amount of money that the licensor must receive by the end of the guarantee period, usually one year but sometimes quarterly or some other period. If the revenue from certain compensation terms does not add up to this amount, the licensee must make up the difference.","An advance is an amount paid to the licensor by the licensee in advance of revenue (usually royalties). The licensee then subtracts the advance amount from the compensation due until the entire amount of the advance is accounted for. From that point on, the licensee then begins payments to the licensor.","Any given adjustment may cover any number of different compensation terms for the same license. For example, an advance may cover an initial fee and a series of royalty payments. A minimum guarantee could cover two or three different royalty terms but not a maintenance fee.","The operation of this use case is further described below.","Step 1. The using use case passes in the object identifier for the license agreement to which the Data Entry Clerk or License Administrator (the Actor) wants to add adjustments.","Step 2. The enter adjustment module  displays a list of the current set of adjustments for this license in preferably order of term number, displaying the Description, the Amount with its currency symbol, the Due Date, and the Adjustment Type.","Step 3. The Actor creates a new adjustment and selects one of the term types (Minimum Guarantee or Advance).","Step 4. The enter adjustment module  displays the adjustment with default values (Amount 0, Currency from the last term or the default currency for the system, and Due_Date empty). It displays a form for the term given the default term type (see Extensions).","Step 5. The Actor enters the standard details for the adjustment and the details for the particular term type (see Extensions), then either repeats from step 3 or ends the use case.","Step 6. The enter adjustment module  inserts the new terms into the Licensing Database .","This use case has a number of extensions.\n\n","Modify Adjustment","The modify adjustment use case  is diagramed in . The Modify License Agreement use case uses this one to change existing adjustments that belong to a license agreement in the Licensing Database . The Licensing Administrator selects a particular adjustment and modifies its attributes.","The Licensing Administrator also modifies the links between adjustments and compensation terms for the license agreement in the Link Adjustment to Terms use case. See the Enter Adjustment use case for background material on adjustments.","The operation of this use case is further described below.","Step 1. The using use case passes in the object identifier for the license agreement in which the License Administrator wants to change adjustments.","Step 2. The modify adjustment module  displays a list of the current set of adjustments for this license in order of term number, displaying the term Description and the Term Type.","Step 3. The License Administrator selects an adjustment for modification.","Step 4. The modify adjustment module  displays the current values for the selected adjustment through a data entry form for the adjustment, including due date, currency, amount, or description.","Step 5. The License Administrator changes any of these values, then ends the use case.","Step 6. The modify adjustment module  updates the adjustment in the Licensing Database .\n\n","Link to Adjustment","The link to adjustment use case  is diagramed in . According to this use case, a License Administrator selects one or more adjustments from a list. The link to adjustment module  creates a link between the input compensation term and the selected adjustments.","It will be illustrative to consider selected background items. The invention allows one to adjust the revenue stream from a compensation term through advances or minimum guarantees. These are adjustment objects that are part of the license.","The advance is a payment from the licensee to the licensor in anticipation of revenue from the license. When the revenue comes due, the amount from the compensation terms covered by the advance is reduced by the amount of the advance until the revenue accounts for the entire advance.","The minimum guarantee is a floor for revenue during a specific period, usually a year. If the revenue for that period does not come up to the guaranteed amount, the difference becomes due as a separate payment.","Advances and minimum guarantees may apply to only certain compensation terms associated with the license. Linking the compensation terms to the adjustments lets you specify exactly how to adjust the revenue generated from the compensation terms in the Create Expected Revenue use case.","The operation of this use case is further described below.","Step 1. The License Administrator starts the use case with an open transaction containing a compensation term that will link to the adjustments. The extended use case supplies the object identifier for the agreement.","Step 2. The link to adjustment module  displays the types and descriptions of the adjustments for the license that owns the compensation term in a list ordered by adjustment number within the license, displaying any existing links.","Step 3. The License Administrator selects one or more adjustments from the list.","Step 4. The adjustment module  creates and displays a link for each adjustment the License Administrator selects.","Step 5. The Licensing Database  links the adjustments to the compensation term through the Term Adjustment association table.","This use case has a number of extensions.\n\n","Remove Compensation Adjustment","The remove compensation adjustment use case  is diagramed in . The Modify License Agreement use case uses this one to remove existing compensation adjustments that belong to a license agreement in the Licensing Database . The operation of this use case is further described below.","Step 1. The using use case passes in the object identifier for the license agreement in which the License Administrator wants to change compensation adjustments.","Step 2. The remove compensation adjustment module  displays a list of the current set of compensation adjustments for this license in order of adjustment number, displaying the term Description and the Adjustment Type.","Step 3. The License Administrator selects an adjustment to remove. In an embodiment, the adjustment cannot link to any compensation terms of the license.","Step 4. The remove compensation adjustment module  deletes the information from the Licensing Database  and moves it to the Recycle Bin.","Preferably, if the selected compensation adjustment has any compensation term objects associated with it, the remove compensation adjustment module  refuses to remove the compensation adjustment and instead displays an error message, \u201cCannot remove this compensation adjustment because there are links to compensation terms of this license.\u201d","Royalty Statements Use Cases","A royalty statement is a document that a licensee submits to a licensor to specify the licensed royalties owed for a given royalty period. A royalty statement includes a number of royalty statement details. Each royalty statement detail lists a product, a number of units sold, an amount of revenue, and a calculated royalty amount.","The Royalty Statements View  contains two panes, a license agreement spreadsheet  and a royalty statement spreadsheet . . The agreement pane  lets you select a license, and the royalty statement pane  displays the royalty statements for that license. You add and modify statements by double-clicking on a blank row or an existing row, as with all the other views.","Enter Royalty Statement","The enter royalty statement use case  is diagramed in . According to this use case, the Data Entry Clerk queries a license, then enters information about a royalty statement that applies to that license into the database, then enters a series of detail items, one for each product detail on the royalty statement. The new document has the classifier the Data Entry Clerk sets for it. The operation of this use case is further described below.","Step 1. The Data Entry Clerk begins the transaction to enter a new royalty statement. The royalty statement view  () is displayed.","Step 2. The Data Entry Clerk uses the Query License use case to identify and select the license to which the new royalty statement applies. Alternatively, the Data Entry Clerk can select a license in the license agreement pane  of the royalty statement view .","Step 3. The Enter royalty statement module  creates an object identifier for the new royalty statement that it uses to relate the statement to the queried license agreement and to the statement details. It then links the royalty statement to the queried license.","Step 4. A royalty statement dialog  () is displayed. The royalty statement dialog  has a general tab  and a details tab . In the general tab , the Data Entry Clerk enters the Fixed Time Interval for the reporting\/statement period (Start Date and End Date). The Data Entry Clerk enters the royalty statement due date, receipt date, and (optionally) an investigation window date and a licensor invoice number. The Data Entry Clerk optionally sets a security classification from a list of available Write classifications from the IPAM Security Subsystem , to indicate the persons who have access to this royalty statement record.","Step 5. In the details tab  (see ), for each detail item on the royalty statement, the Data Entry Clerk creates a new detail for the royalty statement record by pressing the Add Detail button . This results in displaying a detail dialog . The Data Entry Clerk enters the product (selecting from a list of products associated with the licensee), the number of units sold of the product, the revenue received from the sale and the currency unit for the revenue, and the royalty due for the product, where this information is obtained from the royalty statement provided by the licensee. All details for the royalty statement are listed in a details area  ().","Step 6. The Data Entry Clerk commits the transaction.","Step 7. The Enter royalty statement module  inserts the Royalty Statement and its details into the licensing database . The Enter royalty statement module  requests the IPAM Security System  to set the document classification. The enter royalty statement module  confirms the commit to the Data Entry Clerk.","At any time, if the Data Entry Clerk presses F1 or the equivalent, the application extends the use case with the Display Context-Sensitive Help use case.","Modify Royalty Statement","The modify royalty statement use case  is diagramed in . According to this use case, the License Administrator queries a license, then modifies any of the attributes of any of the linked royalty statements, and\/or modifies any of the statement details, one for each product detail on the statement. The operation of this use case is further described below.","Step 1. The License Administrator begins the transaction.","Step 2. The Modify royalty statement module  displays the licenses to which the License Administrator has read access, displaying the object identifier, the Agreement ID, the Name, and the Description, in a form similar to that shown in .","Step 3. The License Administrator selects a license from the license pane .","Step 4. The Modify royalty statement module  displays a list of existing royalty statements attached to the license in the royalty statement pane . The Modify royalty statement module  displays only those royalty statements to which the License Administrator has Read access.","Step 5. The License Administrator selects a royalty statement for modification from the royalty statement pane .","Step 6. If the License Administrator has Write access to the royalty statement, the Modify royalty statement module  displays the current field values in a form similar to that shown in .","Step 7. The License Administrator may modify the royalty statement Invoice Number, Due Date, Receipt Date, or the Investigation Window Date in any order.","Step 8. If the details tab  is selected, the Modify royalty statement module  displays the details for the selected royalty statement, displaying the product, the Units Sold, the Currency, and the Revenue.","Step 9. For each detail item on the royalty statement, the License Administrator can modify the name of the product, the number of units sold, or the revenue received and its currency unit, in any order.","Step 10. The License Administrator commits the transaction.","Step 11. The Modify royalty statement module  updates the royalty statement.","Step 12. If the License Administrator updated the time interval for the reporting period, the Modify royalty statement module  creates a new time interval and adds the new period to the Licensing Database  and removes the previous one if it is not linked to any other statements, making the relevant changes to the Time Period extent as well.","Step 13. For each detail modified, the Modify royalty statement module  updates the detail.","Step . The Modify royalty statement module  confirms the commit to the License Administrator.","This use case has a number of extensions:\n\n","Query Statement","The query statement use case  is diagramed in . According to this use case, the Auditor enters search criteria for the statement, and the Query statement module  displays the statement from the Licensing Database . The Auditor can select a statement to see the statement details, and he or she can select a detail to see any payment allocations for the detail. The operation of this use case is further described below.","Step 1. The Auditor starts the transaction.","Step 2. The Query statement module  displays the licenses to which the Auditor has read access, displaying the object identifier, the Agreement ID, the Name, and the Description in a format similar to that shown in .","Step 3. The Auditor selects a license for query of statements.","Step 4. The Query statement module  displays a query form that lets the Auditor enter selection conditions on the set of statements, including object identifier, the reporting period Start and End Dates, the Invoice Number, the Due Date, the Receipt Date, and\/or the Investigation Window Date.","Step 5. The Auditor enters query criteria and starts the query.","Step 6. The Query statement module  displays the royalty statements for the license in preferably reverse chronological order to which the Auditor has Read access, displaying the object identifier, the reporting period Start and End Dates, the Invoice Number, the Due Date, the Receipt Date, and the Investigation Window Date.","Step 7. The Auditor selects a statement.","Step 8. The Query statement module  queries all the details of the selected royalty statement from the Licensing Database  and displays them, if any, showing the Product, the Units Sold, the Revenue and its currency unit symbol, and the Royalty Due, in a form similar to that shown in .","Step 9. The Auditor selects a detail.","Step 10. The Query statement module  queries all the payment detail allocations from the Licensing Database  and displays the Amount Allocated for each one with a label that allows the Auditor to see it, if any. The Query statement module  displays the Amount Allocated in the currency of the detail, converting it if the currency of the payment is different from the detail currency unit using the Convert Currency use case. The Query statement module  lists the allocations in preferably Receipt Date order.","Step 11. The Auditor ends the transaction.","Remove Royalty Statement","The remove royalty statement use case  is diagramed in . Preferably, this is an administrator use case. According to this use case, the system Administrator removes a linked royalty statement, which removes the statement details as well, all from the Licensing Database . This operation is available only through the System Administrator interface to limit the potential for accidental removal of the data. The operation of this use case is further described below.","Step 1. The System Administrator begins the transaction.","Step 2. The Remove royalty statement module  displays a list of existing royalty statements.","Step 3. The System Administrator selects one or more royalty statements and removes them.","Step 4. The Remove royalty statement module  deletes the information from the licensing database  moves it to the Recycle Bin (implementation may differ regarding details on deferring the actual SQL deletes, and there is no notification of commit to the System Administrator).","This use case has a number of extensions:\n\n","Print Statement","The print statement use case  is diagramed in . This use case extends the Print Object use case, and the Print License use case uses it. The Query statement module  prints a Royalty Statement, including all information in the Licensing Database  about the statement, its details, and the allocation of payments to those details. This use case is further described below.","Step 1. The Actor in the Print Object use case or the Print License Use case selects a Royalty Statement and prints it.","Step 2. The Print statement module  prints a formatted report with the Start Date, End Date, Agreement Name, Agreement ID, any Invoice Number, the Due Date, the Receipt Date, and\/or the Investigation Window Date.","Step 3. The Print statement module  prints the Royalty Statement Details for the statement. Each detail contains the Product Name, Product Description, Units Sold, Revenue, Currency Unit Symbol, and\/or Royalty Due.","Step 4. For each detail, the Print statement module  prints any payment allocations, printing the Payment ID, the Receipt Date, any Invoice Number, the Payor Name, the Amount Allocated, the Currency Unit Symbol, the Payment Amount, and\/or the Payment Withheld Amount, preferably ordering the list by receipt date of the payment.","Display Royalty Statements","The display royalty statements use case  is diagramed in . This use case displays a table of licenses and a table of royalty statements with the basic data for each agreement and statement within the agreement. The Actor may select an agreement. The display royalty statements module  then displays all the royalty statements to which the Actor has read access that belong to the selected license agreement. The Actor may then select one or more statements within the agreement. The operation of this use case is further described below.","Step 1. The Actor starts the transaction.","Step 2. The display royalty statements module  displays a table of all the License Agreements to which the Actor has read access using the Display License Agreements use case.","Step 3. The Actor selects a single license agreement from that table.","Step 4. The display royalty statements module  displays a table of all the Royalty Statements from the Licensing Database  to which the Actor has read access. Each row of the table corresponds to a single Royalty Statement The columns include the Reporting Period's Start Date and End Date, the Invoice Number, the Due Date, the Receipt Date, and the Investigation Window Date.","Step 5. The Actor ends the transaction.\n\n","Query Statement","The query statement use case  is diagramed in . According to this use case, the Auditor enters search criteria for the statement, and the query statement module  displays the statement from the Licensing Database . The Auditor can select a statement to see the statement details, and he or she can select a detail to see any payment allocations for the detail. The operation of this use case is further described below.","Step 1. The Auditor starts the transaction.","Step 2. The query statement module  displays the licenses using the Display Licenses use case.","Step 3. The Auditor selects a license for query.","Step 4. The query statement module  displays a form that lets the Auditor enter any combination of the reporting period Start and End Dates, the Invoice Number, the Due Date, the Receipt Date, and the Investigation Window Date.","Step 5. The Auditor enters values into the query form fields and starts the query.","Step 6. The query statement module  combines the entries into a complete query expression, executes the query in the Licensing Database , then displays the resulting statements in the system that satisfy the query conditions to which the Auditor has read access, ordered by start date.","Step 7. The Auditor selects a statement.","Step 8. The query statement module  queries all the details of the selected royalty statement from the Licensing Database  and displays them in order of Line Number, if any, showing the Product, the Units Sold, the Revenue and its currency unit symbol, and the Royalty Due.","Step 9. The Auditor selects a detail.","Step 10. The query statement module  queries all the payment detail allocations from the Licensing Database  and displays the Amount Allocated for each one with a label that allows the Auditor to see it, if any. The query statement module  displays the Amount Allocated in the currency of the detail, converting it if the currency of the payment is different from the detail currency unit using the Convert Currency use case. The query statement module  lists the allocations in preferably Receipt Date order.","Step 11. The Auditor ends the transaction.","Payment Use Cases","A payment is an amount of money the licensee sends to the licensor based on the amount they owe for fees, royalties, advances, minimum guarantees, and other compensation terms. To produce various reports, the License Administrator must link these payments to expected revenue periods and to royalty statement details.","The Payments View  contains two panes, a license agreement spreadsheet  and a payment spreadsheet . The agreement pane  lets you select a license, and the payment pane  displays the payments for that license. You add and modify payments by double-clicking on a blank row or as existing row, as with all the other views.","Enter Payment","The payment use case  is diagramed in . According to this use case, the Data Entry Clerk records the details of a payment related to a license in the Licensing Database . The operation of this use case is further described below.","Step 1. The Data Entry Clerk starts the transaction to enter a new payment.","Step 2. The Enter payment module  displays a list of licenses in the license pane  of the payments view .","Step 3. The Data Entry Clerk selects a license in the license pane  of the payments view .","Step 4. The Enter payment module  displays a list of payments for the license in the payments pane .","Step 5. The Data Entry Clerk signals the desire to add a new payment for the selected license using any procedure described herein.","Step 6. The Enter payment module  displays a form  () for entering the details of a payment and creates a new object identifier for the payment object and a link from that payment to the selected license. The form  includes a general tab , a royalty statement details tab , and an expected revenue tab .","Step 7. In the general tab , the Data Entry Clerk enters the Receipt Date, the Amount received, and the Currency in any order. Optionally, the Data Entry Clerk enters a withheld amount (the part of the total amount of the payment that represents a foreign company's withholding of tax due on the payment), an invoice number (for an invoice needed to release the payment from a foreign tax authority), and any late payment interest amount (part of the total amount of the payment that is a penalty for late payment based on the interest rate in the license agreement), again in any order. The Data Entry Clerk selects a Security Class for the payment. The Data Entry Clerk commits the transaction. Data is not typically entered into the royalty statement details tab  and the expected revenue tab , although these tabs are active and accessible according to an embodiment of the invention.","Step 8. The Enter payment module  creates a persistent payment and a link to the indicated license. The Enter payment module  confirms the committed transaction to the Data Entry Clerk.","At any time, if the Data Entry Clerk presses F1 or the equivalent, the application extends the use case with the Display Help use case.","Modify Payment","The modify payment use case  is diagramed in . According to this use case, the License Administrator modifies the details of a payment related to a license. The License Administrator then optionally links the licensee's payment to the expected revenue estimates of the license, to the details of a royalty statement, and to the general ledger debit and credit entries. The operation of this use case is further described below.","Step 1. The License Administrator starts the transaction.","Step 2. The Modify payment module  displays using the payments view  the licenses in the modify payment module  to which the License Administrator has read access, displaying the object identifier, the Agreement ID, the Name, and the Description.","Step 3. The License Administrator selects a license listed in the license agreement pane .","Step 4. The Modify payment module  displays in the payments pane  the payments for the license to which the License Administrator has Read access, displaying the object identifier, the Payor Name, the Security Class, the Currency Symbol, The Amount, the Withheld Amount, the Late Payment Interest Amount, the Receipt Date, and\/or the Invoice Number.","Step 5. The License Administrator selects a payment from the payments pane .","Step 6. If the License Administrator can write to the payment, the Modify payment module  displays a form  () for modifying the details of a payment, showing the fields from step 4 with their current values for the selected payment.","Step 7. The License Administrator optionally modifies any of the fields except for the object identifier and commits the transaction.","Step 8. The Modify payment module  updates the payment in the Licensing Database . The Modify payment module  confirms the committed transaction to the Licensing Administrator.","This use case has a number of extensions:\n\n","Link to Expected Revenue","The link to expected revenue use case  is diagramed in . According to this use case, a License Administrator allocates a payment to the expected revenue estimates deriving from the license compensation terms. The link to expected revenue use case  creates a series of links to these estimates in the Licensing Database . Via these links, it is possible to compare estimated license revenue to actual license revenue\/payments. The operation of this use case is further described below.","Step 1. The License Administrator initiates the use case from the calling use case, passing in an object identifier for a payment and an object identifier for a license agreement to which the payment applies.","Step 2. The Link to expected revenue module  displays in an estimate pane  of the expected revenue tab  () the Expected Amount, Due Date, and optionally a Description for each expected revenue estimate for the license. Note that there are estimates for each compensation term, and the compensation terms for the license agreement are listed in a term pane .","Step 3. The License Administrator selects an estimate and enters an allocation amount for it. This can be done by entering an amount in field , or a percentage of the total payment in field . The total payment amount is displayed in field . This step repeats, as necessary.","Step 4. The Link to expected revenue module  stores an allocation amount into the Licensing Database  for each non-zero allocation entered in step 3.","This use case has a number of extensions:\n\n","Link to Detail","The link to detail use case  is diagramed in . This use case extends the Modify Payment use case. While modifying a payment, the License Administrator selects one or more details from a royalty statement. The use case links the selected details to the payment, allocating part of the payment to each of the details. The operation of this use case is further described below.","Step 1. The License Administrator initiates the use case from the calling use case, passing in an object identifier for a payment and an object identifier for a license agreement to which the payment applies.","Step 2. The Link to detail module  displays the royalty statements for the license in the royalty statement details tab  (). In the example of , there are two royalty statements  and  displayed. Royalty statement  has two details , and royalty statement  has two details . In an embodiment, more complete information is displayed for each detail at this point. Such information may include the line number, product name, units sold, revenue amount, royalty due with currency symbol, etc.","Step 3. The License Administrator selects a detail and enters an allocation amount. This can be done by entering an amount (such as in field ), or a percentage of the payment total (such as in field ). This step repeats as necessary.","Step 4. The License Administrator signals completion.","Step 5. The Link to detail module  creates links between the details and the payment.","This use case includes a number of extensions:\n\n","Print Payment","The print payment use case  is diagramed in . This use case extends the Print Object use case. The print payment module  prints a Payment, including all information in the Licensing Database  about the payment, its General Ledger entries, and its allocation to royalty statement details and to expected revenue. The operation of this use case is further described below.","Step 1. The Actor in the Print Object use case selects a Payment and issues a command to print it.","Step 2. The Print payment module  prints a formatted report with the Payment ID, the Currency Unit Symbol, the Amount, the Withheld Amount, the Late Payment Interest Amount, the Receipt Date, the Invoice Number, etc.","Step 3. The Print payment module  prints the General Ledger Entries, printing the OL Account Number, the Account Description, the Amount, the Entry Date, and the Entry Type (credit or debit).","Step 4. The Print payment module  prints the allocations of the payment to royalty statement details, including the Royalty Statement Start and End Dates, the Detail Line Number, the Product Name, the Detail Currency Unit Symbol, Detail Royalty Due, and the Amount Allocated.","Step 5. The Print payment module  prints the allocations of the payment to expected revenue, including the License Agreement ID and Name, the Term Number, the Expected Currency Unit, the Expected Amount, the Expected Due Date, and the Amount Allocated.","Remove Payment","The remove payment use case  is diagramed in . This is preferably an administrator use case. According to this use case, the System Administrator removes payments and related GL Entries and license and detail allocations from the Licensing Database . This use case is further described below.","Step 1. The System Administrator begins the transaction.","Step 2. The Remove payment module  displays a list of all the payments in the Licensing Database , displaying the Payment ID, the Payor Name, the Receipt Date, and the Amount","Step 3. The System Administrator selects one or more payments and removes them (that is, issues command(s) to remove them).","Step 4. The Remove payment module  deletes the information from the Licensing database  and moves it to the Recycle Bin (implementation may differ regarding deferring the actual SQL deletes, and there is no notification of commit to the System Administrator).","This use case has a number of extensions:\n\n","Query Payment","The query payment use case  is diagramed in . According to this use case, the Auditor queries payments based on payer, on licensees or licensors, on links to royalty statements or expected revenue, on General Ledger accounts, or on receipt date. The Query payment module  displays the payments, any links, and any GL entries. The operation of this use case is further described below.","Step 1. The Auditor starts the transaction.","Step 2. The Query payment module  displays the licenses to which the Auditor has read access, displaying the object identifier, the Agreement ID, the Name, and the Description.","Step 3. The Auditor selects a license for query of payments.","Step 4. The Query payment module  displays a query form that lets the Auditor enter selection conditions on the set of payments, including object identifier, Payor Name, payment Receipt Date, Amount, Withheld Amount, Late Payment Interest Amount, and\/or Invoice Number.","Step 5. The Auditor enters query criteria and starts the query.","Step 6. The Query payment module  displays the payments for the license in preferably reverse chronological order to which the Auditor has Read access, displaying the object identifier, object identifier, Payor Name, payment Receipt Date, Amount, Withheld Amount, Late Payment Interest Amount, and\/or Invoice Number.","Step 7. The Auditor selects a payment.","Step 8. The Query payment module  displays a list of General Ledger entries, if any, showing the Entry Type, GL Account Number, Amount, Currency Unit Symbol, and Entry Date. The Query payment module  preferably orders the entries by GL Account Number.","Step 9. The Query payment module  displays a list of Payment Detail Allocations, showing the Royalty Statement Start Date Time and Amount Allocated. The Query payment module  preferably orders the allocations by License Name, Start Date Time, and Line Number.","Step 10. The Query payment module  displays a list of License Payment Allocations, showing the License Name, Payment Number, Expected License Revenue Description and Due Date, and Amount Allocated. The Query payment module  preferably orders the allocations by License OID, Term Number, and Payment Number.","Step 11. The Auditor ends the transaction.","At any time, if the Data Entry Clerk presses F1 or the equivalent, the application extends the use case with the Display Help use case.","Maintain GL Accounts","The maintain GL accounts use case  is diagramed in . According to this use case, the License Administrator creates, updates, or removes accounts from the Licensing Database . The operation of this use case is further described below.","Step 1. The License Administrator starts the transaction.","Step 2. The Maintain GL accounts module  displays the list of current GL Accounts, displaying the Account Number and the Description.","Step 3. The License Administrator modifies the set of GL Accounts, performing any of the following actions on the set of accounts:\n\n","Step 4. The License Administrator ends the transaction.","Step 5. The Maintain GL accounts module  commits the changes in the Licensing Database . The Maintain GL accounts module  confirms the commit to the License Administrator.","If a GL Account relates to any General Ledger Entries, on modifying the account number, the Maintain GL accounts module  prompts the License Administrator whether to change the account number for the Entries or to cancel the transaction.","Link Payment to Entity","The link payment to entity use case  is diagramed in . This use case extends the Modify Payment use case to link or unlink the portion of a payment linked to a particular license to a specific set of named entities in the Licensing Database . The License Administrator allocates some portion of the portion of a payment to a specific named entity.","It will be illustrate to consider the following scenario. A licensor licenses packages of assets to licensees with a license agreement. The licensees use the assets to produce products that generate revenue. Depending on the license agreement compensation terms, the licensee pays various kinds of payments to the licensor: fees or royalties. These payments constitute a revenue stream to the licensor as a series of payments from the licensee. A single payment may encompass more than one license, so the link between payment and license has a percent allocation that allocates a specific percentage of the payment to a particular license.","The licensor is usually an organization. Often, the licensor is not the business unit or person that ultimately \u201cgets\u201d or recognizes the revenue from a license for accounting purposes. That entity may be an organizational child of the licensor, but not necessarily, and there may be more than one entity that gets revenue from a license. A licensor therefore must have a way to allocate payment revenue from a particular license (a portion of a payment) to one or more named entities (people or organizations).","The operation of this use case is further described below.","Step 1. The link payment to entity module  passes in the object identifier for a license agreement and a payment (a License Payment link).","Step 2. The System displays the current set of links to entities from this license-payment link, displaying the name, description, and entity type for each linked entity.","Step 3. The License Administrator uses the Query Entities use case to display a list of entities. The License Administrator selects a single named entity from the result of the query and links it to the license-payment link. The Query Entity use case returns the object identifier for the entity to this use case.","Step 4. The link payment to entity module  displays a form that lets the license administrator allocate a percentage of the license-payment amount to the entity. It displays a default value of 100% if there are no license payment allocations for this license-payment link or the difference between the sum of existing license payment allocations for this license-payment link and 100%.","Step 5. The link payment to entity module  creates a link between the license-payment and the named entity, inserting a row in the License Payment Allocation table and displaying the new link in the displayed list of links.","Step 6. The License Administrator repeats steps 3-6 or ends the use case and returns to the extending use case.","If the License Administrator wants to remove a given link, he or she selects it in the displayed list of links and tells the System to delete the link. The System then removes the link from the display and schedules the link for deletion from the database (the extending use case is running the transaction). The License Administrator can remove or add any number of links in this use case.","Display Payments","The display payments use case  is diagramed in . This use case displays a table of license agreements with the basic data for each agreement. The Actor may select one or more agreements and conduct further operations such as Modify License Agreement. The operation of this use case is further described below:","Step 1. The Actor starts the transaction.","Step 2. The display payments module  displays a table of all the License Agreements to which the Actor has read access using the Display License Agreements use case.","Step 3. The Actor selects a single license agreement from that table.","Step 4. The display payments module  displays a table of all the Payments from the Licensing Database  to which the Actor has read access. Each row of the table corresponds to a single Payment. The columns include the Payor Name, the Currency Unit Symbol, the Payment Amount, the Late Payment Interest Amount, the Receipt Date, the Invoice Number, and the Payment-to-License Allocation Percent.","Step 5. The Actor ends the transaction.","This use case has a number of extensions:\n\n","Time Period Use Cases","The invention supports time period related structures. For example, Royalties and Fees often have a recurring payment. For example, a royalty may be due at the end of every quarter, on every June 15, or something similar. Most license royalties and fees call for monthly, quarterly, or annual payments.","Generally, recurring periods may terminate in one of two ways. A count-limited period has a certain number of periodic payments. For example, you could have a yearly fee due on June 15th for five payments. A date-limited period goes to a certain end date: a royalty paid quarterly on the 15th of the second month of the quarter ending on Feb. 15, 2015.","The beginning interval from the start date to the first recurring date may differ significantly in size from the other dates, as may the period from the last recurring date to an end date for a date-terminated period. For example, you may owe an annual fee every June 15th, with the sequence starting on June 1. The first interval will be 15 days, while the second and onwards will be one year.","In this section, time period use cases are described.","Enter Recurring Time Period","The enter recurring time period use case  is diagramed in . This use case is used by other use cases that must enter a recurring period of some kind into the Licensing Database . The use case permits the actor to enter the repetition structure for the recurring period. The operation of this use case is further described below.","Step 1. The enter recurring time period module  displays a data entry form containing the Time Unit (default Year), the Repetition (default 1), and the Recurring Period Type (default Count Limited).","Step 2. The Actor chooses a Time Unit, a Repetition, and\/or a Recurring Period Type.","Step 3. The enter recurring time period module  returns the appropriate object back to the using use case. The enter recurring time period module  sets the Time Period's Time Period Type field to \u201cR\u201d to indicate a recurring period object.","This use case has a number of extensions.\n\n","Modify Recurring Time Period","The modify recurring time period use case  is diagramed in . This use case is used by other use cases that must modify a recurring period of some kind in the Licensing Database . The use case permits the actor to modify the existing repetition structure for the recurring period or to change the type of period completely between the two concrete types (date-limited and count-limited). The operation of this use case is further described below.","Step 1. The actor passes in the object identifier for a time period to modify (:TimePeriod_ID).","Step 2. The modify recurring time period module  displays a data entry form containing the Time Unit (default Year), the Repetition (default 1), and the Recurring Period Type (default Count Limited), all displaying the current values for the time period the actor passes in (:TimePeriod_ID) queried from the Licensing database .","Step 3. The Actor changes the Time Unit, a Repetition, and\/or the Recurring Period Type.","Step 4. The modify recurring time period module  returns the appropriate object back to the using use case.","This use case has a number of extensions.\n\n","If the Recurring Period Type is Date Limited, the modify recurring time period module  adds the Date_Limited_Recurring_Period table to the following SQL queries as the <concrete subclass> and displays the End Date field. This controls the number of recurring dates within the whole period by ending the period at a certain date. If the actor changes the Recurring Period Type to Count Limited, the modify recurring time period module  changes to display the Number of Recurrences field and deletes the date-limited row when the transaction completes, replacing it with a new Count_Limited_Recurring_Period row.\n\n","Reports Use Cases","Reports are a critical part of the Licensing module . It is through reports that the license administrator and auditor (or any other user) obtain a great amount of useful information from system.","All available reports are listed in a reports pane  of a reports view  ().","Preferably, a report engine is used to generate the reports. When the user selects a report, the licensing system  generates one or more commands that collectively encapsulates the user-selected report type and any user-provided parameters. The details of these commands will be apparent to persons skilled in the relevant art(s). These commands are in the language of the report engine. The report engine generates the report pursuant to the commands. In doing so, the report engine accesses data (as indicated in the commands) in the databases discussed herein. In an embodiment, a commercial reporting module is used as the report engine, such as the commercially available Crystal Reports product.","Generate Report","The generate report use case  is diagramed in . The License Manager or Auditor (the \u201cActor\u201d) requests a particular report from a list the Generate report module  displays. The Generate report module  runs and displays or prints the selected report. Preferably, to run a report on an individual object, the Print Object use case or related print use case is used. The operation of this use case is further described below.","Step 1. The Actor begins the transaction to run a report.","Step 2. The Generate report module  constructs a list of available reports, displaying the name and description for the report in the reports view  ().","Step 3. The Actor selects a report and requests that it be run, supplying appropriate parameters through a parameter form as requested and required, including the report destination (print or screen or file), ending the transaction.","Step 4. The Generate report module  runs the report and sends it to the indicated destination.","The following are examples of reports: These are presented for illustrative purposes, and the invention is not limited to these examples. The invention is directed to include any reports of interest that can be generated from the information contained in the databases described herein. Implementation of these and other reports will be apparent to persons skilled in the relevant art(s). It is noted that license related reports can be in a plurality of forms, such as those shown in the figures, and in forms including hyperbolic trees (described above).\n\n","The Draft License is a report that is in the form of a license agreement document, that is generated by the system based on information in the databases. This draft document can be modified as necessary to produce the actual license agreement document.","Security Use Cases","In an embodiment, Licensing system security includes the security features described above. In other embodiments, Licensing system security includes any combination of the above with one or more other features, such as the following administrative use cases, the ability to assign a security classification in the various document and payment entry and modification use cases, and the ability to change privileges on asset groups.","Administer Entities (Users)","The administer users use case  is diagramed in . According to this use case, the system Administrator creates, modifies, and\/or removes users from the core database .","Step 1. The System Administrator starts the transaction.","Step 2. The Administer entities module  displays a list of users ordered by name, displaying the User Name, User Full Name, and Password (the password field appears but the actual password does not); there is also a Confirm Password for validating password entry.","Step 3. The System Administer takes one of the following actions:\n\n","Step 4. The System Administrator ends the transaction.","Step 5. The Administer entities module  commits the changes in the core database . The Administer entities module  confirms the commit to the System Administrator.","This use case has a number of extensions:\n\n","Administer Security Classes","The administer security classes use case  is diagramed in . According to this use case, the system Administrator sees a list of all security classes. The system Administrator can add a new class to the list, can modify the name and access control list of a class, or can remove a class. This use case is further described below.","Step 1. The System Administrator starts the transaction.","Step 2. The Administer security classes module  displays a list of Security Classes, displaying the Security Class ID and Name, and a list of the Entities, displaying the Entity ID and User Name.","Step 3. The System Administer takes one of the following actions:\n\n","Step 4. The System Administrator ends the transaction.","Step 5. The Administer security classes module  commits the changes in the Licensing Database . The Administer security classes module  confirms the commit to the System Administrator.","At any time, if the System Administrator presses F1 or the equivalent, the application extends the use case with the Display Help use case.","Grant Permissions","The grant permissions use case  is diagramed in . According to this use case, the System Administrator selects a secure object (an asset package or classifier), selects an entity (user or user group), and grants read, write, and\/or delete permission to the entity for the object. The grant permissions module  makes the permissions permanent through the IPAM Security Subsystem . This use case is further described below.","Step 1. The System Administrator starts the transaction.","Step 2. The Grant permissions module  displays a list of the secure objects to which the System Administrator has access based on their current authentication user name. It gets this from the IPAM Security Subsystem . The Grant permissions module  displays the objects sorted into two groups, asset packages and classifiers, distinguishing them by type (an icon, separate panes, or whatever). The asset packages display the Package OID and the Name. The classifiers display the Security Class OID and the Name.","Step 3. The System Administrator selects a secure object.","Step 4. The Grant permissions module  displays a control that lists available entities ordered by entity type and name, which it gets through the IPAM Security Subsystem .","Step 5. The System Administrator selects one or more entities.","Step 6. The Grant permissions module  displays the current permission settings on the secure objects (Read, Write, Delete), distinguishing settings that are the same for all selected secure objects and entities from those that are different (for example, a greyed check mark).","Step 7. The System Administrator sets the permission flags (Read, Write, Delete) to new values as required, then ends the transaction.","Step 8. The Grant permissions module  passes the changes to the IPAM Security Subsystem , which updates the security tables in the Core Database .","Administer Roles","The administer roles use case  is diagramed in . According to this use case, the System Administrator creates, modifies, and\/or removes roles from the Licensing database . The operation of this use case is further described below.","Step 1. The System Administrator starts the transaction.","Step 2. The Administer roles module  displays a list of Roles, displaying the Role ID, Name, and Description.","Step 3. The System Administer takes one of the following actions:\n\n","Step 4. The System Administrator ends the transaction.","Step 5. The Administer roles module  commits the changes in the Licensing database . The Administer roles module  confirms the commit to the System Administrator.","This use case has a number of extensions:\n\n","Currency Use Cases","The various monetary amounts in Licensing module  may be in any currency. This can cause problems when payments, royalty statements, and compensation terms list the amounts in different currencies. The Convert Currency use case provides a currency conversion mechanism for the generate report module . This is visible to the user when the user takes an action that needs to operate on amounts in different currencies.","Currency conversion depends on a database of conversion ratios. These ratios vary over time. Depending on the customer's needs, the customer could want to have a different ratio every day, every month, or every year. Or, they could just want a single conversion rate. The Maintain Currency Conversions use case corresponds to a menu entry that lets the License Administrator enter open-ended time intervals and conversion ratios that hold during those intervals.","Convert Currency","The convert currency use case  is diagramed in . This use case is used by several other use cases to convert monetary amounts. The User passes the monetary amount, the currency, and the date to the use case. The Convert currency module  converts the currency using the currency conversion intervals from the Licensing database  and returns the dollar amount. The operation of this use case is further described below.","Step 1. The using use case passes in the monetary amount, the currency object identifier, and the date of the transaction.","Step 2. The Convert currency module  looks up the currency conversion rate in the licensing database . The conversion rate depends on the date of the transaction, because currency rates fluctuate with time.","Step 3. The Convert currency module  returns the converted amount in dollars.","This use case has a number of extensions:\n\n","Maintain Currency Conversions","The maintain currency conversions use case  is diagramed in . According to this use case, the License Administrator performs various currency maintenance functions:\n\n","The operation of this use case is further described below.","Step 1. The License Administrator begins the transaction.","Step 2. The Maintain currency use case  displays a list of currencies, displaying the Unit Name, Country, and Unit Symbol for the currency:","Step 3. The License Administrator selects a currency or adds a new currency. The License Administrator optionally changes the Unit Name, Country, or Unit Symbol or removes the currency.","Step 4. If the currency is new, the Maintain currency use case  creates a new currency object identifier. The Maintain currency use case  displays the time interval layout of the currency, displaying the Start Date, the Dollar Conversion Rate, and the Description, if any:","Step 5. The License Administrator selects an interval, if there are any.","Step 6. The License Administrator removes the selected interval or changes the Start Date, Dollar Conversion Rate, or Description fields.","Step 7. The License Administrator repeats steps 3-6 or commits the transaction.","Step 8. The Maintain currency use case  inserts any new currencies, updates any changed currencies, and deletes any removed currencies (including any currency intervals). The Maintain currency use case  inserts any new intervals, updates any changed intervals, and deletes any removed intervals. The Maintain currency use case  confirms the commit to the License Administrator.","This use case has an extension. Specifically, if the License Administrator wants to add a new interval to the existing set, the Maintain currency use case  displays the new interval at the bottom of the list of current intervals. The License Administrator enters the Start Date, the Description, and the Dollar Conversion Rate. When the License Administrator selects another interval, the Maintain currency use case  sorts the list and puts the new interval in its proper place in the list ordered by date.","Top Level Operational Examples of the Licensing System","An example thread of operation through the licensing system  shall now be described with reference to a flowchart  in . In should be understood that the present invention, including the licensing system , is very powerful, very flexible, very adaptable, and very user-responsive. According to the invention, users can employ and\/or adapt the functions, modules, components, objects, etc., describe herein to pursue their own strategies, goals, needs, requirements, desires, etc. Users are not limited to the particular examples described herein, such as the example in . Accordingly, it should be understood that the example of  is provided for purposes of illustration, and is not limiting.","In the following, the steps are said to be performed by a \u201cuser.\u201d Generally, this user can be any person desiring to use the licensing system , including any of the actors described herein. Also, different users can perform different steps.","In step , the user defines entities. These entities will later be assigned to roles, such as licensee and licensor. See, inter alia, the Administer Entity use case.","In step , the user creates IP (intellectual property) assets. This involves entering patent assets if the licensing system  is not integrated with the IPAM database . If the licensing system  is integrated with the IPAM database , then there is no need to enter patent assets as such patent assets are accessible from the IPAM database  (although in some embodiments, the user is allowed to enter patent assets even when the licensing system  is integrated with the IPAM database , since, for example, the IPAM database  may not include all U.S. and\/or foreign patents, reissues, reexaminations, etc.). This step also includes entering trademark assets, entering trade secret assets, entering copyright assets, entering know how assets, etc. See, inter alia, the Enter Patent, Enter Trademark, Enter Copyright, Enter Trade Secret, and Enter Know How use cases.","In step , the user creates asset packages. Each asset package includes IP assets to license. There are three types of asset packages: standard, group, and descriptive. When entering a standard asset package, the user manually selects assets for inclusion into the asset package (this can be done via drag and drop operations, for example). When entering a group asset package, the user selects an IPAM group. The assets in the IPAM group become the contents of the asset package. When entering a descriptive asset package, the user provides a description of the assets being licensed, such as \u201cAll patents and patent applications currently existing as of Jun. 18, 1997.\u201d See, inter alia, the Create IP Asset Package use case.","In step , optionally, the user provides a revenue allocation percentage for each asset in an asset package. An asset's revenue allocation percentage within an asset package indicates the degree to which that asset contributed to license revenue attributed to the asset package. For example, if an asset within an asset package has an allocation percentage of 65%, and a license revenue of $100 is attributed to the asset package, then that asset is considered to have been responsible for generating $65 of the $100 license revenue. See, inter alia, the Create IP Asset Package use case.","In step , the user creates a license agreement. See, inter alia, the Enter License Agreement use case. In doing so, the user specifies the parties to the agreement, such as the licensee(s) and the licensor(s). These parties are entities who were defined in step . See, inter alia, the Link to Party use case.","The license agreement is an instrument that operates to license IP assets from the licensor(s) to the licensee(s). According to an embodiment of the invention, the IP assets that are being licensed via the license agreement are specified via asset packages. Specifically, in step , the user identifies one or more asset packages that contain the IP assets that are desired to be licensed via the license agreement. These identified asset packages are linked to the license agreement. See, inter alia, the Link to Asset Package use case.","A license agreement includes a number of terms agreed upon by the parties, such as whether the license is limited to particular territories, whether the license is exclusive or not exclusive, whether the license includes grant back provisions, etc. Importantly, a license also includes compensation terms, which specify the compensation that the licensee pays to the licensor for the benefit of receiving the license to the IP assets contained in the linked asset packages. Accordingly, also in step , the user enters compensation terms for the license. See, inter alia, the Enter Compensation Term use case.","In step , optionally, the user determines the expected revenue of the license agreement. This is preferably done on a per compensation term basis. Specifically, for each compensation term, a schedule of expected future revenue payment(s) is calculated, based on the type and characteristics of the term. For example, if Term is a lump sum payment of $100 to be paid on Jan. 1, 2000, then the expected revenue of Term  is calculated to be $100 to be received by the licensor on Jan. 1, 2000. If Term is an ongoing royalty based on per unit sales, where the royalty rate is $1 per 100 units and the estimated unit sales is 1000 per period (specified via the Enter Compensation Term use case), then the expected revenue of Term is calculated to be $10 per period. These expected future revenue payments are displayed in the expected revenue tab  of the payment dialog  (FIG. ). See, inter alia, the Enter Compensation Term and Create Expected Revenue use cases.","In step , the user receives a royalty statement related to the license from the licensee. Licensees are typically required to send such royalty statements to the licensor, such as on a quarterly basis. The user enters the royalty statement into the system. This includes entering the period to which the royalty statement applies. This also includes entering the details of the royalty statement, where each detail corresponds to a product, the number of units of the product sold during the period, the revenue generated by the sales, and the royalty due. This information is obtained from the royalty statement. See, inter alia, the Enter Royalty Statement use case.","In step , the user receives a license revenue payment related to the license. The user enters the payment into the system. This includes entering the amount of the payment. Optionally, this also includes allocating the payment to terms of the license. See . For example, assume that a license has terms Term and Term, and that in step  it was calculated that on a per period basis the expected revenue of Term is $100, and the expected revenue of Term is $200. Assume that the payment is for $275. In step , the user may elect to allocate $100 of the $275 payment to Term, and the remaining $175 of the $275 payment to Term. In this example, the expected revenue of Term is fully satisfied by the payment, but the expected revenue of Term is short by $25. This is an example of how the invention can aid the user in tracking license payments.","Optionally, step  also includes allocating the payment to details of royalty statements received by the licensor from the licensee. See . For example, suppose that a royalty statement having details Detail and Detail are associated with the license agreement Detail has an expected royalty of $125, and Detail has an expected royalty of $250. Assume that the payment is for $275. In step , the user can elect to allocate $125 of the $275 payment to Detail, and the remaining $150 of the $275 payment to Detail. In this example, the expected royalty of Detail is fully satisfied by the payment, but the expected royalty of Detail is short by $100. This is another example of how the invention can aid the user in tracking license payments.","With regard to the operation of step , see, inter alia, the Enter Payment, Modify Payment, Link to Expected Revenue, and Link to Detail use cases.","In step , the user runs reports based on his needs, requirements, interests, etc. Examples of reports supported by the invention include, but are not limited to: compare payments to royalty statement details; compare payments to expected revenue; determine the revenues (payments) attributable to each asset in an asset package; and any other report discussed herein. It is noted that the invention is not limited to the reports discussed herein. Any report, particularly any financial related report, relating to the subject matter discussed herein and\/or derivable from the data discussed herein is contemplated by the invention. Implementation of such reports will be apparent to persons skilled in the relevant art(s).","While various embodiments of the present invention have been described above, it should be understood that they have been presented by way of example only, and not limitation. Thus, the breadth and scope of the present invention should not be limited by any of the above-described exemplary embodiments, but should be defined only in accordance with the following claims and their equivalents."],"BRFSUM":[{},{}],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"BRIEF DESCRIPTION OF THE FIGURES","p":["The present invention will be described with reference to the accompanying drawings, wherein:",{"@attributes":{"id":"p-0037","num":"0036"},"figref":"FIG. 1"},{"@attributes":{"id":"p-0038","num":"0037"},"figref":"FIG. 2"},{"@attributes":{"id":"p-0039","num":"0038"},"figref":"FIG. 3"},{"@attributes":{"id":"p-0040","num":"0039"},"figref":"FIG. 4"},{"@attributes":{"id":"p-0041","num":"0040"},"figref":["FIG. 5","FIG. 4"]},{"@attributes":{"id":"p-0042","num":"0041"},"figref":"FIG. 6"},{"@attributes":{"id":"p-0043","num":"0042"},"figref":"FIG. 7"},{"@attributes":{"id":"p-0044","num":"0043"},"figref":"FIG. 8"},{"@attributes":{"id":"p-0045","num":"0044"},"figref":"FIG. 9"},{"@attributes":{"id":"p-0046","num":"0045"},"figref":["FIG. 10","FIG. 4"]},{"@attributes":{"id":"p-0047","num":"0046"},"figref":"FIG. 11"},{"@attributes":{"id":"p-0048","num":"0047"},"figref":["FIG. 12A","FIGS. 12B-12M"]},{"@attributes":{"id":"p-0049","num":"0048"},"figref":["FIGS. 12B-12M","FIG. 6"]},{"@attributes":{"id":"p-0050","num":"0049"},"figref":"FIGS. 13-17"},{"@attributes":{"id":"p-0051","num":"0050"},"figref":"FIG. 18"},{"@attributes":{"id":"p-0052","num":"0051"},"figref":"FIGS. 19-21"},{"@attributes":{"id":"p-0053","num":"0052"},"figref":"FIGS. 22 and 23A"},{"@attributes":{"id":"p-0054","num":"0053"},"figref":["FIG. 23B","FIG. 23A"]},{"@attributes":{"id":"p-0055","num":"0054"},"figref":"FIGS. 24-26"},{"@attributes":{"id":"p-0056","num":"0055"},"figref":"FIGS. 27-31"},{"@attributes":{"id":"p-0057","num":"0056"},"figref":"FIG. 32"},{"@attributes":{"id":"p-0058","num":"0057"},"figref":"FIGS. 33-36"},{"@attributes":{"id":"p-0059","num":"0058"},"figref":"FIG. 37"},{"@attributes":{"id":"p-0060","num":"0059"},"figref":"FIG. 38"},{"@attributes":{"id":"p-0061","num":"0060"},"figref":"FIG. 39"},{"@attributes":{"id":"p-0062","num":"0061"},"figref":"FIGS. 40-43","b":["44","44"]},{"@attributes":{"id":"p-0063","num":"0062"},"figref":"FIG. 45"},{"@attributes":{"id":"p-0064","num":"0063"},"figref":"FIG. 46"},{"@attributes":{"id":"p-0065","num":"0064"},"figref":"FIG. 47"},{"@attributes":{"id":"p-0066","num":"0065"},"figref":"FIG. 48"},{"@attributes":{"id":"p-0067","num":"0066"},"figref":"FIG. 49"},{"@attributes":{"id":"p-0068","num":"0067"},"figref":"FIG. 50"},{"@attributes":{"id":"p-0069","num":"0068"},"figref":"FIG. 51"},{"@attributes":{"id":"p-0070","num":"0069"},"figref":"FIG. 52"},{"@attributes":{"id":"p-0071","num":"0070"},"figref":"FIGS. 53-57"},{"@attributes":{"id":"p-0072","num":"0071"},"figref":"FIG. 58"},{"@attributes":{"id":"p-0073","num":"0072"},"figref":"FIGS. 59-60"},{"@attributes":{"id":"p-0074","num":"0073"},"figref":"FIGS. 61-65"},{"@attributes":{"id":"p-0075","num":"0074"},"figref":"FIGS. 66-70"},{"@attributes":{"id":"p-0076","num":"0075"},"figref":"FIGS. 71-73"},{"@attributes":{"id":"p-0077","num":"0076"},"figref":"FIGS. 74-77"},{"@attributes":{"id":"p-0078","num":"0077"},"figref":"FIGS. 78-80"},{"@attributes":{"id":"p-0079","num":"0078"},"figref":"FIG. 81"},{"@attributes":{"id":"p-0080","num":"0079"},"figref":"FIG. 82"},{"@attributes":{"id":"p-0081","num":"0080"},"figref":"FIG. 83"},{"@attributes":{"id":"p-0082","num":"0081"},"figref":"FIG. 84"},{"@attributes":{"id":"p-0083","num":"0082"},"figref":"FIG. 85"},{"@attributes":{"id":"p-0084","num":"0083"},"figref":"FIG. 86"},{"@attributes":{"id":"p-0085","num":"0084"},"figref":"FIG. 87"},{"@attributes":{"id":"p-0086","num":"0085"},"figref":"FIGS. 88A and 88B"},{"@attributes":{"id":"p-0087","num":"0086"},"figref":"FIG. 89"},{"@attributes":{"id":"p-0088","num":"0087"},"figref":"FIG. 90"},{"@attributes":{"id":"p-0089","num":"0088"},"figref":"FIG. 91"},{"@attributes":{"id":"p-0090","num":"0089"},"figref":"FIG. 92"},{"@attributes":{"id":"p-0091","num":"0090"},"figref":"FIG. 93"},{"@attributes":{"id":"p-0092","num":"0091"},"figref":"FIG. 94"},{"@attributes":{"id":"p-0093","num":"0092"},"figref":"FIG. 95"},{"@attributes":{"id":"p-0094","num":"0093"},"figref":"FIG. 96"},{"@attributes":{"id":"p-0095","num":"0094"},"figref":"FIG. 97"},{"@attributes":{"id":"p-0096","num":"0095"},"figref":"FIG. 98"},{"@attributes":{"id":"p-0097","num":"0096"},"figref":"FIG. 99"},{"@attributes":{"id":"p-0098","num":"0097"},"figref":"FIG. 100"},{"@attributes":{"id":"p-0099","num":"0098"},"figref":"FIG. 101"},{"@attributes":{"id":"p-0100","num":"0099"},"figref":"FIG. 102"},{"@attributes":{"id":"p-0101","num":"0100"},"figref":"FIG. 103"},{"@attributes":{"id":"p-0102","num":"0101"},"figref":"FIG. 104"},{"@attributes":{"id":"p-0103","num":"0102"},"figref":"FIG. 105"},{"@attributes":{"id":"p-0104","num":"0103"},"figref":"FIG. 106"},{"@attributes":{"id":"p-0105","num":"0104"},"figref":"FIG. 107"},{"@attributes":{"id":"p-0106","num":"0105"},"figref":"FIG. 108"},{"@attributes":{"id":"p-0107","num":"0106"},"figref":"FIG. 109"},{"@attributes":{"id":"p-0108","num":"0107"},"figref":"FIG. 110"},{"@attributes":{"id":"p-0109","num":"0108"},"figref":"FIG. 111"},{"@attributes":{"id":"p-0110","num":"0109"},"figref":"FIG. 112"},{"@attributes":{"id":"p-0111","num":"0110"},"figref":"FIG. 113"},{"@attributes":{"id":"p-0112","num":"0111"},"figref":"FIG. 114"},{"@attributes":{"id":"p-0113","num":"0112"},"figref":"FIG. 115"},{"@attributes":{"id":"p-0114","num":"0113"},"figref":"FIG. 116"},{"@attributes":{"id":"p-0115","num":"0114"},"figref":"FIGS. 117 and 118"},{"@attributes":{"id":"p-0116","num":"0115"},"figref":"FIGS. 119 and 120"},{"@attributes":{"id":"p-0117","num":"0116"},"figref":"FIGS. 121 and 122"},{"@attributes":{"id":"p-0118","num":"0117"},"figref":"FIGS. 123 and 124"},{"@attributes":{"id":"p-0119","num":"0118"},"figref":"FIG. 125"},{"@attributes":{"id":"p-0120","num":"0119"},"figref":"FIGS. 126 and 127"},{"@attributes":{"id":"p-0121","num":"0120"},"figref":"FIGS. 128 and 129"},{"@attributes":{"id":"p-0122","num":"0121"},"figref":"FIG. 130"},{"@attributes":{"id":"p-0123","num":"0122"},"figref":"FIG. 131"},{"@attributes":{"id":"p-0124","num":"0123"},"figref":"FIG. 132"},{"@attributes":{"id":"p-0125","num":"0124"},"figref":"FIG. 133"},{"@attributes":{"id":"p-0126","num":"0125"},"figref":"FIG. 134"},{"@attributes":{"id":"p-0127","num":"0126"},"figref":"FIGS. 135-137"},{"@attributes":{"id":"p-0128","num":"0127"},"figref":"FIG. 138"},{"@attributes":{"id":"p-0129","num":"0128"},"figref":"FIG. 139"},{"@attributes":{"id":"p-0130","num":"0129"},"figref":"FIG. 140"},{"@attributes":{"id":"p-0131","num":"0130"},"figref":"FIGS. 141-143"},{"@attributes":{"id":"p-0132","num":"0131"},"figref":"FIG. 144"},{"@attributes":{"id":"p-0133","num":"0132"},"figref":"FIGS. 145A","b":["145","145"]},{"@attributes":{"id":"p-0134","num":"0133"},"figref":"FIG. 146"},{"@attributes":{"id":"p-0135","num":"0134"},"figref":"FIG. 147"},{"@attributes":{"id":"p-0136","num":"0135"},"figref":"FIG. 148"},{"@attributes":{"id":"p-0137","num":"0136"},"figref":"FIG. 149"},{"@attributes":{"id":"p-0138","num":"0137"},"figref":"FIG. 150"},{"@attributes":{"id":"p-0139","num":"0138"},"figref":"FIG. 151"},{"@attributes":{"id":"p-0140","num":"0139"},"figref":"FIG. 152"},{"@attributes":{"id":"p-0141","num":"0140"},"figref":"FIG. 153"},{"@attributes":{"id":"p-0142","num":"0141"},"figref":"FIG. 154"},{"@attributes":{"id":"p-0143","num":"0142"},"figref":"FIG. 155"},{"@attributes":{"id":"p-0144","num":"0143"},"figref":"FIG. 156"},{"@attributes":{"id":"p-0145","num":"0144"},"figref":"FIGS. 157-160"},{"@attributes":{"id":"p-0146","num":"0145"},"figref":"FIG. 161"},{"@attributes":{"id":"p-0147","num":"0146"},"figref":"FIG. 162"},{"@attributes":{"id":"p-0148","num":"0147"},"figref":"FIG. 163"},{"@attributes":{"id":"p-0149","num":"0148"},"figref":"FIG. 164"},{"@attributes":{"id":"p-0150","num":"0149"},"figref":["FIG. 165","FIG. 164"]},{"@attributes":{"id":"p-0151","num":"0150"},"figref":"FIGS. 166 and 167"},{"@attributes":{"id":"p-0152","num":"0151"},"figref":"FIGS. 168-170"},{"@attributes":{"id":"p-0153","num":"0152"},"figref":"FIG. 171"},{"@attributes":{"id":"p-0154","num":"0153"},"figref":["FIGS. 172 and 173","FIG. 171"]},{"@attributes":{"id":"p-0155","num":"0154"},"figref":"FIGS. 174 and 175"},{"@attributes":{"id":"p-0156","num":"0155"},"figref":"FIG. 176"},{"@attributes":{"id":"p-0157","num":"0156"},"figref":"FIGS. 177 and 178"},{"@attributes":{"id":"p-0158","num":"0157"},"figref":"FIG. 179"},{"@attributes":{"id":"p-0159","num":"0158"},"figref":"FIG. 180"},{"@attributes":{"id":"p-0160","num":"0159"},"figref":["FIG. 181","FIG. 180"]},{"@attributes":{"id":"p-0161","num":"0160"},"figref":"FIG. 182"},{"@attributes":{"id":"p-0162","num":"0161"},"figref":["FIG. 183","FIG. 181"]},{"@attributes":{"id":"p-0163","num":"0162"},"figref":"FIG. 184"},{"@attributes":{"id":"p-0164","num":"0163"},"figref":["FIG. 185","FIG. 184"]},{"@attributes":{"id":"p-0165","num":"0164"},"figref":"FIG. 186"},{"@attributes":{"id":"p-0166","num":"0165"},"figref":"FIG. 187A"},{"@attributes":{"id":"p-0167","num":"0166"},"figref":"FIG. 187B"},{"@attributes":{"id":"p-0168","num":"0167"},"figref":"FIG. 188"},{"@attributes":{"id":"p-0169","num":"0168"},"figref":"FIG. 189"},{"@attributes":{"id":"p-0170","num":"0169"},"figref":"FIG. 190"},{"@attributes":{"id":"p-0171","num":"0170"},"figref":"FIG. 191"},{"@attributes":{"id":"p-0172","num":"0171"},"figref":"FIG. 192"},{"@attributes":{"id":"p-0173","num":"0172"},"figref":"FIG. 193A"},{"@attributes":{"id":"p-0174","num":"0173"},"figref":"FIG. 193B"},{"@attributes":{"id":"p-0175","num":"0174"},"figref":"FIGS. 194","b":["196","197","199","205","207","212","217","221","222","224","225","234","236","239","249","256","258","262","263","267","270","276","283","285","294","300"]},{"@attributes":{"id":"p-0176","num":"0175"},"figref":"FIG. 195"},{"@attributes":{"id":"p-0177","num":"0176"},"figref":"FIG. 198"},{"@attributes":{"id":"p-0178","num":"0177"},"figref":"FIG. 206"},{"@attributes":{"id":"p-0179","num":"0178"},"figref":"FIG. 208"},{"@attributes":{"id":"p-0180","num":"0179"},"figref":"FIGS. 209-211"},{"@attributes":{"id":"p-0181","num":"0180"},"figref":"FIGS. 213-216"},{"@attributes":{"id":"p-0182","num":"0181"},"figref":"FIGS. 218-220"},{"@attributes":{"id":"p-0183","num":"0182"},"figref":"FIG. 223"},{"@attributes":{"id":"p-0184","num":"0183"},"figref":"FIGS. 226-233","b":"235"},{"@attributes":{"id":"p-0185","num":"0184"},"figref":"FIGS. 240A","b":["240","241","242"]},{"@attributes":{"id":"p-0186","num":"0185"},"figref":"FIG. 243"},{"@attributes":{"id":"p-0187","num":"0186"},"figref":"FIGS. 244-248","b":"257"},"FIGS. A and - illustrate example screen shots related to royalty statements according to an embodiment of the invention;",{"@attributes":{"id":"p-0189","num":"0188"},"figref":"FIGS. 271-275"},{"@attributes":{"id":"p-0190","num":"0189"},"figref":"FIG. 284"},{"@attributes":{"id":"p-0191","num":"0190"},"figref":"FIGS. 286A-286C","b":["287","287","288","288","289","290","290","291","291","292","293"]},{"@attributes":{"id":"p-0192","num":"0191"},"figref":"FIGS. 301A and 301B"},{"@attributes":{"id":"p-0193","num":"0192"},"figref":"FIGS. 302-326"},{"@attributes":{"id":"p-0194","num":"0193"},"figref":"FIGS. 327-339"}]},"DETDESC":[{},{}]}
