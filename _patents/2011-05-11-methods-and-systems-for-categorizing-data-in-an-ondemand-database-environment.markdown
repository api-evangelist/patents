---
title: Methods and systems for categorizing data in an on-demand database environment
abstract: Categorizing data in an on-demand database environment is provided. The categorized data is accessed to provide results based on statistical likelihood that records provide a desired result of a query. The categorization of the data includes organizing queries based on semantic terms, with categorization based on a multidimensional categorization of data in the database environment. The generating of results includes accessing relationship metadata both for individual records and for categories. Relationships along the same category, or among categories can provide records that may answer the query. The relationships and statistics are updated based on usage of the results data. Records and relationships identified as being used to solve the query, or being a desired solution to the query, can be weighted more heavily, thus increasing the likelihood of providing the most relevant data for subsequent queries.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09141690&OS=09141690&RS=09141690
owner: salesforce.com, inc.
number: 09141690
owner_city: San Francisco
owner_country: US
publication_date: 20110511
---

{"@attributes":{"id":"description"},"RELAPP":[{},{}],"heading":["RELATED CASES","FIELD","COPYRIGHT NOTICE\/PERMISSION","BACKGROUND","DETAILED DESCRIPTION"],"p":["This application claims the benefit of priority of U.S. Provisional Pat. App. No. 61\/334,684, filed May 14, 2010.","Embodiments described are related generally to database management, and embodiments described are more particularly related to categorizing and relating data in an on-demand database environment.","Portions of the disclosure of this patent document may contain material that is subject to copyright protection. The copyright owner has no objection to the reproduction by anyone of the patent document or the patent disclosure as it appears in the Patent and Trademark Office patent file or records, but otherwise reserves all copyright rights whatsoever. The copyright notice applies to all data as described below, and in the accompanying drawings hereto, as well as to any software described below: Copyright \u00a9 2011, Salesforce.com Inc., All Rights Reserved.","Database systems and other systems often store a wealth of information. However, knowing where to search for data, or what data to access to solve a particular problem can be challenging. On the one hand, many users have a presumption that a solution exists somewhere in the cloud, referring to a network or group of networks. On the other hand, the more information that is created and stored makes finding the right information increasingly difficult. Add in the additional problems that traditional search is composed \u201cbackwards\u201d, and that different people use different terminology, and searching for a solution may not provide the results desired.","Traditional searching for a solution is usually \u201cbackwards\u201d in that the search systems often require the user to select lists or groups of data for the solution. Such an approach misses the fact that a user usually does not know what s\/he is looking for and\/or the data is often organized in a way different from how the user thinks about the problem. The user would prefer to simply be able to ask a question semantically and have an answer given. This leads into the other problem that different terms and phrases are used to mean the same thing, and a solution to the problem may be missed because the terminology used is different from that of the search. Thus, a user is implicitly expected to use the \u201cright\u201d search terms to get the desired solution.","An additional challenge is provided in the move to more modern database system architectures. In many conventional database systems, users access their data resources in one logical database, from a user's own systems. When a unitary database is accessed, system-wide conventions can be used for all users. Such assumptions about conventions and database system architecture are not appropriate for many modern and developing systems. Search and access may be further complicated from the system operation side when such assumptions no longer prove true.","Descriptions of certain details and implementations follow, including a description of the figures, which may depict some or all of the embodiments described below, as well as discussing other potential embodiments or implementations of the inventive concepts presented herein. An overview is provided below, followed by amore detailed description with reference to the drawings.","As described herein, automatic categorizing data in an on-demand database environment is provided. The categorization of data is performed by the system to provide query results based on a statistical likelihood that the results provide a solution to the query. The statistical likelihood is informed by the categorization, and the monitoring of the usage of results in the system to solve problems. Thus, problems that are categorically similar, and\/or have similar relationships to other records in the system, are likely solved by records found to provide solutions in the past.","Thus, the system \u201clearns\u201d by monitoring the results and the usage of the results. Categorization of the query in a semantic way allows the query to be captured exactly as it is generated by a user. The categorization is based on a multidimensional categorization of data in the database environment. The generating of results includes accessing relationship metadata both for individual records and for categories. Relationships along the same category, or among categories, can provide records that may answer the query or provide a solution. The relationships and statistics are updated based on usage of the results data. Records and relationships identified as being used to solve the query, or being a desired solution to the query, can be weighted more heavily, thus increasing the likelihood of providing the most relevant data for subsequent queries.","As described herein, the identification and use of relationship data provides a categorization methodology that can determine interests in a different field. For example, a user making a query about books about Mozart may receive results related to books about Mozart, and also results for books about Classical music, and\/or also results for music by Mozart. Thus, multidimensional categorization with relationship data allows access to the same or different categories of data, and may provide better search results for a user. As the results are monitored for use and weighted based on \u201csuccess\u201d of the results, subsequent query results can be further improved. In one embodiment, it may be said that as described herein the potential query results are provided via application of hierarchical filtering. The filters may include rules related to the statistics of how data is used, and what relationship a record is expected to have (through metadata descriptions or definitions) to the query. Thus, many records can be identified as potential results, and then excluded through hierarchical filtering based on whether or not they are calculated to be potential results to the query.","Examples of multidimensional categorization may be found in U.S. Pat. No. 7,130,879 of Alexandre Dayon, entitled, \u201cSystem for Publishing, Organizing, Accessing and Distributing Information in a Computer Network\u201d, and U.S. patent application Ser. No. 12\/857,364 (Publication No. 2011\/0106808) of Alexandre Hersans et al., entitled, \u201cMultidimensional Content Organization and Delivery\u201d. Both references discuss the use of multiple categories and category dimensions.","With auto-categorization of data and matching queries to results as described herein, the great amount of data stored on systems can be used to provide better and better results to queries. The users do not need to know beforehand where to search for data, and can use an interface that is much more natural, rather than working backwards as previously done. The user is able to simply submit a request and be provided with results that should be close to what the user is looking for.","To the extent that the results are not what are sought by the user, in one embodiment, the system can automatically direct a query to a human agent. For example, the system may ask the user if a solution was found among the results. If not, the user may be automatically sent to a human agent to resolve the issue. In one embodiment, the actions by a human agent are also leveraged in the system learning. The system can identify relationships and records used by the agent to solve the problem, and add those solutions to the system. Thus, every time an agent assists with a solution, it makes the system better able to automatically solve subsequent problems or provide solutions for subsequent queries.","In one embodiment, the system monitors results usage through questions to the user (\u201cdid this provide the solution you were looking for?\u201d or other questions) and\/or through monitoring which records are accessed, for how long, and is there subsequent access to the records. Through the process of monitoring and\/or receiving feedback from the user, the system may be able to relate different terms that appear different, hut carry the same meaning, such as a user typing in \u201cBlackBerry Bold\u201d and another user typing in \u201cBB Bold\u201d. BLACKBERRY products are available from RESEARCH IN MOTION of Waterloo, Ontario, Canada. All trademarks used herein are the sole property of their respective owners, and are used herein solely for purposes of identification of product examples. Thus, whether a user types in one phrase or the other, the system can have the two phrases related, and provide similar results to each query.","In one embodiment, the system providing the query results is a multitenant database. The multitenant database provides a \u201ccloud architecture\u201d that allows a user to query for data in a modern database system. As referred to herein, a multitenant database stores data for multiple client organizations, which are each identified by a tenant ID. One or more users can be associated with each tenant ID. The one or more users of each client organization access data identified by the tenant ID associated with the respective client organization. The multitenant database is typically a database stored and hosted remote from the client organization. Typically, the multitenant database is hosted by an entity (e.g., company) separate from the client organization. A multitenant database system (MTS) as described herein can be said to provide on-demand database services. An MTS is typically a hosted system that provides as much database storage and service as required by each tenant.","MTS implementation, each tenant ID may have a set of data associations and relationships. Thus, a query on the MTS for one tenant ID may produce different results than the identical query on the MTS for a different tenant ID. In one embodiment, the architecture of each tenant ID develops separately with custom configuration for each tenant. For example, a UDD (user defined database may be implemented for each tenant to store relationships and categorization data.","Thus, there is provided an on-demand database environment such as a multitenant database system where the database environment stores relationship and categorization data. Received queries are categorized, and relationship data is accessed for the categorizations. The relationship data can include metadata for categorizations that indicate relationships to other categorizations, as well as metadata for records, which indicates relationships to other records, whether of the same or a different categorization. The system, such as through an application server of the database, computes a statistical likelihood that records are solutions to the query. In one embodiment, only records that have a threshold statistical likelihood are displayed as results, and others are excluded. Thus, records are provided as query results, as determined by computing a statistical likelihood as indicated by categorization data and relationship data.","The system updates the statistics based on user access to the results. In one embodiment, the access and use of the results are monitored by the system, which allows the system to weight the relationships and records that are accessed by the user.",{"@attributes":{"id":"p-0027","num":"0026"},"figref":"FIG. 1","b":["100","110","130","120"]},"Client  represents any type of client device that may access database system , for example, a desktop or laptop computer, a tablet, smartphone, server, or other computing device. Network  includes any type of network access that allows client  to access database system . Network  may be or include any one or more networks such as local or wide area networks, wireless or wired, encrypted (e.g., virtual private network (VPN)) or open, on any of a variety of know or proprietary protocols, or other network. Network  is understood to include hardware and software components to enable remote connection of one device to another.","Database system  represents an on-demand database environment. As an on-demand environment, database system  provides to client  the quantity of database resources needed, and when they are needed. As such, database system  appears as a scalable database resource to client . In one embodiment, database system  has at least one aspect of its configuration that is configurable and scalable for different tenants.","Client  includes query interface , which can represent software and hardware components that allow a user of client  to present a query to database system . For example, query interface  may include one or more input fields that may accept user-input queries. Traditional systems include lists from pull-down menus for a user to select a category. With auto-categorization, the system categorizes the data based on the input query, rather than requiring a user to guess through multiple layers of options to select something that may sound like a solution to the problem.","In one embodiment, categorization of queries is performed, at least in part, at a categorization engine of client . Thus, categorization  represents an implementation where one or more components of categorization exist at client . In an alternate implementation, most or all categorization components may exist at the server side, rather than at client . Examples of splitting the categorization components may include, for example, parsing the query, and sending the parsed query to database system . Categorization  also represents the fact that queries are categorized and results provided to the client based on the categorizations. In one embodiment, categorization  represents components through which the system prompts a user to suggest categories or categorization of the query.","Client  includes knowledge base interface . Interface  represents hardware and software that allows client  to communicate with database system , hut more specifically to access and utilize information from the knowledge base of the database. Interface  may also include monitoring features that allow system  to update performance based on use of the results provided to queries.","Client , through interface , sends a query to application server  of database system . Application server  represents control hardware and software components that interface with clients and provide data access and processing services to the clients. Application server  may be one of many application servers in database system . Application server  categorizes the query via use of categorization data .","Whether a categorization is selected or suggested by the user, or whether application server  provides all services to auto-categorize the query, application server  additionally enhances the determination of what records to provide as a results set based on relationship data. Categorization data  may include one or more tables of data that identifies relationships that are used by application server  to identify and compute a statistical likelihood that a certain record is a solution to the query.","Data storage  represents the data of the database system, and may be a multitenant database or other data store. It will be understood that fundamentally, data stored is simply data. A database is a framework of how that data is stored, structured, and interpreted when stored and accessed. Thus, a database may be considered, in one embodiment, as a set of rules and procedures for storing, accessing, and manipulating data.","Application server  provides results set  to client , which includes one or more records or objects that are determined to be potential answers or solutions to the query. In one embodiment, use monitor  monitors use of results set  by a user. For example, the system may determine what results were accessed, and whether they were used to solve the issue or problem of the query.","In one embodiment, if results set  does not include an element that is deemed by the user to resolve the query, the user may indicate through a button press or other selection that the results do not provide a solution. In such a case, system  may automatically forward the query for agent assistance . Agent assistance  specifically refers to assistance from a human user. Thus, if the categorization and use of relationship data does not provide a solution to the problem, interaction with a human user may provide a better chance to find a solution. If a solution is found, system  can automatically add the solution to the knowledge base of database system . The solution can produce additional information used to modify the relationship statistics of the system. Each use and solution provides additional information to make it more likely that subsequent queries will be responded to with better results.","In one embodiment, results set  only includes elements that reach a threshold level of statistical likelihood of being a solution. Thus, for example, if application server  determines that the statistical likelihood of a record being a potential solution is lower than a threshold, the result or item is excluded from results set . The specific threshold will be specific to each implementation, and will depend on a total size of the database, the number of initial results determined, the configuration of how many results the system is trying to provide. Other factors may also be considered in determining a threshold.","In one embodiment, the query itself entered by the user is stored in database system  as a new record. The new record could then to be provided with relationships to other queries, and be used as a result for subsequent queries.","While specific reference is made above to system , in general, as implemented herein, data categorization in a multidimensional system and relationships of data allow a system to provide improved query results.","There are several use cases where the system may perform learning necessary to provide improved query results. Those use cases may include where a user enters a query, the system categorizes the data related to the query, and the user approves the categorization. The approved categorization allows the system to know that the categorization is correct, which can help improve the successful providing of query results. Similarly, if a user enters a query and no solution is provided, when the user tries again, the information of the user trying again indicates what results are not the desired solution. Those results may be weighted more lightly for subsequent queries. If a user describes a problem, an agent can enter the query, and either the agent or the system categorizes it. The information provides an indication of what may be a solution to the problem. In each case, the data can be more or less heavily weighted depending on whether it is used or accessed, and whether it provides a solution to problem.","In one embodiment, the system includes a category selection API (application programming interface). The API allows the programmatic manipulation of data category selections on individual records. In one embodiment, only create( ) and delete( ) methods are enabled for the categories, but no update( ) or other change or modification related methods are available. Thus, relationships can be added or deleted, but are not changed. The API can enable a tool to synchronize data category associations across multiple systems, and may be available via Apex and web services.","In one embodiment, the API exposes data category associations that are stored in a category data table. Objects marked as categorizable in a UDD have counterpart associated entities with a specified suffix. Thus, categorizable data is identified in the system. In one embodiment, the associated entity (not the object itself) is then used to manipulate the data category selections via the API.","In one embodiment, an API call is used to retrieve a structure of a specific category group. The results are the categories available to the user requesting the information. A user will not be able to query, create, or delete categories in the Category Selection API that are not available in the describe call. Examples of information retrieved from such an API call are the ID, developer name, label of visible data category, or other information. In one embodiment, the category selection is a kind of a child object of its parent record (the entity in the associated entity). In one embodiment, access restrictions are placed upon the methods of the categories. Thus, proper profile permissions may be needed to perform a read or change on a category selection operation.",{"@attributes":{"id":"p-0045","num":"0044"},"figref":["FIG. 2","FIG. 1"],"b":["200","100","200","210","212","212","212"]},"In one embodiment, query  has a format  of a title, which is the problem as indicated by the user, and other potential information. The title refers to an embodiment where the query is stored as a record, and the query statement is the title of the record. The other information may include user information for the user that created the query, additional details about a product that is the subject of the query, or other information.","As an example, consider that the query is: \u201cI can't connect to the web with my BB Bold\u201d. In such a case, key expressions parsed out of the query may be the connection and the product. Thus, categorization of the query may include BlackBerry , and Connection Problem . It will be understood that multiple categorizations may be applicable to each query. Each categorization may include information about the category, such as records or relationships associated with the categorization.","In one embodiment, categorizing the query includes using categories according to a multidimensional categorization system. A multidimensional categorization system refers to a system where data can be related or referenced to other elements along multiple separate axes, or points of organization. Thus, instead of simply being a flat organization of data where all data elements exist on an equal level, the multidimensional categorization allows categories and subcategories, as well as allowing the connection of data elements to each other, while not being connected to other data elements. Thus, data can be accessed along multiple different lines of search or access, rather than through traditional use of common columns of data elements common to all records. In one embodiment, categorization may include receiving an indication first category in a first category dimension, where data along the first category dimension can then be retrieved. Other categories can exist within the first category dimension, and other category dimensions can also exist. Each category dimension allows for a possible access path to data records.","Client  includes knowledge base interface , components that allow the client device to access the knowledge information of the database system. The knowledge base refers generally to the collection of knowledge and understanding reflected in the data stored in database system . Client  access database system  through network , which may include local and\/or wide area (e.g., the Internet) networks.","System  is illustrated with query  categorized in accordance with categories  in database system . Application server  may process the categories (with or without input from client , other than query , in response to receiving query . The categories are the same as shown in client , with BlackBerry and Connection Problems shown on the list. In one embodiment, other categories (not shown) may be produced.","In one embodiment, application server  accesses UDD (user defined database)  to access metadata about related objects . Related objects  are objects that have related queries and\/or related solutions to a category of query . UDD  allows for a particular organization to set up its desired information table configuration. A UDD for each tenant ID of database system  may be included, which could make each categorization system unique for each tenant ID.","Application server  accesses platform intelligence  to identify and access records related to the query. In one embodiment, the records selected are initially all records related to any category and relationship. The records can then be excluded based on information of UDD . In one embodiment, application server  performs clustering , with different items  clustered together. There may be more than one cluster group. The cluster groups identify records that are related based on metadata identifying the items as related items. Items  may be related based on being synonyms, being used together, having a parent-child relationship, having a similar architecture, or any other type of relationship that may be identified. Each item identifies a product and\/or a feature of a product, a solution, a problem, or some other item that may be related to another.","In one embodiment, various products or items are related by a common item that appears as a solution to different queries. Thus, for example, if Query A is generated by a user and is resolved by Item 1, and Query B different than Query A is generated by a user and also resolved by Item 1, Query A and Query B may be related due to having a common item that resolved them. If a user is looking for an answer to something similar to Query A, call it Query A\u2032, the information of both Query A and Query B may be useful in resolving Query A\u2032.","The relationships may simply be used to determine what records to access for generating a query. However, in one embodiment, the data is clustered for cross-dimensional relatedness for responding to subsequent queries.","Data storage  represents the overall data store of database system , and may be divided as a multitenant database. Thus, UDD , and platform intelligence , as well as categories  will be understood as example instances for a particular tenant ID. A similar architectural \u201clook\u201d at system  would exist for each different tenant ID. Different tenant IDs will likely produce different data in distinct instances of the platform. Thus, the UDD, categorizations, and platform intelligence associated with one tenant ID may be distinct from that of other tenant IDs.",{"@attributes":{"id":"p-0056","num":"0055"},"figref":"FIG. 3","b":"340"},"Case  illustrates cases specifically for BlackBerry Bold, the top one shown being an indication of a problem with access on the Blackberry Bold. Similarly, knowledge  and answer  include information specifically related to the Blackberry Bold. The top example of knowledge  is a proposed solution to try restarting the device. The top example of answers  is an article related to an open browser causing a freezing problem. Each record in each of case , knowledge , and answers  may include information related to the BlackBerry Bold.","In generating a results list of potential solutions for a user, a system may also access similar records related to a Blackberry Tour, especially if similar problems and\/our solutions are noted in the system. Additionally, some of the records listed are listed due to recognition that they are related to the BlackBerry Bold, even without specifically identifying \u201cBlackBerry Bold\u201d.","For example, platform intelligence corpus  represents the body of platform intelligence for the BlackBerry Bold, and may include relationships to other records, related as Relationships, Synonyms, Case keywords, Knowledge keywords, or Answers keywords. Relationships for the BlackBerry Bold may be articles or records related more generally to BlackBerry, which is a parent, or may be specific models of the Bold as children of BlackBerry Bold. The Synonyms may include model numbers \u201c9800\u201d or \u201c8900\u201d as welt as shorthand notations \u201cBberry\u201d and \u201cBB Bold\u201d, Other relationships may exist.","Additionally, in one embodiment, case keywords, knowledge keywords, and\/or answers keywords may include additional relationship data for the platform intelligence related to the BlackBerry Bold. The relationships and categorizations associate data together in ways that allow a database system to provide results in response to queries in a more efficient way than possible in previous systems.",{"@attributes":{"id":"p-0061","num":"0060"},"figref":"FIG. 4","b":["400","400","440","410","420"]},"MTS  provides on-demand database services for environment . An on-demand database service, such provided by MTS , is a database system that is made available to an outside user as needed by the user (e.g., on the demand of the user). Thus, a user does not necessarily need to be concerned with building and\/or maintaining the database system, and rather can simply store and access data as needed from a remotely operated database system.","In one embodiment, MTS  stores information from one or more tenants into tables of a common database image or multitenant database (MTDB) . Accordingly, MTS  provides on-demand database service. A database image may include one or more database objects. A multitenant database stores data for various different tenants or organizations in a single database instance. Resources (such as memory, processing space, processing hardware, and other resources of the database system) are shared or allocated among the different tenants.","Multitenant database  includes tenant data , . . . , . The tenant data may be divided into different storage areas, which can be a physical and\/or a logical arrangement of data. In one embodiment, multitenant database  is accessed via a relational database management system (RDBMS) or the equivalent, which executes storage and retrieval of information against the database object(s). In one embodiment, multitenant database  is accessed via an object-oriented database management system (OODBMS) or the equivalent. In one embodiment, multitenant database  is accessed via an object-relational database management system (ORDBMS) or the equivalent. It will be understood that an RDBMS manages data stored in the database based on a relational model, where data and data relationships are stored in tables. An OODBMS includes at least some integration of a database with an object-oriented programming language, and data is stored in the database in the same mode of representation as is provided in the programming language. An ORDBMS implements both a relational model and an object-oriented model, storing data in tables, and allowing representation of data consistent with a programming language.","Application platform  represents a framework that allows applications of MTS  to execute. Thus, application platform  includes the software components (such as an operating system) to allow execution of the applications. Hardware platform  provides hardware resources to enable the applications to execute on application platform , as well as enabling execution of management or control logic for MTS . In one embodiment, application platform  of MTS  enables creation, managing, and executing one or more applications developed by the provider of the on-demand database service, users accessing the on-demand database service via network , or third party application developers accessing the on-demand database service via network .","MTS  represents any type of system that may provide on-demand database service. In addition to application platform  and hardware platform , which includes processor resources  and memory resources , MTS  may include other components. MTS  includes network interface  to enable user devices to access MTS  over network . In one embodiment, MTS  includes system data , program code , and process space . System data  represents data specific to the running of MTS , rather than being tenant data. It is logically separated from the tenant storage, and may be physically separated (e.g., by designating storage areas or address ranges for system data). Program code  represents code to implement various functions of MTS , which enable the system to provide on-demand database service. Process space  represents a framework for executing MTS processes and tenant-specific processes, such as running applications as part of an application hosting service. Additional processes that may execute on MTS  include database indexing processes. It will be understood that MTS  may include more or fewer components than what is illustrated.","As mentioned above, environment  includes organizations  and , which represent tenants of MTS . Each organization may include one or more individual, and may be an individual or small company, up to a large corporation or organization. Thus, it will be understood that the number of user devices associated with each organization could potentially be hundreds or even thousands. Each organization is assigned a tenant identifier (ID) within MTS . Each tenant ID could have certain associated properties for use, depending on how the organization is configured. User device  is associated with organization , and access MTS  under the tenant ID of organization . Similarly, user devices  and  are associated with organization , and access MTS  under the tenants ID assigned to organization .","User devices , , and  may be any machine or system that is used by a user to access a database user system. For example, any of the user devices can be a handheld computing device, a mobile phone, a laptop computer, a work station, and\/or a network of computing devices. Each user device can be provided with an on-demand database service from MTS  via network .","Within an organization, users may be further given access privileges and\/or restrictions, as illustrated by data litter . As illustrated, user device  may access MTS  in accordance with whatever access is available to organization , while user device  has additional restrictions applied by data filter . In one embodiment, data filter  may additionally or alternatively provide specific user interface features for user  in accessing data from MTS .","The users of user devices , , and  may differ in their respective capacities, and the capacity of a particular user device might be entirely determined by permissions (permission levels) for the current user. For example, where a salesperson is using a particular user device to interact with MTS , that user device has the capacities assigned to that salesperson. However, an administrator using the same user device may have different capacities assigned to that administrator. In systems with a hierarchical role model, users at one permission level may have access to applications, data, and database information accessible by a lower permission level user, but may not have access to certain applications, database information, and data accessible by a user at a higher permission level. Thus, different users will have different capabilities with regard to accessing and modifying application and database information, depending on a user's security or permission level. Such enforcement could occur based on data filter , which can filter per device and\/or could filter for the entire organization (e.g., a central filter as opposed to distributed filtering).","Network  represents any network or combination of networks. A network is generically an interconnection of devices that communicate with each other. Network  can be or include any combination of a LAN (local area network), WAN (wide area network), telephone network, wireless network, point-to-point network, star network, token ring network, hub network, or other appropriate configuration. TCP\/IP (Transfer Control Protocol and Internet Protocol) networks are commonly used, such as the global internetwork of networks often referred to as the \u201cInternet.\u201d Reference to specific networks in certain examples herein is meant only to provide examples, and is not limiting.","In one embodiment, user devices , ,  (and other user devices not shown) communicate with MTS  over network  using TCP\/IP and, at a higher network level, use other common protocols to communicate, such as HTTP (HyperText Transfer Protocol), FTP (File Transfer Protocol), AFS (Andrew File System\u2014a distributed network filesystem using trusted servers), WAP (Wireless Access Protocol). In an example where HTTP is used, user device  might include an HTTP client commonly referred to as a \u201cbrowser\u201d for sending and receiving HTTP messages to and from an HTTP server at MTS  (not specifically shown, but which could be executed on hardware platform ). Such an HTTP server might be implemented as the sole network interface between MTS  and network , but other techniques might be used as well or instead. In one embodiment, the interface between MTS  and network  includes load sharing functionality, such as round-robin HTTP request distributors to balance loads and distribute incoming HTTP requests evenly over a plurality of servers. At least as for the users that are accessing that server, each of the plurality of servers has access to data in MTS ; however, other alternative configurations may be used instead.","In one embodiment, MTS  implements a web-based customer relationship management (CRM) system. For example, in one embodiment, MTS  includes application servers configured to implement and execute CRM software applications as well as provide related data, code, forms, webpages and other information to and from user devices (e.g., , , ) and to store to and retrieve from a database system related data, objects, and webpage content. With a multitenant system, data for multiple tenants may be stored in the same physical database object; however, tenant data is typically arranged so that data of one tenant is kept logically separate from that of other tenants. The logical separation prevents one tenant from having access to another tenant's data. An express sharing of data among tenants is possible, which removes the logical separation. In one embodiment, MTS  implements applications other than or in addition to a CRM application. For example, MTS  may provide tenant access to multiple hosted (standard and custom) applications, including CRM application. User (or third party developer) applications, which may or may not include CRM, may be supported by application platform , which manages creation, storage of the applications into one or more database objects and executing of the applications in a virtual machine in process space  of MTS .","In one embodiment, MTS  is configured to provide webpages, forms, applications, data and media content to user (client) device to support the access by user devices as tenants of MTS . In one embodiment, MTS  provides security mechanisms to keep each tenant's data separate unless the data is shared. More than one MTS may be used. If more than one MTS is used, the multiple systems may be located in close proximity to one another (e.g., in a server farm located in a single building or campus), or they may be distributed at locations remote from one another (e.g., one or more servers located in city A and one or more servers located in city B).","As used herein, each MTS could include one or more logically and\/or physically connected servers distributed locally or across one or more geographic locations. Additionally, the term \u201cserver\u201d refers to a computer system, including processing hardware and process space(s), and an associated storage system and database application (e.g., OODBMS, RDBMS, ORDBMS) as is known in the art. It will be understood that \u201cserver system\u201d and \u201cserver\u201d are often used interchangeably herein. Similarly, a database object described herein can be implemented as single databases, a distributed database, a collection of distributed databases, a database with redundant online or offlink backups or other redundancies, and might include a distributed database or storage network and associated processing intelligence or logic.",{"@attributes":{"id":"p-0076","num":"0075"},"figref":["FIG. 5","FIG. 4"],"b":["500","400","500","540","510","510","510","540","540","500"]},"Environment  may include conventional, well-known elements that are explained only briefly here. For example, user device  (and any other user devices through which users access MTS ) could include a desktop personal computer, workstation, laptop, handheld device, cell phone or smart phone, or any wireless access protocol (WAP) enabled device or any other computing device capable of interfacing directly or indirectly to the Internet or other network connection.","User device  includes processor , which represents one or more processor devices, and may be any combination of one or more processors. Processor  provides hardware means to execute programs and applications on user device . Memory  represents a memory system for user device , and may be any combination of one or more memory devices, short term, and\/or tong term memory. I\/O (input\/output)  represents any type of input and output devices such as keyboards, pointers and controllers, touchscreens, buttons, microphones, or other input mechanisms, and monitors, screens, printers, interfaces to networks, and\/or other output devices.","User device  includes network interface , which represents hardware interconnections and control logic and circuitry to enable user device  to connect to network . Network interface  also has associated drivers and possibly other software components to allow user programs to interface with the interconnection hardware. User device  includes client , which represents a program that allows a user of user device  to access information from network , such as accessing MTS . UI  represents a user interface component of client , or a user interface in which information from client  is presented on user device . Thus, UI  may be integrated with client , or it may be separate from client , but display data related to the execution of client . UI  is rendered on display or user interface hardware or device, which can be understood to be represented by UI .","In one embodiment, user device  runs an HTTP client as client . An HTTP client may be, for example, a browsing program or a browser, which may include a WAP-enabled browser in the case of a cell phone, PDA or other wireless device. The HTTP client allows a user (e.g., subscriber of MTS ) of user device  to access, process, and view information, pages, and applications available from MTS  over network , based on permissions and privileges. The user interface device of user device  can be used to access data and applications hosted by MTS , and to perform searches on stored data, and otherwise allow a user to interact with various GUI (graphical user interface) pages that may be presented to a user.","Similar to what is discussed above with reference to network  of environment , network  represents any network or group of networks over which access can be provided to MTS . Network  may include switching and\/or routing elements, cables, connectors, and other components. In one embodiment, at least part of network  is the Internet, referring to a specific global internetwork of networks. However, it should be understood that other networks can be used in addition to or instead of the Internet, such as an intranet, an extranet, virtual private network (VPN), a non-TCP\/IP based network, any LAN or WAN or other network.","In one embodiment, user devices such as user device  (which may be client systems) communicate with application server  to request and update system-level and tenant-level data from MTS  that may require sending one or more queries to tenant data storage in database instance  and\/or system data in system database . In one embodiment, MTS  (e.g., application server ) automatically generates one or more SQL statements (e.g., one or more SQL queries) designed to access the desired information. System data storage in system database  may generate query plans to access the requested data from database instance .","In one embodiment, MTS  includes one or more application servers . From one perspective, application server  can be considered a network interface of MTS  to connect to network . Application server  exchanges (i.e., receives and\/or transmits) data with network , such as receiving requests and sending replies or sending data. Application servers  may share hardware resources for interfacing with network , or they may be assigned separate resources. In one embodiment, one or more of application servers  can be implemented as an HTTP application server.","In one embodiment, each application server  is configured to handle requests for any user associated with any organization that is a tenant. Thus, a request from user device  could be received and processed at any application server . There may be advantages to avoiding affinity for a user and\/or an organization or tenant to a specific application server , such as the ability to add and remove application servers from a server pool at any time for any reason, as well as for workload balancing among the servers. In an implementation where user and\/or tenant affinity is used, an application server could not be removed without completing its jobs and\/or handing off users to another server.","In one embodiment, an interface system implementing a load balancing function (e.g., an F5 Big-IP load balancer) is communicably coupled between application servers  and the user devices to distribute requests to the application servers . In one embodiment, the load balancer uses a least connections algorithm to route user requests to the application servers . Other examples of load balancing algorithms, such as round robin and observed response time, also can be used. For example, in certain embodiments, three consecutive requests from the same user could hit three different application servers , and three requests from different users could hit the same application server . In this manner, MTS  is multitenant, wherein MTS  handles storage of, and access to, different objects, data, and applications across disparate users and organizations. In one embodiment,","Each application server  includes elements to provide database access service and request processing. Application server  includes API (application programming interface)  and UI . UI  represents server-side components that provide user interface elements that are provided to user device  for display. API  provides an interface for users and\/or developers to access resident processes of MTS .","In one embodiment, application server  includes application (appl) platform , which provides a sub-environment on which applications hosted by application server  can be executed. Application platform  may include an operating system or other control logic, as well as business logic and common routines for use by the applications. As illustrated, application platform  includes application setup mechanism  that supports creation and management of applications, including configuration, by application developers, which may be saved as metadata into tenant data storage of database (db) instance . Save routines  represent the mechanisms used to store data in database instance , such as storing the application setup metadata. Such applications can be executed by subscriber users, for example, in process space .","In one embodiment, invocations to or related to such applications may be coded using PL\/SOQL (Procedural Language Salesforce Object Query Language) that provides a programming language style interface extension to API . Thus, PL\/SOQL  is capable of serving as a procedural extension to an on-demand database centric service API that flow control and transaction control to execute on a server in conjunction with database APIs (e.g., SOQL, data manipulation language (DML), or others). PL\/SOQL  can enable the capability to thread together multiple SOQL\/DML statements as a single unit of work on the server. PL\/SOQL  need not necessarily be considered a general purpose programming language, seeing that it my be implemented as heavily data focused, but is not necessarily implemented that way. In one embodiment, PL\/SOQL  can be used by developers to interlace with an on-demand database system, in contrast to traditional application developers' conventional tools, such as PL\/SQL (Structured Query Language) of ORACLE, Inc. of Redwood Shores, Calif., and others.","In one embodiment, PL\/SOQL  includes variable and expression syntax, block and conditional syntax, loop syntax, object and array notation, pass by reference, and other syntax known to other programming languages. Thus, full control over syntax and the ability to reference dynamic schema elements is provided with anew language and runtime for database services. Where embedded concepts that interface with on-demand database applications are provided, syntax and semantics that are easy to understand and which encourage efficient use of database APIs may also be employed. In one embodiment, PL\/SOQL  is implemented as a strong typed language with direct (non-quoted) references to schema objects such as Object and Field names (both standard and custom).","More details about PL\/SOQL language embodiments is discussed in commonly owned U.S. Provisional Pat. App. 60\/828,192 entitled, PROGRAMMING LANGUAGE METHOD AND SYSTEM FOR EXTENDING APIS TO EXECUTE IN CONJUNCTION WITH DATABASE APIS, by Craig Weissman, filed Oct. 4, 2006, now expired, which is incorporated in its entirety.","In one embodiment, invocations to applications may be detected by one or more system processes, which manage retrieving application metadata  for the subscriber making the invocation and executing the metadata as an application in a virtual machine. Metadata  provides data related to access and\/or use of data stored in database instance . In one embodiment, metadata is stored in a separate table within database instance , and in an alternative embodiment, metadata  is stored with other data elements of user storage (such as with user storage  of table -.","In one embodiment, application server  includes process space , which may include tenant process spaces - through -N (for some integer number N of process spaces configured in application server ), tenant management process space  and system process space . It will be understood that process space  is an abstraction to illustrate the resources allocated for execution of processes (e.g., programs or applications) within application server . The skilled reader recognizes that memory and processor and other hardware resources may need to be allocated, as well as software resources to support the execution of a process. The processes may be executed as separate threads, or may share a thread. In one embodiment, the number N of tenant processes is equal to a number of subscriber tenants. In another embodiment, the number N of tenant processes may be higher than the number of subscriber tenants. Tenant management process  provides management of the other processes, including determining when certain processes execute. System process  executes operations related to functions of MTS .","Each application server  may be configured to tenant data storage in database instance  and the tenant data stored therein, and to system data storage of system database  and the system data stored therein to serve requests of user devices. As mentioned above, in one embodiment, tenant data is separated logically, and stored in the same multitenant database. In one embodiment, database instance  stores data in tables - through -M, where M is some integer number of tables. In one embodiment, different tables store data of different types. Application metadata  may be implemented as a separate table. Alternatively, one of the tables - through -M could be a table that stores varying types of objects, which are defined through metadata stored in the table.","In one embodiment, database instance is further implemented with user storage space distinct identifiable) from its associated tenant. Thus, for example, user data may include the tenant ID, as well as an identifier specific to a user. Thus, storage  may represent either or both of tenant storage or user storage. For example, a copy of a user's most recently used (MRU) items might be stored to in user storage within database instance . Similarly, a copy of MRU items for an entire organization that is a tenant might be stored to a tenant storage area of database instance . In one embodiment, the tenant data and the system data (as illustrated by system database ) are stored in separate databases.","Application servers  may be communicably coupled to database systems, e.g., having access to system database  and tenant database instance , via a different network connection. For example, one application server may be coupled via a network (e.g., the Internet), another application server might be coupled via a direct network link, and another application server might be coupled by yet a different network connection. The application servers may connect to the database systems via TCP\/IP or another transport protocol, at least partially depending on the network interconnect used.","Regarding storage in database instance , one tenant might be a company that employs a sales force where each salesperson uses MTS  to manage their sales process. Thus, a user might maintain contact data, leads data, customer follow-up data, performance data, goals and progress data, and other data, all applicable to that user's personal sales process (e.g., storage , which may be tenant storage). Thus, all of the data and the applications to access, view, modify, report, transmit, calculate, or perform other operations can be maintained and accessed via a user device having nothing more than network access. In an example of an MTS arrangement, the user can manage his or her sales efforts and cycles from any of many different user devices. For example, if a salesperson is visiting a customer and the customer has a lobby with Internet access, the salesperson can obtain critical updates as to that customer while waiting for the customer to arrive in the lobby.","While each user's data might be separate from other users' data regardless of the employers of each user, some data might be organization-wide data shared or accessible by a plurality of users or all of the users for a given organization that is a tenant. Thus, there might be some data structures managed by MTS  that are allocated at the tenant level while other data structures might be managed at the user level. Because MTS  may support multiple tenants including possible competitors, MTS  should have security protocols that keep data, applications, and application use separate. Additionally, because many tenants may opt for access to an MTS rather than maintain their own system, redundancy, up-time, and backup are additional functions that may be implemented in MTS . In addition to user-specific data and tenant specific data, MTS  may also maintain system level data usable by multiple tenants or other data. Such system level data might include industry reports, news, postings, and the like that are sharable among tenants.","In one embodiment, each database instance  can be viewed as a collection of objects, such as a set of logical tables, containing data fitted into predefined categories. A \u201ctable\u201d is one representation of a data object, and may be used herein to simplify the conceptual description of objects and custom objects according to what is described herein. It should be understood that \u201ctable\u201d and \u201cobject type\u201d may be used interchangeably herein. Each table generally contains one or more data categories logically arranged as columns or fields in a viewable schema. Each row or record of a table contains an instance of data for each category defined by the fields.","For example, a CRM database may include a table that describes a customer with fields for basic contact information such as name, address, phone number, fax number, or other information. Another table might describe a purchase order, including fields for information such as customer, product, sale price, date, or other fields. In one embodiment, a multitenant database has standard entity tables for use by all tenants. For CRM database applications, such standard entities might include tables for Account, Contact, Lead, and Opportunity data, each containing pre-defined fields. Thus, tables - through -M may include standard, defined tables.","In one embodiment, tenants may be allowed to create and store custom objects, or they may be allowed to customize standard entities or objects, for example by creating custom fields for standard objects, including custom index fields. U.S. patent application Ser. No. 10\/817,161, filed Apr. 2, 2004, entitled \u201cCustom Entities and Fields in a Multi-Tenant Database System\u201d, teaches systems and methods for creating custom objects as welt as customizing standard objects in a multitenant database system. In one embodiment, for example, all custom entity data rows are stored in a single multitenant physical table, which may contain multiple logical tables per organization. It is transparent to customers that their multiple \u201ctables\u201d are in fact stored in one large table or that their data may be stored in the same table as the data of other customers.",{"@attributes":{"id":"p-0101","num":"0100"},"figref":"FIG. 6"},"In general, a multidimensional categorization system is configured in a database environment, and allows system learning and improved query results. The problem or issue statement can be captured exactly as described by the customer. The system then semantically analyzes the query and proposes categorizations with record categories such as articles and answers. If the case is automatically resolved by the automated system, the case can be forwarded to a human agent for resolution. Relevant case changes are recorded in the cloud, improving the knowledge base of the cloud-architecture database system.","More specifically, embodiments of operations are described as follows with reference to the drawing. An on-demand database environment such as a multitenant database system is configured to include data categorization. The data categorization is established in the system in accordance with a multidimensional configuration, . The system receives a user query requesting information or a solution to an issue or problem, .","In one embodiment, the system, for example through an application server, parses the query into semantic terms and matches the terms to categories defined and stored in tables, . There may be specific tables defined and populated with information related to categorization and searching of data. In one embodiment, the query is stored in the system (such as in the tables) for later reference or use as a query result, . The query itself and\/or the parsing and\/or the categorization of terms can be stored in the system to inform subsequent categorizations.","The system categorizes the query in accordance with the multidimensional configuration, . The system accesses category metadata and record metadata, . In one embodiment, the metadata informs the categorization of the data. In another embodiment, data is accessed during the categorization, and is then reduced or filtered by excluding data from it.","In one embodiment, records for responding to the query may be clustered based on relationships, . Data presented to the user as proposed responses to the query are thus based on categorization and relationship data, providing proposed organization of data while at the same time responding to a query. Whether or not the query was successful can provide information about how the database should be organized.","As mentioned above, in one embodiment, records can be excluded from being in a results set sent to the client, . In one embodiment, the system monitors use of the results, . The monitoring may include receiving specific information from the clients regarding use of the data. Alternatively, the accessing or not of the data can be the monitoring. In one embodiment, the monitoring includes determining whether or not the user requests another query on the same subject, which would suggest that the query results were not successful.","The system updates the statistical information of the system, , including updating metadata related to the categorization and use of the results; thus, the system should continue to improve its generation of results.","Various operations or functions are described herein, which may be described or defined as software code, instructions, configuration, and\/or data. The content may be directly executable (\u201cobject\u201d or \u201cexecutable\u201d form), source code, or difference code (\u201cdelta\u201d or \u201cpatch\u201d code). The software content of the embodiments described herein may be provided via an article of manufacture with the content stored thereon, or via a method of operating a communications interface to send data via the communications interface. A machine readable medium or computer readable medium may cause a machine to perform the functions or operations described, and includes any mechanism that provides (i.e., stores and\/or transmits) information in a form accessible by a machine (e.g., computing device, electronic system, or other device), such as via recordable\/non-recordable storage media (e.g., read only memory (ROM), random access memory (RAM), magnetic disk storage media, optical storage media, flash memory devices, or other storage media) or via transmission media (e.g., optical, digital, electrical, acoustic signals or other propagated signal). A communication interface includes any mechanism that interfaces to any of a hardwired, wireless, optical, or other medium to communicate to another device, such as a memory bus interface, a processor bus interface, an Internet connection, a disk controller. The communication interface can be configured by providing configuration parameters and\/or sending signals to prepare the communication interface to provide a data signal describing the software content.","Various components described herein may be a means for performing the operations or functions described. Each component described herein includes software, hardware, or a combination of these. The components can be implemented as software modules, hardware modules, special-purpose hardware (e.g., application specific hardware, application specific integrated circuits (ASICs), digital signal processors (DSPs), etc.), embedded controllers; hardwired circuitry, etc.","Besides what is described herein, various modifications may be made to the disclosed embodiments and implementations without departing from their scope. Therefore, the illustrations and examples herein should be construed in an illustrative, and not a restrictive sense."],"BRFSUM":[{},{}],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"BRIEF DESCRIPTION OF THE DRAWINGS","p":["The following description includes discussion of figures having illustrations given by way of example of implementations of embodiments described. The drawings should be understood by way of example, and not by way of limitation. As used herein, references to one or more \u201cembodiments\u201d are to be understood as describing a particular feature, structure, or characteristic included in at least one implementation. Thus, phrases such as \u201cin one embodiment\u201d or \u201cin an alternate embodiment\u201d appearing herein describe various embodiments and implementations, and do not necessarily all refer to the same embodiment. However, they are also not necessarily mutually exclusive.",{"@attributes":{"id":"p-0009","num":"0008"},"figref":"FIG. 1"},{"@attributes":{"id":"p-0010","num":"0009"},"figref":"FIG. 2"},{"@attributes":{"id":"p-0011","num":"0010"},"figref":"FIG. 3"},{"@attributes":{"id":"p-0012","num":"0011"},"figref":"FIG. 4"},{"@attributes":{"id":"p-0013","num":"0012"},"figref":"FIG. 5"},{"@attributes":{"id":"p-0014","num":"0013"},"figref":"FIG. 6"}]},"DETDESC":[{},{}]}
