---
title: Computer relational database method and system having role based access control
abstract: A computer method, system and apparatus control access to secured data in a plurality of databases. A repository is coupled to the databases and has a security runtime subsystem. The repository intercepts a user query of a subject database in the plurality. The security runtime subsystem determines from the intercepted query a user and corresponding user role. Based on user role, the security runtime subsystem automatically modifies the user query to filter out secure data for which the identified user is unauthorized to access but are part of the user query.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09058353&OS=09058353&RS=09058353
owner: VMware, Inc.
number: 09058353
owner_city: Palo Alto
owner_country: US
publication_date: 20110311
---

{"@attributes":{"id":"description"},"RELAPP":[{},{}],"heading":["RELATED APPLICATION","BACKGROUND OF THE INVENTION","SUMMARY OF THE INVENTION","DETAILED DESCRIPTION OF THE INVENTION"],"p":["This application is a national stage application under 35 U.S.C. \u00a7371 of International Application No. PCT\/US2011\/028138, filed Mar. 11, 2011, which claims priority to and the benefit under 35 U.S.C. \u00a7119(e) of U.S. Provisional Application No. 61\/313,951, filed on Mar. 15, 2010, which applications are all incorporated by reference into the present disclosure in their entirety.","The entire teachings of the above application(s) are incorporated herein by reference.","This disclosure details the algorithms and structures used to implement a role based access control system to secure data stored in a relational data model or in one or more databases.","Generally in the state of the art, relational database systems only provide security at object\/operation level. For example, it is possible to configure which users can read or modify a table, view or store procedure. It is also possible in more advanced database systems to control row level access using views to control access to the data (using role membership functions provided by the database system) and a model to store the association of data labels to roles that can be used to filter the data presented by the view. Those mechanisms present the following problems:","(1) The user or group accessing the database needs to be configured in the database system.","(2) The database system must have physical access to the security store (i.e. LDAP) in order to resolve user group memberships and the state of the account (enabled\/disabled).","(3) The identity of the user must be used with or upon connection to the database.","(4) Authentication of users on multi layer systems requires delegation of credentials which is not universally available.","(5) Authenticating every user in the database server prevents the usage of connection pools and therefore degrades performance.","(6) Forcing the database to resolve users, groups and role memberships degrades performance.","(7) Changes on the security roles, requires modification of database objects (i.e. views or store procedures).","The present invention addresses the disadvantages of the prior art. Embodiments provide a solution that decouples object and row level security from the database system. That is, embodiments control access to data in database objects at both row and column levels of the database tables. One can control if a user can see (access) a database table and then control what data from inside the table that the user can see (access), at the row level as well as the column level, i.e., fields in the table. Restated, a subview of the table is effectively defined for user access and security purposes.","The high level process of embodiments of the present invention is as follows:","1. A user submits a query to a target relational model via the repository.","2. The repository intercepts the query and identifies the user.","3. The user name can be provided as additional information in order to support delegation.","4. The query is parsed in order to identify which database objects are to be accessed by the query.","5. The repository looks up security information of the entities (objects) to be accessed in the MetaModel and resolves any group memberships stored in the authorization store (i.e. LDAP).","6. The repository either allows or disallows access to the objects\/entities before even reaching the target database.","7. If access is allowed, the repository modifies the query before it is submitted to the relational model (target database) such that information for which the user is denied access (i.e., unauthorized or ineligible to access) is filtered out, for example using a SQL where clause. The SQL where clause filters at the row level of a database table.","Thus the security rules for access are defined horizontally (by database table rows) and vertically (by database table columns), and the modified query filters the data request horizontally (by database table rows) and vertically (by database table columns).","The security configuration information is stored as data that qualify which data is accessible by certain role\/task using a rich expression system. This information is also secured by the repository itself and therefore makes the security system dynamically adjustable at runtime.","In one embodiment, a method and\/or system of controlling access to secured data in a database comprises:\n\n","Embodiments parse the intercepted query and identify objects in the subject database that are to be accessed as part of the user query. The user query may include an indication of the user. And the repository is further configured to look up security information of the identified objects in a metamodel of the database, and resolve any group memberships.","In accordance with the principles of the present invention, embodiments store in the metamodel of the database security information that qualifies which data objects are accessible by certain user roles. The repository is further configured to look up security information of the identified objects in the metamodel and determine which identified objects to filter out of the user query. For example, the repository is configured to look through pertinent tables, subtables, columns, rows and elements, as defined and related in the metamodel, for security information of the identified objects. Embodiments further use the repository to secure the security information. This enables the security information to be dynamically adjustable at runtime.","In some embodiments, the steps of automatically determining and automatically modifying include decoupling object and row level security from the subject database.","At least one of the databases is a relational database in embodiments. The step of automatically modifying the user query includes inserting an SQL where clause to filter out certain secure data objects (table rows) in the subject database that are part of the user query.","Preferably, the databases are unrelated to each other, are disparate and non-centrally managed.","A description of example embodiments of the invention follows.","The diagram of  represents the components of one embodiment of the present invention. The illustrated system  decouples object and row level security from a database system. Embodiment systems  operate on or apply to a plurality of databases  at one time. The databases in the plurality are unrelated to each other and are non-centrally managed. The components of invention system  in one embodiment include: a repository  storing models  of databases  or portions thereof, a web service interface  that presents representations of the models  to end users, metamodel data  and a security system component .","The repository  comprises: (1) a plurality of models  and (2) a model manager . The plurality of models  includes custom models along with system standard models. Each model  is formed of data models representative of a target database , business logic, event triggers and functions, security definitions and distribution configurations. Each of these elements that are part of a model  can be created, modified, and injected into the model manager \/repository . The model manager  manages these elements per model  and groups these elements into a model .","For a given model , its data model defines entities, attributes and relationships, such as tables and sub-tables and organization of the tables\/sub-tables of the target database . Security configurations can be defined at each logical level (table element, sub-table element, table part or whole, sub-table part or whole). Defining, modifying or updating part of a model , injecting new models  into the model manager \/repository  or updating old ones is a simple configuration task in system  that requires no coding or compilation, and can be performed while an instance of repository  is running. For each model , the system  defines in model manager \/repository  the model's data and business logic and specifies in model manager  the model's security, event and distribution configurations. This enables the model manager  and repository  to govern who, when and where business logic is executed and data is accessed.","In one embodiment, the governance structure of repository  can tailor and control how services are provided and customized for specific users, groups and organizations. By services, Applicant's refer to virtual machines, desk tops, physical servers, and in general any infrastructure, platform or software managed by the system  within a private or public cloud.","Repository's  governence structure controls the aspects of a custom solution that integrates with an external database\/relational model  system. In particular, Repository's  governence controls:\n\n","A new data model (at ) can be defined in two ways:\n\n","The data model and corresponding model  can then be injected into the model manager  and repository , and in turn the model manager  automatically generates a REST interface  (or the like web service interface). Unlike a typical REST interface  that exposes the entire contents of a URI (Uniform Resource Identifier, identifying a resource on the Internet), the system  automatically generated REST interface  exposes only selected parts to the data using access permissions, rules and filters that can easily support complex conditions. This is accomplished without writing specific or dedicated code. The data from external systems  or from new models  can be read, modified, and deleted by users using the REST interface  and governance structure of repository .","Of particular interest and advantage, system  provides controlled user access to secured data in database systems . System  decouples object and row level security from the database system . In particular, system  controls access to data in database objects at both the table row level and table column level. System  enables one to control if a user can see (access) a database table and then control what data from inside the table that the user can see (access), at the row level as well as the column level. This means system  can control data access to specific individual fields in a table and effectively defines a subview of the table. In a high level overview, operation of invention system  with respect to controlled access is as follows.","First a user submits a query  to a target relational model  via repository . In response, the repository  intercepts the input query  and identifies the submitting user. The user name can be provided as additional information in the query  in order to support delegation.","Next, repository  parses the query  and identifies which database objects or entities are to be accessed by the query . The repository  looks up in MetaModel  the security information of the database entities to be accessed and resolves any group memberships stored in the authorization store (i.e. LDAP) . As a result, the repository  either allows or disallows access to the database objects\/entities before even reaching the database  (i.e., before the query  reaches the relational model ).","If any level of access is allowed, the repository  modifies the query before it is submitted to the relational model  such that the data objects for which the user is denied access (is unauthorized) are filtered out, for example using a SQL where clause. The SQL where clause filters at the row level of a database table. As a consequence, a modified query is applied to relational model .","Thus the rules for access are defined horizontally (by database table rows) and vertically (by database table columns), and the data passed back via the REST call is filtered horizontally (by database table rows) and vertically (by database table columns).","In MetaModel , the security configuration information is stored as data that qualify which database  object(s) is accessible by certain user role\/task. This information is also secured by the repository  itself (in models ) making the invention security system  dynamically adjustable at runtime.","Relational Models ","A plurality of relational data models  is hosted in a storage system that includes a query language capable of processing queries with conditional statements support. An example of (but not limited to) such a storage system is a relational database with support for primary and foreign keys, join statements and where clauses. Generally, the relational models\/databases  in the plurality are not related to each other, are disparate and non-centrally managed.","Each relational model  in the storage system includes relationships and entities in a standard machine readable format. This machine readable information is MetaModel  and includes a full description of all of the database entities that are used to store data, including the type information of the data stored, and the relationships between all the entities.","An example of a relational data model  and corresponding XML metadata  (machine readable) is illustrated in  and itemized as follows:",{"@attributes":{"id":"p-0054","num":"0064"},"tables":{"@attributes":{"id":"TABLE-US-00001","num":"00001"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"21pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"196pt","align":"left"}}],"thead":{"row":{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"<model>"]},{"entry":[{},"<entities>"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"35pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"182pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"<entity name=\u201dAddress\u201d>"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"49pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"168pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"<properties name=\u201dAddressId\u201d key=\u201dtrue\u201d\/>"]},{"entry":[{},"<properties name=\u201dStreet\u201d\/>"]},{"entry":[{},"<properties name=\u201dCity\u201d\/>"]},{"entry":[{},"<properties name=\u201dZipCode\u201d\/>"]},{"entry":[{},"<properties name=\u201dCountry\u201d\/>"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"35pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"182pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"<\/entity>"]},{"entry":[{},"<entity name=\u201dEmployee\u201d>"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"49pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"168pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"<properties name=\u201dEmployeeId\u201d key=\u201dtrue\u201d\/>"]},{"entry":[{},"<properties name=\u201dName\u201d\/>"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"35pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"182pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"<\/entity>"]},{"entry":[{},"<entity name=\u201dTelephone\u201d>"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"49pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"168pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"<properties name=\u201dTelephoneId\u201d key=\u201dtrue\u201d\/>"]},{"entry":[{},"<properties name=\u201dPhoneNumber\u201d\/>"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"35pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"182pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"<\/entity>"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"21pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"196pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"<\/entities>"]},{"entry":[{},"<relationships>"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"35pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"182pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"<relationship>"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"49pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"168pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"<end name=\u201dAddress\u201d multiplicity=\u201d*\u201d\/>"]},{"entry":[{},"<end name=\u201dEmployee\u201d multiplicity=\u201d*\u201d\/>"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"35pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"182pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"<\/relationship>"]},{"entry":[{},"<relationship>"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"49pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"168pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"<end name=\u201dTelephone\u201d multiplicity=\u201d*\u201d\/>"]},{"entry":[{},"<end name=\u201dEmployee\u201d multiplicity=\u201d1\u201d\/>"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"35pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"182pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"<\/relationship>"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"21pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"196pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"<\/relationships>"]},{"entry":[{},"<\/model>"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}]}}]}}},"The metamodel  data provides the data models of models .","Role Based Security System ","The declarative role based security system  is formed of two main subsystems: a data subsystem and a security runtime subsystem.","The Data subsystem is a relational model used to store security access rules of the target relational model . The security system  uses hierarchical structures in order to maximize the expressiveness of the system and thus minimize repetition of information when representing complex relationships between the access control rules and different user roles of the target model . The rules for access are defined horizontally (by relational model  rows) and vertically (by relational model  columns), and thus the data passed back via the REST call is filtered horizontally (relational model  rows) and vertically (relational model  columns).","The security runtime subsystem is a set of algorithms used to determine the access control rules that apply to a particular user, and to filter data not accessible to that user. The security runtime intercepts any queries  to the storage system of the target relational model , it then modifies the queries such that unauthorized data (i.e., data not authorized to be accessible to the user) is filtered out.","In one embodiment, the role based security information  is stored using the relational model illustrated in . In ,","Model: represents a target relational model  to be secured.","Entity: represents an entity in the target model .","EntityAuthorization: represent an access rule associated to an entity, for example read access to the entity.","EntityFilter: is a set of conditional statements over the data of a target entity and its relationships. For example \u201cEmployee.Addresses.City=London\u201d","Scope: is a bit of information that can be used to group a set of entities in the target model . The data in a scope can be used to uniquely identify the entities that belong to that scope. For example, a scope could be the name of a city, say London, then all of the addresses in London, employees who live in London and all London phone numbers can be uniquely identified as part of the scope.","RoleAssigment: represents the role of a user in a particular scope.","RoleDefinition: represents a role within the system, for example, users, administrators, visitors.","TaskDefinition: represents a set of tasks associated to a role.","Model manager  uses the foregoing as the security configuration of a model  stored in repository . Then, in processing user queries , Repository  looks to model  definitions as made clear below. Also in accordance with the model  definitions, model manager  generates the code to produce a pertinent representation of target database  in REST or web service interface .","The following example illustrates the sequence of events processed by invention system  in one embodiment.","1. A query  is submitted by a user and intercepted by the security runtime subsystem (of ) in the form of an expression tree.\n\n\u201cSELECT Employee.Name, Telephone.PhoneNumber FROM Employes, Telephones\u201d\n","2. The security runtime subsystem (at ) parses the expression tree and identifies which entities in the target model are being accessed as part of the query .","Employee, Telephone","3. The security runtime subsystem of  builds a list with all the TaskDefinition's in each scope of the user that sent the query .","Scope=London","Role Definition=User","Task Definition=List Employee Phones","Role Assignment=Abe, Role=User, Scope=London","EntityAuthorization=Employee (Read=true), Telephone(Read=true)","EntityFilter=Employee.Address.Country=[Scope]","Results in the following table for the user Abe","Scope=London, Task=List Employee Phones","4. The security runtime subsystem of  accesses a lookup table (a file in metamodel ) with all of the access rules and filters (EntityAuthorization, EntityFilter) associated to that entity.","Employee: Read, Employee.Country=[Scope]","5. The security runtime (at ) builds an expression tree to filter the unauthorized data\/data not allowed to be accessible to the user using the following algorithm:","a. Generate an expression for each scope\/task pair in the list generated in step 3 by doing the following substitutions in each of the expressions found in step 4:","i. [Scope] is substituted by scope name","ii. [Application] is substituted by application name associated to the scope","iii. [UserName] is substituted by the name of the user","iv. A literal value is not modified.","v. If no expression is associated to the EntityAuthorization then a constant \u201cTrue\u201d Boolean expression is generated.","b. The total number of expressions is equal to the total number of rows in step 3 multiplied by the number of expressions resulting from step 4.","c. All expressions associated to the same EntityAuthorization are concatenated into a single expression using the OR expression.","d. The resulting single expressions from different EntityAuthorizations resulting from the previous step are concatenated into a single expression using the AND expression.","Employee.Country=London","6. The security runtime subsystem (at ) appends the expression built in the previous step to the conditional part of the intercepted query . If the query  does not support a conditional part, then the expression is evaluated to each of the target model (database) entities affected (e.g., Create).\n\n\u201cSELECT Employee.Name, Telephone.PhoneNumber FROM Employes, Telephones WHERE Employee.Address.Country=London\u201d\n","7. The modified query  is sent for processing and subsequently query results data  are returned to the user.","As a result, the security runtime system  applies the security restrictions, as stored in metamodel , defined for the user by assigned user roles, by different people at different data levels (tables, subtables, rows, columns, entities) of model  relating to target database . Security runtime looks at each data level and applies security restrictions (the rules in the security data subsystem) as pertinent in modifying the query . This causes the data passed back via the REST call to be filtered horizontally (by target database  table rows) and vertically (by target database  table columns).","In this way, invention system  controls access to data in database objects at both the row level and the column level of database tables. Advantageously, one can control if a user\/user role can access a database table and what data from inside the table that the user can access, at the database table row level as well as at the column level and hence fields of the table. This means that a subview of the table is defined for user access and security purposes.","Accordingly, the invention system  automates low level code generation using a declarative approach. Definitions of business processes, triggering events and corresponding data model (target databases), and organizational rules for the data (actions and operations) are declared. In accordance with these declarations, a runtime engine of system  compiles and generates low level code on the fly and interjects such code into the system  and computer network thereof.","Thus the present invention system  provides a declarative distributed event system for relational data models . Moreover, the present invention presents a resource and data centric, global computer network (i.e., Internet) scale architecture. Declarative, distributed events systems of the present invention are capable of operation across a computer network, and allow for adapting to, preserving and having no limits on canonical styles of target database. The declarative approach of Applicant's invention allows one to describe what the system should do as opposed to how the system should do it. Such advantages are not achieved by the prior art.",{"@attributes":{"id":"p-0102","num":"0112"},"figref":"FIG. 4"},"Client computer(s)\/devices  and server computer(s)  provide processing, storage, and input\/output devices executing application programs and the like. Client computer(s)\/devices  can also be linked through communications network  to other computing devices, including other client devices\/processes  and server computer(s) . Communications network  can be part of a remote access network, a global network (e.g., the Internet), a worldwide collection of computers, Local area or Wide area networks, and gateways that currently use respective protocols (TCP\/IP, Bluetooth, etc.) to communicate with one another. Other electronic device\/computer network architectures are suitable.",{"@attributes":{"id":"p-0104","num":"0114"},"figref":["FIG. 5","FIG. 4","FIG. 4"],"b":["50","60","50","60","79","79","79","82","50","60","86","70","90","92","94","15","25","17","95","92","94","84","79"]},"In one embodiment, the processor routines  and data  are a computer program product (generally referenced ), including a computer readable medium (e.g., a removable storage medium such as one or more DVD-ROM's, CD-ROM's, diskettes, tapes, etc.) that provides at least a portion of the software instructions for the invention system. Computer program product  can be installed by any suitable software installation procedure, as is well known in the art. In another embodiment, at least a portion of the software instructions may also be downloaded over a cable, communication and\/or wireless connection. In other embodiments, the invention programs are a computer program propagated signal product  embodied on a propagated signal on a propagation medium (e.g., a radio wave, an infrared wave, a laser wave, a sound wave, or an electrical wave propagated over a global network such as the Internet, or other network(s)). Such carrier medium or signals provide at least a portion of the software instructions for the present invention routines\/program .","In alternate embodiments, the propagated signal is an analog carrier wave or digital signal carried on the propagated medium. For example, the propagated signal may be a digitized signal propagated over a global network (e.g., the Internet), a telecommunications network, or other network. In one embodiment, the propagated signal is a signal that is transmitted over the propagation medium over a period of time, such as the instructions for a software application sent in packets over a network over a period of milliseconds, seconds, minutes, or longer. In another embodiment, the computer readable medium of computer program product  is a propagation medium that the computer system  may receive and read, such as by receiving the propagation medium and identifying a propagated signal embodied in the propagation medium, as described above for computer program propagated signal product.","Generally speaking, the term \u201ccarrier medium\u201d or transient carrier encompasses the foregoing transient signals, propagated signals, propagated medium, storage medium and the like.","While this invention has been particularly shown and described with references to example embodiments thereof, it will be understood by those skilled in the art that various changes in form and details may be made therein without departing from the scope of the invention encompassed by the appended claims."],"BRFSUM":[{},{}],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"BRIEF DESCRIPTION OF THE DRAWINGS","p":["The foregoing will be apparent from the following more particular description of example embodiments of the invention, as illustrated in the accompanying drawings in which like reference characters refer to the same parts throughout the different views. The drawings are not necessarily to scale, emphasis instead being placed upon illustrating embodiments of the present invention.",{"@attributes":{"id":"p-0031","num":"0035"},"figref":"FIG. 1"},{"@attributes":{"id":"p-0032","num":"0036"},"figref":"FIG. 2"},{"@attributes":{"id":"p-0033","num":"0037"},"figref":"FIG. 3"},{"@attributes":{"id":"p-0034","num":"0038"},"figref":"FIG. 4"},{"@attributes":{"id":"p-0035","num":"0039"},"figref":["FIG. 5","FIG. 4"]}]},"DETDESC":[{},{}]}
