---
title: Extending collaboration capabilities to external data
abstract: A computing device includes instructions that, when executed by a processing unit, cause the processing unit to: create a business data catalog module that accesses and manipulates data residing on an internal data store and an external data store, wherein the business data catalog module receives a request for data, determines whether the data resides in the internal data store or the external data store, and access the data residing on the external data store, and create a external data provisioning module that provisions data accessed from the external data store, wherein the external data provisioning module maps external data from the external data store for presentation on a client computing device. A user can access and manipulate the data from the external data store in a same manner as accessing and manipulating data from the internal data store.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08341189&OS=08341189&RS=08341189
owner: Microsoft Corporation
number: 08341189
owner_city: Redmond
owner_country: US
publication_date: 20090331
---

{"@attributes":{"id":"description"},"BRFSUM":[{},{}],"heading":["BACKGROUND","SUMMARY","DETAILED DESCRIPTION"],"p":["In modern enterprise computing system implementations, business data can be distributed across multiple data stores. For example, a user can require access to multiple \u201cLine-of-Business\u201d data stores to acquire knowledge about business activities, such as information about customers and other business-related data. These Line-of-Business data stores can be spread across a system and can also be located externally from the system.","A user who leverages such data systems and other business processes may be required to frequently navigate across multiple external business systems over the course of day-to-day operations. Maneuvering between external business systems and fetching content from external data stores can be complex and costly, from both an administrative and a user perspective.","In one aspect, a computing device includes a processing unit, and a system memory connected to the processing unit, the system memory comprising instructions that, when executed by the processing unit, cause the processing unit to: create a business data catalog module that accesses and manipulates data residing on an internal data store and an external data store, wherein the business data catalog module receives a request for data, determines whether the data resides in the internal data store or the external data store, and access the data residing on the external data store; and create a external data provisioning module that provisions data accessed from the external data store, wherein the external data provisioning module maps external data from the external data store for presentation on a client computing device. A user can access and manipulate the data from the external data store in a same manner as accessing and manipulating data from the internal data store.","In another aspect, a method for obtaining business data includes: receiving a request for data from a data store; determining if the data resides on an internal data store or an external data store; when the data resides on the external data store, accessing external data on the external data store; mapping the external data from the external data store; and presenting the external data from the external data store to a user in a same manner as internal data from the internal data store.","In yet another aspect, a computer readable storage medium having computer-executable instructions that, when executed by a computing device, cause the computing device to perform steps including: creating definitions of business objects that encapsulate a set of defined attributes related to the business objects; accessing definitions of entities and performing an inventory of the attributes defined therein; receiving a request for data from a data store; determining if the data resides on an internal data store or an external data store; when the data resides on the external data store, accessing external data on the external data store using one or more API calls specific to the external data store; mapping the external data from the external data store; generating forms and views for presentation to the user of the client computing device, wherein the views and forms contain content that is consistent with permissible operations embodied in APIs of an external business system associated with the external data store; presenting the external data from the external data store to a user in one of the views or forms in a same manner as internal data from the internal data store; and allowing the user to manipulate the external data store in a same manner as manipulating the internal data from the internal data store.","This Summary is provided to introduce a selection of concepts, in a simplified form, that are further described below in the Detailed Description. This Summary is not intended to identify key or essential features of the claimed subject matter, nor is it intended to be used in any way to limit the scope of the claimed subject matter.","The present application is directed to systems and methods for integrating data housed in one or more external data stores into a preferred business software platform. The externally housed data is presented to a user as if the data were native to the preferred business software platform. The user can perform operations on the data according to one or more pre-defined constraints.","Examples described herein include data stores that are \u201cinternal\u201d and data stores that are \u201cexternal.\u201d Data stores that are \u201cinternal\u201d are stores located within a system or enterprise and accessible only within the system or enterprise because of, for example, security measures such as firewalls. Data stores that are \u201cexternal\u201d are stores that are accessible outside the system or enterprise through, for example, a network such as the Internet.","The following example embodiments are described herein with respect to the SHAREPOINT\u00ae team services portal server services platform from Microsoft Corporation of Redmond, Wash. However, the concepts of the present disclosure are also applicable to other systems in which it would be desirable to integrate externally-located data into a software platform.",{"@attributes":{"id":"p-0021","num":"0020"},"figref":"FIG. 1","b":"100"},"The example networked computing system  includes a client computing device , a server computing device , a local business system , a local data store , a plurality of external business systems -(collectively, external business systems ), and external data stores -(collectively, external data stores ). Additionally, a first communication network and a second communication network (collectively, communication network ) are shown. Other embodiments of example networked computing environment  are possible as well.","The communication network  is a bi-directional data communication path for data transfer between one or more computing devices. In the example embodiment, the first communication network establishes an internal communication path for data transfer between the client computing device  and the server computing device . The second communication network establishes an external communication path for data transfer between the server computing device  and the external business systems .","In general, communication network  can be of any of a number of wireless or hardwired WAN, LAN, Internet, or other packet-based communication networks such that data can be transferred among the elements of example environment . Other embodiments of communication network  are possible as well.","In the example shown, the network is a network that is located internally with respect to a business data platform . The network is \u201cinternal\u201d because the network is a LAN or WAN that is only accessible to the devices ,  and other devices located behind security provisions, such as a firewall, associated with the business data platform .","The network is a network that is accessible by a plurality of computing devices outside of the business data platform . For example, the network can be the Internet or another network that is accessible outside of the business data platform .","The computing devices ,  can be general purpose computing devices, as described below. In the example shown, the server computing device  is a business server that can implement business processes. Example business processes include data collaboration processes, data management processes, and others. The server computing device  can include of a plurality of interconnected server computing devices operating together to implement business processes.","The local business system  is a computing device that includes one or more business systems that provide business applications. The local business system  typically includes business logic that operates on data located in one or more data stores, such as the local data store , described in further detail below. One example local business system is Windows SharePoint Services 3.0 provided by Microsoft Corporation. Other embodiments of local business system  are possible as well.","The local data store  is a data storage medium such as a relational data store or any other type of persistent data storage device. The local data store  stores data in a predefined format such that the server computing device  can query, modify, and manage data stored thereon. For example, the local data store  can be an XML-enabled database such as a structured query language (SQL) database. In certain embodiments, the local data store  can comprise of a plurality of data storage devices logically grouped together into an interconnected \u201cFarm\u201d configuration. Other embodiments of the local data store  are possible as well.","As depicted in , the client computing device , server computing device , local business system , and local data store  are logically grouped together within the business data platform  to functionally operate as a business software platform. For example, a user can interact with a Web browser application on the client computing device  to leverage functionalities of the respective devices ,  and local data store  as a tool for business data management and collaboration with one or more other users operating within the business data platform .","One example embodiment of such a business data platform is the SHAREPOINT\u00ae team services portal server services platform from Microsoft Corporation. In the example embodiment, a platform component may be embodied as Office SharePoint Server 2007, and a services component may be embodied as Windows SharePoint Services 3.0, respectively. Other embodiments of the business data platform  are possible as well.","External business systems  are similar to the local business system , as described above, with the exception of operating outside the business data platform . Each respective external business system -can include one or more business systems that provide business applications.","For example, one or more of the external business systems -can be an enterprise resource planning (ERP) system from SAP America, Inc. of Newtown Square, Pa., or another general customer relationship management system. In general, each of the respective external business systems -can be of any type of Line-of-Business system that includes an external service or software system with business logic operating on data located in a relational data store or any other type of persistent data storage device.","In the example embodiment, each of the respective external business systems -is communicatively connected to respective external data stores -. The external data stores  can be configured in a manner similar to that of local data store , as described above, where each respective external data store -is formatted such that a corresponding external business system -can operate on data stored thereon. Other embodiments of external data stores  are possible as well.","In a similar manner as described above with respect to the elements of the business data platform , a user can interact with a Web browser application on the client computing device  to leverage functionalities of the server computing device , external business systems , and external data stores  as a tool for business data management and collaboration with one or more other users that are operating within the context of the business data platform .","While the external business systems  and external data stores  are located outside of the business data platform , the server computing device  of the present disclosure is configured to integrate the functionality of external business systems  into the business data platform .","For example, as described in further detail below, the server computing device  can be configured to implement a mapping operation in which external business data is brought into the context of the business data platform . In this example, the server computing device  implements a plurality of methods for presenting and operating on respective external business data, which are similar to methods for presenting and operating on business data that is housed internal to the business data platform . In this manner, external business data is presented to the user and operated on as if it were native (i.e., internal) to the business data platform .",{"@attributes":{"id":"p-0038","num":"0037"},"figref":["FIG. 2","FIG. 1"],"b":["110","110","205","210"]},"For example, the server computing device  can a desktop computer, laptop computer, or personal data assistant. The server computing device  can include any number of input\/output devices, a central processing unit (CPU), a data storage device, a network device, and any other functional devices to otherwise process and transfer data.","Depending on the configuration and type of computing device, the system memory  may be volatile (e.g., RAM), non-volatile (e.g., ROM, flash memory, etc.) or any combination thereof. The system memory  can store an operating system  for controlling the operation of a computing device. One example operating system  is the WINDOWS\u00ae operating system from Microsoft Corporation, or a server, such as Microsoft Office SharePoint Server 2007, also from Microsoft Corporation.","The system memory  may also include one or more software applications  and may include program data. Software applications  may include many different types of single and multiple-functionality programs, such as an electronic mail program, a calendaring program, an Internet browsing program, a spreadsheet program, a program to track and report information, a word processing program, and many others. One example program is the Office suite of applications from Microsoft Corporation.","The server computing device  can have additional features or functionality. For example, the server computing device  may also include additional data storage devices (removable and\/or non-removable) such as, for example, magnetic disks, optical disks, or tape. Such additional storage is illustrated in  by removable storage  and non-removable storage . Computer readable storage media may include physical volatile and nonvolatile, removable and non-removable media implemented in any method or technology for storage of information, such as computer readable instructions, data structures, program modules, or other data. The system memory , removable storage  and non-removable storage  are all examples of computer readable storage media. Computer storage media includes, but is not limited to, RAM, ROM, EEPROM, flash memory or other memory technology, CD-ROM, digital versatile disks (DVD) or other optical storage, magnetic cassettes, magnetic tape, magnetic disk storage or other magnetic storage devices, or any other medium which can be used to store the desired information and which can be accessed by server computing device . Any such computer storage media may be part of the server computing device .","The server computing device  can also have input device(s)  such as keyboard, mouse, pen, voice input device, touch input device, etc. Output device(s)  such as a display, speakers, printer, etc. may also be included.","The server computing device  can also contain a communication connection  that enable communications with other computing devices (e.g., clients, servers, databases), such as external business systems , over a network (e.g., communication network  of ) in a networked, distributed computing environment. The communication connection  is one example of communication media. Communication media may typically be embodied by computer readable instructions, data structures, program modules, or other data in a modulated data signal, such as a carrier wave or other transport mechanism, and includes any information delivery media. The term \u201cmodulated data signal\u201d means a signal that has one or more of its characteristics set or changed in such a manner as to encode information in the signal. By way of example, communication media includes wired media such as a wired network or direct-wired connection, and wireless media such as acoustic, RF, infrared and other wireless media.","In example embodiments, the client computing device  of  can be configured in a manner similar to that of the server computing device , as described above. The client computing device  can also contain a Web browser application that renders a graphical user interface. In this manner, a user can interact with online content via a Web page. In example embodiments, the Web browser application is a client program that uses HTTP (Hypertext Transfer Protocol) to make requests of Web servers for online content. One example of such a Web browser application is the INTERNET EXPLORER\u00ae internet browser, from Microsoft Corporation.","In general, example system  can include a plurality of client computer devices  and server computing devices . Other embodiments of client computing device  and the server computer device  are possible as well.",{"@attributes":{"id":"p-0047","num":"0046"},"figref":["FIG. 3","FIG. 2"],"b":["110","110","305","310"]},"The BDC module  and EDL module  operate together to integrate business data residing on external data stores  within the context of business data platform . For example, in one embodiment, the BDC module  and the EDL module  together generate and render an \u201cexternal data list\u201d of business data gathered from external data store on a graphical user interface of a Web browser application running on the client computing device . The user of the client computer device  can access and\/or manipulate this external business data in a same manner as the user can access and manipulate data residing internal to the business data platform .","The example BDC module  includes logical modules of software executing on the server computing device  that enable the BDC module  to access and\/or manipulate data residing on the external data stores . In general, when a user, interacting with a Web browser application via the client computing device , requests data, the BDC module  receives the request and makes a determination of whether the requested data resides internally or externally with respect to the business data platform . Upon, evaluating the status of the requested data, the BDC module  processes the data request.","In example embodiments, when the data request is associated with business data residing external to the business data platform , the BDC module  fetches the business data of various data types from external data stores  by using application programming interface (API) calls which are supported by respective external business systems , as the business logic of external business systems  are represented through a facade of APIs. In example embodiments, respective APIs of each respective external business system -define permissible operations along with one or more pre-defined constraints for otherwise rendering and operating on business data residing in respective external data stores -","In one aspect, information about APIs associated with respective external business systems -are contained in data stored in the local data store  that can be accessed by the BDC module . Additionally, other data that is associated with each respective external business system -can be stored in the local data store  as well, including various parameters and definitions of constructs that the BDC module  leverages to access and obtain data from external data stores .","For example, this data can include data related to entities, methods, parameters and parameter descriptors associated with each method, security authorization information, filtering information, and parameters associated with each of the respective external business systems  and external data stores . Additionally, local data store  can contain data describing the types of data stored in each of the respective external data stores .","The example EDL module  includes logical modules of software running on the server computing device  that enables the EDL module  to provision business data housed in external data stores  within the context of business data platform . For example, the EDL module  includes algorithms that map external business data to \u201cviews\u201d and \u201cforms\u201d for presentation on the client computing device  via a Web browser application. In one aspect, provisioning of external business data refers to a process of making configurations to bring about changes in a product.","In example embodiments, a \u201cview\u201d corresponds to methods for displaying external business data based on a configuration of respective external business systems  and corresponding external data stores , according to data stored in local data store , as described above. A \u201cform\u201d corresponds to methods for data to update external business data stored in respective external data stores . In this manner, provisioned views and forms contain content that are consistent with the permissible operations embodied in the APIs of the respective external business systems , and enable external business data to be accessed and modified via permissible CRUDQ operations (create, read, update, delete and query operations), as described in further detail below.",{"@attributes":{"id":"p-0055","num":"0054"},"figref":["FIG. 4","FIG. 3"],"b":["305","305","405","410"]},"The parameters module  comprises software that accesses connection parameters and definitions of a plurality of business systems that the BDC module  can model and access as a source of business data and business logic. In example embodiments, respective business system specific connection parameters and definitions are contained in data stored in the local data store  that can be accessed by the parameters module .","In general, business systems can be defined to exist both within and outside of the context of business data platform . For example, connection parameters and definitions for local business system  and respective external business systems -may be defined. Furthermore, the BDC module  is extensible in that new business systems with respective parameters and definitions may be defined at any time.","The entity module  comprises software that creates definitions of business objects that encapsulate a set of defined attributes related to a business object, referred to as an entity. In example embodiments, entities and associated attributes are contained in data stored in the local data store  that can be accessed by the entity module .","In general, an instance of an entity contains data members that may be of a simple type that represent scalar types such as integers and strings, or a complex type that represents a structured field, such as an Address. For example, an entity instance such as \u201cCustomers\u201d or \u201cEmployees,\u201d can include a tabular list data. In the example embodiment, the \u201cCustomers\u201d entity instance can include a tabular list of data comprising columns that contain fields such as Customer Name, Orders, Products, and Addresses, where the tabular list would include data members assigned to each respective column and row.","In one aspect, entity attributes can comprise of a plurality of definitions that dictate how fields and respective data members related to a specific entity are accessed, modified, and rendered. For example, entity attributes related to methods assigned to CRUDQ operations can dictate allowable CRUDQ operations and related functionalities. For example, if a method of a type \u201cCreator\u201d is defined within the attributes of an entity, creation of a new instance of entity is allowed. Furthermore, as described in further detail below, CRUDQ operations can be logically grouped into a View Group, that enables provisioning of each of respective views and forms associated with the entity.","The provisioned views and forms will have related functionalities associated with, for example, the defined methods assigned to CRUDQ operations within a View Group. For example, if a \u201cCreator\u201d method is defined within a View Group of an entity, a \u201cNew\u201d menu item may be provisioned on a Web page that a user may select to create a new entity instance. Other example methods include a method of a type \u201cFinder\u201d or \u201cSpecific Finder\u201d that correspond to a view; a method of a type \u201cUpdater\u201d that allows for update of one or more properties of a specific entity instance; and a method of a type \u201cDeleter\u201d that allows for deletion of a specific entity instance.","As mentioned above, in certain embodiments, methods assigned to CRUDQ operations for respective views and forms can be logically grouped together into a View Group. In general, an entity may contain multiple view groups. For example, one specific view of a \u201cCustomers\u201d entity instance may correspond to a set of columns that can include \u201cFirst Name\u201d and \u201cLast Name\u201d and a \u201cCompany Name.\u201d In certain embodiments, this specific view may only support a viewing operation, in which the associated View Group would only contain a method of type \u201cFinder\u201d or \u201cSpecific Finder,\u201d as described in further detail below.","In example embodiments, other types of defined entity attributes are possible as well. For example, an \u201cIdentifier\u201d attribute can be defined that represents a persistent identity of a specific entity, such as a primary key, such that a respective entity can be identified. Further, a \u201cFilterDescriptor\u201d attribute can be defined that includes criteria for filtering data members that are returned after an invocation of a method assigned to a respective CRUDQ operation. Several example filtering criteria include a \u201cPageNumber\u201d criteria, a \u201cWildcard\u201d criteria, a \u201cComparison\u201d criteria, and others. Additionally, an \u201cActions\u201d attribute can be defined that includes actions that are references to a URL that are might be related to the entity.","Further, a \u201cRelationships\u201d attribute can be defined that contains references to one or more entities that an association is defined on. In example embodiments, associations represent relationships between one or more entities. Additionally, an \u201cAccess\u201d attribute can be defined that includes methods an administrator can leverage to set access rights on (i.e., CRUDQ operations). Many other methods or types of entity attributes may be defined as well.",{"@attributes":{"id":"p-0065","num":"0064"},"figref":["FIG. 5","FIG. 3"],"b":["310","310","505","510"]},"In one aspect, the example schema generation module  and the FVGR module  enable the EDL module  to integrate business data housed in external data stores  into the context of business data platform  by mapping respective business data to views and forms for presentation to a user via a graphical user interface instantiated by a Web browser application on the client computing device . According to the principles of the present disclosure, the provisioned views and forms contain content that are consistent with the permissible operations embodied in the APIs of respective external business systems , as obtained by the BDC module .","In one aspect, the schema generation module  comprises software that accesses definitions of entities as defined in entity module , as described above. In general, the schema generation module  accesses a respective entity and all associated attributes as contained in data stored in the local data store . For example, the schema generation module  may receive a request to access an entity \u201cCustomers\u201d and perform an inventory of the attributes defined therein. In the example embodiment, the \u201cCustomers\u201d entity may be defined within the context of business data platform , and therefore as a default may contain all methods associated with standard CRUDQ operations, including the \u201cCreator\u201d method, the \u201cSpecific Finder\u201d method, the \u201cUpdater\u201d method, and the \u201cDeleter\u201d method. Accordingly, upon request, the schema generation module  would perform an inventory that would reflect the presence of the recited CRUDQ methods of the \u201cCustomers\u201d entity.","As another example, the schema generation module  may receive a request to access an entity \u201cEmployees\u201d and perform an inventory of the attributes defined therein. In the example embodiment, the \u201cEmployees\u201d entity may be defined outside of the context of business data platform , and therefore may not contain all of the CRUDQ methods. For example, the \u201cEmployees\u201d entity may not include the \u201cCreator\u201d method, and therefore, upon request, the schema generation module  would inventory that the \u201cEmployees\u201d entity as only having the \u201cSpecific Finder\u201d method, the \u201cUpdater\u201d method, and the \u201cDeleter\u201d method.","The FVGR module  comprises software that accesses schema generation module  to request an inventory of attributes defined within a respective entity. Subsequently, based on an ascertained inventory, the FVGR module  generates forms and views for later presentation to a user of client computing device  via a graphical user interface instantiated by a Web browser application. In this manner, the provisioned views and forms contain content that are consistent with the data types of external business data residing on respective external data stores  and business permissible operations embodied in the APIs of respective external business systems , as obtained by the BDC module .","For example, with respect to the entity \u201cCustomers\u201d as described above, the FVGR module  accesses the schema generation module  to request an inventory of the attributes of the entity \u201cCustomers.\u201d In the example embodiment, the schema generation module  would perform the inventory and return the defined attributes, including the \u201cCreator\u201d method, the \u201cSpecific Finder\u201d method, the \u201cUpdater\u201d method, and the \u201cDeleter\u201d method.","Subsequently, the FVGR module  creates forms and views in response to a request by client computing device  of relevant data from an instance of entity \u201cCustomers.\u201d This may include, for example, creating a \u201cNew\u201d menu item, and creating a \u201cNewItem.aspx\u201d Web page when the \u201cCreator\u201d method is found. When the \u201cUpdater\u201d method is found, this may include creating an \u201cEdit\u201d menu item, and creating an \u201cEditItem.aspx\u201d Web page. When the \u201cDeleter\u201d method is found, this may include creating a \u201cDelete\u201d menu item. Additionally, as described in further detail below, when the \u201cSpecific Finder\u201d is found, this may include creating a \u201cView\u201d menu item; and during creation of an external data list, creating a new display form \u201cDispItem.aspx\u201d, where the \u201cSpecific Finder\u201d will be interrogated for the fields that are returned by it and will be added as fields on the \u201cDispItem.aspx\u201d display form.","Similarly, with respect to the entity \u201cEmployees,\u201d as described above, the FVGR module  accesses the schema generation module  to request an inventory of the attributes of the entity \u201cEmployees.\u201d In the example embodiment, the schema generation module  performs the inventory and returns the obtained defined attributes, including the \u201cSpecific Finder\u201d method, the \u201cUpdater\u201d method, and the \u201cDeleter\u201d method.","Subsequently, the FVGR module  provisions forms and views in response to a request of external business data by client computing device . In example embodiments, this may include, creating views and forms with respect to the \u201cSpecific Finder\u201d method, the \u201cUpdater\u201d method, and the \u201cDeleter\u201d method, in a manner similar as described above with respect to the \u201cCustomers\u201d entity. However, in the example embodiment, the \u201cCreator\u201d method is not found in \u201cEmployees\u201d entity, and therefore no associated form, along with any associated links, would be displayed.","Examples described herein include rendering business data on a Web browser application. However the systems and method of the present disclosure can be applicable to any client rendering process such as, for example, rendering Extensible Application Markup Language (XAML) for Windows Presentation Foundation (WPF).","As described above, the platform  allows the user to access, view, and manipulate data residing on both internal and external data stores. Examples of such operations are described below with reference to .",{"@attributes":{"id":"p-0076","num":"0075"},"figref":"FIG. 6","b":["600","605","607"]},"At operation , the server computing device analyzes the inventory of attributes acquired at operation  to identify, for example, one or more parameters of a respective external data store that houses business data which will be used to create the external data list.","At operation , the server computing device performs a mapping procedure in which data types of data members of the external data source are mapped to data type fields that are native to a preferred business data platform. For example, a \u201cCustomer\u201d entity instance may have \u201cFirst Name\u201d and \u201cLast Name\u201d having data members with a type of \u201cstring.\u201d The server computing device would map the \u201cFirst Name\u201d and \u201cLast Name\u201d data members to data type fields having a \u201cstring\u201d type that are native to the business data platform. In embodiments in which the preferred business data platform is, for example, SharePoint, operation  can map the \u201cFirst Name\u201d and \u201cLast Name\u201d data members of the \u201cCustomer\u201d entity type to a \u201cSPList\u201d field, which is a \u201cstring\u201d data type field that enables rendering of the external business data in views and forms within the context of SharePoint. In this manner, the mapping procedure of operation  operates to surface external business data into the business data platform as if it is native data.","Next, at operation , the server computing device creates an external data list. In example embodiments, the external data list is configured without any respective views or forms. In one aspect, the created external data list is demarked as to allow the business data platform to connect to the respective external data source via the server computing device at any point in time.","At operations , the server computing device analyzes the inventory of attributes acquired at operation  to determine which of the methods associated with CRUDQ operations are defined within entities stored in the local data store. In certain embodiments, the methods are logically grouped within a View Group assigned to each of respective view and form for a specific entity.","At operation , the server computing device creates views for each \u201cFinder\u201d method found in a View Group at operation . In example embodiments, the server computing device creates a Web page for each View Group containing a \u201cFinder\u201d method and configures a view Web Part to be rendered on the Web page. In one aspect, the Web Part leverages a Collaborative Application Markup Language (CAML) view XML generated from the \u201cFinder\u201d method and lists all the data type fields that will be returned in the view. In one aspect, the Web page is configured such that when a user browses to the Web page, the \u201cFinder\u201d will execute and the external business data will be fetched from the external data store and of shaped by the server computing device into a form consistent with which a user may expect in the business data platform.","At operation , the server computing device creates forms for each \u201cUpdate\u201d method found in a View Group at operation . For example, an \u201cEditForm\u201d is created when a respective View Group supports an \u201cUpdate\u201d method. In example embodiments, the server computing device creates a Web page for each View Group containing an \u201cUpdate\u201d method and configures a form Web Part to be rendered on the Web page. At operation , the server computing device maps actions associated with respective external business data to custom actions of the business data platform. For example, references to a URL that might be related to the entity are created.",{"@attributes":{"id":"p-0083","num":"0082"},"figref":"FIG. 7","b":["700","705"]},"At operation , for a respective \u201cFinder\u201d method identified in the inventory at operation , a \u201cFinder\u201d method name is stored in a view CAML similar to, for example, operation  of example method , as described above. At operation , the server computing device calls an external business data system API to determine a set of filters on the \u201cFinder,\u201d and configure the filter values based on the values stored in the view CAML.","At operation , the server computing device executes the \u201cFinder\u201d method to retrieve the external business data from the external data source. At operation , the retrieved data is reordered according to the view CAML one or more sorting, filtering and paging are applied to the retrieved data. In general, the retrieved data is loaded into memory as a data table and an indexing scheme is used to prevent the need to copy data many times in the table. At operation , HTML is rendered to a Web page for the retrieved data conditioned in manner consistent with operation . In the example, embodiment, the retrieved data is rendered based on the data type field that is native to the business data platform.",{"@attributes":{"id":"p-0086","num":"0085"},"figref":"FIG. 8","b":["800","805","805"]},"At operation , the server computing device accesses the local data store and performs an inventory of attributes defined within definitions of all entities stored in the local data store. In this manner, the server computing device is enabled to call an external business data system API that will allow external business data to be fetched. In example embodiments, the inventoried attributes include, for example, a \u201cLobSystemInstance,\u201d an \u201cEntityNamespace,\u201d an \u201cEntity Name,\u201d and \u201cSpecificFinder\u201d name, which fully define a View Group for a respective entity.","At operation , the server computing device analyzes the inventory of attributes to determine, for example, \u201cUpdater\u201d method parameters defined within definitions of all entities stored in the local data store. In example embodiment, for each field value in a form, an associated \u201cUpdater\u201d parameter is set. At operation , the server computing device executes the \u201cUpdater\u201d method to update external business data in a respective external data store.",{"@attributes":{"id":"p-0089","num":"0088"},"figref":"FIG. 9","b":["900","910"]},"At operation , the server computing device analyzes the inventory of attributes acquired at operation  such that, for example, the server computing device is enabled to call an external business data system API that will allow external business data to be fetched. In example embodiments, the inventoried attributes include, for example, a \u201cLobSystemInstance,\u201d an \u201cEntityNamespace,\u201d an \u201cEntity Name,\u201d and \u201cSpecificFinder\u201d name, which fully define a View Group for a respective entity. At operation , the server computing device executes a \u201cDeleter\u201d method.","The example embodiments described herein can be implemented as logical operations in a computing device in a networked computing system environment. The logical operations can be implemented as: (i) a sequence of computer implemented instructions, steps, or program modules running on a computing device; and (ii) interconnected logic or hardware modules running within a computing device.","For example, the logical operations can be implemented as algorithms in software, firmware, analog\/digital circuitry, and\/or any combination thereof, without deviating from the scope of the present disclosure. The software, firmware, or similar sequence of computer instructions can be encoded and stored upon a computer readable storage medium and can also be encoded within a carrier-wave signal for transmission between computing devices.","Although the subject matter has been described in language specific to structural features and\/or methodological acts, it is to be understood that the subject matter defined in the appended claims is not necessarily limited to the specific features or acts described above. Rather, the specific features and acts described above are disclosed as example forms of implementing the claims."],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"DESCRIPTION OF THE DRAWINGS","p":["Aspects of the present disclosure may be more completely understood in consideration of the following detailed description of various embodiments in connection with the accompanying drawings.",{"@attributes":{"id":"p-0009","num":"0008"},"figref":"FIG. 1"},{"@attributes":{"id":"p-0010","num":"0009"},"figref":["FIG. 2","FIG. 1"]},{"@attributes":{"id":"p-0011","num":"0010"},"figref":["FIG. 3","FIG. 2"]},{"@attributes":{"id":"p-0012","num":"0011"},"figref":["FIG. 4","FIG. 3"]},{"@attributes":{"id":"p-0013","num":"0012"},"figref":["FIG. 5","FIG. 3"]},{"@attributes":{"id":"p-0014","num":"0013"},"figref":"FIG. 6"},{"@attributes":{"id":"p-0015","num":"0014"},"figref":"FIG. 7"},{"@attributes":{"id":"p-0016","num":"0015"},"figref":"FIG. 8"},{"@attributes":{"id":"p-0017","num":"0016"},"figref":"FIG. 9"}]},"DETDESC":[{},{}]}
