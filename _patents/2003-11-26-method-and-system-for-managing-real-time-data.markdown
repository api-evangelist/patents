---
title: Method and system for managing real time data
abstract: A system and method for information management is provided. The system provides for collection of data from multiple, dissimilar and disparate sources having various collection schedules by a plurality of data collectors. It further provides a central database for storage of the collected data with front-end alerts and triggers. The central database has a central data store module for data storage and a central configuration module for configuring the data as well as the components of the system. The system includes a reporting module for generating and forwarding user specific scheduled reports from the accessed data in the central database. The presentation of the data could be any time, anywhere and in any format required by the end user. The system also provides an administration module for collecting, monitoring and configuring the collected data, data collectors, central database and the reports for the end user(s).
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=07130812&OS=07130812&RS=07130812
owner: Centergistic Solutions, Inc.
number: 07130812
owner_city: Orange
owner_country: US
publication_date: 20031126
---

{"@attributes":{"id":"description"},"BRFSUM":[{},{}],"heading":["CROSS REFERENCE TO RELATED APPLICATION","FIELD OF THE INVENTION","BACKGROUND OF THE INVENTION","SUMMARY OF THE INVENTION","DETAILED DESCRIPTION OF THE PREFERRED EMBODIMENTS"],"p":["This application is related to the provisional U.S. patent application entitled, \u201cINFORMATION MANAGEMENT SYSTEMS\u201d, Ser. No. 60\/353,646, filing date, Jan. 31, 2002, the disclosure of which is incorporated herein by reference, in its entirety.","The present invention relates to information management systems, more particularly, to computerized information management systems that provide relevant metrics for assisting business entities in making business decisions.","Advances in computing technology today have provided various options for business entities when it comes to conducting business and making business decisions. Various software and hardware solutions today are used by businesses to conduct various aspects of business, including manufacturing, inventory management, marketing, sales and human resources management. Various data indicators are used to forecast business conditions overcome competition and operate efficiently.","Availability of critical information at all times and everywhere is important for a business entity's (or \u201centerprise\u201d) success. It is not only important to measure performance metrics but strategic growth drivers as well. Establishing a balanced view throughout an enterprise is very critical to short term performance and long-term growth.","Traditional boundaries today are disappearing in businesses. More and more businesses are operating across time zones, business lines and marketing segments. In addition to serving multiple market segments, enterprises are employing advanced production and inventory control systems, and outsourcing non-critical functions.","Management emphasis is on improving productivity, which results in increased stockholder value. Enterprises are relying on various specialized business function software like \u201cSupply Chain,\u201d ERP, CRM, Sales automation etc., to provide value to customers.","Most businesses have a combination of legacy and newer business applications, including software and hardware systems. They are also likely to have multiple and\/or dissimilar applications performing similar functions. During mergers and acquisitions of businesses, it is common for companies to inherit a number of systems. Depending on the company these may or may not be integrated. Successful integration typically depends on the organization of strategic objectives and the extent to which processes logically match up to these objectives. Such coordinated integration leads to strategic advantage, e.g., opportunities to share marketing, sales, production, procurement and R&D information.","Information availability and distribution is a major factor in the success of organizations. Since businesses have a number of applications that are critical, availability of information from those systems are also critical to the success of the organization as a whole. Because sources of information can be from different arenas, generating a collective information pool is a problem. Information may be available in many different formats: namely paper, spreadsheet, online\/offline document, proprietary applications etc. Information may also be collected from disparate sources that may be incompatible. Further, the problem is compounded in delivering relevant data to the correct audience. Also, the needs for specific information vary from consumer to consumer, in content and delivery techniques.","With all the options available today, in hardware and\/or software, what is still lacking is a comprehensive and scalable system that allows business entities to collect and analyze meaningful data. Therefore, there is a need for a system that allows collection of data from various sources and the means to filter the collected data based upon user choices.","In one aspect of the present invention a system for information management systems is provided. The system provides for collection of data from multiple, dissimilar and disparate sources having various collection schedules by a plurality of data collectors. It further provides a central database, i.e., a centralized storage of the collected data with ease of maintenance as well as front-end alerts and triggers. The central database has a central data store module for data storage and a central configuration module for configuring the data as well as the components of the system.","The system comprises user interface(s), which facilitate (s) the user (s), to access data from the central database and provides user with a varying degree of options to evaluate accessed data.","The system also provides a reporting module for generating and forwarding user specific scheduled reports from the accessed data in the central database. The presentation of the data could be any time, anywhere and in any format required by the end user. The system also provides an administration module for collecting, monitoring and configuring the collected data, data collectors, central database and the reports for the end user(s).","In another aspect of the present invention there is provided a method for compilation of the data from multiple, dissimilar and disparate sources by the means of various data collectors. API Data Collectors include DTS, XML interactive, remote and legacy data collector(s).","The method of compiling data includes gathering data from plurality of data sources in accordance with a specific collection schedule, parsing, packetizing and transmitting the data to the central database for further processing.","In another aspect of the present invention there is provided a method for storage and maintenance of the collected data by a central database system. The method of storing and configuring data collected includes receiving data from plurality of data sources; storing the received data in the central datastore while generating alerts and front-end thresholds for the received data; and then configuring the received data.","In another aspect of the present invention there is provided a method for presentation of the stored and maintained data in the format required by the end user and at the convenience or requirement of the end user. This method comprises steps of setting up user preferences; collecting end user selected data from the central database; and transmitting the data to the end users based on end user preferences.","In another aspect of the present invention there is provided a method for managing information systems, more particularly managing computerized managed systems. The method of collecting, storing and presenting data, includes collecting data from plurality of data sources by plurality of data collectors; storing and maintaining the collected data; and presenting real time and static data to the users; wherein the presentations could be transmitted periodically or on specific request of the user.","In another aspect, a method for collecting data from plural sources is provided. The method includes, receiving information from plural entities; analyzing the information; and performing trend analysis.","The method also includes, setting up threshold limits for incoming data; comparing incoming data with the threshold limits; and activating an event based on such comparison.","In another aspect of the present invention, a method for transmitting data to plural end-users is provided. The method includes, setting up user preferences; collecting end-user selected data in real time; and transmitting data to the end-users based on end-user preferences.","In another aspect, a system for collecting data is provided. The system includes, plural data collectors that collect data from plural data sources; and reporting module, wherein the reporting module provides various reports based on the data collected from the plural data collectors. The system includes a triggering module that activates an event based on collected data.","In another aspect, a data collection system that allows collection of data from plural sources is provided. The data collection system includes, a collector module that collects data from the plural sources; a parsing module that parses incoming data from the plural data sources; and a collection scheduler that sets up data collection schedules for collecting real time data.","In yet another aspect, a method for defining a data source type for collecting data is provided. The method includes, selecting a data source type with a collector module; assigning tables and\/or views associated with the data source type; and specifying access columns associated with the assigned tables and\/or views, wherein the access column provide drill down capability.","In yet another aspect of the present invention, a method for printing reports using a real time data collection system is provided. The method includes specifying server name; specifying report description; selecting report parameters; selecting target of the report; and sending the report.","This brief summary has been provided so that the nature of the invention may be understood quickly. A more complete understanding of the invention can be obtained by reference to the following detailed description of the preferred embodiments thereof, in connection with the attached drawings.","Features appearing in multiple figures with the same reference numeral are the same unless otherwise indicated.","Definitions:","InfoUser: A user who only views information.","PowerUser: A user who views and analyzes information.","SVG: Scalable Vector Graphics","In one aspect, the present invention provides a system and process for a business organization (also referred as an \u201centerprise\u201d) that improves efficiency and productivity. The system collects data from various data sources, stores and analyzes the data in a central database and distributes it to plural users and\/or devices.","In one aspect, the present system is modular and scalable. The system allows users to add custom components, based on user needs. Users are provided data based on user needs and choice through plural means, including, web-based reports, email alerts or otherwise,","In another aspect the present system includes a plurality of data collectors, a central database, a PowerUser (a user that can analyze and use data in various ways) Interface, an InfoUser (\u201ca user who needs data for information only\u201d) Application Server, an InfoUser Interface package, an Administrator module and a Reporting Options module. Data collectors collect data from a plurality of data sources and the data is stored in the central database (also referred to herein as a \u201cdatabase\u201d) as discussed below.","Administrator module comprises of utilities to set up collection schedules for data collectors, front-end alerts, User-Interface Thresholds, PowerUser and InfoUser accounts and permissions and display devices (also referred to herein as \u201cwidgets\u201d). Administrator module includes utilities to monitor data collectors and their performance; allows design of data transformation service (\u201cDTS\u201d) packages, generate backend tables, and store trigger procedures.","In order to understand the various adaptive aspects of the present invention, the following provides a brief description of a computer system that may be used to implement computer-executable process steps, according to the various aspects of the present invention.",{"@attributes":{"id":"p-0087","num":"0086"},"figref":["FIG. 1A","FIG. 1A"],"b":["10","11","11","10","13","14","11"]},"Computer  includes a computer-readable memory medium such as a rotating disk  for storing readable data. Besides other programs, disk  can store application programs including web browsers by which computer  connect to the Internet and the systems described below.","According to one aspect of the present invention, computer  can also access computer-readable floppy disks storing data files, application program files, and computer executable process steps embodying the present invention or the like via a floppy disk drive . A CD-ROM, or CD R\/W (read\/write) interface (not shown) may also be provided with computer  to access application program files, audio files and data files stored on a CD-ROM.","A modem, an integrated services digital network (ISDN) connection, or the like also provides computer  with an Internet connection  to the World Wide Web (WWW). The Internet connection  allows computer  to download data files, audio files, movies, video, application program files and computer-executable process steps embodying the present invention.","Computer  is also provided with external audio speakers A and B to assist a listener to listen to audio files either on-line downloaded from the Internet, or off-line using a CD.","It is noteworthy that the present invention is not limited to the  architecture. For example, notebook or laptop computers, handheld devices, set-top boxes or any other system capable of running computer-executable process steps, as described below, may be used to implement the various aspects of the present invention.",{"@attributes":{"id":"p-0093","num":"0092"},"figref":["FIG. 2A","FIG. 2A","FIG. 2A"],"b":["10","10","20","21","22","23","24","25","26","27","28","29","15"]},"Audio interface  allows a listener to listen to audio data and video interface  allows user to access video. Printer interface  and scanner interface  provide computer  with connectivity to a scanner and printer (not shown).","As described above, disk  stores operating system program files, application program files, web browsers, and other files. Some of these files are stored on disk  using an installation program. For example, CPU  executes computer-executable process steps of an installation program so that CPU  can properly execute the application program.","Random access memory (\u201cRAM\u201d)  also interfaces to computer bus  to provide CPU  with access to memory storage. When executing stored computer-executable process steps from disk  (or other storage media such as floppy disk  or WWW connection ), CPU  stores and executes the process steps out of RAM .","Read only memory (\u201cROM\u201d)  is provided to store invariant instruction sequences such as start-up instruction sequences or basic input\/output operating system (BIOS) sequences for operation of keyboard .","Computer-executable process steps, according to one aspect of the present invention may be performed using the Internet. The following provides a brief description of the Internet.","The Internet connects thousands of computers world wide through well-known protocols, for example, Transmission Control Protocol (TCP)\/Internet Protocol (IP), into a vast network. Information on the Internet is stored world wide as computer files, mostly written in the Hypertext Mark Up Language (\u201cHTML\u201d). Other mark up languages, e.g., Extensible Markup Language as published by W3C Consortium, Version 1, Second Edition, October 2000, \u00a9W3C may also be used. The collection of all such publicly available computer files is known as the World Wide Web (WWW). The WWW is a multimedia-enabled hypertext system used for navigating the Internet and is made up of hundreds of thousands of web pages with images and text and video files, which can be displayed on a computer monitor. Each web page can have connections to other pages, which may be located on any computer connected to the Internet.","A typical Internet user uses a client program called a \u201cWeb Browser\u201d to connect to the Internet. A user can connect to the Internet via a proprietary network, such as America Online or CompuServe, or via an Internet Service Provider, e.g., Earthlink. The web browser may run on any computer connected to the Internet. Currently, various browsers are available of which two prominent browsers are Netscape Navigator and Microsoft Internet Explorer.","The Web Browser receives and sends requests to a web server and acquires information from the WWW. A web server is a program that, upon receipt of a request, sends the requested data to the requesting user.","A standard naming convention known as Uniform Resource Locator (\u201cURL\u201d) has been adopted to represent hypermedia links and links to network services. Most files or services can be represented with a URL.","URLs enable Web Browsers to go directly to any file held on any WWW server. Information from the WWW is accessed using well-known protocols, including the Hypertext Transport Protocol (\u201cHTTP\u201d), the Wide Area Information Service (\u201cWAIS\u201d) and the File Transport Protocol (\u201cFTP\u201d), over TCP\/IP protocol. The transfer format for standard WWW pages is Hypertext Transfer Protocol (HTTP).",{"@attributes":{"id":"p-0104","num":"0103"},"figref":"FIG. 3A","b":["10","32","26","33","33"]},"WWW interface  may be a modem, network interface card or a unit for providing connectivity to other computer systems over a network using protocols such as X.25, Ethernet or TCP\/IP, or any device that allows, directly or indirectly, computer-to-computer communications. It is noteworthy that the invention is not limited to a particular number of computers. Any number of computers that can be connected to the Internet  or any other computer network may be used.",{"@attributes":{"id":"p-0106","num":"0105"},"figref":"FIG. 3A","b":["35","36","37","32","36","37"]},{"@attributes":{"id":"p-0107","num":"0106"},"figref":"FIG. 1B","b":["100","104","203","102","101","103","103","115","102","101","103","103","115"]},"It is noteworthy that the invention is not limited to the foregoing data sources, other data sources may be used to implement the various adaptive aspects of the present invention.","System  is coupled to a computer network , which is coupled to an InfoUser Interface , PowerUser Interface , peripheral printer  and plural other devices including a computer  (similar to computer ), pager , cell phone , handheld PDA  and telephone . It is noteworthy that the foregoing output devices are merely to illustrate the adaptive nature of the present invention and are not intended to limit the scope of the invention.","InfoUser Interface  may be a computer system, for example, as shown in  or any other computing device. InfoUser Interface  is coupled to System  via an InfoUser Server A, discussed below. An InfoUser application B runs on InfoUser Sever A or InfoUser Interface  to view and\/or edit information from various sources.","PowerUser Interface  may be a computer system, for example, as shown in  or any other computing device. PowerUser Interface  is coupled to System  via a PowerUser Server A, discussed below. A PowerUser application B runs on PowerUser Sever A or PowerUser Interface  that allows users to view and\/or edit information from various data sources A",{"@attributes":{"id":"p-0112","num":"0111"},"figref":"FIG. 2B","b":["104","204","204","204","204","204","203","203","203"]},{"@attributes":{"id":"p-0113","num":"0112"},"figref":"FIG. 2B","b":["106","105","206","206"]},"Various other interface and reporting schemes are also provided and include a java user interface , a browser interface , XML (extensible markup Language) interface , Voice XML interface , wireless interface  coupled to Info-user interface server A and Power user interface server A.","Reporting module  is coupled to scheduling module (\u201creport scheduler\u201d)  that schedules data collection, date alerts, whether print or electronic, according to one aspect of the present invention. Reporting module  is coupled to a pager , and email alert program  that can provide data to users at any time. Also provided is a web-reporting module  operationally coupled to reporting module  that provides web reports, as described below.",{"@attributes":{"id":"p-0116","num":"0115"},"figref":"FIG. 3B","b":["104","104","203","204","106","106","105","105","209","204"]},{"@attributes":{"id":"p-0117","num":"0116"},"figref":"FIG. 3C","b":["203","203","203","203","203","203","203"]},"Prior to discussing the operational flow of System , the following provides a description of the various components of the system of the present invention.","Data Collectors:","In one aspect of the present invention, data collectors collect, parse and packetize (format) data before sending data to storage module A, as described below. Data collectors collect data from a data source and write to Storage Module A. Data collectors may be distributed and\/or centralized. Depending on data collection\/distribution load, data collectors can be bundled together into a single service for load balancing. Each service in that case will execute a number of collectors as threads and each thread with a collector service can be started or stopped without disturbing other threads in the service, as described below.","For a Windows NT service, data collectors are a set of interface objects contained in dynamic link libraries (\u201cDLLs\u201d) that run as an executable program, denoted for illustration purposes as \u201cCSCollector.exe\u201d. A single instance of the program can host multiple collector type objects and each collector type object can host multiple connections.",{"@attributes":{"id":"p-0122","num":"0121"},"figref":"FIG. 4A","b":["203","203","203","402","203","405","204"]},"Typically, database connector  queries database  for setup and configuration information before starting the collection process. After collector module  thread starts successfully, database connector  delivers a collection schedule from database  to collection scheduler .","Each collector thread sets up collection of objects (or data) based on a collection schedule defined by collection scheduler . Depending on the type of schedule, some objects may be requested during plural data collection cycles, while other objects are requested just once. Some data sources can be programmed to deliver data periodically to collector threads.","Once the objects are collected, they are parsed and packetized, by parsing module  and packetizing module . It is noteworthy that module  and  may be included in a single module, as shown below. Data is parsed in two stages by parsing module . Initially parsing module  performs data separation and then parses the data.","When data is received from a data source (including legacy data source), collector module  writes the data to a temporary memory buffer (disk  or RAM ). Collector module  locates the beginning and end of the data using predetermined key words. A complete data report is detected and collector module  extracts the report. The report content is then parsed. Each data report is parsed row-by-row and column values for each row are extracted. Each parsed row may be written to a table and stored in database .","DTS Data Collector",{"@attributes":{"id":"p-0128","num":"0127"},"figref":"FIG. 4B","b":["203","203","402","204","402","104"]},"DTS package A filters collected data and enables system  to provide useful information to users. DTS package A selects the necessary columns from source table(s), including key columns for transformation. The collected data set is filtered to include only those rows that are not in Storage Module A tables. Transformations, if any, are applied to the filtered data set and the result is written in a destination table(s) and stored in Storage Module A.",{"@attributes":{"id":"p-0130","num":"0129"},"figref":"FIG. 4C","b":["402","203"]},"In step S, source tables are received by DTS package A. Source tables include data from the various data sources shown in  and discussed above.","In step S, DTS package A selects columns from the data set, to create a subset of available data based on information needs. This reduced set allows system  to operate efficiently to create the information subset based on customer requirements.","In step S, rows are filtered by DTS package A based on a key value. Most typically the key value is a date\/time stamp.","In step S, data is transformed and sent to database . An example of the data can be web-server log information from a WWW server, where the information is filtered to collect only hits to certain HTML pages of relevance to management.","Structure of DTS Data collector C:","The following section describes the structure of DTS data collector C, as used in a Windows NT environment:","(1) Class CNTService: public CWinApp is an abstract base class","Class CStatusMonitor: public CNTService","MainWorkLoop( ) calls","StartAllCollectors( )calls","StartCollector( )calls","StartConnection( )calls","CDataCollector::Create( ). Inside this function a call is made to CreateDataCollector( ), and an exported function of the collector DLL that is created. This returns a CDataCollectorApi pointer, which is stored for access by the data collector.","CDataCollectorApi::StartConnection( ) is then called.","It is noteworthy that subsection (i) as described above is common to all data collectors.","(ii) class CDtsSchdlCollector:public CDataCollectorApi","StartConnection( ) calls","GetActiveReports( ) which populates CTableRequestCommandArray with CTableRequestCommand objects, one for each scheduled DTS package A.","Then a CDtsSchedule object is created for each connection.","class CDtsSchedule: public CDataCollectorThread: public CWinThread","InitInstance( ) is automatically called which calls:","RunTilDone( ) which is the main execution loop for the thread. It continually calls: TableRequestCommandArray::GetFirstRequestCommandToRun( ). If a DTS package is to be executed, it is accomplished by calling","ExecutePackage( ) which sets up a smart pointer to the DTS Package COM object.","Object Data Transformation Services Package Object (dtspkg.dll):","LoadFromStorageFile( ) is called with the file name of a desired DTS package;","GlobalVariables( ) is then called to validate the Data sourceID; and","Execute( ) is then called to run the package.","DTS package A is responsible for querying database .  shows a process flow diagram for executing Data package A, based on the foregoing commands.","In step S, the collector service begins. The service startup depends on the initial setup, i.e. automatic or manual start. The collector service is the base service that is needed for any type of data collector. The service manages the interface with the Microsoft Windows Operating system and manages resources. S also starts a monitoring thread to allow a system administrator and support personnel to monitor the data collection process.","Step S, initiates an instance of the DTS collector C. DTS collector C runs a DTS package from within the service application.","Steps S and S open a pre-defined DTS package and execute it based on a pre-set schedule of operation.","API Data Collector","API Data Collector D () is used when an API (Application Programming Interface) is available for a data source. Typically the manufacturer of a source system makes the API available. The API allows access to public areas of the source system. Depending on the protocol used, the API can interface directly (connect to a process on the same system), via TCP\/IP or via a COM\/ActiveX Object, CORBA interface among other ways.","Each API Data Collector D is designed and built for a specific data source. API Calls module B interfaces with data sources A and transfers the data to parsing and packaging module A that transfers the processed data to connector . Data is collected from data sources A based on a collection schedule provided by collection scheduler  obtained from database .","XML Data Collector","XML Data Collector D takes XML data and transforms into Storage Module A format tables.","Interactive Data Collector:","Interactive Data Collector E allows interactive collection of data. Interactive Data Collector E captures information from users using interactive question(s) and answer(s). This enables users to input parameters including forecasts, estimates and derived information.",{"@attributes":{"id":"p-0166","num":"0165"},"figref":"FIG. 4E","b":["203","104","203"]},"Data collector E performs plural functions, including, the following:","(a) Allows system administrators to enter\/create a questionnaire; assign a group of people to the questionnaire for responses; and define a schedule for collection;","(b) Prompt a user for input at scheduled times by sending them an email with a link to a web page; and","(c) Accept responses from users via a web page.","With respect to , receiving module A receives user input which is collected by collector . The data is parsed and packetized by module A and sent to database  via connector . Collection scheduler  sets up an alert system, preferably, of electronic mail (email) that is sent to the user.","System administrators are able to create a questionnaire which may have the following attributes:","1. Questionnaire title","2. List of Users\u2014Who respond to the questions","3. Presentation schedule\u2014When and how often are the question(s) presented?","A questionnaire may include multiple questions. Each question has a set of properties. These properties include:","Type of Question:","(a) True\/False","(b) Multiple Choice","(c) Range Type","(d) Numeric","(e) Text input","Typically, a User responds to an email and logs into System . Thereafter, System :","a) Validates the user to ensure the user can respond to the questionnaire;","b) Present the user with a list of questionnaire that need input;","c) On selection of a questionnaire from a list, System  creates and displays the page;","d) Allows the user to save work and come back to it later; and","e) When the user responds, processes the input and store the results in database .","An example of the questionnaire with the presentation schedule is provided in .",{"@attributes":{"id":"p-0190","num":"0189"},"figref":"FIG. 4G","b":"203"},"In step S, an email is sent to user(s) with a link or attached questionnaire.","In step S, the user accesses the questionnaire and responds to the questions.","In step S, user response is received by receiving module A and then sent to collector .","Legacy Data Collector: Legacy collector(s) B (also referred to herein as ) are capable of retrieving data from legacy data systems, which can be accessed through a terminal, interface, for example, the ACD system such as Rolm 9005, sold by Siemens Corporation\u00ae and Lucent\u00ae CMS, sold by Lucent Corporation. Legacy Data Collector B allows System  to retrieve data using a serial or Internet Protocol (IP) based terminal connection.","Legacy data collection systems typically have a proprietary interface for third party interaction. Legacy Data Collector B is designed and built for each legacy data source and includes serial and telnet interfaces along with TTY and ANSI (VT100) screen interfaces. Legacy Data Collector B may use a menu command structure to find the right information, which is parsed and written to Storage Module A.","An example of Legacy Data Collector system B is shown in  block diagram. The system can use one or more collectors. Each Legacy Data Collector B is operationally coupled to a data source through either a serial connection or Telnet connection. (Data sources A\u2013C)","Typically, data is returned by a data source in the form of tabular report. The legacy system generates the report upon a command entered by the user on a terminal (not shown). Some systems allow certain reports to be generated periodically until another command is issued to terminate it. Other reports may be requested each time it is needed. Legacy collector B reads metadata (machine understandable information for the web) from database . From the metadata, the legacy collector B determines what data to gather and when to issue the command to request that data from the source.","Class Diagram:",{"@attributes":{"id":"p-0199","num":"0198"},"figref":"FIG. 6E","b":["600","602","203"]},"CdataCollectorApi  is common to all modules and starts up the collector service. In addition to starting the collector service module  reads the configuration for collection properties from the database  and then initializes other modules as needed.","CthreadCollector  starts an instance of collector thread. A collector may have more than one thread and therefore multiple threads may be spawned for a collector. In the instance of the Rolm 9005 a collector thread is spawned for each defined serial\/telnet connection to the data source.","CdataCollectorThread  starts up various connections specific components like the communication driver, the configuration information component, and the data stuffer module etc.","Crolm9005Thread  is the actual collector thread for the Rolm9005 data collector. The thread performs the following:","Performs login to the Rolm 9005","Issues collection commands to the Rolm 9005 collector for automatic report dumping.","Issues commands for real-time data collection Collects reports to parse and perform initial data manipulation and then sends them tto database .","Remote Data Collector","Remote Data Collector F, described below, allows data to be collected from remote data sources. Remote Data Collector F collects information from data sources located at remote sites.",{"@attributes":{"id":"p-0209","num":"0208"},"figref":"FIG. 6B","b":["203","405","203","405","15","405","405","405","204"]},"Remote Connector A commands request handler B for data, and Request Handler B delivers the data. This allows remote collector G to obtain data from local storage C. (See )","When an event (alert\/threshold violation) H, (as shown in ) occurs, Request Handler B initiates a transfer process to indicate the event. Remote handler B sends a series of messages to remote connector A. These messages contain conditions of threshold violation and a message to initiate a data transfer session. Upon receiving the on-event message H, remote connector A completes the alerting action before starting a data transfer activity. This allows for timely alerts without data transfer and processing delays. It is noteworthy that this may be the ad hoc mode for data-transfer from data collector F to database .","It is also noteworthy that a remote collector F may be configured for a specific data-source.","Local Storage C:","Tables at local storage C follow similar design as the tables in Storage Module A discussed above. Local storage C may also contain tables for \u201calert\u201d and \u201cthreshold\u201d information. This will allow remote collector F to do on-event data transfer.","Collector Set-Up:","At system start-up , Remote connector A initiates a TCP\/IP session with request handler B to transfer configuration information, including data collector rights, collection objects, collection schedules, and alert and threshold information. The TCP\/IP protocol allows remote collector F to start and connect to a data source.","Data transfer may follow XML data formats. Requests for data and data delivery may follow XMLP (XML Protocol) being developed by W3C (World Wide Web Consortium). To ensure data security, remote collector F architecture follows XML Encryption standards or other industry standards.","Database :",{"@attributes":{"id":"p-0219","num":"0218"},"figref":"FIG. 7A","b":["204","204","204","204","204","204","203","204"]},"Each data store consists of tables, views, triggers for front-end thresholds and stored procedures for transforming & validating the data. The data store includes two kinds of data structures. For interval information, the tables contain successive rows of information. Each row represents a unique value or summary for the interval.  shows an example of such interval data. Correspondingly, snapshot information contains just one row of information per unique key, as shown in .","Configuration Module B","System  configuration and setup information is centralized and stored in configuration module B, which stores all configuration information for data collection, data source type definition, defining display layouts, storing report files and user permissions.","The configuration information is used to drive data collectors , PowerUser interface , InfoUser interface , Web Server module, user profiles and Reporting Options module .","Relevant Tables:","Strict information tables: The information tables are part of the main data store in database . These tables hold information from a data source. Periodic historical tables keep information over time and transient real time tables are rewritten with every update.",{"@attributes":{"id":"p-0226","num":"0225"},"figref":"FIG. 8A","b":["203","800","800"]},"Current status summary is provided by table C with details in table D. Table E provides the overall System summary.","Table F provides agent summary information on each agent defined on the data source, while table G provides position information for each agent position. An agent and agent position are different entities as defined on the Rolm 9005. Table H provides information on all the calls that have been answered by agents.","Alert Threshold Database Schema:",{"@attributes":{"id":"p-0230","num":"0229"},"figref":"FIG. 8B","b":"204"},{"@attributes":{"id":"p-0231","num":"0230"},"figref":"FIG. 8B","b":["801","801","801","801"]},"Alerts and Thresholds are setup to evaluate pre-defined conditions of incoming or displayed data. The alerts and thresholds are setup independent of the action that may be taken when the conditions are met. They can be setup on available data columns (Table B). An alert\/threshold can consist of many levels of conditions connected by \u2018AND\u2019 and \u2018OR\u2019 clauses. Tables C, D and E hold the alerts\/thresholds definitions. Alert conditions are evaluated when data in inserted into the database (the time of collection) while thresholds are evaluated when a user is viewing information (late-model evaluation).","Defined alerts\/thresholds are associated with actions (schemas). Schemas define the action that needs to be taken when a condition is met. The actions themselves are defined in tables I, L, M, N.","Table G defines the messages that will be sent out when an alert occurs.","Tables F, H, J, K define the various display time associations for the thresholds. Thresholds can be associated with multiple display widgets.","In one aspect of the present invention, system  can define and implement a stealth (pre-indicator) threshold evaluation. The pre-indicator allows a user to monitor a set of values and be alerted when a condition on related value met. This reduces the load on viewing and allows managers to concentrate on key indicators only. By allowing threshold evaluations on non-displayed data elements, users can be pre-notified of events based on a set of rules.","Schema\/Properties:","Property sets are a set of pairs with identification and a value. Each identification is associated with a description. Property sets may be maintained for widget types, widget instances and others, such as thresholds. A property set can be active or inactive. Its ability to change can be controlled. It can be associated with a particular setup such as \u201cdefault out of the box\u201d, and user defined \u201cScreens\u201d. Properties can be associated with schemas, or a group of property sets together. These schemas can further be associated with specific user logins.",{"@attributes":{"id":"p-0239","num":"0238"},"figref":"FIG. 8C","b":["802","802","802","802"]},"Table B sets properties associated with identification, while table C sets property value lists. Table D sets property values, as shown in .","Tables\/Columns:","Permission tables (and views) which can be accessed through PowerUser Interface  are listed in a table and may be associated with a different name than the one used in database  stored in the database  tables. These permission tables are linked to a data source type and an object type (such as a table or view). Plural column values are stored with each object.","Each database  object can contain columns, which are listed in another table. These columns are recorded with an Identification (ID), parent object Id, name and type. User defined columns can be defined in another table that allows the user to combine existing columns to form a new column, performing some calculations or processing during column handling.","Permissions are handled through a table that contains an ID of the grantee and the grantor of authority, the time authority is granted, the data source granted for, and the object granted access to.",{"@attributes":{"id":"p-0245","num":"0244"},"figref":"FIG. 8D","b":["804","804","804","804","804","804","804"]},"It is noteworthy that table C is coupled to table G and F such that Powerusers and InfoUsers can only view those widgets and display items that they have permission to view based on Table C.","Data Source\/Reports\/Collection:","In one aspect of the present invention, System  maintains a list of data source types. A data source type is linked to a set of reports. A data source type report contains information on report identification, data source type identification (\u201ctypeID\u201d), report type, report name, and the objects that are in the report.","A data source can be created with a typeID and information such as its name, global position, active status, and what module is to be used when collecting information. A connection can be associated with a data \u201csourceId\u201d. There can be 0 to many connections for any data sourceId. A data source type report schedule contains information on the data sourceId, connectionId, reportId, when and how often to collect data, the command string that can be used, and a flag indicating whether to process the schedule or not.",{"@attributes":{"id":"p-0250","num":"0249"},"figref":["FIG. 8E","FIGS. 8I through 8P"],"b":["805","805","805","805","805","805","805","805","805","805","805","805","805","805","805"]},{"@attributes":{"id":"p-0251","num":"0250"},"figref":["FIGS. 8I to 8P","FIG. 8I","FIG. 8J"],"b":["104","809","809"]},"The first step in the wizard is to name the data source type and select a collector module. This is done in . Data source types will be used in defining actual data sources while the collector module is used to retrieve data from them.","The second step in the wizard is the Add\/Create Objects dialog (). This dialog allows assigning tables\/views to the data source type being created. The assigned tables can either be chosen from the predefined list of tables in the database or can be created. Custom views may be defined with a table. Once a table\/view is associated with a data source type, its column properties can also be edited.","When a table is selected to be assigned to the data source type, a list of views of that table will be displayed (). From the Create\/Select View dialog the user can select a pre-existing view or create a new one.","All selected predefined tables and views are displayed in the Assigned Objects area of the Add\/Create Objects dialog. (See Assigned Objects area of ).","The next dialog in the wizard is the Add Object Properties dialog (). This dialog allows a user to specify a user friendly name and the object type for the objects assigned to this data source type. This data is used for configuring users, data sources, widgets, thresholds and schemas.","The Specify Access Columns dialog () is the final step in the Data Source Type Setup Wizard. This dialog allows the user to specify the access columns associated with each of the assigned objects of this data source type. The access columns are actually the columns on which the different levels of drill down capability the PowerUser depends on. The data may be grouped at different levels based on the specified access columns.","Once the user clicks on the Finish button, the data source type is created. A data source can now be defined using this data source type.","Widget\/Instances:","A base display item is called a widget or a widget type, for example, a gage is a widget (type). An instantiation of a widget is called a widget instance. A widget instance is a particular display format of a particular set of information.",{"@attributes":{"id":"p-0261","num":"0260"},"figref":"FIG. 8F"},"\u201ctblWidgets\u201d E contains the widget types available for all widgets, the name of widget types. \u201ctblPropertySetPropertyValues\u201d A contains basic information on properties for widget type. By using \u201ctblPropertySetProperties\u201d and \u201ctblWhereUsedIDGenerator\u201d (not shown) any of the properties in \u201ctblPropertySetProperties\u201d A can be expressed for a widget.","In tblWidgetInstances G, a display item is associated with a widget type which determines how information is displayed in terms of format. It is also linked to tblPropertySetProperties A, so that each individual login (and subset) can have its own set of property values defined for the widget instance.","InfoUser Tables:",{"@attributes":{"id":"p-0265","num":"0264"},"figref":"FIG. 8G","b":["807","204","204"]},"InfoUser application B users share a set of SQL logins rather than each individual having a SQL login. There is a login for the InfoUser Application B rather than for its users, and all users of the application share that connection (or pool of connections). An InfoUser layout is defined in tblInfoLayouts D with an associated name and description. TblWidgetInstancesForLayouts E specifies which WidgetInstances are defined for a layout, including the location, color, label, and other configuration information for a display item. These are specific to a display item in a specific layout. The same item may be in a different layout with a different position or color.","Further individual users may define their own properties, which allow different users to have different properties for the same display item in the same layout. Whether a user has this right is specified in tblInfoUserAccessibleLayouts E,","Report Printing:","Report Scheduler , described below, stores its schedule and configuration information in configuration module B. Schedules are based on machine name in tblScheduledReports B () which define when and how to produce a report, and parameters necessary to produce the report. Table B is linked to table C and A for generating reports.","Table A provides a listing of Report ID with parameter names.","PowerUser Interface :","PowerUser Interface  is designed for a user who views and analyzes information. PowerUser Interface  may be a computing system described above with respect to . PowerUser Interface  may connect to database  using direct ODBC connections A. Real time information is delivered using ODBC queries.","PowerUser Interface  can retrieve defined widgets from database  and group them under data sources, as well as, widget types. On selecting a particular widget, predefined properties of that specific widget is retrieved and displayed on a display screen.","PowerUser Interface  supports plural types of widgets, including gauges, graphs, billboards and charts. Threshold analysis is performed on the retrieved data before it is displayed by the widgets. The threshold violations may be displayed as change of colors on the screen.",{"@attributes":{"id":"p-0275","num":"0274"},"figref":["FIG. 9","FIG. 9A"],"b":["204","106"]},"In step S, a login window authenticates the user before providing access to database . An example of a login window is provided in . A user can login using SQL Server profile or Domain information.","In step S, database access is obtained through a series of predefined stored procedures using ODBC (Open Database Connectivity). This is achieved through the Microsoft\u00ae Foundation Classes (MFC) wrapper classes, CDatabase and CRecordset. In one aspect, a CDatabase object is constructed and a valid connection is established at startup. Then a CRecordset object is created to operate on the connected data source and retrieve the required data.","In step S, a user is allowed to view items on a display device in PowerUser Interface . The number of displayed items depends on user permissions. The user is allowed to view only those display items that are linked to permitted tables.","In step  a report layout is selected and saved. The permitted items can be viewed and the options for selecting report output include printable reports, screen layouts including real time display. Static reports may also be viewed in step A after gaining access to the central database .",{"@attributes":{"id":"p-0280","num":"0279"},"figref":"FIG. 9C","b":"900"},"User permissions allow a user to view information from a sub-section of any data-source. These permissions also restrict a user's ability to drill-down (view more details) or drill-up (view less of details).","Printable static reports may be displayed on PowerUser Interface . Reports may be created and displayed using proprietary formats, e.g., the Seagate Crystal\u00ae component, which allows users to drill down and view details. PowerUse Interface  allows for saving a copy of the report in a variety of formats.  is an example of such a format.","A user can select any display item from tree structure  and the corresponding data item will be displayed as a floating window. The display item and the corresponding gauge type may be predefined. New display items can be created and & saved (See ).","Screen Layouts can be stored and users can define new Layouts. For example, each layout may be a representation of a business profile. A user can define custom display items and thresholds for those display items.  is an example of a user defined custom layout.","PowerUser Interface Application B:","GUI Widgets:","As discussed above, PowerUser Interface  supports plural widget types. For example, gauges, graphs, billboards and charts. These widgets are defined by clases, for example, \u201cCSpeedo, CGraph, CBillBoard and CChart\u201d respectively. All the classes are derived from a base class, CGUIWidget. The main functionality of the CGUIWidget class is to provide a base set of functionality for each available (or future) display widget. The base functionality includes such things as requesting data, updating data on the display item, evaluating thresholds, and display related functionality. The main functionality of each of the display item specific classes is to create and display the widgets.","Thresholds and Schemas:","PowerUser Interface application B can analyze thresholds on retrieved data before it is displayed by widgets. Thresholds specify a criterion for a widget. The sensitivity of threshold violations is increased by sequences and comparisons. Each sequence can be associated with one or more set of comparisons, between a field and a value. Instead of specifying that a threshold has reached an optimal value, a user can specify whether it is lower than a minimum value, higher than a maximum value or falls within a range.","Sequences are evaluated in order. Sequence \u2018one\u2019 is considered to be most restrictive by PowerUser Interface application B. Each sequence is associated with a schema that takes effect when that threshold is violated. The schema can be composed of actions and properties, such as change background color or sending email. The threshold violations are then displayed as change of colors on the screen. The colors displayed are defined using schemas and hence can differ from one GUI widget to another.","Drill Down Capability:","PowerUser Interface application B allows a user to view details of a widget by selecting one of the displayed widgets. This provides a menu listing different levels of details that may be available for viewing depending on a defined data source. For example a user can drill down from the corporate level to an individual agent. The values displayed by the selected widget will also change accordingly, to reflect the result.","Proprietary Reports:","PowerUser Interface application B, displays historic data in proprietary report formats. A set of predefined report formats are installed on a client's computer by an installation process. PowerUser Interface application B searches the system disk based on the report path entered by the user and loads the report formats and displays them in the same hierarchy level as installed in the disk. Selecting a specific report format will retrieve the defined parameters in it, from the database and prompts the user for their values. Then based on the user input, it the retrieves the actual data to display the report.","When application B starts, lists of widget instances categorized under widgets and data sources are loaded from database . These lists are used to populate the widget instances in a tree structure  under the parent items \u201cData Sources\u201d and \u201cCritical Indicators\u201d. Similarly the layouts are also retrieved from database , stored locally. The report formats are loaded from the system disk (e.g. disk ) and the tree is populated in the same hierarchy level as installed in the disk. Application B also launches the data collection thread in the background, which when notified retrieves updated property values of the active widget instances from database . The widget instances are then redrawn to reflect the changes.","Creating Widgets:","Shown below are the steps in creating a widget and the relevant objects used to hold widget properties and data:","Step 1:CHierarchyTree::DisplayWidgetWindow (long nWidgetInstanceID) function is called when a widget instance is selected from tree , passing its unique ID. This function retrieves the widget name and the data source type via a call of the stored procedure spGetAllWidgetInstances. Then a CWidgetInstance object is created and the above values are used to get the specific properties required to display the widget, as shown in .","Step 2: Using the stored procedure call of spGetWidgetInstanceProperties passing in ID_Type as 0, InstanceID, ResultsetOption as step 4, as seen in the example below, CWidgetInstance::m1stColumnNames is populated with CWidgetProperty objects, each representing a row in the result set.","Step 3: CHierarchyTree creates a CPowerUserDoc object and passes in a reference to the CWidgetInstance object updated in step 2. CPowerUserDoc::m1stColumnNames is set a reference to the updated property list, CWidgetInstance::m1stColumnNames.","Step 4: The application's document, CPowerUserDoc::Initialize( ) function creates a CTableAccessAuthoritiesObject object. Necessary attributes of this object are set. Also CTableAccessAuthoritiesObject::m1stColumnNames is set to reference a CPowerUserDoc::m1stColumnNames.","Step 5: Using the CTableAccessAuthoritiesObject object created in step 4, a CDatabaseRequest object is created by a call to the function CPowerUser::AddDatabaseRequest( ) and added to the list maintained by the application. The CDatabaseRequest::m1stColumnNames is set to CTableAccessAuthoritiesObject::m1stColumnNames. The CPowerUserDoc::m_pDatabaseRequest member is set reference to this newly created CDatabaseRequest object.","Step 6: The threshold and schema properties of the widget instance, if existing, are then updated by calling the functions","CPowerUserDoc::GetThreshold( ) and CPowerUserDoc::GetSchema( ).","Step 7: The CDatabaseRequest object is used to construct a query. This query is executed every n seconds, where n is the refresh rate chosen by the user. The result set that is returned by the query is placed into a new CReturnedList object. The CReturnedList::m1stColumnValues member is populated with the new CReturnedValues objects. If the column represents an aggregate type, the m_sColumnName is populated with the column name from the result set, which is the display column name, not the actual column name. This is due to using the display column name for the \u201cAS\u201d value in the query.","Step 8: Next the application's view, CPowerUserView::Initialize( ) function is called, passing the Widget type ID and the list of all properties (m1stColumnNames) specific to the widget instance. Depending on the widget type ID, the specific GUI (graphical user interface) Widget is created and it's Initialize( ) function called, passing in all its properties.","Step 9: The Initialize( ) function of the individual GUI Widgets updates all the property variables from the list of properties passed. Then the drawing function of the GUI Widgets is called to display it on the screen according to the specified properties.","Step 10: For an active GUI widget, the data collection thread running in the background is signaled. This process calls the handler function CMainFrame::DataRefreshed( ), which iterates through each of the open document and calls the function CPowerUserDoc::AcceptData( ) for each of them.","Step 11: CPowerUserDoc::AcceptData( ) deletes the existing list of CReturnedList object maintained for each of the open documents and recreates it from the CDatabaseRequest object associated with it. A change in the document triggers the framework to refresh its view.","Step 12: Any number of GUI widgets can be instantiated. For each active GUI widget, the property values are updated from database  at regular intervals depending on the refresh rate, which can be specified by the user. Adjusting the refresh rate can optimize database  traffic.","The widgets can be arranged in any layout on the screen and layouts can be saved with a unique name, by clicking the \u201cSave Layout\u201d toolbar\/menu.","Clicking on a previously saved layout closes all the currently active child windows and draws the windows corresponding to the GUI Widgets saved in the layout, in their respective positions. These widgets now become the currently active ones and they are updated accordingly at the specified refresh rate. A predefined layout can be either updated or deleted.","Clicking on a Report format prompts the user for the parameter values as discussed, and depending on the user input, the actual report is generated.","Infouser Application Server A:","InfoUser Application server A is a scalable data server used by InfoUser Interface  to operationally couple with database . It may be written using Java 2.0 standards. Data information may be aggregated by Java Servlets. Industry standard XML (http\/https) server may be used to conduct the InfoUser interactions. Server A validates, aggregates and delivers information to a browser-based user interface.","InfoUser Application server A consists of two parts, as shown in :","1. Web module(s) C is used for publishing information; and","2. InfoUser application B used for viewing information.","InfoUser Application B:","An end-user client to view information on a proprietary user interface application uses InfoUser Interface . Application B is cross-platform compatible and allows users to perform the following functions:","Login to system ;","Request user viewing rights;","Define display data and position them on a window;","Save layout(s); and","Make requests for the information","Web Modules C:","Web modules C responds to requests from InfoUser application B, web-browsers and other devices. Depending on browser type, a suitable response is sent back.","Web module C performs the following functions:","Allows users to login and validate them on database ;","Generate and deliver an InfoUser Interface  configuration document;","Allow InfoUser's to store display profile at database ; and","Process InfoUser queries and deliver data.","XML Protocol Fragments:","Following are some XML protocol fragments describing communication between an InfoUser Interface  and the web delivery system C.","Login Request ():",{"@attributes":{"id":"p-0336","num":"0335"},"tables":{"@attributes":{"id":"TABLE-US-00001","num":"00001"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"175pt","align":"left"}}],"thead":{"row":{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"<centerStats>"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"189pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"<infoUser>"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"175pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"<login>"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"56pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"161pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"<userName>UserName<\/userName>"]},{"entry":[{},"<password>Password<\/password>"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"175pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"<\/login>"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"189pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"<\/infoUser>"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"<\/centerStats>"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}]}}]}}},"Login request allows users to login to a web-server and be validated. If this is a valid user for System , an acknowledgement is sent back to the user.","Acknowledgement may be of the form:",{"@attributes":{"id":"p-0339","num":"0338"},"tables":{"@attributes":{"id":"TABLE-US-00002","num":"00002"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"175pt","align":"left"}}],"thead":{"row":{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"<centerStats>"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"189pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"<infoUser>"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"175pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"<loginAck>"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"56pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"161pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"<userName>UserName<\/userName>"]},{"entry":[{},"<Status>LOGIN_OK<\/status>"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"175pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"<\/loginAck>"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"189pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"<\/infoUser>"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"<\/centerStats>"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}]}}]}}},"Once a user is acknowledged as LOGIN_OK (LOGIN_FAILED for failure), the user may make requests for layout configuration information.",{"@attributes":{"id":"p-0341","num":"0340"},"tables":{"@attributes":{"id":"TABLE-US-00003","num":"00003"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"70pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"147pt","align":"left"}}],"thead":{"row":{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"<centerStats>"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"56pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"161pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"<infoUser>"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"70pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"147pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"<requestLayoutConfig\/>"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"56pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"161pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"<\/infoUser>"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"175pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"<\/centerStats>"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}]}}]}}},"Upon receiving layout configuration information, the InfoUser application B set's up the user interface with the items to display.","Layout configuration response may be as below:",{"@attributes":{"id":"p-0344","num":"0343"},"tables":{"@attributes":{"id":"TABLE-US-00004","num":"00004"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"thead":{"row":{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"<centerStats>"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":"\u2003<infoUser>"}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"<refreshTimer>timerValueInSeconds<\/refreshTimer>"]},{"entry":[{},"<layoutConfig>"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"189pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"<displayItem>"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"175pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"<label>LabelName<\/label>"]},{"entry":[{},"<type>DisplayItemType<\/type>"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"<position\u2003x=xpos\u2003y=ypos\u2003width=width\u2003height=height"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":"isTitle=true\/>"}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"175pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"<query>Query Statement<\/query>"]},{"entry":[{},"<threshold>"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":"\u2003<Range id=1 low=lowLimit high=highLimit color=rangeColor\/>"}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"5"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"21pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"49pt","align":"left"}},{"@attributes":{"colname":"4","colwidth":"77pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"<Range","id=2","low=lowLimit","high=highLimit"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":"color=rangeColor \/>"}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"5"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"21pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"49pt","align":"left"}},{"@attributes":{"colname":"4","colwidth":"77pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"<Range","id=3","low=lowLimit","high=highLimit"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":"color=rangeColor \/>"}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"5"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"21pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"49pt","align":"left"}},{"@attributes":{"colname":"4","colwidth":"77pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"<Range","id=4","low=lowLimit","high=highLimit"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":"color=rangeColor \/>"}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"5"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"21pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"49pt","align":"left"}},{"@attributes":{"colname":"4","colwidth":"77pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"<Range","id=5","low=lowLimit","high=highLimit"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":"color=rangeColor \/><\/threshold>"}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"189pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"<\/displayItem>"]},{"entry":[{},"<displayItem>"]},{"entry":[{},"<\/displayItem>"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"<\/layoutConfig>"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"\u2003<\/infoUser>"},{"entry":"<\/centerStats>"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}]}}]}}},"Based on a timer value an InfoUser requests for new data. This request may be made as:",{"@attributes":{"id":"p-0346","num":"0345"},"tables":{"@attributes":{"id":"TABLE-US-00005","num":"00005"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"56pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"161pt","align":"left"}}],"thead":{"row":{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"<centerStats>"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"175pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"<infoUser>"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"56pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"161pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"<requestData>"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"70pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"147pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"<requestDataValue \\>"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"56pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"161pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"<\/requestData>"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"175pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"<\/infoUser>"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"189pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"<\/centerStats>"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}]}}]}}},"And the corresponding reply is of the form:",{"@attributes":{"id":"p-0348","num":"0347"},"tables":{"@attributes":{"id":"TABLE-US-00006","num":"00006"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"175pt","align":"left"}}],"thead":{"row":{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"<centerStats>"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"189pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"<infoUser>"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"175pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"<requestData>"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"56pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"161pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"<displayItem>"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"70pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"147pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"<label>LabelName<\/label>"]},{"entry":[{},"<value>dataValue<\/value>"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"56pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"161pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"<\/displayItem>"]},{"entry":[{},"<displayItem>"]},{"entry":[{},". . ."]},{"entry":[{},"<\/displayItem>"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"175pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"<\/requestData>"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"189pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"<\/infoUser>"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"<\/centerStats>"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}]}}]}}},"Once the InfoUser application B gets the response, it updates the displays to reflect the new values. The display items also perform threshold analysis to show appropriate colors in display device.","InfoUser maintains an internal timer to make repeating queries.","In addition InfoUser is able to create display items and save the layouts.","The following fragments show those interactions.","Request User Rights:",{"@attributes":{"id":"p-0352","num":"0351"},"tables":{"@attributes":{"id":"TABLE-US-00007","num":"00007"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"70pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"147pt","align":"left"}}],"thead":{"row":{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"<centerStats>"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"56pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"161pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"<infoUser>"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"70pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"147pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"<requestUserRights\/>"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"56pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"161pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"<\/infoUser>"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"175pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"<\/centerStats>"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}]}}]}}},"Response to User Rights:",{"@attributes":{"id":"p-0354","num":"0353"},"tables":{"@attributes":{"id":"TABLE-US-00008","num":"00008"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"thead":{"row":{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"<CenterStats>"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":"\u2003<infoUser>"}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"<userRights>"]},{"entry":[{},"<source>"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"189pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"<sourceName>SourceName<\/sourceName>"]},{"entry":[{},"<table>"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"175pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"<tableName>TableName<\/tableName>"]},{"entry":[{},"<keyColumn>KeyColumn<\/keyColumn>"]},{"entry":[{},"<keyValue>KeyValue<\/KeyValue>"]},{"entry":[{},"<column>ColumnName<\/column>"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"189pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"<\/table>"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"<\/source>"]},{"entry":[{},"<source>"]},{"entry":[{},". . ."]},{"entry":[{},". . ."]},{"entry":[{},". . ."]},{"entry":[{},"<\/source>"]},{"entry":[{},"<\/userRights>"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"\u2003<\/infoUser>"},{"entry":"<\/CenterStats>"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}]}}]}}},"Layout Definition:",{"@attributes":{"id":"p-0356","num":"0355"},"tables":{"@attributes":{"id":"TABLE-US-00009","num":"00009"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"thead":{"row":{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"<centerStats>"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":"\u2003<infoUser>"}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"<refreshTimer>timerValueInSeconds<\/refreshTimer>"]},{"entry":[{},"<layoutConfig>"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"189pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"<displayItem>"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"175pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"<label>LabelName<\/label>"]},{"entry":[{},"<type>DisplayItemType<\/type>"]},{"entry":[{},"<position x=xpos y=ypos width=width height=height"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":"isTitle=true\/>"}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"175pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"<query>Query Statement<\/query>"]},{"entry":[{},"<threshold>"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"5"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"56pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"21pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"49pt","align":"left"}},{"@attributes":{"colname":"4","colwidth":"63pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"<Range","id=1","low=lowLimit","high=highLimit"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":"color=rangeColor \/>"}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"5"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"56pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"21pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"49pt","align":"left"}},{"@attributes":{"colname":"4","colwidth":"63pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"<Range","id=2","low=lowLimit","high=highLimit"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":"color=rangeColor \/>"}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"5"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"56pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"21pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"49pt","align":"left"}},{"@attributes":{"colname":"4","colwidth":"63pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"<Range","id=3","low=lowLimit","high=highLimit"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":"color=rangeColor \/>"}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"5"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"56pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"21pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"49pt","align":"left"}},{"@attributes":{"colname":"4","colwidth":"63pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"<Range","id=4","low=lowLimit","high=highLimit"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":"color=rangeColor \/>"}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"5"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"56pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"21pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"49pt","align":"left"}},{"@attributes":{"colname":"4","colwidth":"63pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"<Range","id=5","low=lowLimit","high=highLimit"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":"color=rangeColor \/>"}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"175pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"<\/threshold>"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"189pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"<\/displayItem>"]},{"entry":[{},"<displayItem>"]},{"entry":[{},". . ."]},{"entry":[{},". . ."]},{"entry":[{},". . ."]},{"entry":[{},"<\/displayItem>"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"<\/layoutConfig>"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"\u2003<\/infoUser>"},{"entry":"<\/centerStats>"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}]}}]}}},"XML DTDs:",{"@attributes":{"id":"p-0358","num":"0357"},"tables":{"@attributes":{"id":"TABLE-US-00010","num":"00010"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"189pt","align":"left"}}],"thead":{"row":{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"<?xml version=\u201c1.0\u201d?>"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":"<!DOCTYPE CenterStats ["}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"<!ELEMENT infoUser (login, loginAck, requestLayoutConfig,"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":"layoutConfig, requestData, requestUserRights, userRights)>"}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"<!ELEMENT login (userName, password)>"]},{"entry":[{},"<!ELEMENT userName (#CDATA)>"]},{"entry":[{},"<!ELEMENT password (#CDATA)>"]},{"entry":[{},"<!ELEMENT loginAck (userName, status)>"]},{"entry":[{},"<!ELEMENT userName (#CDATA)>"]},{"entry":[{},"<!ELEMENT status (LOGIN_OK | LOGIN_FAILED)>"]},{"entry":[{},"<!ELEMENT requestLayoutConfig (EMPTY)>"]},{"entry":[{},"<!ELEMENT layoutConfig (refreshTimer, displayItem+)>"]},{"entry":[{},"<!ELEMENT refreshTimer (#CDATA)>"]},{"entry":[{},"<!ELEMENT displayItem (label, type, position, threshold)>"]},{"entry":[{},"<!ELEMENT label (#CDATA)>"]},{"entry":[{},"<!ELEMENT type (#CDATA)>"]},{"entry":[{},"<!ELEMENT position EMPTY>"]},{"entry":[{},"<!ATTLIST position x CDATA \u201c0\u201d>"]},{"entry":[{},"<!ATTLIST position y CDATA \u201c0\u201d>"]},{"entry":[{},"<!ATTLIST position width CDATA \u201c0\u201d>"]},{"entry":[{},"<!ATTLIST position height CDATA \u201c0\u201d>"]},{"entry":[{},"<!ATTLIST position isTitle (0 | 1) \u201c1\u201d>"]},{"entry":[{},"<!ELEMENT threshold (range+)>"]},{"entry":[{},"<!ELEMENT range EMPTY>"]},{"entry":[{},"<!ATTLIST range id (1 | 2 | 3 | 4 | 5) \u201c1\u201d>"]},{"entry":[{},"<!ATTLIST range low CDATA \u201c0\u201d>"]},{"entry":[{},"<!ATTLIST range high CDATA \u201c0\u201d>"]},{"entry":[{},"<<ATTLIST range color CDATA \u201cDefault\u201d>"]},{"entry":[{},"<!ELEMENT requestData (displayItem+)>"]},{"entry":[{},"<!ELEMENT displayItem (label, query, value)>"]},{"entry":[{},"<!ELEMENT label #CDATA>"]},{"entry":[{},"<!ELEMENT query #CDATA>"]},{"entry":[{},"<!ELEMENT value #CDATA>"]},{"entry":[{},"<!ELEMENT requestUserRights EMPTY>"]},{"entry":[{},"<!ELEMENT userRights (source+)>"]},{"entry":[{},"<!ELEMENT source (sourceName, table+)>"]},{"entry":[{},"<!ELEMENT sourceName #CDATA>"]},{"entry":[{},"<!ELEMENT table (tableName, keyColumn, keyValue*,"]},{"entry":[{},"columnName+)>"]},{"entry":[{},"<!ELEMENT tableName #CDATA>"]},{"entry":[{},"<!ELEMENT keyColumn #CDATA>"]},{"entry":[{},"<!ELEMENT keyValue #CDATA>"]},{"entry":[{},"<!ELEMENT columnName #CDATA>"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"]>"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}]}}]}}},"InfoUser Interface :","InfoUser Interface  is a web-based interface that presents analytical data to a user through graphical real-time displays. The delivery of information is not limited to only desktops but any web enabled PDA or phone may receive the information delivered through InfoUser Interface .","InfoUser Interface  may use:","HTML\u2014for formatting and displaying purposes;","JavaScript\u2014to update the SVG and manipulate the user interface; and SVG.",{"@attributes":{"id":"p-0364","num":"0363"},"figref":"FIG. 10B","b":"204"},"In step S an InfoUser logins to the central database .","In step S the request for layout configuration information is made which if permitted leads to selection of the layout in step S. In step S the layout selected is displayed and in step S the layout displayed is saved. The InfoUser can also create a display instead of requesting the available layouts. This is shown in step S.",{"@attributes":{"id":"p-0367","num":"0366"},"figref":["FIG. 10C","FIG. 10B","FIG. 10C"],"b":"105"},"1. Login.jsp","2. TopFrameLoader.jsp","3. ReloadingControl.jsp","4. BadLogin.jsp","5. ErrorPage.jsp","6. LayoutSelect.jsp","7. NoLayout.jsp","8. SVGGenerator.java","1) Login.jsp (SA)","Login.jsp is the login screen that accepts a user id, password for user authentication. The login and password are passed over to LoginServlet.java (SD) that does the actual authentication. If authentication fails then badlogin.jsp (SC) is called to display an error message.","2) TopFrameLoader.jsp (SK)","TopPageLoader initializes all the widgets and loads the page corresponding to a given layout identification, as described below:","(a) SK reads a configuration file and checks the parameter \u2018save\u2019. If save is set to auto then the save button is not displayed or else the save button is displayed.","(b) It first retrieves a session object. If the session object or UserBean object is null then it asks the user to login again.","(c) It fetches the layout ID and uses it to get the list of widgets being used by the layout using widgetsLoader.java.","(d) It builds a SQL query for updating widget values using SQLBuilder.java and stores the query in a session. The queries are stored in a session so that database  is not invoked to fetch the properties of the widgets every time there is an update.","(e) Builds the rest of the page using SVGGenerator.java (SL).","(f) Stores widgets in the session so that they can be used during the updates.","(g) Uses a JavaScript function reloadData( ) to reload the bottom frames and update them at regular intervals. This function reloads ReloadingControl.jsp SJ.","3) ReloadingControl.jsp (SJ)","The \u201cReloadingControl\u201d is called whenever the values in SVG objects in the top frame have to be updated. It builds the bottom frame dynamically with new values for the widgets in the layout. The JavaScript function updates the contents of the top frame. The page uses UpdatesHandler.java to communicate with database  and fetch the updated values of the widgets.","4) BadLogin.jsp (SC)","This file tells the user that the login was invalid and prompts to try again.","5) ErrorPage.jsp","The ErrorPage is used to catch all errors that occur during processing of jsp files.","6) LayoutSelect.jsp (SH)","The LayoutSelect calls the SelectLayoutServlet.jsp once the user selects a layout. Depending on what the user selects from the list of layouts the SelectLayoutServlet builds the layout.htm, which uses the TopFrameLoader.jsp SK to display its top Frame and ReloadingControl.jsp to display the bottom frame.","7) NoLayout.jsp","Tells the user that there are no layouts available.","8) SVGGenerator.java (SL)","This class extends the HTTPServlet and takes the WidgetInfo bean from the session and creates the proper SVG widget. Each public member function corresponds to a widget type. They are called by the doGet( ) function according to the WidgetID requested. It's more of a collection of methods for generating a SVG than an object.","The types of widgets that can be generated with the SVGGenerator include:\n\n",{"@attributes":{"id":"p-0400","num":"0405"},"figref":"FIGS. 11A\u201311C","b":"105"},"Login page ():","Users start at this page typing in user name and password, and if the username and password is valid then the user proceeds to the layout selection page, otherwise the user is denied entry.","Layout Selection ():","This page consists of a simple pull down menu to allow a user to pick available layouts, for example, the \u201cManagement Layout\u201d of .","Layout Page ():","This is the final page of InfoUser interface . The graphics on this page use SVG format wrapped in a moveable resizable mini window  handled by JavaScript code. The bottom frame  is used to refresh at a steady interval to provide new updating data","InfoUser Interface  package includes a Web browser viewer (HTML including Java Applet) (thin clients), Wireless browser viewer  (WAP), Interactive Telephone Response System  (VoiceXML) and stand-alone application viewer (thick client), The stand-alone application viewer may be written in Java 2.0 and Java Swing. Other interfaces use XSL, WSL and VoiceXSL style sheets.","Scalable Vector Graphics (SVG) output\u2014SVG output produces quality graphic output on a variety of SVG viewers.","HTML View\u2014Pure HTML output is available for viewing on a Web Browser.","WML View\u2014WML 3.0 output is available for viewing on a phone (mobile) browser.","Windows viewer\u2014a standalone viewer lets users view their layouts on windows native application viewer. This technology uses \u201cCOM\u201d Objects to connect to backend system.","Native Java viewer\u2014A standalone Java viewer","Integrated InfoUser Viewer\u2014Combines the outputs of SVG, HTML and Web Reports under a single login. Users have the option of viewing either the SVG output or the HTML output (no graphics) or the static reports.","Reporting Options:","Reporting module  includes Web Report option  and Report Scheduler . Web reports module  allows users to select and view reports over the Internet. Reports can be delivered in HTML, Java applet or ActiveX formats. Report Scheduler  may be built using Visual C++ environment and allows users to email or print reports on a schedule. The distributed architecture allows easy configuration and control of the reporting option.","Web Reports:","Web Reports is a unique way to combine the convenience of Internet access with System . With Web Reports module  as a medium, reports are configured using parameters set by the user. The resulting report is then displayed using one of the plural formatting choices and can be printed or emailed.","Web reports module  allows users to view printable static reports in a browser. Users have a choice of various formats, including\u2014ActiveX, Java Applet, HTML and HTML Frames.","Web reports module  allows users the ability to view and print reports from anywhere within their defined network. A report server delivers reports through Microsoft Internet Information Server  and proprietary web components.",{"@attributes":{"id":"p-0420","num":"0425"},"figref":["FIG. 12","FIGS. 13A and 13B"],"b":["1201","212","1202"]},"The generated reports are viewed in step S. The report is then saved, printed or emailed as per the requirements of the user in step S.","A web reports main console  is shown in . Users select the report to view and enter the report parameters. These parameters produce the report on a browser window in one of plural formats. It is possible for users to print and email the reports from the browser window.  and C shows other examples of web reports.","Web Reports Command: The following commands may be used to generate user defined web reports as discussed above:","Logon.asp","Reports. Asp","XMLUtil.asp","Directory. Asp","Details.xsl","Listing.xsl","UserRequestManager.asp","In one aspect of the present invention, a user logs in and then Reports.Asp builds the different frames. A left side directory frame  () is built by Directory. asp which browses through a reports directory and gets the report file names and converts them into a XML format which is converted to a HTML page at the front end using listing.xsl and XMLUtil.asp. A right side frame  () is dynamically built when the user selects a report hyperlink using UserRequestManager.asp,details.xsl and XMLUtil.asp. Once the user feeds all required data and clicks on submit the requestProcesser.asp processes the request and then the report is displayed using rptserver.asp","Report Scheduler ","Report Scheduler  is used for automated delivery of printable reports. Users can schedule reports to be delivered to printers C or email boxes D (See ). Administrators can schedule reports to be delivered to a printer and to a group of mail recipients.","Report Scheduler  is designed to define report schedules and print them on multiple printers and\/or send them as an email attachment to multiple recipients. A report schedule sends reports to specified destinations from the \u2018Start Date\u2019 to the \u2018End Date\u2019 on pre-defined days and time of the week. A predefined schedule can either be edited or deleted.",{"@attributes":{"id":"p-0435","num":"0440"},"figref":"FIG. 14","b":"213"},"In step S, a user logs into system  after navigating through a scheduler wizard as shown in .","In step S, the user specifies a server name as shown in . Once a server is selected the user specifies a report description in step S, as shown in .","In step S, user selects report parameters, as shown in . On viewing the desired report and the report parameters the user selects printing options for the selected report in step . An example of that is provided in .","In step S, user selects targets and destinations for delivering the selected report in step . An example of that is provided in . The reports are then printed or emailed to the selected targets\/destinations in step . Report scheduler  can output reports in a wide variety of formats including Microsoft Word, Microsoft Excel, Adobe PDF, Rich text Format, or any other format.","It is noteworthy that once a schedule is defined, system  monitors the schedules for execution.","Report Scheduler  is designed to define report schedules and print them on multiple printers and\/or send them as an email attachment to multiple recipients. This is achieved, both on a scheduled basis as well as at a specific time. All report schedules are stored in database .","Report Scheduler  may be designed to run as a NT service, invoking a Report Printer Dll, which will go through available scheduled reports specific to a data source and send them to specific destinations on a chosen day at a specified time and interval. Report scheduler  may be configured to operate other schedulers running on a network.",{"@attributes":{"id":"p-0443","num":"0448"},"figref":"FIG. 15B","b":["213","213"]},"Report Scheduler Executable C:","This module displays a collection of predefined report schedules, which are updated from database . It allows a user to add new schedules as well as edit or delete an existing one. If a new report schedule is added or an existing one modified independently in database , the module has the ability to refresh the displayed collection. It also has the capability to schedule the collection of report schedules and send them to their defined targets at the specified time. Adhoc printing\/sending as an email attachment, of a selected report schedule is also supported.","Report Scheduler Dll B:","This Dll can be invoked from Report Scheduler executable C by selecting \u201cAdd\/Edit\u201d function to define a new report schedule or allow editing of an existing one. In case a user wants to edit a predefined schedule, the wizard fields () are populated with the respective values of the selected report schedule for editing. Otherwise, a list of the predefined report templates is provided to the user. Once an existing template is selected, the user will be provided with the option to set parameters specific to that report, specify the Start Date and End Date of the report-printing period, time at when it will be printed.","Report schedules can also be defined to be printed at any interval within a particular day. A user will have the option of sending the report to a specific printer and\/or email it to anyone number of recipients.","Report Printer Dll D:","ReportPrinter Dll D retrieves scheduled reports from database , creates a collection of CSScheduledReport objects, iterates through it to schedule them and prints them at a specified time. The scheduling functionality of both Report Scheduler executable A and Report Scheduler  service is achieved through this Dll.","Report Scheduler Service:","Report Scheduler Service A is designed to run as a NT service, invoking the ReportPrinter Dll D which goes through the available scheduled reports specific to a machine and prints them at a specified time.","Database Access:","Database access may be achieved through ODBC (Open Database Connectivity) using Microsoft ActiveX Data Objects (ADO), which is wrapped by the CCenterStatsDb class. An object of the above class is constructed and a valid connection is established at startup. Then required queries are constructed and executed to retrieve or save the data.","Reports in Proprietary Formats:","Report Scheduler  may distribute reports in proprietary report formats. A set of predefined report formats E is installed on a user's computer by an installation process. While defining a schedule, a user has to select one of the pre-designed report formats. Clicking the \u2018browse\u2019 button will browse the installed report folder. Selecting a specific report format will retrieve the defined parameters in it, from database  and prompts the user for their values. Then based on the user input, the actual data is retrieved when the report is later on distributed.","Process Flow:",{"@attributes":{"id":"p-0458","num":"0463"},"figref":"FIG. 15C","b":["1500","213","213"]},"In step S, Scheduler thread loads the report collection at a pre-set time interval from database , deleting the existing one and sets a flag for the CSScheduledReport objects scheduled. If any report is scheduled for that minute, it triggers an event to activate the printer thread, which then waits on a loop.","In step S, the printer thread responds to that event by iterating through the report collection and distributing only those reports that have a flag set.","A report schedule can be defined or modified using Report Scheduler Dll B. It will guide the user through some simple pages and will prompt for their input. Some fields are initialized with default values, which can be changed. If a mandatory field is left out, the user is again prompted to re enter its value. In case the user wants to edit a predefined schedule, the wizard fields will be populated with the respective values of the selected report schedule and thus giving a chance to edit them. Clicking the \u201cFINISH\u201d button on the last page of the wizard will finally update the database. In the next refresh, the \u201cScheduler thread\u201d will collect the newly added or updated schedule.","Administrator Module :","In one aspect, the present invention provides an administrator module  for configuring the various components of System .  shows a block diagram of the various components of the administrator module .","Administrator module  includes a configuration utility A, also referred to as Config utility A that is used to setup up data collector information, data collector collection schedules, Front-end Alerts, User-Interface Thresholds, Threshold schemas, PowerUser and InfoUser user accounts and permissions, and display item widgets.","Administrator module  also includes monitor utility B used to monitor data collectors and their performance in real time; Designer utility C to design DTS packages and to generate backend tables, stored procedures and trigger procedures; and database designer utility D to design database  components for any data source.","Config Utility A:","Config utility A allows a user to configure System . The utility is used by system administrators for setting up data sources, collection schedules, user rights, display items, thresholds, threshold schemas and InfoUser layouts.","The modular design of the Config utility A allows for easy administration of System . Administrators can add new configuration information or modify existing ones.","Below is a brief description of the available options in Config utility A, as illustrated in the screen shot of .",{"@attributes":{"id":"p-0470","num":"0475"},"tables":{"@attributes":{"id":"TABLE-US-00011","num":"00011"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"49pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"168pt","align":"left"}}],"thead":{"row":{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["Users","Allows addition of Users to System 104. Also provides"]},{"entry":[{},"assigning users rights for various tables and views."]},{"entry":["InfoUsers","Allows addition and modification of InfoUsers."]},{"entry":["Data","Allows addition and configuration of data source"]},{"entry":["Sources","interfaces. Administrators can set up data source"]},{"entry":[{},"connections, collection schedules and"]},{"entry":[{},"collection objects."]},{"entry":["Widgets","Allows creation and modification of display items."]},{"entry":[{},"These are display items available to PowerUsers"]},{"entry":[{},"and InfoUsers."]},{"entry":["Thresholds","Allows creation and modification of thresholds."]},{"entry":[{},"Administrators can create Alerts and display"]},{"entry":[{},"thresholds. Threshold outcomes may also"]},{"entry":[{},"defined in this section"]},{"entry":["InfoUser","Allows creation of InfoUser layouts."]},{"entry":"Layouts"},{"entry":["Alerts","Allows creation of alerts."]},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}}]}}}}},"Depending on an administrator's needs as little or as much of config utility A functionality can be made available. Because of the modular structure of config module A availability is controlled dynamically as shown in the screen shot of .","Configuration:","This section outlines the configuration process for the various modules, according to one aspect of the present invention. , K\u2013Z, and  illustrate the various configuration routines.","Login:",{"@attributes":{"id":"p-0475","num":"0480"},"figref":"FIG. 17A"},"Component Access:","System  components may be accessed selectively. Config module A controls this function. This is controlled by a single string value stored in a registry. The string is composed of a dword that is split in two parts. The first part contains information on the encryption method used, and maybe a single digit. The second portion is the value for the access level. The ultimate form of the value is an integer value in the range from 0\u20132^32. Each feature controlled by the configuration utility A is a one bit in value. Depending on the method of encryption used this value may first have to be decoded and decrypted. Errors in the process force it to default to no features.  shows system  that allows selective access to various systems  component via config module A.","Overall Look:","In one aspect of the present invention, the configuration utility A uses an explorer style interface, as shown in , with a tree control on one side  and a list view on the other side . Clicking on  produces changes in .","User List:  shows a list of users that may be obtained by config utility A from MS SQL table of users. Permissions if contained in the database are read and displayed. A list of administrators may be shown by activating the administrators' icon in . A list of administrators is shown in .","Changing Permissions:","Permissions are based on the level of access to information in database . Permissions are changed through a DLL function call . The DLL call is passed to a database connection  and that identifies a user and reads all the tables that a user has access too.","As discussed above, every column of accessible data in storage module A is identified by a column identifier, and every object in a column is identified by an object identifier. Restrictions can be placed on not only a column but also on values within a column. For instance \u201ctblRolm9005TrunkGroupKeyMaster\u201d contains a column contained data source ID. System  can restrict access to only rows of data where a column contains, e.g., an arbitrary number\/character.",{"@attributes":{"id":"p-0484","num":"0489"},"figref":"FIG. 17E","b":["1703","1704"]},{"@attributes":{"id":"p-0485","num":"0490"},"figref":"FIG. 17F","b":"1705"},"Data Sources:","Methods of Defining A Data Source:","Data sources A can be deleted by passing a DLL numeric identifier. A data source A can also be deactivated (meaning it will not perform any operations) by passing a DLL with the data source identifier. A data source A is defined in database  with a name, a module (a string identifier of what module to load to perform collection functions), the amount of time adjustment from the data source to GMT to allow for multiple time-zone data servers to operate synchronously and if this module is active. A connection is defined with a name, a generated ID, a vendor number, and a number of optional features such as username, password, and login script [List of functions to execute after connection is made], and connection specific information such as IP, port, port initialization string, and filename.","A data source can have multiple connections associated with it, as shown in . This allows slow reports to be collected from one connection while faster reports can be collected on another connection. The login script file is a text file on the machine running the collection service.","As shown in , a list of all reports collected on the system is maintained in database , and collection schedules can be created to collected information from any of the reports.","As shown in , data collection schedules can be both shipped with database  or user defined with a start time and an interval. These schedules can have a meaningful name associated with them such as \u201cevery 20 seconds\u201d. All existing collection schedules can be listed and double clicking on a schedule brings it up for editing\/display in the main window. This functionality is performed from a DLL that can be accessed by other programs as well.","Widgets:","As discussed above, widgets are typically listed by widget type, as shown in . Widgets can be created\/deleted\/modified using a call to a DLL as with all the previous functions. Properties for a widget instance on creation can be edited, one example of how is shown in . A widget can be associated with a threshold that can allow its appearance and behavior to change.","Thresholds:","Thresholds can be created, associated with displays, and removed using a dll, as shown in . Each threshold is associated with a name, a description, and an identifying number. There are 0 or more threshold sequences arbitrary threshold sequences and that can be associated with a threshold identifier. Each sequence can be associated with one or more set of comparisons, between a field and a value.","Sequences are evaluated in order and short circuited if a threshold comparison is violated. Each sequence is associated with a schema that takes effect when that threshold is violated. The schema can be composed of actions and properties, such as change background color or send email.","InfoUsers:","As shown in , InfoUsers are associated with a unique numeric identifier, a name, a password, and one or more layouts. For any given layout they may have different positions, colors, labels, and may have different permissions (to modify) than other users sharing the same layout.",{"@attributes":{"id":"p-0499","num":"0504"},"figref":["FIGS. 18A\u201318B","FIG. 18A"],"b":["1801","1805","1801","1802","1803","1804","1804","1805"]},{"@attributes":{"id":"p-0500","num":"0505"},"figref":"FIG. 18B","b":["1806","209","1806"]},"Monitor Utility B","Monitor utility B allows administrator to monitor the state of any collector. Each collector thread can be started or stopped from monitor tool B. Administrators can view the number of objects collected as well as the health of the collectors.","Designer Utility C","Designer utility C allows administrators to Create DTS packages for DTS collector C. For most DTS packages the standard outputs from the DTS designer will be sufficient. For certain complex situations, it may be necessary to modify the basic DTS package.","Designer utility C connects to a source database and reads database schemas. Database schemas are then displayed to a user in a user-understandable format, and a DTS packet is then created.","Designer utility C creates tables in the storage module A and then creates the package(s). In addition to creating the tables in database , DTS designer utility C creates storage and trigger procedures.","Examples of this designer tool are provided in . Administrators log in to a source database using one of the available login methods, as shown in . System  then shows a list of all available tables and views from the source database. Administrators can pick one or more tables and view for this DTS package, as shown in . This DTS package can transform data from the selected tables and views. The DTS Designer utility C will create the necessary tables, stored procedures and a simple DTS package to transform data from the source database to system  database , as shown in .","DTS Package Modifier","Overview","DTS_Package_Modifier includes computer executable process steps, for example, in a Visual Basic 6.0 program, to modify a DTS package that has been saved to a file so that every time the package is executed it will only get new records from a source table to put into the destination table. DTS_package Modifier creates (or replaces) an ActiveX Script task for each existing basic DTS package. The ActiveX Script task modifies a Source SQL Statement property of the Data Pump task so that it will only get new records. By only getting new records from a source table, the package does not have to empty-out the destination table each time it runs before bringing over every single record from the source. This makes the package run much more efficiently.","User Instructions:","When a DTS program starts it will ask to identify the DTS package file with which a user wants to work. If the user selects a DTS package file the program will load the package in memory and display the main form. The program will then identify the DTS tasks that are in the package, put their names in a box. It will then select the first DTS task, identify all of the columns in the source table, load them in a list box and highlight any columns that were in the Source SQL Statement of the Data Pump Task.","A user can review a list of source column names and highlight the ones that can be used to distinguish new records from old records. Usually, it will only be necessary to select one column because most tables have an \u201cID\u201d column or a \u201cDate\/time created\u201d column that can be used to identify the last record to be put into a destination table. However, if it is necessary to select more than one column the user can do that (for example: DataSourceID, PeriodTypeID, and StartingDateTime).","Once the columns have been selected the user can click the \u201cCreate Script\u201d button which will display the \u201cFilter Editor\u201d form. This form will show the selected columns in 2 list boxes (source and destination). Also, the SELECT statement that will be used to retrieve the last value from the destination table will be displayed in an edit control. The SELECT statement will \u201cSELECT\u201d and \u201cGROUP BY\u201d all of the column names except the last one. The last one will have the MAX aggregate function applied to it in the SELECT list. The user can \u201cdrag\u201d column names around to change their order in the \u201cSource Columns\u201d list box and the SELECT statement will be modified to reflect the new sequence.","When the user returns to the main form, the list of columns will have been replaced with an edit control displaying the text of the new ActiveX Script task. The user can review and modify the text of the script.","System  uses 2 registry entries. They may be stored in the following key:","HKEY_CURRENT_USER\\Software\\VB and VBA Program Settings\\DTS_Package_Modifier\\Startup","The 2 values are:","LastFile\u2014the name of the last DTS package file worked on","ScriptTemplateFile\u2014the name of the ActiveX script template file","The ActiveX script template file contains the VB script code that gets put into the ActiveX Script task with some tokens that get replaced by the program to customize it for each DTS task. The tokens are:\n\n","REPLACE_WITH_GET_WHAT_WE_ALREADY_HAVE_QUERY","After the tokens are replaced, the modified script is saved to a file named \u201cCutoffScriptOut.txt\u201d in the same directory as the template file. This file is created for debugging purposes.",{"@attributes":{"id":"p-0524","num":"0533"},"figref":"FIG. 19","b":["1900","1903","1904"]},{"@attributes":{"id":"p-0525","num":"0534"},"figref":["FIGS. 19A\u201319C","FIG. 19A","FIG. 19B"],"b":["1900","1900","1901","1901","1902","1902","19","1904"]},"Database Designer Utility: The data base designer utility D allows system integrators to add stored procedures and alerts in database  and the related storage procedures.","KPI's:","System  allows users to identify key performance indicators (\u201cKPI\u201d) in their business environment and track them using the systems described above. KPI's may vary for different users. For example, a CEO requires summary metrics to be tracked. Conversely, a middle manager requires detail or \u201cdrillable\u201d metric \u201cviews\u201d that correspond to the various processes for which the middle manager is responsible.","While the present invention is described above with respect to what is currently considered it's preferred embodiments, it is to be understood that the invention is not limited to that described above. To the contrary, the invention is intended to cover various modifications an equivalent arrangement within the spirit and scope of the appended claims."],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"BRIEF DESCRIPTION OF THE DRAWINGS","p":[{"@attributes":{"id":"p-0027","num":"0026"},"figref":"FIG. 1A"},{"@attributes":{"id":"p-0028","num":"0027"},"figref":"FIG. 1B"},{"@attributes":{"id":"p-0029","num":"0028"},"figref":["FIG. 2A","FIG. 1A"]},{"@attributes":{"id":"p-0030","num":"0029"},"figref":["FIG. 2B","FIG. 1B"]},{"@attributes":{"id":"p-0031","num":"0030"},"figref":"FIG. 3A"},{"@attributes":{"id":"p-0032","num":"0031"},"figref":["FIG. 3B","FIG. 1B"]},{"@attributes":{"id":"p-0033","num":"0032"},"figref":"FIG. 3C"},{"@attributes":{"id":"p-0034","num":"0033"},"figref":"FIG. 4A"},{"@attributes":{"id":"p-0035","num":"0034"},"figref":"FIG. 4B"},{"@attributes":{"id":"p-0036","num":"0035"},"figref":"FIG. 4C"},{"@attributes":{"id":"p-0037","num":"0036"},"figref":"FIG. 4D"},{"@attributes":{"id":"p-0038","num":"0037"},"figref":"FIG. 4E"},{"@attributes":{"id":"p-0039","num":"0038"},"figref":"FIG. 4F"},{"@attributes":{"id":"p-0040","num":"0039"},"figref":"FIG. 4G"},{"@attributes":{"id":"p-0041","num":"0040"},"figref":"FIG. 5"},{"@attributes":{"id":"p-0042","num":"0041"},"figref":"FIG. 6A"},{"@attributes":{"id":"p-0043","num":"0042"},"figref":"FIG. 6B"},{"@attributes":{"id":"p-0044","num":"0043"},"figref":"FIGS. 6C\u20136D"},{"@attributes":{"id":"p-0045","num":"0044"},"figref":"FIG. 6E"},{"@attributes":{"id":"p-0046","num":"0045"},"figref":"FIG. 7A"},{"@attributes":{"id":"p-0047","num":"0046"},"figref":"FIGS. 7B\u20137C"},{"@attributes":{"id":"p-0048","num":"0047"},"figref":"FIG. 8A"},{"@attributes":{"id":"p-0049","num":"0048"},"figref":"FIG. 8B"},{"@attributes":{"id":"p-0050","num":"0049"},"figref":"FIG. 8C"},{"@attributes":{"id":"p-0051","num":"0050"},"figref":"FIG. 8D"},{"@attributes":{"id":"p-0052","num":"0051"},"figref":"FIG. 8E"},{"@attributes":{"id":"p-0053","num":"0052"},"figref":"FIG. 8F"},{"@attributes":{"id":"p-0054","num":"0053"},"figref":"FIG. 8G"},{"@attributes":{"id":"p-0055","num":"0054"},"figref":"FIG. 8H"},{"@attributes":{"id":"p-0056","num":"0055"},"figref":"FIGS. 8I to 8P"},{"@attributes":{"id":"p-0057","num":"0056"},"figref":"FIG. 8Q"},{"@attributes":{"id":"p-0058","num":"0057"},"figref":"FIG. 9"},{"@attributes":{"id":"p-0059","num":"0058"},"figref":"FIGS. 9A\u20139F"},{"@attributes":{"id":"p-0060","num":"0059"},"figref":"FIG. 10A"},{"@attributes":{"id":"p-0061","num":"0060"},"figref":"FIG. 10B\u201310C"},{"@attributes":{"id":"p-0062","num":"0061"},"figref":"FIGS. 11A\u201311C"},{"@attributes":{"id":"p-0063","num":"0062"},"figref":"FIG. 12"},{"@attributes":{"id":"p-0064","num":"0063"},"figref":"FIGS. 12A\u201312C","b":["13","13"]},{"@attributes":{"id":"p-0065","num":"0064"},"figref":"FIG. 14"},{"@attributes":{"id":"p-0066","num":"0065"},"figref":"FIGS. 14A\u201314F"},{"@attributes":{"id":"p-0067","num":"0066"},"figref":"FIG. 15A"},{"@attributes":{"id":"p-0068","num":"0067"},"figref":"FIG. 15B"},{"@attributes":{"id":"p-0069","num":"0068"},"figref":"FIG. 15C"},{"@attributes":{"id":"p-0070","num":"0069"},"figref":"FIG. 16"},{"@attributes":{"id":"p-0071","num":"0070"},"figref":"FIG. 16A\u201316E"},{"@attributes":{"id":"p-0072","num":"0071"},"figref":"FIGS. 17A\u201317I","b":["17","17"]},{"@attributes":{"id":"p-0073","num":"0072"},"figref":"FIG. 18A"},{"@attributes":{"id":"p-0074","num":"0073"},"figref":"FIG. 18B"},{"@attributes":{"id":"p-0075","num":"0074"},"figref":"FIG. 19"},{"@attributes":{"id":"p-0076","num":"0075"},"figref":"FIGS. 19A\u201319C"}]},"DETDESC":[{},{}]}
