---
title: Methods and systems for interconnecting a peripheral device and an electronic system
abstract: A computer-implemented method for interconnecting a peripheral device and an electronic system includes analyzing an information (INF) file associated with the peripheral device, recognizing a resource conflict between the peripheral device and the electronic system based on the analyzing of the INF file, and resolving the resource conflict by modifying the INF file.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08412859&OS=08412859&RS=08412859
owner: Maishi Electronic (Shanghai) Ltd.
number: 08412859
owner_city: Shanghai
owner_country: CN
publication_date: 20091202
---

{"@attributes":{"id":"description"},"RELAPP":[{},{}],"heading":["RELATED APPLICATION","BACKGROUND","SUMMARY","DETAILED DESCRIPTION"],"p":["This application claims priority to U.S. Provisional Application No. 61\/200,691, filed on Dec. 2, 2008, which is hereby incorporated by reference in its entirety.","A computer system may include input\/output accesses for accessing input\/output peripheral devices, such as Compact Flash devices and Personal Computer (PC) Card devices. Some devices and corresponding software components (e.g., corresponding device controllers) that use the input\/output accesses rely on availability of addresses of input\/output access for operation. The addresses for some legacy peripheral devices, e.g., those complying with the Personal Computer Memory Card International Association (PCMCIA) standard, may be under the address of 0x1000 (a hexadecimal representation of the input\/output address).","However, with the advent of Peripheral Component Interconnect (PCI) Express host bus interface technology, input\/output accesses under the address of 0x1000 may not be available to device controllers associated with the legacy peripheral devices. In this case, conventional device controllers cannot adapt the legacy peripheral devices to modern computers that comply with the PCI Express standard.","In one embodiment, a computer-implemented method for interconnecting a peripheral device and an electronic system includes analyzing an information (INF) file associated with the peripheral device, recognizing a resource conflict between the peripheral device and the electronic system based on the analyzing of the INF file, and resolving the resource conflict by modifying the INF file.","Reference will now be made in detail to the embodiments of the present invention. While the invention will be described in conjunction with these embodiments, it will be understood that they are not intended to limit the invention to these embodiments. On the contrary, the invention is intended to cover alternatives, modifications and equivalents, which may be included within the spirit and scope of the invention as defined by the appended claims.","Embodiments described herein may be discussed in the general context of computer-executable instructions residing on some form of computer-usable medium, such as program modules, executed by one or more computers or other devices. Generally, program modules include routines, programs, objects, components, data structures, etc., that perform particular tasks or implement particular abstract data types. The functionality of the program modules may be combined or distributed as desired in various embodiments. Some portions of the detailed descriptions which follow are presented in terms of procedures, logic blocks, processing and other symbolic representations of operations on data bits within a computer memory. These descriptions and representations are the means used by those skilled in the data processing arts to most effectively convey the substance of their work to others skilled in the art. In the present application, a procedure, logic block, process, or the like, is conceived to be a self-consistent sequence of steps or instructions leading to a desired result. The steps are those requiring physical manipulations of physical quantities. Usually, although not necessarily, these quantities take the form of electrical or magnetic signals capable of being stored, transferred, combined, compared, and otherwise manipulated in a computer system.","It should be borne in mind, however, that all of these and similar terms are to be associated with the appropriate physical quantities and are merely convenient labels applied to these quantities. Unless specifically stated otherwise as apparent from the following discussions, it is appreciated that throughout the present application, discussions utilizing the terms such as \u201crunning,\u201d \u201canalyzing,\u201d \u201crecognizing,\u201d \u201cresolving,\u201d \u201cmodifying,\u201d \u201cdefining,\u201d \u201cassigning,\u201d \u201cupdating,\u201d \u201cre-enabling,\u201d \u201cestablishing\u201d or the like, refer to the actions and processes of a computer system, or similar electronic computing device, that manipulates and transforms data represented as physical (electronic) quantities within the computer system's registers and memories into other data similarly represented as physical quantities within the computer system memories or registers or other such information storage, transmission or display devices.","By way of example, and not limitation, computer-usable media may comprise computer storage media and communication media. Computer storage media includes volatile and nonvolatile, removable and non-removable media implemented in any method or technology for storage of information such as computer-readable instructions, data structures, program modules or other data. Computer storage media includes, but is not limited to, random access memory (RAM), read only memory (ROM), electrically erasable programmable ROM (EEPROM), flash memory or other memory technology, compact disk ROM (CD-ROM), digital versatile disks (DVDs) or other optical storage, magnetic cassettes, magnetic tape, magnetic disk storage or other magnetic storage devices, or any other medium that can be used to store the desired information.","Communication media can embody computer-readable instructions, data structures, program modules or other data in a modulated data signal such as a carrier wave or other transport mechanism and includes any information delivery media. The term \u201cmodulated data signal\u201d means a signal that has one or more of its characteristics set or changed in such a manner as to encode information in the signal. By way of example, and not limitation, communication media includes wired media such as a wired network or direct-wired connection, and wireless media such as acoustic, radio frequency (RF), infrared and other wireless media. Combinations of any of the above should also be included within the scope of computer-readable media.","Furthermore, in the following detailed description of the present invention, numerous specific details are set forth in order to provide a thorough understanding of the present invention. However, it will be recognized by one of ordinary skill in the art that the present invention may be practiced without these specific details. In other instances, well known methods, procedures, components, and circuits have not been described in detail as not to unnecessarily obscure aspects of the present invention.","In one embodiment, the present invention provides an electronic system, e.g., a computer system, with an inserted peripheral device. The computer system can be a modern computer, e.g., complying with the Peripheral Component Interconnect (PCI) Express standard. The inserted peripheral device can be a modern peripheral device, e.g., complying with the PCI Express standard, or a legacy peripheral device, e.g., complying with Personal Computer Memory Card International Association (PCMCIA) standard. If the inserted peripheral device is a modern peripheral device, the computer system can communicate with the modern peripheral device properly. If the inserted peripheral device is a legacy peripheral device, the computer system can run enhancement software to resolve a resource conflict that may exist between the legacy peripheral device and the computer system. As such, the computer system can also properly communicate with the legacy peripheral device.",{"@attributes":{"id":"p-0019","num":"0018"},"figref":["FIG. 1","FIG. 1"],"b":["100","100","100","100","103","101","104","109","109","105","107","112","113","108","100","107","108"]},"The CPU  can be cooperated with a basic input\/output system (BIOS) and an operating system (OS) to manage devices in the computer system  by executing instructions and processing the data contained in computer programs. The operating system can be stored in the hard disk drive . The hard disk drive  can be coupled to other devices in the computer system , e.g., via a Serial Advanced Technology Attachment (SATA) electrical interface .","The system core logic  includes one or more components that process input\/output data exchange and memory access exchange between system components in the computer system . The system core logic  can also include an integrated graphics controller  for generating and transmitting a video output , such as a Digital Visual Interface (DVI) video output.","The socket connector  is operable for connecting various peripheral devices  to the computer system . The socket connector  can receive electrical signals generated by the peripheral controller . The peripheral controller  is coupled to the system core logic  and can communicate with the system core logic  via a host bus interface . In one embodiment, the peripheral device  complies with a first protocol standard, e.g., the PCMCIA standard, PC Card standard, or Compact Flash standard. The peripheral controller  can recognize various peripheral devices, e.g., PC Card devices and\/or Compact Flash devices complying with the PCMCIA standard, or PCI Express devices complying with the PCI Express standard. However, the host bus interface  complies with a second protocol standard, e.g., the PCI Express standard, that is different from the first protocol standard, e.g., the PCMCIA standard.","Advantageously, the peripheral controller  can use enhancement software to adapt the peripheral device  that complies with the first protocol standard, e.g., the PCMCIA standard, to the host bus interface  that complies with the second, different protocol standard, e.g. the PCI Express standard. More specifically, the enhancement software can be notified that the peripheral device  has been attached and can automatically update information files (INF files) associated with a software device driver for the peripheral device . Thus, the computer system  can accommodate re-assignment of the input\/output resources for the peripheral device  so as to match the resource availability of the computer system . The enhancement software can be stored in hard disk drive , in one embodiment.",{"@attributes":{"id":"p-0024","num":"0023"},"figref":["FIG. 2","FIG. 2","FIG. 1","FIG. 2"],"b":["100","201","200","207","208","205","206","202","202","203","204"]},"The CPU  in the computer system  can execute the machine instructions (or software instructions) in the enhancement software . In one embodiment, software instructions  are stored in the hard disk drive . In addition, the software instructions  are copied to the system memory  during a normal operation, and are identified by file extensions such as \u201c.SYS\u201d and \u201c.EXE\u201d.","The enhancement software  can communicate with the connectivity service software (or functions)  to receive a notification, such as a notification indicating that the peripheral device  has been inserted or removed. When the peripheral device  is inserted into the computer system , the enhancement software  communicates with the bus control software  via the connectivity service software , so as to handle lower level commands for interconnecting the peripheral device  and the computer system . The lower level commands are handled by means of controlling electrical signals and performing software tasks, such as assigning system resources. By communicating with the bus control software , the enhancement software  can integrate a software device driver , e.g., a card driver associated with the peripheral device , into a data flow that the application  requires from the INF file . As such, the bus control software  can be used by the peripheral controller  to adapt the peripheral device , e.g., a device complying with the PCMCIA standard, to the computer system , which complies with, e.g., the PCI Express standard. For example, the bus control software  can be used as a PC Card bus control software for adapting a PC Card device to the computer system . The bus control software  can also be used as Compact Flash bus control software for adapting a Compact Flash device to the computer system .","The INF file  includes information for the card driver  associated with the peripheral device . In addition, the INF file  can include information for the computer system  to activate other operating system software (or functions) , such as functions for printers and\/or speakers. The enhancement software  can manually or automatically manipulate the INF file  or files corresponding to the peripheral device . The INF file  can be used by the card driver  to communicate configuration data and information data. The card driver  can perform accesses, such as memory accesses and\/or input\/output accesses, to the peripheral device  by means of the host bus interface driver , or by a transparent method of direct addressing. In one embodiment, the system core logic  execute hardware functions of creating PCI Express packets to perform the accesses, such as the memory accesses and\/or the input\/output accesses, to the peripheral controller . In one such embodiment, the card driver  does not communicate with the host bus interface driver  directly. For example, the card driver  can communicate with the host bus interface driver  via a PCI Express bus controller (not shown in ).","The application , e.g., a card software application, can call the API , such that the API  requires the resources provided by the peripheral device . For example, the API  is a networking API that achieves access to a small network such as a BLUETOOTH personal area network (PAN) through connections (or connectivity) provided by a controller that can reside on the peripheral device  and complies with the first protocol standard, e.g., the PCMCIA standard. The card software application  can include a PAN application that runs as a contact organizer application. For example, the card software application  collects and manages information, e.g., business information and\/or personal contact information, in the PAN. Such information, e.g., the business information and\/or the personal contact information, in the PAN is defined or written in a predetermined data structure. The card software application  can also include Internet access software applications, such as a Web browser, to provide Internet access for the peripheral device . For example, the card software application  is used as an interface to the networking API  and other operation system functions , e.g., functions for audio\/video coders, functions for audio\/video de-coders, cryptographic functions, etc. In addition, the peripheral device  supports a wireless modem function to be connected to, e.g., a local voice\/data carrier equipment. By means of a data path, e.g., an access path provided by the card driver , Internet access can be provided for the peripheral device .","Referring to , a flowchart of examples of operations performed by the enhancement software  is illustrated, in accordance with one embodiment of the present invention. The method shown in  is described in combination with the computer system  shown in  and the enhancement software  shown in . In one embodiment, the flowchart is implemented as computer-executable instructions stored in a computer-readable medium.","At step , the enhancement software  begins executing enhancement software instructions. For example, after the computer system  is turned on and the operating system is loaded, the computer system  starts to run the enhancement software . The enhancement software  begins execution of machine instructions. The enhancement software  can automatically run in a background mode, which is not presented to users.","At step , the enhancement software  communicates with the connectivity service function , e.g., requests processing for the connectivity service function , to register for notifications based on event status (or conditions) of one or more peripheral devices . The notifications, also called event notifications, indicate whether specific events occur. The specific events can include various events such as system events, device change events, etc. The system events can include a power-on event, a shut down event, a standby event, etc. The device change events can include a change in status of the devices in the computer system , e.g., a device insertion event, a device removal event, a device loading event, a device unloading event, a change in the number of peripheral devices, etc. For example, a Compact Flash device loading event notification and\/or a PC Card device loading event notification can be registered at step . Once such a device is inserted or removed, the operating system can send a notification to the enhancement software . At step , after the notification registration, the enhancement software  scans all devices, e.g., including peripheral devices and internal devices, in the computer system  to establish a device list.","At step , the enhancement software  waits for a notification. The notification can be accomplished by an interrupt or a software callback function, for example. When a notification is received, the enhancement software  performs step  to determine whether the event is a device change event. If the notification does not indicate that a device change event has occurred, the enhancement software  performs step , waiting for a next notification. If the notification indicates that a device change event has occurred, the enhancement software  performs step  to scan all of the devices in the computer system  and updates the device list.","At step , the enhancement software  checks if the device change event is that a new peripheral device  is inserted. Upon a false notification of a device insertion event, the enhancement software  performs step , waiting for a next notification. Otherwise, the enhancement software  performs step  to obtain corresponding device information for the inserted peripheral device , such as a device name, a global unique identifier (GUID), an InstallID, a device Index, etc.","At step , the enhancement software  identifies the type of the peripheral device . For example, the enhancement software  checks if the peripheral device  is a PCMCIA device, e.g., a PC Card device, a Compact Flash device, etc. If the peripheral device  is not a PCMCIA device, the enhancement software  performs step , waiting for a next notification. Otherwise, the enhancement software  updates the INF file  associated with the peripheral software drivers.","More specifically, the enhancement software  performs step . At step , the enhancement software  obtains\/gets an INF file path (e.g., a path to the INF file ) and a driver path (e.g., a path to a device driver  associated with the peripheral device ) according to the device information such as the GUID, the InstallID and the device index obtained at step .","At step , the enhancement software  copies the device driver  and the INF file  into a working directory, and analyzes the INF file . The working directory can be integrated into the operating system to enhance system security. Specifically, the enhancement software  can get the device name of the peripheral device  and the driver name of the device driver  associated with the peripheral device  from the INF file . If the operating system of the computer system  is a Microsoft\u00ae operating system, the enhancement software  obtains a \u201cLogConfigOverride\u201d section for the peripheral device  from the INF file , and obtains the \u201cOverride\u201d list from the \u201cLogConfigOverride\u201d section. The enhancement software  may also obtain associated information from the bus control software . Based on an analysis of the INF file , e.g., based on the \u201cLogConfigOverride\u201d section, the \u201cOverride\u201d list, and the associated information from the bus control software , the enhancement software  can recognize\/determine the type of conflict that may exist. For example, from the \u201cLogConfigOverride\u201d section in the INF file , the enhancement software  can obtain content, e.g., an IOconfig command (or an IOconfig assignment), which defines a range of an assigned I\/O address for the peripheral device . According to the content of the IOconfig command\/assignment, the enhancement software  can determine whether there is a resource conflict, e.g., an input\/output (I\/O) addressing conflict, between the computer system  and the peripheral device .","At step , based on the analysis result obtained at step , the enhancement software  determines if a resource conflict, e.g., an I\/O addressing conflict, occurs. For example, the enhancement software  can determine if the conflict recognized at step  includes an I\/O addressing conflict between the peripheral device  and the computer system  due to limitations of I\/O addresses in the computer system  complying with the PCI Express standard. More specifically, the INF file  may select a fixed I\/O address, e.g., under 0x1000, for the peripheral device  by means of an \u201cIOConfig\u201d instruction for the Microsoft\u00ae operating system. When the fixed I\/O address is within a certain range, e.g., ranged from 0x0000 to 0x1000, the INF file  may exhibit an I\/O addressing conflict. If there is no resource conflict, the flowchart returns to step  and waits for the next notification.","Advantageously, if a resource conflict occurs, the enhancement software  performs step  to update\/modify the INF file  so as to resolve the resource conflict. In one embodiment, by modifying the IOconfig command, the conflicts can be resolved. Specifically, the enhancement software  modifies the IOconfig assignment based on a range of available I\/O addresses of the computer system . As such, according to the modified IOconfig assignment, the operating system assigns a new I\/O address that exhibits no conflict with the resource of the computer system  to the peripheral device . For example, available I\/O addresses of the computer system  that operates under the Microsoft\u00ae operating system and that uses PCI Express host bus interfaces are greater than 0x1000. When the I\/O address (e.g., selected according to information in the INF file ) for the peripheral device  is within a range that is below 0x1000, e.g., ranged from 0x0300 to 0x1000, the enhancement software  can change the I\/O address to be within a range that is greater than 0x1000, e.g., ranged from 0x1000 to 0xFFFF. In one embodiment, the enhancement software  changes the content of the original IOconfig assignment. The operating system can assign the I\/O address to the peripheral device  according to the modified IOConfig assignment. As such, the conflict can be eliminated. In another embodiment, the enhancement software  can add a new IOconfig assignment to the INF file , such that the operating system assigns a proper I\/O address to the peripheral device  based on the added IOconfig assignment. Meanwhile, the original IOConfig assignment is removed (e.g., by means of deletion), or labeled as a remark or a comment rather than an instruction (e.g., by adding appropriate syntax in the INF file ) so that it will be ignored during processing. As such, the resource conflict can also be eliminated.","Following the modification\/update of the INF file  at step , the enhancement software  performs step . At step , the enhancement software  launches a driver package installer (e.g., DPInst.exe) to update the device driver . For example, the enhancement software  instructs the operating system to install, re-install, or remove-then-install the device driver . Thus, the computer system  can communicate with the peripheral device  using the device driver . Subsequently, the flowchart returns to the block  to wait for a next notification.","In one embodiment, users can follow an on-screen device driver installation wizard to update the device driver . In addition, following the update of the device driver , the enhancement software  can disable the peripheral controller , followed by re-enabling the peripheral controller , to establish a new logical connection between the peripheral device  and the computer system .",{"@attributes":{"id":"p-0041","num":"0040"},"figref":["FIG. 4","FIG. 4","FIG. 1","FIG. 2","FIG. 3"],"b":["100","100","100","200","206","205","202","108","100","108","108","200","108","100"]},"At step  of , the media card  is inserted into the media socket  of the computer system . At step , the hardware logic, e.g., the system core logic , powers the media socket .","At step , the hardware logic accesses the media card  to determine the card type of the media card . According to the type of the media card , a corresponding bus driver, e.g., a standard SD\/MMC bus driver or an extended SD\/MMC bus driver, which can be used to support the media card  can be identified. The host bus interface driver  shown in  can be the standard SD\/MMC bus driver for supporting the media card . If the standard SD\/MMC bus driver  can support the media card , the card driver  performs accesses, such as memory accesses and\/or input\/output accesses, to the media card  by means of the standard SD\/MMC bus driver . If the standard SD\/MMC bus driver  cannot support the media card , the extended SD\/MMC bus driver (not shown) can be applied. In this case, the card driver  can also access the media card  through the extended SD\/MMC bus driver.","The standard and extended SD\/MMC bus drivers both can be notified of the insertion event when the media card  is inserted. In one embodiment, it is determined whether the media card  can be supported by the standard SD\/MMC bus driver  at step . If the type of the media card  can be supported by the standard SD\/MMC bus driver , then at step , the standard SD\/MMC bus driver  is notified that the media card  is inserted. At step , applications of the computer system , such as the application , can access the media card  through the standard SD\/MMC bus driver . Otherwise, the flowchart goes to step .","At step , the extended SD\/MMC bus driver is notified of insertion of the media card . When the type of the media card  cannot be supported by the standard SD\/MMC bus driver , the standard SD\/MMC bus driver  halts access to the standard SD\/MMC programming registers. Meanwhile, the extended SD\/MMC bus driver is activated to access the media card . At step , it is determined whether the media card  can be supported by the extended SD\/MMC bus driver. If the media card  is not supported by the extended SD\/MMC bus driver, the computer system  may not operate the media card  until the media card  is removed at step . Otherwise, the flowchart goes to . At step , the extended SD\/MMC bus driver can support the media card , and the application  of the computer system  can access the media card  through the extended SD\/MMC bus driver.",{"@attributes":{"id":"p-0046","num":"0045"},"figref":["FIG. 5","FIG. 5","FIG. 1","FIG. 2","FIG. 3"],"b":"100"},"In block , the central processing unit (CPU)  runs the enhancement software . As such, the enhancement software  performs the operations described in blocks , , and .","Specifically, in block , the enhancement software  analyzes the INF file  associated with the peripheral device .","In block , the enhancement software  recognizes\/determines a resource conflict, e.g., an I\/O addressing conflict, between the peripheral device  and an electronic system, e.g., the computer system , based on the analyzing of the INF file .","In block , the enhancement software  resolves the resource conflict by modifying the INF file .","In summary, embodiments according to the present invention provide a computer system that can connect with a peripheral device. The peripheral device complies with a first protocol standard, e.g., the PCMCIA standard. The computer system complies with a second protocol standard, e.g., the PCI Express standard, that is different from the first protocol standard. The computer system can run enhancement software to determine whether a resource conflict occurs by analyzing an INF file associated with the peripheral device. If a resource conflict occurs, the enhancement software can modify the INF file based on a range of available addresses of the computer system, and update a software device driver associated the peripheral device based on the modification of the INF file. After that, the enhancement software can further re-enable a peripheral controller for adapting the peripheral device to the computer system. As a result, the computer system can communicate with the peripheral device properly. Advantageously, the compatibility of the computer system with different protocols can be expanded.","While the foregoing description and drawings represent embodiments of the present invention, it will be understood that various additions, modifications and substitutions may be made therein without departing from the spirit and scope of the principles of the present invention as defined in the accompanying claims. One skilled in the art will appreciate that the invention may be used with many modifications of form, structure, arrangement, proportions, materials, elements, and components and otherwise, used in the practice of the invention, which are particularly adapted to specific environments and operative requirements without departing from the principles of the present invention. The presently disclosed embodiments are therefore to be considered in all respects as illustrative and not restrictive, the scope of the invention being indicated by the appended claims and their legal equivalents, and not limited to the foregoing description."],"BRFSUM":[{},{}],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"BRIEF DESCRIPTION OF THE DRAWINGS","p":["Features and advantages of embodiments of the claimed subject matter will become apparent as the following detailed description proceeds, and upon reference to the drawings, wherein like numerals depict like parts, and in which:",{"@attributes":{"id":"p-0007","num":"0006"},"figref":"FIG. 1"},{"@attributes":{"id":"p-0008","num":"0007"},"figref":"FIG. 2"},{"@attributes":{"id":"p-0009","num":"0008"},"figref":"FIG. 3"},{"@attributes":{"id":"p-0010","num":"0009"},"figref":"FIG. 4"},{"@attributes":{"id":"p-0011","num":"0010"},"figref":"FIG. 5"}]},"DETDESC":[{},{}]}
