---
title: Application program interface for network software platform
abstract: An application program interface (API) provides a set of functions for application developers who build Web applications on Microsoft Corporation's .NETâ„¢ platform.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=07546602&OS=07546602&RS=07546602
owner: Microsoft Corporation
number: 07546602
owner_city: Redmond
owner_country: US
publication_date: 20010710
---

{"@attributes":{"id":"description"},"BRFSUM":[{},{}],"heading":["TECHNICAL FIELD","BACKGROUND","SUMMARY","BRIEF DESCRIPTION OF ACCOMPANYING COMPACT DISC","DETAILED DESCRIPTION","CONCLUSION"],"p":["This invention relates to network software, such as Web applications, and to computer software development of such network software. More particularly, this invention relates to an application program interface (API) that facilitates use of a network software platform by application programs and computer hardware.","Very early on, computer software came to be categorized as \u201coperating system\u201d software or \u201capplication\u201d software. Broadly speaking, an application is software meant to perform a specific task for the computer user such as solving a mathematical equation or supporting word processing. The operating system is the software that manages and controls the computer hardware. The goal of the operating system is to make the computer resources available to the application programmer while at the same time, hiding the complexity necessary to actually control the hardware.","The operating system makes the resources available via functions that are collectively known as the Application Program Interface or API. The term API is also used in reference to a single one of these functions. The functions are often grouped in terms of what resource or service they provide to the application programmer. Application software requests resources by calling individual API functions. API functions also serve as the means by which messages and information provided by the operating system are relayed back to the application software.","In addition to changes in hardware, another factor driving the evolution of operating system software has been the desire to simplify and speed application software development. Application software development can be a daunting task, sometimes requiring years of developer time to create a sophisticated program with millions of lines of code. For a popular operating system such as Microsoft Windows\u00ae, application software developers write thousands of different applications each year that utilize the operating system. A coherent and usable operating system base is required to support so many diverse application developers.","Often, development of application software can be made simpler by making the operating system more complex. That is, if a function may be useful to several different application programs, it may be better to write it once for inclusion in the operating system, than requiring dozens of software developers to write it dozens of times for inclusion in dozens of different applications. In this manner, if the operating system supports a wide range of common functionality required by a number of applications, significant savings in applications software development costs and time can be achieved.","Regardless of where the line between operating system and application software is drawn, it is clear that for a useful operating system, the API between the operating system and the computer hardware and application software is as important as efficient internal operation of the operating system itself.","Over the past few years, the universal adoption of the Internet, and networking technology in general, has changed the landscape for computer software developers. Traditionally, software developers focused on single-site software applications for standalone desktop computers, or LAN-based computers that were connected to a limited number of other computers via a local area network (LAN). Such software applications were typically referred to as \u201cshrink wrapped\u201d products because the software was marketed and sold in a shrink-wrapped package. The applications utilized well-defined APIs to access the underlying operating system of the computer.","As the Internet evolved and gained widespread acceptance, the industry began to recognize the power of hosting applications at various sites on the World Wide Web (or simply the \u201cWeb\u201d). In the networked world, clients from anywhere could submit requests to server-based applications hosted at diverse locations and receive responses back in fractions of a second. These Web applications, however, were typically developed using the same operating system platform that was originally developed for standalone computing machines or locally networked computers. Unfortunately, in some instances, these applications do not adequately transfer to the distributed computing regime. The underlying platform was simply not constructed with the idea of supporting limitless numbers of interconnected computers.","To accommodate the shift to the distributed computing environment being ushered in by the Internet, Microsoft Corporation is developing a network software platform known as the \u201c.NET\u201d platform (read as \u201cDot Net\u201d). The platform allows developers to create Web services that will execute over the Internet. Such a dynamic shift requires a new ground-up design of an entirely new API.","In response to this challenge, the inventors developed a unique set of API functions for Microsoft's .NET\u2122 platform.","An application program interface (API) provides a set of functions for application developers who build Web applications on a network platform, such as Microsoft Corporation's .NET\u2122 platform.","Accompanying this specification is a compact disc that stores a compiled HTML help file identifying the API (application program interface) for Microsoft's .NET\u2122 network platform. The file is named \u201ccpref.chm\u201d and was created on Jun. 8, 2001. It is 30.81 Mbytes in size. The file can be executed on a Windows\u00ae-based computing device (e.g., IBM-PC, or equivalent) that executes a Windows\u00ae-brand operating system (e.g., Windows\u00ae NT, Windows\u00ae 98, Windows\u00ae 2000, etc.). The compiled HTML help file stored on the compact disk is hereby incorporated by reference.","Additionally, the APIs contained in the compiled HTML help file are also provided in approximately 100 separate text files named \u201cNamespaceName.txt\u201d. The text files comply with the ASCII format.","The compact disc itself is a CD-ROM, and conforms to the ISO 9660 standard.","This disclosure addresses an application program interface (API) for a network platform upon which developers can build Web applications and services. More particularly, an exemplary API is described for the .NET\u2122 platform created by Microsoft Corporation. The .NET\u2122 platform is a software platform for Web services and Web applications implemented in the distributed computing environment. It represents the next generation of Internet computing, using open communication standards to communicate among loosely coupled Web services that are collaborating to perform a particular task.","In the described implementation, the .NET\u2122 platform utilizes XML (extensible markup language), an open standard for describing data. XML is managed by the World Wide Web Consortium (W3C). XML is used for defining data elements on a Web page and business-to-business documents. XML uses a similar tag structure as HTML; however, whereas HTML defines how elements are displayed, XML defines what those elements contain. HTML uses predefined tags, but XML allows tags to be defined by the developer of the page. Thus, virtually any data items can be identified, allowing Web pages to function like database records. Through the use of XML and other open protocols, such as Simple Object Access Protocol (SOAP), the .NET\u2122 platform allows integration of a wide range of services that can be tailored to the needs of the user. Although the embodiments described herein are described in conjunction with XML and other open standards, such are not required for the operation of the claimed invention. Other equally viable technologies will suffice to implement the inventions described herein.","As used herein, the phrase application program interface or API includes traditional interfaces that employ method or function calls, as well as remote calls (e.g., a proxy, stub relationship) and SOAP\/XML invocations.","Exemplary Network Environment",{"@attributes":{"id":"p-0025","num":"0024"},"figref":"FIG. 1","b":["100","100","102","1","102","104","102","104"]},"Web services  are accessible directly by other services (as represented by communication link ) or a software application, such as Web application  (as represented by communication links  and ). Each Web service  is illustrated as including one or more servers that execute software to handle requests for particular services. Such services often maintain databases that store information to be served back to requesters. Web services may be configured to perform any one of a variety of different services. Examples of Web services include login verification, notification, database storage, stock quoting, location directories, mapping, music, electronic wallet, calendar\/scheduler, telephone listings, news and information, games, ticketing, and so on. The Web services can be combined with each other and with other applications to build intelligent interactive experiences.","The network environment  also includes representative client devices (), (), (), (), . . . , (M) that utilize the Web services  (as represented by communication link ) and\/or the Web application  (as represented by communication links , , and ). The clients may communicate with one another using standard protocols as well, as represented by an exemplary XML link  between clients () and ().","The client devices, referenced generally as number , can be implemented many different ways. Examples of possible client implementations include, without limitation, portable computers, stationary computers, tablet PCs, televisions\/set-top boxes, wireless communication devices, personal digital assistants, gaming consoles, printers, photocopiers, and other smart devices.","The Web application  is an application designed to run on the network platform and may utilize the Web services  when handling and servicing requests from clients . The Web application  is composed of one or more software applications  that run atop a programming framework , which are executing on one or more servers  or other computer systems. Note that a portion of Web application  may actually reside on one or more of clients . Alternatively, Web application  may coordinate with other software on clients  to actually accomplish its tasks.","The programming framework  is the structure that supports the applications and services developed by application developers. It permits multi-language development and seamless integration by supporting multiple languages. It supports open protocols, such as SOAP, and encapsulates the underlying operating system and object model services. The framework provides a robust and secure execution environment for the multiple programming languages and offers secure, integrated class libraries.","The framework  is a multi-tiered architecture that includes an application program interface (API) layer , a common language runtime (CLR) layer , and an operating system\/services layer . This layered architecture allows updates and modifications to various layers without impacting other portions of the framework. A common language specification (CLS)  allows designers of various languages to write code that is able to access underlying library functionality. The specification  functions as a contract between language designers and library designers that can be used to promote language interoperability. By adhering to the CLS, libraries written in one language can be directly accessible to code modules written in other languages to achieve seamless integration between code modules written in one language and code modules written in another language. One exemplary detailed implementation of a CLS is described in an ECMA standard created by participants in ECMA TC39\/TG3. The reader is directed to the ECMA web site at the World Wide Web \u201c.ecna\u201d \u201c.ch\u201d.","The API layer  presents groups of functions that the applications  can call to access the resources and services provided by layer . By exposing the API functions for a network platform, application developers can create Web applications for distributed computing systems that make full use of the network resources and other Web services, without needing to understand the complex interworkings of how those network resources actually operate or are made available. Moreover, the Web applications can be written in any number of programming languages, and translated into an intermediate language supported by the common language runtime  and included as part of the common language specification . In this way, the API layer  can provide methods for a wide and diverse variety of applications.","Additionally, the framework  can be configured to support API calls placed by remote applications executing remotely from the servers  that host the framework. Representative applications () and () residing on clients () and (M), respectively, can use the API functions by making calls directly, or indirectly, to the API layer  over the network .","The framework may also be implemented at the clients. Client () represents the situation where a framework  is implemented at the client. This framework may be identical to server-based framework , or modified for client purposes. Alternatively, the client-based framework may be condensed in the event that the client is a limited or dedicated function device, such as a cellular phone, personal digital assistant, handheld computer, or other communication\/computing device.","Developers' Programming Framework",{"@attributes":{"id":"p-0036","num":"0035"},"figref":"FIG. 2","b":["132","140","130","1","130","2","130","3","130","4","130","140","144","140","140","144","140","144"]},"The framework  encapsulates the operating system () (e.g., Windows\u00ae-brand operating systems) and object model services () (e.g., Component Object Model (COM) or Distributed COM). The operating system () provides conventional functions, such as file management, notification, event handling, user interfaces (e.g., windowing, menus, dialogs, etc.), security, authentication, verification, processes and threads, memory management, and so on. The object model services () provide interfacing with other objects to perform various tasks. Calls made to the API layer  are handed to the common language runtime layer  for local execution by the operating system () and\/or object model services ().","The API  groups API functions into multiple namespaces. Namespaces essentially define a collection of classes, interfaces, delegates, enumerations, and structures, which are collectively called \u201ctypes\u201d, that provide a specific set of related functionality. A class represents managed heap allocated data that has reference assignment semantics. A delegate is an object oriented function pointer. An enumeration is a special kind of value type that represents named constants. A structure represents static allocated data that has value assignment semantics. An interface defines a contract that other types can implement.","By using namespaces, a designer can organize a set of types into a hierarchical namespace. The designer is able to create multiple groups from the set of types, with each group containing at least one type that exposes logically related functionality. In the exemplary implementation, the API  is organized into four root namespaces: a first namespace  for Web applications, a second namespace  for client applications, a third namespace  for data and XML, and a fourth namespace  for base class libraries (BCLs). Each group can then be assigned a name. For instance, types in the Web applications namespace  are assigned the name \u201cWeb\u201d, and types in the data and XML namespace  can be assigned names \u201cData\u201d and \u201cXML\u201d respectively. The named groups can be organized under a single \u201cglobal root\u201d namespace for system level APIs, such as an overall System namespace. By selecting and prefixing a top level identifier, the types in each group can be easily referenced by a hierarchical name that includes the selected top level identifier prefixed to the name of the group containing the type. For instance, types in the Web applications namespace  can be referenced using the hierarchical name \u201cSystem.Web\u201d. In this way, the individual namespaces , , , and  become major branches off of the System namespace and can carry a designation where the individual namespaces are prefixed with a designator, such as a \u201cSystem.\u201d prefix.","The Web applications namespace  pertains to Web based functionality, such as dynamically generated Web pages (e.g., Microsoft's Active Server Pages (ASP)). It supplies types that enable browser\/server communication. The client applications namespace  pertains to drawing and client side UI functionality. It supplies types that enable drawing of two-dimensional (2 D), imaging, and printing, as well as the ability to construct window forms, menus, boxes, and so on.","The data and XML namespace  relates to connectivity to data sources and XML functionality. It supplies classes, interfaces, delegates, and enumerations that enable security, specify data types, and serialize objects into XML format documents or streams. The base class libraries (BCL) namespace  pertains to basic system and runtime functionality. It contains the fundamental types and base classes that define commonly-used value and reference data types, events and event handlers, interfaces, attributes, and processing exceptions.","In addition to the framework , programming tools  are provided to assist the developer in building Web services and\/or applications. One example of the programming tools  is Visual Studio\u2122, a multi-language suite of programming tools offered by Microsoft Corporation.","Root API Namespaces",{"@attributes":{"id":"p-0044","num":"0043"},"figref":"FIG. 3","b":["142","200","142"]},"The Web applications namespace  (\u201cSystem.Web\u201d) defines additional namespaces, including:\n\n","The client applications namespace  is composed of two namespaces:\n\n","The data and XML namespace  is composed of two namespaces:\n\n","The base class library namespace  (\u201cSystem\u201d) includes the following namespaces:\n\n","The following description pertains to the \u201c.forms\u201d namespace and describes various types associated with the namespace as well as the functionalities provided by the various types.","1. System.Windows.Forms.Design","The namespace contains classes that can be used to extend design-time support for Windows Forms.","Description","The System.Windows.Forms.Design namespace contains classes that can be used to extend design-time support for Windows Forms.","AnchorEditor class (System.Windows.Forms.Design)","Description","Provides a user interface for configuring an System.Windows.Forms.Control.Anchor property.","The System.Windows.Forms.Design.AnchorEditor provides a design-time user interface for configuring an System.Windows.Forms.Control.Anchor property. An System.Windows.Forms.Control.Anchor property is typically used to determine which sides of the container a control is bound to. This class provides a drop-down graphical control that allows the user to specify which sides of the container to anchor the control to.\n\n1. Constructors:\n","a) AnchorEditor","Example Syntax:","[C#] public AnchorEditor( );","[C++] public: AnchorEditor( );","[VB] Public Sub New( )","[JScript] public function AnchorEditor( );","2. Methods:","a) EditValue","[C#] public override object EditValue(ITypeDescriptorContext context, IServiceProvider provider, object value);","[C++] public: Object* EditValue(ITypeDescriptorContext* context, IServiceProvider* provider, Object* value);","[VB] Overrides Public Function EditValue(ByVal context As ITypeDescriptorContext, ByVal provider As IServiceProvider, ByVal value As Object) As Object","[JScript] public override function EditValue(context: ITypeDescriptorContext, provider: IServiceProvider, value: Object): Object;","Description","Edits the value of the specified object using the specified service provider and context.","Return Value: The new value of the object. If the value of the object hasn't changed, this should return the same object it was passed.","A service provider is provided so that any required editing services can be obtained. An System.ComponentModel.ITypeDescriptorContext object that can be used to gain additional context information. A service provider object through which editing services may be obtained. An instance of the value being edited.","b) GetEditStyle","[C#] public override UITypeEditorEditStyle GetEditStyle(ITypeDescriptorContext context);","[C++] public: UITypeEditorEditStyle GetEditStyle(ITypeDescriptorContext* context);","[VB] Overrides Public Function GetEditStyle(ByVal context As ITypeDescriptorContext) As UITypeEditorEditStyle","[JScript] public override function GetEditStyle(context: ITypeDescriptorContext): UITypeEditorEditStyle;","Description","Gets the editor style used by the System.Windows.Forms.Design.AnchorEditor.EditValue(System.ComponentModel.ITypeDescriptorContext, System.IServiceProvider, System.Object) method.","Return Value: One of the System.Drawing.Design.UITypeEditorEditStyle values indicating the provided editing style. If the method is not supported, this method will return System.Drawing.Design.UITypeEditorEditStyle.None. An System.ComponentModel.ITypeDescriptorContext object that can be used to gain additional context information.","AxImporter class (System.Windows.Forms.Design)","a) ToString","Description","Imports ActiveX controls and generates a wrapper that can be accessed by a designer.","b) AxImporter","Example Syntax:","c) ToString","[C#] public AxImporter(AxImporter.Options options);","[C++] public: AxImporter(AxImporter.Options* options);","[VB] Public Sub New(ByVal options As AxImporter.Options)","[JScript] public function AxImporter(options: AxImporter.Options);","Description","2. Properties:","a) GeneratedAssemblies","b) ToString","[C#] public string[ ] GeneratedAssemblies {get;}","[C++] public: _property String* get_GeneratedAssemblies( );","[VB] Public ReadOnly Property GeneratedAssemblies As String ( )","[JScript] public function get GeneratedAssemblies( ): String[ ];","Description","c) GeneratedSources","d) ToString","[C#] public string[ ] GeneratedSources {get;}","[C++] public: _property String* get_GeneratedSources( );","[VB] Public ReadOnly Property GeneratedSources As String ( )","[JScript] public function get GeneratedSources( ): String[ ];","e) GeneratedTypeLibAttributes","f) ToString","[C#] public TYPELIBATTR[ ] GeneratedTypeLibAttributes {get;}","[C++] public: _property TYPELIBATTR get_GeneratedTypeLibAttributes( );","[VB] Public ReadOnly Property GeneratedTypeLibAttributes As TYPELIBATTR ( )","[JScript] public function get GeneratedTypeLibAttributes( ): TYPELIBATTR[ ];","Description","g) GenerateFromFile","[C#] public string GenerateFromFile(FileInfo file);","[C++] public: String* GenerateFromFile(FileInfo* file);","[VB] Public Function GenerateFromFile(ByVal file As FileInfo) As String","[JScript] public function GenerateFromFile(file: FileInfo): String; Generates a wrapper for an ActiveX control for use in the design-time environment.","Description","Generates a wrapper for an ActiveX control for use in the design-time environment. The file containing the control.","h) GenerateFrom TypeLibrary","[C#] public string GenerateFromTypeLibrary(UCOMITypeLib typeLib);","[C++] public: String* GenerateFromTypeLibrary(UCOMITypeLib* typeLib);","[VB] Public Function GenerateFromTypeLibrary(ByVal typeLib As UCOMITypeLib) As String","[JScript] public function GenerateFromTypeLibrary(typeLib: UCOMITypeLib): String; Generates a wrapper for an ActiveX control for use in the design-time environment.","Description","Generates a wrapper for an ActiveX control for use in the design-time environment.","i) GenerateFromTypeLibrary","[C#] public string GenerateFromTypeLibrary(UCOMITypeLib typeLib, Guid clsid);","[C++] public: String* GenerateFromTypeLibrary(UCOMITypeLib* typeLib, Guid clsid);","[VB] Public Function GenerateFromTypeLibrary(ByVal typeLib As UCOMITypeLib, ByVal clsid As Guid) As String","[JScript] public function GenerateFromTypeLibrary(typeLib: UCOMITypeLib, clsid: Guid): String;","Description","Generates a wrapper for an ActiveX control for use in the design-time environment. A GUID for the wrapper.","j) GetFileOfTypeLib","[C#] public static string GetFileOfTypeLib(ref TYPELIBATTR tlibattr);","[C++] public: static String* GetFileOfTypeLib(TYPELIBATTR* tlibattr);","[VB] Public Shared Function GetFileOfTypeLib(ByRef tlibattr As TYPELIBATTR) As String","[JScript] public static function GetFileOfTypeLib(tlibattr: TYPELIBATTR): String; Gets the file name corresponding to the given TypelibAttribute.","AxParameterData class (System.Windows.Forms.Design)","a) ToString","Description","Represents a parameter of a method of a hosted ActiveX control.","b) AxParameterData","Example Syntax:","c) ToString","[C#] public AxParameterData(ParameterInfo info);","[C++] public: AxParameterData(ParameterInfo* info);","[VB] Public Sub New(ByVal info As ParameterInfo)","[JScript] public function AxParameterData(info: ParameterInfo);","Description","Initializes a new instance of the System.Windows.Forms.Design.AxParameterData class using the specified parameter information. A System.Reflection.ParameterInfo indicating the parameter information to use.","d) AxParameterData","Example Syntax:","e) ToString","[C#] public AxParameterData(ParameterInfo info, bool ignoreByRefs);","[C++] public: AxParameterData(ParameterInfo* info, bool ignoreByRefs);","[VB] Public Sub New(ByVal info As ParameterInfo, ByVal ignoreByRefs As Boolean)","[JScript] public function AxParameterData(info: ParameterInfo, ignoreByRefs: Boolean);","Description","Initializes a new instance of the System.Windows.Forms.Design.AxParameterData class using the specified parameter information and whether to ignore by reference parameters. A System.Reflection.ParameterInfo indicating the parameter information to use. A value indicating whether to ignore parameters passed by reference.","f) AxParameterData","Example Syntax:","g) ToString","[C#] public AxParameterData(string inname, string typeName);","[C++] public: AxParameterData(String* inname, String* typeName);","[VB] Public Sub New(ByVal inname As String, ByVal typeName As String)","[JScript] public function AxParameterData(inname: String, typeName: String); Initializes a new instance of the System.Windows.Forms.Design.AxParameterData class using the specified name and type name.","Description","Initializes a new instance of the System.Windows.Forms.Design.AxParameterData class using the specified name and type name. The name of the parameter. The name of the type expected by the parameter.","h) AxParameterData","Example Syntax:","i) ToString","[C#] public AxParameterData(string inname, Type type);","[C++] public: AxParameterData(String* inname, Type* type);","[VB] Public Sub New(ByVal inname As String, ByVal type As Type)","[JScript] public function AxParameterData(inname: String, type: Type);","Description","Initializes a new instance of the System.Windows.Forms.Design.AxParameterData class using the specified name and type. The name of the parameter. The type expected by the parameter.","j) Direction","k) ToString","[C#] public FieldDirection Direction {get;}","[C++] public: _property FieldDirection get_Direction( );","[VB] Public ReadOnly Property Direction As FieldDirection","[JScript] public function get Direction( ): FieldDirection;","Description","Indicates the direction of assignment fields.","l) IsByRef","m) ToString","[C#] public bool IsByRef {get;}","[C++] public: _property bool get_IsByRef( );","[VB] Public ReadOnly Property IsByRef As Boolean","[JScript] public function get IsByRef( ): Boolean;","Description","Indicates whether the parameter data is passed by reference.","n) IsIn","o) ToString","[C#] public bool IsIn {get;}","[C++] public: _property bool getIsIn( );","[VB] Public ReadOnly Property IsIn As Boolean","[JScript] public function get IsIn( ): Boolean;","Description","Indicates whether the parameter data is in.","p) IsOptional","q) ToString","[C#] public bool IsOptional {get;}","[C++] public: _property bool get_IsOptional( );","[VB] Public ReadOnly Property IsOptional As Boolean","[JScript] public function get IsOptional( ): Boolean;","Description","Indicates whether the parameter data is optional.","r) IsOut","s) ToString","[C#] public bool IsOut {get;}","[C++] public: _property bool getIsOut( );","[VB] Public ReadOnly Property IsOut As Boolean","[JScript] public function get IsOut( ): Boolean;","Description","Indicates whether the parameter data is out.","t) Name","u) ToString","[C#] public string Name {get; set;}","[C++] public: _property String* get Name( ); public: _property void set_Name(String*);","[VB] Public Property Name As String","[JScript] public function get Name( ): String; public function set Name(String);","Description","Gets or sets the name of the parameter.","v) ParameterType","w) ToString","[C#] public Type ParameterType {get;}","[C++] public: _property Type* get_ParameterType( );","[VB] Public ReadOnly Property ParameterType As Type","[JScript] public function get ParameterType( ): Type;","Description","Gets or sets the type expected by the parameter.","x) TypeName","y) ToString","[C#] public string TypeName {get;}","[C++] public: _property String* get TypeName( );","[VB] Public ReadOnly Property TypeName As String","[JScript] public function get TypeName( ): String;","Description","Gets or sets the name of the type expected by the parameter.","z) Convert","[C#] public static AxParameterData[ ] Convert(ParameterInfo[ ] infos);","[C++] public: static AxParameterData* Convert(ParameterInfo* infos[ ])[ ]","[VB] Public Shared Function Convert(ByVal infos( ) As ParameterInfo) As AxParameterData( )","[JScript] public static function Convert(infos: ParameterInfo[ ]) AxParameterData[ ]; Converts the specified parameter information to an System.Windows.Forms.Design.AxParameterData object.","Description","Converts the specified parameter information to an System.Windows.Forms.Design.AxParameterData object.","Return Value: An array of System.Windows.Forms.Design.AxParameterData objects representing the specified array of System.Reflection.ParameterInfo objects. An array of System.Reflection.ParameterInfo objects to convert.","aa) Convert","[C#] public static AxParameterData[ ] Convert(ParameterInfo[ ] infos, bool ignoreByRefs);","[C++] public: static AxParameterData* Convert(ParameterInfo* infos[ ], bool ignoreByRefs) [ ];","[VB] Public Shared Function Convert(ByVal infos( ) As ParameterInfo, ByVal ignoreByRefs As Boolean) As AxParameterData( )","[JScript] public static function Convert(infos: ParameterInfo[ ], ignoreByRefs: Boolean) AxParameterData[ ];","Description","Converts the specified parameter information to an System.Windows.Forms.Design.AxParameterData object, according to the specified value indicating whether to ignore by reference parameters.","Return Value: An array of System.Windows.Forms.Design.AxParameterData objects representing the specified array of System.Reflection.ParameterInfo objects. An array of System.Reflection.ParameterInfo objects to convert. A value indicating whether to ignore parameters passed by reference.","AxWrapperGen class (System.Windows.Forms.Design)","a) ToString","Description","Generates a wrapper for ActiveX controls for use in the design-time environment.","b) ToString","[C#] public static ArrayList GeneratedSources;","[C++] public: static ArrayList* GeneratedSources;","[VB] Public Shared GeneratedSources As ArrayList","[JScript] public static var GeneratedSources: ArrayList;","Description","This field initializes a local ArrayList variable named GeneratedSources.","c) AxWrapperGen","Example Syntax:","d) ToString","[C#] public AxWrapperGen(Type axType);","[C++] public: AxWrapperGen(Type* axtype);","[VB] Public Sub New(ByVal axType As Type)","[JScript] public function AxWrapperGen(axType: Type);","Description","Generates an ActiveX wrapper for design-time hosting of an ActiveX control. The type of ActiveX control to generate a wrapper for.","ComponentDocumentDesigner class (System.Windows.Forms.Design)","a) ToString","Description","Provides a Windows Forms designer implementation for designing components.","b) ComponentDocumentDesigner","Example Syntax:","c) ToString","[C#] public ComponentDocumentDesigner( );","[C++] public: ComponentDocumentDesigner( );","[VB] Public Sub New( )","[JScript] public function ComponentDocumentDesigner( );","d) AssociatedComponents","e) Component","f) Control","g) ToString","Description","Gets the control for this designer.","h) InheritanceAttribute","i) Inherited","j) ShadowProperties","k) TrayAutoArrange","l) ToString","Description","Indicates whether the component tray for this designer is in auto-arrange mode.","m) TrayLargeIcon","n) ToString","[C#] public bool TrayLargeIcon {get; set;}","[C++] public: _property bool get_TrayLargeIcon( ); public: _property void set_TrayLargeIcon(bool);","[VB] Public Property TrayLargeIcon As Boolean","[JScript] public function get TrayLargeIcono: Boolean; public function set TrayLargeIcon(Boolean);","Description","Indicates whether the component tray for this designer is in large icon mode.","o) Verbs","p) Dispose","[C#] protected override void Dispose(bool disposing);","[C++] protected: void Dispose(bool disposing);","[VB] Overrides Protected Sub Dispose(ByVal disposing As Boolean)","[JScript] protected override function Dispose(disposing: Boolean);","Description","Releases the unmanaged resources used by the System.Windows.Forms.Design.ComponentDocumentDesigner and optionally releases the managed resources.","This method is called by the public Dispose( ) method and the System.Object.Finalize method. true to release both managed and unmanaged resources; false to release only unmanaged resources.","q) GetToolSupported","[C#] protected virtual bool GetToolSupported(ToolboxItem tool);","[C++] protected: virtual bool GetToolSupported(ToolboxItem* tool);","[VB] Overridable Protected Function GetToolSupported(ByVal tool As ToolboxItem) As Boolean","[JScript] protected function GetToolSupported(tool: ToolboxItem): Boolean;","Description","Gets a value indicating whether the specified tool is supported by this designer.","Return Value: true if the tool should be enabled on the toolbox; false if the document designer doesn't know how to use the tool.","If a tool is supported then it will be enabled in the toolbox when this designer regains focus. Otherwise, it will be disabled. Once a tool is marked as enabled or disabled it may not be queried again. The tool that is to be enabled on the toolbox.","r) Initialize","[C#] public override void Initialize(IComponent component);","[C++] public: void Initialize(IComponent* component);","[VB] Overrides Public Sub Initialize(ByVal component As IComponent)","[JScript] public override function Initialize(component: IComponent);","Description","Initializes the designer with the specified component.","The designer can get the component's site and request services from it with this call. The component to associate with this designer.","s) PostFilterProperties","[C#] protected override void PostFilterProperties(IDictionary properties);","[C#] protected: void PostFilterProperties(IDictionary* properties);","[VB] Overrides Protected Sub PostFilterProperties(ByVal properties As IDictionary)","[JScript] protected override function PostFilterProperties(properties: IDictionary);","Description","Allows a designer to filter the set of properties the component it is designing will expose through a System.ComponentModel.TypeDescriptor object.","Return Value: The augmented set of properties. If the method does not modify any properties, it may just return a reference to its input parameter. If you do make a change to the properties, you must create a new array.","This method is called immediately after its corresponding \u201cPost\u201d method. If you are overriding this method you should call the base implementation after you perform your own filtering. The properties for the class of the component.","t) PreFilterProperties","[C#] protected override void PreFilterProperties(IDictionary properties);","[C++] protected: void PreFilterProperties(IDictionary* properties);","[VB] Overrides Protected Sub PreFilterProperties(ByVal properties As IDictionary)","[JScript] protected override function PreFilterProperties(properties: IDictionary);","Description","Allows a designer to filter the set of properties the component it is designing will expose through a System.ComponentModel.TypeDescriptor object.","Return Value: The augmented set of properties. If the method does not modify any properties, it may just return a reference to its input parameter. If you do make a change to the properties, you must create a new array to return.","This method is called immediately before its corresponding \u201cPost\u201d method. If you are overriding this method you should call the base implementation before you perform your own filtering. The properties for the class of the component.","u) IRootDesigner.GetView","[C#] object IRootDesigner.GetView(ViewTechnology technology);","[C++] Object* IRootDesigner::GetView(ViewTechnology technology);","[VB] Function GetView(ByVal technology As ViewTechnology) As Object Implements IRootDesigner.GetView","[JScript] function IRootDesigner.GetView(technology: ViewTechnology): Object;","v) IToolboxUser.GetToolSupported","[C#] bool IToolboxUser.GetToolSupported(ToolboxItem tool);","[C++] bool IToolboxUser::GetToolSupported(ToolboxItem* tool);","[VB] Function GetToolSupported(ByVal tool As ToolboxItem) As Boolean Implements IToolboxUser.GetToolSupported","[JScript] function IToolboxUser.GetToolSupported(tool: ToolboxItem): Boolean;","w) IToolboxUser.ToolPicked","[C#] void IToolboxUser.ToolPicked(ToolboxItem tool);","[C++] void IToolboxUser::ToolPicked(ToolboxItem* tool);","[VB] Sub ToolPicked(ByVal tool As ToolboxItem) Implements IToolboxUser.ToolPicked","[JScript] function IToolboxUser.ToolPicked(tool: ToolboxItem);","x) IOleDragClient.AddComponent","[C#] bool IOleDragClient.AddComponent(IComponent component, string name, bool firstAdd);","[C++] bool IOleDragClient::AddComponent(IComponent* component, String* name, bool firstAdd);","[VB] Function AddComponent(ByVal component As IComponent, ByVal name As String, ByVal firstAdd As Boolean) As Boolean Implements IOleDragClient.AddComponent","[JScript] function IOleDragClient.AddComponent(component: IComponent, name: String, firstAdd: Boolean): Boolean;","y) IOleDragClient.GetControlForComponent","[C#] Control IOleDragClient.GetControlForComponent(object component);","[C++] Control* IOleDragClient::GetControlForComponent(Object* component);","[VB] Function GetControlForComponent(ByVal component As Object) As Control Implements IOleDragClient.GetControlForComponent","[JScript] function IOleDragClient.GetControlForComponent(component: Object): Control;","z) IOleDragClient.GetDesignerControl","[C#] Control IOleDragClient.GetDesignerControl( );","[C++] Control* IOleDragClient::GetDesignerControl( );","[VB] Function GetDesignerControl( ) As Control Implements IOleDragClient.GetDesignerControl","[JScript] function IOleDragClient.GetDesignerControl( ): Control;","aa) IOleDragClient.IsDropOk","[C#] bool IOleDragClient.IsDropOk(IComponent component);","[C++] bool IOleDragClient::IsDropOk(IComponent* component);","[VB] Function IsDropOk(ByVal component As IComponent) As Boolean Implements IOleDragClient.IsDropOk","[JScript] function IOleDragClient.IsDropOk(component: IComponent): Boolean;","ComponentTray class (System.Windows.Forms.Design)","a) ToString","Description","Provides the user interface for the component tray of the form designer that represents non-visible components at design-time.","b) ComponentTray","Example Syntax:","c) ToString","[C#] public ComponentTray(IDesigner mainDesigner, IServiceProvider serviceProvider);","[C++] public: ComponentTray(IDesigner* mainDesigner, IServiceProvider* serviceProvider);","[VB] Public Sub New(ByVal mainDesigner As IDesigner, ByVal serviceProvider As IServiceProvider)","[JScript] public function ComponentTray(mainDesigner: IDesigner, serviceProvider: IServiceProvider);","Description","Initializes a new instance of the System.Windows.Forms.Design.ComponentTray class using the specified designer and service provider.","The component tray will monitor component additions and removals and display appropriate UI objects to represent the components it contains. The main designer for the current project. An System.IServiceProvider that can be used to obtain design-time services.","d) AccessibilityObject","e) AccessibleDefaultActionDescription","f) AccessibleDescription","g) AccessibleName","h) AccessibleRole","i) AllowDrop","j) Anchor","k) AutoArrange","l) ToString","Description","Indicates whether the positions of the tray items are automatically aligned.","m) AutoScroll","n) AutoScrollMargin","o) AutoScrollMinSize","p) AutoScrollPosition","q) BackColor","r) BackgroundImage","s) BindingContext","t) Bottom","u) Bounds","v) CanFocus","w) CanSelect","x) Capture","y) CausesValidation","z) ClientRectangle","aa) ClientSize","bb) CompanyName","cc) ComponentCount","dd) ToString","Description","Gets the number of components contained within the tray.","ee) Container","ff) ContainsFocus","gg) ContextMenu","hh) Controls","ii) Created","jj) CreateParams","kk) Cursor","ll) DataBindings","mm) DefaultImeMode","nn) DefaultSize","oo) DesignMode","pp) DisplayRectangle","qq) Disposing","rr) Dock","ss) DockPadding","tt) Enabled","uu) Events","vv) Focused","ww) Font","xx) FontHeight","yy) ForeColor","zz) Handle","aaa) HasChildren","bbb) Height","ccc) HScroll","ddd) ImeMode","eee) InvokeRequired","fff) IsAccessible","ggg) IsDisposed","hhh) IsHandleCreated","iii) Left","jjj) Location","kkk) Name","lll) Parent","mmm) ProductName","nnn) ProductVersion","ooo) RecreatingHandle","ppp) Region","qqq) RenderRightToLeft","rrr) ResizeRedraw","sss) Right","ttt) RightToLeft","uuu) ShowFocusCues","vvv) ShowKeyboardCues","www) ShowLargeIcons","xxx) ToString","Description","Indicates whether the tray will display large icons for the non-visible components.","yyy) Site","zzz) Size","aaaa) TabIndex","bbbb) TabStop","cccc) Tag","dddd) Text","eeee) Top","ffff) TopLevelControl","gggg) Visible","hhhh) VScroll","iiii) Width","jjjj) WindowTarget","kkkk) AddComponent","[C#] public virtual void AddComponent(IComponent component);","[C++] public: virtual void AddComponent(IComponent* component);","[VB] Overridable Public Sub AddComponent(ByVal component As IComponent)","[JScript] public function AddComponent(component: IComponent); Adds a component to the tray.","Description","Adds a component to the tray. The component to add.","llll) CanCreateComponentFromTool","[C#] protected virtual bool CanCreateComponentFromTool(ToolboxItem tool);","[C++] protected: virtual bool CanCreateComponentFromTool(ToolboxItem* tool);","[VB] Overridable Protected Function CanCreateComponentFromTool(ByVal tool As ToolboxItem) As Boolean","[JScript] protected function CanCreateComponentFromTool(tool: ToolboxItem) Boolean;","Description","Indicates whether the specified tool can be used to create a new component.","Return Value: true if the specified tool can be used to create a component; otherwise, false. The System.Drawing.Design.ToolboxItem to determine whether a component can be created from.","mmmm) CanDisplayComponent","[C#] protected virtual bool CanDisplayComponent(IComponent component);","[C++] protected: virtual bool CanDisplayComponent(IComponent* component);","[VB] Overridable Protected Function CanDisplayComponent(ByVal component As IComponent) As Boolean","[JScript] protected function CanDisplayComponent(component: IComponent): Boolean;","Description","Gets a value indicating whether the specified component can be displayed.","Return Value: true if the component can be displayed; otherwise, false .","Some types of components, such as a Timer, may not have a UI that can be viewed at design-time. These components are usually represented by icons that are shown in the component tray. The component to determine whether can be displayed.","nnnn) CreateComponentFromTool","[C#] public void CreateComponentFromTool(ToolboxItem tool); [C++] public: void CreateComponentFromTool(ToolboxItem* tool);","[VB] Public Sub CreateComponentFromTool(ByVal tool As ToolboxItem)","[JScript] public function CreateComponentFromTool(tool: ToolboxItem);","Description","Creates a component in the component tray from the specified System.Drawing.Design.ToolboxItem.","This method checks that the component has a System.ComponentModel.DesignTimeVisibleAttribute before attempting to create it and add it to the component tray. The ToolboxItem to create a component from.","oooo) DisplayError","[C#] protected void DisplayError(Exception e);","[C++] protected: void DisplayError(Exception* e);","[VB] Protected Sub DisplayError(ByVal e As Exception)","[JScript] protected function DisplayError(e: Exception);","Description","Displays an error message to the user with information about or from the specified exception. The exception to display.","pppp) Dispose","[C#] protected override void Dispose(bool disposing);","[C++] protected: void Dispose(bool disposing);","[VB] Overrides Protected Sub Dispose(ByVal disposing As Boolean)","[JScript] protected override function Dispose(disposing: Boolean);","Description","Releases the unmanaged resources used by the System.Windows.Forms.Design.ComponentTray and optionally releases the managed resources.","This method is called by the public Dispose( ) method and the System.Object.Finalize method. true to release both managed and unmanaged resources; false to release only unmanaged resources.","qqqq) GetLocation","[C#] public Point GetLocation(IComponent receiver);","[C++] public: Point GetLocation(IComponent* receiver);","[VB] Public Function GetLocation(ByVal receiver As IComponent) As Point","[JScript] public function GetLocation(receiver: IComponent): Point;","Description","Gets the location of the specified component.","Return Value: A System.Drawing.Point object indicating the coordinates of the specified component, or an empty System.Drawing.Point object if the specified component could not be found in the component tray. An empty System.Drawing.Point object has an System.Drawing.Point.IsEmpty property equal to true and typically System.Drawing.Point.X and System.Drawing.Point.Y properties equal to zero.\n\nSystem.Windows.Forms.Design.ComponentTray.GetLocation(System.ComponentModel.IComponent) is an accessor method for the location extender property that is added to each non-visual component in the component tray. The IComponent to retrieve the location of.\n","rrrr) GetService","[C#] protected override object GetService(Type serviceType);","[C++] protected: Object* GetService(Type* serviceType);","[VB] Overrides Protected Function GetService(ByVal serviceType As Type) As Object","[JScript] protected override function GetService(serviceType: Type): Object;","Description","Gets the requested service type.","Return Value: An instance of the requested service, or null if the service could not be found. The type of the service to retrieve.","ssss) OnDoubleClick","[C#] protected override void OnDoubleClick(EventArgs e);","[C++] protected: void OnDoubleClick(EventArgs* e);","[VB] Overrides Protected Sub OnDoubleClick(ByVal e As EventArgs)","[JScript] protected override function OnDoubleClick(e: EventArgs);","Description","tttt) OnDragDrop","[C#] protected override void OnDragDrop(DragEventArgs de);","[C++] protected: void OnDragDrop(DragEventArgs* de);","[VB] Overrides Protected Sub OnDragDrop(ByVal de As DragEventArgs)","[JScript] protected override function OnDragDrop(de: DragEventArgs);","Description","Called in response to a drag drop for OLE drag and drop. Here we drop a toolbox component on our parent control.","uuuu) OnDragEnter","[C#] protected override void OnDragEnter(DragEventArgs de);","[C++] protected: void OnDragEnter(DragEventArgs* de);","[VB] Overrides Protected Sub OnDragEnter(ByVal de As DragEventArgs)","[JScript] protected override function OnDragEnter(de: DragEventArgs);","Description","Called in response to a drag enter for OLE drag and drop.","vvvv) OnDragLeave","[C#] protected override void OnDragLeave(EventArgs e);","[C++] protected: void OnDragLeave(EventArgs* e);","[VB] Overrides Protected Sub OnDragLeave(ByVal e As EventArgs)","[JScript] protected override function OnDragLeave(e: EventArgs);","Description","Called when a drag-drop operation leaves the control designer view Called when a drag-drop operation leaves the control designer view","wwww) OnDragOver","[C#] protected override void OnDragOver(DragEventArgs de);","[C++] protected: void OnDragOver(DragEventArgs* de);","[VB] Overrides Protected Sub OnDragOver(ByVal de As DragEventArgs)","[JScript] protected override function OnDragOver(de: DragEventArgs);","Description","Called when a drag drop object is dragged over the control designer view Called when a drag drop object is dragged over the control designer view","xxxx) OnGiveFeedback","[C#] protected override void OnGiveFeedback(GiveFeedbackEventArgs gfevent);","[C++] protected: void OnGiveFeedback(GiveFeedbackEventArgs* gfevent);","[VB] Overrides Protected Sub OnGiveFeedback(ByVal gfevent As GiveFeedbackEventArgs)","[JScript] protected override function OnGiveFeedback(gfevent: GiveFeedbackEventArgs);","Description","Inheriting classes should override this method to handle this event. Call base.onGiveFeedback to send this event to any registered event listeners. event","yyyy) OnLayout","[C#] protected override void OnLayout(LayoutEventArgs levent);","[C++] protected: void OnLayout(LayoutEventArgs* levent);","[VB] Overrides Protected Sub OnLayout(ByVal levent As LayoutEventArgs)","[JScript] protected override function OnLayout(levent: LayoutEventArgs);","Description","Forces the layout of any docked or anchored child controls.","zzzz) OnLostCapture","[C#] protected virtual void OnLostCapture( );","[C++] protected: virtual void OnLostCapture( );","[VB] Overridable Protected Sub OnLostCapture( )","[JScript] protected function OnLostCapture( );","Description","This is called when we lose capture. Here we get rid of any rubber band we were drawing. You should put any cleanup code in here.","aaaaa) OnMouseDown","[C#] protected override void OnMouseDown(MouseEventArgs e);","[C++] protected: void OnMouseDown(MouseEventArgs* e);","[VB] Overrides Protected Sub OnMouseDown(ByVal e As MouseEventArgs)","[JScript] protected override function OnMouseDown(e: MouseEventArgs);","Description","Inheriting classes should override this method to handle this event. Call base.onMouseDown to send this event to any registered event listeners. event","bbbbb) OnMouseMove","[C#] protected override void OnMouseMove(MouseEventArgs e);","[C++] protected: void OnMouseMove(MouseEventArgs* e);","[VB] Overrides Protected Sub OnMouseMove(ByVal e As MouseEventArgs)","[JScript] protected override function OnMouseMove(e: MouseEventArgs);","Description","Inheriting classes should override this method to handle this event. Call base.on MouseMove to send this event to any registered event listeners. event","ccccc) OnMouseUp","[C#] protected override void OnMouseUp(MouseEventArgs e);","[C++] protected: void OnMouseUp(MouseEventArgs* e);","[VB] Overrides Protected Sub OnMouseUp(ByVal e As MouseEventArgs)","[JScript] protected override function OnMouseUp(e: MouseEventArgs);","Description","Inheriting classes should override this method to handle this event. Call base.on MouseUp to send this event to any registered event listeners. event","ddddd) OnPaint","[C#] protected override void OnPaint(PaintEventArgs pe);","[C++] protected: void OnPaint(PaintEventArgs* pe);","[VB] Overrides Protected Sub OnPaint(ByVal pe As PaintEventArgs)","[JScript] protected override function OnPaint(pe: PaintEventArgs);","Description","eeeee) OnResize","[C#] protected override void OnResize(EventArgs e);","[C++] protected: void OnResize(EventArgs* e);","[VB] Overrides Protected Sub OnResize(ByVal e As EventArgs)","[JScript] protected override function OnResize(e: EventArgs);","Description","fffff) OnSetCursor","[C#] protected virtual void OnSetCursor( );","[C++] protected: virtual void OnSetCursor( );","[VB] Overridable Protected Sub OnSetCursor( )","[JScript] protected function OnSetCursor( );","Description","Sets the cursor. You can override this to set your own cursor.","ggggg) RemoveComponent","[C#] public virtual void RemoveComponent(IComponent component);","[C++] public: virtual void RemoveComponent(IComponent* component);","[VB] Overridable Public Sub RemoveComponent(ByVal component As IComponent)","[JScript] public function RemoveComponent(component: IComponent);","Description","Removes a component from the tray. The component to remove.","hhhhh) SetLocation","[C#] public void SetLocation(IComponent receiver, Point location);","[C++] public: void SetLocation(IComponent* receiver, Point location);","[VB] Public Sub SetLocation(ByVal receiver As IComponent, ByVal location As Point)","[JScript] public function SetLocation(receiver: IComponent, location: Point);","Description","Sets the location of the specified component to the specified location. The component to set the location of. The new location for the specified component.","iiiii) IExtenderProvider.CanExtend","[C#] bool IExtenderProvider.CanExtend(object component);","[C++] bool IExtenderProvider::CanExtend(Object* component);","[VB] Function CanExtend(ByVal component As Object) As Boolean Implements IExtenderProvider.CanExtend","[JScript] function IExtenderProvider.CanExtend(component: Object): Boolean;","jjjjj) IOleDragClient.AddComponent","[C#] bool IOleDragClient.AddComponent(IComponent component, string name, bool firstAdd);","[C++] bool IOleDragClient::AddComponent(IComponent* component, String* name, bool firstAdd);","[VB] Function AddComponent(ByVal component As IComponent, ByVal name As String, ByVal firstAdd As Boolean) As Boolean Implements IOleDragClient.AddComponent","[JScript] function IOleDragClient.AddComponent(component: IComponent, name: String, firstAdd: Boolean): Boolean;","kkkkk) IOleDragClient.GetControlForComponent","[C#] Control IOleDragClient.GetControlForComponent(object component);","[C++] Control* IOleDragClient::GetControlForComponent(Object* component);","[VB] Function GetControlForComponent(ByVal component As Object) As Control Implements IOleDragClient.GetControlForComponent","[JScript] function IOleDragClient.GetControlForComponent(component: Object): Control;","lllll) IOleDragClient.GetDesignerControl","[C#] Control IOleDragClient.GetDesignerControl( );","[C++] Control* IOleDragClient::GetDesignerControl( );","[VB] Function GetDesignerControl( ) As Control Implements IOleDragClient.GetDesignerControl","[JScript] function IOleDragClient.GetDesignerControl( ): Control;","mmmmm) IOleDragClient.IsDropOk","[C#] bool IOleDragClient.IsDropOk(IComponent component);","[C++] bool IleDragClient::IsDropOk(IComponent* component);","[VB] Function IsDropOk(ByVal component As IComponent) As Boolean Implements IOleDragClient.IsDropOk","[JScript] function IOleDragClient.IsDropOk(component: IComponent): Boolean;","nnnnn) ISelectionUIHandler.BeginDrag","[C#] bool ISelectionUIHandler.BeginDrag(object[ ] components, SelectionRules rules, int initialX, int initialY);","[C++] bool ISelectionUIHandler::BeginDrag(Object* components _gc[ ], SelectionRules rules, int initialX, int initialY);","[VB] Function BeginDrag(ByVal components( ) As Object, ByVal rules As SelectionRules, ByVal initialX As Integer, ByVal initialY As Integer) As Boolean Implements ISelectionUIHandler.BeginDrag","[JScript] function ISelectionUIHandler.BeginDrag(components: Object[ ], rules: SelectionRules, initialX: int, initialY: int): Boolean;","ooooo) ISelectionUIHandler.DragMoved","[C#] void ISelectionUIHandler.DragMoved(object[ ] components, Rectangle offset);","[C++] void ISelectionUIHandler::DragMoved(Object* components _gc[ ], Rectangle offset);","[VB] Sub DragMoved(ByVal components( ) As Object, ByVal offset As Rectangle) Implements ISelectionUIHandler.DragMoved","[JScript] function ISelectionUIHandler.DragMoved(components: Object[ ], offset: Rectangle);","ppppp) ISelectionUIHandler.EndDrag","[C#] void ISelectionUIHandler.EndDrag(object[ ] components, bool cancel);","[C++] void ISelectionUIHandler::EndDrag(Object* components _gc[ ], bool cancel);","[VB] Sub EndDrag(ByVal components( ) As Object, ByVal cancel As Boolean) Implements ISelectionUIHandler.EndDrag","[JScript] function ISelectionUIHandler.EndDrag(components: Object[ ], cancel: Boolean);","qqqqq) ISelectionUIHandler.GetComponentBounds","[C#] Rectangle ISelectionUIHandler.GetComponentBounds(object component);","[C++] Rectangle ISelectionUIHandler::GetComponentBounds(Object* component);","[VB] Function GetComponentBounds(ByVal component As Object) As Rectangle Implements ISelectionUIHandler.GetComponentBounds","[JScript] function ISelectionUIHandler.GetComponentBounds(component: Object): Rectangle;","rrrrr) ISelectionUIHandler.GetComponentRules","[C#] SelectionRules ISelectionUIHandler.GetComponentRules(object component);","[C++] SelectionRules ISelectionUIHandler::GetComponentRules(Object* component);","[VB] Function GetComponentRules(ByVal component As Object) As SelectionRules Implements ISelectionUIHandler.GetComponentRules","[JScript] function ISelectionUIHandler.GetComponentRules(component: Object): SelectionRules;","sssss) ISelectionUIHandler.GetSelectionClipRect","[C#] Rectangle ISelectionUIHandler.GetSelectionClipRect(object component);","[C++] Rectangle ISelectionUIHandler::GetSelectionClipRect(Object* component);","[VB] Function GetSelectionClipRect(ByVal component As Object) As Rectangle Implements ISelectionUIHandler.GetSelectionClipRect","[JScript] function ISelectionUIHandler.GetSelectionClipRect(component: Object): Rectangle;","ttttt) ISelectionUIHandler.OleDragDrop","[C#] void ISelectionUIHandler.OleDragDrop(DragEventArgs de);","[C++] void ISelectionUIHandler::OleDragDrop(DragEventArgs* de);","[VB] Sub OleDragDrop(ByVal de As DragEventArgs) Implements ISelectionUIHandler.OleDragDrop","[JScript] function ISelectionUIHandler.OleDragDrop(de: DragEventArgs);","uuuuu) ISelectionUIHandler.OleDragEnter","[C#] void ISelectionUIHandler.OleDragEnter(DragEventArgs de);","[C++] void ISelectionUIHandler::OleDragEnter(DragEventArgs* de);","[VB] Sub OleDragEnter(ByVal de As DragEventArgs) Implements ISelectionUIHandler.OleDragEnter","[JScript] function ISelectionUIHandler.OleDragEnter(de: DragEventArgs);","vvvv) ISelectionUIHandler.OleDragLeave","[C#] void ISelectionUIHandler.OleDragLeave( );","[C++] void ISelectionUIHandler::OleDragLeave( );","[VB] Sub OleDragLeave( ) Implements ISelectionUIHandler.OleDragLeave","[JScript] function ISelectionUIHandler.OleDragLeave( );","wwwww) ISelectionUIHandler.OleDragOver","[C#] void ISelectionUIHandler.OleDragOver(DragEventArgs de);","[C++] void ISelectionUIHandler::OleDragOver(DragEventArgs* de);","[VB] Sub OleDragOver(ByVal de As DragEventArgs) Implements ISelectionUIHandler.OleDragOver","[JScript] function ISelectionUIHandler.OleDragOver(de: DragEventArgs);","xxxxx) ISelectionUIHandler.OnSelectionDoubleClick","[C#] void ISelectionUIHandler.OnSelectionDoubleClick(IComponent component);","[C++] void ISelectionUIHandler::OnSelectionDoubleClick(IComponent* component);","[VB] Sub OnSelectionDoubleClick(ByVal component As IComponent) Implements ISelectionUIHandler.OnSelectionDoubleClick","[JScript] function ISelectionUIHandler.OnSelectionDoubleClick(component: IComponent);","yyyyy) ISelectionUIHandler.QueryBeginDrag","[C#] bool ISelectionUIHandler.QueryBeginDrag(object[ ] components, SelectionRules rules, int initialX, int initialY);","[C++] bool ISelectionUIHandler::QueryBeginDrag(Object* components _gc[ ], SelectionRules rules, int initialX, int initialY);","[VB] Function QueryBeginDrag(ByVal components( ) As Object, ByVal rules As SelectionRules, ByVal initialX As Integer, ByVal initialY As Integer) As Boolean Implements ISelectionUIHandler.QueryBeginDrag","[JScript] function ISelectionUIHandler.QueryBeginDrag(components: Object[ ], rules: SelectionRules, initialX: int, initialY: int): Boolean;","zzzzz) ISelectionUIHandler.ShowContextMenu","[C#] void ISelectionUIHandler.ShowContextMenu(IComponent component);","[C++] void ISelectionUIHandler::ShowContextMenu(IComponent* component);","[VB] Sub ShowContextMenu(ByVal component As IComponent) Implements ISelectionUIHandler.ShowContextMenu","[JScript] function ISelectionUIHandler.ShowContextMenu(component: IComponent);","aaaaaa) WndProc","[C#] protected override void WndProc(ref Message m);","[C++] protected: void WndProc(Message* m);","[VB] Overrides Protected Sub WndProc(ByRef m As Message)","[JScript] protected override function WndProc(m: Message);","Description","Overrides the base class's WndProc method to monitor for specific messages. The message to process.","ControlDesigner class (System.Windows.Forms.Design)","a) WndProc","Description","Provides design-time support for components that extend Control.","Users wishing to extend the design-time support of their own components should inherit from System.Windows.Forms.Design.ControlDesigner.","b) WndProc","[C#] protected AccessibleObject accessibilityObj;","[C++] protected: AccessibleObject* accessibilityObj;","[VB] Protected accessibilityObj As AccessibleObject","[JScript] protected var accessibilityObj: AccessibleObject;","c) WndProc","[C#] protected static readonly Point InvalidPoint;","[C++] protected: static Point InvalidPoint;","[VB] Protected Shared ReadOnly InvalidPoint As Point","[JScript] protected static var InvalidPoint: Point;","Description","d) ControlDesigner","Example Syntax:","e) WndProc","[C#] public ControlDesigner( );","[C++] public: ControlDesigner( );","[VB] Public Sub New( )","[JScript] public function ControlDesigner( );","f) AccessibilityObject","g) WndProc","[C#] public virtual AccessibleObject AccessibilityObject {get;}","[C++] public: _property virtual AccessibleObject* get_AccessibilityObject( );","[VB] Overridable Public ReadOnly Property AccessibilityObject As AccessibleObject","[JScript] public function get AccessibilityObject( ): AccessibleObject;","Description","h) AssociatedComponents","i) WndProc","[C#] public override ICollection AssociatedComponents {get;}","[C++] public: _property virtual ICollection* get_AssociatedComponents( );","[VB] Overrides Public ReadOnly Property AssociatedComponents As ICollection","[JScript] public function get AssociatedComponents( ): ICollection;","Description","Gets or sets the collection of components associated with the designer.","j) Component","k) Control","l) WndProc","Description","Gets the control being designed.","m) EnableDragRect","n) WndProc","[C#] protected virtual bool EnableDragRect {get;}","[C++] protected: property virtual bool get EnableDragRect( );","[VB] Overridable Protected ReadOnly Property EnableDragRect As Boolean","[JScript] protected function get EnableDragRect( ): Boolean;","Description","Indicates whether drag rectangles can be drawn on this designer component.","o) InheritanceAttribute","p) Inherited","q) SelectionRules","r) WndProc","Description","Gets or sets the selection rules that indicate the movement capabilities of a component.","This should be one or more flags from the System.Windows.Forms.Design.SelectionRules class. If no designer provides rules for a component, the component will not get any UI services.","s) ShadowProperties","t) Verbs","u) BaseWndProc","[C#] protected void BaseWndProc(ref Message m);","[C++] protected: void BaseWndProc(Message* m);","[VB] Protected Sub BaseWndProc(ByRef m As Message)","[JScript] protected fuction BaseWndProc(m Message);","Description","Provides default processing for messages.","This method causes the message to get processed by windows, skipping the control. This is useful if you want to block this message from getting to the control, but you do not want to block it from getting to Windows itself because it causes other messages to be generated. The message to process.","v) CanBeParentedTo","[C#] public virtual bool CanBeParentedTo(IDesigner parentDesigner);","[C++] public: virtual bool CanBeParentedTo(IDesigner* parentDesigner);","[VB] Overridable Public Function CanBeParentedTo(ByVal parentDesigner As IDesigner) As Boolean","[JScript] public function CanBeParentedTo(parentDesigner: IDesigner): Boolean;","Description","Indicates whether the specified designer can be a child of the designer.","Return Value: true if the designer can be parented to the specified designer; otherwise, false.","This method's result typically indicates whether the specified designer's control can be a child of the designer's control. The designer to determine whether can be the parent of this designer.","w) DefWndProc","[C#] protected void DefWndProc(ref Message m);","[C++] protected: void DefWfndProc(Message* m);","[VB] Protected Sub DefWndProc(ByRef m As Message)","[JScript] protected function DefWndProc(m: Message);","Description","Provides default processing for messages.","This method causes the message to get processed by the control, rather than the designer. The message to process.","x) DisplayError","[C#] protected void DisplayError(Exception e);","[C++] protected: void DisplayError(Exception* e);","[VB] Protected Sub DisplayError(ByVal e As Exception)","[JScript] protected function DisplayError(e: Exception);","Description","Displays the specified exception to the user. The exception to display.","y) Dispose","[C#] protected override void Dispose(bool disposing);","[C++] protected: void Dispose(bool disposing);","[VB] Overrides Protected Sub Dispose(ByVal disposing As Boolean)","[JScript] protected override function Dispose(disposing: Boolean);","Description","Releases the unmanaged resources used by the System.Windows.Forms.Design.ControlDesigner and optionally releases the managed resources.","This method is called by the public Dispose( ) method and the System.Object.Finalize method. true to release both managed and unmanaged resources; false to release only unmanaged resources.","z) EnableDragDrop","[C#] protected void EnableDragDrop(bool value);","[C++] protected: void EnableDragDrop(bool value);","[VB] Protected Sub EnableDragDrop(ByVal value As Boolean)","[JScript] protected function EnableDragDrop(value: Boolean);","Description","Enables or disables drag\/drop support. true to enable drag\/drop support for the control; false if the control should not have drag\/drop support.","aa) GetHitTest","[C#] protected virtual bool GetHitTest(Point point);","[C++] protected: virtual bool GetHitTest(Point point);","[VB] Overridable Protected Function GetHitTest(ByVal point As Point) As Boolean","[JScript] protected function GetHitTest(point: Point): Boolean;","Description","Indicates whether the specified point is within the bounds of the component.","Return Value: true if the specified point is to be handled by the component; false if it is not something the user and this component can interact with.","System.Windows.Forms.Design.ControlDesigner.GetHitTest(System.Drawing.Point) determines whether a specified point is within the area occupied by the control that this designer is designing. This method allows your component to support a design-time user interface that responds to clicks on its control. This method should return true if the specified point was within the bounds of the component, or otherwise return false . A point relative to the upper left of the control.","bb) HookChildControls","[C+] protected void HookChildControls(Control firstChild);","[C++] protected: void HookChildControls(Control* firstChild);","[VB] Protected Sub HookChildControls(ByVal firstChild As Control)","[JScript] protected function HookChildControls(firstChild: Control);","Description","Hooks the children of the specified control.","We need to do this for child controls that are not in design mode, which is the case for composite controls. The first child control to process. This method may recursively call itself for children of this control.","cc) Initialize","[C#] public override void Initialize(IComponent component);","[C++] public: void Initialize(IComponent* component);","[VB] Overrides Public Sub Initialize(ByVal component As IComponent)","[JScript] public override function Initialize(component: IComponent);","Description","Initializes the designer with the specified component.","This method is called by the designer host to initialize the designer. The component to associate this designer with. This must always be an instance of Control.","dd) InitializeNonDefault","[C#] public override void InitializeNonDefault( );","[C++] public: void InitializeNonDefault( );","[VB] Overrides Public Sub InitializeNonDefault( )","[JScript] public override function InitializeNonDefault( );","Description","Initializes properties of the control to any non-default values.","ee) OnContextMenu","[C#] protected virtual void OnContextMenu(int x, int y);","[C++] protected: virtual void OnContextMenu(int x, int y);","[VB] Overridable Protected Sub OnContextMenu(ByVal x As Integer, ByVal y As Integer)","[JScript] protected function OnContextMenu(x: int, y: int);","Description","Called when the context menu should be displayed Called when the context menu should be displayed","ff) OnCreateHandle","[C#] protected virtual void OnCreateHandle( );","[C++] protected: virtual void OnCreateHandle( );","[VB] Overridable Protected Sub OnCreateHandle( )","[JScript] protected function OnCreateHandle( );","Description","This is called immediately after the control handle has been created.","gg) OnDragDrop","[C#] protected virtual void OnDragDrop(DragEventArgs de);","[C++] protected: virtual void OnDragDrop(DragEventArgs* de);","[VB] Overridable Protected Sub OnDragDrop(ByVal de As DragEventArgs)","[JScript] protected function OnDragDrop(de: DragEventArgs);","Description","Called when a drag drop object is dropped onto the control designer view Called when a drag drop object is dropped onto the control designer view","hh) OnDragEnter","[C#] protected virtual void OnDragEnter(DragEventArgs de);","[C++] protected: virtual void OnDragEnter(DragEventArgs* de);","[VB] Overridable Protected Sub OnDragEnter(ByVal de As DragEventArgs)","[JScript] protected function OnDragEnter(de: DragEventArgs);","Description","Called when a drag-drop operation enters the control designer view Called when a drag-drop operation enters the control designer view","ii) OnDragLeave","[C#] protected virtual void OnDragLeave(EventArgs e);","[C++] protected: virtual void OnDragLeave(EventArgs* e);","[VB] Overridable Protected Sub OnDragLeave(ByVal e As EventArgs)","[JScript] protected function OnDragLeave(e: EventArgs);","Description","Called when a drag-drop operation leaves the control designer view Called when a drag-drop operation leaves the control designer view","jj) OnDragOver","[C#] protected virtual void OnDragOver(DragEventArgs de);","[C++] protected: virtual void OnDragOver(DragEventArgs* de);","[VB] Overridable Protected Sub OnDragOver(ByVal de As DragEventArgs)","[JScript] protected function OnDragOver(de: DragEventArgs);","Description","Called when a drag drop object is dragged over the control designer view Called when a drag drop object is dragged over the control designer view","kk) OnGiveFeedback","[C#] protected virtual void OnGiveFeedback(GiveFeedbackEventArgs e);","[C++] protected: virtual void OnGiveFeedback(GiveFeedbackEventArgs* e);","[VB] Overridable Protected Sub OnGiveFeedback(ByVal e As GiveFeedbackEventArgs)","[JScript] protected function OnGiveFeedback(e: GiveFeedbackEventArgs);","Description","Event handler for our GiveFeedback event, which is called when a drag operation is in progress. The host will call us with this when an OLE drag event happens.","ll) OnMouseDragBegin","[C#] protected virtual void OnMouseDragBegin(int x, int y);","[C++] protected: virtual void OnMouseDragBegin(int x, int y);","[VB] Overridable Protected Sub OnMouseDragBegin(ByVal x As Integer, ByVal y As Integer)","[JScript] protected function OnMouseDragBegin(x: int, y: int);","Description","Called in response to the left mouse button being pressed on a component. This does two things. First, it ensures that the component is selected. Second, it uses the ISelectionUIService to begin a drag of all selected components. The location of the mouse. The location of the mouse.","mm) OnMouseDragEnd","[C#] protected virtual void OnMouseDragEnd(bool cancel);","[C++] protected: virtual void OnMouseDragEnd(bool cancel);","[VB] Overridable Protected .Sub OnMouseDragEnd(ByVal cancel As Boolean)","[JScript] protected function OnMouseDragEnd(cancel: Boolean);","Description","Called at the end of a drag operation. This either commits or rolls back the drag. Set this to true to cancel the drag, or false to commit it.","nn) OnMouseDragMove","[C#] protected virtual void OnMouseDragMove(int x, int y);","[C++] protected: virtual void OnMouseDragMove(int x, int y);","[VB] Overridable Protected Sub OnMouseDragMove(ByVal x As Integer, ByVal y As Integer)","[JScript] protected function OnMouseDragMove(x: int, y: int);","Description","Called for each movement of the mouse. This will check to see if a drag operation is in progress. If so, it will pass the updated drag dimensions on to the selection UI service. The x position, in screen coordinates, of the mouse. The y position, in screen coordinates, of the mouse.","oo) OnMouseEnter","[C#] protected virtual void OnMouseEnter( );","[C++] protected: virtual void OnMouseEnter( );","[VB] Overridable Protected Sub OnMouseEnter( )","[JScript] protected function OnMouseEnter( );","Description","Called when the mouse first enters the control. This is forwarded to the parent designer to enable the container selector.","pp) OnMouseHover","[C#] protected virtual void OnMouseHover( );","[C++] protected: virtual void OnMouseHover( );","[VB] Overridable Protected Sub OnMouseHover( )","[JScript] protected function OnMouseHover( );","Description","Called after the mouse hovers over the control. This is forwarded to the parent designer to enabled the container selector.","qq) OnMouseLeave","[C#] protected virtual void OnMouseLeave( );","[C++] protected: virtual void OnMouseLeave( );","[VB] Overridable Protected Sub OnMouseLeave( )","[JScript] protected function OnMouseLeave( );","Description","Called when the mouse first enters the control. This is forwarded to the parent designer to enable the container selector.","rr) OnPaintAdornments","[C#] protected virtual void OnPaintAdornments(PaintEventArgs pe);","[C++] protected: virtual void OnPaintAdornments(PaintEventArgs* pe);","[VB] Overridable Protected Sub OnPaintAdornments(ByVal pe As PaintEventArgs)","[JScript] protected function OnPaintAdornments(pe: PaintEventArgs);","Description","Called when the control we're designing has finished painting. This method gives the designer a chance to paint any additional adornments on top of the control. A paint event the designer may use to draw onto the control.","ss) OnSetComponentDefaults","[C#] public override void OnSetComponentDefaults( );","[C++] public: void OnSetComponentDefaults( );","[VB] Overrides Public Sub OnSetComponentDefaults( )","[JScript] public override function OnSetComponentDefaults( );","Description","Called when the designer is initialized. This allows the designer to provide some meaningful default values in the component. The default implementation of this sets the components's default property to it's name, if that property is a string.","tt) OnSetCursor","[C#] protected virtual void OnSetCursor( );","[C++] protected: virtual void OnSetCursor( );","[VB] Overridable Protected Sub OnSetCursor( )","[JScript] protected function OnSetCursor( );","Description","Called each time the cursor needs to be set. The ControlDesigner behavior here will set the cursor to one of three things: 1. If the toolbox service has a tool selected, it will allow the toolbox service to set the cursor. 2. If the selection UI service shows a locked selection, or if there is no location property on the control, then the default arrow will be set. 3. Otherwise, the four headed arrow will be set to indicate that the component can be clicked and moved. 4. If the user is currently dragging a component, the crosshair cursor will be used instead of the four headed arrow.","u) PreFilterProperties","[C#] protected override void PreFilterProperties(IDictionary properties);","[C++] protected: void PreFilterProperties(IDictionary* properties);","[VB] Overrides Protected Sub PreFilterProperties(ByVal properties As IDictionary)","[JScript] protected override function PreFilterProperties(properties: IDictionary);","Description","Allows a designer to filter the set of properties the component it is designing will expose through a TypeDescriptor object.","Return Value: The augmented set of properties. If the method does not modify any properties, it may just return a reference to its input parameter. If you do make a change to the properties, you must create a new array.","This method is called immediately before its corresponding \u201cPost\u201d method. If you are overriding this method you should call the base implementation before you perform your own filtering. The properties for the class of the component.","vv) UnhookChildControls","[C#] protected void UnhookChildControls(Control firstChild);","[C++] protected: void UnhookChildControls(Control* firstChild);","[VB] Protected Sub UnhookChildControls(ByVal firstChild As Control)","[JScript] protected function UnhookChildControls(firstChild: Control);","Description","Hooks the children of the specified control.","We need to do this for child controls that are not in design mode, which is the case for composite controls. The first child control to process. This method may recursively call itself for children of this control.","ww) WndProc","[C#] protected virtual void WndProc(ref Message m);","[C++] protected: virtual void WndProc(Message* m);","[VB] Overridable Protected Sub WndProc(ByRef m As Message)","[JScript] protected function WndProc(m: Message);","Description","This method should be called by the extending designer for each message the control would normally receive. This allows the designer to pre-process messages before allowing them to be routed to the control. The message.","ControlDesigner.ControlDesignerAccessibleObject class (System.Windows.Forms.Design)","a) WndProc","Description","b) ControlDesigner.ControlDesignerAccessibleObject","Example Syntax:","c) WndProc","[C#] public ControlDesigner.ControlDesignerAccessibleObject(ControlDesigner designer, Control control);","[C++] public: ControlDesignerAccessibleObject(ControlDesigner* designer, Control* control);","[VB] Public Sub New(ByVal designer As ControlDesigner, ByVal control As Control)","[JScript] public function ControlDesigner.ControlDesignerAccessibleObject(designer: ControlDesigner, control Control);","Description","d) Bounds","e) WndProc","[C#] public override Rectangle Bounds {get;}","[C++] public: _property virtual Rectangle get_Bounds( );","[VB] Overrides Public ReadOnly Property Bounds As Rectangle","[JScript] public function get Bounds( ): Rectangle;","Description","f) DefaultAction","g) WndProc","[C#] public override string DefaultAction {get;}","[C++] public: _property virtual String* get DefaultAction( );","[VB] Overrides Public ReadOnly Property DefaultAction As String","[JScript] public function get DefaultAction( ): String;","Description","h) Description","i) WndProc","[C#] public override string Description {get;}","[C++] public: _property virtual String* get_Description( );","[VB] Overrides Public ReadOnly Property Description As String","[JScript] public function get Description( ): String;","Description","j) Help","k) KeyboardShortcut","l) Name","m) WndProc","Description","n) Parent","o) WndProc","[C#] public override AccessibleObject Parent {get;}","[C++] public: _property virtual AccessibleObject* get_Parent( );","[VB] Overrides Public ReadOnly Property Parent As AccessibleObject","[JScript] public function get Parent( ): AccessibleObject;","Description","p) Role","q) WndProc","[C#] public override AccessibleRole Role {get;}","[C++] public: _property virtual AccessibleRole get_Role( );","[VB] Overrides Public ReadOnly Property Role As AccessibleRole","[JScript] public function get Roleo: AccessibleRole;","Description","r) State","s) WndProc","[C#] public override AccessibleStates State {get;}","[C++] public: _property virtual AccessibleStates get_State( );","[VB] Overrides Public ReadOnly Property State As AccessibleStates","[JScript] public function get State( ): AccessibleStates;","Description","t) Value","u) WndProc","[C#] public override string Value {get;}","[C++] public: _property virtual String* get Value( );","[VB] Overrides Public ReadOnly Property Value As String","[JScript] public function get Value( ): String;","Description","v) GetChild","[C#] public override AccessibleObject GetChild(int index);","[C++] public: AccessibleObject* GetChild(int index);","[VB] Overrides Public Function GetChild(ByVal index As Integer) As AccessibleObject","[JScript] public override function GetChild(index: int): AccessibleObject;","Description","w) GetChildCount","[C#] public override int GetChildCount( );","[C++] public: int GetChildCount( );","[VB] Overrides Public Function GetChildCount( ) As Integer","[JScript] public override function GetChildCount( ): int;","Description","x) GetFocused","[C#] public override AccessibleObject GetFocused( );","[C++] public: AccessibleObject* GetFocused( );","[VB] Overrides Public Function GetFocused( ) As AccessibleObject","[JScript] public override function GetFocused( ): AccessibleObject;","Description","y) GetSelected","[C#] public override AccessibleObject GetSelected( );","[C++] public: AccessibleObject* GetSelected( );","[VB] Overrides Public Function GetSelected( ) As AccessibleObject","[JScript] public override function GetSelected( ): AccessibleObject;","Description","z) HitTest","[C#] public override AccessibleObject HitTest(int x, int y);","[C++] public: AccessibleObject* HitTest(int X, int y);","[VB] Overrides Public Function HitTest(ByVal x As Integer, ByVal y As Integer) As AccessibleObject","[JScript] public override function HitTest(x: int, y: int): AccessibleObject;","Description","DockEditor class (System.Windows.Forms.Design)","a) UseStdAccessibleObjects","Description","Provides a user interface for specifying a System.Windows.Forms.Control.Dock property.","b) DockEditor","Example Syntax:","c) UseStdAccessibleObjects","[C#] public DockEditor( );","[C++] public: DockEditor( );","[VB] Public Sub New( )","[JScript] public function DockEditor( );","d) EditValue","[C#] public override object EditValue(ITypeDescriptorContext context, IServiceProvider provider, object value);","[C++] public: Object* EditValue(ITypeDescriptorContext* context, IServiceProvider* provider, Object* value);","[VB] Overrides Public Function EditValue(ByVal context As ITypeDescriptorContext, ByVal provider As IServiceProvider, ByVal value As Object) As Object","[JScript] public override function EditValue(context: ITypeDescriptorContext, provider: IServiceProvider, value: Object): Object;","Description","Edits the specifiedn object value using the editor style provided by GetEditorStyle. A service provider is provided so that any required editing services can be obtained.","Return Value: The new value of the object. If the value of the object hasn't changed, this should return the same object it was passed. An System.ComponentModel.ITypeDescriptorContext that can be used to gain additional context information. A service provider object through which editing services may be obtained. An instance of the value being edited.","e) GetEditStyle","[C#] public override UITypeEditorEditStyle GetEditStyle(ITypeDescriptorContext context);","[C++] public: UITypeEditorEditStyle GetEditStyle(ITypeDescriptorContext* context);","[VB] Overrides Public Function GetEditStyle(ByVal context As ITypeDescriptorContext) As UITypeEditorEditStyle","[JScript] public override function GetEditStyle(context: ITypeDescenptorContext): UITypeEditorEditStyle;","Description","Retrieves the editing style of the EditValue method. If the method is not supported, this will return None.","Return Value: An enum value indicating the provided editing style. An System.ComponentModel.ITypeDescriptorContext that can be used to gain additional context information.","DocumentDesigner class (System.Windows.Forms.Design)","a) ToString","Description","Provides a designer that extends the ScrollableControlDesigner and implements IRootDesigner.","This designer is a \u201croot\u201d designer meaning that it represents the document the user is working on. Any functionality that is shared between all top level documents should appear here, while things specific to only forms or user controls should go in their respective designers.","b) ToString","c) DocumentDesigner","Example Syntax:","d) ToString","e) AccessibilityObject","AssociatedComponents","g) Component","h) Control","i) DefaultControlLocation","j) DrawGrid","k) EnableDragRect","l) GridSize","m) InheritanceAttribute","n) Inherited","o) SelectionRules P) ToString","Description","We override our selectino rules to make the document non-sizeable.","q) ShadowProperties","r) Verbs","s) Dispose","[C#] protected override void Dispose(bool disposing);","[C++] protected: void Dispose(bool disposing);","[VB] Overrides Protected Sub Dispose(ByVal disposing As Boolean)","[JScript] protected override function Dispose(disposing: Boolean);","Description","Disposes of this designer.","t) EnsureMenuEditorService","[C#] protected virtual void EnsureMenuEditorService(IComponent c);","[C++] protected: virtual void EnsureMenuEditorService(IComponent* c);","[VB] Overridable Protected Sub EnsureMenuEditorService(ByVal c As IComponent)","[JScript] protected function EnsureMenuEditorService(c: IComponent);","Description","Determines if a MenuEditorService has already been started. If not, this method will create a new instance of the service.","u) GetToolSupported","[C#] protected virtual bool GetToolSupported(ToolboxItem tool);","[C++] protected: virtual bool GetToolSupported(ToolboxItem* tool);","[VB] Overridable Protected Function GetToolSupported(ByVal tool As ToolboxItem) As Boolean","[JScript] protected function GetToolSupported(tool: ToolboxItem): Boolean;","Description","Determines if the given tool is supported by this designer. If a tool is supported then it will be enabled in the toolbox when this designer regains focus. Otherwise, it will be disabled. Once a tool is marked as enabled or disabled it may not be queried again.\n\nReturn Value: true if the tool should be enabled on the toolbox or false if the document designer doesn't know how to use the tool. The tool that is to be enabled on the toolbox.\n","v) Initialize","[C#] public override void Initialize(IComponent component);","[C++] public: void Initialize(IComponent* component);","[VB] Overrides Public Sub Initialize(ByVal component As IComponent)","[JScript] public override function Initialize(component: IComponent);","Description","Initializes the designer with the given component. The designer can get the component's site and request services from it in this call. The component to associate with this designer.","w) OnContextMenu","[C#] protected override void OnContextMenu(int x, int y);","[C++] protected: void OnContextMenu(int x, int y);","[VB] Overrides Protected Sub OnContextMenu(ByVal x As Integer, ByVal y As Integer)","[JScript] protected override function OnContextMenu(x: int, y: int);","Description","Called when the context menu should be displayed. This displays the document context menu.","x) OnCreateHandle","[C#] protected override void OnCreateHandle( );","[C++] protected: void OnCreateHandle( );","[VB] Overrides Protected Sub OnCreateHandle( )","[JScript] protected override function OnCreateHandle( );","Description","This is called immediately after the control handle has been created.","v) PreFilterProperties","[C#] protected override void PreFilterProperties(IDictionary properties);","[C++] protected: void PreFilterProperties(IDictionary* properties);","[VB] Overrides Protected Sub PreFilterProperties(ByVal properties As IDictionary)","[JScript] protected override function PreFilterProperties(properties: IDictionary);","Description","Allows a designer to filter the set of properties the component it is designing will expose through the TypeDescriptor object. This method is called immediately before its corresponding \u201cPost\u201d method. If you are overriding this method you should call the base implementation before you perform your own filtering.\n\nReturn Value: The augmented set of properties. If the method does not modify any properties, it may just return a reference to its input parameter. If you do make a change to the properties, you must create a new array. The properties for the class of the component.\n","z) IRootDesigner.GetView","[C#] object IRootDesigner.GetView(ViewTechnology technology);","[C++] Object* IRootDesigner::GetView(ViewTechnology technology);","[VB] Function GetView(ByVal technology As ViewTechnology) As Object Implements IRootDesigner.GetView","[JScript] function IRootDesigner.GetView(technology: ViewTechnology) Object;","aa) IToolboxUser.GetToolSupported","[C#] bool IToolboxUser.GetToolSupported(ToolboxItem tool);","[C++] bool IToolboxUser::GetToolSupported(ToolboxItem* tool);","[VB] Function GetToolSupported(ByVal tool As ToolboxItem) As Boolean Implements IToolboxUser.GetToolSupported","[JScript] function IToolboxUser.GetToolSupported(tool: ToolboxItem): Boolean;","bb) IToolboxUser.ToolPicked","[C#] void IToolboxUser.ToolPicked(ToolboxItem tool);","[C++] void IToolboxUser::ToolPicked(ToolboxItem* tool);","[VB] Sub ToolPicked(ByVal tool As ToolboxItem) Implements IToolboxUser.ToolPicked","[JScript] function IToolboxUser.ToolPicked(tool: ToolboxItem);","cc) IOleDragClient.GetControlForComponent","[C#] Control IOleDragClient.GetControlForComponent(object component);","[C++] Control* IOleDragClient::GetControlForComponent(Object* component);","[VB] Function GetControlForComponent(ByVal component As Object) As Control Implements IOleDragClient.GetControlForComponent","[JScript] function IOleDragClient.GetControlForComponent(component: Object): Control;","dd) ToolPicked","[C#] protected virtual void ToolPicked(ToolboxItem tool);","[C++] protected: virtual void ToolPicked(ToolboxItem* tool);","[VB] Overridable Protected Sub ToolPicked(ByVal tool As ToolboxItem)","[JScript] protected function ToolPicked(tool: ToolboxItem);","Description","This will be called when the user double-clicks on a toolbox item. The document designer should create a component for the given tool. The tool to create.","ee) WndProc","[C#] protected override void WndProc(ref Message m);","[C++] protected: void WndProc(Message* m);","[VB] Overrides Protected Sub WndProc(ByRef m As Message)","[JScript] protected override function WndProc(m: Message);","Description","Overrides our base class WndProc to provide support for the menu editor service. The message to handle.","EventHandlerService class (System.Windows.Forms.Design)","a) WndProc","Description","The event handler service provides a unified way to handle the various events that our form designer must process. What we want to be able to do is to write code in one place that handles events of a certain type. We also may need to globally change the behavior of these events for modal functions like the tab order UI. Our designer, however, is in many pieces so we must somehow funnel these events to a common place. This service implements an \u201cevent stack\u201d that contains the current set of event handlers. There can be different types of handlers on the stack. For example, we may push a keyboard handler and a mouse handler. When you request a handier, we will find the topmost handler on the stack that fits the class you requested. This way the service can be extended to any eventing scheme, and it also allows sections of a handler to be replaced (eg, you can replace mouse handling without effecting menus or the keyboard).","b) EventHandlerService","Example Syntax:","c) WndProc","[C#] public EventHandlerService(Control focuswnd);","[C++] public: EventHandlerService(Control* focuswnd);","[VB] Public Sub New(ByVal focusWnd As Control)","[JScript] public function EventHandlerService(focusWnd: Control);","Description","d) Focus Window","e) WndProc","[C#] public Control FocusWindow {get;}","[C++] public: _property Control* get_FocusWindow( );","[VB] Public ReadOnly Property FocusWindow As Control","[JScript] public function get FocusWindow( ): Control;","Description","f) WndProc","[C#] public event EventHandler EventHandlerChanged;","[C++] public: sealed _event EventHandler* EventHandlerChanged;","[VB] NotOverridable Public Event EventHandlerChanged As EventHandler","Description","g) GetHandler","[C#] public object GetHandler(Type handlerType);","[C++] public: _sealed Object* GetHandler(Type* handlerType);","[VB] NotOverridable Public Function GetHandler(ByVal handlerType As Type) As Object","[JScript] public function GetHandler(handlerType: Type): Object;","Description","Gets the currently active event handler of the specified type.","Return Value: An instance of the handler, or null if there is no handler of the requested type.","You should never cache this value because other components are free to change it. This call is fairly quick, however, especially for cases when you are always asking for the same type of handler. The type of the handler to get.","h) PopHandler","[C#] public void PopHandler(object handler);","[C++] public: _sealed void PopHandler(Object* handler);","[VB] NotOverridable Public Sub PopHandler(ByVal handler As Object)","[JScript] public function PopHandler(handler: Object);","Description","Pops the given handler off of the stack.","If the handler is not the topmost component on the stack, this will pop all handlers up to and including handler. The handler to remove from the stack.","i) PushHandler","[C#] public void PushHandler(object handler);","[C++] public: _sealed void PushHandler(Object* handler);","[VB] NotOverridable Public Sub PushHandler(ByVal handler As Object)","[JScript] public function PushHandler(handler: Object);","Description","Pushes a new event handler on the stack.","This handler will be used by all components that request a compatible handler type. If this handler does not support the requested type, the next handler on the stack will be used. The handle to add to the stack.","FileNameEditor class (System.Windows.Forms.Design)","a) ToString","Description","Provides a user interface for editing a filename property.","System.Windows.Forms.Design.FileNameEditor provides a file selection dialog for filename selection and editing.","b) FileNameEditor","Example Syntax:","c) ToString","[C#] public FileNameEditor( );","[C++] public: FileNameEditor( );","[VB] Public Sub New( )","[JScript] public function FileNameEditor( );","d) EditValue","[C#] public override object EditValue(ITypeDescriptorContext context, IServiceProvider provider, object value);","[C++] public: Object* EditValue(ITypeDescriptorContext* context, IServiceProvider* provider, Object* value);","[VB] Overrides Public Function EditValue(ByVal context As ITypeDescriptorContext, ByVal provider As IServiceProvider, ByVal value As Object) As Object","[JScript] public override function EditValue(context: ITypeDescriptorContext, provider: IServiceProvider, value: Object): Object;","Description","Edits the specified object using the editor style provided by System.Windows.Forms.Design.FileNameEditor.GetEditStyle(System.ComponentModel.ITypeDescriptorContext).","Return Value: The new value of the object. If the value of the object hasn't changed, this should return the same object it was passed.","A service provider is provided so that any required editing services can be obtained. An System.ComponentModel.ITypeDescriptorContext that can be used to gain additional context information. A service provider object through which editing services may be obtained. An instance of the value being edited.","e) GetEditStyle","[C#] public override UITypeEditorEditStyle GetEditStyle(ITypeDescriptorContext context);","[C++] public: UITypeEditorEditStyle GetEditStyle(ITypeDescriptorContext* context);","[VB] Overrides Public Function GetEditStyle(ByVal context As ITypeDescriptorContext) As UITypeEditorEditStyle","[JScript] public override function GetEditStyle(context: ITypeDescriptorContext): UITypeEditorEditStyle;","Description","Gets the editing style of the Edit method.","Return Value: A System.Drawing.Design.UITypeEditorEditStyle enum value indicating the provided editing style.","If the Edit method is not supported, this will return None. An System.ComponentModel.ITypeDescriptorContext that can be used to gain additional context information.","f) InitializeDialog","[C#] protected virtual void InitializeDialog(OpenFileDialog openFileDialog);","[C++] protected: virtual void InitializeDialog(OpenFileDialog* openFileDialog);","[VB] Overridable Protected Sub InitializeDialog(ByVal openFileDialog As OpenFileDialog)","[JScript] protected function InitializeDialog(openFileDialog: OpenFileDialog);","Description","Initializes the open file dialog when it is created.","This method configures the dialog with a generic file filter and title. An instance of the System.Windows.Forms.OpenFileDialog we will use to choose a file name.","FolderNameEditor.FolderBrowser class (System.Windows.Forms.Design)","a) ToString","Description","b) FolderNameEditor.FolderBrowser","Example Syntax:","c) ToString","[C#] public FolderNameEditor.FolderBrowser( );","[C++] public: FolderBrowser( );","[VB] Public Sub New( )","[JScript] public function FolderNameEditor.FolderBrowser( );","d) Container","e) Description","f) ToString","Description","Gets or sets a description to show above the folders. Here you can provide instructions for selecting a folder.","g) DesignMode","h) DirectoryPath","i) ToString","Description","Gets the directory path of the folder the user picked.","j) Events","k) Site","l) StartLocation","m) ToString","Description","Gets\/sets the start location of the root node.","n) Style","o) ToString","[C#] public FolderNameEditor.FolderBrowserStyles Style {get; set;}","[C++] public: _property FolderNameEditor.FolderBrowserStyles get_Style( ); public: _property void set_Style(FolderNameEditor.FolderBrowserStyles);","[VB] Public Property Style As FolderNameEditor.FolderBrowserStyles","[JScript] public function get Style( ): FolderNameEditor.FolderBrowserStyles; public function set Style(FolderNameEditor.FolderBrowserStyles);","Description","The styles the folder browser will use when browsing folders. This should be a combination of flags from the FolderBrowserStyles enum.","p) ShowDialog","[C#] public DialogResult ShowDialog( );","[C++] public: DialogResult ShowDialog( );","[VB] Public Function ShowDialog( ) As DialogResult","[JScript] public function ShowDialog( ): DialogResult;","Description","Shows the folder browser dialog.","q) ShowDialog","[C#] public DialogResult ShowDialog(IWin32Window owner);","[C++] public: DialogResult ShowDialog(IWin32Window* owner);","[VB] Public Function ShowDialog(ByVal owner As IWin32Window) As DialogResult","[JScript] public function ShowDialog(owner: IWin32Window): DialogResult;","Description","Shows the folder browser dialog with the specified owner.","Return Value: The DialogResult from the form. Top-level window that will own the modal dialog (e.g.: System.Windows.Forms.Form).","FolderNameEditor.FolderBrowserFolder enumeration","(System.Windows.Forms.Design)","a) ToString","Description","b) ToString","[C#] public const FolderNameEditor.FolderBrowserFolder Desktop;","[C++] public: const FolderNameEditor.FolderBrowserFolder Desktop;","[VB] Public Const Desktop As FolderNameEditor.FolderBrowserFolder","[JScript] public var Desktop: FolderNameEditor.FolderBrowserFolder;","Description","The user's desktop.","c) ToString","[C#] public const FolderNameEditor.FolderBrowserFolder Favorites;","[C++] public: const FolderNameEditor.FolderBrowserFolder Favorites;","[VB] Public Const Favorites As FolderNameEditor.FolderBrowserFolder","[JScript] public var Favorites: FolderNameEditor.FolderBrowserFolder;","Description","The user's favorites list.","d) ToString","[C#] public const FolderNameEditor.FolderBrowserFolder MyComputer;","[C++] public: const FolderNameEditor.FolderBrowserFolder MyComputer;","[VB] Public Const MyComputer As FolderNameEditor.FolderBrowserFolder","[JScript] public var MyComputer: FolderNameEditor.FolderBrowserFolder;","Description","The contents of the My Computer icon.","e) ToString","[C#] public const FolderNameEditor.FolderBrowserFolder MyDocuments;","[C++] public: const FolderNameEditor.FolderBrowserFolder MyDocuments;","[VB] Public Const MyDocuments As FolderNameEditor.FolderBrowserFolder","[JScript] public var MyDocuments: FolderNameEditor.FolderBrowserFolder;","Description","The user's My Documents folder.","f) ToString","[C#] public const FolderNameEditor.FolderBrowserFolder MyPictures;","[C++] public: const FolderNameEditor.FolderBrowserFolder MyPictures;","[VB] Public Const MyPictures As FolderNameEditor.FolderBrowserFolder","[JScript] public var MyPictures: FolderNameEditor.FolderBrowserFolder;","Description","User's location to store pictures.","g) ToString","[C#] public const FolderNameEditor.FolderBrowserFolder NetAndDialUpConnections;","[C++] public: const FolderNameEditor.FolderBrowserFolder NetAndDialUpConnections;","[VB] Public Const NetAndDialUpConnections As FolderNameEditor.FolderBrowserFolder","[JScript] public var NetAndDialUpConnections FolderNameEditor.FolderBrowserFolder;","Description","Network and dial-up connections.","h) ToString","[C#] public const FolderNameEditor.FolderBrowserFolder NetworkNeighborhood;","[C++] public: const FolderNameEditor.FolderBrowserFolder NetworkNeighborhood;","[VB] Public Const NetworkNeighborhood As FolderNameEditor.FolderBrowserFolder","[JScript] public var NetworkNeighborhood: FolderNameEditor.FolderBrowserFolder;","Description","The network neighborhood.","i) ToString","[C#] public const FolderNameEditor.FolderBrowserFolder Printers;","[C++] public: const FolderNameEditor.FolderBrowserFolder Printers;","[VB] Public Const Printers As FolderNameEditor.FolderBrowserFolder","[JScript] public var Printers: FolderNameEditor.FolderBrowserFolder;","Description","A folder containing installed printers.","j) ToString","[C#] public const FolderNameEditor.FolderBrowserFolder Recent;","[C++] public: const FolderNameEditor.FolderBrowserFolder Recent;","[VB] Public Const Recent As FolderNameEditor.FolderBrowserFolder","[JScript] public var Recent: FolderNameEditor.FolderBrowserFolder;","Description","A folder containing shortcuts to recently opened files.","k) ToString","[C#] public const FolderNameEditor.FolderBrowserFolder SendTo;","[C++] public: const FolderNameEditor.FolderBrowserFolder SendTo;","[VB] Public Const SendTo As FolderNameEditor.FolderBrowserFolder","[JScript] public var SendTo: FolderNameEditor.FolderBrowserFolder;","Description","A folder containing shortcuts to applications to send documents to.","l) ToString","[C#] public const FolderNameEditor.FolderBrowserFolder StartMenu;","[C++] public: const FolderNameEditor.FolderBrowserFolder StartMenu;","[VB] Public Const StartMenu As FolderNameEditor.FolderBrowserFolder","[JScript] public var StartMenu: FolderNameEditor.FolderBrowserFolder;","Description","The user's start menu.","m) ToString","[C#] public const FolderNameEditor.FolderBrowserFolder Templates;","[C++] public: const FolderNameEditor.FolderBrowserFolder Templates;","[VB] Public Const Templates As FolderNameEditor.FolderBrowserFolder","[JScript] public var Templates: FolderNameEditor.FolderBrowserFolder;","Description","The user's file templates.","FolderNameEditor.FolderBrowserStyles enumeration","(System.Windows.Forms.Design)","a) ToString","Description","Specifies various styles that may be applied to the System.Windows.Forms.Design.FolderNameEditor.FolderBrowser object.","b) ToString","[C#] public const FolderNameEditor.FolderBrowserStyles BrowseForComputer;","[C++] public: const FolderNameEditor.FolderBrowserStyles BrowseForComputer;","[VB] Public Const BrowseForComputer As FolderNameEditor.FolderBrowserStyles","[JScript] public var BrowseForComputer FolderNameEditor.FolderBrowserStyles;","Description","Only return computers. If the user selects anything other than a computer, the OK button is grayed.","c) ToString","[C#] public const FolderNameEditor.FolderBrowserStyles BrowseForEverything;","[C++] public: const FolderNameEditor.FolderBrowserStyles BrowseForEverything;","[VB] Public Const BrowseForEverything As FolderNameEditor.FolderBrowserStyles","[JScript] public var BrowseForEverything FolderNameEditor.FolderBrowserStyles;","Description","Include everything. This will also include files.","d) ToString","[C#] public const FolderNameEditor.FolderBrowserStyles BrowseForPrinter;","[C++] public: const FolderNameEditor.FolderBrowserStyles BrowseForPrinter;","[VB] Public Const BrowseForPrinter As FolderNameEditor.FolderBrowserStyles","[JScript] public var BrowseForPrinter A FolderNameEditor.FolderBrowserStyles;","Description","Only return printers. If the user selects anything other than a printer, the OK button is grayed.","e) ToString","[C#] public const FolderNameEditor.FolderBrowserStyles RestrictToDomain;","[C++] public: const FolderNameEditor.FolderBrowserStyles RestrictToDomain;","[VB] Public Const RestrictToDomain As FolderNameEditor.FolderBrowserStyles","[JScript] public var RestrictToDomain: FolderNameEditor.FolderBrowserStyles;","Description","Do not include network folders below the domain level in the dialog box's tree view control.","f) ToString","[C+] public const FolderNameEditor.FolderBrowserStyles RestrictToFilesystem;","[C++] public: const FolderNameEditor.FolderBrowserStyles RestrictToFilesystem;","[VB] Public Const RestrictToFilesystem As FolderNameEditor.FolderBrowserStyles","[JScript] public var RestrictToFilesystem FolderNameEditor.FolderBrowserStyles;","Description","Only return file system directories. If the user selects folders that are not part of the file system, the OK button is grayed.","g) ToString","[C#] public const FolderNameEditor.FolderBrowserStyles RestrictToSubfolders;","[C++] public: const FolderNameEditor.FolderBrowserStyles RestrictToSubfolders;","[VB] Public Const RestrictToSubfolders As FolderNameEditor.FolderBrowserStyles","[JScript] public var RestrictToSubfolders FolderNameEditor.FolderBrowserStyles;","Description","Only return file system that is a subfolder of the root folder in the namespace hierarchy. If the user selects a subfolder of the root folder that is not part of the file system, the OK button is grayed.","h) ToString","[C#] public const FolderNameEditor.FolderBrowserStyles ShowTextBox;","[C++] public: const FolderNameEditor.FolderBrowserStyles ShowTextBox;","[VB] Public Const ShowTextBox As FolderNameEditor.FolderBrowserStyles","[JScript] public var ShowTextBox: FolderNameEditor.FolderBrowserStyles;","Description","Includes a textbox control in the browse dialog box that allows the user to type the name of an item.","FolderNameEditor class (System.Windows.Forms.Design)","a) ToString","Description","Provides a user interface for choosing a folder from the file system.","You may customize the folder options by inheriting from this class and overriding System.Windows.Forms.Design.FolderNameEditor.InitializeDialog(System.Windows.Forms.Design.FolderNameEditor.FolderBrowser).","b) FolderNameEditor","Example Syntax:","c) ToString","[C#] public FolderNameEditor( );","[C++] public: FolderNameEditor( );","[VB] Public Sub New( )","[JScript] public function FolderNameEditor( );","d) EditValue","[C#] public override object EditValue(ITypeDescriptorContext context, IServiceProvider provider, object value);","[C++] public: Object* EditValue(ITypeDescriptorContext* context, IServiceProvider* provider, Object* value);","[VB] Overrides Public Function EditValue(ByVal context As ITypeDescriptorContext, ByVal provider As IServiceProvider, ByVal value As Object) As Object","[JScript] public override function EditValue(context: ITypeDescriptorContext, provider: IServiceProvider, value: Object): Object;","Description","Edits the specified object using the editor style provided by System.Windows.Forms.Design.FolderNameEditor.GetEditStyle(System.ComponentModel.ITypeDescriptorContext).","Return Value: The new value of the object, or the old value if the object couldn't be updated. An System.ComponentModel.ITypeDescriptorContext that can be used to gain additional context information. A service object provider. The value to set.","e) GetEditStyle","[C#] public override UITypeEditorEditStyle GetEditStyle(ITypeDescriptorContext context);","[C++] public: UITypeEditorEditStyle GetEditStyle(ITypeDescriptorContext* context);","[VB] Overrides Public Function GetEditStyle(ByVal context As ITypeDescriptorContext) As UITypeEditorEditStyle","[JScript] public override function GetEditStyle(context: ITypeDescriptorContext): UITypeEditorEditStyle;","Description","Gets the editing style of the Edit method.","Return Value: A System.Drawing.Design.UITypeEditorEditStyle enum value indicating the provided editing style.","If the Edit method is not supported, this will return None. An System.ComponentModel.ITypeDescriptorContext that can be used to gain additional context information.","f) InitializeDialog","[C#] protected virtual void InitializeDialog(FolderNameEditor.FolderBrowser folderBrowser);","[C++] protected: virtual void InitializeDialog(FolderNameEditor.FolderBrowser* folderBrowser);","[VB] Overridable Protected Sub InitializeDialog(ByVal folderBrowser As FolderNameEditor.FolderBrowser)","[JScript] protected function InitializeDialog(folderBrowser FolderNameEditor.FolderBrowser);","Description","Initializes the folder browser dialog.","The default implementation provides a generic folder browser. A System.Windows.Forms.Design.FolderNameEditor.FolderBrowser to choose a folder.","IMenuEditorService interface (System.Windows.Forms.Design)","a) ToString","Description","Provides access to the menu editing service.","Most of the implementation of this service is provided by the host environment.","b) GetMenu","[C#] Menu GetMenu( );","[C++] Menu* GetMenu( );","[VB] Function GetMenu( ) As Menu","[JScript] function GetMenu( ) Menu;","Description","Gets the current menu.","c) IsActive","[C#] bool IsActive( );","[C++] bool IsActive( );","[VB] Function IsActive( ) As Boolean","[JScript] function IsActive( ): Boolean;","Description","Indicates whether the current menu is active.","d) MessageFilter","[C#] bool MessageFilter(ref Message m);","[C++] bool MessageFilter(Message* m)","[VB] Function MessageFilter(ByRef m As Message) As Boolean","[JScript] function MessageFilter(m: Message): Boolean;","Description","Allows the editor service to intercept Win32 messages.","e) SetMenu","[C#] void SetMenu(Menu menu);","[C++] void SetMenu(Menu* menu);","[VB] Sub SetMenu(ByVal menu As Menu)","[JScript] function SetMenu(menu: Menu);","Description","Sets the current menu visible on the form.","The menu will be painted at the top of a form's window frame and can be directly edited by the user. The menu to render.","f) SetSelection","[C#] void SetSelection(MenuItem item);","[C++] void SetSelection(MenuItem* item);","[VB] Sub SetSelection(ByVal item As MenuItem)","[JScript] function SetSelection(item: MenuItem);","Description","Sets the selected menu item of the current menu.","AxImporter.IReferenceResolver interface","(System.Windows.Forms.Design)","a) SetSelection","b) ResolveActiveXReference","[C#] string ResolveActiveXReference(UCOMITypeLib typeLib);","[C++] String* ResolveActiveXReference(UCOMITypeLib* typeLib);","[VB] Function ResolveActiveXReference(ByVal typeLib As UCOMITypeLib) As String","[JScript] function ResolveActiveXReference(typeLib: UCOMITypeLib): String;","c) ResolveComReference","[C#] string ResolveComReference(AssemblyName name);","[C++] String* ResolveComReference(AssemblyName* name);","[VB] Function ResolveComReference(ByVal name As AssemblyName) As String","[JScript] function ResolveComReference(name: AssemblyName): String;","d) ResolveComReference","[C#] string ResolveComReference(UCOMITypeLib typeLib);","[C++] String* ResolveComReference(UCOMITypeLib* typeLib);","[VB] Function ResolveComReference(ByVal typeLib As UCOMITypeLib) As String","[JScript] function ResolveComReference(typeLib: UCOMITypeLib): String;","e) ResolveManagedReference","[C#] string ResolveManagedReference(string assemName);","[C++] String* ResolveManagedReference(String* assemName);","[VB] Function ResolveManagedReference(ByVal assemName As String) As String","[JScript] function ResolveManagedReference(assemName: String): String; MenuCommands class (System.Windows.Forms.Design)","a) ResolveManagedReference","Description","Provides command IDs and GUIDS that correspond to the host Command Bar menu layout.","b) ResolveManagedReference","[C#] public static readonly CommandID ComponentTrayMenu;","[C++] public: static CommandID* ComponentTrayMenu;","[VB] Public Shared ReadOnly ComponentTrayMenu As CommandID","[JScript] public static var ComponentTrayMenu: CommandID;","Description","c) ResolveManagedReference","[C#] public static readonly CommandID ContainerMenu;","[C++] public: static CommandID* ContainerMenu;","[VB] Public Shared ReadOnly ContainerMenu As CommandID","[JScript] public static var ContainerMenu: CommandID;","Description","d) ResolveManagedReference","[C#] public static readonly CommandID DesignerProperties;","[C++] public: static CommandID* DesignerProperties;","[VB] Public Shared ReadOnly DesignerProperties As CommandID","[JScript] public static var DesignerProperties: CommandID;","Description","e) ResolveManagedReference","[C#] public static readonly CommandID KeyCancel;","[C++] public: static CommandID* KeyCancel;","[VB] Public Shared ReadOnly KeyCancel As CommandID","[JScript] public static var KeyCancel: CommandID;","Description","d) ResolveManagedReference","[C#] public static readonly CommandID KeyDefaultAction;","[C++] public: static CommandID* KeyDefaultAction;","[VB] Public Shared ReadOnly KeyDefaultAction As CommandID","[JScript] public static var KeyDefaultAction: CommandID;","Description","g) ResolveManagedReference","[C#] public static readonly CommandID KeyMoveDown;","[C++] public: static CommandID* KeyMoveDown;","[VB] Public Shared ReadOnly KeyMoveDown As CommandID","[JScript] public static var KeyMoveDown: CommandID;","Description","h) ResolveManagedReference","[C#] public static readonly CommandID KeyMoveLeft;","[C++] public: static CommandID* KeyMoveLeft;","[VB] Public Shared ReadOnly KeyMoveLeft As CommandID","[JScript] public static var KeyMoveLeft: CommandID;","Description","i) ResolveManagedReference","[C#] public static readonly CommandID KeyMoveRight;","[C++] public: static CommandID* KeyMoveRight;","[VB] Public Shared ReadOnly KeyMoveRight As CommandID","[JScript] public static var KeyMoveRight: CommandID;","Description","j) ResolveManagedReference","[C#] public static readonly CommandID KeyMoveUp;","[C++] public: static CommandID* KeyMoveUp;","[VB] Public Shared ReadOnly KeyMoveUp As CommandID","[JScript] public static var KeyMoveUp: CommandID;","Description","k) ResolveManagedReference","[C#] public static readonly CommandID KeyNudgeDown;","[C++] public: static CommandID* KeyNudgeDown;","[VB] Public Shared ReadOnly KeyNudgeDown As CommandID","[JScript] public static var KeyNudgeDown: CommandID;","Description","l) ResolveManagedReference","[C#] public static readonly CommandID KeyNudgeHeightDecrease;","[C++] public: static CommandID* KeyNudgeHeightDecrease;","[VB] Public Shared ReadOnly KeyNudgeHeightDecrease As CommandID","[JScript] public static var KeyNudgeHeightDecrease: CommandID;","Description","m) ResolveManagedReference","[C#] public static readonly CommandID KeyNudgeHeightIncrease;","[C++] public: static CommandID* KeyNudgeHeightIncrease;","[VB] Public Shared ReadOnly KeyNudgeHeightIncrease As CommandID","[JScript] public static var KeyNudgeHeightIncrease: CommandID;","Description","n) ResolveManagedReference","[C#] public static readonly CommandID KeyNudgeLeft;","[C++] public: static CommandID* KeyNudgeLeft;","[VB] Public Shared ReadOnly KeyNudgeLeft As CommandID","[JScript] public static var KeyNudgeLeft: CommandID;","Description","o) ResolveManagedReference","[C#] public static readonly CommandID KeyNudgeRight;","[C++] public: static CommandID* KeyNudgeRight;","[VB] Public Shared ReadOnly KeyNudgeRight As CommandID","[JScript] public static var KeyNudgeRight: CommandID;","Description","p) ResolveManagedReference","[C#] public static readonly CommandID KeyNudgeUp;","[C++] public: static CommandID* KeyNudgeUp;","[VB] Public Shared ReadOnly KeyNudgeUp As CommandID","[JScript] public static var KeyNudgeUp: CommandID;","Description","q) ResolveManagedReference","[C#] public static readonly CommandID KeyNudgeWidthDecrease;","[C++] public: static CommandID* KeyNudgeWidthDecrease;","[VB] Public Shared ReadOnly KeyNudgeWidthDecrease As CommandID","[JScript] public static var KeyNudgeWidthDecrease: CommandID;","Description","r) ResolveManagedReference","[C#] public static readonly CommandID KeyNudgeWidthIncrease;","[C++] public: static CommandID* KeyNudgeWidthIncrease;","[VB] Public Shared ReadOnly KeyNudgeWidthIncrease As CommandID","[JScript] public static var KeyNudgeWidthIncrease: CommandID;","Description","s) ResolveManagedReference","[C#] public static readonly CommandID KeyReverseCancel;","[C++] public: static CommandID* KeyReverseCancel;","[VB] Public Shared ReadOnly KeyReverseCancel As CommandID","[JScript] public static var KeyReverseCancel: CommandID;","Description","t) ResolveManagedReference","[C#] public static readonly CommandID KeySelectNext;","[C++] public: static CommandID* KeySelectNext;","[VB] Public Shared ReadOnly KeySelectNext As CommandID","[JScript] public static var KeySelectNext: CommandID;","Description","u) ResolveManagedReference","[C#] public static readonly CommandID KeySelectPrevious;","[C++] public: static CommandID* KeySelectPrevious;","[VB] Public Shared ReadOnly KeySelectPrevious As CommandID","[JScript] public static var KeySelectPrevious: CommandID;","Description","v) ResolveManagedReference","[C#] public static readonly CommandID KeySizeHeightDecrease;","[C++] public: static CommandID* KeySizeHeightDecrease;","[VB] Public Shared ReadOnly KeySizeHeightDecrease As CommandID","[JScript] public static var KeySizeHeightDecrease: CommandID;","Description","w) ResolveManagedReference","[C#] public static readonly CommandID KeySizeHeightIncrease;","[C++] public: static CommandID* KeySizeHeightIncrease;","[VB] Public Shared ReadOnly KeySizeHeightIncrease As CommandID","[JScript] public static var KeySizeHeightIncrease: CommandID;","Description","x) ResolveManagedReference","[C#] public static readonly CommandID KeySizeWidthDecrease;","[C++] public: static CommandID* KeySizeWidthDecrease;","[VB] Public Shared ReadOnly KeySizeWidthDecrease As CommandID","[JScript] public static var KeySizeWidthDecrease: CommandID;","Description","y) Resolve ManagedReference","[C#] public static readonly CommandID KeySizeWidthIncrease;","[C++] public: static CommandID* KeySizeWidthIncrease;","[VB] Public Shared ReadOnly KeySizeWidthIncrease As CommandID","[JScript] public static var KeySizeWidthIncrease: CommandID;","Description","z) ResolveManagedReference","[C#] public static readonly CommandID KeyTabOrderSelect;","[C++] public: static CommandID* KeyTabOrderSelect;","[VB] Public Shared ReadOnly KeyTabOrderSelect As CommandID","[JScript] public static var KeyTabOrderSelect: CommandID;","Description","aa) ResolveManagedReference","[C#] public static readonly CommandID SelectionMenu;","[C++] public: static CommandID* SelectionMenu;","[VB] Public Shared ReadOnly SelectionMenu As CommandID","[JScript] public static var SelectionMenu: CommandID;","Description","bb) ResolveManagedReference","[C#] public static readonly CommandID TraySelectionMenu;","[C++] public: static CommandID* TraySelectionMenu;","[VB] Public Shared ReadOnly TraySelectionMenu As CommandID","[JScript] public static var TraySelectionMenu: CommandID;","Description","cc) MenuCommands","Example Syntax:","dd) ResolveManagedReference","[C#] public MenuCommands( );","[C++] public: MenuCommands( );","[VB] Public Sub New( )","[JScript] public function MenuCommands( );","AxImporter.Options class (System.Windows.Forms.Design)","a) ToString","b) ToString","c) ToString","d) ToString","e) ToString","f) ToString","g) ToString","h) ToString","i) ToString","j) ToString","k) ToString","l) ToString","m) ToString","n) ToString","o) AxImporter.Options","Example Syntax:","p) ToString","ParentControlDesigner class (System.Windows.Forms.Design)","a) ToString","Description","Provides the design-time functionality of the System.Windows.Forms.Design.ControlDesigner, as well as a selection UI handler and the ability to manipulate child components.","b) ParentControlDesigner","Example Syntax:","c) ToString","d) AccessibilityObject","e) AssociatedComponents","f) Component","g) Control","h) DefaultControlLocation","i) ToString","Description","Indicates the default location for a control added to this designer.","The default location is usually (0,0), but may be modified if the container has special borders, etc.","j) DrawGrid","k) ToString","[C#] protected virtual bool DrawGrid {get; set;}","[C++] protected: _property virtual bool get_DrawGrid( ); protected: _property virtual void set_DrawGrid(bool);","[VB] Overridable Protected Property DrawGrid As Boolean","[JScript] protected function get DrawGrid( ): Boolean; protected function set DrawGrid(Boolean);","Description","Accessor method for the DrawGrid property. This property determines if the grid should be drawn on a control.","l) EnableDragRect","m) ToString","[C#] protected override bool EnableDragRect {get;}","[C++] protected: _property virtual bool get_EnableDragRect( );","[VB] Overrides Protected ReadOnly Property EnableDragRect As Boolean","[JScript] protected function get EnableDragRect( ): Boolean;","Description","Indicates whether drag rectangles can be drawn on this designer.","n) GridSize","o) ToString","[C#] protected Size GridSize {get; set;}","[C++] protected: _property Size get_GridSize( ); protected: _property void set_GridSize(Size);","[VB] Protected Property GridSize As Size","[JScript] protected function get GridSize( ): Size; protected function set GridSize(Size);","Description","Gets\/Sets the GridSize property for a form or user control.","Return Value: A Point representing the size of the grid drawn on a form or user control.","p) InheritanceAttribute","q) Inherited","r) SelectionRules","s) ShadowProperties","t) Verbs","u) CanParent","[C#] public virtual bool CanParent(Control control);","[C++] public: virtual bool CanParent(Control* control);","[VB] Overridable Public Function CanParent(ByVal control As Control) As Boolean","[JScript] public function CanParent(control: Control): Boolean; Indicates whether this designer can parent the specified control.","Description","Indicates whether this designer can parent the specified control.","Return Value: true if this designer can parent the specified control; otherwise, false .","v) CanParent","[C#] public virtual bool CanParent(ControlDesigner controlDesigner);","[C++] public: virtual bool CanParent(ControlDesigner* controlDesigner);","[VB] Overridable Public Function CanParent(ByVal controlDesigner As ControlDesigner) As Boolean","[JScript] public function CanParent(controlDesigner: ControlDesigner): Boolean; Indicates whether this designer can parent to the specified designer.","Description","Indicates whether this designer can parent to the specified designer.","Generally this means if the control for this designer can parent the specified ControlDesigner's designer. The designer to determine whether this designer can parent.","w) CreateTool","[C#] protected void CreateTool(ToolboxItem tool);","[C++] protected: void CreateTool(ToolboxItem* tool);","[VB] Protected Sub CreateTool(ByVal tool As ToolboxItem)","[JScript] protected function CreateTool(tool: ToolboxItem); Creates the specified tool in the center of the currently selected control.","Description","Creates the specified tool in the center of the currently selected control.","The default size for the tool is used. The tool to create.","x) CreateTool","[C#] protected void CreateTool(ToolboxItem tool, Point location);","[C++] protected: void CreateTool(ToolboxItem* tool, Point location);","[VB] Protected Sub CreateTool(ByVal tool As ToolboxItem, ByVal location As Point)","[JScript] protected function CreateTool(tool: ToolboxItem, location: Point); Creates the specified tool in the currently selected control at the specified position.","Description","Creates the specified tool in the currently selected control at the specified position.","The default size for the tool is used. The tool to create. The location, in screen coordinates, of the tool's upper left corner. If the tool has a default size it will be centered at this location.","y) CreateTool","[C#] protected void CreateTool(ToolboxItem tool, Rectangle bounds);","[C++] protected: void CreateTool(ToolboxItem* tool, Rectangle bounds);","[VB] Protected Sub CreateTool(ByVal tool As ToolboxItem, ByVal bounds As Rectangle)","[JScript] protected function CreateTool(tool: ToolboxItem, bounds: Rectangle);","Description","Creates the specified tool in the currently selected control.","The tool is created with the provided shape. The tool to create. The dimensions of the tool. The x and y components of the bounds should be the screen coordinates of the upper left corner of the tool.","z) CreateToolCore","[C#] protected virtual IComponent[ ] CreateToolCore(ToolboxItem tool, int x, int y, int width, int height, bool hasLocation, bool hasSize);","[C++] protected: virtual IComponent* CreateToolCore(ToolboxItem* tool, int x, int y, int width, int height, bool hasLocation, bool hasSize) [ ];","[VB] Overridable Protected Function CreateToolCore(ByVal tool As ToolboxItem, ByVal x As Integer, ByVal y As Integer, ByVal width As Integer, ByVal height As Integer, ByVal hasLocation As Boolean, ByVal hasSize As Boolean) As IComponent( )","[JScript] protected function CreateToolCore(tool: ToolboxItem, x: int, y: int, width: int, height: int, hasLocation: Boolean, hasSize: Boolean): IComponent[ ];","Description","Provides core functionality for all the CreateTool methods.","Return Value: An array of components that were created by the tool.","This is the only CreateTool method that can be overridden. The tool to create. The x location, in screen coordinates, of the location of the tool. If the size of the tool is specified here, this will be the upper left corner of the tool. If no size is specified, then this should be interpreted as the center of the tool. The y location, in screen coordinates, of the location of the tool. If the size of the tool is specified here, this will be the upper left corner of the tool. If no size is specified, then this should be interpreted as the center of the tool. The width of the tool. This is ignored if hasSize is false. The height of the tool. This is ignored if hasSize is false. If this is false the x and y values will be calculated to place the tool in the center of the currently selected control. If this is false the width and height values will be calculated to be the default width and height for the control.","aa) Dispose","[C#] protected override void Dispose(bool disposing);","[C++] protected: void Dispose(bool disposing);","[VB] Overrides Protected Sub Dispose(ByVal disposing As Boolean)","[JScript] protected override function Dispose(disposing: Boolean);","Description","Disposes of the resources (other than memory) used by the System.Windows.Forms.Design.ParentControlDesigner.","Call System.Windows.Forms.Design.ParentControlDesigner.Dispose(System.Boolean) when you are finished using the System.Windows.Forms.Design.ParentControlDesigner. The System.Windows.Forms.Design.ParentControlDesigner.Dispose(System.Boolean) method leaves the System.Windows.Forms.Design.ParentControlDesigner in an unusable state. After calling System.Windows.Forms.Design.ParentControlDesigner.Dispose(System Boolean), you must release all references to the System.Windows.Forms.Design.ParentControlDesigner so the memory it was occupying can be reclaimed by garbage collection.","bb) GetControl","[C#] protected Control GetControl(object component);","[C++] protected: Control* GetControl(Object* component);","[VB] Protected Function GetControl(ByVal component As Object) As Control","[JScript] protected function GetControl(component: Object): Control; Returns the control that represents the UI for the given component.","cc) GetUpdatedRect","[C#] protected Rectangle GetUpdatedRect(Rectangle originalRect, Rectangle dragRect, bool updateSize);","[C++] protected: Rectangle GetUpdatedRect(Rectangle originalRect, Rectangle dragRect, bool updateSize);","[VB] Protected Function GetUpdatedRect(ByVal originalRect As Rectangle, ByVal dragRect As Rectangle, ByVal updateSize As Boolean) As Rectangle","[JScript] protected function GetUpdatedRect(originalRect: Rectangle, dragRect: Rectangle, updateSize: Boolean): Rectangle;","Description","Updates the given rectangle, adjusting it for grid snaps as needed.","Return Value: the newly updated rectangle. If no changes were needed to the rectangle this will return rect. The original rectangle of the component being updated. The dragging rectangle of the component. True to updateSize as well","dd) Initialize","[C#] public override void Initialize(IComponent component);","[C++] public: void Initialize(IComponent* component);","[VB] Overrides Public Sub Initialize(ByVal component As IComponent)","[JScript] public override function Initialize(component: IComponent);","Description","Initializes the designer with the given component. The designer can get the component's site and request services from it in this call. The component to associate with this designer.","ee) InvokeCreateTool","[C#] protected static void InvokeCreateTool(ParentControlDesigner toInvoke, ToolboxItem tool);","[C++] protected: static void InvokeCreateTool(ParentControlDesigner* toInvoke, ToolboxItem* tool);","[VB] Protected Shared Sub InvokeCreateTool(ByVal toInvoke As ParentControlDesigner, ByVal tool As ToolboxItem)","[JScript] protected static function InvokeCreateTool(toInvoke ParentControlDesigner, tool ToolboxItem);","Description","ff) OnDragDrop","[C#] protected override void OnDragDrop(DragEventArgs de);","[C++] protected: void OnDragDrop(DragEventArgs * de);","[VB] Overrides Protected Sub OnDragDrop(ByVal de As DragEventArgs)","[JScript] protected override function OnDragDrop(de: DragEventArgs);","Description","Called in response to a drag drop for OLE drag and drop. Here we drop a toolbox component on our parent control.","gg) OnDragEnter","[C#] protected override void OnDragEnter(DragEventArgs de);","[C++] protected: void OnDragEnter(DragEventArgs* de);","[VB] Overrides Protected Sub OnDragEnter(ByVal de As DragEventArgs)","[JScript] protected override function OnDragEnter(de: DragEventArgs);","Description","Called in response to a drag enter for OLE drag and drop.","hh) OnDragLeave","[C#] protected override void OnDragLeave(EventArgs e);","[C++] protected: void OnDragLeave(EventArgs* e);","[VB] Overrides Protected Sub OnDragLeave(ByVal e As EventArgs)","[JScript] protected override function OnDragLeave(e: EventArgs);","Description","Called when a drag-drop operation leaves the control designer view Called when a drag-drop operation leaves the control designer view","ii) OnDragOver","[C#] protected override void OnDragOver(DragEventArgs de);","[C++] protected: void OnDragOver(DragEventArgs* de);","[VB] Overrides Protected Sub OnDragOver(ByVal de As DragEventArgs)","[JScript] protected override function OnDragOver(de: DragEventArgs);","Description","Called when a drag drop object is dragged over the control designer view Called when a drag drop object is dragged over the control designer view","jj) OnGiveFeedback","[C#] protected override void OnGiveFeedback(GiveFeedbackEventArgs e);","[C++] protected: void OnGiveFeedback(GiveFeedbackEventArgs* e);","[VB] Overrides Protected Sub OnGiveFeedback(ByVal e As GiveFeedbackEventArgs)","[JScript] protected override function OnGiveFeedback(e: GiveFeedbackEventArgs);","Description","Event handler for our GiveFeedback event, which is called when a drag operation is in progress. The host will call us with this when an OLE drag event happens.","kk) OnMouseDragBegin","[C#] protected override void OnMouseDragBegin(int x, int y);","[C++] protected: void OnMouseDragBegin(int x, int y);","[VB] Overrides Protected Sub OnMouseDragBegin(ByVal x As Integer, ByVal y As Integer)","[JScript] protected override function OnMouseDragBegin(x: int, y: int);","Description","Called in response to the left mouse button being pressed on a component. The designer overrides this to provide a \u201classo\u201d selection for components within the control. The x position, in control coordinates, of the mouse. The y position, in control coordinates, of the mouse.","ll) OnMouseDragEnd","[C#] protected override void OnMouseDragEnd(bool cancel);","[C++] protected: void OnMouseDragEnd(bool cancel);","[VB] Overrides Protected Sub OnMouseDragEnd(ByVal cancel As Boolean)","[JScript] protected override function OnMouseDragEnd(cancel: Boolean);","Description","Called at the end of a drag operation. This either commits or rolls back the drag. Set this to true to cancel the drag, or false to commit it.","mm) OnMouseDragMove","[C#] protected override void OnMouseDragMove(int x, int y);","[C++] protected: void OnMouseDragMove(int x, int y);","[VB] Overrides Protected Sub OnMouseDragMove(ByVal x As Integer, ByVal y As Integer)","[JScript] protected override function OnMouseDragMove(x: int, y: int);","Description","Called for each movement of the mouse. This will check to see if a drag operation is in progress. If so, it will pass the updated drag dimensions on to the selection UI service. The x position, in screen coordinates, of the mouse. The y position, in screen coordinates, of the mouse.","nn) OnMouseEnter","[C#] protected override void OnMouseEnter( );","[C++] protected: void OnMouseEnter( );","[VB] Overrides Protected Sub OnMouseEnter( )","[JScript] protected override function OnMouseEnter( );","Description","Called when the mouse enters the control. At this point we want to cancel the timeout timer.","oo) OnMouseHover","[C#] protected override void OnMouseHover( );","[C++] protected: void OnMouseHover( );","[VB] Overrides Protected Sub OnMouseHover( )","[JScript] protected override function OnMouseHover( );","Description","Called when the user hovers over the control. At this point we want to display the container selector. Note: Since the child controls pass this notification up, we will display the container selector even if you hover over a child control.","pp) OnMouseLeave","[C#] protected override void OnMouseLeave( );","[C++] protected: void OnMouseLeave( );","[VB] Overrides Protected Sub OnMouseLeave( )","[JScript] protected override function OnMouseLeave( );","Description","Called when the mouse leaves the control. At this point we need to start listening for the container selector timeout.","qq) OnPaintAdornments","[C+] protected override void OnPaintAdornments(PaintEventArgs pe);","[C++] protected: void OnPaintAdomments(PaintEventArgs* pe);","[VB] Overrides Protected Sub OnPaintAdornments(ByVal pe As PaintEventArgs)","[JScript] protected override function OnPaintAdomments(pe: PaintEventArgs);","Description","Called after our component has finished painting. Here we draw our grid surface Called after our component has finished painting. Here we draw our grid surface The paint event.","rr) OnSetCursor","[C#] protected override void OnSetCursor( );","[C++] protected: void OnSetCursor( );","[VB] Overrides Protected Sub OnSetCursor( )","[JScript] protected override function OnSetCursor( );","Description","Called each time the cursor needs to be set. The ParentControlDesigner behavior here will set the cursor to one of three things: 1. If the toolbox service has a tool selected, it will allow the toolbox service to set the cursor. 2. The arrow will be set. Parent controls allow dragging within their interior.","ss) PreFilterProperties","[C#] protected override void PreFilterProperties(IDictionary properties);","[C++] protected: void PreFilterProperties(IDictionary* properties);","[VB] Overrides Protected Sub PreFilterProperties(ByVal properties As IDictionary)","[JScript] protected override function PreFilterProperties(properties: IDictionary);","Description","Allows a designer to filter the set of properties the component it is designing will expose through the TypeDescriptor object. This method is called immediately before its corresponding \u201cPost\u201d method. If you are overriding this method you should call the base implementation before you perform your own filtering.\n\nReturn Value: The augmented set of properties. If the method does not modify any properties, it may just return a reference to its input parameter. If you do make a change to the properties, you must create a new array. The properties for the class of the component.\n","tt) IOleDragClient.AddComponent","[C#] bool IOleDragClient.AddComponent(IComponent component, string name, bool firstAdd);","[C++] bool IOleDragClient::AddComponent(IComponent* component, String* name, bool firstAdd);","[VB] Function AddComponent(ByVal component As IComponent, ByVal name As String, ByVal firstAdd As Boolean) As Boolean Implements IOleDragClient.AddComponent","[JScript] function IOleDragClient.AddComponent(component: IComponent, name: String, firstAdd: Boolean): Boolean;","uu) IOleDragClient.GetControlForComponent","[C#] Control IOleDragClient.GetControlForComponent(object component);","[C++] Control* IOleDragClient::GetControlForComponent(Object* component);","[VB] Function GetControlForComponent(ByVal component As Object) As Control Implements IOleDragClient.GetControlForComponent","[JScript] function IOleDragClient.GetControlForComponent(component: Object): Control;","vv) IOleDragClient.GetDesignerControl","[C#] Control IOleDragClient.GetDesignerControl( );","[C++] Control* IOleDragClient::GetDesignerControl( );","[VB] Function GetDesignerControl( ) As Control Implements IOleDragClient.GetDesignerControl","[JScript] function IoleDragClient.GetDesignerControl( ): Control;","ww) IOleDragClient.IsDropOk","[C#] bool IOleDragClient.IsDropOk(IComponent component);","[C++] bool IOleDragClient::IsDropOk(IComponent* component);","[VB] Function IsDropOk(ByVal component As IComponent) As Boolean Implements IOleDragClient.IsDropOk","[JScript] function IOleDragClient.IsDropOk(component: IComponent): Boolean;","xx) ISelectionUIHandler.BeginDrag","[C#] bool ISelectionUIHandler.BeginDrag(object[ ] components, SelectionRules rules, int initialX, int initialY);","[C++] bool ISelectionUIHandler::BeginDrag(Object* components _gc[ ], SelectionRules rules, int initialX, int initialY);","[VB] Function BeginDrag(ByVal components( ) As Object, ByVal rules As SelectionRules, ByVal initialX As Integer, ByVal initialY As Integer) As Boolean Implements ISelectionUIHandler.BeginDrag","[JScript] function ISelectionUIHandler.BeginDrag(components: Object[ ], rules SelectionRules, initialX: int, initialY: int): Boolean;","yy) ISelectionUIHandler.DragMoved","[C#] void ISelectionUIHandler.DragMoved(object[ ] components, Rectangle offset);","[C++] void ISelectionUIHandler::DragMoved(Object* components _gc[ ], Rectangle offset);","[VB] Sub DragMoved(ByVal components( ) As Object, ByVal offset As Rectangle) Implements ISelectionUIHandler.DragMoved","[JScript] function ISelectionUIHandler.DragMoved(components: Object[ ], offset: Rectangle);","zz) ISelectionUIHandler.EndDrag","[C#] void ISelectionUIHandler.EndDrag(object[ ] components, bool cancel);","[C++] void ISelectionUIHandler::EndDrag(Object* components _gc[ ], bool cancel);","[VB] Sub EndDrag(ByVal components( ) As Object, ByVal cancel As Boolean) Implements ISelectionUIHandler.EndDrag","[JScript] function ISelectionUIHandler.EndDrag(components: Object[ ], cancel Boolean);","aaa) ISelectionUIHandler.GetComponentBounds","[C++] Rectangle ISelectionUIHandler.GetComponentBounds(object component);","[C++] Rectangle ISelectionUIHandler::GetComponentBounds(Object* component);","[VB] Function GetComponentBounds(ByVal component As Object) As Rectangle Implements ISelectionUIHandler.GetComponentBounds","[JScript] function ISelectionUIHandler.GetComponentBounds(component Object): Rectangle;","bbb) ISelectionUIHandler.GetComponentRules","[C#] SelectionRules ISelectionUIHandler.GetComponentRules(object component);","[C++] SelectionRules ISelectionUIHandler::GetComponentRules(Object* component);","[VB] Function GetComponentRules(ByVal component As Object) As SelectionRules Implements ISelectionUIHandler.GetComponentRules","[JScript] function ISelectionUIHandler.GetComponentRules(component: Object) SelectionRules;","ccc) ISelectionUIHandler.GetSelectionClipRect","[C#] Rectangle ISelectionUIHandler.GetSelectionClipRect(object component);","[C++] Rectangle ISelectionUIHandler::GetSelectionClipRect(Object* component);","[VB] Function GetSelectionClipRect(ByVal component As Object) As Rectangle Implements ISelectionUIHandler.GetSelectionClipRect","[JScript] function ISelectionUIHandler.GetSelectionClipRect(component: Object): Rectangle;","ddd) ISelectionUIHandler.OleDragDrop","[C#] void ISelectionUIHandler.OleDragDrop(DragEventArgs de);","[C++] void ISelectionUIHandler::OleDragDrop(DragEventArgs* de);","[VB] Sub OleDragDrop(ByVal de As DragEventArgs) Implements ISelectionUIHandler.OleDragDrop","[JScript] function ISelectionUIHandler.OleDragDrop(de: DragEventArgs);","eee) ISelectionUIHandler.OleDragEnter","[C#] void ISelectionUIHandler.OleDragEnter(DragEventArgs de);","[C++] void ISelectionUIHandler::OleDragEnter(DragEventArgs* de);","[VB] Sub OleDragEnter(ByVal de As DragEventArgs) Implements ISelectionUIHandler.OleDragEnter","[JScript] function ISelectionUIHandler.OleDragEnter(de: DragEventArgs);","fff) ISelectionUIHandler.OleDragLeave","[C#] void ISelectionUIHandler.OleDragLeave( );","[C++] void ISelectionUIHandler::OleDragLeave( );","[VB] Sub OleDragLeave( ) Implements ISelectionUIHandler.OleDragLeave","[JScript] function ISelectionUIHandler.OleDragLeave( );","ggg) ISelectionUIHandler.OleDragOver","[C#] void ISelectionUIHandler.OleDragOver(DragEventArgs de);","[C++] void ISelectionUIHandlder::OleDragover(DragEventArgs* de);","[VB] Sub OleDragOver(ByVal de As DragEventArgs) Implements ISelectionUIHandler.OleDragOver","[JScript] function ISelectionUIHandler.OleDragOver(de: DragEventArgs);","hhh) ISelectionUIHandler.OnSelectionDoubleClick","[C#] void ISelectionUIHandler.OnSelectionDoubleClick(IComponent component);","[C++] void ISelectionUIHandler::OnSelectionDoubleClick(IComponent* component);","[VB] Sub OnSelectionDoubleClick(ByVal component As IComponent) Implements ISelectionUIHandler.OnSelectionDoubleClick","[JScript] function ISelectionUIHandler.OnSelectionDoubleClick(component: IComponent);","iii) ISelectionUIHandler.QueryBeginDrag","[C#] bool ISelectionUIHandler.QueryBeginDrag(object[ ] components, SelectionRules rules, int initialX, int initialY);","[C++] bool ISelectionUIHandler::QueryBeginDrag(Object* components _gc[ ], SelectionRules rules, int initialX, int initialY);","[VB] Function QueryBeginDrag(ByVal components( ) As Object, ByVal rules As SelectionRules, ByVal initialX As Integer, ByVal initialY As Integer) As Boolean Implements ISelectionUIHandler.QueryBeginDrag","[JScript] function ISelectionUIHandler.QueryBeginDrag(components: Object[ ], rules: SelectionRules, initialX: int, initialY: int): Boolean;","jjj) ISelectionUIHandler.ShowContextMenu","[C#] void ISelectionUIHandler.ShowContextMenu(IComponent component);","[C++] void ISelectionUIHandler::ShowContextMenu(IComponent* component);","[VB] Sub ShowContextMenu(ByVal component As IComponent) Implements ISelectionUIHandler.ShowContextMenu","[JScript] function ISelectionUIHandler.ShowContextMenu(component: IComponent);","kkk) WndProc","[C#] protected override void WndProc(ref Message m);","[C++] protected: void WndProc(Message* m);","[VB] Overrides Protected Sub WndProc(ByRef m As Message)","[JScript] protected override function WndProc(m: Message);","Description","Provides processing for Windows messages.","ScrollableControlDesigner class (System.Windows.Forms.Design)","a) WndProc","Description","Provides design-time functionality for scrollable controls.","b) ScrollableControlDesigner","Example Syntax:","c) WndProc","d) AccessibilityObject","e) AssociatedComponents","f) Component","g) Control","h) DefaultControlLocation","i) DrawGrid","j) EnableDragRect","k) GridSize","l) InheritanceAttribute","m) Inherited","n) SelectionRules","o) ShadowProperties","p) Verbs","q) GetHitTest","[C#] protected override bool GetHitTest(Point pt);","[C++] protected: bool GetHitTest(Point pt);","[VB] Overrides Protected Function GetHitTest(ByVal pt As Point) As Boolean","[JScript] protected override function GetHitTest(pt: Point): Boolean;","Description","Indicates whether the specified point was within the bounds of the component.","Return Value: true if the point at the cursor should be live; otherwise, false . For a form, if it has autoscroll set active, the scroll bars are always UI active. The point, in screen coordinates, of the cursor.","r) WndProc","[C#] protected override void WndProc(ref Message m);","[C++] protected: void WndProc(Message* m);","[VB] Overrides Protected Sub WndProc(ByRef m As Message)","[JScript] protected override function WndProc(m: Message);","Description","Provides processing for Windows messages. The message being processed.","SelectionRules enumeration (System.Windows.Forms.Design)","a) WndProc","Description","Specifies a set of selection rule identifiers that can be used to indicate attributes for a selected component.","which can be used to determine whether the selected component has some form of visible user interface and whether the user can take actions to move or alter the size of an object.","b) WndProc","[C#] public const SelectionRules AllSizeable;","[C++] public: const SelectionRules AllSizeable;","[VB] Public Const AllSizeable As SelectionRules","[JScript] public var AllSizeable: SelectionRules;","Description","Indicates the given component supports sizing in all directions, and the selection service is not currently locked.","c) WndProc","[C#] public const SelectionRules BottomSizeable;","[C++] public: const SelectionRules BottomSizeable;","[VB] Public Const BottomSizeable As SelectionRules","[JScript] public var BottomSizeable: SelectionRules;","Description","Indicates the given component supports resize from the bottom. This bit will be ignored unless the Sizeable bit is also set.","d) WndProc","[C#] public const SelectionRules LeftSizeable;","[C++] public: const SelectionRules LeftSizeable;","[VB] Public Const LeftSizeable As SelectionRules","[JScript] public var LeftSizeable: SelectionRules;","Description","Indicates the given component supports resize from the left. This bit will be ignored unless the Sizeable bit is also set.","e) WndProc","[C#] public const SelectionRules Locked;","[C++] public: const SelectionRules Locked;","[VB] Public Const Locked As SelectionRules","[JScript] public var Locked: SelectionRules;","Description","Indicates the given component is locked to its container. Overrides the moveable and sizeable properties of this enum.","f) WndProc","[C#] public const SelectionRules Moveable;","[C++] public: const SelectionRules Moveable;","[VB] Public Const Moveable As SelectionRules","[JScript] public var Moveable: SelectionRules;","Description","Indicates the given component supports a location property that allows it to be moved on the screen, and that the selection service is not currently locked.","g) WndProc","[C#] public const SelectionRules None;","[C++] public: const SelectionRules None;","[VB] Public Const None As SelectionRules","[JScript] public var None: SelectionRules;","Description","Indicates no special selection attributes.","h) WndProc","[C#] public const SelectionRules RightSizeable;","[C++] public: const SelectionRules RightSizeable;","[VB] Public Const RightSizeable As SelectionRules","[JScript] public var RightSizeable: SelectionRules;","Description","Indicates the given component supports resize from the right. This bit will be ignored unless the Sizeable bit is also set.","i) WndProc","[C#] public const SelectionRules TopSizeable;","[C++] public: const SelectionRules TopSizeable;","[VB] Public Const TopSizeable As SelectionRules","[JScript] public var TopSizeable: SelectionRules;","Description","Indicates the given component supports resize from the top. This bit will be ignored unless the Sizeable bit is also set.","j) WndProc","[C#] public const SelectionRules Visible;","[C++] public: const SelectionRules Visible;","[VB] Public Const Visible As SelectionRules","[JScript] public var Visible: SelectionRules;","Description","Indicates the given component has some form of visible user interface and the selection service is drawing a selection border around this user interface. If a selected component has this rule set, you can assume that the component implements System.ComponentModel.IComponent and that it is associated with a corresponding design instance.","ComponentEditorForm class (System.Windows.Forms.Design)","a) ToString","Description","Provides a user interface for a System.Windows.Forms.Design.WindowsFormsComponentEditor.","A System.Windows.Forms.Design.ComponentEditorForm shows a view of available component editor pages along with a user interface for selection.","b) ComponentEditorForm","Example Syntax:","c) ToString","[C#] public ComponentEditorForm(object component, Type[ ] pageTypes);","[C++] public: ComponentEditorForm(Object* component, Type* pageTypes[ ]);","[VB] Public Sub New(ByVal component As Object, ByVal pageTypes( ) As Type)","[JScript] public function ComponentEditorForm(component: Object, pageTypes: Type[ ]);","Description","Initializes a new instance of the System.Windows.Forms.Design.ComponentEditorForm class. The component to be edited. The set of System.Windows.Forms. Design.ComponentEditorPage objects to be shown in the form.","d) AcceptButton","e) AccessibilityObject","f) AccessibleDefaultActionDescription","g) AccessibleDescription","h) AccessibleName","i) AccessibleRole","j) ActiveControl","k) ActiveMdiChild","l) AllowDrop","m) AllowTransparency","n) Anchor","o) AutoScale","p) AutoScaleBaseSize","q) AutoScroll","r) AutoScrollMargin","s) AutoScrollMinSize","t) AutoScrollPosition","u) BackColor","v) BackgroundImage","w) BindingContext","x) Bottom","y) Bounds","z) CancelButton","aa) CanFocus","bb) CanSelect","cc) Capture","dd) CausesValidation","ee) ClientRectangle","ff) ClientSize","gg) CompanyName","hh) Container","ii) ContainsFocus","jj) ContextMenu","kk) ControlBox","ll) Controls","mm) Created","nn) CreateParams","oo) Cursor","pp) DataBindings","qq) DefaultImeMode","rr) DefaultSize","ss) DesignMode","tt) DesktopBounds","uu) DesktopLocation","vv) DialogResult","ww) DisplayRectangle","xx) Disposing","yy) Dock","zz) DockPadding","aaa) Enabled","bbb) Events","ccc) Focused","ddd) Font","eee) FontHeight","fff) ForeColor","ggg) FormBorderStyle","hhh) Handle","iii) HasChildren","jjj) Height","kkk) HelpButton","lll) HScroll","mmm) Icon","nnn) ImeMode","ooo) InvokeRequired","ppp) IsAccessible","qqq) IsDisposed","rrr) IsHandleCreated","sss) IsMdiChild","ttt) IsMdiContainer","uuu) IsRestricted Window","vvv) KeyPreview","www) Left","xxx) Location","yyy) MaximizeBox","zzz) MaximizedBounds","aaaa) MaximumSize","bbbb) MdiChildren","cccc) MdiParent","dddd) Menu","eeee) MergedMenu","ffff) MinimizeBox","gggg) MinimumSize","hhhh) Modal","iiii) Name","jjjj) Opacity","kkkk) OwnedForms","llll) Owner","mmmm) Parent","nnnn) ParentForm","oooo) ProductName","pppp) ProductVersion","qqqq) RecreatingHandle","rrrr) Region","ssss) RenderRightToLeft","tttt) ResizeRedraw","uuuu) Right","vvvv) RightToLeft","wwww) ShowFocusCues","xxxx) ShowInTaskbar","yyyy) ShowKeyboardCues","zzzz) Site","aaaaa) Size","bbbbb) SizeGripStyle","ccccc) StartPosition","ddddd) TabIndex","eeeee) TabStop","fffff) Tag","ggggg) Text","hhhhh) Top","iiiii) TopLevel","jjjjj) TopLevelControl","kkkkk) TopMost","lllll) TransparencyKey","mmmmm) Visible","nnnnn) VScroll","ooooo) Width","ppppp) WindowState","qqqqq) WindowTarget","rrrrr) OnActivated","[C#] protected override void OnActivated(EventArgs e);","[C++] protected: void OnActivated(EventArgs* e);","[VB] Overrides Protected Sub OnActivated(ByVal e As EventArgs)","[JScript] protected override function OnActivated(e: EventArgs);","Description","sssss) OnHelpRequested","[C#] protected override void OnHelpRequested(HelpEventArgs e);","[C++] protected: void OnHelpRequested(HelpEventArgs* e);","[VB] Overrides Protected Sub OnHelpRequested(ByVal e As HelpEventArgs)","[JScript] protected override function OnHelpRequested(e: HelpEventArgs);","Description","ttttt) OnSelChangeSelector","[C#] protected virtual void OnSelChangeSelector(object source, TreeViewEventArgs e);","[C++] protected: virtual void OnSelChangeSelector(Object* source, TreeViewEventArgs* e);","[VB] Overridable Protected Sub OnSelChangeSelector(ByVal source As Object, ByVal e As TreeViewEventArgs)","[JScript] protected function OnSelChangeSelector(source: Object, e TreeViewEventArgs);","Description","Handles switching between pages.","uuuuu) PreProcessMessage","[C#] public override bool PreProcessMessage(ref Message msg);","[C++] public: bool PreProcessMessage(Message* msg);","[VB] Overrides Public Function PreProcessMessage(ByRef msg As Message) As Boolean","[JScript] public override function PreProcessMessage(msg: Message): Boolean;","Description","Provides a method to override in order to pre-process input messages before they are dispatched.","System.Windows.Forms.Design.ComponentEditorForm.PreProcessMessage System.Windows.Forms.Message@) is called by the application's message loop to pre-process input messages before they are dispatched. A MSG structure that specifies the message to preprocess. Possible values for this parameter include WM_KEYDOWN, WM_SYSKEYDOWN, WM_CHAR, and WM_SYSCHAR.","vvvvv) ShowForm","[C#] public virtual DialogResult ShowForm( );","[C++] public: virtual DialogResult ShowForm( );","[VB] Overridable Public Function ShowForm( ) As DialogResult","[JScript] public function ShowForm( ): DialogResult; Shows the form. The form will have no owner window.","Description","Shows the form. The form will have no owner window.","Return Value: A System.Windows.Forms.DialogResult value indicating the result of showing the dialog.","wwwww) ShowForm","[C#] public virtual DialogResult ShowForm(int page)","[C++] public: virtual DialogResult ShowForm(int page);","[VB] Overridable Public Function ShowForm(ByVal page As Integer) As DialogResult","[JScript] public function ShowForm(page: int): DialogResult;","Description","Shows the form and the specified page. The form will have no owner window.","Return Value: A System.Windows.Forms.DialogResult value indicating the result of showing the dialog. The index of the page to show.","xxxxx) ShowForm","[C#] public virtual DialogResult ShowForm(IWin32Window owner);","[C++] public: virtual DialogResult ShowForm(IWin32Window* owner);","[VB] Overridable Public Function ShowForm(ByVal owner As IWin32Window) As DialogResult","[JScript] public function ShowForm(owner: IWin32Window): DialogResult;","Description","Shows the form with the specified owner.","Return Value: A System.Windows.Forms.DialogResult value indicating the result of showing the dialog. The owner of the dialog.","yyyyy) ShowForm","[C#] public virtual DialogResult ShowForm(IWin32Window owner, int page); [C++] public: virtual DialogResult ShowForm(IWin32Window* owner, int page);","[VB] Overridable Public Function ShowForm(ByVal owner As IWin32Window, ByVal page As Integer) As DialogResult","[JScript] public function ShowForm(owner: IWin32Window, page: int): DialogResult;","Description","Shows the form and the specified page with the specified owner.","Return Value: A System.Windows.Forms.DialogResult value indicating the result of showing the dialog. The owner of the dialog. The index of the page to show.","ComponentEditorPage class (System.Windows.Forms.Design)","a) WndProc","Description","Provides a base implementation for a System.Windows.Forms.Design.ComponentEditorPage. System.Windows.Forms.Design.ComponentEditorPage is a complete implementation for a component editor page that consists of an empty window. You can extend this page to add your own controls.","b) ComponentEditorPage","Example Syntax:","c) WndProc","[C+] public ComponentEditorPage( );","[C++] public: ComponentEditorPage( );","[VB] Public Sub New( )","[JScript] public function ComponentEditorPage( );","Description","Initializes a new instance of the System.Windows.Forms.Design.ComponentEditorPage class.","d) AccessibilityObject","e) A ccessibleDefaultA ctiondescription","f) AccessibleDescription","g) AccessibleName","h) AccessibleRole","i) AllowDrop","j) Anchor","k) AutoScroll","l) AutoScrollMargin","m) AutoScrollMinSize","n) AutoScrollPosition","o) BackColor","p) BackgroundImage","q) BindingContext","r) BorderStyle","s) Bottom","t) Bounds","u) CanFocus","v) CanSelect","w) Capture","x) Causes Validation","y) ClientRectangle","z) ClientSize","aa) CommitOnDeactivate","bb) WndProc","Description","Indicates whether an editor should apply its changes before it is deactivated.","The standard implementation returns false","cc) CompanyName","dd) Component","ee) WndProc","Description","Gets or sets the component to edit.","The component to edit.","ff) Container","gg) ContainsFocus","hh) ContextMenu","ii) Controls","jj) Created","kk) CreateParams","ll) WndProc","Description","Gets or sets the creation parameters for this control.","mm) Cursor","nn) DataBindings","oo) DefaultImeMode","pp) DefaultSize","qq) DesignMode","rr) DisplayRectangle","ss) Disposing","tt) Dock","uu) DockPadding","vv) Enabled","ww) Events","xx) FirstActivate","yy) WndProc","Description","Indicates whether the page is being activated for the first time.","zz) Focused","aaa) Font","bbb) FontHeight","ccc) ForeColor","ddd) Handle","eee) HasChildren","fff) Height","ggg) HScroll","hhh) Icon","iii) WndProc","Description","Gets or sets the icon for this page.","The caller may use this before the editor is actually activated.","jjj) ImeMode","kkk) InvokeRequired","lll) IsAccessible","mmm) IsDisposed","nnn) IsHandleCreated","ooo) Left","ppp) Loading","qqq) WndProc","Description","Indicates if loading is taking place.","rrr) LoadRequired","sss) WndProc","[C#] protected bool LoadRequired {get; set;}","[C++] protected: _property bool get_LoadRequired( ); protected: _property void set_LoadRequired(bool);","[VB] Protected Property LoadRequired As Boolean","[JScript] protected function get LoadRequired( ): Boolean; protected function set LoadRequired(Boolean);","Description","Indicates whether a load is required previous to editing.","ttt) Location","uuu) Name","vvv) PageSite","www) WndProc","Description","Gets or sets the page site.","The site for this component editor page.","xxx) Parent","yyy) ProductName","zzz) ProductVersion","aaaa) RecreatingHandle","bbbb) Region","cccc) RenderRightToLeft","dddd) ResizeRedraw","eeee) Right","ffff) RightToLeft","gggg) ShowFocusCues","hhhh) ShowKeyboardCues","iiii) Site","jjjj) Size","kkkk) TabIndex","llll) TabStop","mmmm) Tag","nnnn) Text","oooo) Title","pppp) WndProc","Description","Gets or sets the title of the page.","The caller may use this to show the name of this editor before it's actually activated.","qqqq) Top","rrrr) TopLevelControl","ssss) Visible","tttt) VScroll","uuuu) Width","vvvv) WindowTarget","wwww) Activate [C#] public virtual void Activate( );","[C++] public: virtual void Activate( );","[VB] Overridable Public Sub Activate( )","[JScript] public function Activate( );","Description","Activates and displays the page.","xxxx) ApplyChanges","[C#] public virtual void ApplyChanges( );","[C++] public: virtual void ApplyChanges( );","[VB] Overridable Public Sub ApplyChanges( )","[JScript] public function ApplyChanges( );","Description","Applies changes to all the components being edited.","yyyy) Deactivate","[C+] public virtual void Deactivate( );","[C++] public: virtual void Deactivate( );","[VB] Overridable Public Sub Deactivate( )","[JScript] public function Deactivate( );","Description","Deactivates and hides the page.","zzzz) EnterLoadingMode","[C#] protected void EnterLoadingMode( );","[C++] protected: void EnterLoadingMode( );","[VB] Protected Sub EnterLoadingMode( )","[JScript] protected function EnterLoadingMode( );","Description","Increments the loading counter, which determines whether a page is in loading mode.","aaaaa) ExitLoadingMode","[C#] protected void ExitLoadingMode( );","[C++] protected: void ExitLoadingMode( );","[VB] Protected Sub ExitLoadingMode( )","[JScript] protected function ExitLoadingMode( );","Description","Decrements the loading counter, which determines whether a page is in loading mode.","bbbbb) GetControl","[C#] public virtual Control GetControl( );","[C++] public: virtual Control* GetControl( );","[VB] Overridable Public Function GetControl( ) As Control","[JScript] public function GetControl( ): Control;","Description","Gets the control that represents the window for this page.","ccccc) GetSelectedComponent","[C#] protected IComponent GetSelectedComponent( );","[C++] protected: IComponent* GetSelectedComponent( );","[VB] Protected Function GetSelectedComponent( ) As IComponent","[JScript] protected function GetSelectedComponent( ): IComponent;","Description","Gets the component that is to be edited.","Return Value: The component that is being edited.","ddddd) IsFirstActivate","[C#] protected bool IsFirstActivate( );","[C++] protected: bool IsFirstActivate( );","[VB] Protected Function IsFirstActivate( ) As Boolean","[JScript] protected function IsFirstActivate( ) Boolean;","Description","Gets a value indicating whether the page is being activated for the first time.","Return Value: true if this is the first time the page is being activated; otherwise, false .","eeeee) IsLoading","[C#] protected bool IsLoading( );","[C++] protected: bool IsLoading( );","[VB] Protected Function IsLoading( ) As Boolean","[JScript] protected function IsLoading( ): Boolean;","Description","Gets a value indicating whether the page is being loaded.","Return Value: true if this is the page is being loaded; otherwise, false","fffff) IsPageMessage","[C#] public virtual bool IsPageMessage(ref Message msg);","[C++] public: virtual bool IsPageMessage(Message* msg);","[VB] Overridable Public Function IsPageMessage(ByRef msg As Message) As Boolean","[JScript] public function IsPageMessage(msg: Message): Boolean;","Description","Processes messages that could be handled by the page.","Return Value: true if the page processed the message; otherwise, false.","Gives the page a chance to process messages before the caller uses them. If this returns true, the message will be eaten. Otherwise, the caller will continue to process the message. Message to process.","ggggg) LoadComponent","[C#] protected abstract void LoadComponent( );","[C++] protected: virtual void LoadComponent( )=0;","[VB] MustOverride Protected Sub LoadComponent( )","[JScript] protected abstract function LoadComponent( );","Description","Loads the component into the page UI.","Each page must override this and implement its own custom behavior.","hhhhh) OnApplyComplete","[C#] public virtual void OnApplyComplete( );","[C++] public: virtual void OnApplyComplete( );","[VB] Overridable Public Sub OnApplyComplete( )","[JScript] public function OnApplyComplete( );","Description","Called when the page along with its sibling pages have applied their changes.","System.Windows.Forms.Design.ComponentEditorPage gives a chance for the page to reload itself especially when they are interdependent, and need to reflect changes made in another page.","iiiii) ReloadComponent","[C#] protected virtual void ReloadComponent( );","[C++] protected: virtual void ReloadComponent( );","[VB] Overridable Protected Sub ReloadComponent( )","[JScript] protected function ReloadComponent( );","Description","Called when the current component may have changed elsewhere and needs to be reloded into the UI.","jjjjj) SaveComponent","[C#] protected abstract void SaveComponent( );","[C++] protected: virtual void SaveComponent( )=0;","[VB] MustOverride Protected Sub SaveComponent( )","[JScript] protected abstract function SaveComponent( );","Description","Saves the component from the page UI.","Each page must override this and implement its own custom behavior.","kkkkk) SetComponent","[C#] public virtual void SetComponent(IComponent component);","[C++] public: virtual void SetComponent(IComponent* component);","[VB] Overridable Public Sub SetComponent(ByVal component As IComponent)","[JScript] public function SetComponent(component: IComponent);","Description","Sets the component to be edited. The component to be edited.","lllll) SetDirty","[C#] protected virtual void SetDirty( );","[C++] protected: virtual void SetDirty( );","[VB] Overridable Protected Sub SetDirty( )","[JScript] protected function SetDirty( );","Description","Sets the page to be in dirty state.","mmmmm) SetSite","[C#] public virtual void SetSite(IComponentEditorPageSite site);","[C++] public: virtual void SetSite(IComponentEditorPageSite* site);","[VB] Overridable Public Sub SetSite(ByVal site As IComponentEditorPageSite)","[JScript] public function SetSite(site: IComponentEditorPageSite);","Description","Sets the site for this page. Site for this page.","nnnnn) ShowHelp","[C#] public virtual void ShowHelp( );","[C++] public: virtual void ShowHelp( );","[VB] Overridable Public Sub ShowHelp( )","[JScript] public function ShowHelp( );","Description","Provides help information to the help system.","This is only called if System.Windows.Forms.Design.ComponentEditorPage.SupportsHelp returns true. The help system calls System.Windows.Forms.Design.ComponentEditorPage.ShowHelp to provide help for the page.","ooooo) SupportsHelp","[C#] public virtual bool SupportsHelp( );","[C++] public: virtual bool SupportsHelp( );","[VB] Overridable Public Function SupportsHelp( ) As Boolean","[JScript] public function SupportsHelp( ): Boolean;","Description","Gets a value indicating whether the editor supports Help.","Return Value: true if the editor supports help; otherwise, false. The default implementation returns false.","EventsTab class (System.Windows.Forms.Design)","a) WndProc","Description","Provides a System.Windows.Forms.Design.PropertyTab which can display events for selection and linking.","b) EventsTab","Example Syntax:","c) WndProc","[C#] public EventsTab(IServiceProvider sp);","[C++] public: EventsTab(IServiceProvider* sp);","[VB] Public Sub New(ByVal sp As IServiceProvider)","[JScript] public function EventsTab(sp: IServiceProvider);","Description","Initializes a new instance of the System.Windows.Forms.Design.EventsTab class. A service object provider to use.","d) Bitmap","e) Components","f) HelpKeyword","g) WndProc","Description","Gets or sets the help keyword for the tab.","h) TabName","i) WndProc","[C#] public override string TabName {get;}","[C++] public: _property virtual String* get_TabName( );","[VB] Overrides Public ReadOnly Property TabName As String","[JScript] public function get TabName( ): String;","Description","Gets or sets the name of the tab.","j) CanExtend","[C#] public override bool CanExtend(object extendee);","[C++] public: bool CanExtend(Object* extendee);","[VB] Overrides Public Function CanExtend(ByVal extendee As Object) As Boolean","[JScript] public override function CanExtend(extendee: Object): Boolean;","Description","Gets a value indicating whether the specified object can be extended.","Return Value: true if the specified object may be extended; otherwise, false. The object to determine whether can be extended.","k) GetDefaultProperty","[C#] public override PropertyDescriptor GetDefaultProperty(object obj);","[C++] public: PropertyDescriptor* GetDefaultProperty(Object* obj);","[VB] Overrides Public Function GetDefaultProperty(ByVal obj As Object) As PropertyDescriptor","[JScript] public override function GetDefaultProperty(obj: Object): PropertyDescriptor;","Description","Gets the default property from the specified object.","Return Value: A System.ComponentModel.PropertyDescriptor indicating the default property. The object to retrieve the default property of.","l) GetProperties","[C#] public override PropertyDescriptorCollection GetProperties(object component, Attribute[ ] attributes);","[C++] public: PropertyDescriptorCollection* GetProperties(Object* component, Attribute* attributes[ ]);","[VB] Overrides Public Function GetProperties(ByVal component As Object, ByVal attributes( ) As Attribute) As PropertyDescriptorCollection","[JScript] public override function GetProperties(component: Object, attributes: Attribute[ ]) PropertyDescriptorCollection;","Description","Gets all the properties of the event tab that match the specified attributes. The event tab properties are determined from the event properties returned from a component's event service.","Return Value: A System.ComponentModel.PropertyDescriptorCollection that indicates the properties. This will be a default initialized System.ComponentModel.PropertyDescriptorCollection if the component does not implement an event service. The component to retrieve the properties of. An array of System.Attribute that indicates the attributes of the event properties to retrieve.","m) GetProperties","[C#] public override PropertyDescriptorCollection GetProperties(ITypeDescriptorContext context, object component, Attribute[ ] attributes);","[C++] public: PropertyDescriptorCollection* GetProperties(ITypeDescriptorContext* context, Object* component, Attribute* attributes[ ]);","[VB] Overrides Public Function GetProperties(ByVal context As ITypeDescriptorContext, ByVal component As Object, ByVal attributes( ) As Attribute) As PropertyDescriptorCollection","[JScript] public override function GetProperties(context: ITypeDescriptorContext, component: Object, attributes: Attribute[ ]): PropertyDescriptorCollection; Gets the properties of the specified component . . .","IUIService interface (System.Windows.Forms.Design)","a) ToString","Description","Provides support for interaction with the user interface of the development environment object that is hosting the designer.","System.Windows.Forms.Design.IUIService can display error messages, show dialog boxes, and get ambient properties of the host, such as the font for dialogs and color schemes, through the Styles dictionary property.","b) Styles","c) ToString","[C#] IDictionary Styles {get;}","[C++] IDictionary* get_Styles( );","[VB] ReadOnly Property Styles As IDictionary","[JScript] abstract function get Styles( ): IDictionary;","Description","Gets or sets the collections of styles that are specific to the host's environment.","The dictionary can provide information from the host environment. At a minimum, this consists of the font that should be used for standard UI text, and the color to use for highlighting. These required styles are \u201cDialogFont\u201d and \u201cHighlightColor\u201d.","d) CanShowComponentEditor","[C#] bool CanShowComponentEditor(object component);","[C++] bool CanShowComponentEditor(Object* component);","[VB] Function CanShowComponentEditor(ByVal component As Object) As Boolean","[JScript] function CanShowComponentEditor(component: Object): Boolean;","Description","Indicates whether the component can display a System.ComponentModel.Design.ComponentDesigner.","Component editors are similar to property pages from COM. The component to check for support for displaying a System.ComponentModel.Design.ComponentDesigner.","e) GetDialogOwnerWindow","[C#] IWin32Window GetDialogOwnerWindow( );","[C++] IWin32Window* GetDialogOwnerWindow( );","[VB] Function GetDialogOwnerWindow( ) As IWin32Window","[JScript] function GetDialogOwnerWindow( ): IWin32Window;","Description","Gets the window that should be used for dialog parenting.","f) SetUIDirty","[C#] void SetUIDirty( );","[C++] void SetUIDirty( );","[VB] Sub SetUIDirty( )","[JScript] function SetUIDirty( );","Description","Sets a flag indicating the UI is dirty.","The UI becomes dirty whenever a toolbar or menu item's status changes. Most development environments cache the status of these elements for speed, and need to know when they need to be updated. This method would be called, for example, after a set of objects have been selected within the designer to enable the cut and copy menu items, for example.","g) ShowComponentEditor","[C#] bool ShowComponentEditor(object component, IWin32Window parent);","[C++] bool ShowComponentEditor(Object* component, IWin32Window* parent);","[VB] Function ShowComponentEditor(ByVal component As Object, ByVal parent As IWin32Window) As Boolean","[JScript] function ShowComponentEditor(component: Object, parent: IWin32Window): Boolean;","Description","Attempts to display a System.ComponentModel.Design.ComponentDesigner for a component.","Return Value: true if the attempt was successful; otherwise, false.","A System.ComponentModel.Design.ComponentDesigner is similar to a property page from COM. The component for which to display a System.ComponentModel.Design.ComponentDesigner. The object to parent any dialogs to.","h) ShowDialog","[C#] DialogResult ShowDialog(Form form);","[C++] DialogResult ShowDialog(Form* form);","[VB] Function ShowDialog(ByVal form As Form) As DialogResult","[JScript] function ShowDialog(form: Form): DialogResult;","Description","Attempts to display the specified form in a dialog box.","Return Value: A System.Windows.Forms.DialogResult indicating the results of the dialog box.","i) ShowError","[C#] void ShowError(Exception ex);","[C++] void ShowError(Exception* ex);","[VB] Sub ShowError(ByVal ex As Exception)","[JScript] function ShowError(ex: Exception);","Description","Displays the specified exception and its information in a message box.","Using this method allows the message box display to be properly integrated with the development environment. The exception to display.","j) ShowError","[C#] void ShowError(string message);","[C++] void ShowError(String* message);","[VB] Sub ShowError(ByVal message As String)","[JScript] function ShowError(message: String); Displays the specified error message in a message box.","Description","Displays the specified error message in a message box.","Using this method allows the message box display to be properly integrated with the development environment. The error message to display.","k) ShowError","[C#] void ShowError(Exception ex, string message);","[C++] void ShowError(Exception* ex, String* message);","[VB] Sub ShowError(ByVal ex As Exception, ByVal message As String)","[JScript] function ShowError(ex: Exception, message String);","Description","Displays the specified exception and its information in a message box.","Using this method allows the message box display to be properly integrated with the development environment. The exception to display. A message to display that provides information about the exception.","l) ShowMessage","[C#] void ShowMessage(string message);","[C++] void ShowMessage(String* message);","[VB] Sub ShowMessage(ByVal message As String)","[JScript] function ShowMessage(message: String); Displays the specified message in a message box.","Description","Displays the specified message in a message box.","Using this method allows the message box display to be properly integrated with the development environment. The message to display","m) ShowMessage","[C#] void ShowMessage(string message, string caption);","[C++] void ShowMessage(String* message, String* caption);","[VB] Sub ShowMessage(ByVal message As String, ByVal caption As String)","[JScript] function ShowMessage(message: String, caption: String);","Description","Displays the specified message in a message box with the specified caption.","Using this method allows the message box display to be properly integrated with the development environment. The message to display. The caption for the message box.","n) ShowMessage","[C#] DialogResult ShowMessage(string message, string caption, MessageBoxButtons buttons);","[C++] DialogResult ShowMessage(String* message, String* caption, MessageBoxButtons buttons);","[VB] Function ShowMessage(ByVal message As String, ByVal caption As String, ByVal buttons As MessageBoxButtons) As DialogResult","[JScript] function ShowMessage(message String, caption: String, buttons: MessageBoxButtons): DialogResult;","Description","Displays the specified message in a message box with the specified caption and buttons to place on the dialog box.","Return Value: A System.Windows.Forms.DialogResult indicating the results of the dialog box.","Using this method allows the message box display to be properly integrated with the development environment. The message to display. The caption for the dialog box. The buttons to place on the dialog box. Must be one of the following values defined in System.Windows.Forms.MessageBoxButtons: System.Windows.Forms.MessageBoxButtons.OK, System.Windows.Forms.MessageBoxButtons.OKCancel, System.Windows.Forms.MessageBoxButtons.YesNo, System.Windows.Forms.MessageBoxButtons.YesNoCancel.","o) ShowToolWindow","[C#] bool ShowToolWindow(Guid toolWindow);","[C++] bool ShowToolWindow(Guid toolwindow);","[VB] Function ShowToolWindow(ByVal toolWindow As Guid) As Boolean","[JScript] function ShowToolWindow(toolWindow: Guid): Boolean;","Description","Displays the specified tool window.","Return Value: true if the tool window was successfully shown; false if it couldn't be shown or found. An identifier for the tool window. This can be a custom Guid or one of the predefined values from System.ComponentModel.Design.StandardToolWindows.","IWindowsFommsEditorService interface (System.Windows.Forms.Design)","a) ShowToolWindow","b) CloseDropDown","[C#] void CloseDropDown( );","[C++] void CloseDropDown( );","[VB] Sub CloseDropDown( )","[JScript] function CloseDropDown( ); Closes a previously opened drop down list.","c) DropDownControl","[C#] void DropDownControl(Control control);","[C++] void DropDownControl(Control* control);","[VB] Sub DropDownControl(ByVal control As Control)","[JScript] function DropDownControl(control: Control); Displays the specified control in a drop down list.","d) ShowDialog","[C#] DialogResult ShowDialog(Form* dialog);","[C++] DialogResult ShowDialog(Form* dialog);","[VB] Function ShowDialog(ByVal dialog As Form) As DialogResult","[JScript] function ShowDialog(dialog: Form): DialogResult; Shows the specified dialog box.","PropertyTab class (System.Windows.Forms.Design)","a) ShowDialog","Description","Provides a base class for property tabs.","System.Windows.Forms.Design.PropertyTab provides the basic functionality for a property tab which can provide an interface to properties which it creates extender providers for.","b) PropertyTab","Example Syntax:","c) ShowDialog","[C#] protected PropertyTab( );","[C++] protected: PropertyTab( );","[VB] Protected Sub New( )","[JScript] protected function PropertyTab( );","d) Bitmap","e) ShowDialog","[C#] public virtual Bitmap Bitmap {get;}","[C++] public: _property virtual Bitmap* get_Bitmap( );","[VB] Overridable Public ReadOnly Property Bitmap As Bitmap","[JScript] public function get Bitmapo: Bitmap;","Description","Gets or sets a bitmap to display in the property tab.","f) Components","g) ShowDialog","[C#] public virtual object[ ] Components {get; set;}","[C++] public: _property virtual Object* get_Components( ); public: _property virtual void set_Components(Object* _gc[ ]);","[VB] Overridable Public Property Components As Object ( )","[JScript] public function get Components( ): Object[ ]; public function set Components(Object[ ]);","Description","Gets or sets the array of components the property tab is associated with.","h) HelpKeyword","i) ShowDialog","[C#] public virtual string HelpKeyword {get;}","[C++] public: _property virtual String* get_HelpKeyword( );","[VB] Overridable Public ReadOnly Property HelpKeyword As String","[JScript] public function get HelpKeyword( ): String;","Description","Gets or sets the help keyword that is to be associated with this tab.","By default, this is set to the tab name.","j) TabName","k) ShowDialog","[C#] public abstract string TabName {get;}","[C++] public: _property virtual String* get_TabName( )=0;","[VB] MustOverride Public ReadOnly Property TabName As String","[JScript] public abstract function get TabName( ): String;","Description","Gets or sets the name for the property tab.","l) CanExtend","[C#] public virtual bool Canxtend(object extendee);","[C++] public: virtual bool CanExtend(Object* extendee);","[VB] Overridable Public Function CanExtend(ByVal extendee As Object) As Boolean","[JScript] public function CanExtend(extendee: Object): Boolean;","Description","Gets a value indicating whether the specified object be can extended.","Return Value: true if the object can be extended; otherwise, false. The object to determine whether can be extended.","m) Dispose","[C#] public virtual void Dispose( );","[C++] public: virtual void Dispose( );","[VB] Overridable Public Sub Dispose( )","[JScript] public function Dispose( );","Description","n) Dispose","[C#] protected virtual void Dispose(bool disposing);","[C++] protected: virtual void Dispose(bool disposing);","[VB] Overridable Protected Sub Dispose(ByVal disposing As Boolean)","[JScript] protected function Dispose(disposing: Boolean);","o) Finalize","[C#] \u02dcPropertyTab( );","[C++] \u02dcPropertyTab( );","[VB] Overrides Protected Sub Finalize( )","[JScript] protected override function Finalize( );","p) GetDefaultProperty","[C#] public virtual PropertyDescriptor GetDefaultProperty(object component);","[C++] public: virtual PropertyDescriptor* GetDefaultProperty(Object* component);","[VB] Overridable Public Function GetDefaultProperty(ByVal component As Object) As PropertyDescriptor","[JScript] public function GetDefaultProperty(component: Object): PropertyDescriptor;","Description","Gets the default property of the specified component.","Return Value: A System.ComponentModel.PropertyDescriptor that represents the default property. The component to retrieve the default property of.","q) GetProperties","[C#] public virtual PropertyDescriptorCollection GetProperties(object component);","[C++] public: virtual PropertyDescriptorCollection* GetProperties(Object* component);","[VB] Overridable Public Function GetProperties(ByVal component As Object) As PropertyDescriptorCollection","[JScript] public function GetProperties(component: Object): PropertyDescriptorCollection; Gets the properties of the specified component.","Description","Gets the properties of the specified component.","Return Value: A System.ComponentModel.PropertyDescriptorCollection containing the properties of the specified component. The component to retrieve the properties of.","r) GetProperties","[C#] public abstract PropertyDescriptorCollection GetProperties(object component, Attribute[ ] attributes);","[C++] public: virtual PropertyDescriptorCollection* GetProperties(Object* component, Attribute* attributes[ ])=0;","[VB] MustOverride Public Function GetProperties(ByVal component As Object, ByVal attributes( ) As Attribute) As PropertyDescriptorCollection","[JScript] public abstract function GetProperties(component: Object, attributes: Attribute[ ]): PropertyDescriptorCollection;","Description","Gets the properties of the specified component which match the specified attributes.","Return Value: A System.ComponentModel.PropertyDescriptorCollection that indicates the properties. The component to retrieve properties from. An array of System.Attribute that indicates the attributes of the properties to retrieve.","s) GetProperties","[C#] public virtual PropertyDescriptorCollection GetProperties(ITypeDescriptorContext context, object component, Attribute[ ] attributes);","[C++] public: virtual PropertyDescriptorCollection* GetProperties(ITypeDescriptorContext* context, Object* component, Attribute* attributes[ ]);","[VB] Overridable Public Function GetProperties(ByVal context As ITypeDescriptorContext, ByVal component As Object, ByVal attributes( ) As Attribute) As PropertyDescriptorCollection","[JScript] public function GetProperties(context: ITypeDescriptorContext, component: Object, attributes: Attribute[ ]): PropertyDescriptorCollection;","Description","Gets the properties of the specified context which match the specified attributes.","Return Value: A System.ComponentModel.PropertyDescriptorCollection that indicates the properties matching the specified context and attributes. An ITypeDescriptorContext that indicates the context to retrieve properties from. The component to retrieve properties from. An array of System.Attribute that indicates the attributes of the properties to retrieve.","WindowsFormsComponentEditor class (System.Windows.Forms.Design)","a) ToString","Description","Provides a base class for editors that use a modal dialog to display a properties page similar to an ActiveX control's property page.","b) WindowsFormsComponentEditor","Example Syntax:","c) ToString","[C#] protected WindowsFormsComponentEditor( );","[C++] protected: WindowsFormsComponentEditor( );","[VB] Protected Sub New( )","[JScript] protected function WindowsFormsComponentEditor( );","d) EditComponent","[C#] public override bool EditComponent(ITypeDescriptorContext context, object component);","[C++] public: bool EditComponent(ITypeDescriptorContext* context, Object* component);","[VB] Overrides Public Function EditComponent(ByVal context As ITypeDescriptorContext, ByVal component As Object) As Boolean","[JScript] public override function EditComponent(context: ITypeDescriptorContext, component: Object): Boolean;","Description","Activates a UI used to edit the component.","e) EditComponent","[C#] public bool EditComponent(object component, IWin32Window owner);","[C++] public: bool EditComponent(Object* component, IWin32Window* owner);","[VB] Public Function EditComponent(ByVal component As Object, ByVal owner As IWin32Window) As Boolean","[JScript] public function EditComponent(component: Object, owner: IWin32Window) Boolean;","Description","Activates the advanced UI used to edit the component.","f) EditComponent","[C#] public virtual bool EditComponent(ITypeDescriptorContext context, object component, IWin32Window owner);","[C++] public: virtual bool EditComponent(ITypeDescriptorContext* context, Object* component, IWin32Window* owner);","[VB] Overridable Public Function EditComponent(ByVal context As ITypeDescriptorContext, ByVal component As Object, ByVal owner As IWin32Window) As Boolean","[JScript] public function EditComponent(context: ITypeDescriptorContext, component: Object, owner: IWin32Window): Boolean;","Description","Activates the advanced UI used to edit the component.","g) GetComponentEditorPages","[C#] protected virtual Type [ ] GetComponentEditorPages( );","[C++] protected: virtual Type* GetComponentEditorPages( ) [ ]","[VB] Overridable Protected Function GetComponentEditorPages( ) As Type( )","[JScript] protected function GetComponentEditorPages( ) Type[ ];","Description","Gets the set of System.Windows.Forms.Design.ComponentEditorPage pages to be used.","h) GetInitialComponentEditorPageIndex","[C#] protected virtua","2. System.Windows.Forms","The namespace contains classes for creating Windows-based applications that take full advantage of the rich user interface features available in the Microsoft Windows operating system. In this namespace you will find the class and many other controls that can be added to forms to create user interfaces.","Description","The System.Windows.Forms namespace contains classes for creating Windows-based applications that take full advantage of the rich user interface features available in the Microsoft Windows operating system. In this namespace you will find the System.Windows.Forms.Form class and many other controls that can be added to forms to create user interfaces.","AxHost.AboutBoxDelegate delegate (System.Windows.Forms)","Description","Represents the method that will display an ActiveX control's about dialog box.","When you create an System.Windows.Forms.AxHost.AboutBoxDelegate delegate, you identify the method that will handle display an ActiveX control's about dialog box if it has one. To associate the method with your handler, add an instance of the delegate to the method. The handler is called whenever the method is called, unless you remove the delegate. For more information about delegates, see","AccessibleEvents enumeration (System.Windows.Forms)","Description","Specifies events that are reported by accessible applications.","Accessibility events are generated by the operating system in response to changes in the user interface.","[C#] public const AccessibleEvents AcceleratorChange;","[C++] public: const AccessibleEvents AcceleratorChange;","[VB] Public Const AcceleratorChange As AccessibleEvents","[JScript] public var AcceleratorChange: AccessibleEvents;","Description","An object's System.Windows.Forms.AccessibleObject.KeyboardShortcut property changed. Server applications send this event for their accessible objects.","[C#] public const AccessibleEvents Create;","[C++] public: const AccessibleEvents Create;","[VB] Public Const Create As AccessibleEvents","[JScript] public var Create: AccessibleEvents;","Description","An object was created. The system sends this event for the following user interface elements: caret, header control, list view control, tab control, toolbar control, tree view control, and window object. Server applications send this event for their accessible objects. Servers must send this event for all of an object's child objects before sending the event for the parent object. Servers must ensure that all child objects are fully created and ready to accept calls from clients when the parent object sends this event.\n\n[C#] public const AccessibleEvents DefaultActionChange;\n\n[C++] public: const AccessibleEvents DefaultActionChange;\n\n[VB] Public Const DefaultActionChange As AccessibleEvents\n\n[JScript] public var DefaultActionChange: AccessibleEvents;\n\nDescription\n\nAn object's System.Windows.Forms.AccessibleObject.DefaultAction property changed. The system sends this event for dialog boxes. Server applications send this event for their accessible objects. Therefore, server applications do not need to send this event for the child objects. Hidden objects have a state of System.Windows.Forms.AccessibleStates.Invisible and shown objects do not. Events of type AccessibleEvents.Hide indicate that a state of System.Windows.Forms.AccessibleStates.Invisible has been set. Therefore, servers do not need to send the AccessibleEvents.StateChange event in this case.\n\n[C#] public const AccessibleEvents DescriptionChange;\n\n[C++] public: const AccessibleEvents DescriptionChange;\n\n[VB] Public Const DescriptionChange As AccessibleEvents\n\n[JScript] public var DescriptionChange: AccessibleEvents;\n\nDescription\n\nAn object's System.Windows. Forms.AccessibleObject. Description property changed. Server applications send this event for their accessible objects.\n\n[C#] public const AccessibleEvents Destroy;\n\n[C++] public: const AccessibleEvents Destroy;\n\n[VB] Public Const Destroy As AccessibleEvents\n\n[JScript] public var Destroy: AccessibleEvents;\n\nDescription\n\nAn object was destroyed. The system sends this event for the following user interface elements: caret, header control, list view control, tab control, toolbar control, tree view control, and window object. Server applications send this event for their accessible objects. This event may or may not be sent for child objects. However, clients can assume that all the children of an object have been destroyed when the parent object sends this event.\n\n[C#] public const AccessibleEvents Focus;\n\n[C++] public: const AccessibleEvents Focus;\n\n[VB] Public Const Focus As AccessibleEvents\n\n[JScript] public var Focus: AccessibleEvents;\n\nDescription\n\nAn object has received the keyboard focus. The system sends this event for the following user interface elements: list view control, menu bar, pop-up menu, switch window, tab control, tree view control, and window object. Server applications send this event for their accessible objects.\n\n[C#] public const AccessibleEvents HelpChange;\n\n[C++] public: const AccessibleEvents HelpChange;\n\n[VB] Public Const HelpChange As AccessibleEvents\n\n[JScript] public var HelpChange: AccessibleEvents;\n\nDescription\n\nAn object's Help property changed. Server applications send this event for their accessible objects.\n\n[C#] public const AccessibleEvents Hide;\n\n[C++] public: const AccessibleEvents Hide;\n\n[VB] Public Const Hide As AccessibleEvents\n\n[JScript] public var Hide: AccessibleEvents;\n\nDescription\n\nAn object is being hidden. The system sends this event for the following user interface elements: caret and cursor. Server applications send this event for their accessible objects. When this event is generated for a parent object, all child objects have already been hidden. Therefore, server applications do not need to send this event for the child objects. This event is not sent consistently by the system. This is a known problem and is being addressed by the accessibilty team.\n\n[C#] public const AccessibleEvents LocationChange;\n\n[C++] public: const AccessibleEvents LocationChange;\n\n[VB] Public Const LocationChange As AccessibleEvents\n\n[JScript] public var LocationChange: AccessibleEvents;\n\nDescription\n\nAn object has changed location, shape, or size. The system sends this event for the following user interface elements: caret and window object. Server applications send this event for their accessible objects. This event is generated in response to the top-level object within the object hierarchy that has changed, not for any children it might contain. For example, if the user resizes a window, the system sends this notification for the window, but not for the menu bar, title bar, scroll bars, or other objects that have also changed. The system does not send this event for every non-floating child window when the parent moves. However, if an application explicitly resizes child windows as a result of being resized itself, the system will send multiple events for the resized children. If an object's System.Windows.Forms.AccessibleObject.State property is set to System.Windows.Forms.AccessibleStates.Floating, servers should send a location change event whenever the object changes location. If an object does not have this state, servers should raise this event when the object moves relative to its parent.\n\n[C#] public const AccessibleEvents NameChange;\n\n[C++] public: const AccessibleEvents NameChange;\n\n[VB] Public Const NameChange As AccessibleEvents\n\n[JScript] public var NameChange: AccessibleEvents;\n\nDescription\n\nAn object's System.Windows.Forms.AccessibleObject.Name property changed. The system sends this event for the following user interface elements: check box, cursor, list view control, push button, radio button, status bar control, tree view control, and window object. Server applications send this event for their accessible objects.\n\n[C#] public const AccessibleEvents ParentChange;\n\n[C++] public: const AccessibleEvents ParentChange;\n\n[VB] Public Const ParentChange As AccessibleEvents\n\n[JScript] public var ParentChange: AccessibleEvents;\n\nDescription\n\nAn object has a new parent object. Server applications send this event for their accessible objects.\n\n[C#] public const AccessibleEvents Reorder;\n\n[C++] public: const AccessibleEvents Reorder;\n\n[VB] Public Const Reorder As AccessibleEvents\n\n[JScript] public var Reorder: AccessibleEvents;\n\nDescription\n\nA container object has added, removed, or reordered its children. The system sends this event for the following user interface elements: header control, list view control, toolbar control, and window object. Server applications send this event as appropriate for their accessible objects. This event is also sent by a parent window when the z order for the child windows has changed.\n\n[C#] public const AccessibleEvents Selection;\n\n[C++] public: const AccessibleEvents Selection;\n\n[VB] Public Const Selection As AccessibleEvents\n\n[JScript] public var Selection: AccessibleEvents;\n\nDescription\n\nAn accessible object within a container object has been selected. This event signals a single selection\u2014either a child has been selected in a container that previously did not contain any selected children or the selection has changed from one child to another.\n\n[C#] public const AccessibleEvents SelectionAdd;\n\n[C++] public: const AccessibleEvents SelectionAdd;\n\n[VB] Public Const SelectionAdd As AccessibleEvents\n\n[JScript] public var SelectionAdd: AccessibleEvents;\n\nDescription\n\nAn item within a container object was added to the selection. The system sends this event for the following user interface elements: list box, list view control, and tree view control. Server applications send this event for their accessible objects. This event signals that a child has been added to an existing selection.\n\n[C#] public const AccessibleEvents SelectionRemove;\n\n[C++] public: const AccessibleEvents SelectionRemove;\n\n[VB] Public Const SelectionRemove As AccessibleEvents\n\n[JScript] public var SelectionRemove: AccessibleEvents;\n\nDescription\n\nAn item within a container object was removed from the selection. The system sends this event for the following user interface elements: list box, list view control, and tree view control. Server applications send this event for their accessible objects. This event signals that a child has been removed from an existing selection.\n\n[C#] public const AccessibleEvents SelectionWithin;\n\n[C++] public: const AccessibleEvents SelectionWithin;\n\n[VB] Public Const SelectionWithin As AccessibleEvents\n\n[JScript] public var SelectionWithin: AccessibleEvents;\n\nDescription\n\nNumerous selection changes occurred within a container object. The system sends this event for list boxes. Server applications send this event for their accessible objects. This event can be sent when the selected items within a control have changed substantially. This event informs the client that many selection changes have occurred. This preferable to sending several SelectionAdd or SelectionRemove events.\n\n[C#] public const AccessibleEvents Show;\n\n[C++] public: const AccessibleEvents Show;\n\n[VB] Public Const Show As AccessibleEvents\n\n[JScript] public var Show: AccessibleEvents;\n\nDescription\n\nA hidden object is being shown. The system sends this event for the following user interface elements: caret, cursor, and window object. Server applications send this event for their accessible objects. Clients can assume that when this event is sent by a parent object, all child objects have already been displayed. Therefore, server applications do not need to send this event for the child objects.\n\n[C#] public const AccessibleEvents StateChange;\n\n[C++] public: const AccessibleEvents StateChange;\n\n[VB] Public Const StateChange As AccessibleEvents\n\n[JScript] public var StateChange: AccessibleEvents;\n\nDescription\n\nAn object's state has changed. The system sends this event for the following user interface elements: check box, combo box, header control, push button, radio button, scroll bar, toolbar control, tree view control, up-down control, and window object. Server applications send this event for their accessible objects. For example, a state change can occur when a button object has been pressed or released, or when an object is being enabled or disabled. This event is not sent consistently by the system. This is a known problem and is being addressed by the accessibility team.\n\n[C#] public const AccessibleEvents SystemAlert;\n\n[C++] public: const AccessibleEvents SystemAlert;\n\n[VB] Public Const SystemAlert As AccessibleEvents\n\n[JScript] public var SystemAlert: AccessibleEvents;\n\nDescription\n\nAn alert was generated. Server applications send this event whenever an important user interface change has occurred that a user might need to know about. This event is not sent consistently by the system for dialog box objects. This is a known problem and is being addressed by the accessibilty team.\n\n[C#] public const AccessibleEvents SystemCaptureEnd;\n\n[C++] public: const AccessibleEvents SystemCaptureEnd;\n\n[VB] Public Const SystemCaptureEnd As AccessibleEvents\n\n[JScript] public var SystemCaptureEnd: AccessibleEvents;\n\nDescription\n\nA window has lost mouse capture. This event is sent by the system; servers never send this event.\n\n[C#] public const AccessibleEvents SystemCaptureStart;\n\n[C++] public: const AccessibleEvents SystemCaptureStart;\n\n[VB] Public Const SystemCaptureStart As AccessibleEvents\n\n[JScript] public var SystemCaptureStart: AccessibleEvents;\n\nDescription\n\nA window is being moved or resized. This event is sent by the system; servers never send this event.\n\n[C#] public const AccessibleEvents SystemContextHelpEnd;\n\n[C++] public: const AccessibleEvents SystemContextHelpEnd;\n\n[VB] Public Const SystemContextHelpEnd As AccessibleEvents\n\n[JScript] public var SystemContextHelpEnd: AccessibleEvents;\n\nDescription\n\nA window exited context-sensitive Help mode. This event is not sent consistently by the system. This is a known problem and is being addressed by the accessibility team.\n\n[C#] public const AccessibleEvents SystemContextHelpStart;\n\n[C++] public: const AccessibleEvents SystemContextHelpStart;\n\n[VB] Public Const SystemContextHelpStart As AccessibleEvents\n\n[JScript] public var SystemContextHelpStart: AccessibleEvents;\n\nDescription\n\nA window entered context-sensitive Help mode. This event is not sent consistently by the system. This is a known problem and is being addressed by the accessibility team.\n\n[C#] public const AccessibleEvents SystemDialogEnd;\n\n[C++] public: const AccessibleEvents SystemDlalogEnd;\n\n[VB] Public Const SystemDialogEnd As AccessibleEvents\n\n[JScript] public var SystemDialogEnd: AccessibleEvents;\n\nDescription\n\nA dialog box was closed. This event is sent by the system for standard dialog boxes. Servers send this event for custom dialog boxes. This event is not sent consistently by the system. This is a known problem and is being addressed by the accessibility team.\n\n[C#] public const AccessibleEvents SystemDialogStart;\n\n[C++] public: const AccessibleEvents SystemDialogStart;\n\n[VB] Public Const SystemDialogStart As AccessibleEvents\n\n[JScript] public var SystemDialogStart: AccessibleEvents;\n\nDescription\n\nA dialog box was displayed. This event is sent by the system for standard dialog boxes. Servers send this event for custom dialog boxes. This event is not sent consistently by the system. This is a known problem and is being addressed by the accessibility team.\n\n[C#] public const AccessibleEvents SystemDragDropEnd;\n\n[C++] public: const AccessibleEvents SystemDragDropEnd;\n\n[VB] Public Const SystemDragDropEnd As AccessibleEvents\n\n[JScript] public var SystemDragDropEnd: AccessibleEvents;\n\nDescription\n\nAn application is about to exit drag-and-drop mode. Applications that support drag-and-drop operations must send this event; the system does not.\n\n[C#] public const AccessibleEvents SystemDragDropStart;\n\n[C++] public: const AccessibleEvents SystemDragDropStart;\n\n[VB] Public Const SystemDragDropStart As AccessibleEvents\n\n[JScript] public var SystemDragDropStart: AccessibleEvents;\n\nDescription\n\nAn application is about to enter drag-and-drop mode. Applications that support drag-and-drop operations must send this event; the system does not.\n\n[C#] public const AccessibleEvents SystemForeground;\n\n[C++] public: const AccessibleEvents SystemForeground;\n\n[VB] Public Const SystemForeground As AccessibleEvents\n\n[JScript] public var SystemForeground: AccessibleEvents;\n\nDescription\n\nThe foreground window changed. The system sends this event even if the foreground window is changed to another window in the same thread. Server applications never send this event.\n\n[C#] public const AccessibleEvents SystemMenuEnd;\n\n[C++] public: const AccessibleEvents SystemMenuEnd;\n\n[VB] Public Const SystemMenuEnd As AccessibleEvents\n\n[JScript] public var SystemMenuEnd: AccessibleEvents;\n\nDescription\n\nA menu from the menu bar was closed. The system sends this event for standard menus. Servers send this event for custom menus.\n\n[C#] public const AccessibleEvents SystemMenuPopupEnd;\n\n[C++] public: const AccessibleEvents SystemMenuPopupEnd;\n\n[VB] Public Const SystemMenuPopupEnd As AccessibleEvents\n\n[JScript] public var SystemMenuPopupEnd: AccessibleEvents;\n\nDescription\n\nA pop-up menu was closed. The system sends this event for standard menus. Servers send this event for custom menus. When a pop-up menu is closed, the client receives this message followed almost immediately by the SystemMenuEnd event. This event is not sent consistently by the system. This is a known problem and is being addressed by the accessibility team.\n\n[C#] public const AccessibleEvents SystemMenuPopupStart;\n\n[C++] public: const AccessibleEvents SystemMenuPopupStart;\n\n[VB] Public Const SystemMenuPopupStart As AccessibleEvents\n\n[JScript] public var SystemMenuPopupStart: AccessibleEvents;\n\nDescription\n\nA pop-up menu was displayed. The system sends this event for standard menus. Servers send this event for custom menus. This event is not sent consistently by the system. This is a known problem and is being addressed by the accessibility team.\n\n[C#] public const AccessibleEvents SystemMenuStart;\n\n[C++] public: const AccessibleEvents SystemMenuStart;\n\n[VB] Public Const SystemMenuStart As AccessibleEvents\n\n[JScript] public var SystemMenuStart: AccessibleEvents;\n\nDescription\n\nA menu item on the menu bar was selected. The system sends this event for standard. Servers send this event for custom menus. The system may raise more than one MenuStart event that may or may not have a corresponding MenuEnd event.\n\n[C#] public const AccessibleEvents SystemMinimizeEnd;\n\n[C++] public: const AccessibleEvents SystemMinimizeEnd;\n\n[VB] Public Const SystemMinimizeEnd As AccessibleEvents\n\n[JScript] public var SystemMinimizeEnd: AccessibleEvents;\n\nDescription\n\nA window object was minimized or maximized. This event is sent by the system; servers never send this event.\n\n[C#] public const AccessibleEvents SystemMinimizeStart;\n\n[C++] public: const AccessibleEvents SystemMinimizeStart;\n\n[VB] Public Const SystemMinimizeStart As AccessibleEvents\n\n[JScript] public var SystemMinimizeStart: AccessibleEvents;\n\nDescription\n\nA window object is about to be minimized or maximized. This event is sent by the system; servers never send this event.\n\n[C+] public const AccessibleEvents SystemMoveSizeEnd;\n\n[C++] public: const AccessibleEvents SystemMoveSizeEnd;\n\n[VB] Public Const SystemMoveSizeEnd As AccessibleEvents\n\n[JScript] public var SystemMoveSizeEnd: AccessibleEvents;\n\nDescription\n\nThe movement or resizing of a window is finished. This event is sent by the system; servers never send this event.\n\n[C#] public const AccessibleEvents SystemMoveSizeStart;\n\n[C++] public: const AccessibleEvents SystemMoveSizeStart;\n\n[VB] Public Const SystemMoveSizeStart As AccessibleEvents\n\n[JScript] public var SystemMoveSizeStart: AccessibleEvents;\n\nDescription\n\nA window is being moved or resized. This event is sent by the system; servers never send this event.\n\n[C#] public const AccessibleEvents SystemScrollingEnd;\n\n[C++] public: const AccessibleEvents SystemScrollingEnd;\n\n[VB] Public Const SystemScrollingEnd As AccessibleEvents\n\n[JScript] public var SystemScrollingEnd: AccessibleEvents;\n\nDescription\n\nScrolling has ended on a scroll bar. This event is sent by the system for scroll bars attached to a window and for standard scroll bar controls. Servers send this event for custom scroll bars\n\n[C#] public const AccessibleEvents SystemScrollingStart;\n\n[C++] public: const AccessibleEvents SystemScrollingStart;\n\n[VB] Public Const SystemScrollingStart As AccessibleEvents\n\n[JScript] public var SystemScrollingStart: AccessibleEvents;\n\nDescription\n\nScrolling has started on a scroll bar. This event is sent by the system for scroll bars attached to a window and for standard scroll bar controls. Servers send this event for custom scroll bars.\n\n[C#] public const AccessibleEvents SystemSound;\n\n[C++] public: const AccessibleEvents SystemSound;\n\n[VB] Public Const SystemSound As AccessibleEvents\n\n[JScript] public var SystemSound: AccessibleEvents;\n\nDescription\n\nA sound was played. The system sends this event when a system sound, such as for menus, is played even if no sound is audible. This might be caused by lack of a sound file or sound card. Servers send this event if a custom user interface element generates a sound.\n\n[C#] public const AccessibleEvents SystemSwitchEnd;\n\n[C++] public: const AccessibleEvents SystemSwitchEnd;\n\n[VB] Public Const SystemSwitchEnd As AccessibleEvents\n\n[JScript] public var SystemSwitchEnd: AccessibleEvents;\n\nDescription\n\nThe user released ALT+TAB. The SwitchEnd event is sent by the system; servers never send this event. If only one application is running when the user presses ALT+TAB, the system sends the SwitchEnd event without a corresponding SwitchStart event.\n\n[C#] public const AccessibleEvents SystemSwitchStart;\n\n[C++] public: const AccessibleEvents SystemSwitchStart;\n\n[VB] Public Const SystemSwitchStart As AccessibleEvents\n\n[JScript] public var SystemSwitchStart: AccessibleEvents;\n\nDescription\n\nThe user pressed ALT+TAB, which activates the switch window. If only one application is running when the user presses ALT+TAB, the system raises the SwitchEnd event without a corresponding SwitchStart event.\n\n[C#] public const AccessibleEvents ValueChange;\n\n[C++] public: const AccessibleEvents ValueChange;\n\n[VB] Public Const ValueChange As AccessibleEvents\n\n[JScript] public var ValueChange: AccessibleEvents;\n\nDescription\n\nAn object's System.Windows.Forms.AccessibleObject.Value property changed. The system raises the ValueChange event for the following user interface elements: edit control, header control, hot key control, progress bar control, scroll bar, slider control, and up-down control. Server applications send this event for their accessible objects.\n\n1. Methods:\n","AccessibleNavigation Enumeration (System.Windows.Forms)","a) ToString","Description","Specifies values for navigating between accessible objects.","Accessible navigation directions are either spatial (up, down, left, and right) or logical (first child, last child, next, and previous). Logical directions are used when clients navigate from one user interface element to another within the same container.","b) ToString","[C#] public const AccessibleNavigation Down;","[C++] public: const AccessibleNavigation Down;","[VB] Public Const Down As AccessibleNavigation","[JScript] public var Down: AccessibleNavigation;","Description","Navigation to a sibling object located below the starting object.","c) ToString","[C#] public const AccessibleNavigation FirstChild;","[C++] public: const AccessibleNavigation FirstChild;","[VB] Public Const FirstChild As AccessibleNavigation","[JScript] public var FirstChild: AccessibleNavigation;","Description","Navigation to the first child of the object.","d) ToString","[C#] public const AccessibleNavigation LastChild;","[C++] public: const AccessibleNavigation LastChild;","[VB] Public Const LastChild As AccessibleNavigation","[JScript] public var LastChild: AccessibleNavigation;","Description","Navigation to the last child of the object.","e) ToString","[C#] public const AccessibleNavigation Left;","[C++] public: const AccessibleNavigation Left;","[VB] Public Const Left As AccessibleNavigation","[JScript] public var Left: AccessibleNavigation;","Description","Navigation to the sibling object located to the left of the starting object.","f) ToString","[C#] public const AccessibleNavigation Next;","[C++] public: const AccessibleNavigation Next;","[VB] Public Const Next As AccessibleNavigation","[JScript] public var Next: AccessibleNavigation;","Description","Navigation to the next logical object, typicaly from a sibling object to the starting object.","g) ToString","[C#] public const AccessibleNavigation Previous;","[C++] public: const AccessibleNavigation Previous;","[VB] Public Const Previous As AccessibleNavigation","[JScript] public var Previous: AccessibleNavigation;","Description","Navigation to the previous logical object, typicaly from a sibling object to the starting object.","h) ToString","[C#] public const AccessibleNavigation Right;","[C++] public: const AccessibleNavigation Right;","[VB] Public Const Right As AccessibleNavigation","[JScript] public var Right: AccessibleNavigation;","Description","Navigation to the sibling object located to the right of the starting object.","i) ToString","[C#] public const AccessibleNavigation Up;","[C++] public: const AccessibleNavigation Up;","[VB] Public Const Up As AccessibleNavigation","[JScript] public var Up: AccessibleNavigation;","Description","Navigation to a sibling object located above the starting object.","AccessibleObject Class (System.Windows.Forms)","a) ToString","Description","Provides an implementation for an object that can be inspected by an accessibility application.","Accessibility applications can adjust features of the application to better serve users who have impairments.","2. Constructors:","a) AccessibleObject","Example Syntax:","b) ToString","[C#] public AccessibleObject( );","[C++] public: Accessibleobject( );","[VB] Public Sub New( )","[JScript] public function AccessibleObject( );","Description","Initializes a new instance of the System.Windows.Forms.AccessibleObject class.","3. Properties:","a) Bounds","b) ToString","[C#] public virtual Rectangle Bounds {get;}","[C++] public: _property virtual Rectangle get_Bounds( );","[VB] Overridable Public ReadOnly Property Bounds As Rectangle","[JScript] public function get Bounds( ): Rectangle;","Description","Gets the location and size of the accessible object.","The Bounds property retrieves the object's bounding rectangle. If the object has a non-rectangular shape, then this method returns the smallest rectangle that completely encompasses the entire object region. Therefore, for non-rectangular objects such as list view items, the coordinates of the object's bounding rectangle can fail if tested System.Windows.Forms.AccessibleObject.HitTest(System.Int32, System.Int32) because System.Windows.Forms.AccessibleObject.HitTest(System.Int32, System.Int32) determines the object's boundaries on a pixel-by-pixel basis.","c) DefaultAction","d) ToString","[C#] public virtual string DefaultAction {get;}","[C++] public: _property virtual String* get DefaultAction( );","[VB] Overridable Public ReadOnly Property DefaultAction As String","[JScript] public function get DefaultAction( ): String;","Description","Gets a string that describes the object's default action. Not all objects have a default action.","The string describes the action that is performed on an object, not what the object does as a result. That is, a toolbar button that prints a document has a default action of \u201cPress\u201d rather than \u201cPrints the current document.\u201d Do not confuse an object's default action with its value.","e) Description","f) ToString","[C#] public virtual string Description {get;}","[C++] public: _property virtual String* get_Description( );","[VB] Overridable Public ReadOnly Property Description As String","[JScript] public function get Description( ): String;","Description","Gets a string that describes the visual appearance of the specified object. Not all objects have a description.","This property describes the object's visual appearance to the user.","g) Help","h) ToString","[C#] public virtual string Help {get;}","[C++] public: _property virtual String* get_Help( );","[VB] Overridable Public ReadOnly Property Help As String","[JScript] public function get Help( ): String;","Description","Gets a description of what the object does or how the object is used.","Not all objects need to support this property. Typically, this property contains balloon-style information (as is found in ToolTips) that is used either to describe what the object does or how to use it. For example, the Help property for a toolbar button that shows a printer might be, \u201cPrints the current document.\u201d The text for the Help property does not have to be unique within the user interface. Servers do not need to support the Help property if other properties provide sufficient information about the object's purpose and what actions the object might perform. Accessible objects that expose system-provided controls do not support the Help property.","i) KeyboardShortcut","j) ToString","[C#] public virtual string KeyboardShortcut {get;}","[C++] public: _property virtual String* get_KeyboardShortcut( );","[VB] Overridable Public ReadOnly Property KeyboardShortcut As String","[JScript] public function get KeyboardShortcut( ): String;","Description","Gets the shortcut key or access key for the accessible object.","An access key, also known as a mnemonic, is an underlined character in the text of a menu, menu item, or the label of a button, or some other control. For example, a user can display a menu by pressing the ALT key while also pressing the indicated underlined key, such as ALT+F to open the File menu. To use the access key of a menu item, the menu containing the item must be active.Controls such as toolbar buttons and menu items often have an associated shortcut key (also known as a keyboard accelerator). A menu item can have both an access key and a shortcut key associated with it. If this property returns a single character, you can assume it is an access key.","k) Name","l) ToString","[C#] public virtual string Name {get; set;}","[C++] public: _property virtual String* get_Name( ); public: _property virtual void set_Name(String*);","[VB] Overridable Public Property Name As String","[JScript] public function get Name( ): String; public function set Name(String);","Description","Gets or sets the object name.","The System.Windows.Forms.AccessibleObject.Name property is a string used by clients to identify, find, or announce an object for the user. To acces the name of a child object, you must first call System.Windows.Forms.AccessibleObject.GetChild(System.Int32) with the index of the child whose name you are retrieving.","m) Parent","n) ToString","[C#] public virtual AccessibleObject Parent {get;}","[C++] public: _property virtual AccessibleObject* get_Parent( );","[VB] Overridable Public ReadOnly Property Parent As AccessibleObject","[JScript] public function get Parent( ): AccessibleObject;","Description","Gets the parent of an accessible object.","All objects should support this property.","o) Role","p) ToString","[C#] public virtual AccessibleRole Role {get;}","[C++] public: _property virtual AccessibleRole get_Role( );","[VB] Overridable Public ReadOnly Property Role As AccessibleRole","[JScript] public function get Role( ): AccessibleRole;","Description","Gets the role of this accessible object.","The role of the object helps decribe the function of the object.","q) State","r) ToString","[C#] public virtual AccessibleStates State {get;}","[C++] public: _property virtual AccessibleStates get_State( );","[VB] Overridable Public ReadOnly Property State As AccessibleStates","[JScript] public function get State( ): AccessibleStates;","Description","Gets the state of this accessible object.","All objects should support this property.","s) Value","t) ToString","[C#] public virtual string Value {get; set;}","[C++] public: _property virtual String* get_Value( ); public: Property virtual void set_Value(String*);","[VB] Overridable Public Property Value As String","[JScript] public function get Value( ): String; public function set Value(String);","Description","Gets or sets the value of an accessible object.","Typically, the System.Windows.Forms.AccessibleObject.Value property represents visual information contained by the object. Not all objects support the System.Windows.Forms.AccessibleObject.Value property.","u) IAccessible.accDoDefaultAction","[C#] void IAccessible.accDoDefaultAction(object childID);","[C++] void IAccessible: accDoDefaultAction(Object* childID);","[VB] Sub accDoDefaultAction(ByVal childID As Object) Implements IAccessible.accDoDefaultAction","[JScript] function IAccessible.accDoDefaultAction(childID: Object);","v) IAccessible.accHitTest","[C#] object IAccessible.accHitTest(int xLeft, int yTop);","[C++] Object* IAccessible::accHitTest(int xLeft, int yTop);","[VB] Function accHitTest(ByVal xLeft As Integer, ByVal yTop As Integer) As Object Implements IAccessible.accHitTest","[JScript] function IAccessible.accHitTest(xLeft: int, yTop: int): Object;","w) IAccessible.accLocation","[C#] void IAccessible.accLocation(out int pxLeft, out int pyTop, out int pcxWidth, out int pcyHeight, object childID);","[C++] void IAccessible::accLocation(int* pxLeft, int* pyTop, int* pcxWidth, int* pcyHeight, Object* childID);","[VB] Sub accLocation(ByRef pxLeft As Integer, ByRef pyTop As Integer, ByRef pcxWidth As Integer, ByRef pcyHeight As Integer, ByVal childID As Object) Implements IAccessible.accLocation","[JScript] function IAccessible.accLocation(pxLeft: int, pyTop int, pcxWidth int, pcyHeight: int, childID: Object);","x) IAccessible.accNavigate","[C#] object IAccessible.accNavigate(int navDir, object childID);","[C++] Object* IAccessible::accNavigate(int navDir, Object* childID);","[VB] Function accNavigate(ByVal navDir As Integer, ByVal childID As Object) As Object Implements IAccessible.accNavigate","[JScript] function IAccessible.accNavigate(navDir: int, childID: Object): Object;","y) IAccessible.accSelect","[C#] void IAccessible.accSelect(int flagsSelect, object childID);","[C++] void IAccessible::accSelect(int flagsSelect, Object* childID);","[VB] Sub accSelect(ByVal flagsSelect As Integer, ByVal childID As Object) Implements IAccessible.accSelect","[JScript] function IAccessible.accSelect(flagsSelect: int, childID Object);","z) IAccessible.get_accChild","[C#] object IAccessible.get_accChild(object childID);","[C++] Object* IAccessible::get_accChild(Object* childID);","[VB] Function get_accChild(ByVal childID As Object) As Object Implements IAccessible.get_accChild","[JScript] function IAccessible.get_accChild(childID: Object): Object;","aa) IAccessible.get_accDefaultAction","[C#] string IAccessible.get_accDefaultAction(object childID);","[C++] String* IAccessible::get_accDefaultAction(Object* childID);","[VB] Function get_accDefaultAction(ByVal childID As Object) As String Implements IAccessible.get_accDefaultAction","[JScript] function IAccessible.get_accDefaultAction(childID: Object): String;","bb) IAccessible.get_accDescription","[C#] string IAccessible.get_accDescription(object childID);","[C++] String* IAccessible::get_accDescription(Object* childID);","[VB] Function get_accDescription(ByVal childID As Object) As String Implements IAccessible.get_accDescription","[JScript] function IAccessible.get_accDescription(childID: Object): String;","cc) IAccessible.get_accHelp","[C#] string IAccessible.get_accHelp(object childID);","[C++] String* IAccessible::get_accHelp(Object* childID);","[VB] Function get_accHelp(ByVal childID As Object) As String Implements IAccessible.get_accHelp","[JScript] function IAccessible.get_accHelp(childID: Object): String;","dd) IAccessible.get_accHelpTopic","[C#] int IAccessible.get_accHelpTopic(out string pszHelpFile, object childID);","[C++] int IAccessible::get_accHelpTopic(String** pszHelpFile, Object* childID);","[VB] Function get_accHelpTopic(ByRef pszHelpFile As String, ByVal childID As Object) As Integer Implements IAccessible.get_accHelpTopic","[JScript] function IAccessible.get_accHelpTopic(pszHelpFile: String, childID: Object): int;","ee) IAccessible.get_accKeyboardShortcut","[C++] string IAccessible.get_accKeyboardShortcut(object childID);","[C++] String* Iaccessible::get_accKeyboardhortcut(Object* childID);","[VB] Function get_accKeyboardShortcut(ByVal childID As Object) As String Implements IAccessible.get_accKeyboardShortcut","[JScript] function IAccessible.get_accKeyboardShortcut(childID: Object): String;","ff) IAccessible.get_accName","[C#] string IAccessible.get_accName(object childID);","[C++] String* IAccessible::get_accName(Object* childID);","[VB] Function get_accName(ByVal childID As Object) As String Implements IAccessible.get_accName","[JScript] function IAccessible.get_accName(childID: Object): String;","gg) IAccessible.get_accRole","[C#] object IAccessible.get_accRole(object childID);","[C++] Object* IAccessible::get_accRole(Object* childID);","[VB] Function get_accRole(ByVal childID As Object) As Object Implements IAccessible.get_accRole","[JScript] function IAccessible.get_accRole(childID: Object): Object;","hh) IAccessible.get_accState","[C#] object IAccessible.get_accState(object childID);","[C++] Object* IAccessible::get_accState(Object* childID);","[VB] Function get_accState(ByVal childID As Object) As Object Implements IAccessible.get_accState","[JScript] function IAccessible.get_accState(childID: Object): Object;","ii) IAccessible.get_accValue","[C#] string IAccessible.get_accValue(object childID);","[C++] String* IAccessible::get_accValue(Object* childID);","[VB] Function get_accValue(ByVal childID As Object) As String Implements IAccessible.get_accValue","[JScript] function IAccessible.get_accValue(childID: Object): String;","jj) IAccessible.set_accName","[C#] void IAccessible.set_accName(object childID, string newName);","[C++] void IAccessible::set_accName(Object* childID, String* newName);","[VB] Sub set_accName(ByVal childID As Object, ByVal newName As String) Implements IAccessible.set_accName","[JScript] function IAccessible.set_accName(childID: Object, newName: String);","kk) IAccessible.set_accValue","[C#] void IAccessible.set_accValue(object childID, string newValue);","[C++] void IAccessible::set_accValue(Object* childID, String* newValue);","[VB] Sub set_accValue(ByVal childID As Object, ByVal newValue As String) Implements IAccessible.set_accValue","[JScript] function IAccessible.set_accValue(childID: Object, newValue: String);","ll) DoDefaultAction","[C#] public virtual void DoDefaultAction( );","[C++] public: virtual void DoDefaultAction( );","[VB] Overridable Public Sub DoDefaultAction( )","[JScript] public function DoDefaultAction( );","Description","Performs the default action associated with this accessible object.","Clients can retrieve the object's default action by inspecting an objects DeafaultAction property. A client could use Automation (if supported) instead of DoDefaultAction to perform an object's default action. However, DoDefaultAction provides an easy way to perform an object's most commonly used action.","mm) GetChild","[C#] public virtual AccessibleObject GetChild(int index);","[C++] public: virtual AccessibleObject* GetChild(int index);","[VB] Overridable Public Function GetChild(ByVal index As Integer) As AccessibleObject","[JScript] public function GetChild(index: int): AccessibleObject;","Description","Retrieves the accessible child corresponding to the specified index.","Return Value: An System.Windows.Forms.AccessibleObject that represents the accessible child corresponding to the specified index.","All accessible objects must support this property. If the method is not overriden, it returns null. Override this method when an accessible object wants to provide custom accessible children. If the index is invalid, then this method should return null. When you override this method, you must also override System.Windows.Forms.AccessibleObject.GetChildCount. The zero-based index of the accessible child.","nn) GetChildCount","[C#] public virtual int GetChildCount( );","[C++] public: virtual int GetChildCount( );","[VB] Overridable Public Function GetChildCount( ) As Integer","[JScript] public function GetChildCount( ): int;","Description","Retrieves the number of children belonging to an accessible object.","Return Value: The number of children belonging to an accessible object.","All objects must support this property. The default implentation returns \u22121. Override this method when an accessible object wants to provide custom accessible children. When you override this method, you must also override System.Windows.Forms.AccessibleObject.GetChild(System.Int32).","oo) GetFocused","[C#] public virtual AccessibleObject GetFocused( );","[C++] public: virtual AccessibleObject* GetFocused( );","[VB] Overridable Public Function GetFocused( ) As AccessibleObject","[JScript] public function GetFocused( ): AccessibleObject;","Description","Retrieve the object that has the keyboard focus.","Return Value: An System.Windows.Forms.AccessibleObject that specifies the currently focused child. This method returns the calling object if the object itself is focused. Returns null if no object has focus.","The concept of keyboard focus is related to that of an active window. An active window is the foreground window on which the user is working. The object with the keyboard focus is either the active window or a child object of the active window.","pp) GetHelpTopic","[C#] public virtual int GetHelpTopic(out string fileName);","[C++] public: virtual int GetHelpTopic(String** fileName);","[VB] Overridable Public Function GetHelpTopic(ByRef filename As String) As Integer","[JScript] public function GetHelpTopic(fileName: String): int;","Description","Gets an identifier for a Help topic and the path to the Help file associated with this accessible object.","Return Value: An identifier for a Help topic, or \u22121 if here is no Help topic. On return, the fileName parameter will contain the path to the Help file associated with this accessible object.","Pass the identifier to the WinHelp file specified by the fileName parameter to identify the desired Help topic. On return, this will contain the path to the Help file associated with this accessible object.","qq) GetSelected","[C#] public virtual AccessibleObject GetSelected( );","[C++] public: virtual AccessibleObject* GetSelected( );","[VB] Overridable Public Function GetSelected( ) As AccessibleObject","[JScript] public function GetSelected( ): AccessibleObject;","Description","Retrieves the currently selected child.","Return Value: An System.Windows.Forms.AccessibleObject that represents the currently selected child. This method returns the calling object if the object itself is selected. Returns null if there is no currently selected child and the object itself does not have focus.\n\nAll objects that can be selected should support this property.\n","rr) HitTest","[C#] public virtual AccessibleObject HitTest(int x, int y);","[C++] public: virtual AccessibleObject* HitTest(int x, int y);","[VB] Overridable Public Function HitTest(ByVal x As Integer, ByVal y As Integer) As AccessibleObject","[JScript] public function HitTest(x: int, y: int): AccessibleObject;","Description","Retrieves the child object at the specified screen coordinates.","Return Value: An System.Windows.Forms.AccessibleObject that represents the child object at the given screen coordinates. This method returns the calling object if the object itself is at the location specified. Returns null if there is no object is at the hit tested location.\n\nFor non-rectangular objects such as list view items, the coordinates of the object's bounding rectangle retrieved by System.Windows.Forms.AccessibleObject.Bounds can fail if tested with System.Windows. Forms.AccessibleObject. H itTest(System.Int32, System.Int32) because System.Windows.Forms.AccessibleObject.HitTest(System.Int32, System.Int32) determines the object's boundaries on a pixel-by-pixel basis. The horizontal screen coordinate. The vertical screen coordinate.\n","ss) Navigate","[C#] public virtual AccessibleObject Navigate(AccessibleNavigation navdir);","[C++] public: virtual AccessibleObject* Navigate(AccessibleNavigation navdir);","[VB] Overridable Public Function Navigate(ByVal navdir As AccessibleNavigation) As AccessibleObject","[JScript] public function Navigate(navdir: AccessibleNavigation): IAccessibleObject;","Description","Navigates to another accessible object.","Return Value: An System.Windows.Forms.AccessibleObject that represents one of the System.Windows.Forms.AccessibleNavigation values.","Navigation (both spatial and logical) is always restricted to the user interface elements within a container. With spatial navigation, clients can navigate only to a sibling of the starting object. Depending on the navigational flag used with logical navigation, clients can navigate to either a child or to a sibling of the starting object. This method does not change the selection or focus. To change the focus or to select an object, use System.Windows.Forms.AccessibleObject.Select(System.Windows.Forms.AccessibleSelection). The System.Windows.Forms.AccessibleObject.Navigate(System.Windows.Forms.AccessibleNavigation) method retrieves only user interface elements that have a defined screen location. One of the System.Windows.Forms.AccessibleNavigation values.","tt) Select","[C#] public virtual void Select(AccessibleSelection flags);","[C++] public: virtual void Select(AccessibleSelection flags);","[VB] Overridable Public Sub Select(ByVal flags As AccessibleSelection)","[JScript] public function Select(flags: AccessibleSelection);","Description","Modifies the selection or moves the keyboard focus of the accessible object.","Applications can use this method to perform complex selection operations. One of the System.Windows.Forms.AccessibleSelection values.","uu) IReflect.GetField","[C#] FieldInfo IReflect.GetField(string name, BindingFlags bindingAttr);","[C++] FieldInfo* IReflect::GetField(String* name, BindingFlags bindingAttr);","[VB] Function GetField(ByVal name As String, ByVal bindingAttr As BindingFlags) As FieldInfo Implements IReflect.GetField","[JScript] function IReflect.GetField(name: String, bindingAttr: BindingFlags) FieldInfo;","vv) IReflect.GetFields","[C#] FieldInfo[ ] IReflect.GetFields(BindingFlags bindingattr);","[C++] FieldInfo* IReflect::GetFields(BindingFlags bindingAtt) [ ];","[VB] Function GetFields(ByVal bindingAttr As BindingFlags) As FieldInfo( ) Implements IReflect.GetFields","[JScript] function IReflect.GetFields(bindingAttr: BindingFlags): FieldInfo[ ];","ww) IReflect.GetMember","[C#] MemberInfo[ ] IReflect.GetMember(string name, BindingFlags bindingAttr);","[C++] MemberInfo* IReflect::GetMember(String* name, BindingFlags bindingAttr) [ ];","[VB] Function GetMember(ByVal name As String, ByVal bindingAttr As BindingFlags) As MemberInfo( ) Implements IReflect.GetMember","[JScript] function IReflect.GetMember(name: String, bindingAttr: BindingFlags): MemberInfo[ ];","xx) IReflect.GetMembers","[C#] MemberInfo[ ] IReflect.GetMembers(BindingFlags bindingAttr);","[C++] MemberInfo* IReflect::GetMembers(BindingFlags bindingAttr)[ ]","[VB] Function GetMembers(ByVal bindingAttr As BindingFlags) As MemberInfo( ) Implements IReflect.GetMembers","[JScript] function IReflect.GetMembers(bindingAttr: BindingFlags) MemberInfo[ ];","yy) IReflect.GetMethod","[C#] MethodInfo IReflect.GetMethod(string name, BindingFlags bindingAr);","[C+#] MethodInfo* IReflect::GetMethod(String* name, BindingFlags bindingAttr);","[VB] Function GetMethod(ByVal name As String, ByVal bindingAttr As BindingFlags) As MethodInfo Implements IReflect.GetMethod","[JScript] function IReflect.GetMethod(name: String, bindingAttr: BindingFlags): MethodInfo;","zz) IReflect.GetMethod","[C#] MethodInfo IReflect.GetMethod(string name, BindingFlags bindingAttr, Binder binder, Type[ ] types, ParameterModifier[ ] modifiers);","[C++] MethodInfo* IReflect::GetMethod(String* name, BindingFlags bindingAttr, Binder* binder, Type* types[ ], ParameterModifier modifiers[ ]);","[VB] Function GetMethod(ByVal name As String, ByVal bindingAttr As BindingFlags, ByVal binder As Binder, ByVal types( ) As Type, ByVal modifiers( ) As ParameterModifier) As MethodInfo Implements IReflect.GetMethod","[JScript] function IReflect.GetMethod(name: String, bindingAttr: BindingFlags, binder: Binder, types: Type[ ], modifiers: ParameterModifier[ ]): MethodInfo;","aaa) IReflect.GetMethods","[C#] MethodInfo[ ] IReflect.GetMethods(BindingFlags bindingAttr);","[C++] MethodInfo* IRe flect::GetMethods(BindingFlags bindingAttr) [ ];","[VB] Function GetMethods(ByVal bindingAttr As BindingFlags) As MethodInfo( ) Implements IReflect.GetMethods","[JScript] function IReflect.GetMethods(bindingAttr: BindingFlags): MethodInfo[ ];","bbb) IReflect.GetProperties","[C#] PropertyInfo[ ] IReflect.GetProperties(BindingFlags bindingAttr);","[C++] PropertyInfo* IReflect::GetProperties(BindingFlags bindingAttr)[ ]","[VB] Function GetProperties(ByVal bindingAttr As BindingFlags) As PropertyInfo( ) Implements IReflect.GetProperties","[JScript] function IReflect.GetProperties(bindingAttr: BindingFlags): PropertyInfo[ ];","ccc) IReflect.GetProperty","[C#] PropertyInfo IReflect.GetProperty(string name, BindingFlags bindingAttr);","[C++] PropertyInfo* IReflect::GetProperty (String* name, BindingFlags bindingAttr);","[VB] Function GetProperty(ByVal name As String, ByVal bindingAttr As BindingFlags) As PropertyInfo Implements IReflect.GetProperty","[JScript] function IReflect.GetProperty(name: String, bindingAttr: BindingFlags): PropertyInfo;","ddd) IRefleet.GetProperty","[C#] PropertyInfo IReflect.GetProperty(string name, BindingFlags bindingAttr, Binder binder, Type returnType, Type[ ] types, ParameterModifier[ ] modifiers);","[C++] PropertyInfo* IReflect::GetProperty(String* name, BindingFlags bindingAttr, Binder* binder, Type* returnType, Type* types[ ], ParameterModifier modifiers[ ]);","[VB] Function GetProperty(ByVal name As String, ByVal bindingAttr As BindingFlags, ByVal binder As Binder, ByVal returnType As Type, ByVal types( ) As Type, ByVal modifiers( ) As ParameterModifier) As PropertyInfo Implements IReflect.GetProperty","[JScript] function IReflect.GetProperty(name: String, bindingAttr: BindingFlags, binder: Binder, returnType: Type, types: Type[ ], modifiers: ParameterModifier[ ]): PropertyInfo;","eee) IReflect.InvokeMember","[C#] object IReflect.InvokeMember(string name, BindingFlags invokeAttr, Binder binder, object target, object[ ] args, ParameterModifier[ ] modifiers, CultureInfo culture, string[ ] namedParameters);","[C++] Object* IReflect::InvokeMember(String* name, BindingFlags invokeAttr, Binder* binder, Object* target, Object* args _gc[ ], ParameterModifier modifiers[ ], CultureInfo* culture, String* namedParameters _gc[ ]);","[VB] Function InvokeMember(ByVal name As String, ByVal invokeAttr As BindingFlags, ByVal binder As Binder, ByVal target As Object, ByVal args( ) As Object, ByVal modifiers( ) As ParameterModifier, ByVal culture As CultureInfo, ByVal namedParameters( ) As String) As Object Implements IReflect.InvokeMember\n\n[JScript] function IReflect.InvokeMember(name: String, invokeAttr: BindingFlags, binder: Binder, target: Object, args: Object[ ], modifiers: ParameterModifier[ ], culture: CultureInfo, namedParameters: String[ ]): Object;\n","fff) UnsafeNativeMethods.IEnum Variant.Clone","[C#] void UnsafeNativeMethods.IEnumVariant.Clone(UnsafeNativeMethods.IEnumVariant [ ] v);","[C++] void UnsafeNativeMethods::IEnumVariant::Clone(UnsafeNativeMethods.IEnumVaria nt* v[ ]);","[VB] Sub IEnumVariant.Clone(ByVal v( ) As UnsafeNativeMethods.IEnumVariant) Implements UnsafeNativeMethods.IEnumVariant.Clone","[JScript] function UnsafeNativeMethods.IEnumVariant.Clone(v UnsafeNativeMethods.IEnumVariant[ ]);","ggg) UnsafeNativeMethods.IEnumVariant.Next","[C#] int UnsafeNativeMethods.IEnumVariant.Next(int n, IntPtr rgvar, int[ ] ns);","[C++] int UnsafeNativeMethods::IEnumVariant::Next(int n, IntPtr rgvar, int ns _gc[ ]);","[VB] Function IEnumVariant.Next(ByVal n As Integer, ByVal rgvar As IntPtr, ByVal ns( ) As Integer) As Integer Implements UnsafeNativeMethods.IEnumVariant.Next","[JScript] function UnsafeNativeMethods.IEnumVariant.Next(n: int, rgvar: IntPtr, ns: int[ ]): int;","hhh) UnsafeNativeMethods.IEnum Variant.Reset","[C#] void UnsafeNativeMethods.IEnumVariant.Reset( );","[C++] void UnsafeNativeMethods::IEnumVariant::Reset( );","[VB] Sub IEnumVariant.Reset( ) Implements UnsafeNativeMethods.IEnumVariant.Reset","[JScript] function UnsafeNativeMethods.IEnumVariant.Reset( );","iii) UnsafeNativeMethods.IEnumVariant.Skip","[C#] void UnsafeNativeMethods::IEnumVariant::Skip(int n);","[C++] void UnsafeNativeMethods::IEnumVariant:: Skip(int n);","[VB] Sub IEnumVariant.Skip(ByVal n As Integer) Implements UnsafeNativeMethods.IEnumVariant.Skip","[JScript] function UnsafeNativeMethods.IEnumVariant.Skip(n: int);","jjj) UseStdAccessibleObjects","[C#] protected void UseStdAccessibleObjects(IntPtr handle);","[C++] protected: void UseStdAccessibleObjects(IntPtr handle);","[VB] Protected Sub UseStdAccessibleObjects(ByVal handle As IntPtr)","[JScript] protected function UseStdAccessibleObjects(handle: IntPtr); Associates an object with an an instance of an System.Windows.Forms.AccessibleObject","Description","Associates an object with an an instance of an System.Windows.Forms.AccessibleObject based on the handle of the object.","Server applications can call this function when they contain a custom UI object that is similar to a system-provided object. Server applications call CreateStdAccessibleObject and override the IAccessible methods and properties as needed to match their custom object. This approach saves server developers the work of fully implementing all the IAccessible properties and methods. This function is similar to CreateStdAccessibleProxy, except that CreateStdAccessibleProxy allows you to specify the class name as a parameter whereas CreateStdAccessibleObject uses the class name associated with the hwnd. An System.IntPtr that contains the handle of the object.","kkk) UseStdAccessibleObjects","[C#] protected void UseStdAccessibleObjects(IntPtr handle, int objid);","[C++] protected: void UseStdAccessibleObjects(IntPtr handle, int objid);","[VB] Protected Sub UseStdAccessibleObjects(ByVal handle As IntPtr, ByVal objid As Integer)","[JScript] protected function UseStdAccessibleObjects(handle: IntPtr, objid: int);","Description","Associates an object with an an instance of an System.Windows.Forms.AccessibleObject based on the handle and the object id of the object.","Server applications can call this function when they contain a custom UI object that is similar to a system-provided object. Server applications call CreateStdAccessibleObject and override the IAccessible methods and properties as needed to match their custom object. This approach saves server developers the work of fully implementing all the IAccessible properties and methods. An System.IntPtr that contains the handle of the object. An Int that defines the type of object that the handle parameter refers to.","AccessibleRole Enumeration (System.Windows.Forms)","a) UseStdAccessibleObjects","Description","Specifies values representing possible roles for an accessible object.","The role of the object is used to determine the actions taken by the accesible application to make the accessible.","b) UseStdAccessibleObjects","[C#] public const AccessibleRole Alert;","[C++] public: const AccessibleRole Alert;","[VB] Public Const Alert As AccessibleRole","[JScript] public var Alert: AccessibleRole;","Description","An alert or condition that a user should be notified about. This role should be used only for objects that embody an alert but are not associated with another user interface element, such as a message box, graphic, text, or sound.","c) UseStdAccessibleObjects","[C#] public const AccessibleRole Animation;","[C++] public: const AccessibleRole Animation;","[VB] Public Const Animation As AccessibleRole","[JScript] public var Animation: AccessibleRole;","Description","An animation control, which contains content that is changing over time, such as a control that displays a series of bitmap frames, like a film strip. Animation controls are usually displayed when files are being copied, or when some other time-consuming task is being performed.","d) UseStdAccessibleObjects","[C#] public const AccessibleRole Application;","[C++] public: const AccessibleRole Application;","[VB] Public Const Application As AccessibleRole","[JScript] public var Application: AccessibleRole;","Description","The main window for an application.","e) UseStdAccessibleObjects","[C#] public const AccessibleRole Border;","[C++] public: const AccessibleRole Border;","[VB] Public Const Border As AccessibleRole","[JScript] public var Border: AccessibleRole;","Description","A window border. The entire border is represented by a single object, rather than by separate objects for each side.","f) UseStdAccessibleObjects","[C#] public const AccessibleRole ButtonDropDown;","[C++] public: const AccessibleRole ButtonDropDown;","[VB] Public Const ButtonDropDown As AccessibleRole","[JScript] public var ButtonDropDown: AccessibleRole;","Description","A button that drops down a list of items.","g) UseStdAccessibleObjects","[C#] public const AccessibleRole ButtonDropDownGrid;","[C++] public: const AccessibleRole ButtonDropDownGrid;","[VB] Public Const ButtonDropDownGrid As AccessibleRole","[JScript] public var ButtonDropDownGrid: AccessibleRole;","Description","A button that drops down a grid.","h) UseStdAccessibleObjects","[C#] public const AccessibleRole ButtonMenu;","[C++] public: const AccessibleRole ButtonMenu;","[VB] Public Const ButtonMenu As AccessibleRole","[JScript] public var ButtonMenu: AccessibleRole;","Description","A button that drops down a menu.","i) UseStdAccessibleObjects","[C#] public const AccessibleRole Caret;","[C++] public: const AccessibleRole Caret;","[VB] Public Const Caret As AccessibleRole","[JScript] public var Caret: AccessibleRole;","Description","A caret, which is a flashing line, block, or bitmap that marks the location of the insertion point in a window's client area.","j) UseStdAecessibleObjects","[C#] public const AccessibleRole Cell;","[C++] public: const AccessibleRole Cell;","[VB] Public Const Cell As AccessibleRole","[JScript] public var Cell: AccessibleRole;","Description","A cell within a table.","k) UseStdAccessibleObjects","[C#] public const AccessibleRole Character;","[C++] public: const AccessibleRole Character;","[VB] Public Const Character As AccessibleRole","[JScript] public var Character: AccessibleRole;","Description","A cartoon-like graphic object, such as Microsoft Office Assistant, which is typically displayed to provide help to users of an application.","l) UseStdAccessibleObjects","[C#] public const AccessibleRole Chart;","[C++] public: const AccessibleRole Chart;","[VB] Public Const Chart As AccessibleRole","[JScript] public var Chart: AccessibleRole;","Description","A graphical image used to represent data.","m) UseStdAccessibleObjects","[C#] public const AccessibleRole CheckButton;","[C++] public: const AccessibleRole CheckButton;","[VB] Public Const CheckButton As AccessibleRole","[JScript] public var CheckButton: AccessibleRole;","Description","A check box control, which is an option that can be turned on or off independently of other options.","n) UseStdAccessibleObjeets","[C#] public const AccessibleRole Client;","[C++] public: const AccessibleRole Client;","[VB] Public Const Client As AccessibleRole","[JScript] public var Client: AccessibleRole;","Description","A window's user area.","o) UseStdAccessibleObjects","[C#] public const AccessibleRole Clock;","[C++] public: const AccessibleRole Clock;","[VB] Public Const Clock As AccessibleRole","[JScript] public var Clock: AccessibleRole;","Description","A control that displays the time.","p) UseStdAccessibleObjects","[C#] public const AccessibleRole Column;","[C++] public: const AccessibleRole Column;","[VB] Public Const Column As AccessibleRole","[JScript] public var Column AccessibleRole;","Description","A column of cells within a table.","q) UseStdAccessibleObjects","[C#] public const AccessibleRole ColumnHeader;","[C++] public: const AccessibleRole ColumnHeader;","[VB] Public Const ColumnHeader As AccessibleRole","[JScript] public var ColumnHeader: AccessibleRole;","Description","A column header, which provides a visual label for a column in a table.","r) UseStdAccessibleObjects","[C#] public const AccessibleRole ComboBox;","[C++] public: const AccessibleRole ComboBox;","[VB] Public Const ComboBox As AccessibleRole","[JScript] public var ComboBox: AccessibleRole;","Description","A combo box, which is an edit control with an associated list box that provides a set of predefined choices.","s) UseStdAccessibleObjects","[C#] public const AccessibleRole Cursor;","[C++] public: const AccessibleRole Cursor;","[VB] Public Const Cursor As AccessibleRole","[JScript] public var Cursor: AccessibleRole;","Description","A mouse pointer.","t) UseStdAccessibleObjects","[C#] public const AccessibleRole Default;","[C++] public: const AccessibleRole Default;","[VB] Public Const Default As AccessibleRole","[JScript] public var Default: AccessibleRole;","Description","A system provided role.","u) UseStdAccessibleObjects","[C#] public const AccessibleRole Diagram;","[C++] public: const AccessibleRole Diagram;","[VB] Public Const Diagram As AccessibleRole","[JScript] public var Diagram: AccessibleRole;","Description","A graphical image used to diagram data.","v) UseStdAccessibleObjects","[C#] public const AccessibleRole Dial;","[C++] public: const AccessibleRole Dial;","[VB] Public Const Dial As AccessibleRole","[JScript] public var Dial: AccessibleRole;","Description","A dial or knob. This can also be a read-only object, like a speedometer.","w) UseStdAccessibleObjects","[C#] public const AccessibleRole Dialog;","[C++] public: const AccessibleRole Dialog;","[VB] Public Const Dialog As AccessibleRole","[JScript] public var Dialog: AccessibleRole;","Description","A dialog box or message box.","x) UseStdAccessibleObjects","[C#] public const AccessibleRole Document;","[C++] public: const AccessibleRole Document;","[VB] Public Const Document As AccessibleRole","[JScript] public var Document: AccessibleRole;","Description","A document window, which is always contained within an application window. This role applies only to multiple document interface (MDI) windows and refers to an object that contains the MDI title bar.","y) UseStdAccessibleObjects","[C#] public const AccessibleRole DropList;","[C++] public: const AccessibleRole DropList;","[VB] Public Const DropList As AccessibleRole","[JScript] public var DropList: AccessibleRole;","Description","A drop-down list box. This control shows one item and allows the user to display and select another from a list of alternative choices.","z) UseStdAccessibleObjects","[C#] public const AccessibleRole Equation;","[C++] public: const AccessibleRole Equation;","[VB] Public Const Equation As AccessibleRole","[JScript] public var Equation AccessibleRole;","Description","A mathematical equation.","aa) UseStdAccessibleObjects","[C#] public const AccessibleRole Graphic;","[C++] public: const AccessibleRole Graphic;","[VB] Public Const Graphic As AccessibleRole","[JScript] public var Graphic: AccessibleRole;","Description","A picture.","bb) UseStdAccessibleObjects","[C#] public const AccessibleRole Grip;","[C++] public: const AccessibleRole Grip;","[VB] Public Const Grip As AccessibleRole","[JScript] public var Grip: AccessibleRole;","Description","A special mouse pointer, which allows a user to manipulate user interface elements such as a window. For example, a user can click and drag a sizing grip in the lower-right corner of a window to resize it.","cc) UseStdAccessibleObjects","[C#] public const AccessibleRole Grouping;","[C++] public: const AccessibleRole Grouping;","[VB] Public Const Grouping As AccessibleRole","[JScript] public var Grouping: AccessibleRole;","Description","Objects grouped in a logical manner. There can be a parent-child relationship between the grouping object and the objects it contains.","dd) UseStdAccessibleObjects","[C#] public const AccessibleRole HelpBalloon;","[C++] public: const AccessibleRole HelpBalloon;","[VB] Public Const HelpBalloon As AccessibleRole","[JScript] public var HelpBalloon: AccessibleRole;","Description","A Help display in the form of a ToolTip or Help balloon, which contains buttons and labels that users can click to open custom Help topics.","ee) UseStdAccessibleObjects","[C#] public const AccessibleRole HotkeyField;","[C++] public: const AccessibleRole HotkeyField;","[VB] Public Const HotkeyField As AccessibleRole","[JScript] public var HotkeyField: AccessibleRole;","Description","A hot-key field that allows the user to enter a combination or sequence of keystrokes to be used as a hot key, which enables users to perform an action quickly. A hot-key control displays the keystrokes entered by the user and ensures that the user selects a valid key combination.","ff) UseStdA ccessibleObjects","[C#] public const AccessibleRole Indicator;","[C++] public: const AccessibleRole Indicator;","[VB] Public Const Indicator As AccessibleRole","[JScript] public var Indicator AccessibleRole;","Description","An indicator, such as a pointer graphic, that points to the current item.","gg) UseStdAccessibleObjects","[C#] public const AccessibleRole Link;","[C++] public: const AccessibleRole Link;","[VB] Public Const Link As AccessibleRole","[JScript] public var Link: AccessibleRole;","Description","A link, which is a connection between a source document and a destination document. This object might look like text or a graphic, but it acts like a button.","hh) UseStdAccessibleObjects","[C#] public const AccessibleRole List;","[C++] public: const AccessibleRole List;","[VB] Public Const List As AccessibleRole","[JScript] public var List: AccessibleRole;","Description","A list box, which allows the user to select one or more items.","ii) UseStdAccessibleObjects","[C#] public const AccessibleRole ListItem;","[C++] public: const AccessibleRole ListItem;","[VB] Public Const ListItem As AccessibleRole","[JScript] public var ListItem AccessibleRole;","Description","An item in a list box or the list portion of a combo box, drop-down list box, or drop-down combo box.","jj) UseStdAccessibleObjects","[C#] public const AccessibleRole MenuBar;","[C++] public: const AccessibleRole MenuBar;","[VB] Public Const MenuBar As AccessibleRole","[JScript] public var MenuBar: AccessibleRole;","Description","A menu bar, usually beneath the title bar of a window, from which menus can be selected by the user.","kk) UseStdAccessibleObjects","[C#] public const AccessibleRole MenuItem;","[C++] public: const AccessibleRole MenuItem;","[VB] Public Const MenuItem As AccessibleRole","[JScript] public var MenuItem: AccessibleRole;","Description","A menu item, which is an entry in a menu that a user can choose to carry out a command, select an option, or display another menu. Functionally, a menu item can be equivalent to a push button, radio button, check box, or menu.","ll) UseStdAccessibleObjects","[C#] public const AccessibleRole MenuPopup;","[C++] public: const AccessibleRole MenuPopup;","[VB] Public Const MenuPopup As AccessibleRole","[JScript] public var MenuPopup: AccessibleRole;","Description","A menu, which presents a list of options from which the user can make a selection to perform an action. All menu types must have this role, including drop-down menus that are displayed by selection from a menu bar, and shortcut menus that are displayed when the right mouse button is clicked.","mm) UseStdAccessibleObjects","[C#] public const AccessibleRole None;","[C++] public: const AccessibleRole None;","[VB] Public Const None As AccessibleRole","[JScript] public var None AccessibleRole;","Description","No role.","nn) UseStdAccessibleObjects","[C#] public conast AccessibleRole Outline;","[C++] public: const AccessibleRole Outline;","[VB] Public Const Outline As AccessibleRole [JScript] public var Outline: AccessibleRole;","Description","An outline or tree structure, such as a tree view control, which displays a hierarchical list and usually allows the user to expand and collapse branches.","oo) UseStdAccessibleObjects","[C++] public: const AccessibleRole OutlineItem;","[C++] Public Const OutlineItem As AccessibleRole","[JScript] public var OutlineItem: AccessibleRole;","Description","An item in an outline or tree structure.","pp) UseStdAccessibleObjects","[C#] public const AccessibleRole PageTab;","[C++] public: const AccessibleRole PageTab;","[VB] Public Const PageTab As AccessibleRole","[JScript] public var PageTab: AccessibleRole;","Description","A property page that allows a user to view the attributes for a page, such as the page's title, whether it is a home page, or whether the page has been modified. Normally the only child of this control is a grouped object that contains the contents of the associated page.","qq) UseStdAccessibleObjects","[C#] public const AccessibleRole PageTabList;","[C++] public: const AccessibleRole PageTabList;","[VB] Public Const PageTabList As AccessibleRole","[JScript] public var PageTabList: AccessibleRole;","Description","A container of page tab controls.","rr) UseStdAccessibleObjects","[C#] public const AccessibleRole Pane;","[C++] public: const AccessibleRole Pane;","[VB] Public Const Pane As AccessibleRole","[JScript] public var Pane: AccessibleRole;","Description","One of the separate areas in a frame, a split document window, or a rectangular area of the status bar that can be used to display information. Users can navigate between panes and within the contents of the current pane, but cannot navigate between items in different panes. Thus, panes represent a level of grouping lower than frame windows or documents, but above individual controls. Typically the user navigates between panes by pressing TAB, F6, or CTRL+TAB, depending on the context.","ss) UseStdAccessibleObjects","[C#] public const AccessibleRole ProgressBar;","[C++] public: const AccessibleRole ProgressBar;","[VB] Public Const ProgressBar As AccessibleRole","[JScript] public var ProgressBar: AccessibleRole;","Description","A progress bar, which indicates the progress of a lengthy operation by displaying a colored bar inside a horizontal rectangle. The length of the bar in relation to the length of the rectangle corresponds to the percentage of the operation that is complete. This control does not take user input.","tt) UseStdAccessibleObjects","[C#] public const AccessibleRole PropertyPage;","[C++] public: const AccessibleRole PropertyPage;","[VB] Public Const PropertyPage As AccessibleRole","[JScript] public var PropertyPage: AccessibleRole;","Description","A property page, which is a dialog box that controls the appearance and the behavior of an object, such as a file or resource. A property page's appearance differs according to its purpose.","uu) UseStdAccessibleObjects","[C#] public const AccessibleRole PushButton;","[C++] public: const AccessibleRole PushButton;","[VB] Public Const PushButton As AccessibleRole","[JScript] public var PushButton: AccessibleRole;","Description","A push button control, which is a small rectangular control that a user can turn on or off. A push button, also known as a command button, has a raised appearance in its default off state and a sunken appearance when it is turned on.","vv) UseStdA ccessibleObjects","[C#] public const AccessibleRole RadioButton;","[C++] public: const AccessibleRole RadioButton;","[VB] Public Const RadioBuffon As AccessibleRole","[JScript] public var RadioButton: AccessibleRole;","Description","An option button, also known as a radio button. All objects sharing a single parent that have this attribute are assumed to be part of a single mutually exclusive group. You can use grouped objects to divide option buttons into separate groups when necessary.","ww) UseStdAccessibleObjects","[C#] public const AccessibleRole Row;","[C++] public: const AccessibleRole Row;","[VB] Public Const Row As AccessibleRole","[JScript] public var Row: AccessibleRole;","Description","A row of cells within a table.","xx) UseStdAccessibleObjects","[C#] public const AccessibleRole RowHeader;","[C++] public: const AccessibleRole RowHeader;","[VB] Public Const RowHeader As AccessibleRole","[JScript] public var RowHeader: AccessibleRole;","Description","A row header, which provides a visual label for a table row.","yy) UseStdAccessibleObjects","[C#] public const AccessibleRole ScrollBar;","[C++] public: const AccessibleRole ScrollBar;","[VB] Public Const ScrollBar As AccessibleRole","[JScript] public var ScrollBar: AccessibleRole;","Description","A vertical or horizontal scroll bar, which can be either part of the client area or used in a control.","zz) UseStdAccessibleObjects","[C#] public const AccessibleRole Separator;","[C++] public: const AccessibleRole Separator;","[VB] Public Const Separator As AccessibleRole","[JScript] public var Separator AccessibleRole;","Description","Visually divides a space into two regions, such as a separator menu item or a bar dividing split panes within a window.","aaa) UseStdAccessibleObjects","[C#] public const AccessibleRole Slider;","[C++] public: const AccessibleRole Slider;","[VB] Public Const Slider As AccessibleRole","[JScript] public var Slider: AccessibleRole;","Description","A control, sometimes called a trackbar, that allows a user to adjust a setting in given increments between minimum and maximum values by moving a slider. The volume controls in the Windows operating system are slider controls.","bbb) UseStdAccessibleObjects","[C#] public const AccessibleRole Sound;","[C++] public: const AccessibleRole Sound;","[VB] Public Const Sound As AccessibleRole","[JScript] public var Sound: AccessibleRole;","Description","A system sound, which is associated with various system events.","ccc) UseStdAccessibleObjects","[C#] public const AccessibleRole SpinButton;","[C++] public: const AccessibleRole SpinButton;","[VB] Public Const SpinButton As AccessibleRole","[JScript] public var SpinButton: AccessibleRole;","Description","A spin box, also known as an up-down control, which contains a pair of arrow buttons that a user click with a mouse to increment or decrement a value. A spin button control is most often used with a companion control, called a buddy window, where the current value is displayed.","ddd) UseStdAccessibleObjects","[C#] public const AccessibleRole StaticText;","[C++] public: const AccessibleRole StaticText;","[VB] Public Const StaticText As AccessibleRole","[JScript] public var StaticText: AccessibleRole;","Description","Read-only text, such as in a label, for other controls or instructions in a dialog box. Static text cannot be modified or selected.","eee) UseStdAccessibleObjects","[C#] public const AccessibleRole StatusBar;","[C++] public: const AccessibleRole StatusBar;","[VB] Public Const StatusBar As AccessibleRole","[JScript] public var StatusBar: AccessibleRole;","Description","A status bar, which is an area typically at the bottom of an application window that displays information about the current operation, state of the application, or selected object. The status bar can have multiple fields that display different kinds of information, such as an explanation of the currently selected menu command in the status bar.","fff) UseStdAccessibleObjects","[C#] public const AccessibleRole Table;","[C++] public: const AccessibleRole Table;","[VB] Public Const Table As AccessibleRole","[JScript] public var Table: AccessibleRole;","Description","A table containing rows and columns of cells, and optionally, row headers and column headers.","ggg) UseStdAccessibleObjects","[C#] public const AccessibleRole Text;","[C++] public: const AccessibleRole Text;","[VB] Public Const Text As AccessibleRole","[JScript] public var Text: AccessibleRole;","Description","Selectable text that can be editable or read-only.","hhh) UseStdAccessibleObjects","[C#] public const AccessibleRole TitleBar;","[C++] public: const AccessibleRole TitleBar;","[VB] Public Const TitleBar As AccessibleRole [JScript] public var TitleBar A AccessibleRole;","Description","A title or caption bar for a window.","iii) UseStdAccessibleObjects","[C#] public const AccessibleRole ToolBar;","[C++] public: const AccessibleRole ToolBar;","[VB] Public Const ToolBar As AccessibleRole","[JScript] public var ToolBar AccessibleRole;","Description","A toolbar, which is a grouping of controls that provide easy access to frequently used features.","jjj) UseStdAccessibleObjects","[C#] public const AccessibleRole ToolTip;","[C++] public: const AccessibleRole ToolTip;","[VB] Public Const ToolTip As AccessibleRole","[JScript] public var ToolTip: AccessibleRole;","Description","A tool tip, which is a small rectangular pop-up window that displays a brief description of a command bar button's purpose.","kkk) UseStdAccessibleObjects","[C#] public const AccessibleRole WhiteSpace;","[C++] public: const AccessibleRole WhiteSpace;","[VB] Public Const WhiteSpace As AccessibleRole","[JScript] public var WhiteSpace: AccessibleRole;","Description","A blank space between other objects.","lll) UseStdAccessibleObjects","[C++] public const AccessibleRole Window;","[C++] public: const AccessibleRole Window;","[VB] Public Const Window As AccessibleRole","[JScript] public var Window: AccessibleRole;","Description","A window frame, which usually contains child objects such as a title bar, client, and other objects typically contained in a window.","AccessibleSelection enumeration (System.Windows.Forms)","a) ToString","Description","Specifies how an accessible object is selected or receives focus.","A focused object is the one object that receives keyboard input. The object with the keyboard focus is either the active window or a child object of the active window. A selected object is marked to participate in some type of group operation.","b) ToString","[C#] public const AccessibleSelection AddSelection;","[C++] public: const AccessibleSelection AddSelection;","[VB] Public Const AddSelection As AccessibleSelection","[JScript] public var AddSelection: AccessibleSelection;","Description","Adds the object to the selection.","c) ToString","[C#] public const AccessibleSelection ExtendSelection;","[C++] public: const AccessibleSelection ExtendSelection;","[VB] Public Const ExtendSelection As AccessibleSelection","[JScript] public var ExtendSelection: AccessibleSelection;","Description","Selects all objects between the anchor and the selected object.","d) ToString","[C#] public const AccessibleSelection None;","[C++] public: const AccessibleSelection None;","[VB] Public Const None As AccessibleSelection","[JScript] public var None: AccessibleSelection;","Description","The selection or focus of an object is unchanged.","e) ToString","[C#] public const AccessibleSelection RemoveSelection;","[C++] public: const AccessibleSelection RemoveSelection;","[VB] Public Const RemoveSelection As AccessibleSelection","[JScript] public var RemoveSelection: AccessibleSelection;","Description","Removes the object from the selection.","f) ToString","[C#] public const AccessibleSelection TakeFocus;","[C++] public: const AccessibleSelection TakeFocus;","[VB] Public Const TakeFocus As AccessibleSelection","[JScript] public var TakeFocus: AccessibleSelection;","Description","Assigns focus to an object and makes it the anchor, which is the starting point for the selection. Can be combined with TakeSelection, ExtendSelection, AddSelection, or RemoveSelection.","g) ToString","[C#] public const AccessibleSelection TakeSelection;","[C++] public: const AccessibleSelection TakeSelection;","[VB] Public Const TakeSelection As AccessibleSelection","[JScript] public var TakeSelection: AccessibleSelection;","Description","Selects the object and deselects all other objects in the container.","AccessibleStates enumeration (System.Windows.Forms)","a) ToString","Description","Specifies values representing possible states for an accessible object.","An accessible object can be associated with one or more of these states.","b) ToString","[C#] public const AccessibleStates AlertHigh;","[C++] public: const AccessibleStates AlertHigh;","[VB] Public Const AlertHigh As AccessibleStates","[JScript] public var AlertHigh: AccessibleStates;","Description","Indicates important information that should be conveyed to the user immediately. For example, a battery level indicator reaching a critical low level would transition to this state, in which case a blind access utility would announce this information immediately to the user, and a screen magnification program would scroll the screen so that the battery indicator is in view. This state is also appropriate for any prompt or operation that must be completed before the user can continue.","c) ToString","[C#] public const AccessibleStates AlertLow;","[C++] public: const AccessibleStates AlertLow;","[VB] Public Const AlertLow As AccessibleStates","[JScript] public var AlertLow: AccessibleStates;","Description","Indicates low-priority information that might not be important to the user.","d) ToString","[C#] public const AccessibleStates AlertMedium;","[C++] public: const AccessibleStates AlertMedium;","[VB] Public Const AlertMedium As AccessibleStates public var AlertMedium: AccessibleStates;","Description","Indicates important information that does not need to be conveyed to the user immediately. For example, when a battery level indicator is starting to reach a low level, it could generate a medium-level alert. Blind access utilities could then generate a sound to let the user know that important information is available, without actually interrupting the user's work. The user can then query the alert information at his or her leisure.","e) ToString","[C#] public const AccessibleStates Animated;","[C++] public: const AccessibleStates Animated;","[VB] Public Const Animated As AccessibleStates","[JScript] public var Animated: AccessibleStates;","Description","The object has a rapidly or constantly changing appearance. Graphics that are occasionally animated, but not always, should be defined as System.Windows.Forms.AccessibleRole.Graphic OR Animated. This state should not be used to indicate that the object's location is changing.","f) ToString","[C#] public const AccessibleStates Busy;","[C++] public: const AccessibleStates Busy;","[VB] Public Const Busy As AccessibleStates","[JScript] public var Busy: AccessibleStates;","Description","A control that cannot accept input in its current condition.","g) ToString","[C#] public const AccessibleStates Checked;","[C++] public: const AccessibleStates Checked;","[VB] Public Const Checked As AccessibleStates","[JScript] public var Checked: AccessibleStates;","Description","An object with a selected check box.","h) ToString","[C#] public const AccessibleStates Collapsed;","[C++] public: const AccessibleStates Collapsed;","[VB] Public Const Collapsed As AccessibleStates","[JScript] public var Collapsed: AccessibleStates;","Description","The children of the object that are items in an outline or tree structure are hidden.","i) ToString","[C#] public const AccessibleStates Default;","[C++] public: const AccessibleStates Default;","[VB] Public Const Default As AccessibleStates","[JScript] public var Default: AccessibleStates;","Description","The default button or menu item.","j) ToString","[C#] public const AccessibleStates Expanded;","[C++] public: const AccessibleStates Expanded;","[VB] Public Const Expanded As AccessibleStates","[JScript] public var Expanded: AccessibleStates;","Description","The children of the object that are items in an outline or tree structure are displayed.","k) ToString","[C#] public const AccessibleStates ExtSelectable;","[C++] public: const AccessibleStates ExtSelectable;","[VB] Public Const ExtSelectable As AccessibleStates","[JScript] public var ExtSelectable: AccessibleStates;","Description","Alters the selection so that all objects between the selection anchor, which is the Object with the keyboard focus, and this object take on the anchor object's selection state. If the anchor object is not selected, the objects are removed from the selection. If the anchor object is selected, the selection is extended to include this object and all the objects in between. You can set the selection state by combining this with System.Windows.Forms.AccessibleSelection.AddSelection or System.Windows.Forms.AccessibleSelection.RemoveSelection. This tate does not change the focus or the selection anchor unless it is combined with System.Windows.Forms.AccessibleSelection.TakeFocus.","l) ToString","[C#] public const AccessibleStates Floating;","[C++] public: const AccessibleStates Floating;","[VB] Public Const Floating As AccessibleStates","[JScript] public var Floating: AccessibleStates;","Description","The object is not fixed to the boundary of its parent object, and does not move automatically along with the parent.","m) ToString","[C#] public const AccessibleStates Focusable;","[C++] public: const AccessibleStates Focusable;","[VB] Public Const Focusable As AccessibleStates","[JScript] public var Focusable: AccessibleStates;","Description","The object is on the active window and can receive keyboard focus.","n) ToString","[C#] public const AccessibleStates Focused;","[C++] public: const AccessibleStates Focused;","[VB] Public Const Focused As AccessibleStates","[JScript] public var Focused: AccessibleStates;","Description","An object with the keyboard focus.","o) ToString","[C#] public const AccessibleStates HotTracked;","[C++] public: const AccessibleStates HotTracked;","[VB] Public Const HotTracked As AccessibleStates","[JScript] public var HotTracked: AccessibleStates;","Description","The object is hot-tracked by the mouse, meaning its appearance is highlighted to indicate the mouse pointer is located over it.","p) ToString","[C#] public const AccessibleStates Indeterminate;","[C++] public: const AccessibleStates Indeterminate;","[VB] Public Const Indeterminate As AccessibleStates","[JScript] public var Indeterminate: AccessibleStates;","Description","A three-state check box or toolbar button whose state is indeterminate. The check box is neither checked nor unchecked and it is in the third or mixed state.","q) ToString","[C#] public const AccessibleStates Invisible;","[C++] public: const AccessibleStates Invisible;","[VB] Public Const Invisible As AccessibleStates","[JScript] public var Invisible: AccessibleStates;","Description","An object without a visible user interface.","r) ToString","[C#] public const AccessibleStates Linked;","[C++] public: const AccessibleStates Linked;","[VB] Public Const Linked As AccessibleStates","[JScript] public var Linked: AccessibleStates;","Description","A linked object that has not been previously selected.","s) ToString","[C#] public const AccessibleStates Marqueed;","[C++] public: const AccessibleStates Marqueed;","[VB] Public Const Marqueed As AccessibleStates","[JScript] public var Marqueed: AccessibleStates;","Description","An object with scrolling or moving text or graphics.","t) ToString","[C#] public const AccessibleStates Mixed;","[C++] public: const AccessibleStates Mixed;","[VB] Public Const Mixed As AccessibleStates","[JScript] public var Mixed: AccessibleStates;","Description","A three-state check box or toolbar button whose state is indeterminate. The check box is neither checked nor unchecked and it is in the third or mixed state.","u) ToString","[C#] public const AccessibleStates Moveable;","[C++] public: const AccessibleStates Moveable;","[VB] Public Const Moveable As AccessibleStates","[JScript] public var Moveable: AccessibleStates;","Description","A movable object.","v) ToString","[C#] public const AccessibleStates MultiSelectable;","[C++] public: const AccessibleStates MultiSelectable;","[VB] Public Const MultiSelectable As AccessibleStates","[JScript] public var MultiSelectable: AccessibleStates;","Description","An object that accepts multiple selected items.","w) ToString","[C#] public const AccessibleStates None;","[C++] public: const AccessibleStates None;","[VB] Public Const None As AccessibleStates","[JScript] public var None: AccessibleStates;","Description","No state.","x) ToString","[C#] public const AccessibleStates Offscreen;","[C++] public: const AccessibleStates Offscreen;","[VB] Public Const Offscreen As AccessibleStates","[JScript] public var Offscreen: AccessibleStates;","Description","No on-screen representation. A sound or alert object would have this state, or a hidden window that is never made visible.","y) ToString","[C#] public const AccessibleStates Pressed;","[C++] public: const AccessibleStates Pressed;","[VB] Public Const Pressed As AccessibleStates","[JScript] public var Pressed: AccessibleStates;","Description","A pressed object.","z) ToString","[C#] public const AccessibleStates Protected;","[C++] public: const AccessibleStates Protected;","[VB] Public Const Protected As AccessibleStates","[JScript] public var Protected: AccessibleStates;","Description","A password-protected edit control.","aa) ToString","[C#] public const AccessibleStates ReadOnly;","[C++] public: const AccessibleStates ReadOnly;","[VB] Public Const ReadOnly As AccessibleStates","[JScript] public var ReadOnly: AccessibleStates;","Description","A read-only object.","bb) ToString","[C#] public const AccessibleStates Selectable;","[C++] public: const AccessibleStates Selectable;","[VB] Public Const Selectable As AccessibleStates","[JScript] public var Selectable: AccessibleStates;","Description","An object that can accept selection.","cc) ToString","[C#] public const AccessibleStates Selected;","[C++] public: const AccessibleStates Selected;","[VB] Public Const Selected As AccessibleStates","[JScript] public var Selected: AccessibleStates;","Description","A selected object.","dd) ToString","[C#] public const AccessibleStates SelfVoicing;","[C++] public: const AccessibleStates SelfVoicing;","[VB] Public Const SelfVoicing As AccessibleStates","[JScript] public var SelfVoicing: AccessibleStates;","Description","The object or child can use text-to-speech (TTS) to describe itself. A speech-based accessibility aid should not announce information when an object with this state has the focus because the object will automatically announce information about itself.","ee) ToString","[C#] public const AccessibleStates Sizeable;","[C++] public: const AccessibleStates Sizeable;","[VB] Public Const Sizeable As AccessibleStates","[JScript] public var Sizeable: AccessibleStates;","Description","A sizable object.","ff) ToString","[C#] public const AccessibleStates Traversed;","[C++] public: const AccessibleStates Traversed;","[VB] Public Const Traversed As AccessibleStates","[JScript] public var Traversed: AccessibleStates;","Description","A linked object that has previously been selected.","gg) ToString","[C#] public const AccessibleStates Unavailable;","[C++] public: const AccessibleStates Unavailable;","[VB] Public Const Unavailable As AccessibleStates","[JScript] public var Unavailable: AccessibleStates;","Description","An unavailable object.","hh) ToString","[C#] public const AccessibleStates Valid;","[C++] public: const AccessibleStates Valid;","[VB] Public Const Valid As AccessibleStates","[JScript] public var Valid: AccessibleStates;","Description","A valid object.","AmbientProperties class (System.Windows.Forms)","a) ToString","Description","Provides ambient property values to top-level controls.","An ambient property is a property on a control that, if not set, is retrieved from the parent control. If the control does not have a parent and the property is not set, the control tries to find the value of the ambient property through the System.ComponentModel.Component.Site property. If the control is not sited, the site does not support ambient properties, or if the property is not set on the System.Windows.Forms.AmbientProperties object, the System.Windows.Forms.Control uses its own default values. Some objects derived from the System.Windows.Forms.Control class might set the property even it you do not. For example, the System.Windows.Forms.Form class always sets the System.Windows.Forms.Control.ForeColor and System.Windows.Forms.Control.BackColor properties.","b) AmbientProperties","Example Syntax:","c) ToString","[C#] public AmbientProperties( );","[C++] public: AmbientProperties( );","[VB] Public Sub New( )","[JScript] public function AmbientProperties( );","d) BackColor","e) ToString","[C#] public Color BackColor {get; set;}","[C++] public: _property Color get_BackColor( ); public: _property void set_BackColor(Color);","[VB] Public Property BackColor As Color","[JScript] public function get BackColor( ): Color; public function set BackColor(Color);","Description","Gets or sets the ambient background color of an object.","If there is no ambient background color, the value of the System.Windows.Forms.Control.BackColor property is set to System.Drawing.Color.Empty.","f) Cursor","g) ToString","[C#] public Cursor Cursor {get; set;}","[C++] public: _property Cursor* get_Cursor( ); public: _property void set_Cursor(Cursor*);","[VB] Public Property Cursor As Cursor","[JScript] public function get Cursor( ): Cursor; public function set Cursor(Cursor);","Description","Gets or sets the ambient cursor of an object.","If there is no ambient cursor, the value of the System.Windows.Forms.Control.Cursor property is null.","h) Font","i) ToString","[C#] public Font Font {get; set;}","[C++] public: _property Font* get Font( ); public: _property void set_Font(Font*);","[VB] Public Property Font As Font","[JScript] public function get Font( ): Font; public function set Font(Font);","Description","Gets or sets the ambient font of an object.","If there is no ambient font, the value of the System.Windows.Forms.Control.Font property is null.","j) ForeColor","k) ToString","[C#] public Color ForeColor {get; set;}","[C++] public: _property Color get_ForeColor( ); public: _property void set_ForeColor(Color);","[VB] Public Property ForeColor As Color","[JScript] public function get ForeColor( ): Color; public function set ForeColor(Color);","Description","Gets or sets the ambient foreground color of an object.","If there is no ambient foreground color, the value of the System.Windows.Forms.Control.ForeColor property is set to System.Drawing.Color.Empty.","AnchorStyles enumeration (System.Windows.Forms)","a) ToString","Description","Specifies how a control anchors to the edges of its container.","When a control is anchored to an edge of its container, the distance between the control and the specified edge remains constant when the container resizes. For example, if a control is anchored to the right edge of its container, the distance between the right edge of the control and the right edge of the container remains constant when the container resizes. A control can be anchored to any combination of control edges. If the control is anchored to opposite edges of its container (for example, to the top and bottom), it resizes when the container resizes. If a control has its System.Windows.Forms.Control.Anchor property set to AnchorStyle.None, the control moves half of the distance that the container of the control is resized. For example, if a System.Windows.Forms.Button has its System.Windows.Forms.Control.Anchor property set to AnchorStyle.None and the System.Windows.Forms.Form that the control is located on is resized by 20 pixels in either direction, the button will be moved 10 pixels in both directions.","b) ToString","[C#] public const AnchorStyles Bottom;","[C++] public: const AnchorStyles Bottom;","[VB] Public Const Bottom As AnchorStyles","[JScript] public var Bottom: AnchorStyles;","Description","The control is anchored to the bottom edge of its container.","c) ToString","[C#] public const AnchorStyles Left;","[C++] public: const AnchorStyles Left;","[VB] Public Const Left As AnchorStyles","[JScript] public var Left: AnchorStyles;","Description","The control is anchored to the left edge of its container.","d) ToString","[C#] public const AnchorStyles None;","[C++] public: const AnchorStyles None;","[VB] Public Const None As AnchorStyles","[JScript] public var None: AnchorStyles;","Description","The control is not anchored to any edges of its container.","e) ToString","[C#] public const AnchorStyles Right;","[C++] public: const AnchorStyles Right;","[VB] Public Const Right As AnchorStyles","[JScript] public var Right: AnchorStyles;","Description","The control is anchored to the right edge of its container.","f) ToString","[C#] public const AnchorStyles Top;","[C++] public: const AnchorStyles Top;","[VB] Public Const Top As AnchorStyles","[JScript] public var Top: AnchorStyles;","Description","The control is anchored to the top edge of its container.","Appearance enumeration (System.Windows.Forms)","a) ToString","Description","Specifies the appearance of a control.","Use the members of this enumeration in controls that provide the System.Windows.Forms.CheckBox.Appearance property to set its value.","b) ToString","[C#] public const Appearance Button;","[C++] public: const Appearance Button;","[VB] Public Const Button As Appearance","[JScript] public var Button: Appearance;","Description","The appearance of a Windows button.","c) ToString","[C#] public const Appearance Normal;","[C++] public: const Appearance Normal;","[VB] Public Const Normal As Appearance","[JScript] public var Normal: Appearance;","Description","The default appearance defined by the control class.","Application class (System.Windows.Forms)","a) ToString","Description","Provides static methods and properties to manage an application, such as methods to start and stop an application, to process Windows messages, and properties to get information about an application. This class cannot be inherited.","The System.Windows.Forms.Application class has methods to start and stop applications and threads, and to process Windows messages. Call System.Windows.Forms.Application.Run to start an application message loop on the current thread and, optionally, to make a form visible. Call System.Windows.Forms.Application.Exit or System.Windows.Forms.Application.ExitThread to stop a message loop. Call System.Windows.Forms.Application.DoEvents to process messages while your program is in a loop. Call System.Windows.Forms.Application.AddMessageFilter(System.Window s.Forms.IMessageFilter) to add a message filter to the application message pump to monitor Windows messages. An System.Windows.Forms.IMessageFilter lets you stop an event from being raised or perform special operations before invoking an event handler.","b) AllowQuit","c) ToString","[C#] public static bool AllowQuit {get;}","[C++] public: _property static bool get_AllowQuit( );","[VB] Public Shared ReadOnly Property AllowQuit As Boolean","[JScript] public static function get AllowQuit( ): Boolean;","Description","Gets a value indicating whether the caller can quit this application.","This property returns false if it is called from a System.Windows.Forms.Control being hosted within a Web browser. Thus, the System.Windows.Forms.Control cannot quit the System.Windows.Forms.Application.","d) CommonAppDataPath","e) ToString","[C#] public static string CommonAppDataPath {get;}","[C++] public: _property static String* get_CommonAppDataPath( );","[VB] Public Shared ReadOnly Property CommonAppDataPath As String","[JScript] public static function get CommonAppDataPath( ): String;","Description","Gets the path for the application data that is shared among all users.","If a path does not exist, one is created in the following format: Base Path\\System.Windows.Forms.Application.CompanyName\\System.Windows.Forms.Application.ProductName\\System.Windows.Forms.Application.ProductVersion Gets the path for the application data that is shared among all users.","f) CommonAppDataRegistry","g) ToString","[C#] public static RegistryKey CommonAppDataRegistry {get;}","[C++] public: _property static RegistryKey* get_CommonAppDataRegistry( );","[VB] Public Shared ReadOnly Property CommonAppDataRegistry As RegistryKey","[JScript] public static function get CommonAppDataRegistry( ): RegistryKey;","Description","Gets the registry key for the application data that is shared among all users.","Information can be written to the System.Windows.Forms.Application.CommonAppDataRegistry only at install time.","h) CompanyName","i) ToString","[C#] public static string CompanyName {get;}","[C++] public: _property static String* get_CompanyName( );","[VB] Public Shared ReadOnly Property CompanyName As String","[JScript] public static function get CompanyName( ): String;","Description","Gets the company name associated with the application.","j) CurrentCulture","k) ToString","[C#] public static CultureInfo CurrentCulture {get; set;}","[C++] public: _property static CultureInfo* get_CurrentCulture( ); public: _property static void set_CurrentCulture(CultureInfo*);","[VB] Public Shared Property CurrentCulture As CultureInfo","[JScript] public static function get CurrentCulture( ): CultureInfo; public static function set CurrentCulture(CultureInfo);","Description","Gets or sets the culture information for the current thread.","l) CurrentInputLanguage","m) ToString","[C#] public static InputLanguage CurrentInputLanguage {get; set;}","[C++] public: _property static InputLanguage* get_CurrentInputLanguage( ); public: _property static void set_CurrentInputLanguage(InputLanguage*);","[VB] Public Shared Property CurrentInputLanguage As InputLanguage","[JScript] public static function get CurrentInputLanguage( ): InputLanguage; public static function set CurrentInputLanguage(InputLanguage);","Description","Gets or sets the current input language for the current thread.","n) ExecutablePath","o) ToString","[C#] public static string ExecutablePath {get;}","[C++] public: _property static String* get_ExecutablePath( );","[VB] Public Shared ReadOnly Property ExecutablePath As String","[JScript] public static function get ExecutablePath( ): String;","Description","Gets the path for the executable file that started the application.","p) LocalUserAppDataPath","q) ToString","[C#] public static string LocalUserAppDataPath {get;}","[C++] public: _property static String* get_LocalUserAppDataPath( );","[VB] Public Shared ReadOnly Property LocalUserAppDataPath As String","[JScript] public static function get LocalUserAppDataPath( ): String;","Description","Gets the path for the application data of a local, non-roaming user.","A local user is one whose user profile is stored on the system on which the user logged on. If a path does not exist, one is created in the following format: Base Path\\ System.Windows.Forms.Application.CompanyName\\System.Windows.Forms.Application.ProductName\\System.Windows.Forms.Application.ProductVersion Gets the path for the application data specific to a local, non-roaming user.","r) MessageLoop","s) ToString","[C#] public static bool MessageLoop {get;}","[C++] public: _property static bool get_MessageLoop( );","[VB] Public Shared ReadOnly Property MessageLoop As Boolean","[JScript] public static function get MessageLoop( ): Boolean;","Description","Gets a value indicating whether a message loop exists on this thread.","t) ProductName","u) ToString","[C#] public static string ProductName {get;}","[C++] public: _property static String* get_ProductName( );","[VB] Public Shared ReadOnly Property ProductName As String","[JScript] public static function get ProductName( ): String;","Description","Gets the product name associated with this application.","v) ProductVersion","w) ToString","[C#] public static string ProductVersion {get;}","[C++] public: _property static String* get_ProductVersion( );","[VB] Public Shared ReadOnly Property ProductVersion As String","[JScript] public static function get ProductVersion( ): String;","Description","Gets the product version associated with this application.","Typically, a version number displays as \u201cmajor number.minor number.build number.private part number\u201d.","x) SafeTopLevelCaptionFormat","y) ToString","[C#] public static string SafeTopLevelCaptionFormat {get; set;}","[C++] public: _property static String* get_SafeTopLevelCaptionFormat( ); public: _property static void set_SafeTopLevelCaptionFormat(String*);","[VB] Public Shared Property SafeTopLevelCaptionFormat As String","[JScript] public static function get SafeTopLevelCaptionFormat( ): String; public static function set SafeTopLevelCaptionFormat(String);","Description","Gets or sets the format string to apply to top-level window captions when they are displayed with a warning banner.","z) StartupPath","aa) ToString","[C#] public static string StartupPath {get;}","[C++] public: _property static String* get_StartupPath( );","[VB] Public Shared ReadOnly Property StartupPath As String","[JScript] public static function get StartupPath( ): String;","Description","Gets the path for the executable file that started the application.","bb) UserAppDataPath","cc) ToString","[C#] public static string UserAppDataPath {get;}","[C++] public: _property static String* get_UserAppDataPath( );","[VB] Public Shared ReadOnly Property UserAppDataPath As String","[JScript] public static function get UserAppDataPath( ): String;","Description","Gets the path for the application data of a roaming user.","If a path does not exist, one is created in the following format: Base Path\\System.Windows.Forms.Application.CompanyName\\System.Windows.Forms.Application.ProductName\\System.Windows.Forms.Application.ProductVersion A roaming user works on more than one computer in a network. The user profile for a roaming user is kept on a server on the network and is loaded onto a system when the user logs","dd) UserAppDataRegistry","ee) ToString","[C#] public static RegistryKey UserAppDataRegistry {get;}","[C++] public: _property static RegistryKey* get_UserAppDataRegistry( );","[VB] Public Shared ReadOnly Property UserAppDataRegistry As RegistryKey","[JScript] public static function get UserAppDataRegistry( ): RegistryKey;","Description","Gets the registry key of the application data specific to the roaming user.","Information can be written into the System.Windows.Forms.Application.UserAppDataRegistry only at install time.","ff) ToString","[C#] public static event EventHandler ApplicationExit;","[C++] public: static _event EventHandler* ApplicationExit;","[VB] Public Shared Event ApplicationExit As EventHandler","Description","Occurs when the application is about to shut down.","You must attach the event handlers to the System.Windows.Forms.Application.Exit event to perform unhandled, required tasks before the application stops running. You can close files opened by this application, or dispose of objects that garbage collection did not reclaim.","gg) ToString","[C#] a public static event EventHandler Idle;","[C++] public: static _event EventHandler* Idle;","[VB] Public Shared Event Idle As EventHandler","Description","Occurs when the application finishes processing and is about to enter the idle state.","If you have tasks that you must perform before the thread becomes idle, attach them to this event.","hh) ToString","[C#] public static event ThreadExceptionEventHandler ThreadException;","[C++] public: static _event ThreadExceptionEventHandler* ThreadException;","[VB] Public Shared Event ThreadException As ThreadExceptionEventHandler","Description","Occurs when an untrapped thread exception is thrown.","This event enables an application to handle an exception intelligently when it receives a thread exception from a window procedure. Attach your event handlers to the System.Windows.Forms.Application.ThreadException event to deal with the exception. An appropriate event handler does not terminate the thread, and allow your application to continue executing.","ii) ToString","[C#] public static event EventHandler ThreadExit;","[C++] public: static _event EventHandler* ThreadExit;","[VB] Public Shared Event ThreadExit As EventHandler","Description","Occurs when a thread is about to shut down. When the main thread for an application is about to be shut down, this event is raised first, followed by an System.Windows.Forms.Application.ApplicationExit event.","You must attach the event handlers to the System.Windows.Forms.Application.ThreadExit event to perform any unhandled, required tasks before the thread stops running. Close files opened by this thread, or dispose of objects that the garbage collector did not reclaim.","jj) AddMessageFilter","[C#] public static void AddMessageFilter(IMessageFilter value);","[C++] public: static void AddMessageFilter(IMessageFilter* value);","[VB] Public Shared Sub AddMessageFilter(ByVal value As IMessageFilter)","[JScript] public static function AddMessageFilter(value: IMessageFilter);","Description","Adds a message filter to monitor Windows messages as they are routed to their destinations.","Use a message filter to prevent specific events from being raised or to perform special operations for an event before it is passed to an event handler. Message filters are unique to a specific thread. The implementation of the System.Windows.Forms.IMessageFilter interface you want to install.","kk) DoEvents","[C#] public static void DoEvents( );","[C++] public: static void DoEvents( );","[VB] Public Shared Sub DoEvents( )","[JScript] public static function DoEvents( );","Description","Processes all Windows messages currently in the message queue.","When you run a Windows Form, it creates the new form, which then waits for events to handle. Each time the form handles an event, it processes all the code associated with that event. All other events wait in the queue. While your code handles the event, your application does not respond. For example, the window does not repaint if another window is dragged on top.","ll) Exit","[C#] public static void Exit( );","[C++] public: static void Exit( );","[VB] Public Shared Sub Exit( );","[JScript] public static function Exit( );","Description","Informs all message pumps that they must terminate, and then closes all application windows after the messages have been processed.","This method stops all running message loops on all threads and closes all windows of the application. This method does not actually force the application to exit, but rather causes all calls to System.Windows.Forms.Application.Run to return. To exit a message loop for the current thread only, call System.Windows.Forms.Application.ExitThread.","mm) ExitThread","[C#] public static void ExitThread( );","[C++] public: static void ExitThread( );","[VB] Public Shared Sub ExitThread( )","[JScript] public static function ExitThread( );","Description","Exits the message loop on the current thread and closes all windows on the thread.","Use this method to exit the message loop of the current thread. This method causes the call to System.Windows.Forms.Application.Run for the current thread to return. To exit the entire application, call System.Windows.Forms.Application.Exit.","nn) OleRequired","[C#] public static ApartmentState OleRequired( );","[C++] public: static ApartmentState OleRequired( );","[VB] Public Shared Function OleRequired( ) As ApartmentState","[JScript] public static function OleRequired( ): ApartmentState;","Description","Initializes OLE on the current thread.","Return Value: One of the System.Threading.ApartmentState values.","Call this method before calling any Microsoft.Win32 method that requires OLE.","oo) OnThreadException","[C#] public static void OnThreadException(Exception t);","[C++] public: static void OnThreadException(Exception* t);","[VB] Public Shared Sub OnThreadException(ByVal t As Exception)","[JScript] public static function OnThreadException(t: Exception);","Description","Raises the System.Windows.Forms.Application.ThreadException event.","This event enables an application to handle an exception intelligently. A window procedure calls this event when it receives a thread exception. Attach your event handlers to this event. An System.Exception that represents the exception that was thrown.","pp) RemoveMessageFilter","[C#] public static void RemoveMessageFilter(IMessageFilter value);","[C++] public: static void RemoveMessageFilter(IMessageFilter* value);","[VB] Public Shared Sub RemoveMessageFilter(ByVal value As IMessageFilter)","[JScript] public static function RemoveMessageFilter(value: IMessageFilter);","Description","Removes a message filter from the message pump of the application.","You can remove a message filter when you no longer want to capture Windows messages before they are dispatched. The implementation of the System.Windows.Forms.IMessageFilter to remove from the application.","qq) Run","[C#] public static void Run( );","[C++] public: static void Run( );","[VB] Public Shared Sub Run( )","[JScript] public static function Run( ); Begins running a standard application message loop on the current thread.","Description","Begins running a standard application message loop on the current thread, without a form.","The message loop runs until System.Windows.Forms.Application.Exit or System.Windows.Forms.Application. ExitThread is called.","rr) Run","[C#] public static void Run(ApplicationContext context);","[C++] public: static void Run(ApplicationContext* context);","[VB] Public Shared Sub Run(ByVal context As ApplicationContext)","[JScript] public static function Run(context: ApplicationContext);","Description","Begins running a standard application message loop on the current thread, with an System.Windows.Forms.ApplicationContext.","The message loop runs until System.Windows.Forms.Application.Exit or System.Windows.Forms.Application.ExitThread is called or the System.Windows.Forms.Application.ThreadExit event is raised on the context object. An System.Windows.Forms.ApplicationContext in which the application is run.","ss) Run","[C#] public static void Run(Form mainForm);","[C++] public: static void Run(Form* mainForm);","[VB] Public Shared Sub Run(ByVal mainForm As Form)","[JScript] public static function Run(mainForm: Form);","Description","Begins running a standard application message loop on the current thread, and makes the specified form visible.","Typically, the main function of an application calls this method and passes it to the main window of the application. A System.Windows.Forms.Form that represents the form to make visible.","ApplicationContext class (System.Windows.Forms)","a) ToString","Description","Specifies the contextual information about an application thread.","You can use the System.Windows.Forms.ApplicationContext class to redefine the circumstances that cause a message loop to exit. By default, the System.Windows.Forms.ApplicationContext listens to the System.Windows.Forms.Form.Closed event on the application's main System.Windows.Forms.Form, then exits the thread's message loop.","b) ApplicationContext","Example Syntax:","c) ToString","[C#] public ApplicationContext( );","[C++] public: ApplicationContext( );","[VB] Public Sub New( )","[JScript] public function ApplicationContext( ); Initializes a new instance of the System.Windows.Forms.ApplicationContext class.","Description","Initializes a new instance of the System.Windows.Forms.ApplicationContext class with no context.","d) ApplicationContext","Example Syntax:","e) ToString","[C#] public ApplicationContext(Form mainForm);","[C++] public: ApplicationContext(Form* mainForm);","[VB] Public Sub New(ByVal mainForm As Form)","[JScript] public function ApplicationContext(mainForm: Form);","Description","Initializes a new instance of the System.Windows.Forms.ApplicationContext class with the specified System.Windows.Forms.Form If System.Windows.Forms.ApplicationContext.OnMainFormClosed(Syste t.Object, System.EventArgs) is not overridden, the message loop of the thread terminates when System.Windows.Forms.ApplicationContext.MainForm is closed. The main System.Windows.Forms.Form of the application to use for context.","f) MainForm","g) ToString","[C#] public Form MainForm {get; set;}","[C++] public: _property Form* get_MainForm( ); public: _property void set_MainForm(Form*);","[VB] Public Property MainForm As Form","[JScript] public function get MainForm( ): Form; public function set MainForm(Form);","Description","Gets or sets the System.Windows.Forms.Form to use as context.","This property determines the main System.Windows.Forms.Form for this context. This property can change at any time. If System.Windows.Forms.ApplicationContext.OnMainFormClosed(Syste m.Object, System.EventArgs) is not overridden, the message loop of the thread terminates when the mainForm parameter closes.","h) ToString","[C#] public event EventHandler ThreadExit;","[C++] public: _event EventHandler* ThreadExit;","[VB] Public Event ThreadExit As EventHandler","Description","Occurs when the message loop of the thread should be terminated, by calling System.Windows.Forms.ApplicationContext.ExitThread.","i) Dispose","[C#] public void Dispose( );","[C++] public: void Dispose( );","[VB] Public Sub Dispose( )","[JScript] public function Dispose( ); Releases the resources used by the System.Windows.Forms.ApplicationContext","Description","Releases all resources used by the System.Windows.Forms.ApplicationContext.","Calling System.Windows.Forms.ApplicationContext.Dispose allows the resources used by the System.Windows.Forms.ApplicationContext. to be reallocated for other purposes. For more information about System.Windows.Forms.ApplicationContext.Dispose, see.","j) Dispose","[C#] protected virtual void Dispose(bool disposing);","[C++] protected: virtual void Dispose(bool disposing);","[VB] Overridable Protected Sub Dispose(ByVal disposing As Boolean)","[JScript] protected function Dispose(disposing: Boolean);","Description","Releases the unmanaged resources used by the System.Windows.Forms.ApplicationContext and optionally releases the managed resources.","This method is called by the public method and the System.Object.Finalize method. true to release both managed and unmanaged resources; false to release only unmanaged resources.","k) ExitThread","[C#] public void ExitThread( );","[C++] public: void ExitThread( );","[VB] Public Sub ExitThread( )","[JScript] public function ExitThread( );","Description","Terminates the message loop of the thread.","This method calls System.Windows.Forms.ApplicationContext.ExitThreadCore.","l) ExitThreadCore","[C#] protected virtual void ExitThreadCore( );","[C++] protected: virtual void ExitThreadCore( );","[VB] Overridable Protected Sub ExitThreadCore( )","[JScript] protected function ExitThreadCore( );","Description","Terminates the message loop of the thread.","This method is called from System.Windows.Forms.ApplicationContext.ExitThread.","m) Finalize","[C#] ApplicationContext( );","[C++] ApplicationContext( );","[VB] Overrides Protected Sub Finalize( )","[JScript] protected override function Finalize( );","Description","n) OnMainForm Closed","[C#] protected virtual void OnMainFormClosed(object sender, EventArgs e);","[C++] protected: virtual void OnMainFormClosed(Object* sender, EventArgs* e);","[VB] Overridable Protected Sub OnMainFormClosed(ByVal sender As Object, ByVal e As EventArgs)","[JScript] protected function OnMainFormClosed(sender: Object, e: EventArgs);","Description","Calls System.Windows.Forms.ApplicationContext.ExitThreadCore, which raises the System.Windows.Forms.ApplicationContext.ThreadExit event.","The default implementation of this method calls System.Windows.Forms.ApplicationContext.ExitThreadCore. The object that raised the event. The System.EventArgs that contains the event data.","ArrangeDirection enumeration (System.Windows.Forms)","a) ToString","Description","Specifies the direction in which the system arranges minimized windows.","This enumeration is used by the System.Windows.Forms.SystemInformation.ArrangeDirection property of the System.Windows.Forms.SystemInformation class.","b) ToString","[C#] public const ArrangeDirection Down;","[C++] public: const ArrangeDirection Down;","[VB] Public Const Down As ArrangeDirection","[JScript] public var Down: ArrangeDirection;","Description","Arranged vertically, from top to bottom.","c) ToString","[C#] public const ArrangeDirection Left;","[C++] public: const ArrangeDirection Left;","[VB] Public Const Left As ArrangeDirection","[JScript] public var Left: ArrangeDirection;","Description","Arranged horizontally, from left to right.","d) ToString","[C#] public const ArrangeDirection Right;","[C++] public: const ArrangeDirection Right;","[VB] Public Const Right As ArrangeDirection","[JScript] public var Right: ArrangeDirection;","Description","Arranged horizontally, from right to left.","e) ToString","[C#] public const ArrangeDirection Up;","[C++] public: const ArrangeDirection Up;","[VB] Public Const Up As ArrangeDirection","[JScript] public var Up: ArrangeDirection;","Description","Arranged vertically, from bottom to top.","ArrangeStartingPosition enumeration (System.Windows.Forms)","a) ToString","Description","Specifies the starting position that the system uses to arrange minimized windows.","This enumeration is used by the System.Windows.Forms.SystemInformation.ArrangeStartingPosition property of the System.Windows.Forms.SystemInformation class.","b) ToString","[C#] public const ArrangeStartingPosition BottomLeft;","[C++] public: const ArrangeStartingPosition BottomLeft;","[VB] Public Const BottomLeft As ArrangeStartingPosition","[JScript] public var BottomLeft: ArrangeStartingPosition;","Description","Starts at the lower-left corner of the screen, which is the default position.","c) ToString","[C#] public const ArrangeStartingPosition BottomRight;","[C++] public: const ArrangeStartingPosition BottomRight;","[VB] Public Const BottomRight As ArrangeStartingPosition","[JScript] public var BottomRight: ArrangeStartingPosition;","Description","Starts at the lower-right corner of the screen.","d) ToString","[C#] public const ArrangeStartingPosition Hide;","[C++] public: const ArrangeStartingPosition Hide;","[VB] Public Const Hide As ArrangeStartingPosition","[JScript] public var Hide: ArrangeStartingPosition;","Description","Hides minimized windows by moving them off the visible area of the screen.","e) ToString","[C#] public const ArrangeStartingPosition TopLeft;","[C++] public: const ArrangeStartingPosition TopLeft;","[VB] Public Const TopLeft As ArrangeStartingPosition","[JSCript] public var TopLeft: ArrangeStartingPosition;","Description","Starts at the upper-left corner of the screen.","f) ToString","[C#] public const ArrangeStartingPosition TopRight;","[C++] public: const ArrangeStartingPosition TopRight;","[VB] Public Const TopRight As ArrangeStartingPosition","[JScript] public var TopRight: ArrangeStartingPosition;","Description","Starts at the upper-right corner of the screen.","AxHost.AxComponentEditor class (System.Windows.Forms)","a) ToString","b) AxHost.AxComponentEditor","Example Syntax:","c) ToString","d) EditComponent","[C#] public override bool EditComponent(ITypeDescriptorContext context, object obj, IWin32Window parent);","[C++] public: bool EditComponent(ITypeDescriptorContext* context, Object* obj, IWin32Window* parent);","[VB] Overrides Public Function EditComponent(ByVal context As ITypeDescriptorContext, ByVal obj As Object, ByVal parent As IWin32Window) As Boolean","[JScript] public override function EditComponent(context ITypeDescriptorContext, obj: Object, parent: IWin32Window): Boolean;","AxHost class (System.Windows.Forms)","a) ToString","Description","Wraps ActiveX controls and exposes them as fully featured Windows Forms controls.","You typically do not use the System.Windows.Forms.AxHost class directly. You should inherit from this class and add the functionality required by your ActiveX control. You can use the ActiveX Control Importer tool to generate the wrappers that extend System.Windows.Forms.AxHost. For more information about the ActiveX Control Importer tool, see.","b) AxHost","Example Syntax:","c) ToString","[C#] protected AxHost(string clsid);","[C++] protected: AxHost(String* clsid);","[VB] Protected Sub New(ByVal clsid As String)","[JScript] protected function AxHost(clsid: String); Creates a new instance of a control which wraps an activeX control given by the clsid parameter and flags of 0.","d) AxHost","Example Syntax:","e) ToString","[C#] protected AxHost(string clsid, int flags);","[C++] protected: AxHost(String* clsid, int flags);","[VB] Protected Sub New(ByVal clsid As String, ByVal flags As Integer)","[JScript] protected function AxHost(clsid: String, flags: int); Creates a new instance of a control which wraps an activeX control given by the clsid and flags parameters.","f) AccessibilityObject","g) AccessibleDefaultActionDescription","h) AccessibleDescription","i) AccessibleName","j) AccessibleRole","k) AllowDrop","l) Anchor","m) BackColor","n) ToString","o) BackgroundImage","p) ToString","q) BindingContext","r) Bottom","s) Bounds","t) CanFocus","u) CanSelect","v) Capture","w) Causes Validation","x) ClientRectangle","y) ClientSize","z) CompanyName","aa) Container","bb) ContainingControl","cc) ToString","Description","Gets or sets the parent container of the ActiveX control.","dd) ContainsFocus","ee) ContextMenu","ff) ToString","gg) Controls","hh) Created","ii) CreateParams","jj) ToString","kk) Cursor","ll) ToString","mm) DataBindings","nn) DefaultImeMode","oo) DefaultSize","pp) ToString","qq) DesignMode","rr) DisplayRectangle","ss) Disposing","tt) Dock","uu) EditMode","vv) ToString","ww) Enabled","xx) ToString","Description","Gets or sets a value indicating whether the ActiveX control is in an enabled state.","yy) Events","zz) Focused","aaa) Font","bbb) ToString","ccc) FontHeight","ddd) ForeColor","eee) ToString","fff) Handle","ggg) HasAboutBox","hhh) ToString","Description","Gets a value indicating whether the ActiveX control has an about dialog box.","The about dialog box typically displays version and copyright information about the ActiveX control.","iii) HasChildren","jjj) Height","kkk) ImeMode","lll) InvokeRequired","mmm) IsAccessible","nnn) IsDisposed","ooo) IsHandleCreated","ppp) Left","qqq) Location","rrr) Name","sss) OcxState","ttt) ToString","Description","Gets or sets the persisted state of the ActiveX control.","The value of the System.Windows.Forms.AxHost.OcxState property is used after the control is created but before it is shown. This method computes the persisted state of the underlying ActiveX control and returns it in the encapsulated System.Windows.Forms.AxHost.State object. If the control has been modified since it was last saved to a persisted state, it need to be saved.","uuu) Parent","vvv) ProductName","www) ProductVersion","xxx) RecreatingHandle","yyy) Region","zzz) RenderRightToLeft","aaaa) ResizeRedraw","bbbb) Right","cccc) RightToLeff","dddd) ToString","eeee) RightToLeft","ffff) ShowFocusCues","gggg) ShowKeyboardCues","hhhh) Site","iiii) ToString","jjjj) Size","kkkk) TabIndex","llll) TabStop","mmmm) Tag","nnnn) Text","oooo) ToString","pppp) Top","qqqq) TopLevelControl","rrrr) Visible","ssss) Width","tttt) WindowTarget","uuuu) ToString","Description","Occurs when the System.Windows.Forms.Control.BackColor property of the ActiveX control has changed.","For more information about handling events, see.","vvvv) ToString","[C#] public new event EventHandler BackgroundImageChanged;","[C++] public: _event EventHandler* BackgroundImageChanged;","[VB] Shadows Public Event BackgroundImageChanged As EventHandler","Description","Occurs when the System.Windows.Forms.Control.BackgroundImage property of the ActiveX control has changed.","For more information about handling events, see.","wwww) ToString","[C#] public new event EventHandler BindingContextChanged;","[C++] public: _event EventHandler* BindingContextChanged;","[VB] Shadows Public Event BindingContextChanged As EventHandler","Description","Occurs when the System.Windows.Forms.BindingContext property of the ActiveX control has changed.","For more information about handling events, see.","xxxx) ToString","Description","Occurs when focus or keyboard or both cues have changed.","For more information about handling events, see.","yyyy) ToString","[C#] public new event EventHandler Click;","[C++] public: _event EventHandler* Click;","[VB] Shadows Public Event Click As EventHandler","Description","Occurs when the control is clicked.","For more information about handling events, see.","zzzz) ToString","[C#] public new event EventHandler ContextMenuChanged;","[C++] public: _event EventHandler* ContextMenuChanged;","[VB] Shadows Public Event ContextMenuChanged As EventHandler","Description","Occurs when the System.Windows.Forms.Control.ContextMenu property value has changed.","For more information about handling events, see.","aaaaa) ToString","Description","Occurs when the System.Windows.Forms.Control.Cursor property value has changed.","For more information about handling events, see.","bbbbb) ToString","Description","Occurs when the control is double clicked.","For more information about handling events, see.","ccccc) ToString","[C#] public new event DragEventHandler DragDrop;","[C++] public: event DragEventHandler* DragDrop;","[VB] Shadows Public Event DragDrop As DragEventHandler","Description","Occurs when a drag-and-drop operation is completed.","For more information about handling events, see.","ddddd) ToString","[C#] public new event DragEventHandler DragEnter;","[C++] public: _event DragEventHandler* DragEnter;","[VB] Shadows Public Event DragEnter As DragEventHandler","Description","Occurs when an object is dragged into the control's bounds.","For more information about handling events, see.","eeeee) ToString","[C#] public new event EventHandler DragLeave;","[C++] public: _event EventHandler* DragLeave;","[VB] Shadows Public Event DragLeave As EventHandler","Description","Occurs when an object has been dragged into and out of the control's bounds.","For more information about handling events, see.","fffff) ToString","[C#] public new event DragEventHandler DragOver;","[C++] public: _event DragEventHandler* DragOver;","[VB] Shadows Public Event DragOver As DragEventHandler","Description","Occurs when an object has been dragged over the control's bounds.","For more information about handling events, see.","ggggg) ToString","[C#] public new event EventHandler EnabledChanged;","[C++] public: _event EventHandler* EnabledChanged;","[VB] Shadows Public Event EnabledChanged As EventHandler","Description","Occurs when the System.Windows.Forms.Control.Enabled property value has changed.","For more information about handling events, see.","hhhhh) ToString","Description","Occurs when the System.Windows.Forms.Control.Font property value has changed.","For more information about handling events, see.","iiiii) ToString","[C#] public new event EventHandler ForeColorChanged;","[C++] public: _event EventHandler* ForeColorChanged;","[VB] Shadows Public Event ForeColorChanged As EventHandler","Description","Occurs when the System.Windows.Forms.Control.ForeColor property value has changed.","For more information about handling events, see.","jjjjj) ToString","[C#] public new event GiveFeedbackEventHandler GiveFeedback;","[C++] public: _event GiveFeedbackEventHandler* GiveFeedback;","[VB] Shadows Public Event GiveFeedback As GiveFeedbackEventHandler","Description","Occurs during a drag operation.","The System.Windows.Forms.Control.GiveFeedback event allows the source of a drag event to modify the appearance of the mouse pointer in order to give the user visual feedback during a drag-and-drop operation.","kkkkk) ToString","Description","Occurs when the user requests Help for a control.","For more information about handling events, see.","lllll) ToString","[C#] public new event EventHandler ImeModeChanged;","[C++] public: _event EventHandler* ImeModeChanged;","[VB] Shadows Public Event ImeModeChanged As EventHandler","Description","Occurs when the System.Windows.Forms.Control.ImeMode property has changed.","For more information about handling events, see.","mmmmm) ToString","Description","Occurs when a key is pressed down while the control has focus.","For more information about handling events, see.","nnnnn) ToString","[C#] public new event KeyPressEventHandler KeyPress;","[C++] public: _event KeyPressEventHandler* KeyPress;","[VB] Shadows Public Event KeyPress As KeyPressEventHandler","Description","Occurs when a key is pressed while the control has focus.","For more information about handling events, see.","ooooo) ToString","[C#] public new event KeyEventHandler KeyUp;","[C++] public: _event KeyEventHandler* KeyUp;","[VB] Shadows Public Event KeyUp As KeyEventHandler","Description","Occurs when a key is released while the control has focus.","For more information about handling events, see.","ppppp) ToString","[C#] public new event LayoutEventHandler Layout;","[C++] public: _event LayoutEventHandler* Layout;","[VB] Shadows Public Event Layout As LayoutEventHandler","Description","Occurs when a control has to lay out its child controls.","For more information about handling events, see.","qqqqq) ToString","Description","Occurs when the mouse pointer is over the control and a mouse button is pressed.","For more information about handling events, see.","rrrrr) ToString","[C#] public new event EventHandler MouseEnter;","[C++] public: _event EventHandler* MouseEnter;","[VB] Shadows Public Event MouseEnter As EventHandler","Description","Occurs when the mouse pointer enters the control.","For more information about handling events, see.","sssss) ToString","[C#] public new event EventHandler MouseHover;","[C++] public: _event EventHandler* MouseHover;","[VB] Shadows Public Event MouseHover As EventHandler","Description","Occurs when the mouse pointer hovers over the contro.","For more information about handling events, see.","ttttt) ToString","[C#] public new event EventHandler MouseLeave;","[C++] public: _event EventHandler* MouseLeave;","[VB] Shadows Public Event MouseLeave As EventHandler","Description","Occurs when the mouse pointer leaves the control.","For more information about handling events, see.","uuuuu) ToString","[C#] public new event MouseEventHandler MouseMove;","[C++] public: _event MouseEventHandler* MouseMove;","[VB] Shadows Public Event MouseMove As MouseEventHandler","Description","Occurs when the mouse pointer is moved over the control.","For more information about handling events, see.","vvvvv) ToString","[C#] public new event MouseEventHandler MouseUp;","[C++] public: _event MouseEventHandler* MouseUp;","[VB] Shadows Public Event MouseUp As MouseEventHandler","Description","Occurs when the mouse pointer is over the control and a mouse button is released.","For more information about handling events, see.","wwwww) ToString","[C#] public new event MouseEventHandler MouseWheel;","[C++] public: _event MouseEventHandler* MouseWheel;","[VB] Shadows Public Event MouseWheel As MouseEventHandler","Description","Occurs when the mouse wheel moves while the control has focus.","For more information about handling events, see.","xxxxx) ToString","Description","Occurs when when the control is redrawn.","For more information about handling events, see.","yyyyy) ToString","Description","Occurs when when System.Windows.Forms.AccessibleObject is providing help to accessibility applications.","For more information about handling events, see.","zzzzz) ToString","[C#] public new event QueryContinueDragEventHandler QueryContinueDrag;","[C++] public: _event QueryContinueDragEventHandler* QueryContinueDrag;","[VB] Shadows Public Event QueryContinueDrag As QueryContinueDragEventHandler","Description","Occurs during a drag-and-drop operation and allows the drag source to determine whether the drag-and-drop operation should be canceled.","For more information about handling events, see.","aaaaaa) ToString","Description","Occurs when the System.Windows.Forms.Control.RightToLeft property value has changed.","For more information about handling events, see.","bbbbbb) ToString","Description","Occurs when the control style has changed.","The System.Windows.Forms.Control.StyleChanged event occurs when System.Windows.Forms.ControlStyles flags have been added or changed.","cccccc) ToString","Description","Occurs when the System.Windows.Forms.Control.TabIndex property value has changed.","For more information about handling events, see.","dddddd) ToString","[C#] public new event EventHandler TabStopChanged;","[C++] public: _event EventHandler* TabStopChanged;","[VB] Shadows Public Event TabStopChanged As EventHandler","Description","Occurs when the System.Windows.Forms.Control.TabStop property value has changed.","For more information about handling events, see.","eeeeee) ToString","[C#] public new event EventHandler TextChanged;","[C++] public: _event EventHandler* TextChanged;","[VB] Shadows Public Event TextChanged As EventHandler","Description","Occurs when the System.Windows.Forms.Control.Text property value has changed.","For more information about handling events, see.","ffffff) AttachInterfaces","[C#] protected virtual void AttachInterfaces( );","[C++] protected: virtual void AttachInterfaces( );","[VB] Overridable Protected Sub AttachInterfaces( )","[JScript] protected function AttachInterfaces( );","Description","Called when the System.Windows.Forms.AxHost object is ready to create the underlying ActiveX object.","Classes that extend System.Windows.Forms.AxHost should override this method. Within an overridden version of this method, the extending class should call System.Windows.Forms.AxHost.Getocx to retrieve its own interface. In most cases, the System.Windows.Forms.AxHost.GetOcx method should not be called before this method is called.","gggggg) BeginInit","[C#] public void BeginInit( );","[C++] public: _sealed void BeginInit( );","[VB] NotOverridable Public Sub BeginInit( )","[JScript] public function BeginInit( );","Description","Begins the initialization of an System.Windows.Forms.AxHost object.","Design environments typically use this method to start the initialization of a component that is used on a form or used by another component. The System.Windows.Forms.AxHost.EndInit method ends the initialization. Using the System.Wi ndows.Forms.AxHost.BeginInit and System.Windows.Forms.AxHost.EndInit methods prevents the control from being used before it is fully initialized. The initialization occurs at run time.","hhhhhh) CreateHandle","[C#] protected override void CreateHandle( );","[C++] protected: void CreateHandle( );","[VB] Overrides Protected Sub CreateHandle( )","[JScript] protected override function CreateHandle( ); Creates a handle for this control. This method is called by the .NET framework, this should not be called.","iiiiii) CreateSink","[C#] protected virtual void CreateSink( );","[C++] protected: virtual void CreateSink( );","[VB] Overridable Protected Sub CreateSink( )","[JScript] protected function CreateSink( );","jjjjjj) DestroyHandle","[C#] protected override void DestroyHandle( );","[C++] protected: void DestroyHandle( );","[VB] Overrides Protected Sub DestroyHandle( )","[JScript] protected override function DestroyHandle( ); Destroys the handle associated with this control. User code should in general not call this function.","kkkkkk) DetachSink","[C#] protected virtual void DetachSink( );","[C++] protected: virtual void DetachSink( );","[VB] Overridable Protected Sub DetachSink( )","[JScript] protected function DetachSink( );","llllll) Dispose","[C#] protected override void Dispose(bool disposing);","[C++] protected: void Dispose(bool disposing);","[VB] Overrides Protected Sub Dispose(ByVal disposing As Boolean)","[JScript] protected override function Dispose(disposing: Boolean); Frees all resources associated with this control. This method may not be called at runtime. Any resources used by the control should be setup to be released when the control is GC'ed. Inheriting classes should always call base dispose.","mmmmmm) DoVerb","[C#] public void DoVerb(int verb);","[C++] public: void DoVerb(int verb);","[VB] Public Sub DoVerb(ByVal verb As Integer)","[JScript] public function DoVerb(verb: int);","nnnnnn) EndInit","[C#] public void EndInit( );","[C++] public: sealed void EndInit( );","[VB] NotOverridable Public Sub EndInit( )","[JScript] public function EndInit( );","Description","Ends the initialization of an System.Windows.Forms.AxHost object.","Design environments typically use this method to start the initialization of a component that is used on a form or used by another component. The System.Windows.Forms.AxHost.EndInit method ends the initialization. Using the System.Windows.Forms.AxHost.BeginInit and System.Windows.Forms.AxHost.EndInit methods prevents the control from being used before it is fully initialized. The initialization occurs at run time.","oooooo) GetColorFromOleColor","[C#] protected static Color GetColorFromOleColor (uint color);","[C++] protected: static Color GetColorFromOleColor(unsigned int color);","[VB] Protected Shared Function GetColorFromOleColor(ByVal color As UInt32) As Color","[JScript] protected static function GetColorFromOleColor(color: UInt32): Color; Maps from an OLE COLOR to a System.Drawing.Color","pppppp) GetFontFromIFont","[C#] protected static Font GetFontFromIFont(object font);","[C++] protected: static Font* GetFontFromIFont(Object* font);","[VB] Protected Shared Function GetFontFromIFont(ByVal font As Object) As Font","[JScript] protected static function GetFontFromIFont(font: Object): Font; Maps from an OLE IFont to a System.Drawing.Font object","qqqqqq) GetFontFromIFontDisp","[C#] protected static Font GetFontFromIFontDisp(object font);","[C++] protected: static Font* GetFontFromIFontDisp(Object* font);","[VB] Protected Shared Function GetFontFromIFontDisp(ByVal font As Object) As Font","[JScript] protected static function GetFontFromIFontDisp(font: Object): Font; Maps from an IFontDisp to a System.Drawing.Font object","rrrrrr) GetIFontDispFromFont","[C#] protected static object GetIFontDispFromFont(Font font);","[C++] protected: static Object* GetIFontDispFromFont(Font* font);","[VB] Protected Shared Function GetIFontDispFromFont(ByVal font As Font) As Object","[JScript] protected static function GetIFontDispFromFont(font: Font): Object; Maps from a System.Drawing.Font object to an OLE IFontDisp","ssssss) GetIFontFromFont","[C#] protected static object GetIFontFromFont(Font font);","[C++] protected: static Object* GetIFontFromFont(Font* font);","[VB] Protected Shared Function GetIFontFromFont(ByVal font As Font) As Object","[JScript] protected static function GetIFontFromFont(font: Font): Object; Maps from a System.Drawing.Font object to an OLE IFont","tttttt) GetIPictureDispFromPicture","[C#] protected static object GetIPictureDispFromPicture(Image image);","[C++] protected: static Object* GetIPictureDispFromPicture(Image* image);","[VB] Protected Shared Function GetIPictureDispFromPicture(ByVal image As Image) As Object","[JScript] protected static function GetIPictureDispFromPicture(image: Image): Object; Maps from a System.Drawing.Image to an OLE IPictureDisp","uuuuuu) GetIPictureFromCursor","[C#] protected static object GetIPictureFromCursor(Cursor cursor);","[C++] protected: static Object* GetIPictureFromCursor(Cursor* cursor);","[VB] Protected Shared Function GetIPictureFromCursor(ByVal cursor As Cursor) As Object","[JScript] protected static function GetIPictureFromCursor(cursor: Cursor): Object; Maps from a System.Drawing.Cursor to an OLE IPicture","vvvvvv) GetIPictureFromPicture","[C#] protected static object GetIPictureFromPicture(Image image);","[C++] protected: static Object* GetIPictureFromPicture(Image* image);","[VB] Protected Shared Function GetIPictureFromPicture(ByVal image As Image) As Object","[JScript] protected static function GetIPictureFromPicture(image: Image): Object; Maps from a System.Drawing.Image to an OLE IPicture","wwwwww) GetOADateFromTime","[C#] protected static double GetOADateFromTime(DateTime time);","[C++] protected: static double GetOADateFromTime(DateTime time);","[VB] Protected Shared Function GetOADateFromTime(ByVal time As DateTime) As Double","[JScript] protected static function GetOADateFromTime(time: DateTime): double; Maps from a DateTime object to an OLE DATE (expressed as a double)","xxxxxx) GetOcx","[C#] public object GetOcx( );","[C++] public: Object* GetOcx( );","[VB] Public Function GetOcx( ) As Object","[JScript] public function GetOcx( ): Object;","Description","Retrieves a pointer to the underlying ActiveX control.","Return Value: A pointer to the underlying ActiveX control.","yyyyyy) GetOleColorFromColor","[C#] protected static uint GetOleColorFromColor(Color color);","[C++] protected: static unsigned int GetOleColorFromColor(Color color);","[VB] Protected Shared Function GetOleColorFromColor(ByVal color As Color) As UInt32","[JScript] protected static function GetOleColorFromColor(color: Color): UInt32; Maps from an System.Drawing.Color to an OLE COLOR","zzzzzz) GetPictureFromIPicture","[C#] protected static Image GetPictureFromIPicture(object picture);","[C++] protected: static Image* GetPictureFromIPicture(Object* picture);","[VB] Protected Shared Function GetPictureFromIPicture(ByVal picture As Object) As Image","[JScript] protected static function GetPictureFromIPicture(picture: Object): Image; Maps from an OLE Ipicture to a System.Drawing.Image","aaaaaaa) GetPictureFromIPictureDisp","[C#] protected static Image GetPictureFromIPictureDisp(object picture);","[C++] protected: static Image* GetPictureFromIPictureDisp(Object* picture);","[VB] Protected Shared Function GetPictureFromIPictureDisp(ByVal picture As Object) As Image","[JScript] protected static function GetPictureFromIPictureDisp(picture: Object): Image; Maps from an OLE IPictureDisp to a System.Drawing.Image","bbbbbbb) GetTimeFromOADate","[C#] protected static DateTime GetTimeFromOADate(double date);","[C++] protected: static DateTime GetTimeFromOADate(double date);","[VB] Protected Shared Function GetTimeFromOADate(ByVal date As Double) As DateTime","[JScript] protected static function GetTimeFromOADate(date: double): DateTime; Maps from an OLE DATE (expressed as a double) to a DateTime object","ccccccc) HasPropertyPages","[C#] public bool HasPropertyPages( );","[C++] public: bool HasPropertyPages( );","[VB] Public Function HasPropertyPages( ) As Boolean","[JScript] public function HasPropertyPages( ): Boolean;","Description","Determines if the ActiveX control has a property page.","Return Value: true if the ActiveX control has a property page; otherwise, false.","ddddddd) InvokeEditMode","[C#] public void InvokeEditMode( );","[C++] public: void InvokeEditMode( );","[VB] Public Sub InvokeEditMode( )","[JScript] public function InvokeEditMode( );","eeeeeee) IsInputKey","[C#] protected override bool IsInputKey(Keys keyData);","[C++] protected: bool IsInputKey(Keys keyData);","[VB] Overrides Protected Function IsInputKey(ByVal keyData As Keys) As Boolean","[JScript] protected override function IsInputKey(keyData: Keys): Boolean;","Description","Determines whether the specified key is a regular input key or a special key that requires preprocessing.","Return Value: true if the specified key is a regular input key; otherwise, false.","Call this method during window-message preprocessing to determine whether the specified key is a regular input key that should be sent directly to the control or a special key (such as PAGE UP and PAGE DOWN) that should preprocessed. In the latter case, send the key to the control only if it is not consumed by the preprocessing phase. One of the System.Windows.Forms.Keys values.","fffffff) MakeDirty","[C#] public void MakeDirty( );","[C++] public: void MakeDirty( );","[VB] Public Sub MakeDirty( )","[JScript] public function MakeDirty( );","ggggggg) OnBackColorChanged","[C#] protected override void OnBackColorChanged(EventArgs e);","[C++] protected: void OnBackColorChanged(EventArgs* e);","[VB] Overrides Protected Sub OnBackColorChanged(ByVal e As EventArgs)","[JScript] protected override function OnBackColorChanged(e: EventArgs);","hhhhhhh) OnFontChanged","[C#] protected override void OnFontChanged(EventArgs e);","[C++] protected: void OnFontChanged(EventArgs* e);","[VB] Overrides Protected Sub OnFontChanged(ByVal e As EventArgs)","[JScript] protected override function OnFontChanged(e: EventArgs);","iiiiiii) OnForeColorChanged","[C#] protected override void OnForeColorChanged(EventArgs e);","[C++] protected: void OnForeColorChanged(EventArgs* e);","[VB] Overrides Protected Sub OnForeColorChanged(ByVal e As EventArgs)","[JScript] protected override function OnForeColorChanged(e: EventArgs);","jjjjjjj) OnHandleCreated","[C#] protected override void OnHandleCreated(EventArgs e);","[C++] protected: void OnHandleCreated(EventArgs* e);","[VB] Overrides Protected Sub OnHandleCreated(ByVal e As EventArgs)","[JScript] protected override function OnHandleCreated(e: EventArgs); Inheriting classes should override this method to find out when the handle has been created. Call base.OnHandleCreated first.","kkkkkkk) OnLostFocus","[C#] protected override void OnLostFocus(EventArgs e);","[C++] protected: void OnLostFocus(EventArgs* e);","[VB] Overrides Protected Sub OnLostFocus(ByVal e As EventArgs)","[JScript] protected override function OnLostFocus(e: EventArgs);","Description","Raises the System.Windows.Forms.Control.LostFocus event.","lllllll) PreProcessMessage","[C#] public override bool PreProcessMessage(ref Message msg);","[C++] public: bool PreProcessMessage(Message* msg);","[VB] Overrides Public Function PreProcessMessage(ByRef msg As Message) As Boolean","[JScript] public override function PreProcessMessage(msg: Message): Boolean; This method is called by the application's message loop to pre-process input messages before they are dispatched. Possible values for the msg.message field are WM_KEYDOWN, WM_SYSKEYDOWN, WM_CHAR, and WM_SYSCHAR. If this method processes the message it must return true, in which case the message loop will not dispatch the message. This method should not be called directly by the user. The keyboard processing of input keys to AxHost controls go in 3 steps inside AxHost.PreProcessMessage( ) (1) Call the OCX's TranslateAccelarator. This may or may not call back into us using IOleControlSite::TranslateAccelarator( ) (2) If the control completely processed this without calling us back:\u2014If this returns S_OK, then it means that the control already processed this message and we return true, forcing us to not do any more processing or dispatch the message.\u2014If this returns S_FALSE, then it means that the control wants us to dispatch the message without doing any processing on our side. (3) If the control completely processed this by calling us back:\u2014If this returns S_OK, then it means that the control processed this message and we return true, forcing us to not do any more processing or dispatch the message.\u2014If this returns S_FALSE, then it means that the control did not process this message, but we did, and so we should route it through our PreProcessMessage( ).","mmmmmmm) ProcessMnemonic","[C#] protected override bool ProcessMnemonic(char charcode);","[C++] protected: bool ProcessMnemonic(_wchar_t charCode);","[VB] Overrides Protected Function ProcessMnemonic(ByVal charCode As Char) As Boolean","[JScript] protected override function ProcessMnemonic(charCode: Char): Boolean; Process a mnemonic character. This is done by manufacturing a WM_SYSKEYDOWN message and passing it to the ActiveX control.","nnnnnnn) Props Valid","[C#] protected bool PropsValid( );","[C++] protected: bool PropsValid( );","[VB] Protected Function PropsValid( ) As Boolean","[JScript] protected function PropsValid( ): Boolean;","ooooooo) RaiseOnMouseDown","[C#] protected void RaiseOnMouseDown(short button, short shift, int x, int y);","[C++] protected: void RaiseOnMouseDown(short button, short shift, int x, int y);","[VB] Protected Sub RaiseOnMouseDown(ByVal button As Short, ByVal shift As Short, ByVal x As Integer, ByVal y As Integer)","[JScript] protected function RaiseOnMouseDown(button: Int16, shift: Int16, x: int, y: int);","ppppppp) RaiseOnMouseDown","[C#] protected void RaiseOnMouseDown(short button, short shift, float x, float y);","[C++] protected: void RaiseOnMouseDown(short button, short shift, float x, float","[VB] Protected Sub RaiseOnMouseDown(ByVal button As Short, ByVal shift As Short, ByVal x As Single, ByVal y As Single)","[JScript] protected function RaiseOnMouseDown(button: Int16, shift: Int16, x float, y: float);","qqqqqqq) RaiseOnMouseDown","[C#] protected void RaiseOnMouseDown(object o1, object o2, object o3, object o4);","[C++] protected: void RaiseOnMouseDown(Object* o1, Object* o2, Object* o3, Object* o4);","[VB] Protected Sub RaiseOnMouseDown(ByVal o1 As Object, ByVal o2 As Object, ByVal o3 As Object, ByVal o4 As Object)","[JScript] protected function RaiseOnMouseDown(ol: Object, o2: Object, o3: Object, o4: Object);","rrrrrrr) RaiseOnMouseMove","[C] protected void RaiseOnMouseMove(short button, short shift, int x, int y);","[C++] protected: void RaiseOnMouseMove(short button, short shift, int x, int y);","[VB] Protected Sub RaiseOnMouseMove(ByVal button As Short, ByVal shift As Short, ByVal x As Integer, ByVal y As Integer)","[JScript] protected function RaiseOnMouseMove(button: Int16, shift: Int16, x: int, y: int);","sssssss) RaiseOnMouseMove","[C++] protected void RaiseOnMouseMove(short button, short shift, float x, float y);","[C++] protected: void RaiseOnMouseMove(short button, short shift, float x, float y);","[VB] Protected Sub RaiseOnMouseMove(ByVal button As Short, ByVal shift As Short, ByVal x As Single, ByVal y As Single)","[JScript] protected function RaiseOnMouseMove(button: Int16, shift: Int16, x: float, y: float);","ttttttt) RaiseOnMouseMove","[C#] protected void RaiseOnMouseMove(object o1, object o2, object o3, object o4);","[C++] protected: void RaiseOnMouseMove(Object* o1, Object* o2, Object* o3, Object* o4);","[VB] Protected Sub RaiseOnMouseMove(ByVal o1 As Object, ByVal o2 As Object, ByVal o3 As Object, ByVal o4 As Object)","[JScript] protected function RaiseOnMouseMove(o1: Object, o2: Object, o3: Object, o4: Object);","uuuuuuu) RaiseOnMouseUp","[C#] protected void RaiseOnMouseUp(short button, short shift, int x, int y);","[C++] protected: void RaiseOnMouseUp(short button, short shift, int x, int y);","[VB] Protected Sub RaiseOnMouseUp(ByVal button As Short, ByVal shift As Short, ByVal x As Integer, ByVal y As Integer)","[JScript] protected function RaiseOnMouseUp(button: Int16, shift: Int16, x: int, y: int);","vvvvvvv) RaiseOnMouseUp","[C#] protected void RaiseOnMouseUp(short button, short shift, float x, float y);","[C++] protected: void RaiseOnMouseUp(short button, short shift, float x, float y);","[VB] Protected Sub RaiseOnMouseUp(ByVal button As Short, ByVal shift As Short, ByVal x As Single, ByVal y As Single)","[JScript] protected function RaiseOnMouseUp(button: Int16, shift: Int16, x: float, y: float);","wwwwwww) RaiseOnMouseUp","[C#] protected void RaiseOnMouseUp(object o1, object o2, object o3, object o4);","[C++] protected: void RaiseonMouseUp(Object* o1, Object* o2, Object* o3, Object* o4);","[VB] Protected Sub RaiseOnMouseUp(ByVal o1 As Object, ByVal o2 As Object, ByVal o3 As Object, ByVal o4 As Object)","[JScript] protected function RaiseOnMouseUp(o1: Object, o2: Object, o3: Object, o4: Object);","xxxxxxx) SetAboutBoxDelegate","[C#] protected void SetAboutBoxDelegate(AxHost.AboutBoxDelegate d);","[C++] protected: void SetAboutBoxDelegate(AxHost.AboutBoxDelegate* d);","[VB] Protected Sub SetAboutBoxDelegate(ByVal d As AxHost.AboutBoxDelegate)","[JScript] protected function SetAboutBoxDelegate(d: AxHost.AboutBoxDelegate);","Description","Calls the System.Windows.Forms.AxHost.ShowAboutBox method to display the ActiveX controls about dialog box.","The System.Windows.Forms.AxHost.SetAboutBoxDelegate(System.Windows.Forms.AxHost.AboutBoxDelegate) method also allows derived classes to handle the System.Windows.Forms.AxHost.ShowAboutBox method without attaching a delegate. This is the preferred technique for handling the System.Windows.Forms.AxHost.ShowAboutBox method in a derived class. The delegate to call.","yyyyyyy) SetBoundsCore","[C#] protected override void SetBoundsCore(int x, int y, int width, int height, BoundsSpecified specified);","[C++] protected: void SetBoundsCore(int x, int y, int width, int height, BoundsSpecified specified);","[VB] Overrides Protected Sub SetBoundsCore(ByVal x As Integer, ByVal y As Integer, ByVal width As Integer, ByVal height As Integer, ByVal specified As BoundsSpecified)","[JScript] protected override function SetBoundsCore(x: int, y: int, width: int, height: int, specified: BoundsSpecified); Performs the work of setting the bounds of this control. User code should usually not call this function.","zzzzzzz) SetVisibleCore","[C#] protected override void SetVisibleCore(bool value);","[C++] protected: void SetVisibleCore(bool value);","[VB] Overrides Protected Sub SetVisibleCore(ByVal value As Boolean)","[JScript] protected override function SetVisibleCore(value: Boolean);","aaaaaaaa) ShowAboutBox","[C#] public void ShowAboutBox( );","[C++] public: void ShowAboutBox( );","[VB] Public Sub ShowAboutBox( )","[JScript] public function ShowAboutBox( );","Description","Displays the ActiveX control's about dialog box.","If System.Windows.Forms.AxHost.HasAboutBox is false, no about dialog box is displayed.","bbbbbbbb) ShowPropertyPages","[C#] public void ShowPropertyPages( );","[C++] public: void ShowPropertyPages( );","[VB] Public Sub ShowPropertyPages( )","[JScript] public function ShowPropertyPages( ); Displays the property page associated with the ActiveX control.","Description","Displays the property page associated with the ActiveX control.","If System.Windows.Forms.AxHost.HasPropertyPages returns false, no property pages are displayed.","ccccccccc) ShowPropertyPages","[C#] public void ShowPropertyPages(Control control);","[C++] public: void ShowPropertyPages(Control* control);","[VB] Public Sub ShowPropertyPages(ByVal control As Control)","[JScript] public function SbowPropertyPages(control: Control);","Description","Displays the property page associated with the ActiveX control assigned to the specified parent control.","If System.Windows.Forms.AxHost.HasPropertyPages returns false, no property pages are displayed. The parent System.Windows.Forms.Control of the ActiveX control.","dddddddd) ICustomTypeDescriptor.GetAttributes","[C#] AttributeCollection ICustomTypeDescriptor.GetAttributes( );","[C++] AttributeCollection* ICustomTypeDescriptor::GetAttributes( );","[VB] Function GetAttributes( ) As AttributeCollection Implements ICustomTypeDescriptor.GetAttributes","[JScript] function ICustomTypeDescriptor.GetAttributes( ): AttributeCollection;","eeeeeeee) ICustomTypeDescriptor.GetClassName","[C#] string ICustomTypeDescriptor.GetClassName( );","[C++] String* ICustomTypeDescriptor::GetClassName( );","[VB] Function GetClassName( ) As String Implements ICustomTypeDescriptor.GetClassName","[JScript] function ICustomTypeDescriptor.GetClassName( ): String;","ffffffff) ICustomTypeDescriptor.GetComponentName","[C#] string ICustomTypeDescriptor.GetComponentName( );","[C++] String* ICustomTypeDescriptor::GetComponentName( );","[VB] Function GetComponentName( ) As String Implements ICustomTypeDescriptor.GetComponentName","[JScript] function ICustomTypeDescriptor.GetComponentName( ): String;","gggggggg) ICustomTypeDescriptor.GetConverter","[C#] TypeConverter ICustomTypeDescriptor.GetConverter( );","[C++] TypeConverter* ICustomTypeDescriptor::GetConverter( );","[VB] Function GetConverter( ) As TypeConverter Implements ICustomTypeDescriptor.GetConverter","[JScript] function ICustomTypeDescriptor.GetConverter( ): TypeConverter;","hhhhhhhh) ICustomTypeDescriptor.GetDefaultEvent","[C#] EventDescriptor ICustomTypeDescriptor.GetDefaultEvent( );","[C++] EventDescriptor* ICustomTypeDescriptor::GetDefaultEvent( );","[VB] Function GetDefaultEvent( ) As EventDescriptor Implements ICustomTypeDescriptor.GetDefaultEvent","[JScript] function ICustomTypeDescriptor.GetDefaultEvent( ): EventDescriptor;","iiiiiiii) ICustomTypeDescriptor.GetDefaultProperty","[C#] PropertyDescriptor ICustomTypeDescriptor.GetDefaultProperty( );","[C++] PropertyDescriptor* ICustomTypeDescriptor::GetDefaultProperty( );","[VB] Function GetDefaultProperty( ) As PropertyDescriptor Implements ICustomTypeDescriptor.GetDefaultProperty","[JScript] function ICustomTypeDescriptor.GetDefaultProperty( ): PropertyDescriptor;","jjjjjjjj) ICustomTypeDescriptor.GetEditor","[C#] object ICustomTypeDescriptor.GetEditor(Type editorBaseType);","[C++] Object* ICustomTypeDescriptor::GetEditor(Type* editorBaseType);","[VB] Function GetEditor(ByVal editorBaseType As Type) As Object Implements ICustomTypeDescriptor.GetEditor","[JScript] function ICustomTypeDescriptor.GetEditor(editorBaseType: Type): Object;","kkkkkkkk) ICustomTypeDescriptor.GetEvents","[C#] EventDescriptorCollection ICustomTypeDescriptor.GetEvents( );","[C++] EventDescriptorCollection* ICustomTypeDescriptor::GetEvents( );","[VB] Function GetEvents( ) As EventDescriptorCollection Implements ICustomTypeDescriptor.GetEvents","[JScript] function ICustomTypeDescriptor.GetEvents( ): EventDescriptorCollection;","llllllll) ICustomTypeDescriptor.GetEvents","[C#] EventDescriptorCollection ICustomTypeDescriptor.GetEvents(Attribute[ ] attributes);","[C++] EventDescriptorCollection* ICustomTypeDescriptor::GetEvents(Attribute* attributes[ ]);","[VB] Function GetEvents(ByVal attributes( ) As Attribute) As EventDescriptorCollection Implements ICustomTypeDescriptor.GetEvents","[JScript] function ICustomTypeDescriptor.GetEvents(attributes: Attribute[ ]): EventDescriptorCollection;","mmmmmmmm) ICustomTypeDescriptor.GetProperties","[C#] PropertyDescriptorCollection ICustomTypeDescriptor.GetProperties( );","[C++] PropertyDescriptorCollection* ICustomTypeDescriptor::GetProperties( );","[VB] Function GetProperties( ) As PropertyDescriptorCollection Implements ICustomTypeDescriptor.GetProperties","[JScript] function ICustomTypeDescriptor.GetProperties( ): PropertyDescriptorCollection;","nnnnnnnn) ICustomTypeDescriptor.GetProperties","[C#] PropertyDescriptorCollection ICustomTypeDescriptor.GetProperties(Attribute[ ] attributes);","[C++] PropertyDescriptorCollection* ICustomTypeDescriptor::GetProperties(Attribute* attributes[ ]);","[VB] Function GetProperties(ByVal attributes( ) As Attribute) As PropertyDescriptorCollection Implements ICustomTypeDescriptor.GetProperties","[JScript] function ICustomTypeDescriptor.GetProperties(attributes: Attribute[ ]): PropertyDescriptorCollection;","oooooooo) ICustomTypeDescriptor.GetPropertyOwner","[C#] object ICustomTypeDescriptor.GetPropertyOwner(PropertyDescriptor pd);","[C++] Object* ICustomTypeDescriptor::GetPropertyOwner(PropertyDescriptor* pd);","[VB] Function GetPropertyOwner(ByVal pd As PropertyDescriptor) As Object Implements ICustomTypeDescriptor.GetPropertyOwner","[JScript] function ICustomTypeDescriptor.GetPropertyOwner(pd: PropertyDescriptor): Object;","pppppppp) WndProc","[C#] protected override void WndProc(ref Message m);","[C++] protected: void WndProc(Message* m);","[VB] Overrides Protected Sub WndProc(ByRef m As Message)","[JScript] protected override function WndProc(m: Message); AxHost wndProc. All messages are sent to wndProc after getting filtered through the preProcessMessage function. Certain messages are forwarder directly to the ActiveX control, others are first processed by the wndProc of Control","BaseCollection class (System.Windows.Forms)","a) WndProc","Description","Provides the base functionality for creating data-related collections in the System.Windows.Forms namespace.","The System.Windows.Forms.BaseCollection class is not intended for use by application developers. Application developers should use System.Collections.CollectionBase instead.","b) BaseCollection","Example Syntax:","c) WndProc","[C#] public BaseCollection( );","[C++] public: BaseCollection( );","[VB] Public Sub New( )","[JScript] public function BaseCollection( );","d) Count","e) WndProc","[C#] public virtual int Count {get;}","[C++] public: _property virtual int get_Count( );","[VB] Overridable Public ReadOnly Property Count As Integer","[JScript] public function get Count( ): int;","Description","Gets the total number of elements in the collection.","f) IsReadOnly","g) WndProc","[C#] public bool IsReadOnly {get;}","[C++] public: _property bool get_IsReadOnly( );","[VB] Public ReadOnly Property IsReadOnly As Boolean","[JScript] public function get IsReadOnly( ): Boolean;","Description","Gets a value indicating whether the collection is read-only.","The collections which derive from the System.Windows.Forms.BaseCollection class are always writeable, which is why this property always returns false.","h) IsSynchronized","i) WndProc","[C#] public bool IsSynchronized {get;}","[C++] public: _property bool get IsSynchronized( );","[VB] Public ReadOnly Property IsSynchronized As Boolean","[JScript] public function get IsSynchronized( ): Boolean;","Description","Gets a value indicating whether access to the System.Collections.ICollection is synchronized.","If a collection is thread safe, the System.Windows.Forms.BaseCollection.IsSynchronized property returns true, and the programmer does not have to do anything to keep the collection safe.","j) List","k) WndProc","[C#] protected virtual ArrayList List {get;}","[C++] protected: _property virtual ArrayList* get_List( );","[VB] Overridable Protected ReadOnly Property List As ArrayList","[JScript] protected function get List( ): ArrayList;","Description","Gets the list of elements contained in the System.Windows.Forms.BaseCollection instance.","l) SyncRoot","m) WndProc","[C#] public object SyncRoot {get;}","[C++] public: _property Object* get_SyncRoot( );","[VB] Public ReadOnly Property SyncRoot As Object","[JScript] public function get SyncRoot( ): Object;","Description","Gets an object that can be used to synchronize access to the System.Windows. Forms. BaseCollection.","If, as is the case with the System.Windows.Forms.BaseCollection, the System.Windows.Forms.BaseCollection.IsSynchronized property returns false, then the System.Windows.Forms.BaseCollection.SyncRoot property returns an object that can be used with the C# lock keyword.","n) CopyTo","[C#] public void CopyTo(Array* ar, int index);","[C++] public: _sealed void CopyTo(Array* ar, int index);","[VB] NotOverridable Public Sub CopyTo(ByVal ar As Array, ByVal index As Integer)","[JScript] public function CopyTo(ar: Array, index: int);","Description","Copies all the elements of the current one-dimensional System.Array to the specified one-dimensional System.Array starting at the specified destination System.Array index. The one-dimensional System.Array that is the destination of the elements copied from the current Array. The zero-based relative index in ar at which copying begins.","o) GetEnumerator","[C#] public IEnumerator GetEnumerator( );","[C++] public: sealed IEnumerator* GetEnumerator( );","[VB] NotOverridable Public Function GetEnumerator( ) As IEnumerator","[JScript] public function GetEnumerator( ): IEnumerator;","Description","Gets the object that allows iterating through the members of the collection.","Return Value: An object that implements the System.Collections.IEnumerator interface.","Binding class (System.Windows.Forms)","a) ToString","Description","Represents the simple binding between the property value of an object and the property value of a control.","Use the System.Windows.Forms.Binding class to create and maintain a simple binding between the property of a control and either the property of an object, or the property of the current object in a list of objects.","b) Binding","Example Syntax:","c) ToString","[C#] public Binding(string propertyName, object dataSource, string dataMember);","[C++] public: Binding(String* propertyName, Object* dataSource, String* dataMember);","[VB] Public Sub New(ByVal propertyName As String, ByVal dataSource As Object, ByVal dataMember As String)","[JScript] public function Binding(propertyName: String, dataSource: Object, dataMember: String); Initializes a new instance of the System.Windows.Forms.Binding class.","Description","Initializes a new instance of the System.Windows.Forms.Binding class that simple-binds the specified control property to the specified data member of the specified data source.","You can specify an instance of any of the following classes for the data source: System. Data. DataSetSystem. Data. DataTableSystem. Data. DataViewSystem.Data.DataViewManager Any class that implements the System.Collections.IList interface. The name of the control property to bind. An System.Object that represents the data source. The property or list to bind to.","d) BindingManagerBase","e) ToString","[C#] public BindingManagerBase BindingManagerBase {get;}","[C++] public: _property BindingManagerBase* get_BindingManagerBase( );","[VB] Public ReadOnly Property BindingManagerBase As BindingManagerBase","[JScript] public function get BindingManagerBase( ): BindingManagerBase;","Description","Gets this binding's System.Windows.Forms.BindingManagerBase.","Use the System.Windows.Forms.BindingManagerBase to iterate through a data-bound list by incrementing or decrementing the System.Windows.Forms.BindingManagerBase.Position property. The System.Windows.Forms.BindingManagerBase class is abstract. The System.Windows.Forms.CurrencyManager class, which manages data-bound lists, inherits from the System.Windows.Forms.BindingManagerBase class.","f) BindingMemberInfo","g) ToString","[C#] public BindingMemberInfo BindingMemberInfo {get;}","[C++] public: _property BindingMemberInfo get_BindingMemberInfo( );","[VB] Public ReadOnly Property BindingMemberInfo As BindingMemberinfo","[JScript] public function get BindingMemberInfo( ): BindingMemberInfo;","Description","Gets an object that contains information about this binding based on the dataMember parameter in the System.Windows.Forms.Binding.#ctor constructor.","The System.Windows.Forms.BindingMemberInfo is created from the dataMemberstring passed to the System.Windows.Forms.Binding.#ctor constructor.","h) Control","i) ToString","[C#] public Control Control {get;}","[C++] public: _property Control* get Control( );","[VB] Public ReadOnly Property Control As Control","[JScript] public function get Control( ): Control;","Description","Gets the control that the binding belongs to.","j) DataSource","k) ToString","[C#] public object DataSource {get;}","[C++] public: _property Object* get_DataSource( );","[VB] Public ReadOnly Property DataSource As Object","[JScript] public function get DataSource( ): Object;","Description","Gets the data source for this binding.","Possible data sources include: System.Data.DataSetSystem.Data.DataTableSystem.Data.DataViewSystem.Data.DataViewManager Any object that implements the System.Collections.IList interface.","l) IsBinding","m) ToString","[C#] public bool IsBinding {get;}","[C++] public: _property bool get_IsBinding( );","[VB] Public ReadOnly Property IsBinding As Boolean","[JScript] public function get IsBindingo: Boolean;","Description","Gets a value indicating whether the binding is active.","A binding is active when it meets three conditions: all of its properties are set, it belongs to a System.Windows.Forms.BindingsCollection that points to a table of a data source, and the data source is not null.","n) PropertyName","o) ToString","[C#] public string PropertyName {get;}","[C++] public: _property String* get_PropertyName( );","[VB] Public ReadOnly Property PropertyName As String","[JScript] public function get PropertyName( ): String;","Description","Gets or sets the name of the control's data-bound property.","Use the System.Windows.Forms.Binding.PropertyName to specify the control property that you want to bind to a list in a data source. Most commonly, you bind a display property such as the System.Windows.Forms.Control.Text property of a System.Windows.Forms.TextBox control. However, because you can bind any property of a control, you can programmatically create controls at run time using data from a database.","p) ToString","[C#] public event ConvertEventHandler Format;","[C++] public: _event ConvertEventHandler* Format;","[VB] Public Event Format As ConvertEventHandler","Description","Occurs when the property of a control is bound to a data value.","The System.Windows.Forms.Binding.Format and System.Windows.Forms.Binding.Parse events allow you to create custom formats for displaying data. For example, if the data in a table is of type System.Decimal, you can display the data in the local currency format by setting the System.Windows.Forms.ConvertEventArgs.Value property of the System.Windows.Forms.ConvertEventArgs object to the formatted value in the System.Windows.Forms.Binding.Format event. You must consequently unformat the displayed value in the System.Windows.Forms.Binding.Parse event.","q) ToString","[C#] public event ConvertEventHandler Parse;","[C++] public: _event ConvertEventHandler* Parse;","[VB] Public Event Parse As ConvertEventHandler","Description","Occurs when the value of a data-bound control changes.","The System.Windows.Forms.Binding.Format and System.Windows.Forms.Binding.Parse events allow you to create custom formats for displaying data. For example, if the data in a table is of type System.Decimal, you can display the data in the local currency format by setting the System.Windows.Forms.ConvertEventArgs.Value property of the System.Windows.Forms.ConvertEventArgs object to the formatted value in the System.Windows.Forms.Binding.Format event. You must consequently unformat the displayed value in the System.Windows.Forms.Binding.Parse event.","r) OnFormat","[C#] protected virtual void OnFormat(ConvertEventArgs cevent);","[C++] protected: virtual void OnFormat(ConvertEventArgs* cevent);","[VB] Overridable Protected Sub OnFormat(ByVal cevent As ConvertEventArgs)","[JScript] protected function OnFormat(cevent: ConvertEventArgs);","Description","Raises the System.Windows.Forms.Binding.Format event.","Raising an event invokes the event handler through a delegate. For more information, see. A System.Windows.Forms.ConvertEventArgs that contains the event data.","s) OnParse","[C#] protected virtual void OnParse(ConvertEventArgs cevent);","[C++] protected: virtual void OnParse(ConvertEventArgs* cevent);","[VB] Overridable Protected Sub OnParse(ByVal cevent As ConvertEventArgs)","[JScript] protected function OnParse(cevent: ConvertEventArgs);","Description","Raises the System.Windows.Forms.Binding.Parse event.","Raising an event invokes the event handler through a delegate. For more information, see. A System.Windows.Forms.ConvertEventArgs that contains the event data.","BindingContext class (System.Windows.Forms)","a) ToString","Description","Manages the collection of System.Windows.Forms.BindingManagerBase objects for any object that inherits from the System.Windows.Forms.Control class.","Each object that inherits from the System.Windows.Forms.Control class can have a single System.Windows.Forms.BindingContext object. That System.Windows.Forms.BindingContext manages the System.Windows.Forms.BindingManagerBase objects for that control and any contained controls. Use the System.Windows.Forms.BindingContext to create or return the System.Windows.Forms.BindingManagerBase for a data source used by the contained data-bound controls. Most commonly, you use the System.Windows.Forms.Form class's System.Windows.Forms.BindingContext to return System.Windows.Forms.BindingManagerBase objects for the data-bound controls on the form. If you use a container control, such as a System.Windows.Forms.GroupBox, System.Windows.Forms.Panel, or System.Windows.Forms.TabControl, to contain data-bound controls, you can create a System.Windows.Forms.BindingContext for just that container control and its controls. This allows each part of your form to be managed by its own System.Windows.Forms.BindingManagerBase object. See the System.Windows.Forms.BindingContext.#ctor constructor for more details on creating multiple System.Windows.Forms.BindingManagerBase objects for the same data source.","b) BindingContext","Example Syntax:","c) ToString","[C#] public BindingContext( );","[C++] public: BindingContext( );","[VB] Public Sub New( )","[JScript] public function BindingContext( );","Description","Initializes a new instance of the System.Windows.Forms.BindingContext class.","Create a new System.Windows.Forms.BindingContext and set it to the System.Windows.Forms.BindingContext property of an object that inherits from System.Windows.Forms.Control when you want to have multiple System.Windows.Forms.BindingManagerBase instances for the same data source.","d) IsReadOnly","e) ToString","[C#] public bool IsReadOnly {get;}","[C++] public: _property bool get_IsReadOnly( );","[VB] Public ReadOnly Property IsReadOnly As Boolean","[JScript] public function get IsReadOnly( ): Boolean;","Description","Gets a value indicating whether the collection is read-only.","The property is derived from System.Collections.ICollection, and is overridden to always return false.","f) Item","g) ToString","[C#] public BindingManagerBase this[object dataSource] {get;}","[C++] public: _property BindingManagerBase* get_Item(Object* datasource);","[VB] Public Default ReadOnly Property Item(ByVal dataSource As Object) As BindingManagerBase","[JScript] returnValue=BindingContextObject.Item(dataSource); Gets a particular System.Windows.Forms.BindingManagerBase","Description","Gets the System.Windows.Forms.BindingManagerBase that is associated with the specified data source.","Use this constructor if the System.Windows.Forms.BindingManagerBase you want does not require a navigation path. For example, if the System.Windows.Forms.BindingManagerBase manages a set of System.Windows.Forms.Binding objects that use an System.Collections.ArrayList or System.Data.DataTable as the System.Windows.Forms.Binding.DataSource, no navigation path is required. The data source associated with a particular System.Windows.Forms.BindingManagerBase.","h) Item","i) ToString","[C#] public BindingManagerBase this[object dataSource, string dataMember] {get;}","[C++] public: _property BindingManagerBase* get_Item(Object* dataSource, String* dataMember);","[VB] Public Default ReadOnly Property Item(ByVal dataSource As Object, ByVal dataMember As String) As BindingManagerBase","[JScript] returnValue=BindingContextObject.Item(dataSource, dataMember);","Description","Gets the System.Windows.Forms.BindingManagerBase that is associated with the specified data source and data member.","Use this constructor when the System.Windows.Forms.BindingManagerBase manages a set of System.Windows.Forms.Binding objects for which the data source contains multiple objects. For example, a System.Data.DataSet can contain several System.Data.DataTable objects linked by System.Data.DataRelation objects. In such a case, the navigation path is required to enable the System.Windows.Forms.BindingContext to return the correct System.Windows.Forms.BindingManagerBase. The data source associated with a particular System.Windows.Forms.BindingManagerBase. A navigation path containing the information that resolves to a specific System.Windows.Forms.BindingManagerBase.","j) ToString","[C#] public event CollectionChangeEventHandler CollectionChanged;","[C++] public: _event CollectionchangeEventHandler* CollectionChanged;","[VB] Public Event CollectionChanged As CollectionChangeEventHandler","Description","Occurs when the collection has changed.","For more information about handling events, see.","k) Add","[C#] protected internal void Add(object dataSource, BindingManagerBase listManager);","[C++] protected public: void Add(Object* dataSource, BindingManagerBase* listManager);","[VB] Protected Friend Dim Sub Add(ByVal dataSource As Object, ByVal listManager As BindingManagerBase)","[JScript] package function Add(dataSource: Object, listManager: BindingManagerBase);","Description","Adds the System.Windows.Forms.BindingManagerBase associated with a specific data source to the collection. The System.Object associated with the System.Windows.Forms.BindingManagerBase. The System.Windows.Forms.BindingManagerBase to add.","l) AddCore","[C#] protected virtual void AddCore(object dataSource, BindingManagerBase listManager);","[C++] protected: virtual void AddCore(Object* dataSource, BindingManagerBase* listManager);","[VB] Overridable Protected Sub AddCore(ByVal dataSource As Object, ByVal listManager As BindingManagerBase)","[JScript] protected function AddCore(dataSource: Object, listManager: BindingManagerBase);","Description","m) Clear","[C#] protected internal void Clear( );","[C++] protected public: void Clear( );","[VB] Protected Friend Dim Sub Clear( )","[JScript] package function Clear( );","Description","Clears the collection of any System.Windows.Forms.BindingManagerBase objects.","n) ClearCore","[C#] protected virtual void ClearCore( );","[C++] protected: virtual void ClearCore( );","[VB] Overridable Protected Sub ClearCore( )","[JScript] protected function ClearCore( );","Description","Clears the collection.","o) Contains","[C#] public bool Contains(object dataSource);","[C++] public: bool Contains(Object* dataSource);","[VB] Public Function Contains(ByVal dataSource As Object) As Boolean","[JScript] public function Contains(dataSource: Object): Boolean; Gets a value indicating whether the System.Windows.Forms.BindingContext contains the specified System.Windows.Forms.BindingManagerBase","Description","Gets a value indicating whether the System.Windows.Forms.BindingContext contains the System.Windows.Forms.BindingManagerBase associated with the specified data source.","Return Value: true, if the System.Windows.Forms.BindingContext contains the specified System.Windows.Forms.BindingManagerBase; otherwise, false.","See the System.Windows.Forms.Binding class for a list of possible data sources and details on creating bindings between controls and data sources. An System.Object that represents the data source.","p) Contains","[C#] public bool Contains(object dataSource, string dataMember);","[C++] public: bool Contains(Object* dataSource, String* dataMember);","[VB] Public Function Contains(ByVal dataSource As Object, ByVal dataMember As String) As Boolean","[JScript] public function Contains(dataSource: Object, dataMember: String): Boolean;","Description","Gets a value indicating whether the System.Windows.Forms. BindingContext contains the System.Windows.Forms.BindingManagerBase associated with the specified data source and data member.","Return Value: true if the System.Windows.Forms.BindingContext contains the specified System.Windows.Forms.BindingManagerBase; otherwise, false.","See the System.Windows.Forms.Binding class for a list of possible data sources and for details on creating bindings between controls and data sources. An System.Object that represents the data source. The information needed to resolve to a specific System.Windows.Forms.BindingManagerBase.","q) OnCollectionChanged","[C#] protected virtual void OnCollectionChanged(CollectionChangeEventArgs ccevent);","[C++] protected: virtual void OnCollectionChanged(CollectionChangeEventArgs* ccevent);","[VB] Overridable Protected Sub OnCollectionChanged(ByVal ccevent As CollectionChangeEventArgs)","[JScript] protected function OnCollectionChanged(ccevent CollectionChangeEventArgs);","Description","This method is called whenever the collection changes. Overriders of this method should call the base implementation of this method. The event information.","r) Remove","[C#] protected internal void Remove(object dataSource);","[C++] protected public: void Remove(Object* dataSource);","[VB] Protected Friend Dim Sub Remove(ByVal dataSource As Object)","[JScript] package function Remove(dataSource: Object);","Description","Deletes the System.Windows.Forms.BindingManagerBase associated with the specified data source. The data source associated with the System.Windows.Forms.BindingManagerBase to remove.","s) RemoveCore","[C#] protected virtual void RemoveCore(object dataSource);","[C++] protected: virtual void RemoveCore(Object* dataSource);","[VB] Overridable Protected Sub RemoveCore(ByVal dataSource As Object)","[JScript] protected function RemoveCore(dataSource: Object);","Description","t) ICollection.CopyTo","[C#] void ICollection.CopyTo(Array ar, int index);","[C++] void ICollection::CopyTo(Array* ar, int index);","[VB] Sub CopyTo(ByVal ar As Array, ByVal index As Integer) Implements ICollection.CopyTo","[JScript] function ICollection.CopyTo(ar: Array, index: int);","u) IEnumerable.GetEnumerator","[C#] IEnumerator IEnumerable.GetEnumerator( );","[C++] IEnumerator* IEnumerable::GetEnumerator( );","[VB] Function GetEnumerator( ) As IEnumerator Implements IEnumerable.GetEnumerator","[JScript] function IEnumerable.GetEnumerator( ): IEnumerator;","BindingManagerBase class (System.Windows.Forms)","a) ToString","Description","Manages all System.Windows.Forms.Binding objects that are bound to the same data source and data member. This class is abstract.","The System.Windows.Forms.BindingManagerBase enables the synchronization of data-bound controls on a Windows form that are bound to the same data source. (To simple-bind a control to a data source, add a System.Windows.Forms.Binding object to the control's System.Windows.Forms.ControlBindingsCollection, which is accessed through the System.Windows.Forms.Control.DataBindings property). For example, suppose that a form contains two System.Windows.Forms.TextBox controls that are bound to the same data source but to different columns (The data source might be a System.Data.DataTable that contains customer names, while the columns might contain the first name and last names). The two controls must be synchronized in order to display the correct first and last names together for the same customer. The System.Windows.Forms.CurrencyManager, which inherits from the System.Windows.Forms.BindingManagerBase class, accomplishes this synchronization by maintaining a pointer to the current item for the list. The System.Windows.Forms.TextBox controls are bound to the current item so they display the information for the same row. When the current item changes, the System.Windows.Forms.CurrencyManager notifies all the bound controls so that they can refresh their data. Furthermore, you can set the System.Windows.Forms.BindingManagerBase.Position property to specify the row in the System.Data.DataTable that the controls are point to. To determine how many rows exist in the list, use the System.Windows.Forms.BindingManagerBase.Count property.","b) ToString","[C#] protected EventHandler onCurrentChangedHandler;","[C++] protected: EventHandler* onCurrentChangedHandler;","[VB] Protected onCurrentChangedHandler As EventHandler","[JScript] protected var onCurrentChangedHandler: EventHandler;","Description","Specifies the event handler for the System.Windows.Forms.BindingManagerBase.CurrentChanged event.","c) ToString","[C#] protected EventHandler onPositionChangedHandler;","[C++] protected: EventHandler* onPositionChangedHandler;","[VB] Protected onPositionChangedHandler As EventHandler","[JScript] protected var onPositionChangedHandler: EventHandler;","Description","Specifies the event handler for the System.Windows.Forms.BindingManagerBase.PositionChanged event.","d) BindingManagerBase","Example Syntax:","e) ToString","[C#] public BindingManagerBase( );","[C++] public: BindingManagerBase( );","[VB] Public Sub New( )","[JScript] public function BindingManagerBase( );","Description","Initializes a new instance of the System.Windows.Forms.BindingManagerBase class.","f) Bindings","g) ToString","[C#] public BindingsCollection Bindings {get;}","[C++] public: _property BindingsCollection* get_Bindings( );","[VB] Public ReadOnly Property Bindings As BindingsCollection","[JScript] public function get Bindings( ): BindingsCollection;","Description","Gets the collection of bindings being managed.","h) Count","i) ToString","[C#] public abstract int Count {get;}","[C++] public: _property virtual int get_Count( )=0;","[VB] MustOverride Public ReadOnly Property Count As Integer","[JScript] public abstract function get Count( ): int;","Description","When overridden in a derived class, gets the number of rows managed by the System.Windows.Forms.BindingManagerBase.","Use the System.Windows.Forms.BindingManagerBase.Count property to determine the last item in the list of rows maintained by the System.Windows.Forms.BindingManagerBase. To go to the last item, set the System.Windows.Forms.BindingManagerBase.Position property to the System.Windows.Forms.BindingManagerBase.Count property value minus one.","j) Current","k) ToString","[C#] public abstract object Current {get;}","[C++] public: _property virtual Object* get_Current( )=0;","[VB] MustOverride Public ReadOnly Property Current As Object","[JScript] public abstract function get Current( ): Object;","Description","When overridden in a derived class, gets the current object.","The System.Windows.Forms.BindingManagerBase.Current object contains the value of the current item in the data source. To use the value of the current item, you must cast the item to the System.Type of the object contained by the System.Windows.Forms.Binding.DataSource. For example, a System.Data. DataTable contains System. Data. Data RowView objects. To determine the type of the current object, use the System.Object.GetType and System.Type.ToString methods.","l) Position","m) ToString","[C#] public abstract int Position {get; set;}","[C++] public: _property virtual int get_Position( )=0; public: _property virtual void set_Position(int)=0;","[VB] MustOverride Public Property Position As Integer","[JScript] public abstract function get Position( ): int; public abstract function set Position(int);","Description","When overridden in a derived class, gets or sets the position in the underlying list that controls bound to this data source point to.","Use the System.Windows.Forms.BindingManagerBase.Position to iterate through the underlying list maintained by the System.Windows.Forms.BindingManagerBase. To go to the first item, set the System.Windows.Forms.BindingManagerBase.Position to zero. To go to the end of the list, set the System.Windows.Forms.BindingManagerBase.Position to the value of the System.Windows.Forms.BindingManagerBase.Count property minus one.","n) ToString","[C#] public event EventHandler CurrentChanged;","[C++] public: _event EventHandler* CurrentChanged;","[VB] Public Event CurrentChanged As EventHandler","Description","Occurs when the bound value changes.","For more information about handling events, see.","o) ToString","[C#] public event EventHandler PositionChanged;","[C++] public: _event EventHandler* PositionChanged;","[VB] Public Event PositionChanged As EventHandler","Description","Occurs when the System.Windows.Forms.BindingManagerBase.Position has changed.","For more information about handling events, see.","p) AddNew","[C#] public abstract void AddNew( );","[C++] public: virtual void AddNew( )=0;","[VB] MustOverride Public Sub AddNew( )","[JScript] public abstract function AddNew( );","Description","When overridden in a derived class, adds a new item to the underlying list.","q) CancelCurrentEdit","[C#] public abstract void CancelCurrentEdit( );","[C++] public: virtual void CancelCurrentEdit( )=0;","[VB] MustOverride Public Sub CancelCurrentEdit( )","[JScript] public abstract function CancelCurrentEdit( );","Description","When overridden in a derived class, cancels the current edit.","This method is supported only if the data source implements the System.ComponentModel.IEditableObject interface. If the object does not implement the System.ComponentModel.IEditableObject interface, changes made to the data will not be discarded.","r) EndCurrentEdit","[C#] public abstract void EndCurrentEdit( );","[C++] public: virtual void EndCurrentEdit( )=0;","[VB] MustOverride Public Sub EndCurrentEdit( )","[JScript] public abstract function EndCurrentEdit( );","Description","When overridden in a derived class, ends the current edit.","This method is supported only if the data source implements the System.ComponentModel.IEditableObject interface. If the object does not implement the System.ComponentModel.IEditableObject interface, changes made to the data will not be discarded.","s) GetItemProperties","[C#] public abstract PropertyDescriptorCollection GetItemProperties( );","[C++] public: virtual PropertyDescriptorCollection* GetItemProperties( )=0;","[VB] MustOverride Public Function GetItemProperties( ) As PropertyDescriptorCollection","[JScript] public abstract function GetItemProperties( ) PropertyDescriptorCollection; Get or sets the collection of property descriptors for the binding.","Description","When overridden in a derived class, gets the collection of property descriptors for the binding.","Return Value: A System.ComponentModel.PropertyDescriptorCollection that represents the property descriptors for the binding.","t) GetItemProperties","[C#] protected internal virtual PropertyDescriptorCollection GetItemProperties(ArrayList dataSources, ArrayList listAccessors);","[C++] protected public: virtual PropertyDescriptorCollection* GetItemProperties(ArrayList* dataSources, ArrayList* listAccessors);","[VB] Overridable Protected Friend Dim Function GetItemProperties(ByVal dataSources As ArrayList, ByVal listAccessors As ArrayList) As PropertyDescriptorCollection","[JScript] package function GetItemProperties(dataSources: ArrayList, listAccessors: ArrayList): PropertyDescriptorCollection;","Description","Gets the collection of property descriptors for the binding using the specified System.Collections.ArrayList.","Return Value: A System.ComponentModel.PropertyDescriptorCollection that represents the property descriptors for the binding.","This method is used by developers creating data-bound controls. An System.Collections.ArrayList containing the data sources. An System.Collections.ArrayList containing the table's bound properties.","u) GetItemProperties","[C#] protected virtual PropertyDescriptorCollection GetItemProperties(Type listType, int offset, ArrayList dataSources, ArrayList listAccessors);","[C++] protected: virtual PropertyDescriptorCollection* GetItemProperties(Type* listType, int offset, ArrayList* dataSources, ArrayList* listAccessors);","[VB] Overridable Protected Function GetItemProperties(ByVal listType As Type, ByVal offset As Integer, ByVal dataSources As ArrayList, ByVal listAccessors As ArrayList) As PropertyDescriptorCollection","[JScript] protected function GetItemProperties(listType: Type, offset: int, dataSources: ArrayList, listAccessors: ArrayList): PropertyDescriptorCollection;","Description","Gets the collection of property descriptors for the items managed by this System.Windows.Forms.BindingManagerBase.","Return Value: A System.ComponentModel.PropertyDescriptorCollection that represents the property descriptors for the binding.","This overload is used by developers creating data-bound controls. The System.Type of the bound list. A counter used to recursively call the method. An System.Collections.ArrayList containing the data sources. An System.Collections.ArrayList containing the table's bound properties.","v) GetListName","[C#] protected internal abstract string GetListName(ArrayList listAccessors);","[C++] protected public: virtual String* GetListName(ArrayList* listAccessors)=0;","[VB] MustOverride Protected Friend Dim Function GetListName(ByVal listAccessors As ArrayList) As String","[JScript] package abstract function GetListName(listAccessors: ArrayList): String;","Description","When overridden in a derived class, gets the name of the list supplying the data for the binding.","Return Value: The name of the list supplying the data for the binding. An System.Collections.ArrayList containing the table's bound properties.","w) OnCurrentChanged","[C#] protected internal abstract void OnCurrentChanged(EventArgs e);","[C++] protected public: virtual void OnCurrentChanged(EventArgs* e)=0;","[VB] MustOverride Protected Friend Dim Sub OnCurrentChanged(ByVal e As EventArgs)","[JScript] package abstract function OnCurrentChanged(e: EventArgs);","Description","When overridden in a derived class, raises the System.Windows.Forms.BindingManagerBase.CurrentChanged event.","Raising an event invokes the event handler through a delegate. For more information, see. The System.EventArgs that contains the event data.","x) PullData","[C#] protected void PullData( );","[C++] protected: void PullData( );","[VB] Protected Sub PullData( )","[JScript] protected function PullData( );","Description","Pulls data from the data-bound control into the data source.","y) PushData","[C#] protected void PushData( );","[C++] protected: void PushData( );","[VB] Protected Sub PushData( )","[JScript] protected function PushData( );","Description","Pushes data from the data source into the data-bound control.","z) RemoveAt","[C#] public abstract void RemoveAt(int index);","[C++] public: virtual void RemoveAt(int index)=0;","[VB] MustOverride Public Sub RemoveAt(ByVal index As Integer)","[JScript] public abstract function RemoveAt(index: int);","Description","When overridden in a derived class, deletes the row at the specified index from the underlying list.","The System.Windows.Forms.BindingManagerBase.RemoveAt(System.Int32) method relies on the underlying data source to determine how the method behaves. (See the System.Windows.Forms.Binding class for a list of supported data sources). For classes that implement System.Collections.IList, System.ComponentModel.IBindingList, System.ComponentModel.ITypedList, as well as strongly typed classes that implement System.Collections.IList, the System.Windows.Forms.BindingManagerBase.RemoveAt(System.Int32) method actually deletes the row in the underlying list instead of removing it. The index of the row to delete.","aa) ResumeBinding","[C#] public abstract void ResumeBinding( );","[C++] public: virtual void ResumeBinding( )=0;","[VB] MustOverride Public Sub ResumeBinding( )","[JScript] public abstract function ResumeBinding( );","Description","When overridden in a derived class, resumes data binding.","System.Windows.Forms.BindingManagerBase.SuspendBinding and System.Windows.Forms.BindingManagerBase.ResumeBinding are two methods that allow the temporary suspension and resumption of data binding. You would typically suspend data binding if the user must be allowed to make several edits to data fields before validation occurs. For example, if one field must be changed in accordance with a second, but where validating the first field would cause the second field to be in error.","bb) SuspendBinding","[C#] public abstract void SuspendBinding( );","[C++] public: virtual void SuspendBinding( )=0","[VB] MustOverride Public Sub SuspendBinding( )","[JScript] public abstract function SuspendBinding( );","Description","When overridden in a derived class, suspends data binding.","System.Windows.Forms.BindingManagerBase.SuspendBinding and System.Windows.Forms.BindingManagerBase.ResumeBinding are two methods that allow the temporary suspension and resumption of data binding. You would typically suspend data binding if the user must be allowed to make several edits to data fields before validation occurs. For example, if one field must be changed in accordance with a second, but where validating the first field would cause the second field to be in error.","cc) UpdateIsBinding","[C#] protected abstract void UpdateIsBinding( );","[C++] protected: virtual void UpdateIsBinding( )=0;","[VB] MustOverride Protected Sub UpdateIsBinding( )","[JScript] protected abstract function UpdateIsBinding( );","Description","When overridden in a derived class, updates the binding.","BindingMemberInfo structure (System.Windows.Forms)","a) UpdateIsBinding","Description","Contains information that enables a System.Windows.Forms.Binding to resolve a data binding to either the property of an object or the property of the current object in a list of objects.","The System.Windows.Forms.BindingMemberInfo is returned by the System.Windows.Forms.Binding.BindingMemberInfo property of the System.Windows.Forms.Binding class.","b) BindingMemberInfo","Example Syntax:","c) UpdateIsBinding","[C#] public BindingMemberInfo(string dataMember);","[C++] public: BindingMemberInfo(String* dataMember);","[VB] Public Sub New(ByVal dataMember As String)","[JScript] public function BindingMemberInfo(dataMember: String);","Description","Initializes a new instance of the System.Windows.Forms.BindingMemberInfo class.","A System.Windows.Forms.BindingMemberInfo object is created automatically when you call the System.Windows.Forms.Binding.#ctor constructor with a control-property name, data source, and navigation path. The dataMember parameter contains the System.Windows.Forms.BindingMemberInfo.BindingMember string. A navigation path that resolves to either the property of an object or the property of the current object in a list of objects.","d) BindingField","e) UpdateIsBinding","[C#] public string BindingField {get;}","[C++] public: _property String* get_BindingField( );","[VB] Public ReadOnly Property BindingField As String","[JScript] public function get BindingField( ): String;","Description","Gets the data-bound object's property name.","The System.Windows.Forms.BindingMemberInfo.BindingField is the last item found in the navigation path returned by the System.Windows.Forms.BindingMemberInfo.BindingMember property. For example, if the navigation path is \u201cCustomers.custToOrders.OrderDate\u201d, the System.Windows.Forms.BindingMemberInfo.BindingField returns \u201cOrderDate\u201d which names the data-bound property of the data source.","f) BindingMember","g) UpdateIsBinding","[C#] public string BindingMember {get;}","[C++] public: _property String* get_BindingMember( );","[VB] Public ReadOnly Property BindingMember As String","[JScript] public function get BindingMember( ): String;","Description","Gets the information that is used to specify the data-bound object's property name.","A System.Windows.Forms.BindingMemberInfo object is created automatically when you call the System.Windows.Forms.Binding.#ctor constructor with a control-property name, data source, and navigation path. The dataMemberparameter contains the System.Windows.Forms.BindingMemberInfo.BindingMember string.","h) BindingPath","i) UpdateIsBinding","[C#] public string BindingPath {get;}","[C++] public: _property String* get_BindingPath( );","[VB] Public ReadOnly Property BindingPath As String","[JScript] public function get BindingPath( ): String;","Description","Gets the property name, or the period-delimited hierarchy of property names, that precedes the data-bound object's property name.","j) Equals","[C#] public override bool Equals(object otherObject);","[C++] public: bool Equals(Object* otherObject);","[VB] Overrides Public Function Equals(ByVal otherObject As Object) As Boolean","[JScript] public override function Equals(otherObject: Object): Boolean;","Description","k) GetHashCode","[C#] public override int GetHashCode( );","[C++] public: int GetHashCode( );","[VB] Overrides Public Function GetHashCode( ) As Integer","[JScript] public override function GetHashCode( ): int;","Description","BindingsCollection class (System.Windows.Forms)","a) ToString","Description","Represents a collection of System.Windows.Forms.Binding objects for a control.","Simple data binding is accomplished by adding System.Windows.Forms.Binding objects to a System.Windows.Forms.BindingsCollection. Any object that inherits from the System.Windows.Forms.Control class can access the System.Windows.Forms.BindingsCollection through the System.Windows.Forms.Control.DataBindings property. For a list of Windows controls that support data binding, see the System.Windows.Forms.Binding class.","b) Count","c) ToString","[C#] public override int Count {get;}","[C++] public: _property virtual int get_Count( );","[VB] Overrides Public ReadOnly Property Count As Integer","[JScript] public function get Count( ): int;","Description","Gets the total number of bindings in the collection.","d) IsReadOnly","e) IsSynchronized","f) Item","g) ToString","Description","Gets the System.Windows.Forms.Binding at the specified index. The index of the System.Windows.Forms.Binding to find.","h) List","i) ToString","[C#] protected override ArrayList List {get;}","[C++] protected: _property virtual ArrayList* get_List( );","[VB] Overrides Protected ReadOnly Property List As ArrayList","[JScript] protected function get List( ): ArrayList;","Description","Gets the bindings in the collection as an object.","j) SyncRoot","k) ToString","Description","Occurs when the collection has changed.","For more information about handling events, see.","l) Add","[C#] protected internal void Add(Binding binding);","[C++] protected public: void Add(Binding* binding);","[VB] Protected Friend Dim Sub Add(ByVal binding As Binding)","[JScript] package function Add(binding: Binding);","Description","Adds the specified binding to the collection. The System.Windows.Forms.Binding to add to the collection.","m) AddCore","[C#] protected virtual void AddCore(Binding dataBinding);","[C++] protected: virtual void Addcore(Binding* dataBinding);","[VB] Overridable Protected Sub AddCore(ByVal dataBinding As Binding)","[JScript] protected function AddCore(dataBinding: Binding);","Description","Adds a System.Windows.Forms.Binding to the collection.","n) Clear","[C#] protected internal void Clear( );","[C++] protected public: void Clear( );","[VB] Protected Friend Dim Sub Clear( )","[JScript] package function Clear( );","Description","o) ClearCore","[C#] protected virtual void ClearCore( );","[C++] protected: virtual void ClearCore( );","[VB] Overridable Protected Sub ClearCore( )","[JScript] protected function ClearCore( );","Description","Clears the collection of any members.","p) OnCollectionChanged","[C#] protected virtual void OnCollectionChanged(CollectionChangeEventArgs ccevent);","[C++] protected: virtual void OnCollectionChanged(CollectionChangeEventArgs* ccevent);","[VB] Overridable Protected Sub OnCollectionChanged(ByVal ccevent As CollectionChangeEventArgs)","[JScript] protected function OnCollectionChanged(ccevent: CollectionChangeEventArgs);","Description","Raises the System.Windows.Forms.BindingsCollection.CollectionChanged event.","Raising an event invokes the event handler through a delegate. For more information, see. A System.ComponentModel.CollectionChangeEventArgs that contains the event data.","q) Remove","[C#] protected internal void Remove(Binding binding);","[C++] protected public: void Remove(Binding* binding);","[VB] Protected Friend Dim Sub Remove(ByVal binding As Binding)","[JScript] package function Remove(binding: Binding);","Description","Deletes the specified binding from the collection. The Binding to remove from the collection.","r) RemoveAt","[C#] protected internal void RemoveAt(int index);","[C++] protected public: void RemoveAt(int index);","[VB] Protected Friend Dim Sub RemoveAt(ByVal index As Integer)","[JScript] package function RemoveAt(index: int);","Description","Deletes the binding from the collection at the specified index. The index of the System.Windows.Forms.Binding to remove.","s) RemoveCore","[C#] protected virtual void RemoveCore(Binding dataBinding);","[C++] protected: virtual void RemoveCore(Binding* dataBinding);","[VB] Overridable Protected Sub RemoveCore(ByVal dataBinding As Binding)","[JScript] protected function RemoveCore(dataBinding: Binding);","Description","Removes the specified System.Windows.Forms.Binding from the collection. The System.Windows.Forms.Binding object to remove.","t) ShouldSerializeMyAll","[C#] protected internal bool ShouldSerializeMyAll( );","[C++] protected public: bool ShouldSerializeMyAll( );","[VB] Protected Friend Dim Function ShouldSerializeMyAll( ) As Boolean","[JScript] package function ShouldSerializeMyAll( ): Boolean;","Description","Gets a value that indicates whether the collection should be serialized.","Return Value: true if the collection count is greater than zero; otherwise, false","BootMode enumeration (System.Windows.Forms)","a) ToString","Description","Specifies the mode the computer was started in.","This enumeration is used by the System.Windows.Forms.SystemInformation.BootMode property in the System.Windows.Forms.SystemInformation class.","b) ToString","[C#] public const BootMode FailSafe;","[C++] public: const BootMode FailSafe;","[VB] Public Const FailSafe As BootMode","[JScript] public var FailSafe: BootMode;","Description","The computer was started by using only the basic files and drivers.","c) ToString","[C#] public const BootMode FailSafeWithNetwork;","[C++] public: const BootMode FailSafeWithNetwork;","[VB] Public Const FailSafeWithNetwork As BootMode","[JScript] public var FailSafeWithNetwork: BootMode;","Description","The computer was started by using the basic files, drivers, and services necessary to start networking.","d) ToString","[C#] public const BootMode Normal;","[C++] public: const BootMode Normal;","[VB] Public Const Normal As BootMode","[JScript] public var Normal: BootMode;","Description","The computer was started in standard mode.","Border3DSide enumeration (System.Windows.Forms)","a) ToString","Description","Specifies the sides of a rectangle to apply a three-dimensional border to.","Use the members of this enumeration with the System.Windows.Forms.ControlPaint.DrawBorder3D(System.Drawing. Graphics, System.Drawing.Rectangle) method of the System.Windows.Forms.ControlPaint class.","b) ToString","[C#] public const Border3DSide All;","[C++] public: const Border3DSide All;","[VB] Public Const All As Border3DSide","[JScript] public var All: Border3DSide;","Description","A three-dimensional border on all four edges and fill the middle of the rectangle with the color defined for three-dimensional controls.","c) ToString","[C#] public const Border3DSide Bottom;","[C++] public: const Border3DSide Bottom;","[VB] Public Const Bottom As Border3DSide","[JScript] public var Bottom: Border3DSide;","Description","A three-dimensional border on the bottom side of the rectangle.","d) ToString","[C#] public const Border3DSide Left;","[C++] public: const Border3DSide Left;","[VB] Public Const Left As Border3DSide","[JScript] public var Left: Border3DSide;","Description","A three-dimensional border on the left edge of the control.","e) ToString","[C#] public const Border3DSide Middle;","[C++] public: const Border3DSide Middle;","[VB] Public Const Middle As Border3DSide","[JScript] public var Middle: Border3DSide;","Description","The interior of the rectangle is filled with the color defined for three-dimensional controls instead of the background color for the form.","f) ToString","[C#] public const Border3DSide Right;","[C++] public: const Border3DSide Right;","[VB] Public Const Right As Border3DSide","[JScript] public var Right: Border3DSide;","Description","A three-dimensional border on the right side of the rectangle.","g) ToString","[C+] public const Border3DSide Top;","[C++] public: const Border3DSide Top;","[VB] Public Const Top As Border3DSide","[JScript] public var Top: Border3DSide;","Description","A three-dimensional border on the top edge of the rectangle.","Border3DStyle enumeration (System.Windows.Forms)","a) ToString","Description","Specifies the style of a three-dimensional border.","Use the members of this enumeration when calling the System.Windows.Forms.ControlPaint.DrawBorder3D(System.Drawing. Graphics, System.Drawing.Rectangle) method of the System.Windows.Forms.ControlPaint class.","b) ToString","[C#] public const Border3DStyle Adjust;","[C++] public: const Border3DStyle Adjust;","[VB] Public Const Adjust As Border3DStyle","[JScript] public var Adjust: Border3DStyle;","Description","The border is drawn outside the specified rectangle, preserving the dimensions of the rectangle for drawing.","c) ToString","[C#] public const Border3DStyle Bump;","[C++] public: const Border3DStyle Bump;","[VB] Public Const Bump As Border3DStyle","[JScript] public var Bump: Border3DStyle;","Description","The inner and outer edges of the border have a raised appearance.","d) ToString","[C#] public const Border3DStyle Etched;","[C++] public: const Border3DStyle Etched;","[VB] Public Const Etched As Border3DStyle","[JScript] public var Etched: Border3DStyle;","Description","The inner and outer edges of the border have an etched appearance.","e) ToString","[C#] public const Border3DStyle Flat;","[C++] public: const Border3DStyle Flat;","[VB] Public Const Flat As Border3DStyle","[JScript] public var Flat: Border3DStyle;","Description","The border has no three-dimensional effects.","f) ToString","[C#] public const Border3DStyle Raised;","[C++] public: const Border3DStyle Raised;","[VB] Public Const Raised As Border3DStyle","[JScript] public var Raised: Border3DStyle;","Description","The border has raised inner and outer edges.","g) ToString","[C#] public const Border3DStyle RaisedInner;","[C++] public: const Border3DStyle RaisedInner;","[VB] Public Const RaisedInner As Border3DStyle","[JScript] public var RaisedInner: Border3DStyle;","Description","The border has a raised inner edge and no outer edge.","h) ToString","[C#] public const Border3DStyle RaisedOuter;","[C++] public: const Border3DStyle RaisedOuter;","[VB] Public Const RaisedOuter As Border3DStyle","[JScript] public var RaisedOuter: Border3DStyle;","Description","The border has a raised outer edge and no inner edge.","i) ToString","[C#] public const Border3DStyle Sunken;","[C++] public: const Border3DStyle Sunken;","[VB] Public Const Sunken As Border3DStyle","[JScript] public var Sunken: Border3DStyle;","Description","The border has sunken inner and outer edges.","j) ToString","[C#] public const Border3DStyle SunkenInner;","[C++] public: const Border3DStyle SunkenInner;","[VB] Public Const SunkenInner As Border3DStyle","[JScript] public var SunkenInner: Border3DStyle;","Description","The border has a sunken inner edge and no outer edge.","k) ToString","[C#] public const Border3DStyle SunkenOuter;","[C++] public: const Border3DStyle SunkenOuter;","[VB] Public Const SunkenOuter As Border3DStyle","[JScript] public var SunkenOuter: Border3DStyle;","Description","The border has a sunken outer edge and no inner edge.","BorderStyle enumeration (System.Windows.Forms)","a) ToString","Description","Specifies the border style for a control.","Use the members of this enumeration to set the border style for controls that have a changeable border.","b) ToString","[C#] public const BorderStyle Fixed3D;","[C++] public: const BorderStyle Fixed3D;","[VB] Public Const Fixed3D As BorderStyle","[JScript] public var Fixed3D: BorderStyle;","Description","A three-dimensional border.","c) ToString","[C#] public const BorderStyle FixedSingle;","[C++] public: const BorderStyle FixedSingle;","[VB] Public Const FixedSingle As BorderStyle","[JScript] public var FixedSingle: BorderStyle;","Description","A single-line border.","d) ToString","[C#] public const BorderStyle None;","[C++] public: const BorderStyle None;","[VB] Public Const None As BorderStyle","[JScript] public var None: BorderStyle;","Description","No border.","BoundsSpecified enumeration (System.Windows.Forms)","a) ToString","Description","Specifies the bounds of the control to use when defining a control's size and position.","Use the members of this enumeration when calling the System.Windows.Forms.Control.SetBoundsCore(System.Int32, System. Int32, System.Int32, System.Int32, System.Windows.Forms.BoundsSpecified) and System.Windows.Forms.Control.SetBounds(System.Int32, System.Int32, System.Int32, System.Int32) methods of the System.Windows.Forms.Control class.","b) ToString","[C#] public const BoundsSpecified All;","[C++] public: const BoundsSpecified All;","[VB] Public Const All As BoundsSpecified","[JScript] public var All: BoundsSpecified;","Description","Both System.Windows.Forms.Control.Location and System.Windows.Forms.Control.Size property values are defined.","c) ToString","[C#] public const BoundsSpecified Height;","[C++] public: const BoundsSpecified Height;","[VB] Public Const Height As BoundsSpecified","[JScript] public var Height: BoundsSpecified;","Description","Specifies the height of the control is defined.","d) ToString","[C#] public const BoundsSpecified Location;","[C++] public: const BoundsSpecified Location;","[VB] Public Const Location As BoundsSpecified","[JScript] public var Location: BoundsSpecified;","Description","Both X and Y coordinates of the control are defined.","e) ToString","[C#] public const BoundsSpecified None;","[C++] public: const BoundsSpecified None;","[VB] Public Const None As BoundsSpecified","[JScript] public var None: BoundsSpecified;","Description","No bounds are specified.","f) ToString","[C#] public const BoundsSpecified Size;","[C++] public: const BoundsSpecified Size;","[VB] Public Const Size As BoundsSpecified","[JScript] public var Size: BoundsSpecified;","Description","Both System.Windows.Forms.Control.Width and System.Windows.Forms.Control.Height property values of the control are defined.","g) ToString","[C#] public const BoundsSpecified Width;","[C++] public: const BoundsSpecified Width;","[VB] Public Const Width As BoundsSpecified","[JScript] public var Width: BoundsSpecified;","Description","Specifies the width of the control is defined.","h) ToString","[C#] public const BoundsSpecified X;","[C++] public: const BoundsSpecified X;","[VB] Public Const X As BoundsSpecified","[JScript] public var X: BoundsSpecified;","Description","Specifies the left edge of the control is defined.","i) ToString","[C#] public const BoundsSpecified Y;","[C++] public: const BoundsSpecified Y;","[VB] Public Const Y As BoundsSpecified","[JScript] public var Y: BoundsSpecified;","Description","Specifies the top edge of the control is defined.","Button class (System.Windows.Forms)","a) ToString","Description","Represents a Windows button control.","A System.Windows.Forms.Button may be clicked by using the mouse or the ENTER key if the button ha s focus.","b) Button","Example Syntax:","c) ToString","[C#] public Button( );","[C++] public: Button( );","[VB] Public Sub New( )","[JScript] public function Button( );","Description","Initializes a new instance of the System.Windows.Forms.Button class.","By default the System.Windows.Forms.Button displays no caption. To specify the caption text, set the System.Windows.Forms.Control.Text property.","d) AccessibilityObject","e) AccessibleDefaultActionDescription","f) AccessibleDescription","g) AccessibleName","h) AccessibleRole","i) AllowDrop","j) Anchor","k) BackColor","l) BackgroundImage","m) BindingContext","n) Bottom","o) Bounds","p) CanFocus","q) CanSelect","r) Capture","s) CausesValidation","t) ClientRectangle","u) ClientSize","v) CompanyName","w) Container","x) ContainsFocus","y) ContextMenu","z) Controls","aa) Created","bb) CreateParams","cc) ToString","Description","This is called when creating a window. Inheriting classes can override this to add extra functionality, but should not forget to first call base.CreateParams( ) to make sure the control continues to work correctly.","dd) Cursor","ee) DataBindings","ff) DefaultimeMode","gg) DefaultSize","hh) DesignMode","ii) DialogResult","jj) ToString","Description","Gets or sets a value that is returned to the parent form when the button is clicked.","If the value of this property is set to anything other than None, and if the parent form was displayed through the System.Windows.Forms.Form.ShowDialog method, clicking the button closes the parent form without your having to hook up any events. The form's System.Windows.Forms.Form.DialogResult property is then set to the System.Windows.Forms.Button.DialogResult of the button when the button is clicked.","kk) DisplayRectangle","ll) Disposing","mm) Dock","nn) Enabled","oo) Events","pp) FlatStyle","qq) Focused","rr) Font","ss) FontHeight","tt) ForeColor","uu) Handle","vv) HasChildren","ww) Height","xx) Image","yy) ImageAlign","zz) ImageIndex","aaa) ImageList","bbb) ImeMode","ccc) InvokeRequired","ddd) IsAccessible","eee) IsDefault","fff) IsDisposed","ggg) IsHandleCreated","hhh) Left","iii) Location","jjj) Name","kkk) Parent","lll) ProductName","mmm) ProductVersion","nnn) RecreatingHandle","ooo) Region","ppp) RenderRightToLeft","qqq) ResizeRedraw","rrr) Right","sss) RightToLeft","ttt) ShowFocusCues","uuu) ShowKeyboardCues","vvv) Site","www) Size","xxx) TabIndex","yyy) TabStop","zzz) Tag","aaaa) Text","bbbb) TextAlign","cccc) Top","dddd) TopLevelControl","eeee) Visible","ffff) Width","gggg) WindowTarget","hhhh) ToString","iiii) NotifyDefault","[C#] public virtual void NotifyDefault(bool value);","[C++] public: virtual void NotifyDefault(bool value);","[VB] Overridable Public Sub NotifyDefault(ByVal value As Boolean)","[JScript] public function NotifyDefault(value: Boolean);","Description","Notifies the System.Windows.Forms.Button whether it is the default button so that it can adjust its appearance accordingly.","This method is called by the parent form to notify the System.Windows.Forms.Button that it should be set as the default button and to allow it to adjust its appearance accordingly. Typically, a button that is the default button for a form has a thicker border than other buttons on the form. true if the button is to have the appearance of the default button; otherwise, false.","jjjj) OnClick","[C#] protected override void OnClick(EventArgs e);","[C++] protected: void OnClick(EventArgs* e);","[VB] Overrides Protected Sub OnClick(ByVal e As EventArgs)","[JScript] protected override function OnClick(e: EventArgs);","Description","This method actually raises the Click event. Inheriting classes should override this if they wish to be notified of a Click event. (This is far preferable to actually adding an event handler.) They should not, however, forget to call base.onClick(e); before exiting, to ensure that other recipients do actually get the event. This event has no additional information besides the sender.","kkkk) OnMouseUp","[C#] protected override void OnMouseUp(MouseEventArgs mevent);","[C++] protected: void OnMouseUp(MouseEventArgs* mevent);","[VB] Overrides Protected Sub OnMouseUp(ByVal mevent As MouseEventArgs)","[JScript] protected override function OnMouseUp(mevent: MouseEventArgs);","Description","Raises the System.Windows.Forms.ButtonBase.OnMouseUp(System.Windows.For ms.MouseEventArgs) event. A System.Windows.Forms.MouseEventArgs that contains the event data.","llll) Perform Click","[C#] public void PerformClick( );","[C++] public: _sealed void PerformClick( );","[VB] NotOverridable Public Sub PerformClick( )","[JScript] public function PerformClick( );","Description","Generates a System.Windows.Forms.Control.Click event for a button.","This method can be called to raise the System.Windows.Forms.Control.Click event.","mmmm) ProcessMnemonic","[C+] protected override bool ProcessMnemonic (char charCode);","[C++] protected: bool ProcessMnemonic(_wcar_t charCode);","[VB] Overrides Protected Function ProcessMnemonic(ByVal charCode As Char) As Boolean","[JScript] protected override function ProcessMnemonic(charCode: Char): Boolean;","Description","Lets a control process mnmemonic characters. Inheriting classes can override this to add extra functionality, but should not forget to call base.ProcessMnemonic(charCode); to ensure basic functionality remains unchanged.","Return Value: boolean a boolean indicating whether the mnmemonic was processsed [consumed] or not. The mnemonic character entered.","nnnn) ToString","[C#] public override string ToString( );","[C++] public: String* ToString( );","[VB] Overrides Public Function ToString( ) As String","[JScript] public override function ToString( ): String;","Description","Provides some interesting information for the Button control in String form.","Return Value: A String.","oooo) WndProc","[C#] protected override void WndProc(ref Message m);","[C++] protected: void WndProc(Message* m);","[VB] Overrides Protected Sub WndProc(ByRef m As Message)","[JScript] protected override function WndProc(m: Message);","Description","The button's window procedure. Inheriting classes can override this to add extra functionality, but should not forget to call base.wndProc(m); to ensure the button continues to function properly. A Windows Message Object.","ButtonBase class (System.Windows.Forms)","a) WndProc","Description","Implements the basic functionality common to button controls.","You do not typically inherit from System.Windows.Forms.ButtonBase. To create your own button class, inherit from the System.Windows.Forms.Button, System.Windows.Forms.CheckBox, or System.Windows.Forms.RadioButton class.","b) ButtonBase","Example Syntax:","c) WndProc","[C#] protected ButtonBase( );","[C++] protected: ButtonBase( );","[VB] Protected Sub New( )","[JScript] protected function ButtonBase( );","Description","Initializes a new instance of the System.Windows.Forms.ButtonBase class. is","d) AccessibilityObject","e) AccessibleDefaultActionDescription","f) AccessibleDescription","g) AccessibleName","h) AccessibleRole","i) AllowDrop","j) Anchor","k) BackColor","l) BackgroundImage","m) BindingContext","n) Bottom","o) Bounds","p) CanFocus","(q) CanSelect","r) Capture","s) CausesValidation","t) ClientRectangle","u) ClientSize","v) CompanyName","w) Container","x) ContainsFocus","y) ContextMenu","z) Controls","aa) Created","bb) CreateParams","cc) WndProc","Description","dd) Cursor","ee) DataBindings","ff) DefaultImeMode","gg) WndProc","Description","Gets the default Input Method Editor(IME) mode supported by this control.","As implemented in the System.Windows.Forms.ButtonBase class, this property always returns the System.Windows.Forms.ImeMode.Disable value.","hh) DefaultSize","ii) WndProc","[C#] protected override Size DefaultSize {get;}","[C++] protected: _property virtual Size get_DefaultSize( );","[VB] Overrides Protected ReadOnly Property DefaultSize As Size","[JScript] protected function get DefaultSize( ): Size;","Description","Deriving classes can override this to configure a default size for their control. This is more efficient than setting the size in the control's constructor.","jj) DesignMode","kk) DisplayRectangle","ll) Disposing","mm) Dock","nn) Enabled","oo) Events","pp) FlatStyle","qq) WndProc","Description","Gets or sets the flat style appearance of the button control.","When the System.Windows.Forms.ButtonBase.FlatStyle property of the System.Windows.Forms.RadioButton and System.Windows.Forms.CheckBox classes is set to System.Windows.Forms.FlatStyle.System, the control is drawn by the user's operating system and the check alignment is based upon the CheckAlign and System.Windows.Forms.ButtonBase.TextAlign property values. The CheckAlign property value is not changed, but the appearance of the control can be affected. The check box is horizontally aligned with either the left or right edge of the control (a left or center alignment appears left aligned, right remains unchanged), and vertically aligned the same as the descriptive text. For example, if you have a System.Windows.Forms.CheckBox control with a CheckAlign property value of System.Drawing.ContentAlignment.MiddleCenter and a System.Windows.Forms.ButtonBase.TextAlign property value of System.Drawing.ContentAlignment.TopRight, and the System.Windows.Forms.ButtonBase.FlatStyle property value is set to System.Windows.Forms.FlatStyle.System, the check box alignment will appear to be System.Drawing.ContentAlignment.TopLeft while the text alignment remains unchanged.","rr) Focused","ss) Font","tt) FontHeight","uu) ForeColor","vv) Handle","ww) HasChildren","xx) Height","yy) Image","zz) WndProc","Description","Gets or sets the image that is displayed on a button control.","When the System.Windows.Forms.ButtonBase.Image property is set, the System.Windows.Forms.ButtonBase.ImageList property will be set to null, and the System.Windows.Forms.ButtonBase.ImageIndex property will be set to its default, \u22121.","aaa) ImageAlign","bbb) WndProc","[C#] public ContentAlignment ImageAlign {get; set;}","[C++] public: _property ContentAlignment get_ImageAlign( ); public: _property void set_ImageAlign(ContentAlignment);","[VB] Public Property ImageAlign As ContentAlignment","[JScript] public function get ImageAlign( ): ContentAlignment; public function set ImageAlign(ContentAlignment);","Description","Gets or sets the alignment of the image on the button control.","ccc) ImageIndex","ddd) WndProc","[C#] public int ImageIndex {get; set;}","[C++] public: _property int get_ImageIndex( ); public: _property void set_ImageIndex(int);","[VB] Public Property ImageIndex As Integer","[JScript] public function get ImageIndex( ): int; public function set ImageIndex(int);","Description","Gets or sets the image list index value of the image displayed on the button control.","When the System.Windows.Forms.ButtonBase.ImageIndex or System.Windows.Forms.ButtonBase.ImageList properties are set, the System.Windows.Forms.ButtonBase.Image property is set to its default value, null","eee) ImageList","fff) WndProc","[C#] public ImageList ImageList {get; set;}","[C++] public: _property ImageList* get_ImageList( ); public: _property void set_ImageList(ImageList*);","[VB] Public Property ImageList As ImageList","[JScript] public function get ImageList( ): ImageList; public function set ImageList(ImageList);","Description","Gets or sets the System.Windows.Forms.ImageList that contains the System.Drawing.Image displayed on a button control.","When the System.Windows.Forms.ButtonBase.ImageList or System.Windows.Forms.ButtonBase.ImageIndex property is set the System.Windows.Forms.ButtonBase.Image property will be set to its default value, null","ggg) ImeMode","hhh) WndProc","[C#] public new ImeMode ImeMode {get; set;}","[C++] public: _property ImeMode get_ImeMode( ); public: _property void set_ImeMode(ImeMode);","[VB] Public Property ImeMode As ImeMode","[JScript] public function get ImeMode( ): ImeMode; public function set ImeMode(ImeMode);","Description","Gets or sets the Input Method Editor (IME) mode supported by this control.","iii) InvokeRequired","jjj) IsAccessible","kkk) IsDefault","lll) WndProc","Description","Gets or sets a value indicating whether the button control is the default button.","mmm) IsDisposed","nnn) IsHandleCreated","ooo) Left","ppp) Location","qqq) Name","rrr) Parent","sss) ProductName","ttt) ProductVersion","uuu) RecreatingHandle","vvv) Region","www) RenderRightToLeft","xxx) ResizeRedraw","yyy) Right","zzz) RightToLeft","aaaa) ShowFocusCues","bbbb) ShowKeyboardCues","cccc) Site","dddd) Size","eeee) TabIndex","ffff) TabStop","gggg) Tag","hhhh) Text","iiii) TextAlign","jjjj) WndProc","Description","Gets or sets the alignment of the text on the button control.","kkkk) Top","llll) TopLevelControl","mmmm) Visible","nnnn) Width","oooo) WindowTarget","pppp) CreateAccessibilityInstance","[C#] protected override AccessibleObject CreateAccessibilityInstance( );","[C++] protected: AccessibleObject* CreateAccessibilityInstance( );","[VB] Overrides Protected Function CreateAccessibilityInstance( ) As AccessibleObject","[JScript] protected override function CreateAccessibilityInstance( ) AccessibleObject;","Description","qqqq) Dispose","[C#] protected override void Dispose(bool disposing);","[C++] protected: void Dispose(bool disposing);","[VB] Overrides Protected Sub Dispose(ByVal disposing As Boolean)","[JScript] protected override function Dispose(disposing: Boolean);","Description","Removes hooks from the parent, and then calls the base class to perform all other cleanup","rrrr) OnEnabledChanged","[C#] protected override void OnEnabledChanged(EventArgs e);","[C++] protected: void OnEnabledChanged(EventArgs* e);","[VB] Overrides Protected Sub OnEnabledChanged(ByVal e As EventArgs)","[JScript] protected override function OnEnabledChanged(e: EventArgs);","Description","ssss) OnGotFocus","[C+] protected override void OnGotFocus(EventArgs e);","[C++] protected: void OnGotFocus(EventArgs* e);","[VB] Overrides Protected Sub OnGotFocus(ByVal e As EventArgs)","[JScript] protected override function OnGotFocus(e: EventArgs);","Description","Raises the System.Windows.Forms.ButtonBase.OnGotFocus(System.EventArgs) event.","Raising an event invokes the event handler through a delegate. For an overview, see. An System.EventArgs that contains the event data.","tttt) OnKeyDown","[C#] protected override void OnKeyDown(KeyEventArgs kevent);","[C++] protected: void OnKeyDown(KeyEventArgs* kevent);","[VB] Overrides Protected Sub OnKeyDown(ByVal kevent As KeyEventArgs)","[JScript] protected override function OnKeyDown(kevent: KeyEventArgs);","Description","Raises the System.Windows.Forms.ButtonBase.OnKeyUp(System.Windows.Forms. KeyEventArgs) event.","Raising an event invokes the event handler through a delegate. For an overview, see XXX. A System.Windows.Forms.KeyEventArgs that contains the event data.","uuuu) OnKeyUp","[C#] protected override void OnKeyUp(KeyEventArgs kevent);","[C++] protected: void OnKeyUp(KeyEventArgs* kevent);","[VB] Overrides Protected Sub OnKeyUp(ByVal kevent As KeyEventArgs)","[JScript] protected override function OnKeyUp(kevent: KeyEventArgs);","Description","Raises the System.Windows.Forms.ButtonBase.OnKeyUp(System.Windows.Forms. KeyEventArgs) event.","Raising an event invokes the event handler through a delegate. For an overview, see XXX. A System.Windows.Forms.KeyEventArgs that contains the event data.","vvvv) OnLostFocus","[C#] protected override void OnLostFocus(EventArgs e);","[C++] protected: void OnLostFocus(EventArgs* e);","[VB] Overrides Protected Sub OnLostFocus(ByVal e As EventArgs)","[JScript] protected override function OnLostFocus(e: EventArgs);","Description","Raises the System.Windows.Forms.ButtonBase.OnLostFocus(System.EventArgs) event.","Raising an event invokes the event handler through a delegate. For an overview, see XXX. An System.EventArgs that contains the event data.","wwww) OnMouseDown","[C#] protected override void OnMouseDown(MouseEventArgs mevent);","[C++] protected: void OnMouseDown(MouseEventArgs* mevent);","[VB] Overrides Protected Sub OnMouseDown(ByVal mevent As MouseEventArgs)","[JScript] protected override function OnMouseDown(mevent: MouseEventArgs);","Description","Raises the System.Windows.Forms.Control.OnMouseDown(System.Windows.Forms.MouseEventArgs) event.","Raising an event invokes the event handler through a delegate. For an overview, see. A System.Windows.Forms.MouseEventArgs that contains the event data.","xxxx) OnMouseEnter","[C#] protected override void OnMouseEnter(EventArgs eventargs);","[C++] protected: void OnMouseEnter(EventArgs* eventargs);","[VB] Overrides Protected Sub OnMouseEnter(ByVal eventargs As EventArgs)","[JScript] protected override function OnMouseEnter(eventargs: EventArgs);","Description","Raises the System.Windows.Forms.Control.OnMouseEnter(System.EventArgs) event.","Raising an event invokes the event handler through a delegate. For an overview, see. An System.EventArgs that contains the event data.","yyyy) OnMouseLeave","[C#] protected override void OnMouseLeave(EventArgs eventargs);","[C++] protected: void OnMouseLeave(EventArgs* eventargs);","[VB] Overrides Protected Sub OnMouseLeave(ByVal eventargs As EventArgs)","[JScript] protected override function OnMouseLeave(eventargs: EventArgs);","Description","Raises the System.Windows.Forms.Control.OnMouseLeave(System.EventArgs) event.","Raising an event invokes the event handler through a delegate. For an overview, see. An System.EventArgs that contains the event data.","zzzz) OnMouseMove","[C#] protected override void OnMouseMove(MouseEventArgs mevent);","[C++] protected: void OnMouseMove(MouseEventArgs* mevent);","[VB] Overrides Protected Sub OnMouseMove(ByVal mevent As MouseEventArgs)","[JScript] protected override function OnMouseMove(mevent: MouseEventArgs);","Description","Raises the System.Windows.Forms.Control.OnMouseMove(System.Windows.Form s.MouseEventArgs) event.","Raising an event invokes the event handler through a delegate. For an overview, see. A System.Windows.Forms.MouseEventArgs that contains the event data.","aaaaa) OnMouseUp","[C#] protected override void OnMouseUp(MouseEventArgs mevent);","[C++] protected: void OnMouseUp(MouseEventArgs* mevent);","[VB] Overrides Protected Sub OnMouseUp(ByVal mevent As MouseEventArgs)","[JScript] protected override function OnMouseUp(mevent: MouseEventArgs);","Description","Raises the System.Windows.Forms.ButtonBase.OnMouseUp(System.Windows.Forms.MouseEventArgs) event.","Raising an event invokes the event handler through a delegate. For an overview, see XXX. A System.Windows.Forms.MouseEventArgs that contains the event data.","bbbbb) OnPaint","[C#] protected override void OnPaint(PaintEventArgs pevent);","[C++] protected: void OnPaint(PaintEventArgs* pevent);","[VB] Overrides Protected Sub OnPaint(ByVal pevent As PaintEventArgs)","[JScript] protected override function OnPaint(pevent: PaintEventArgs);","Description","Raises the System.Windows.Forms.ButtonBase.OnPaint(System.Windows.Forms.PaintEventArgs) event.","Raising an event invokes the event handler through a delegate. For an overview, see XXX. A System.Windows.Forms.PaintEventArgs that contains the event data.","ccccc) OnParentChanged","[C#] protected override void OnParentChanged(EventArgs e);","[C++] protected: void OnParentChanged(EventArgs* e);","[VB] Overrides Protected Sub OnParentChanged(ByVal e As EventArgs)","[JScript] protected override function OnParentChanged(e: EventArgs);","Description","ddddd) OnTextChanged","[C#] protected override void OnTextChanged(EventArgs e);","[C++] protected: void OnTextChanged(EventArgs* e);","[VB] Overrides Protected Sub OnTextChanged(ByVal e As EventArgs)","[JScript] protected override function OnTextChanged(e: EventArgs);","Description","eeeee) OnVisibleChanged","[C#] protected override void OnVisibleChanged(EventArgs e);","[C++] protected: void OnVisibleChanged(EventArgs* e);","[VB] Overrides Protected Sub OnVisibleChanged(ByVal e As EventArgs)","[JScript] protected override function OnVisibleChanged(e: EventArgs);","Description","fffff) ResetFlagsandPaint","[C#] protected void ResetFlagsandPaint( );","[C++] protected: void ResetFlagsandPaint( );","[VB] Protected Sub ResetFlagsandPaint( )","[Jscript] protected function ResetFlagsandPaint( );","Description","Used for quick re-painting of the button after the pressed state.","ggggg) WndProc","[C#] protected override void WndProc(ref Message m);","[C++] protected: void WndProc(Message* m);","[VB] Overrides Protected Sub WndProc(ByRef m As Message)","[JScript] protected override function WndProc(m: Message);","ButtonBase.ButtonBaseAccessibleObject class (System.Windows.Forms)","a) WndProc","Description","b) ButtonBase.ButtonBaseAccessibleObject","Example Syntax:","c) WndProc","[C#] public ButtonBase.ButtonBaseAccessibleObject(Control owner);","[C++] public: ButtonBaseAccessibleObject(Control* owner);","[VB] Public Sub New(ByVal owner As Control)","[JScript] public function ButtonBase.ButtonBaseAccessibleObject(owner: Control);","Description","d) Bounds","e) DefaultAction","f) Description","g) Handle","h) Help","i) KeyboardShortcut","j) Name","k) Owner","l) Parent","m) Role","n) State","o) Value","p) DoDefaultAction","[C#] public override void DoDefaultAction( );","[C++] public: void DoDefaultAction( );","[VB] Overrides Public Sub DoDefaultAction( )","[JScript] public override function DoDefaultAction( );","Description","ButtonBorderStyle enumeration (System.Windows.Forms)","a) UseStdAccessibleObjects","Description","Specifies the border style for a button control.","This enumeration is used by members such as System.Windows.Forms.ControlPaint.DrawBorder(System.Drawing.Graphics, System.Drawing.Rectangle, System.Drawing.Color, System.Windows.Forms.ButtonBorderStyle).","b) UseStdAccessibleObjects","[C#] public const ButtonBorderStyle Dashed;","[C++] public: const ButtonBorderStyle Dashed;","[VB] Public Const Dashed As ButtonBorderStyle","[JScript] public var Dashed: ButtonBorderStyle;","Description","A dashed border.","c) UseStdAccessibleObjects","[C#] public const ButtonBorderStyle Dotted;","[C++] public: const ButtonBorderStyle Dotted;","[VB] Public Const Dotted As ButtonBorderStyle","[JScript] public var Dotted: ButtonBorderStyle;","Description","A dotted-line border.","d) UseStdAccessibleObjects","[C#] public const ButtonBorderStyle Inset;","[C++] public: const ButtonBorderStyle Inset;","[VB] Public Const Inset As ButtonBorderStyle","[JScript] public var Inset: ButtonBorderStyle;","Description","A sunken border.","e) UseStdAccessibleObjects","[C#] public const ButtonBorderStyle None;","[C++] public: const ButtonBorderStyle None;","[VB] Public Const None As ButtonBorderStyle","[JScript] public var None: ButtonBorderStyle;","Description","No border.","f) UseStdAccessibleObjects","[C#] public const ButtonBorderStyle Outset;","[C++] public: const ButtonBorderStyle Outset;","[VB] Public Const Outset As ButtonBorderStyle","[JScript] public var Outset: ButtonBorderStyle;","Description","A raised border.","g) UseStdAccessibleObjects","[C#] public const ButtonBorderStyle Solid;","[C++] public: const ButtonBorderStyle Solid;","[VB] Public Const Solid As ButtonBorderStyle","[JScript] public var Solid: ButtonBorderStyle;","Description","A solid border.","ButtonState enumeration (System.Windows.Forms)","a) ToString","Description","Specifies the appearance of a button.","b) ToString","[C#] public const ButtonState All;","[C++] public: const ButtonState All;","[VB] Public Const All As ButtonState","[JScript] public var All: ButtonState;","Description","All flags except Normal are set.","c) ToString","[C#] public const ButtonState Checked;","[C++] public: const ButtonState Checked;","[VB] Public Const Checked As ButtonState","[JScript] public var Checked: ButtonState;","Description","The button has a checked or latched appearance. Use this appearance to show that a toggle button has been pressed.","d) ToString","[C#] public const ButtonState Flat;","[C++] public: const ButtonState Flat;","[VB] Public Const Flat As ButtonState","[JScript] public var Flat: ButtonState;","Description","The button has a flat, two-dimensional appearance.","e) ToString","[C#] public const ButtonState Inactive;","[C++] public: const ButtonState Inactive;","[VB] Public Const Inactive As ButtonState","[JScript] public var Inactive: ButtonState;","Description","The button is inactive (grayed).","f) ToString","[C#] public const ButtonState Normal;","[C++] public: const ButtonState Normal;","[VB] Public Const Normal As ButtonState","[JScript] public var Normal: ButtonState;","Description","The button has its normal appearance (three-dimensional).","g) ToString","[C#] public const ButtonState Pushed;","[C++] public: const ButtonState Pushed;","[VB] Public Const Pushed As ButtonState","[JScript] public var Pushed: ButtonState;","Description","The button appears pressed.","CaptionButton enumeration (System.Windows.Forms)","a) ToString","Description","Specifies the type of caption button to display.","This enumeration is used by members such as System.Windows.Forms.ControlPaint.DrawCaptionButton(System.Drawing.Graphics, System.Drawing.Rectangle, System.Windows. Forms.CaptionButton, System.Windows.Forms.ButtonState).","b) ToString","[C#] public const CaptionButton Close;","[C++] public: const CaptionButton Close;","[VB] Public Const Close As CaptionButton","[JScript] public var Close: CaptionButton;","Description","A Close button.","c) ToString","[C#] public const CaptionButton Help;","[C++] public: const CaptionButton Help;","[VB] Public Const Help As CaptionButton","[JScript] public var Help: CaptionButton;","Description","A Help button.","d) ToString","[C#] public const CaptionButton Maximize;","[C++] public: const CaptionButton Maximize;","[VB] Public Const Maximize As CaptionButton","[JScript] public var Maximize: CaptionButton;","Description","A Maximize button.","e) ToString","[C#] public const CaptionButton Minimize;","[C++] public: const CaptionButton Minimize;","[VB] Public Const Minimize As CaptionButton","[JScript] public var Minimize: CaptionButton;","Description","A Minimize button.","f) ToString","[C#] public const CaptionButton Restore;","[C++] public: const CaptionButton Restore;","[VB] Public Const Restore As CaptionButton","[JScript] public var Restore: CaptionButton;","Description","A Restore button.","CharacterCasing enumeration (System.Windows.Forms)","a) ToString","Description","Specifies the case of characters in a System.Windows.Forms.TextBox control.","Use the members of this enumeration to set the value of the System.Windows.Forms.TextBox.CharacterCasing property of the System.Windows.Forms.TextBox control.","b) ToString","[C#] public const CharacterCasing Lower;","[C++] public: const CharacterCasing Lower;","[VB] Public Const Lower As CharacterCasing","[JScript] public var Lower: CharacterCasing;","Description","Converts all characters to lowercase.","c) ToString","[C#] public const CharacterCasing Normal;","[C++] public: const CharacterCasing Normal;","[VB] Public Const Normal As CharacterCasing","[JScript] public var Normal: CharacterCasing;","Description","The case of characters is left unchanged.","d) ToString","[C#] public const CharacterCasing Upper;","[C++] public: const CharacterCasing Upper;","[VB] Public Const Upper As CharacterCasing","[JScript] public var Upper: CharacterCasing;","Description","Converts all characters to uppercase.","CheckBox class (System.Windows.Forms)","a) ToString","Description","Represents a Windows check box.","Use a System.Windows.Forms.CheckBox to give the user an option, such as true\/false or yes\/no. The check box control can display an image or text or both.","b) CheckBox","Example Syntax:","c) ToString","[C#] public CheckBox( );","[C++] public: CheckBox( );","[VB] Public Sub New( )","[JScript] public function CheckBox( );","Description","Initializes a new instance of the System.Windows.Forms.CheckBox class.","By default, when a new System.Windows.Forms.CheckBox is instantiated, System.Windows.Forms.CheckBox.AutoCheck is set to true, System.Windows.Forms.CheckBox.Checked is set to false, and System.Windows.Forms.CheckBox.Appearance is set to Normal.","d) AccessibilityObject","e) AccessibleDefaultActionDescription","j) AccessibleDescription","g) AccessibleName","h) AccessibleRole","i) AllowDrop","j) Anchor","k) Appearance","l) ToString","Description","Gets or sets the value that determines the appearance of a check box control.","If System.Windows.Forms.CheckBox.Appearance value is set to Appearance.Normal, the check box has a typical appearance. If the value is set to Button, the check box appears like a toggle button, which may be toggled to an up or down state.","m) AutoCheck","n) ToString","[C#] public bool AutoCheck {get; set;}","[C++] public: _property bool get AutoCheck( ); public: _property void set_AutoCheck(bool);","[VB] Public Property AutoCheck As Boolean","[JScript] public function get AutoCheck( ): Boolean; public function set AutoCheck(Boolean);","Description","Gets or set a value indicating whether the System.Windows.Forms.CheckBox.Checked or System.Windows.Forms.CheckBox.CheckState values and the check box's appearance are automatically changed when the check box is clicked.","If System.Windows.Forms.CheckBox.AutoCheck is set to false, you will need to add code to update the System.Windows.Forms.CheckBox.Checked or System.Windows.Forms.CheckBox.CheckState values in the System.Windows.Forms.Control.Click event handler.","o) BackColor","p) BackgroundImage","q) BindingContext","r) Bottom","s) Bounds","t) CanFocus","u) CanSelect","v) Capture","w) CausesValidation","x) CheckAlign","y) ToString","Description","Gets or sets the horizontal and vertical alignment of a check box on a check box control.","z) Checked","aa) ToString","[C#] public bool Checked {get; set;}","[C++] public: _property bool get Checked( ); public: _property void set_Checked(bool);","[VB] Public Property Checked As Boolean","[JScript] public function get Checked( ): Boolean; public function set Checked(Boolean);","Description","Gets or set a value indicating whether the check box is in the checked state.","When the value is true, the check box portion of the control displays a check mark. If the System.Windows.Forms.CheckBox.Appearance property is set to Button, the control will appear sunken when System.Windows.Forms.CheckBox.Checked is true and raised like a standard button when false.","bb) CheckState","cc) ToString","[C#] public CheckState CheckState {get; set;}","[C++] public: _iroperty CheckState get_CheckState( ); public: _property void set_CheckState(CheckState);","[VB] Public Property CheckState As CheckState","[JScript] public function get CheckState( ): CheckState; public function set CheckState(CheckState);","Description","Gets or sets the state of the check box.","If the System.Windows.Forms.CheckBox.ThreeState property is set to false, the System.Windows.Forms.CheckBox.CheckState property value may only be set to CheckState.Indeterminate in code and not by user interaction.","dd) ClientRectangle","ee) ClientSize","ff) CompanyName","gg) Container","hh) ContainsFocus","ii) ContextMenu","jj) Controls","kk) Created","ll) CreateParams","mm) ToString","Description","Gets the information used to create the handle for the System.Windows.Forms.CheckBox control.","nn) Cursor","oo) DataBindings","pp) DefaultImeMode","qq) DefaultSize","rr) ToString","Description","Deriving classes can override this to configure a default size for their control. This is more efficient than setting the size in the control's constructor.","ss) DesignMode","tt) DisplayRectangle","uu) Disposing","vv) Dock","ww) Enabled","xx) Events","yy) FlatStyle","zz) Focused","aaa) Font","bbb) FontHeight","ccc) ForeColor","ddd) Handle","eee) HasChildren","fff) Height","ggg) Image","hhh) ImageAlign","iii) ImageIndex","jjj) ImageList","kkk) ImeMode","lll) InvokeRequired","mmm) IsAccessible","nnn) IsDefault","ooo) IsDisposed","ppp) IsHandleCreated","qqq) Left","rrr) Location","sss) Name","ttt) Parent","uuu) ProductName","vvv) ProductVersion","www) RecreatingHandle","xxx) Region","yyy) RenderRightToLeft","zzz) ResizeRedraw","aaaa) Right","bbbb) RightToLeft","cccc) ShowFocusCues","dddd) ShowKeyboardCues","eeee) Site","ffff) Size","gggg) TabIndex","hhhh) TabStop","iiii) Tag","jjjj) Text","kkkk) TextAlign","llll) ToString","Description","Gets or sets a value indicating the alignment of the text on the checkbox control.","mmmm) ThreeState","nnnn) ToString","[C#] public bool ThreeState {get; set;}","[C++] public: _property bool get_ThreeState( ); public: _property void set_ThreeState(bool);","[VB] Public Property ThreeState As Boolean","[JScript] public function get ThreeState( ): Boolean; public function set ThreeState(Boolean);","Description","Gets or sets a value indicating whether the check box will allow three check states rather than two.","If the System.Windows.Forms.CheckBox.ThreeState property is set to false, the System.Windows.Forms.CheckBox.CheckState property value may only be set to CheckState.Indeterminate in code and not by user interaction.","oooo) Top","pppp) TopLevelControl","qqqq) Visible","rrrr) Width","ssss) WindowTarget","tttt) ToString","Description","Occurs when the value of the System.Windows.Forms.CheckBox.Appearance property changes.","For more information about handling events, see.","uuuu) ToString","Description","Occurs when the value of the System.Windows.Forms.CheckBox.Checked property changes.","For more information about handling events, see.","vvvv) ToString","[C#] public event EventHandler CheckStateChanged;","[C++] public: _event EventHandler* CheckStateChanged;","[VB] Public Event CheckStateChanged As EventHandler","Description","Occurs when the value of the System.Windows.Forms.CheckBox.CheckState property changes. For more information about handling events, see.","wwww) CreateAccessibilityInstance","[C#] protected override AccessibleObject CreateAccessibilityInstance( );","[C++] protected: AccessibleObject* CreateAccessibilityInstance( );","[VB] Overrides Protected Function CreateAccessibilityInstance( ) As AccessibleObject","[JScript] protected override function CreateAccessibilityInstance( ): AccessibleObject;","Description","Constructs the new instance of the accessibility object for this control. Subclasses should not call base.CreateAccessibilityObject.","xxxx) OnAppearanceChanged","[C#] protected virtual void OnAppearanceChanged(EventArgs e);","[C++] protected: virtual void OnAppearanceChanged(EventArgs* e);","[VB] Overridable Protected Sub OnAppearanceChanged(ByVal e As EventArgs)","[JScript] protected function OnAppearanceChanged(e: EventArgs);","Description","Raises the System.Windows.Forms.CheckBox.AppearanceChanged event.","Raising an event invokes the event handler through a delegate. For more information, see. An System.EventArgs that contains the event data.","yyyy) OnCheckedChanged","[C+] protected virtual void OnCheckedChanged(EventArgs e);","[C++] protected: virtual void on CheckedChanlged(EventArgs* e);","[VB] Overridable Protected Sub OnCheckedChanged(ByVal e As EventArgs)","[JScript] protected function OnCheckedChanged(e: EventArgs);","Description","Raises the System.Windows.Forms.CheckBox.CheckedChanged event.","Raising an event invokes the event handler through a delegate. For more information, see. An System.EventArgs that contains the event data.","zzzz) OnCheckStateChanged","[C#] protected virtual void OnCheckStateChanged(EventArgs e);","[C++] protected: virtual void onCheckStateChanged(EventArgs* e);","[VB] Overridable Protected Sub OnCheckStateChanged(ByVal e As EventArgs)","[JScript] protected function OnCheckStateChanged(e: EventArgs);","Description","Raises the System.Windows. Forms.CheckBox.CheckStateChanged event.","Raising an event invokes the event handler through a delegate. For more information, see. An System.EventArgs that contains the event data.","aaaaa) On Click","[C#] protected override void OnClick(EventArgs e);","[C++] protected: void OnClick(EventArgs* e);","[VB] Overrides Protected Sub OnClick(ByVal e As EventArgs)","[JScript] protected override function OnClick(e: EventArgs);","Description","Fires the event indicating that the control has been clicked. Inheriting controls should use this in favour of actually listening to the event, but should not forget to call base.onClicked( ) to ensure that the event is still fired for external listeners.","bbbbb) OnHandleCreated","[C#] protected override void OnHandleCreated(EventArgs e);","[C++] protected: void OnHandleCreated(EventArgs* e);","[VB] Overrides Protected Sub OnHandleCreated(ByVal e As EventArgs)","[JScript] protected override function OnHandleCreated(e: EventArgs);","Description","We override this to ensure that the control's click values are set up correctly.","ccccc) OnMouseUp","[C++] protected override void OnMouseUp(MouseEventArgs mevent);","[C++] protected: void OnMouseUp(MouseEventArgs* mevent);","[VB] Overrides Protected Sub OnMouseUp(ByVal mevent As MouseEventArgs)","[JScript] protected override function OnMouseUp(mevent: MouseEventArgs);","Description","Raises the System.Windows. Forms. ButtonBase.OnMouseUp(System.Windows. For ms.MouseEventArgs) event.","ddddd) ProcessMnemonic","[C#] protected override bool ProcessMnemonic (char charCode);","[C++] protected: bool ProcessMnemonic(_wchar_t charcode);","[VB] Overrides Protected Function ProcessMnemonic(ByVal charCode As Char) As Boolean","[JScript] protected override function ProcessMnemonic(charCode: Char): Boolean; Overridden to handle mnemonics properly.","eeeee) ToString","[C#] public override string ToString( );","[C++] public: String* ToString( );","[VB] Overrides Public Function ToString( ) As String","[JScript] public override function ToString( ): String;","Description","Provides some interesting information for the CheckBox control in String form.","CheckBox.CheckBoxAccessibleObject class (System.Windows.Forms)","a) WndProc","Description","b) CheckBox. CheckBoxAccessibleObject","Example Syntax:","c) WndProc","[C#] public CheckBox.CheckBoxAccessibleObject(Control owner);","[C++] public: CheckBoxAccessibleObject(Control* owner);","[VB] Public Sub New(ByVal owner As Control)","[JScript] public function CheckBox.CheckBoxAccessibleObject(owner: Control);","Description","d) Bounds","e) DefaultAction","f) WndProc","Description","g) Description","h) Handle","i) Help","j) KeyboardShortcut","k) Name","l) Owner","m) Parent","n) Role","o) WndProc","Description","p) State","q) WndProc","[C#] public override AccessibleStates State {get;}","[C++] public: _property virtual AccessibleStates get_State( );","[VB] Overrides Public ReadOnly Property State As AccessibleStates","[JScript] public function get State( ): AccessibleStates;","Description","r) Value","CheckedListBox.CheckedIndexCollection class (System.Windows.Forms)","a) UseStdAccessibleObjects","Description","Encapsulates the collection of indexes of checked items (including items in an indeterminate state) in a System.Windows.Forms.CheckedListBox.","The checked indexes collection is a subset of the indexes into the collection of all items in the System.Windows.Forms.CheckedListBox control. These indexes specify items in a checked or indeterminate state.","b) Count","c) UseStdAccessibleObjects","[C#] public int Count {get;}","[C++] public: _property int get_Count( );","[VB] Public ReadOnly Property Count As Integer","[JScript] public function get Count( ): int;","Description","Gets the number of checked items.","d) IsReadOnly","e) UseStdAccessibleObjects","[C#] public bool IsReadOnly {get;}","[C++] public: _property bool get_IsReadOnly( );","[VB] Public ReadOnly Property IsReadOnly As Boolean","[JScript] public function get IsReadOnly( ): Boolean;","Description","Gets a value indicating whether the collection is read-only.","f) Item","g) UseStdAccessibleObjects","[C#] public int this[int index] {get;}","[C++] public: _property int get_Item(int index);","[VB] Public Default ReadOnly Property Item(ByVal index As Integer) As Integer","[JScript] returnValue=CheckedIndexCollectionObject.Item(index);","Description","Gets the index of a checked item in the System.Windows.Forms.CheckedListBox control.","The index parameter is an index into the checked indexes collection. The return value is the corresponding indexed value, which is the index of the checked item in the items collection. An index into the checked indexes collection. This index specifies the index of the checked item you want to retrieve.","h) Contains","[C#] public bool Contains(int index);","[C++] public: bool Contains(int index);","[VB] Public Function Contains(ByVal index As Integer) As Boolean","[JScript] public function Contains(index: int): Boolean;","Description","Determines whether the specified index is located in the collection.","Return Value: true if the specified index from the System.Windows.Forms.CheckedListBox.ObjectCollection is an item in this collection; otherwise, false","You can use this method to determine whether an index from the System.Windows.Forms.CheckedListBox.Items collection is in the System.Windows.Forms.CheckedListBox.Checkedlndices collection. The index to locate in the collection.","i) CopyTo","[C#] public void CopyTo(Array dest, int index);","[C++] public: _sealed void CopyTo(Array* dest, int index);","[VB] NotOverridable Public Sub CopyTo(ByVal dest As Array, ByVal index As Integer)","[JScript] public function CopyTo(dest: Array, index: int);","Description","Copies the entire collection into an existing array at a specified location within the array.","You can use this method to combine the selected indexes from multiple collections into a single array. The destination array. The zero-based relative index in destat which copying begins.","j) GetEnumerator","[C#] public IEnumerator GetEnumerator( );","[C++] public: _sealed IEnumerator* GetEnumerator( );","[VB] NotOverridable Public Function GetEnumerator( ) As IEnumerator","[JScript] public function GetEnumerator( ): IEnumerator;","Description","Returns an enumerator that can be used to iterate through the System.Windows.Forms.CheckedListBox.CheckedIndices collection.","Return Value: An System.Collections.IEnumerator for navigating through the list.","k) Indexof","[C#] public int IndexOf(int index);","[C++] public: int IndexOf(int index);","[VB] Public Function IndexOf(ByVal index As Integer) As Integer","[JScript] public function IndexOf(index: int): int;","Description","Returns an index into the collection of checked indexes.","Return Value: The index that specifies the index of the checked item or \u22121 if the index parameter is not in the checked indexes collection. For more information, see the examples in the System.Windows.Forms.CheckedListBox.CheckedIndexCollection class overview.\n\nThe index parameter is the index of a checked item in the items collection. The return value is the corresponding index into the checked indexes collection. The index of the checked item.\n","l) IList.Add","[C#] int IList.Add(object value);","[C++] int IList::Add(Object* value);","[VB] Function Add(ByVal value As Object) As Integer Implements IList.Add","[JScript] function IList.Add(value: Object): int;","m) IList.Clear","[C#] void IList.Clear( );","[C++] void IList::Clear( );","[VB] Sub Clear( ) Implements IList.Clear","[JScript] function IList.Clear( );","n) IList.Contains","[C#] bool IList.Contains(object index);","[C++] bool IList::Contains(Object* index);","[VB] Function Contains(ByVal index As Object) As Boolean Implements IList.Contains","[JScript] function IList.Contains(index: Object): Boolean;","o) IList.IndexOf","[C#] int IList.IndexOf(object index);","[C++] int IList::IndexOf(Object* index);","[VB] Function IndexOf(ByVal index As Object) As Integer Implements IList.IndexOf","[JScript] function IList.IndexOf(index: Object): int;","p) IList.Insert","[C#] void IList.Insert(int index, object value);","[C++] void IList::Insert(int index, Object* value);","[VB] Sub Insert(ByVal index As Integer, ByVal value As Object) Implements IList.Insert","[JScript] function IList.Insert(index: int, value: Object);","q) IList.Remove","[C#] void IList.Remove(object value);","[C++] void IList::Remove(Object* value);","[VB] Sub Remove(ByVal value As Object) Implements IList.Remove","[JScript] function IList.Remove(value: Object);","r) IList.RemoveAt","[C#] void IList.RemoveAt(int index);","[C++] void IList::RemoveAt(int index);","[VB] Sub RemoveAt(ByVal index As Integer) Implements IList.RemoveAt","[JScript] function IList.RemoveAt(index: int);","ListView.CheckedIndexCollection class (System.Windows.Forms)","a) ToString","Description","b) ListView. CheckedIndexCollection","Example Syntax:","c) ToString","[C#] public ListView.CheckedIndexCollection(ListView owner);","[C++] public: CheckedIndexCollection(ListView* owner);","[VB] Public Sub New(ByVal owner As ListView)","[JScript] public function ListView.CheckedIndexCollection(owner: ListView);","Description","d) Count","e) ToString","[C#] public int Count {get;}","[C++] public: _property int get_Count( );","[VB] Public ReadOnly Property Count As Integer","[JScript] public function get Count( ): int;","Description","Gets the number of currently selected items.","f) IsReadOnly","g) ToString","[C#] public bool IsReadOnly {get;}","[C++] public: _property bool get_IsReadOnly( );","[VB] Public ReadOnly Property IsReadOnly As Boolean","[JScript] public function get IsReadOnly( ): Boolean;","Description","Gets whether the collection is read-only.","h) Item","i) ToString","[C#] public int this[int index] {get;}","[C++] public: _property int get_Item(int index);","[VB] Public Default ReadOnly Property Item(ByVal index As Integer) As Integer","[JScript] returnValue CheckedIndexCollectionObject.Item(index);","Description","Selected item in the list.","j) Contains","[C#] public bool Contains(int checkedIndex);","[C++] public: bool Contains(int checkedIndex);","[VB] Public Function Contains(ByVal checkedIndex As Integer) As Boolean","[JScript] public function Contains(checkedIndex: int): Boolean;","Description","k) GetEnumerator","[C#] public IEnumerator GetEnumerator( );","[C++] public: _sealed IEnumerator* GetEnumerator( );","[VB] NotOverridable Public Function GetEnumerator( ) As IEnumerator","[JScript] public function GetEnumerator( ): IEnumerator;","Description","l) IndexOf","[C#] public int IndexOf(int checkedIndex);","[C++] public: int IndexOf(int checkedIndex);","[VB] Public Function IndexOf(ByVal checkedIndex As Integer) As Integer","[JScript] public function IndexOf(checkedIndex: int): int;","Description","m) ICollection.CopyTo","[C#] void ICollection.CopyTo(Array dest, int index);","[C++] void ICollection::CopyTo(Array* dest, int index);","[VB] Sub CopyTo(ByVal dest As Array, ByVal index As Integer) Implements ICollection.CopyTo","[JScript] function ICollection.CopyTo(dest: Array, index: int);","n) IListAdd","[C#] int IList.Add(object value);","[C++] int IList::Add(Object* value);","[VB] Function Add(ByVal value As Object) As Integer Implements IList.Add","[JScript] function IList.Add(value: Object) int;","o) IList. Clear","[C#] void IList.Clear( );","[C++] void IList::Clear( );","[VB] Sub Clear( ) Implements IList.Clear","[JScript] function IList.Clear( );","p) IList.Contains","[C#] bool IList.Contains(object checkedIndex);","[C++] bool IList::Contains(Object* checkedIndex);","[VB] Function Contains(ByVal checkedIndex As Object) As Boolean Implements IList.Contains","[JScript] function IList.Contains(checkedIndex: Object): Boolean;","q) IList.IndexOf","[C#] int IList.IndexOf(object checkedIndex);","[C++] int IList::indexOf(Object* checkedIndex);","[VB] Function IndexOf(ByVal checkedIndex As Object) As Integer Implements IList.IndexOf","[JScript] function IList.IndexOf(checkedIndex: Object): int;","r) IList.Insert","[C#] void IList.Insert(int index, object value);","[C++] void IList::Insert(int index, Object* value);","[VB] Sub Insert(ByVal index As Integer, ByVal value As Object) Implements IList.Insert","[JScript] function IList.Insert(index int, value: Object);","s) IList.Remove","[C#] void IList.Remove(object value);","[C++] void IList::Remove(Object* value);","[VB] Sub Remove(ByVal value As Object) Implements IList.Remove","[JScript] function IList.Remove(value: Object);","t) IList.RemoveAt","[C#] void IList.RemoveAt(int index);","[C++] void IList::RemoveAt(int index);","[VB] Sub RemoveAt(ByVal index As Integer) Implements IList.RemoveAt","[JScript] function IList.RemoveAt(index: int);","CheckedListBox.CheckedItemCollection class (System.Windows.Forms)","a) ToString","Description","Encapsulates the collection of checked items (including items in an indeterminate state) in a System.Windows.Forms.CheckedListBox control.","The checked items collection is a subset of all items in the System.Windows.Forms.CheckedListBox control; it contains only those items that are in a checked or indeterminate state.","b) Count","c) ToString","[C#] public int Count {get;}","[C++] public: _property int get_Count( );","[VB] Public ReadOnly Property Count As Integer","[JScript] public function get Count( ): int;","Description","Gets the number of items in the collection.","d) IsReadOnly","e) ToString","[C#] public bool IsReadOnly {get;}","[C++] public: _property bool get_IsReadOnly( );","[VB] Public ReadOnly Property IsReadOnly As Boolean","[JScript] public function get IsReadOnly( ): Boolean;","Description","Gets a value indicating if the collection is read-only.","f) A Item","g) ToString","[C#] public object this[int index] {get; set;}","[C++] public: _property Object* get_Item(int index); public: _property void set_Item(int index, Object*);","[VB] Public Default Property Item(ByVal index As Integer) As Object","[JScript] returValue=CheckedItemCollectionObject.Item(index); CheckedItemCollectionObject.Item(in dex)=returnValue;","Description","Gets an object in the checked items collection.","The System.Windows.Forms.CheckedListBox.CheckedItems collection is a subset of the objects in the System.Windows.Forms.CheckedListBox.Items collection, representing only items that are checked. This collection is ordered in ascending order. An index into the collection of checked items. This collection index corresponds to the index of the checked item.","h) Contains","[C#] public bool Contains(object item);","[C++] public: _sealed bool Contains(Object* item);","[VB] NotOverridable Public Function Contains(ByVal item As Object) As Boolean","[JScript] public function Contains(item: Object): Boolean;","Description","Determines whether the specified item is located in the collection.","Return Value: true if item is in the collection; otherwise, false.","This method determines if an object from the System.Windows.Forms.CheckedListBox.Items collection is in the System.Windows.Forms.CheckedListBox.CheckedItems collection. An object from the items collection.","i) CopyTo","[C#] public void CopyTo(Array dest, int index);","[C++] public: sealed void CopyTo(Array* dest, int index);","[VB] NotOverridable Public Sub CopyTo(ByVal dest As Array, ByVal index As Integer)","[JScript] public function CopyTo(dest: Array, index: int);","Description","Copies the entire collection into an existing array at a specified location within the array.","You can use this method to combine the selected indexes from multiple collections into a single array. The destination array. The zero-based relative index in destat which copying begins.","j) GetEnumerator","[C#] public IEnumerator GetEnumerator( );","[C++] public: _sealed Ienumerator* GetEnumerator( );","[VB] NotOverridable Public Function GetEnumerator( ) As IEnumerator","[JScript] public function GetEnumerator( ): IEnumerator;","Description","Returns an enumerator that can be used to iterate through the System.Windows.Forms.CheckedListBox.CheckedItems collection.","Return Value: An System.Collections.IEnumerator for navigating through the list.","k) IndexOf","[C#] public int IndexOf(object item);","[C++] public: _sealed int IndexOf(Object* item);","[VB] NotOverridable Public Function IndexOf(ByVal item As Object) As Integer","[JScript] public function IndexOf(item: Object): int;","Description","Returns an index into the collection of checked items.","Return Value: The index of the object in the checked item collection or \u22121 if the object is not in the collection. For more information, see the examples in the System.Windows.Forms.CheckedListBox.CheckedItemCollection class overview.","The System.Windows.Forms.CheckedListBox.CheckedItems collection is a subset of the objects in the System.Windows.Forms.CheckedListBox.Items collection, representing only items that are checked. This collection is ordered in ascending order. The object whose index you want to retrieve. This object must belong to the checked items collection.","l) IList.Add","[C#] int IList.Add(object value);","[C++] int IList::Add(Object* value);","[VB] Function Add(ByVal value As Object) As Integer Implements IList.Add","[JScript] function IList.Add(value: Object): int;","m) IList.Clear","[C#] void IList.Clear( );","[C++] void IList::Clear( );","[VB] Sub Clear( ) Implements IList.Clear","[JScript] function IList.Clear( );","n) IList.Insert","[C#] void IList.Insert(int index, object value);","[C++] void IList::Insert(int index, Object* value);","[VB] Sub Insert(ByVal index As Integer, ByVal value As Object) Implements IList.Insert","[JScript] function IList.Insert(index: int, value: Object);","o) IList.Remove","[C#] void IList.Remove(object value);","[C++] void IList::Remove(Object* value);","[VB] Sub Remove(ByVal value As Object) Implements IList.Remove","[JScript] function IList.Remove(value: Object);","p) IList.RemoveAt","[C#] void IList.RemoveAt(int index);","[C++] void IList::RemoveAt(int index);","[VB] Sub RemoveAt(ByVal index As Integer) Implements IList.RemoveAt","[JScript] function IList.RemoveAt(index: int);","CheckedListBox class (System.Windows.Forms)","a) ToString","Description","Displays a System.Windows.Forms.ListBox in which a check box is displayed to the left of each item.","This control presents a list of items that the user can navigate by using the keyboard or the scrollbar on the right side of the control. The user can place a check mark by one or more items and the checked items can be navigated with the System.Windows.Forms.CheckedListBox.CheckedItemCollection and System.Windows.Forms.CheckedListBox.CheckedIndexCollection.","b) CheckedListBox","Example Syntax:","c) ToString","[C#] public CheckedListBox( );","[C++] public: CheckedListBox( );","[VB] Public Sub New( )","[JScript] public function CheckedListBox( );","Description","Initializes a new instance of the System.Windows.Forms.CheckedListBox class.","By default, System.Windows.Forms.CheckedListBox uses System.Windows.Forms.Control.SetStyle(System.Windows.Forms.Cont rolStyles, System.Boolean) and System.Windows.Forms.ControIStyles.ResizeRedraw to specify that the control is redrawn when resized.","d) AccessibilityObject","e) AccessibleDefaultActionDescription","f) AccessibleDescription","g) AccessibleName","h) AccessibleRole","i) AllowDrop","j) Anchor","k) BackColor","l) BackgroundImage","m) BindingContext","n) BorderStyle","o) Bottom","p) Bounds","q) CanFocus","r) CanSelect","s) Capture","t) CausesValidation","u) CheckedIndices","v) ToString","Description","Collection of checked indexes in this System.Windows.Forms.CheckedListBox.","The collection of checked indexes is a subset of the indexes into the collection of all items in the System.Windows.Forms.CheckedListBox control. These indexes specify items in a checked or indeterminate state.","w) CheckedItems","x) ToString","[C#] public CheckedListBox.CheckedItemCollection CheckedItems {get;}","[C++] public: _property CheckedListBox.CheckedItemCollection* get_CheckedItemso;","[VB] Public ReadOnly Property CheckedItems As CheckedListBox.CheckedItemCollection","[JScript] public function get CheckedItems( ): CheckedListBox.CheckedItemCollection;","Description","Collection of checked items in this System.Windows.Forms.CheckedListBox","The collection is a subset of the objects in the System.Windows.Forms.CheckedListBox.Items collection, representing only those items that are in a state of System.Windows.Forms.CheckState.Checked or System.Windows.Forms.CheckState.Indeterminate. The indexes in this collection are in ascending order.","y) CheckOnClick","z) ToString","[C#] public bool CheckOnClick {get; set;}","[C++] public: _property bool get CheckOnClick( ); public: _property void set_CheckOnClick(bool);","[VB] Public Property CheckOnClick As Boolean","[JScript] public function get CheckOnClick( ): Boolean; public function set CheckOnClick(Boolean);","Description","Gets or sets a value indicating whether the check box should be toggled when an item is selected.","System.Windows.Forms.CheckedListBox.CheckOnClick indicates whether the check box should be toggled whenever an item is selected. The default behavior is to change the selection on the first click, and then have the user click again to apply the check mark. In some instances, however, you might prefer have the item checked as soon as it is clicked.","aa) ClientRectangle","bb) ClientSize","cc) Column Width","dd) CompanyName","ee) Container","ff) ContainsFocus","gg) ContextMenu","hh) Controls","ii) Created","jj) CreateParams","kk) ToString","Description","This property is read-only.","This is called when creating a window. Inheriting classes can override this to add extra functionality, but should not forget to first call base.CreateParams( ) to make sure the control continues to work correctly.","ll) Cursor","mm) DataBindings","nn) DataManager","oo) DataSource","pp) DefaultImeMode","qq) DefaultSize","rr) DesignMode","ss) DisplayMember","tt) DisplayRectangle","uu) Disposing","vv) Dock","ww) DrawMode","xx) ToString","Description","Gets a value indicating the mode for drawing elements of the System.Windows.Forms.CheckedListBox.","yy) Enabled","zz) Events","aaa) Focused","bbb) Font","ccc) FontHeight","ddd) ForeColor","eee) Handle","fff) HasChildren","ggg) Height","hhh) HorizontaIExtent","iii) HorizontalScrollbar","jjj) ImeMode","kkk) IntegralHeight","lll) InvokeRequired","mmm) IsAccessible","nnn) IsDisposed","ooo) IsHandleCreated","ppp) ItemHeight","qqq) ToString","Description","Gets the height of the item area.","This measurement is based on the font height plus a small margin to provide white space around the item.","rrr) Items","sss) ToString","[C#] public new CheckedListBox.ObjectCollection Items {get;}","[C++] public: _property CheckedListBox.ObjectCollection* get_Items( );","[VB] Public ReadOnly Property Items As CheckedListBox.ObjectCollection","[JScript] public function get Items( ): CheckedListBox.ObjectCollection;","Description","Gets the collection of items in this System.Windows.Forms.CheckedListBox","The System.Windows.Forms.CheckedListBox.Items property enables you to obtain a reference to the list of items that are currently stored in a System.Windows.Forms.CheckedListBox control. With this reference, you can add items, remove items, and obtain a count of the items in the collection. For more information on the tasks that can be performed with the item collection, see the System.Windows.Forms.CheckedListBox.ObjectCollection class reference topics.","ttt) Left","uuu) Location","vvv) MultiColumn","www) Name","xxx) Parent","yyy) PreferredHeight","zzz) ProductName","aaaa) ProductVersion","bbbb) RecreatingHandle","cccc) Region","dddd) RenderRightToLeft","eeee) ResizeRedraw","ffff) Right","gggg) RightToLeft","hhhh) ScrollAlwaysVisible","iiii) SelectedIndex","jjjj) SelectedIndices","kkkk) SelectedItem","llll) SelectedItems","mmmm) Selected Value","nnnn) SelectionMode","oooo) ToString","Description","Gets or sets a value specifying the selection mode.","For System.Windows.Forms.CheckedListBox objects, multiple selection is not supported. You can set the mode to one item or no items.","pppp) ShowFocusCues","qqqq) ShowKeyboardCues","rrrr) Site","ssss) Size","tttt) Sorted","uuuu) TabIndex","vvvv) TabStop","wwww) Tag","xxxx) Text","yyyy) ThreeDCheckBoxes","zzzz) ToString","Description","Gets or sets a value indicating whether the check boxes display as System.Windows.Forms.ButtonState.Flat or System.Windows. Forms.ButtonState.Normal in appearance.","aaaaa) Top","bbbbb) TopIndex","ccccc) TopLevelControl","ddddd) UseTabStops","eeeee) ValueMember","fffff) Visible","ggggg) Width","hhhhh) Window Target","iiiii) ToString","Description","jjjjj) ToString","Description","kkkkk) ToString","Description","Occurs when the checked state of an item changes.","lllll) ToString","Description","mmmmm) CreateAccessibilityInstance","[C#] protected override AccessibleObject CreateAccessibilityInstance( );","[C++] protected: AccessibleObject* CreateAccessibilityInstance( );","[VB] Overrides Protected Function CreateAccessibilityInstance( ) As AccessibleObject","[JScript] protected override function CreateAccessibilityInstance( ): AccessibleObject;","Description","Constructs the new instance of the accessibility object for this control. Subclasses should not call base.CreateAccessibilityObject.","nnnnn) CreateItem Collection","[C#] protected override ObjectCollection CreateItemCollection( );","[C++] protecteed: ObjectCollection* CreateItemCollection( );","[VB] Overrides Protected Function CreateItemCollection( ) As ObjectCollection","[JScript] protected override function CreateItemCollection( ): ObjectCollection;","Description","ooooo) GetItemChecked","[C#] public bool GetItemChecked(int index);","[C++] public: bool GetItemChecked(int index);","[VB] Public Function GetItemChecked(ByVal index As Integer) As Boolean","[JScript] public function GetItemChecked(index: int): Boolean;","Description","Returns a value indicating whether the specified item is checked.","Return Value: true if the item is checked; otherwise, false. System.Windows.Forms.CheckedListBox.GetItemChecked(System.Int32) returns true if the item is System.Windows.Forms.CheckState.Checked or System.Windows.Forms.CheckState.Indeterminate. To determine the specific state the item is in, use the System.Windows.Forms.CheckedListBox.GetItemCheckState(System.I nt32) method. The index of the item.","ppppp) GetItemCheckState","[C#] public CheckState GetItemCheckState(int index);","[C++] public: CheckState GetItemCheckState(int index);","[VB] Public Function GetItemCheckState(ByVal index As Integer) As CheckState","[JScript] public function GetItemCheckState(index: int): CheckState;","Description","Returns a value indicating the check state of the current item.","Return Value: One of the System.Windows.Forms.CheckState values. The index of the item to get the checked value of.","qqqqq) OnBackColorChanged","[C#] protected override void OnBackColorChanged(EventArgs e);","[C++] protected: void OnBackColorChanged(EventArgs* e);","[VB] Overrides Protected Sub OnBackColorChanged(ByVal e As EventArgs)","[JScript] protected override function OnBackColorChanged(e: EventArgs);","Description","rrrrr) On Click","[C#] protected override void OnClick(EventArgs e);","[C++] protected: void OnClick(EventArgs* e);","[VB] Overrides Protected Sub OnClick(ByVal e As EventArgs)","[JScript] protected override function OnClick(e: EventArgs);","Description","Ensures that mouse clicks can toggle . . . .","sssss) OnDrawItem","[C#] protected override void OnDrawItem(DrawItemEventArgs e);","[C++] protected: void OnDrawItem(DrawItemEventArgs* e);","[VB] Overrides Protected Sub OnDrawItem(ByVal e As DrawItemEventArgs)","[JScript] protected override function OnDrawItem(e: DrawItemEventArgs);","Description","Raises the DrawItem event.","Raising an event invokes the event handler through a delegate. For more information, see. The System.Windows.Forms.DrawItemEventArgs object with the details","ttttt) OnFontChanged","[C+] protected override void OnFontChanged(EventArgs e);","[C++] protected: void OnFontChanged(EventArgs* e);","[VB] Overrides Protected Sub OnFontChanged(ByVal e As EventArgs)","[JScript] protected override function OnFontChanged(e: EventArgs);","Description","uuuuu) OnHandleCreated","[C#] protected override void OnHandleCreated(EventArgs e);","[C++] protected: void OnHandleCreated(EventArgs* e);","[VB] Overrides Protected Sub OnHandleCreated(ByVal e As EventArgs)","[JScript] protected override function OnHandleCreated(e: EventArgs);","Description","When the handle is created we can dump any cached item-check pairs.","vvvvv) OnItemCheck","[C+] protected virtual void OnItemCheck(ItemCheckEventArgs ice);","[C++] protected: virtual void OnItemCheck(ItemCheckIventArgs* ice);","[VB] Overridable Protected Sub OnItemCheck(ByVal ice As ItemCheckEventArgs)","[JScript] protected function OnItemCheck(ice: ItemCheckEventArgs);","Description","This is the code that actually fires the itemCheck event. Don't forget to call base.on ItemCheck( ) to ensure that itemCheck vents are correctly fired for all other keys.","wwwww) OnKeyPress","[C#] protected override void OnKeyPress(KeyPressEventArgs e);","[C++] protected: void OnKeyPress(KeyPressEventArgs* e);","[VB] Overrides Protected Sub OnKeyPress(ByVal e As KeyPressEventArgs)","[JScript] protected override function OnKeyPress(e: KeyPressEventArgs);","Description","This is the code that actually fires the \u201ckeypress\u201d event. The Checked ListBox overrides this to look for space characters, since we want to use those to check or uncheck items periodically. Don't forget to call base.OnKeyPresso to ensure that KeyPrese events are correctly fired for all other keys. The KeyPressEventrgs that was fired.","xxxxx) OnMeasureItem","[C#] protected override void OnMeasureItem(MeasureItemEventArgs e);","[C++] protected: void OnMeasureItem(MeasureItemEventArgs* e);","[VB] Overrides Protected Sub OnMeasureItem(ByVal e As MeasureItemEventArgs)","[JScript] protected override function OnMeasureItem(e: MeasureItemEventArgs);","Description","Raises the MeasureItem event.","Raising an event invokes the event handler through a delegate. For more information, see","yyyyy) OnSelectedIndexChanged","[C#] protected override void OnSelectedIndexChanged(EventArgs e);","[C++] protected: void OnSelectedIndexChanged(EventArgs* e);","[VB] Overrides Protected Sub OnSelectedIndexChanged(ByVal e As EventArgs)","[JScript] protected override function OnSelectedIndexChanged(e: EventArgs);","Description","Actually goes and fires the selectedIndexChanged event. Inheriting controls should use this to know when the event is fired [this is preferable to adding an event handler on yourself for this event]. They should, however, remember to call base.OnSelectedIndexChanged(e); to ensure the event is still fired to external listeners Actually goes and fires the selectedIndexChanged event. Inheriting controls should use this to know when the event is fired [this is preferable to adding an event handler on yourself for this event]. They should, however, remember to call base.OnSelectedIndexChanged(e); to ensure the event is still fired to external listeners Event object with the details","zzzzz) SetItem Checked","[C#] public void SetItemChecked(int index, bool value);","[C++] public: void SetItemChecked(int index, bool value);","[VB] Public Sub SetItemChecked(ByVal index As Integer, ByVal value As Boolean)","[JScnrpt] public function SetItemChecked(index: int, value: Boolean);","Description","Sets the item at the specified index to System.Windows.Forms.CheckState.Checked.","When a value of true is passed, this method sets the checked value of the item to System.Windows.Forms.CheckState.Checked. A value of false will set the item to System.Windows.Forms.CheckState.Unchecked. The index of the item to set the check state for. true to set the item as checked; otherwise, false.","aaaaaa) SetItem CheckState","[C#] public void SetItemCheckState(int index, CheckState value);","[C++] public: void SetItemCheckState(int index, CheckState value);","[VB] Public Sub SetItemCheckState(ByVal index As Integer, ByVal value As CheckState)","[JScript] public function SetItemCheckState(index: int, value: CheckState);","Description","Sets the check state of the item at the specified index.","The System.Windows.Forms.CheckedListBox.SetItemCheckState(System.In t32, System.Windows.Forms.CheckState) method raises the System.Windows.Forms.CheckedListBox.ItemCheck event. The index of the item to set the state for. One of the System.Windows.Forms.CheckState values.","bbbbbb) WmReflectCommand","[C#] protected override void WmReflectCommand(ref Message m);","[C++] protected: void WmReflectCommand(Message* m);","[VB] Overrides Protected Sub WmReflectCommand(ByRef m As Message)","[JScript] protected override function WmReflectCommand(m: Message);","Description","We need to get LBN_SELCHANGE notifications We need to get LBN_SELCHANGE notifications","cccccc) WndProc","[C#] protected override void WndProc(ref Message m);","[C++] protected: void WndProc(Message* m);","[VB] Overrides Protected Sub WndProc(ByRef m As Message)","[JScript] protected override function WndProc(m: Message);","Description","The listbox's window procedure. Inheriting classes can override this to add extra functionality, but should not forget to call base.wndProc(m); to ensure the button continues to function properly. A Windows Message Object.","ListView.CheckedListViewItemCollection class (System.Windows.Forms)","a) WndProc","Description","b) ListView.CheckedListViewItem Collection","Example Syntax:","c) WndProc","[C#] public ListView.CheckedListViewItemCollection(ListView owner);","[C++] public: CheckedListViewItemCollection(ListView* owner);","[VB] Public Sub New(ByVal owner As ListView)","[JScript] public function ListView.CheckedListViewItemCollection(owner: ListView);","Description","d) Count","e) WndProc","[C#] public int Count {get;}","[C++] public: _property int get_Count( );","[VB] Public ReadOnly Property Count As Integer","[JScript] public function get Count( ): int;","Description","Gets the number of currently selected items.","f) IsReadOnly","g) WndProc","[C#] public bool IsReadOnly {get;}","[C++] public: _property bool get_IsReadOnly( );","[VB] Public ReadOnly Property IsReadOnly As Boolean","[JScript] public function get IsReadOnly( ): Boolean;","Description","Gets whether the collection is read-only.","h) Item","i) WndProc","[C#] public ListViewItem this[int index] {get;}","[C++] public: _property ListViewItem* get_Item(int index);","[VB] Public Default ReadOnly Property Item(ByVal index As Integer) As ListViewItem","[JScript] returnValue=CheckedListViewItemCollectionObject.Item(index);","Description","Seleted item in the list.","j) Contains","[C#] public bool Contains(ListViewItem item);","[C++] public: bool Contains(ListViewItem* item);","[VB] Public Function Contains(ByVal item As ListViewItem) As Boolean","[JScript] public function Contains(item: ListViewItem): Boolean;","Description","k) CopyTo","[C#] public void CopyTo(Array dest, int index);","[C++] public: _sealed void CopyTo(Array* dest, int index);","[VB] NotOverridable Public Sub CopyTo(ByVal dest As Array, ByVal index As Integer)","[JScript] public function CopyTo(dest: Array, index: int);","Description","l) GetEnumerator","[C#] public IEnumerator GetEnumerator( );","[C++] public: _sealed IEnumerator* GetEnumerator( );","[VB] NotOverridable Public Function GetEnumerator( ) As lenumerator","[JScript] public function GetEnumerator( ): IEnumerator;","Description","m) IndexOf","[C#] public int IndexOf(ListViewItem item);","[C++] public: int IndexOf(ListViewItem* item);","[VB] Public Function IndexOf(ByVal item As ListViewItem) As Integer","[JScript] public function IndexOf(item: ListViewItem): int;","Description","n) IList.Add","[C#] int IList.Add(object value);","[C++] int IList::Add(Object* value);","[VB] Function Add(ByVal value As Object) As Integer Implements IList.Add","[JScript] function IList.Add(value: Object): int;","o) IList.Clear","[C#] void IList.Clear( );","[C++] void IList::Clear( );","[VB] Sub Clear( ) Implements IList.Clear","[JScript] function IList.Clear( );","p) IList.Contains","[C#] bool IList.Contains(object item);","[C++] bool IList::Contains(Object* item);","[VB] Function Contains(ByVal item As Object) As Boolean Implements IList.Contains","[JScript] function IList.Contains(item: Object): Boolean;","q) IList.IndexOf","[C#] int IList.IndexOf(object item);","[C++] int IList::IndexOf(Object* item);","[VB] Function IndexOf(ByVal item As Object) As Integer Implements IList.IndexOf","[JScript] function IList.IndexOf(item: Object): int;","r) IList.Insert","[C#] void IList.Insert(int index, object value);","[C++] void IList::Insert(int index, Object* value);","[VB] Sub Insert(ByVal index As Integer, ByVal value As Object) Implements IList.Insert","[JScript] function IList.Insert(index: int, value: Object);","s) IList.Remove","[C#] void IList.Remove(object value);","[C++] void IList::Remove(Object* value);","[VB] Sub Remove(ByVal value As Object) Implements IList.Remove","[JScript] function IList.Remove(value: Object);","t) IList.RemoveAt","[C#] void IList.RemoveAt(int index);","[C++] void IList::RemoveAt(int index);","[VB] Sub RemoveAt(ByVal index As Integer) Implements IList.RemoveAt","[JScript] function IList.RemoveAt(index: int);","CheckState enumeration (System.Windows.Forms)","a) ToString","Description","Specifies the state of a control, such as a check box, that can be checked, unchecked, or set to an indeterminate state.","Multiple methods in System.Windows.Forms.CheckBox, System.Windows.Forms.CheckedListBox, and System.Windows.Forms.ItemCheckEventArgs use this enumeration.","b) ToString","[C#] public const CheckState Checked;","[C++] public: const CheckState Checked;","[VB] Public Const Checked As CheckState","[JScript] public var Checked: CheckState;","Description","The control is checked.","c) ToString","[C#] public const CheekState Indeterminate;","[C++] public: const CheckState Indeterminate;","[VB] Public Const Indeterminate As CheckState","[JScript] public var Indeterminate: CheckState;","Description","The control is indeterminate. An indeterminate control generally has a shaded appearance.","d) ToString","[C#] public const CheckState Unchecked;","[C++] public: const CheckState Unchecked;","[VB] Public Const Unchecked As CheckState","[JScript] public var Unchecked: CheckState;","Description","The control is unchecked.","ComboBox.ChildccessibleObj ect class (System.Windows.Forms)","a) ToString","Description","b) ComboBox.ChildAccessibleObject","Example Syntax:","c) ToString","[C#] public ComboBox.ChildAccessibleObject(ComboBox owner, IntPtr handle);","[C++] public: ChildAccessibleObject(ComboBox* owner, IntPtr handle);","[VB] Public Sub New(ByVal owner As ComboBox, ByVal handle As IntPtr)","[JScript] public function ComboBox.ChildccessibleObject(owner: ComboBox, handle: IntPtr);","Description","d) Bounds","e) DefaultAction","f) Description","g) Help","h) KeyboardShortcut","i) Name","j) ToString","Description","k) Parent","l) Role","m) State","n) Value","Clipboard class (System.Windows.Forms)","a) UseStdAccessibleObjects","Description","Provides methods to place data on and retrieve data from the system Clipboard. This class cannot be inherited.","For a list of predefined formats to use with the System.Windows.Forms.Clipboard class, see the System.Windows.Forms.DataFormats class.","b) GetDataObject","[C#] public static IDataObject GetDataObject( );","[C++] public: static IDataObject* GetDataObject( );","[VB] Public Shared Function GetDataObject( ) As IDataObject","[JScript] public static function GetDataObject( ): IDataObject;","Description","Retrieves the data that is currently on the system Clipboard.","Return Value: An System.Windows.Forms.IDataObject that represents the data currently on the Clipboard, or null if there is no data on the Clipboard.","Because the data type of the object returned from the Clipboard can vary, this method returns the data in an System.Windows.Forms.IDataObject. Then you can use methods of the System.Windows.Forms.IDataObject interface to extract the data in its proper data type.","c) SetDataObject","[C#] public static void SetDataObject(object data);","[C++] public: static void SetDataObject(Object* data);","[VB] Public Shared Sub SetDataObject(ByVal data As Object)","[JScript] public static function SetDataObject(data: Object); Places data on the system Clipboard.","Description","Places nonpersistent data on the system Clipboard.","Data will be deleted from system Clipboard when the application exits. The data to place on the Clipboard.","d) SetDataObject","[C#] public static void SetDataObject(object data, bool copy);","[C++] public: static void SetDataObject(Object* data, bool copy);","[VB] Public Shared Sub SetDataObject(ByVal data As Object, ByVal copy As Boolean)","[JScript] public static function SetDataObject(data: Object, copy: Boolean);","Description","Places data on the system Clipboard and specifies whether the data should remain on the Clipboard after the application exits.","If the copy parameter is false, the data will be deleted from system Clipboard when the application exits. The data to place on the Clipboard. true if you want data to remain on the Clipboard after this application exits; otherwise, false.","AxHost.ClsidAttribute class (System.Windows.Fomms)","a) ToString","b) AxHost.ClsidAttribute","Example Syntax:","c) ToString","d) TypeId","e) Value","f) ToString","ColorDepth enumeration (System.Windows.Forms)","a) ToString","Description","Specifies the number of colors used to display an image in an System.Windows.Forms.ImageList control.","This enumeration is used by the System.Windows.Forms.ImageList.ColorDepth property of the System.Windows.Forms.ImageList class.","b) ToString","[C#] public const ColorDepth Depth16 Bit;","[C++] public: const ColorDepth Depth16 Bit;","[VB] Public Const Depth16 Bit As ColorDepth","[JScript] public var Depth16 Bit: ColorDepth;","Description","A 16-bit image.","c) ToString","[C+] public const ColorDepth Depth24 Bit;","[C++] public const ColorDepth Depth24 Bit;","[VB] Public Const Depth24 Bit As ColorDepth","[JScript] public var Depth24 Bit: ColorDepth;","Description","A 24-bit image.","d) ToString","[C#] public const ColorDepth Depth32 Bit;","[C++] public: const ColorDepth Depth32 Bit;","[VB] Public Const Depth32 Bit As ColorDepth","[JScript] public var Depth32 Bit: ColorDepth;","Description","A 32-bit image.","e) ToString","[C#] public const ColorDepth Depth4 Bit;","[C++] public: const ColorDepth Depth4 Bit;","[VB] Public Const Depth4 Bit As ColorDepth","[JScript] public var Depth4 Bit: ColorDepth;","Description","A 4-bit image.","f) ToString","[C#] public const ColorDepth Depth8 Bit;","[C++] public: const ColorDepth Depth8 Bit;","[VB] Public Const Depth8 Bit As ColorDepth","[JScript] public var Depth8 Bit: ColorDepth;","Description","An 8-bit image.","ColorDialog class (System.Windows.Forms)","a) ToString","Description","Represents a common dialog box that displays available colors along with controls that allow the user to define custom colors.","The inherited member System.Windows.Forms.CommonDialog.ShowDialog must be invoked to create this specific common dialog box.","b) ColorDialog","Example Syntax:","c) ToString","[C#] public ColorDialog( );","[C++] public: ColorDialog( );","[VB] Public Sub New( )","[JScript] public function ColorDialog( );","Description","Initializes a new instance of the System.Windows.Forms.ColorDialog class.","When you create an instance of System.Windows.Forms.ColorDialog, the following read\/write properties are set to initial values.","d) AllowFullOpen","e) ToString","[C#] public virtual bool AllowFullOpen {get; set;}","[C++] public: _property virtual bool get_AllowFullOpen( ); public: _property virtual void set_AllowFullOpen(bool);","[VB] Overridable Public Property AllowFullOpen As Boolean","[JScript] public function get AllowFullOpen( ): Boolean; public function set AllowFullOpen(Boolean);","Description","Gets or sets a value indicating whether the user can use the dialog box to define custom colors.","When set to false, the associated button in the dialog box is disabled and the user cannot access the custom colors control in the dialog box.","f) AnyColor","g) ToString","[C#] public virtual bool AnyColor {get; set;}","[C++] public: _property virtual bool get_AnyColor( ); public: _property virtual void set_AnyColor(bool);","[VB] Overridable Public Property AnyColor As Boolean","[JScript] public function get AnyColor( ): Boolean; public function set AnyColor(Boolean);","Description","Gets or sets a value indicating whether the dialog box displays all available colors in the set of basic colors.","h) Color","i) ToString","[C#] public Color Color {get; set;}","[C++] public: _property Color get_Color( ); public: _property void set_Color(Color);","[VB] Public Property Color As Color","[JScript] public function get Color( ): Color; public function set Color(Color);","Description","Gets or sets the color selected by the user.","The color selected by the user in the dialog box at run time, as defined in System.Drawing.Color structure.","j) Container","k) CustomColors","l) ToString","Description","Gets or sets the set of custom colors shown in the dialog box.","Users can create their own set of custom colors.","m) DesignMode","n) Events","o) FullOpen","P) ToString","Description","Gets or sets a value indicating whether the controls used to create custom colors are visible when the dialog box is opened true if the custom color controls are available when the dialog box is opened; otherwise, false. The default value is false.","By default, the custom color controls are not visible when the dialog box is first opened. You must click the Custom Colors button to display them.","q) Instance","r) ToString","[C#] protected virtual IntPtr Instance {get;}","[C++] protected: _property virtual IntPtr get_Instance( );","[VB] Overridable Protected ReadOnly Property Instance As IntPtr","[JScript] protected function get Instance( ): IntPtr;","Description","Our HINSTANCE from Windows.","s) Options","t) ToString","[C#] protected virtual int Options {get;}","[C++] protected: _property virtual int get_Options( );","[VB] Overridable Protected ReadOnly Property Options As Integer","[JScript] protected function get Options( ): int;","Description","Returns our CHOOSECOLOR options.","u) ShowHelp","v) ToString","[C#] public virtual bool ShowHelp {get; set;}","[C++] public: _property virtual bool get_ShowHelp( ); public: _property virtual void set_ShowHelp(bool);","[VB] Overridable Public Property ShowHelp As Boolean","[JScript] public function get ShowHelp( ): Boolean; public function set ShowHelp(Boolean);","Description","Gets or sets a value indicating whether a Help button appears in the color dialog box.","w) Site","x) SolidColorOnly","y) ToString","Description","Gets or sets a value indicating whether the dialog box will restrict users to selecting solid colors only.","This property is applicable to systems with 256 or fewer colors. On these types of systems, some colors are composites of others.","z) Reset","[C#] public override void Reset( );","[C++] public: void Reset( );","[VB] Overrides Public Sub Reset( )","[JScript] public override function Reset( );","Description","Resets all options to their default values, the last selected color to black, and the custom colors to their default values.","aa) RunDialog","[C#] protected override bool RunDialog(IntPtr hwndOwner);","[C++] protected: bool RunDial og(IntPtr hwndOwner);","[VB] Overrides Protected Function RunDialog(ByVal hwndOwner As IntPtr) As Boolean","[JScript] protected override function RunDialog(hwndOwner: IntPtr): Boolean;","Description","bb) ToString","[C#] public override string ToString( );","[C++] public: String* ToString( );","[VB] Overrides Public Function ToString( ) As String","[JScript] public override function ToString( ): String;","Description","Provides a string version of this object.","Return Value: A string version of this object.","ColumnClickEventArgs class (System.Windows.Forms)","a) ToString","Description","Provides data for the System.Windows.Forms.ListView.ColumnClick event.","The System.Windows.Forms.ColumnClickEventArgs class provides the zero-based index within the System.Windows.Forms.ListView.ColumnHeaderCollection class of the column that is clicked in the System.Windows.Forms.ListView control. You can use this information in an event handler for the System.Windows.Forms.ListView.ColumnClick event to determine which column is being clicked to perform tasks on the data within the column.","b) ColumnClickEventArgs","Example Syntax:","c) ToString","[C#] public ColumnClickEventArgs(int column);","[C++] public: ColumnClickEventArgs(int column);","[VB] Public Sub New(ByVal column As Integer)","[JScript] public function ColumnClickEventArgs(column: int);","Description","Initializes a new instance of the System.Windows.Forms.ColumnClickEventArgs class. The zero-based index of the column that is clicked.","d) Column","e) ToString","[C#] public int Column {get;}","[C++] public: _property int get_Column( );","[VB] Public ReadOnly Property Column As Integer","[JScript] public function get Column( ): int;","Description","Gets the zero-based index of the column that is clicked.","You can use the information provided by this property in an event handler for the System.Windows.Forms.ListView.ColumnClick event to determine which column is being clicked to perform tasks on the data within the column.","ColumnClickEventHandler delegate (System.Windows.Forms)","a) ToString","Description","Represents the method that will handle the System.Windows.Forms.ListView.ColumnClick event of a System.Windows.Forms.ListView. The source of the event. A System.Windows.Forms.ColumnClickEventArgs that contains the event data.","When you create a System.Windows.Forms.ColumnClickEventHandler delegate, you identify the method that will handle the event. To associate the event with your event handler, add an instance of the delegate to the event. The event handler is called whenever the event occurs, unless you remove the delegate. For more information about event handler delegates, see.","ColumnHeader class (System.Windows.Forms)","a) ToString","Description","Displays a single column header in a System.Windows.Forms.ListView control.","A column header is an item in a System.Windows.Forms.ListView control that contains heading text.","b) ColumnHeader","Example Syntax:","c) ToString","[C#] public ColumnHeader( );","[C++] public: ColumnHeader( );","[VB] Public Sub New( )","[JScript] public function ColumnHeader( );","Description","Initializes a new instance of the System.Windows.Forms.ColumnHeader class.","d) Container","e) DesignMode","f) Events","g) Index","h) ToString","Description","Gets the location with the System.Windows.Forms.ListView control's System.Windows.Forms.ListView.ColumnHeaderCollection of this column.","The value of this property does not necessarily correspond to the current visual position of the column header within the System.Windows.Forms.ListView. This can be due to the user reordering the column headers at run time (when the System.Windows.Forms.ListView.AllowColumnReorder property is set to true). If the System.Windows.Forms.ColumnHeader is not contained within a System.Windows.Forms.ListView control this property returns a value of \u22121.","i) ListView","j) ToString","[C#] public ListView ListView {get;}","[C++] public: _property ListView* get_ListView( );","[VB] Public ReadOnly Property ListView As ListView","[JScript] public function get ListView( ): ListView;","Description","Gets the System.Windows.Forms.ListView control the System.Windows.Forms.ColumnHeader is located in.","You can use this property to determine which System.Windows.Forms.ListView control a specific System.Windows.Forms.ColumnHeader object is associated with.","k) Site","l) Text","m) ToString","Description","Gets or sets the text displayed in the column header.","n) TextAlign","o) ToString","[C#] public HorizontalAlignment TextAlign {get; set;}","[C++] public: _property HorizontalAlignment get_TextAlign( ); public: _property void set_TextAlign(HorizontalAlignment);","[VB] Public Property TextAlign As HorizontalAlignment","[JScript] public function get TextAlign( ): HorizontalAlignment; public function set TextAlign(HorizontalAlignment);","Description","Gets or sets the horizontal alignment of the text displayed in the System.Windows.Forms.ColumnHeader.","You can use this property to provide different text alignment settings for the text displayed in each System.Windows.Forms.ColumnHeader. For example, you might want to align the first System.Windows.Forms.ColumnHeader in a System.Windows.Forms.ListView control to the left while keeping the rest of the fields center or right aligned.","p) Width","q) ToString","[C#] public int Width {get; set;}","[C++] public: _property int get_Width( ); public: _property void set_Width(int);","[VB] Public Property Width As Integer","[JScript] public function get Width( ): int; public function set Width(int);","Description","Gets or sets the width of the column.","r) Clone","[C#] public object Cloneo;","[C++] public: _sealed Object* Clone( );","[VB] NotOverridable Public Function Clone( ) As Object","[JScript] public function Clone( ): Object;","Description","Creates an identical copy of the current System.Windows.Forms.ColumnHeader that is not attached to any list view control.","Return Value: An object representing a copy of this System.Windows.Forms.ColumnHeader object.","You can use this method to copy existing System.Windows.Forms.ColumnHeader objects from an existing System.Windows.Forms.ListView control for use in other System.Windows.Forms.ListView controls.","s) Dispose","[C#] protected override void Dispose(bool disposing);","[C++] protected: void Dispose(bool disposing);","[VB] Overrides Protected Sub Dispose(ByVal disposing As Boolean)","[JScript] protected override function Dispose(disposing: Boolean);","Description","Disposes of the resources (other than memory) used by the System.Windows.Forms.ColumnHeader.","Call System.Windows.Forms.ColumnHeader.Dispose(System.Boolean) when you are finished using the System.Windows.Forms.ColumnHeader. The System.Windows.Forms.ColumnHeader.Dispose(System.Boolean) method leaves the System.Windows.Forms.ColumnHeader in an unusable state. After calling System.Windows.Forms.ColumnHeader.Dispose(System.Boolean), you must release all references to the System.Windows.Forms.ColumnHeader so the memory it was occupying can be reclaimed by garbage collection.","t) ToString","[C#] public override string ToString( );","[C++] public: String* ToString( );","[VB] Overrides Public Function ToString( ) As String","[JScript] public override function ToString( ): String;","Description","Returns a string representation of this column header Returns a string representation of this column header","ListView.ColumnHeaderCollection class (System.Windows.Forms)","a) ToString","Description","b) ListView.ColumnHeaderCollection","Example Syntax:","c) ToString","[C#] public ListView.ColumnHeaderCollection(ListView owner);","[C++] public: ColumnHeaderCollection(ListView* owner);","[VB] Public Sub New(ByVal owner As ListView)","[JScript] public function ListView.ColumnHeaderCollection(owner: ListView);","Description","d) Count","e) ToString","[C#] public int Count {get;}","[C++] public: _property int get_Count( );","[VB] Public ReadOnly Property Count As Integer","[JScript] public function get Count( ): int;","Description","Gets the number of columns the System.Windows.Forms.ListView currently has in Details view.","f) IsReadOnly","g) ToString","[C#] public bool IsReadOnly {get;}","[C++] public: _property bool get_IsReadOnly( );","[VB] Public ReadOnly Property IsReadOnly As Boolean","[JScript] public function get IsReadOnly( ): Boolean;","Description","h) Item","i) ToString","[C#] public virtual ColumnHeader this[int index] {get;}","[C++] public: _property virtual ColumnHeader* get_Item(int index);","[VB] Overridable Public Default ReadOnly Property Item(ByVal index As Integer) As ColumnHeader","[JScript] returnValue=ColumnHeaderCollectionObject.Item(index);","Description","Given a zero-based index, returns the System.Windows.Forms.ColumnHeader object for the column at that index. The zero-based index of specific column.","j) Add","[C#] public virtual int Add(ColumnHeader value);","[C++] public: virtual int Add(ColumnHeader* value);","[VB] Overridable Public Function Add(ByVal value As ColumnHeader) As Integer","[JScript] public function Add(value: ColumnHeader): int;","Description","k) Add","[C#] public virtual ColumnHeader Add(string str, int width, HorizontalAlignment textAlign);","[C++] public: virtual ColumnHeader* Add(String* str, int width, HorizontalAlignment textAlign);","[VB] Overridable Public Function Add(ByVal str As String, ByVal width As Integer, ByVal textAlign As HorizontalAlignment) As ColumnHeader","[JScript] public function Add(str: String, width: int, textAlign: HorizontalAlignment) ColumnHeader;","Description","Adds a column to the end of the list.","Return Value: A System.Windows.Forms.ColumnHeader object representing the new column. Text for new column. Width of new column in pixels. The alignment of the text in this column. Must be a value from System.Windows.Forms.HorizontalAlignment class.","l) AddRange","[C#] public virtual void AddRange(ColumnHeader[ ] values);","[C++] public: virtual void AddRange(ColumnHeader* values[ ]);","[VB] Overridable Public Sub AddRange(ByVal values( ) As ColumnHeader)","[JScript] public function AddRange(values: ColumnHeader[ ]);","Description","m) Clear","[C#] public virtual void Clear( );","[C++] public: virtual void Clear( );","[VB] Overridable Public Sub Clear( )","[JScript] public function Clear( );","Description","Removes all columns from the list view.","n) Contains","[C#] public bool Contains(ColumnHeader value);","[C++] public: bool Contains(ColumnHeader* value);","[VB] Public Function Contains(ByVal value As ColumnHeader) As Boolean","[JScript] public function Contains(value: ColumnHeader): Boolean;","Description","o) GetEnumerator","[C#] public IEnumerator GetEnumerator( );","[C++] public: _sealed IEnumerator* GetEnumerator( );","[VB] NotOverridable Public Function GetEnumerator( ) As IEnumerator","[JScript] public function GetEnumerator( ): IEnumerator;","Description","p) IndexOf","[C#] public int IndexOf(ColumnHeader value);","[C++] public: int IndexOf(ColumnHeader* value);","[VB] Public Function IndexOf(ByVal value As ColumnHeader) As Integer","[JScript] public function IndexOf(value: ColumnHeader): int;","Description","q) Insert","[C#] public void Insert(int index, ColumnHeader value);","[C++] public: void Insert(int index, ColumnHeader* value);","[VB] Public Sub Insert(ByVal index As Integer, ByVal value As ColumnHeader)","[JScript] public function Insert(index: int, value: ColumnHeader);","Description","r) Insert","[C#] public void Insert(int index, string str, int width, HorizontalAlignment textAlign);","[C++] public: void Insert(int index, String* str, int width, HorizontalAlignment textAlign);","[VB] Public Sub Insert(ByVal index As Integer, ByVal str As String, ByVal width As Integer, ByVal textAlign As HorizontalAlignment)","[JScript] public function Insert(index: int, str: String, width: int, textAlign HorizontalAlignment);","Description","s) Remove","[C#] public virtual void Remove(ColumnHeader column);","[C++] public: virtual void Remove(ColumnHeader* column);","[VB] Overridable Public Sub Remove(ByVal column As ColumnHeader)","[JScript] public function Remove(column: ColumnHeader);","Description","t) RemoveAt","[C#] public virtual void RemoveAt(int index);","[C++] public: virtual void RemoveAt(int index);","[VB] Overridable Public Sub RemoveAt(ByVal index As Integer)","[JScript] public function RemoveAt(index: int);","Description","Removes a column from the System.Windows.Forms.ListView. The zero-based index of the column that is to be removed","u) ICollection.CopyTo","[C#] void ICollection.CopyTo(Array dest, int index);","[C++] void ICollection::CopyTo(Array* dest, int index);","[VB] Sub CopyTo(ByVal dest As Array, ByVal index As Integer) Implements ICollection.CopyTo","[JScript] function ICollection.CopyTo(dest: Array, index: int);","v) IList.Add","[C#] int IList.Add(object value);","[C++] int IList::Add(Object* value);","[VB] Function Add(ByVal value As Object) As Integer Implements IList.Add","[JScript] function IList.Add(value: Object): int;","w) IList.Contains","[C#] bool IList.Contains(object value);","[C++] bool IList::Contains(Object* value);","[VB] Function Contains(ByVal value As Object) As Boolean Implements IList.Contains","[JScript] function IList.Contains(value: Object): Boolean;","x) IList.IndexOf","[C#] int IList.IndexOf(object value);","[C++] int IList::IndexOf(Object* value);","[VB] Function IndexOf(ByVal value As Object) As Integer Implements IList.IndexOf","[JScript] function IList.IndexOf(value: Object): int;","y) IList.Insert","[C#] void IList.Insert(int index, object value);","[C++] void IList::Insert(int index, Object* value);","[VB] Sub Insert(ByVal index As Integer, ByVal value As Object) Implements IList.Insert","[JScript] function IList.Insert(index: int, value: Object);","z) IList.Remove","[C#] void IList.Remove(object value);","[C++] void IList::Remove(Object* value);","[VB] Sub Remove(ByVal value As Object) Implements IList.Remove","[JScript] function IList.Remove (value: Object);","ColumnHeaderStyle enumeration (System.Windows.Forms)","a) ToString","Description","Specifies the styles of the column headers in a System.Windows.Forms.ListView control.","Use the members of this enumeration to set the value of the System.Windows.Forms.ListView.HeaderStyle property of the System.Windows.Forms.ListView control.","b) ToString","[C#] public const ColumnHeaderStyle Clickable;","[C++] public: const ColumnHeaderStyle Clickable;","[VB] Public Const Clickable As ColumnHeaderStyle","[JScript] public var Clickable: ColumnHeaderStyle;","Description","The column headers function like buttons and can carry out an action, such as sorting, when clicked.","c) ToString","[C#] public const ColumnHeaderStyle Nonclickable;","[C++] public: const ColumnHeaderStyle Nonclickable;","[VB] Public Const Nonclickable As ColumnHeaderStyle","[JScript] public var Nonclickable: ColumnHeaderStyle;","Description","The column headers do not respond to the click of a mouse.","d) ToString","[C#] public const ColumnHeaderStyle None;","[C++] public: const ColumnHeaderStyle None;","[VB] Public Const None As ColumnHeaderStyle","[JScript] public var None: ColumnHeaderStyle;","Description","The column header is not displayed in report view.","ComboBox class (System.Windows.Forms)","a) ToString","Description","Represents a Windows combo box control.","A System.Windows.Forms.ComboBox displays an editing field combined with a System.Windows.Forms.ListBox, allowing the user to select from the list or to enter new text. The default behavour of System.Windows.Forms.ComboBox displays an edit field with a hidden drop-down list. The System.Windows.Forms.ComboBox.DropDownStyle property determines the style of combo box to display. You can enter a value that allows for a simple drop-down, where the list always displays, a drop-down list box, where the text portion is not editable and you must select an arrow to view the drop-down list box, or the default drop-down list box, where the text portion is editable and the user must press the arrow key to view the list. To always display a list that the user cannot edit, use a System.Windows.Forms.ListBox control.","b) ComboBox","Example Syntax:","c) ToString","[C#] public ComboBox( );","[C++] public: ComboBox( );","[VB] Public Sub New( )","[JScript] public function ComboBox( );","Description","Initializes a new instance of the System.Windows.Forms.ComboBox class.","Creates a new ComboBox control. The default style for the combo is a regular DropDown Combo.","d) AccessibilityObject","e) AccessibleDefaultActionDescription","f) AccessibleDescription","g) AccessibleName","h) AccessibleRole","i) AllowDrop","j) Anchor","k) BackColor","l) ToString","Description","The background color of this control. This is an ambient property and will always return a non-null value.","m) BackgroundImage","n) ToString","[C#] public override Image BackgroundImage {get; set;}","[C++] public: _property virtual Image* get_BackgroundImage( ); public: _property virtual void set_Backgroundimage(Image*);","[VB] Overrides Public Property BackgroundImage As Image","[JScript] public function get BackgroundImage( ): Image; public function set BackgroundImage(Image);","Description","o) BindingContext","p) Bottom","q) Bounds","r) CanFocus","s) CanSelect","t) Capture","u) Causes Validation","v) ClientRectangle","w) ClientSize","x) CompanyName","y) Container","z) ContainsFocus","aa) ContextMenu","bb) Controls","cc) Created","dd) CreateParams","ee) ToString","Description","Returns the parameters needed to create the handle. Inheriting classes can override this to provide extra functionality. They should not, however, forget to call base.CreateParams( ) first to get the struct filled up with the basic info.","ff) Cursor","gg) DataBindings","hh) DataManager","ii) DataSource","jj) DefaultImeMode","kk) DefaultSize","ll) ToString","Description","Deriving classes can override this to configure a default size for their control. This is more efficient than setting the size in the control's constructor.","mm) DesignMode","nn) DisplayMember","oo) DisplayRectangle","pp) Disposing","qq) Dock","rr) DrawMode","ss) ToString","Description","Gets or sets a value indicating whether your code or the operating system will handle drawing of elements in the list.","tt) DropDownStyle","uu) ToString","[C#] public ComboBoxStyle DropDownStyle {get; set;}","[C++] public: _property ComboBoxStyle get_DropDownStyle( ); public: _property void set_DropDownStyle(ComboBoxStyle);","[VB] Public Property DropDownStyle As ComboBoxStyle","[JScript] public function get DropDownStyle( ): ComboBoxStyle; public function set DropDownStyle(ComboBoxStyle);","Description","Gets or sets a value specifying the style of the combo box.","The System.Windows.Forms.ComboBox.DropDownStyle property controls the interface that is presented to the user. You can enter a value that allows for a simple drop-down list box, where the list always displays, a drop-down list box, where the text portion is not editable and you must select an arrow to view the drop down, or the default drop-down list box, where the text portion is editable and the user must press the arrow key to view the list. To always display a list that the user cannot edit, use a System.Windows.Forms.ListBox control.","vv) DropDown Width","ww) ToString","[C#] public int DropDownWidth {get; set;}","[C++] public: _property int get DropDownWidth( ); public: _property void set_DropDownWidth(int);","[VB] Public Property DropDownWidth As Integer","[JScript] public function get DropDownWidth( ): int; public function set DropDownWidth(int);","Description","Gets or sets the width of the of the drop-down portion of a combo box.","If a value has not been set for the System.Windows.Forms.ComboBox.DropDownWidth, this property returns the System.Windows.Forms.Control.Width of the combo box.","xx) DroppedDown","yy) ToString","[C#] public bool DroppedDown {get; set;}","[C++] public: _property bool get DroppedDown( ); public: _property void set DroppedDown(bool);","[VB] Public Property DroppedDown As Boolean","[JScript] public function get DroppedDown( ): Boolean; public function set DroppedDown(Boolean);","Description","Gets or sets a value indicating whether the combo box is displaying its drop-down portion.","zz) Enabled","aaa) Events","bbb) Focused","ccc) ToString","Description","Gets a value indicating whether the System.Windows.Forms.ComboBox has focus.","ddd) Font","eee) FontHeight","fff) ForeColor","ggg) ToString","Description","Gets or sets the foreground color of the control.","hhh) Handle","iii) HasChildren","jjj) Height","kkk) ImeMode","lll) IntegralHeight","mmm) ToString","Description","Gets or sets a value indicating whether the control should resize to avoid showing partial items.","When this property is set to true, the control automatically resizes to ensure that an item is not partially displayed. If you want to maintain the original size of the System.Windows.Forms.ComboBox based on the space requirements of your form, set this property to false. If the System.Windows.Forms.ComboBox does not contain any items, this property has no effect.","nnn) InvokeRequired","ooo) IsAccessible","ppp) IsDisposed","qqq) IsHandleCreated","rrr) ItemHeight","sss) ToString","Description","Gets the height of an item in the combo box.","When the System.Windows.Forms.ComboBox.DrawMode property is set to System.Windows.Forms.DrawMode.OwnerDrawFixed, all items have the same height. When the System.Windows.Forms.DrawMode property is set to System.Windows.Forms.DrawMode.OwnerDrawVariable, the System.Windows.Forms.ComboBox.ItemHeight property specifies the height of each item added to the System.Windows.Forms.ComboBox. Because each item in an owner-drawn list can have a different height, you can use the System.Windows.Forms.ComboBox.GetItemHeight(System.Int32) method to get the height of a specific item in the System.Windows.Forms.ComboBox. If you use the System.Windows.Forms.ComboBox.ItemHeight property on a System.Windows.Forms.ComboBox with items of variable height, this property returns the height of the first item in the control.","ttt) Items","uuu) ToString","[C#] public ComboBox.ObjectCollection Items {get;}","[C++] public: _property ComboBox.ObjectCollection* get_Items( );","[VB] Public ReadOnly Property Items As ComboBox.ObjectCollection","[JScript] public function get Items( ): ComboBox.ObjectCollection;","Description","Gets an object representing the collection of the items contained in this System.Windows.Forms.ComboBox.","This property enables you to obtain a reference to the list of items that are currently stored in the System.Windows.Forms.ComboBox. With this reference, you can add items, remove items, and obtain a count of the items in the collection. For more information on the tasks that can be performed with the item collection, see the System.Windows.Forms.ComboBox.ObjectCollection class reference topics.","vvv) Left","www) Location","xxx) MaxDropDownItems","yyy) ToString","Description","Gets or sets the maximum number of items to be shown in the drop-down portion of the System.Windows.Forms.ComboBox.","zzz) MaxLength","aaaa) ToString","[C#] public int MaxLength {get; set;}","[C++] public: _property int get_MaxLength( ); public: _property void set_MaxLength(int);","[VB] Public Property MaxLength As Integer","[JScript] public function get MaxLength( ): int; public function set MaxLength(int);","Description","Gets or sets the maximum number of characters allowed in the editable portion of a combo box.","bbbb) Name","cccc) Parent","dddd) PreferredHeight","eeee) ToString","Description","Gets the preferred height of the System.Windows.Forms.ComboBox.","The preferred height is a value based on the font height and an adjustment for the border.","ffff) ProductName","gggg) ProductVersion","hhhh) RecreatingHandle","iiii) Region","jjjj) RenderRightToLeft","kkkk) ResizeRedraw","llll) Right","mmmm) RightToLeft","nnnn) SelectedIndex","oooo) ToString","Description","Gets or sets the index specifying the currently selected item.","This property indicates the zero-based index of the currently selected item in the combo box list. Setting a new index raises the System.Windows.Forms.ComboBox.SelectedIndexChanged event.","pppp) SelectedItem","qqqq) ToString","[C#] public object SelectedItem {get; set;}","[C++] public: _property Object* get_SelectedItemo; public: _property void set_SelectedItem(Object*);","[VB] Public Property SelectedItem As Object","[JScript] public function get SelectedItemo: Object; public function set SelectedItem(Object);","Description","Gets or sets currently selected item in the System.Windows.Forms.ComboBox.","When you set the System.Windows.Forms.ComboBox.SelectedItem property to an object, the System.Windows.Forms.ComboBox attempts to make that object the currently selected one in the list. If the object is found in the list, it is displayed in the edit portion of the System.Windows.Forms.ComboBox and the System.Windows.Forms.ComboBox.SelectedIndex property is set to the corresponding index. If the object does not exist in the list the System.Windows.Forms.ComboBox.SelectedIndex property is left at its current value.","rrrr) SelectedText","ssss) ToString","[C#] public string SelectedText {get; set;}","[C++] public: _property String* get_SelectedText( ); public: _property void set_SelectedText(String*);","[VB] Public Property SelectedText As String","[JScript] public function get SelectedText( ): String; public function set SelectedText(String);","Description","Gets or sets the text that is selected in the editable portion of a System.Windows.Forms.ComboBox.","You can assign text to this property to change the text currently selected in the combo box. If no text is currently selected in the combo box, this property returns a zero-length string.","tttt) Selected Value","uuuu) SelectionLength","vvvv) ToString","Description","Gets or sets the number of characters selected in the editable portion of the combo box.","You can use this property to determine whether any characters are currently selected in the combo box control before performing operations on the selected text. When the value of the System.Windows.Forms.ComboBox.SelectionLength property is set to a value that is larger than the number of characters within the text of the control, the value of the System.Windows.Forms.ComboBox.SelectionLength property is set to the entire length of text within the control minus the value of the System.Windows.Forms.ComboBox.SelectionStart property (if any value is specified for the System.Windows.Forms.ComboBox.SelectionStart property).","wwww) SelectionStart","xxxx) ToString","[C#] public int SelectionStart {get; set;}","[C++] public: _property int get_SelectionStart( ); public: _property void set_SelectionStart(int);","[VB] Public Property SelectionStart As Integer","[JScript] public function get SelectionStart( ): int; public function set SelectionStart(int);","Description","Gets or sets the starting index of text selected in the combo box.","If no text is selected in the control, this property indicates the insertion point for new text. If you set this property to a location beyond the length of the text in the control, the selection start position is placed after the last character. When text is selected in the text box control, changing this property can release the value of the System.Windows.Forms.ComboBox.SelectionLength property. If the remaining text in the control after the position indicated by the System.Windows.Forms.ComboBox.SelectionStart property is less than the value of the System.Windows.Forms.ComboBox.SelectionLength property, the value of the System.Windows.Forms.ComboBox.SelectionLength property is automatically decreased. The value of the System.Windows.Forms.ComboBox.SelectionStart property never causes an increase in the System.Windows.Forms.ComboBox.SelectionLength property.","yyyy) ShowFocusCues","zzzz) ShowKeyboardCues","aaaaa) Site","bbbbb) Size","ccccc) Sorted","ddddd) ToString","Description","Gets or sets a value indicating whether the items in the combo box are sorted.","This property specifies whether the System.Windows.Forms.ComboBox sorts exisitng entries and add new entries to the appropriate sorted position in the list. You can use this property to automatically sort items in a System.Windows.Forms.ComboBox. As items are added to a sorted System.Windows.Forms.ComboBox, the items are moved to the appropriate location in the sorted list. When you set the property to false, new items are added to the end of the existing list. The sort is case-insensitive and in alphabetically ascending order.","eeeee) TabIndex","fffff) TabStop","ggggg) Tag","hhhhh) Text","iiiii) ToString","Description","Gets or sets the text associated with this control.","When setting the System.Windows.Forms.ComboBox.Text property, null or an empty string (\u201c \u201d) sets the System.Windows.Forms.ComboBox.SelectedIndex to \u22121.","jjjjj) Top","kkkkk) TopLevelControl","lllll) ValueMember","mmmmm) Visible","nnnnn) Width","ooooo) WindowTarget","ppppp) ToString","Description","Occurs when a visual aspect of an owner-drawn System.Windows.Forms.ComboBox changes.","This event is used by an owner-drawn System.Windows.Forms.ComboBox. You can use this event to perform the tasks needed to draw items in the System.Windows.Forms.ComboBox. If you have a variable sized item (when the System.Windows.Forms.ComboBox.DrawMode property set to System.Windows.Forms.DrawMode.OwnerDrawVariable), before drawing an item, the System.Windows.Forms.ComboBox.MeasureItem event is raised. You can create an event handler for the System.Windows.Forms.ComboBox.MeasureItem event to specify the size for the item that you are going to draw in your event handler for the System.Windows.Forms.ComboBox.DrawItem event.","qqqqq) ToString","[C#] public event EventHandler DropDown;","[C++] public: _event EventHandler* DropDown;","[VB] Public Event DropDown As EventHandler","Description","Occurs when the drop-down portion of a System.Windows.Forms.ComboBox is shown.","For more information about handling events, see.","rrrrr) ToString","[C#] public event EventHandler DropDownStyleChanged;","[C++] public: _event EventHandler* DropDownStyleChanged;","[VB] Public Event DropDownStyleChanged As EventHandler","Description","Occurs when the System.Windows.Forms.ComboBox.DropDownStyle property has changed.","For more information about handling events, see.","sssss) ToString","Description","Occurs when an owner-drawn System.Windows.Forms.ComboBox is created and the sizes of the list items are determined.","You can create an event handler for this event to specify the size an item is made before it is drawn in the System.Windows.Forms.ComboBox.DrawItem event.","ttttt) ToString","Description","Occurs when the System.Windows.Forms.ComboBox.SelectedIndex property has changed.","You can create an event handler for this event to determine when the selected index in the System.Windows.Forms.ComboBox has been changed. This can be useful when you need to display information in other controls based on the current selection in the System.Windows.Forms.ComboBox. You can use the event handler for this event to load the information in the other controls.","uuuuu) ToString","Description","Occurs when the selected item has changed and that change is committed.","You can create a System.Windows.Forms.ComboBox.SelectionChangeCommitted event handler to provide special handling for the System.Windows.Forms.ComboBox when the user changes the selected item in the list.","vvvvv) AddItemsCore","[C#] protected virtual void AddItemsCore(object[ ] value);","[C++] protected: virtual void AddItemsCore(Object* value _gc[ ]);","[VB] Overridable Protected Sub AddItemsCore(ByVal value( ) As Object)","[JScript] protected function AddItemsCore(value: Object[ ]);","Description","Adds the specified items to the combo box.","The System.Windows.Forms.ComboBox.AddItemsCore(System.Object[ ]) method allows derived classes to provide special behavour when adding items. An array of System.Object to append to the System.Windows.Forms.ComboBox.","wwwww) Begin Update","[C#] public void BeginUpdate( );","[C++] public: void BeginUpdate( );","[VB] Public Sub BeginUpdate( )","[JScript] public function BeginUpdate( );","Description","Maintains performance when items are added to the System.Windows.Forms.ComboBox one at a time.","This method prevents the control from painting until the System.Windows.Forms.ComboBox.EndUpdate method is called.","xxxxx) Dispose","[C#] protected override void Dispose(bool disposing);","[C++] protected: void Dispose(bool disposing);","[VB] Overrides Protected Sub Dispose(ByVal disposing As Boolean)","[JScript] protected override function Dispose(disposing: Boolean);","Description","yyyyy) EndUpdate","[C#] public void EndUpdate( );","[C++] public: void EndUpdate( );","[VB] Public Sub EndUpdate( )","[JScript] public function EndUpdate( );","Description","Resumes painting the System.Windows.Forms.ComboBox control after painting is suspended by the System.Windows.Forms.ComboBox.BeginUpdate method.","The preferred way to add items to the System.Windows.Forms.ComboBox is to use the System.Windows.Forms.ComboBox.ObjectCollection.AddRange(System.Object[ ]) method of the System.Windows.Forms.ComboBox.ObjectCollection class (through the System.Windows.Forms.ComboBox.Items property of the System.Windows.Forms.ComboBox). This enables you to add an array of items to the list at one time. However, if you want to add items one at a time using the System.Windows.Forms.ComboBox.ObjectCollection.Add(System.Object) method of the System.Windows.Forms.ComboBox.ObjectCollection class, you can use the System.Windows.Forms.ComboBox.BeginUpdate method to prevent the control from repainting the System.Windows.Forms.ComboBox each time an item is added to the list. Once you have completed the task of adding items to the list, call the System.Windows.Forms.ComboBox.EndUpdate method to enable the System.Windows.Forms.ComboBox to repaint. This way of adding items can prevent flickered drawing of the System.Windows.Forms.ComboBox when a large number of items are being added to the list.","zzzzz) FindString","[C#] public int FindString(string s);","[C++] public: int FindString(String* s);","[VB] Public Function FindString(ByVal s As String) As Integer","[JScript] public function FindString(s: String): int; Finds the first item in the System.Windows.Forms.ComboBox that starts with the specified string.","Description","Finds the first item in the combo box that starts with the specified string.","Return Value: The zero-based index of the first item found; returns \u22121 if no match is found.","The search performed by this method is not case-sensitive. The s parameter is a substring to compare against the text associated with the items in the combo box list. The search performs a partial match starting from the beginning of the text, and returning the first item in the list that matches the specified substring. You can then perform tasks, such as removing the item that contains the search text using the System.Windows.Forms.ComboBox.ObjectCollection.Remove(System.Object) method or changing the item's text. Once you have found the specified text, if you want to search for other instances of the text in the System.Windows.Forms.ComboBox, you must use the version of the System.Windows.Forms.ComboBox.FindString(System.String) method that provides a parameter for specifying a starting index within the System.Windows.Forms.ComboBox. If you want to perform a search for an exact word match instead of a partial match, use the System.Windows.Forms.ComboBox.FindStringExact(System.String) method. The System.String to search for.","aaaaaa) FindString","[C#] public int FindString(string s, int startIndex);","[C++] public: int FindString(String* s, int startIndex);","[VB] Public Function FindString(ByVal s As String, ByVal startIndex As Integer) As Integer","[JScript] public function FindString(s: String, startIndex: int): int;","Description","Finds the first item after the given index which starts with the given string. The search is not case sensitive.","Return Value: The zero-based index of the first item found; returns \u22121 if no match is found.","The search performed by this method is not case-sensitive. The s parameter is a substring to compare against the text associated with the items in the combo box list. The search performs a partial match starting from the beginning of the text, returning the first item in the list that matches the specified substring. You can then perform tasks, such as removing the item that contains the search text using the System.Windows.Forms.ComboBox.ObjectCollection.Remove(System.Object) method or changing the item's text. This method is typically used after a call has been made using the version of this method that does not specify a starting index. Once an initial item has been found in the list, this method is typically used to find further instances of the search text by specifying the index position in the startIndex parameter of the item after the first found instance of the search text. If you want to perform a search for an exact word match instead of a partial match, use the System.Windows.Forms.ComboBox.FindStringExact(System.String) method. The System.String to search for. The zero-based index of the item before the first item to be searched. Set to \u22121 to search from the beginning of the control.","bbbbbb) FindStringExact","[C#] public int FindStringExact(string s);","[C++] public: int FindStringExact(String* s);","[VB] Public Function FindStringExact(ByVal s As String) As Integer","[JScript] public function FindStringExact(s: String): int; Finds the item that exactly matches the specified string.","Description","Finds the first item in the combo box that matches the specified string.","Return Value: The zero-based index of the first item found; returns \u22121 if no match is found.","The search performed by this method is not case-sensitive. The s parameter is a string to compare against the text associated with the items in the combo box list. The search looks for a match starting from the beginning of the text, returning the first item in the list that matches the specified substring. You can then perform tasks, such as removing the item that contains the search text using the System.Windows.Forms.ComboBox.ObjectCollection.Remove(System.Object) method or changing the item's text. Once you have found the specified text, if you want to search for other instances of the text in the System.Windows.Forms.ComboBox, you must use the version of the System.Windows.Forms.ComboBox.FindStringExact(System.String) method that provides a parameter for specifying a starting index within the System.Windows.Forms.ComboBox. If you want to perform partial word search instead of an exact word match, use the System.Windows.Forms.ComboBox.FindString(System.String) method. The System.String to search for.","cccccc) FindStringExact","[C#] public int FindStringExact(string s, int startIndex);","[C++] public: int FindStringExact(String* s, int startIndex);","[VB] Public Function FindStringExact(ByVal s As String, ByVal startIndex As Integer) As Integer","[JScript] public function FindStringExact(s: String, startIndex: int): int;","Description","Finds the first item after the specified index that matches the specified string.","Return Value: The zero-based index of the first item found; returns \u22121 if no match is found.","The search performed by this method is not case-sensitive. The s parameter is a string to compare against the text associated with the items in the combo box list. The search looks for a match starting from the beginning of the text, returning the first item in the list that matches the specified substring. You can then perform tasks, such as removing the item that contains the search text using the System.Windows.Forms.ComboBox.ObjectCollection.Remove(System.Object) method or changing the item's text. This method is typically used after a call has been made using the version of this method that does not specify a starting index. Once an intial item has been found in the list, this method is typically used to find further instances of the search text by specifying the index position in the startIndex parameter of the item after the first found instance of the search text. If you want to perform partial word search instead of an exact word match, use the System.Windows.Forms.ComboBox.FindString(System.String) method. The System.String to search for. The zero-based index of the item before the first item to be searched. Set to \u22121 to search from the beginning of the control.","dddddd) GetItemHeight","[C#] public int GetItemHeight(int index);","[C++] public: int GetItemHeight(int index);","[VB] Public Function GetItemHeight(ByVal index As Integer) As Integer","[JScript] public function GetItemHeight(index: int): int;","Description","Returns the height of an item in the System.Windows.Forms.ComboBox.","Return Value: The height, in pixels, of the item at the specified index.","If the System.Windows.Forms.ComboBox.DrawMode property is not set to System.Windows.Forms.DrawMode.OwnerDrawVariable, the value of the index parameter is ignored because all items in a standard System.Windows.Forms.ComboBox are the same size. You can use this property when you are using an owner-drawn System.Windows.Forms.ComboBox to determine the size of any item within the System.Windows.Forms.ComboBox. The index of the item to return the height of.","eeeeee) IsInputKey","[C#] protected override bool IsInputKey(Keys keyData);","[C++] protected: bool IsInputKey(Keys keyData);","[VB] Overrides Protected Function IsInputKey(ByVal keyData As Keys) As Boolean","[JScript] protected override function IsInputKey(keyData: Keys): Boolean;","Description","Determines if keyData is in input key that the control wants. Overridden to return true for RETURN and ESCAPE when the combo box is dropped down.","ffffff) OnBackColorChanged","[C#] protected override void OnBackColorChanged(EventArgs e);","[C++] protected: void OnBackColorChanged(EventArgs* e);","[VB] Overrides Protected Sub OnBackColorChanged(ByVal e As EventArgs)","[JScript] protected override function OnBackColorChanged(e: EventArgs);","Description","Indicates that a critical property, such as color or font has changed.","gggggg) OnDataSourceChanged","[C#] protected override void OnDataSourceChanged(EventArgs e);","[C++] protected: void OnDataSourceChanged(EventArgs* e);","[VB] Overrides Protected Sub OnDataSourceChanged(ByVal e As EventArgs)","[JScript] protected override function OnDataSourceChanged(e: EventArgs);","Description","hhhhhh) OnDisplayMemberChanged","[C#] protected override void OnDisplayMemberChanged(EventArgs e);","[C++] protected: void OnDisplayMemberChanged(EventArgs* e);","[VB] Overrides Protected Sub OnDisplayMemberChanged(ByVal e As EventArgs)","[JScript] protected override function OnDisplayMemberChanged(e: EventArgs);","Description","iiiiii) OnDrawItem","[C#] protected virtual void OnDrawItem(DrawItemEventArgs e);","[C++] protected: virtual void OnDrawItem(DrawItemEventArgs* e);","[VB] Overridable Protected Sub OnDrawItem(ByVal e As DrawItemEventArgs)","[JScript] protected function OnDrawItem(e: DrawItemEventArgs);","Description","Raises the System.Windows.Forms.ComboBox.DrawItem event.","Raising an event invokes the event handler through a delegate. For more information, see. A System.Windows.Forms.DrawItemEventArgs that contains the event data.","jjjjjj) OnDropDown","[C#] protected virtual void OnDropDown(EventArgs e);","[C++] protected: virtual void OnDropDown(EventArgs* e);","[VB] Overrdable Protected Sub OnDropDown(ByVal e As EventArgs)","[JScript] protected function OnDropDown(e: EventArgs);","Description","Raises the System.Windows.Forms.ComboBox.DropDown event.","This event is raised each time the drop-down is displayed. An System.EventArgs that contains the event data.","kkkkkk) OnDropDownStyleChanged","[C#] protected virtual void OnDropDownStyleChanged(EventArgs e);","[C++] protected: virtual void OnDropDownstyleChanged(EventArgs* e);","[VB] Overridable Protected Sub OnDropDownStyleChanged(ByVal e As EventArgs)","[JScript] protected function OnDropDownStyleChanged(e: EventArgs);","Description","Raises the System.Windows.Forms.ComboBox.DropDownStyleChanged event.","This event is raised when you set System.Windows.Forms.ComboBox.DropDownStyle to a new value. An System.EventArgs that contains the event data.","llllll) OnFontChanged","[C#] protected override void OnFontChanged(EventArgs e);","[C++] protected: void OnFontChanged(EventArgs* e);","[VB] Overrides Protected Sub OnFontChanged(ByVal e As EventArgs)","[JScript] protected override function OnFontChanged(e: EventArgs);","Description","Indicates that a critical property, such as color or font has changed.","mmmmmm) OnForeColorChanged","[C#] protected override void OnForeColorChanged(EventArgs e);","[C++] protected: void OnForeColorChanged(EventArgs* e);","[VB] Overrides Protected Sub OnForeColorChanged(ByVal e As EventArgs)","[JScript] protected override function OnForeColorChanged(e: EventArgs);","Description","Indicates that a critical property, such as color or font has changed.","nnnnnn) OnHandleCreated","[C#] protected override void OnHandleCreated(EventArgs e);","[C++] protected: void OnHandleCreated(EventArgs* e);","[VB] Overrides Protected Sub OnHandleCreated(ByVal e As EventArgs)","[JScript] protected override function OnHandleCreated(e: EventArgs);","Description","Overridden to make sure all the items and styles get set up correctly. Inheriting classes should not forget to call base.OnHandleCreated( ) Overridden to make sure all the items and styles get set up correctly. Inheriting classes should not forget to call base.OnHandleCreated( )","oooooo) OnHandleDestroyed","[C#] protected override void OnHandleDestroyed(EventArgs e);","[C++] protected: void OnHandleDestroyed(EventArgs* e);","[VB] Overrides Protected Sub OnHandleDestroyed(ByVal e As EventArgs)","[JScript] protected override function OnHandleDestroyed(e: EventArgs);","Description","We need to un-subclasses everything here. Inheriting classes should not forget to call base.OnHandleDestroyed( ) We need to un-subclasses everything here. Inheriting classes should not forget to call base.OnHandleDestroyed( )","pppppp) OnKeyPress","[C#] protected override void OnKeyPress(KeyPressEventArgs e);","[C++] protected: void OnKeyPress(KeyPressEventArgs* e);","[VB] Overrides Protected Sub OnKeyPress(ByVal e As KeyPressEventArgs)","[JScript] protected override function OnKeyPress(e: KeyPressEventArgs);","Description","Key press event handler. Overridden to close up the combo box when the user presses RETURN or ESCAPE.","qqqqqq) OnMeasureItem","[C#] protected virtual void OnMeasureItem(MeasureItemEventArgs e);","[C++] protected: virtual void OnMeasureItem(MeasureItemEventArgs* e);","[VB] Overridable Protected Sub OnMeasureItem(ByVal e As MeasureItemEventArgs)","[JScript] protected function OnMeasureItem(e: MeasureItemEventArgs);","Description","Raises the System.Windows.Forms.ComboBox.MeasureItem event.","This is event is raised when you insert an item into the list. The System.Windows.Forms.MeasureItemEventArgs that was raised.","rrrrrr) OnParentBackColorChanged","[C#] protected override void OnParentBackColorChanged(EventArgs e);","[C++] protected: void OnParentBackColorChanged(EventArgs* e);","[VB] Overrides Protected Sub OnParentBackColorChanged(ByVal e As EventArgs)","[JScript] protected override function OnParentBackColorChanged(e: EventArgs);","Description","This method is called by the parent control when any property changes on the parent. This can be overriden by inheriting classes, however they must call base.OnParentPropertyChanged. Property change information.","ssssss) OnResize","[C#] protected override void OnResize(EventArgs e);","[C++] protected: void OnResize(EventArgs* e);","[VB] Overrides Protected Sub OnResize(ByVal e As EventArgs)","[JScript] protected override function OnResize(e: EventArgs);","Description","Raises the System.Windows.Forms.Control.Resize event.","Raising an event invokes the event handler through a delegate. For more information, see. An System.EventArgs that contains the event data.","tttttt) OnSelectedIndexChanged","[C#] protected override void OnSelectedIndexChanged(EventArgs e);","[C++] protected: void OnSelectedIndexChanged(EventArgs* e);","[VB] Overrides Protected Sub OnSelectedIndexChanged(ByVal e As EventArgs) [JScript] protected override function OnSelectedIndexChanged(e: EventArgs);","Description","Raises the System.Windows.Forms.ComboBox.SelectedIndexChanged event.","This event is raised when you select a new item from the list. This event is raised when you set System.Windows.Forms.ComboBox.SelectedIndex. An System.EventArgs that contains the event data.","uuuuuu) OnSelectedItemChanged","[C#] protected virtual void OnSelectedItemChanged(EventArgs e);","[C++] protected: virtual void OnSelectedItemChanged(EventArgs* e);","[VB] Overridable Protected Sub OnSelectedItemChanged(ByVal e As EventArgs)","[JScript] protected function OnSelectedItemChanged(e: EventArgs);","Description","Raises the SelectedItemChanged event.","This event is raised when you select a new item from the list. This event is raised when you set System.Windows.Forms.ComboBox.SelectedIndex. An System.EventArgs that contains the event data.","vvvvvv) OnSelectionChangeCommitted","[C#] protected virtual void OnSelectionChangeCommitted(EventArgs e);","[C++] protected: virtual void OnSelectionChangeCommitted(EventArgs* e);","[VB] Overridable Protected Sub OnSelectionChangeCommitted(ByVal e As EventArgs)","[JScript] protected function OnSelectionChangeCommitted(e: EventArgs);","Description","Raises the System.Windows.Forms.ComboBox.SelectionChangeCommitted event.","This event is raised when a new item is selected and that change to that item is completed. This event is also raised when you set System.Windows.Forms.ComboBox.SelectedIndex. An System.EventArgs that contains the event data.","wwwwww) RefreshItem","[C#] protected override void RefreshItem(int index);","[C++] protected: void RefreshItem(int index);","[VB] Overrides Protected Sub RefreshItem(ByVal index As Integer)","[JScript] protected override function RefreshItem(index: int);","Description","Reparses the object at the given index, getting new text string for it.","xxxxxx) Select","[C#] public void Select(int start, int length);","[C++] public: void Select(int start, int length);","[VB] Public Sub Select(ByVal start As Integer, ByVal length As Integer)","[JScript] public function Select(start: int, length: it); Selects a range of text.","Description","Selects a range of text in the editable portion of the System.Windows.Forms.ComboBox.","If you want to set the start position to the first character in the control's text, set the start parameter to zero. You can use this method to select a substring of text, such as when searching through the text of the control and replacing information. The position of the first character in the current text selection within the text box. The number of characters to select.","yyyyyy) SelectAll","[C#] public void SelectAll( );","[C++] public: void SelectAll( );","[VB] Public Sub SelectAll( )","[JScript] public function SelectAll( );","Description","Selects all the text in the editable portion of the System.Windows.Forms.ComboBox.","zzzzzz) SetBoundsCore","[C#] protected override void SetBoundsCore(int x, int y, int width, int height, BoundsSpecified specified);","[C++] protected: void SetBoundsCore(int x, int y, int width, int height, BoundsSpecified specified);","[VB] Overrides Protected Sub SetBoundsCore(ByVal x As Integer, ByVal y As Integer, ByVal width As Integer, ByVal height As Integer, ByVal specified As Bounds Specified)","[JScript] protected override function SetBoundsCore(x: int, y: int, width: int, height int, specified: BoundsSpecified);","Description","Sets the size and location of the System.Windows.Forms.ComboBox. The horizontal location in pixels of the control. The vertical location in pixels of the control. The width in pixels of the control. The height in pixels of the control. One of the System.Windows.Forms.BoundsSpecified values.","aaaaaaa) SetItem Core","[C#] protected override void SetItemCore(int index, object value);","[C++] protected: void SetItemCore(int index, Object* value);","[VB] Overrides Protected Sub SetItemCore(ByVal index As Integer, ByVal value As Object)","[JScript] protected override function SetItemCore(index: int, value: Object);","Description","bbbbbbb) SetItemsCore","[C#] protected override void SetItemsCore(object[ ] value);","[C++] protected: void SetItemsCore(Object* value _c[ ]);","[VB] Overrides Protected Sub SetItemsCore(ByVal value( ) As Object)","[JScript] protected override function SetItemsCore(value: Object[ ]);","Description","Performs the work of setting the specified items to the combobox Performs the work of setting the specified items to the combobox","ccccccc) ToString","[C#] public override string ToString( );","[C++] public: String* ToString( );","[VB] Overrides Public Function ToString( ) As String","[JScript] public override function ToString( ): String;","Description","Provides some interesting info about this control in String form.","Return Value: String Provides some interesting info about this control in String form.","ddddddd) WndProc","[C#] protected override void WndProc(ref Message m);","[C++] protected: void WndProc(Message* m);","[VB] Overrides Protected Sub WndProc(ByRef m As Message)","[JScript] protected override function WndProc(m: Message);","Description","The comboboxs window procedure. Inheriting classes can override this to add extra functionality, but should not forget to call base.wndProc(m); to ensure the combo continues to function properly. A Windows Message Object.","ComboBoxStyle enumeration (System.Windows.Forms)","a) WndProc","Description","Specifies the System.Windows.Forms.ComboBox style.","The System.Windows.Forms.ComboBox.DropDownStyle property determines whether the user can enter a new value in the text portion, and whether the list portion is always displayed.","b) WndProc","[C#] public const ComboBoxStyle DropDown;","[C++] public: const ComboBoxStyle DropDown;","[VB] Public Const DropDown As ComboBoxStyle","[JScript] public var DropDown: ComboBoxStyle;","Description","The text portion is editable. The user must click the arrow button to display the list portion.","c) WndProc","[C#] public const ComboBoxStyle DropDownList;","[C++] public: const ComboBoxStyle DropDownList;","[VB] Public Const DropDownList As ComboBoxStyle","[JScript] public var DropDownList: ComboBoxStyle;","Description","The user cannot directly edit the text portion. The user must click the arrow button to display the list portion.","d) WndProc","[C#] public const ComboBoxStyle Simple;","[C++] public: const ComboBoxStyle Simple;","[VB] Public Const Simple As ComboBoxStyle","[JScript] public var Simple: ComboBoxStyle;","Description","The text portion is editable. The list portion is always visible.","CommonDialog class (System.Windows.Forms)","a) ToString","Description","Specifies the base class used for displaying dialog boxes on the screen.","Inheritied classes are required to implement System.Windows.Forms.CommonDialog.RunDialog(System.IntPtr) by invoking System.Windows.Forms.CommonDialog.ShowDialog to create a specific common dialog box. Inherited classes can optionally override System.Windows.Forms.CommonDialog.HookProc(System.IntPtr, System.Int32, System.IntPtr, System.IntPtr) to implement specific dialog box hook functionality.","b) CommonDialog","Example Syntax:","c) ToString","[C#] public CommonDialog( );","[C++] public: CommonDialog( );","[VB] Public Sub New( )","[JScript] public function CommonDialog( );","Description","Initializes a new instance of the System.Windows.Forms.CommonDialog class.","Initializes a new instance of the System.Windows.Forms.CommonDialog class.","d) Container","e) DesignMode","f) Events","g) Site","h) ToString","Description","Occurs when the user clicks the Help button on a common dialog box. For information about handling events, see.","i) HookProc","[C#] protected virtual IntPtr HookProc(IntPtr hWnd, int msg, IntPtr wparam, IntPt lparam);","[C++] protected: virtual IntPtr HookProc(IntPtr hWnd, int msg, IntPtr wparam, IntPtr lparam);","[VB] Overridable Protected Function HookProc(ByVal hWnd As IntPtr, ByVal msg As Integer, ByVal wparam As IntPtr, ByVal lparam As IntPtr) As IntPtr","[JScript] protected function HookProc(hWnd: IntPtr, msg: int, wparam: IntPtr, lparam: IntPtr): IntPtr;","Description","Defines the common dialog box hook procedure that is overridden to add specific functionality to a common dialog box.","Return Value: A zero value if the default dialog box procedure processes the message; a nonzero value if the default dialog box procedure ignores the message.","A hook procedure allows the user to connect or insert other routines into a routine or application for the purpose of debugging or enhancing functionality. The handle to the dialog box window. The message being received. Additional information about the message. Additional information about the message.","j) OnHelpRequest","[C#] protected virtual void OnHelpRequest(EventArgs e);","[C++] protected: virtual void OnHelpRequest(EventArgs* e);","[VB] Overridable Protected Sub OnHelpRequest(ByVal e As EventArgs)","[JScript] protected function OnHelpRequest(e: EventArgs);","Description","Raises the System.Windows.Forms.CommonDialog.HelpRequest event.","This method is invoked when the Help button is clicked. Inheriting classes can override this method to handle the event. An System.Windows.Forms.HelpEventArgs that provides the event data.","k) OwnerWndProc","[C#] protected virtual IntPtr OwnerWndProc(IntPtr hWnd, int msg, IntPtr wparam, IntPtr lparam);","[C++] protected: virtual IntPtr OwnerWndProc(IntPtr hWnd, int msg, IntPtr wparam, IntPtr lparam);","[VB] Overridable Protected Function OwnerWndProc(ByVal hWnd As IntPtr, ByVal msg As Integer, ByVal wparam As IntPtr, ByVal lparam As IntPtr) As IntPtr","[JScript] protected function OwnerWndProc(hWnd: IntPtr, msg: int, wparam: IntPtr, lparam: IntPtr): IntPtr;","Description","Defines the owner window procedure that is overridden to add specific functionality to a common dialog box.","Return Value: The result of the message processing, which is dependent on the message sent.","Control is transferred here when messages are sent to the owner window of the common dialog. Inheriting classes can override this method to add specific functionality to a common dialog. The window handle of the message to send. The Win32 message to send. The wparam to send with the message. The Iparam to send with the message.","l) Reset","[C#] public abstract void Reset( );","[C++] public: virtual void Reset( )=0;","[VB] MustOverride Public Sub Reset( )","[JScript] public abstract function Reset( );","Description","When overridden in a derived class, resets the properties of a common dialog to their default values.","Inheriting classes can override this method to reset their properties.","m) RunDialog","[C#] protected abstract bool RunDialog(IntPtr hwndOwner);","[C++] protected: virtual bool RunDialog(IntPtr hwndOwner)=0;","[VB] MustOverride Protected Function RunDialog(ByVal hwndOwner As IntPtr) As Boolean","[JScript] protected abstract function RunDialog(hwndOwner: IntPtr): Boolean;","Description","When overridden in a derived class, specifies a common dialog box.","Return Value: true if the dialog was successfully run; otherwise, false.","This method is invoked when the user of a common dialog calls System.Windows.Forms.CommonDialog.ShowDialog, and it must be overridden by inherited classes of System.Windows.Forms.CommonDialog to implement a specific common dialog. An implementation of this method should store the hwndOwner and hookProcPtr parameters in the common dialog structure's hwndOwner and IpfnHook fields. A value that represents the window handle of the owner window for the common dialog box.","n) ShowDialog","[C#] public DialogResult ShowDialog( );","[C++] public: DialogResult ShowDialog( );","[VB] Public Function ShowDialog( ) As DialogResult","[JScript] public function ShowDialog( ): DialogResult; Runs a common dialog box.","Description","Runs a common dialog box with a default owner.","Return Value: System.Windows.Forms.DialogResult.OK if the user clicks OK in the dialog box; otherwise, System.Windows.Forms.DialogResult.Cancel.","This method implements System.Windows.Forms.CommonDialog.RunDialog(System.IntPtr).","o) ShowDialog","[C#] public DialogResult ShowDialog(IWin32Window owner);","[C++] public: DialogResult ShowDialog(IWin32Window* owner);","[VB] Public Function ShowDialog(ByVal owner As IWin32Window) As DialogResult","[JScript] public function ShowDialog(owner: IWin32Window): DialogResult;","Description","Runs a common dialog box as a modal dialog with the specified owner.","Return Value: System.Windows.Forms.DialogResult.OK if the user clicks OK in the dialog box; otherwise, System.Windows.Forms.DialogResult.Cancel.","This version of the System.Windows.Forms.CommonDialog.ShowDialog method allows you to specify a specific form or control that will own the dialog box that is shown. If you use the version of this method that has no parameters, the dialog box being shown would be owned automatically by the currently active window of your application. Any object that implements System.Windows.Forms.IWin32Window that represents the top-level window that will own the modal dialog.","AxHost.ConnectionPointCookie class (System.Windows.Forms)","a) ToString","b) AxHost.ConnectionPointCookie","Example Syntax:","c) ToString","d) Disconnect","[C#] public void Disconnect( );","[C++] public: void Disconnect( );","[VB] Public Sub Disconnect( )","[JScript] public function Disconnect( ); Disconnect the current connection point. If the object is not connected, this method will do nothing.","e) Finalize","[C#] \u02dcConnectionPointCookie( );","[C++] \u02dcConnectionPointCookie( );","[VB] Overrides Protected Sub Finalize( )","[JScript] protected override function Finalize( );","ContainerControl class (System.Windows.Forms)","a) ToString","Description","Provides focus management functionality for controls that can function as a container for other controls.","A System.Windows.Forms.ContainerControl represents a control that can function as a container for other controls and provides focus management. Controls that inherit from this class can track the active control they contain, even when the focus moves somewhere within a different container.","b) ContainerControl","Example Syntax:","c) ToString","[C#] public ContainerControl( );","[C++] public: ContainerControl( );","[VB] Public Sub New( )","[JScript] public function ContainerControl( );","Description","Initializes a new instance of the System.Windows.Forms.ContainerControl class.","d) AccessibilityObject","e) AccessibleDefaultActionDescription","f) AccessibleDescription","g) AccessibleName","h) AccessibleRole","i) ActiveControl","j) ToString","Description","Gets or sets the active control on the container control.","This property activates or retrieves the active control on the container control.","k) AllowDrop","l) Anchor","m) AutoScroll","n) AutoScrollMargin","o) AutoScrollMinSize","p) AutoScrollPosition","q) BackColor","r) BackgroundImage","s) BindingContext","t) ToString","Description","The binding manager for the container control.","u) Bottom","v) Bounds","w) CanFocus","x) CanSelect","y) Capture","z) CausesValidation","aa) ClientRectangle","bb) ClientSize","cc) CompanyName","dd) Container","ee) ContainsFocus","ff) ContextMenu","gg) Controls","hh) Created","ii) CreateParams","jj) ToString","Description","kk) Cursor","ll) DataBindings","mm) DefaultImeMode","nn) DefaultSize","oo) DesignMode","pp) DisplayRectangle","qq) Disposing","rr) Dock","ss) DockPadding","tt) Enabled","uu) Events","vv) Focused","ww) Font","xx) FontHeight","yy) ForeColor","zz) Handle","aaa) HasChildren","bbb) Height","ccc) HScroll","ddd) ImeMode","eee) InvokeRequired","fff) IsAccessible","ggg) IsDisposed","hhh) IsHandleCreated","iii) Left","jjj) Location","kkk) Name","lll) Parent","mmm) ParentForm","nnn) ToString","Description","Gets or sets the form that the container control is assigned to.","ooo) ProductName","ppp) ProductVersion","qqq) RecreatingHandle","rrr) Region","sss) RenderRightToLeft","ttt) ResizeRedraw","uuu) Right","vvv) RightToLeft","www) ShowFocusCues","xxx) ShowKeyboardCues","yyy) Site","zzz) Size","aaaa) TabIndex","bbbb) TabStop","cccc) Tag","dddd) Text","eeee) Top","ffff) TopLevelControl","gggg) Visible","hhhh) VScroll","iiii) Width","jjjj) WindowTarget","kkkk) AdjustFormScrollbars","[C#] protected overide void AdjustFormScrollbars(bool displayScrollbars);","[C++] protected: void AdjustFormScrollbars(bool displayScrollbars);","[VB] Overrides Protected Sub AdjustFormScrollbars(ByVal displayScrollbars As Boolean)","[JScript] protected override function AdjustFormScrollbars(displayScrollbars Boolean);","Description","llll) Dispose","[C#] protected override void Dispose(bool disposing);","[C++] protected: void Dispose(bool disposing);","[VB] Overrides Protected Sub Dispose(ByVal disposing As Boolean)","[JScript] protected override function Dispose(disposing: Boolean);","Description","Disposes of the resources (other than memory) used by the System.Windows.Forms.ContainerControl.","Call System.Windows.Forms.ContainerControl.Dispose(System.Boolean) when you are finished using the System.Windows.Forms.ContainerControl. The System.Windows.Forms.ContainerControl.Dispose(System.Boolean) method leaves the System.Windows.Forms.ContainerControl in an unusable state. After calling System.Windows.Forms.ContainerControl.Dispose(System.Boolean), you must release all references to the System.Windows.Forms.ContainerControl so the memory it was occupying can be reclaimed by garbage collection.","mmmm) OnControlRemoved","[C#] protected override void OnControlRemoved(ControlEventArgs e);","[C++] protected: void OnControlRemoved(ControlEventArgs* e);","[VB] Overrides Protected Sub OnControlRemoved(ByVal e As ControlEventArgs)","[JScript] protected override function OnControlRemoved(e: ControlEventArgs);","Description","Called when a child control is removed from this control. Contains the control that has just been removed.","nnnn) OnCreateControl","[C#] protected override void OnCreateControl( );","[C++] protected: void OnCreateControl( );","[VB] Overrides Protected Sub OnCreateControl( )","[JScript] protected override function OnCreateControl( );","Description","Raises the CreateControl event.","oooo) ProcessDialogChar","[C#] protected override bool ProcessDialogChar(char charCode);","[C++] protected: bool ProcessDialogChar(_wchar_t charCode);","[VB] Overrides Protected Function ProcessDialogChar(ByVal charCode As Char) As Boolean","[JScript] protected override function ProcessDialogChar(charCode: Char) Boolean;","Description","Processes a dialog character. Overrides Control.processDialogChar( ). This method calls the processMnemonic( ) method to check if the character is a mnemonic for one of the controls on the form. If processMnemonic( ) does not consume the character, then base.processDialogChar( ) is called.\n\nReturn Value: true to consume the character, false to allow further processing. character to pre-process.\n","pppp) ProcessDialogKey","[C#] protected override bool ProcessDialogKey(Keys keyData);","[C++] protected: bool ProcessDialogKey(Keys keyData);","[VB] Overrides Protected Function ProcessDialogKey(ByVal keyData As Keys) As Boolean","[JScript] protected override function ProcessDialogKey(keyData: Keys): Boolean;","Description","Processes a dialog key. Overrides Control.processDialogKey( ). This method implements handling of the TAB, LEFT, RIGHT, UP, and DOWN keys in dialogs. The method performs no processing on keys that include the ALT or CONTROL modifiers. For the TAB key, the method selects the next control on the form.\n\nReturn Value: true to consume the key, false to allow further processing. key code and modifier flags.\n","qqqq) ProcessMnemonic","[C#] protected override bool ProcessMnemonic(char charCode);","[C++] protected: bool ProcessMnemonic(_wchar_t charCode);","[VB] Overrides Protected Function ProcessMnemonic(ByVal charCode As Char) As Boolean","[JScript] protected override function ProcessMnemonic(charCode: Char): Boolean;","rrrr) ProcessTabKey","[C#] protected virtual bool ProcessTabKey(bool forward);","[C++] protected: virtual bool ProcessTabKey(bool forward);","[VB] Overridable Protected Function ProcessTabKey(ByVal forward As Boolean) As Boolean","[JScript] protected function ProcessTabKey(forward: Boolean): Boolean;","Description","Selects the next available control and makes it the active control.","Return Value: true if a control is selected; otherwise, false.","A control with its System.Windows.Forms.Control.TabStop property set to false cannot be selected, so the next available control will be selected. true to cycle forward through the controls in the System.Windows.Forms.ContainerControl; otherwise, false.","ssss) Select","[C#] protected override void Select(bool directed, bool forward);","[C++] protected: void Select(bool directed, bool forward);","[VB] Overrides Protected Sub Select(ByVal directed As Boolean, ByVal forward As Boolean)","[JScript] protected override function Select(directed: Boolean, forward: Boolean);","tttt) IContainerControl.ActivateControl","[C#] bool IContainerControl.ActivateControl(Control control);","[C++] bool IContainerControl::ActivateControl(Control* control);","[VB] Function ActivateControl(ByVal control As Control) As Boolean Implements IContainerControl.ActivateControl","[JScript] function IContainerControl.ActivateControl(control: Control): Boolean;","uuuu) UpdateDefaultButton","[C#] protected virtual void UpdateDefaultButton( );","[C++] protected: virtual void UpdateDefaultButton( );","[VB] Overridable Protected Sub UpdateDefaultButton( )","[JScript] protected function UpdateDefaultButton( );","Description","Updates the default button based on current selection, and the acceptButton property.","vvvv) Validate","[C#] public bool Validate( );","[C++] public: bool Validate( );","[VB] Public Function Validate( ) As Boolean","[JScript] public function Validate( ): Boolean;","Description","Validates the last invalidated control and its ancestors up through, but not including, the current control.","Return Value: true if validation is successful; otherwise, false.","wwww) WndProc","[C#] protected override void WndProc(ref Message m);","[C++] protected: void WndProc(Message* m);","[VB] Overrides Protected Sub WndProc(ByRef m As Message)","[JScript] protected override function WndProc(m: Message);","Description","ContentsResizedEventArgs class (System.Windows.Forms)","a) WndProc","Description","Provides data for the System.Windows.Forms.RichTextBox.ContentsResized event.","This event is raised when the bounding rectangle necessary to accept new text changes. If the text within the control spans multiple lines, the requested rectangle will always be the width of the control. You can handle this event in your control to implement auto-resizing for multiline System.Windows.Forms.RichTextBox controls. The System.Windows.Forms.ContentsResizedEventArgs identifies the requested size of the System.Windows.Forms.RichTextBox.","b) ContentsResizedEventArgs","Example Syntax:","c) WndProc","[C#] public ContentsResizedEventArgs(Rectangle newRectangle);","[C++] public: ContentsResizedEventArgs(Rectangle newRectangle);","[VB] Public Sub New(ByVal newRectangle As Rectangle)","[JScript] public function ContentsResizedEventArgs(newRectangle: Rectangle);","Description","Initializes a new instance of the System.Windows.Forms.ContentsResizedEventArgs class. A System.Drawing.Rectangle that specifies the requested dimensions of the System.Windows.Forms.RichTextBox control.","d) NewRectangle","e) WndProc","[C#] public Rectangle NewRectangle {get;}","[C++] public: _property Rectangle get_NewRectangle( );","[VB] Public ReadOnly Property NewRectangle As Rectangle","[JScript] public function get NewRectangle( ): Rectangle;","Description","Represents the requested size of the System.Windows.Forms.RichTextBox control.","When text is entered into the System.Windows.Forms.RichTextBox control, the System.Windows.Forms.RichTextBox control determines the proper size of the control in order to display all of the contents of the control. You can use the System.Windows.Forms.ContentsResizedEventArgs.NewRectangle property in an event handler for the System.Windows.Forms.RichTextBox.ContentsResized event of the System.Windows.Forms.RichTextBox control to properly size the control to display all of the control's contents.","ContentsResizedEventHandler delegate (System.Windows.Forms)","a) ToString","Description","Represents the method that will handle the System.Windows.Forms.RichTextBox.ContentsResized event of a System.Windows.Forms.RichTextBox.","When you create a System.Windows.Forms.ContentsResizedEventArgs delegate, you identify the method that will handle the event. To associate the event with your event handler, add an instance of the delegate to the event. The event handler is called whenever the event occurs, unless you remove the delegate. For more information about event handler delegates, see.","ContextMenu class (System.Windows.Forms)","a) ToString","Description","Represents a shortcut menu.","The System.Windows.Forms.ContextMenu class represents shortcut menus that can be displayed when the user clicks the right mouse button over a control or area of the form. Shortcut menus are typically used to combine different menu items from a System.Windows.Forms.MainMenu of a form that are useful for the user given the context of the application. For example, you can use a shortcut menu assigned to a System.Windows.Forms.TextBox control to provide menu items for changing the font of the text, finding text within the control, or Clipboard features for copying and pasting text. You can also display new System.Windows.Forms.MenuItem objects in a shortcut menu that are not located within a System.Windows.Forms.MainMenu to provide situation specific commands that are not appropriate for the System.Windows.Forms.MainMenu to display.","b) ContextMenu","Example Syntax:","c) ToString","[C#] public ContextMenu( );","[C++] public: ContextMenu( );","[VB] Public Sub New( )","[JScript] public function ContextMenu( ); Initializes a new instance of the System.Windows.Forms.ContextMenu class.","Description","Initializes a new instance of the System.Windows.Forms.ContextMenu class with no menu items specified.","Once you have used this version of the constructor, you can add menu items to the System.Windows.Forms.ContextMenu by using the System.Windows.Forms.Menu.MenuItemCollection.Add(System.String) method of the System.Windows.Forms.Menu.MenuItemCollection class. You can access the System.Windows.Forms.Menu.MenuItemCollection through the System.Windows.Forms.Menu.MenuItems property.","d) ContextMenu","Example Syntax:","e) ToString","[C#] public ContextMenu(MenuItem[ ] menuItems);","[C++] public: ContextMenu(MenuItem* menuItems[ ]);","[VB] Public Sub New(ByVal menuItems( ) As MenuItem)","[JScript] public function ContextMenu(menuItems: MenuItem[ ]);","Description","Initializes a new instance of the System.Windows.Forms.ContextMenu class with a specified set of System.Windows.Forms.MenuItem objects.","You can use this version of the constructor to create a System.Windows.Forms.ContextMenu that has its menu items specified at the time it is created. Once you have used this version of the constructor, you can add additional menu items to the System.Windows.Forms.ContextMenu by using the System.Windows.Forms.Menu.MenuItemCollection.Add(System.String) method of the System.Windows.Forms.Menu.MenuItemCollection class. You can access the System.Windows.Forms.Menu.MenuItemCollection through the System.Windows.Forms.Menu.MenuItems property. An array of System.Windows.Forms.MenuItem objects that represent the menu items to add to the context menu.","f) Container","g) DesignMode","h) Events","i) Handle","j) IsParent","k) MdiListItem","l) MenuItems","m) RightToLeft","n) ToString","Description","Gets or sets a value indicating whether text displayed by the control is displayed from right to left.","This property allows your menus to support languages that are written from right to left. When this property is set to RightToLeft.Yes, the menu item text is displayed from right to left instead of the default left to right method.","o) Site","p) SourceControl","q) ToString","Description","Gets the control that is displaying the shortcut menu.","This property enables you to determine which control currently displays the shortcut menu defined in the System.Windows.Forms.ContextMenu. If the context menu is not currently displayed, you can use this property to determine which control last displayed the shortcut menu. You can use this property in the System.Windows.Forms.ContextMenu.Popup event to ensure that the control displays the proper menu items. You can also use this property to pass a reference to the control to a method that performs the tasks associated with a menu command displayed in the shortcut menu. Since the System.Windows.Forms.Form class inherits from System.Windows.Forms.Control, you can also use this property if the System.Windows.Forms.ContextMenu is associated with a form.","r) ToString","Description","Occurs before the context menu is displayed.","You can use this event to initialize the System.Windows.Forms.MenuItem objects before they are displayed. For example, if you use a System.Windows.Forms.ContextMenu for three System.Windows.Forms.TextBox controls and you want to disable certain menu items in the System.Windows.Forms.ContextMenu depending on which System.Windows.Forms.TextBox is displaying the shortcut menu, you can create an event handler for this event. You could use the System.Windows.Forms.ContextMenu.SourceControl property to determine which System.Windows.Forms.TextBox is about to display the System.Windows.Forms.ContextMenu and disable the appropriate System.Windows.Forms.MenuItem objects.","s) OnPopup","[C#] protected internal virtual void OnPopup(EventArgs e);","[C++] protected public: virtual void on Popup(EventArgs* e);","[VB] Overridable Protected Friend Dim Sub OnPopup(ByVal e As EventArgs)","[JScript] package function OnPopup(e: EventArgs);","Description","Fires the popup event Fires the popup event Event object","t) Show","[C#] public void Show(Control control, Point pos);","[C++] public: void Show(Control* control, Point pos);","[VB] Public Sub Show(ByVal control As Control, ByVal pos As Point)","[JScript] public function Show(control: Control, pos: Point);","Description","Displays the shortcut menu at the specified position.","Typically, a System.Windows.Forms.ContextMenu is displayed when the user clicks the right mouse button on a control or area of the form that the System.Windows.Forms.ContextMenu is bound to. You can use this method to manually display the shortcut menu at a specific location and bind it with a specific control. This method does not return until the menu is dismissed. A System.Windows.Forms.Control object that specifies the control with which this context menu is associated. A System.Drawing.Point object that specifies the coordinates at which to display the menu. These coordinates are specified relative to the client coordinates of the control specified in the control parameter.","Control class (System.Windows.Forms)","a) ToString","Description","Defines the base class for controls, which are components with visual representation.","The System.Windows.Forms.Control class implements very basic functionality required by classes that display to the user. It handles user input through the keyboard and pointing devices. It handles message routing and security. It defines the bounds of a control (its position and size), although it does not implement painting. It provides a window handle (hWnd).","b) Control","Example Syntax:","c) ToString","[C#] public Control( );","[C++] public: Control( );","[VB] Public Sub New( )","[JScript] public function Control( ); Initializes a new instance of the System.Windows.Forms.Control class.","Description","Initializes a new instance of the System.Windows.Forms.Control class with default settings.","The System.Windows.Forms.Control class is the base class for all controls used in a Windows Forms application. Because this class is not typically used to create an instance of the class, this constructor is typically not called directly but is instead called by a derived class.","d) Control","Example Syntax:","e) ToString","[C#] public Control(string text);","[C++] public: Control(String* text);","[VB] Public Sub New(ByVal text As String)","[JScript] public function Control(text: Sting);","Description","Initializes a new instance of the System.Windows.Forms.Control class with specific text. A System.String that represents the text displayed by the control.","f) Control","Example Syntax:","g) ToString","[C#] public Control(Control parent, string text);","[C++] public: Control(Control* parent, String* text);","[VB] Public Sub New(ByVal parent As Control, ByVal text As String)","[JScript] public function Control(parent: Control, text: String);","Description","Initializes a new instance of the System.Windows.Forms.Control class as a child control, with specific text. A System.Windows.Forms.Control representing the parent of this control. A System.String that represents the text displayed by the control.","h) Control","Example Syntax:","i) ToString","[C#] public Control(string text, int left, int top, int width, int height);","[C++] public: Control(String* text, int left, int top, int width, int height);","[VB] Public Sub New(ByVal text As String, ByVal left As Integer, ByVal top As Integer, ByVal width As Integer, ByVal height As Integer)","[JScript] public function Control(text: String, left: int, top: int, width: int, height: int);","Description","Initializes a new instance of the System.Windows.Forms.Control class with specific text, size, and location. A System.String that represents the text displayed by the control. The System.Drawing.Point.X position of the control, in pixels, from the left edge of the control's container. The value is assigned to the System.Windows.Forms.Control.Left property. The System.Drawing.Point.Y position of the control, in pixels, from the top edge of the control's container. The value is assigned to the System.Windows.Forms.Control.Top property. The System.Windows.Forms.Control.Width of the control, in pixels. The System.Windows.Forms.Control.Height of the control, in pixels.","j) Control","Example Syntax:","k) ToString","[C#] public Control(Control parent, string text, int left, int top, int width, int height);","[C++] public: Control(Control* parent, String* text, int left, int top, int width, int height);","[VB] Public Sub New(ByVal parent As Control, ByVal text As String, ByVal left As Integer, ByVal top As Integer, ByVal width As Integer, ByVal height As Integer)=","[JScript] public function Control(parent: Control, text: String, left: int, top: int, width: int, height: int);","Description","Initializes a new instance of the System.Windows.Forms.Control class as a child control, with specific text, size, and location. A System.Windows.Forms.Control representing the parent of the control. A System.String that represents the text displayed by the control. The System.Drawing.Point.X position of the control, in pixels, from the left edge of the control's container. The value is assigned to the System.Windows.Forms.Control.Left property. The System.Drawing.Point.Y position of the control, in pixels, from the top edge of the control's container. The value is assigned to the System.Windows.Forms.Control.Top property. The System.Windows.Forms.Control.Width of the control, in pixels. The System.Windows.Forms.Control.Height of the control, in pixels.","l) AccessibilityObject","m) ToString","[C#] public AccessibleObject AccessibilityObject {get;}","[C++] public: _property AccesslbleObject* get_AccessibilityObject( );","[VB] Public ReadOnly Property AccessibilityObject As AccessibleObject","[JScript] public function get AccessibilityObject( ): AccessibleObject;","Description","Gets the System.Windows.Forms.AccessibleObject assigned to the control.","To control the instance returned from this method, override the System.Windows.Forms.Control.CreateAccessibilityInstance method.","n) AccessibleDefaultActionDescription","o) ToString","[C#] public string AccessibleDefaultActionDescription {get; set;}","[C++] public: _property String* get_AccessibleDefaultActionDescription( ); public: _property void set_AccessibleDefaultActionDescription(String*);","[VB] Public Property AccessibleDefaultActionDescription As String","[JScript] public function get AccessibleDefaultActionDescription( ): String; public function set AccessibleDefaultActionDescription(String);","Description","Gets or sets the default action description of the control for use by accessibility client applications.","An object's System.Windows.Forms.Control.AccessibleDefaultActionDescription property describes the objects primary method of manipulation from the user's viewpoint. This property should be a verb or a short verb phrase.","p) AccessibleDescription","q) ToString","[C#] public string AccessibleDescription {get; set;}","[C++] public: _property String* getAccessibleDescription( ); public: _property void set_AccessibleDescription(String*);","[VB] Public Property AccessibleDescription As String","[JScript] public function get AccessibleDescription( ): String; public function set AccessibleDescription(String);","Description","Gets or sets the description of the control used by accessibility client applications.","An object's System.Windows.Forms.Control.AccessibleDescription property provides a textual description about an object's visual appearance. The description is primarily used to provide greater context for low-vision or blind users, but can also be used for context searching or other applications.","r) AccessibleName","s) ToString","[C#] public string AccessibleName {get; set;}","[C++] public: _property String* get_AccessibleName( ); public: _property void set_AccessibleName(String*);","[VB] Public Property AccessibleName As String","[JScript] public function get AccessibleName( ): String; public function set AccessibleName(String);","Description","Gets or sets the name of the control used by accessibility client applications.","The System.Windows.Forms.Control.AccessibleName property is a label that briefly describes and identifies the object within its container, such as the text in a System.Windows.Forms.Button, the name of a System.Windows.Forms.MenuItem, or a label displayed next to a System.Windows.Forms.TextBox control.","t) AccessibleRole","u) ToString","[C#] public AccessibleRole AccessibleRole {get; set;}","[C++] public: _property AccessibleRole get_AccessibleRole( ); public: _property void set_AccessibleRole(AccessibleRole);","[VB] Public Property AccessibleRole As AccessibleRole","[JScript] public function get AccessibleRole( ): AccessibleRole; public function set AccessibleRole(AccessibleRole);","Description","Gets or sets the accessible role of the control The System.Windows.Forms.AccessibleRole of the control. The default is System.Windows.Forms.AccessibleRole.Default.","The System.Windows.Forms.Control.AccessibleRole property describes what kind of user interface element an object is. If the control's role cannot be determined, the System.Windows.Forms.Control.AccessibleRole property is set to System.Windows.Forms.AccessibleRole.Default.","v) AllowDrop","w) ToString","[C#] public virtual bool AllowDrop {get; set;}","[C++] public: _property virtual bool get_AllowDrop( ); public: _property virtual void set_AllowDrop(bool);","[VB] Overridable Public Property AllowDrop As Boolean","[JScript] public function get AllowDrop( ): Boolean; public function set AllowDrop(Boolean);","Description","Gets or sets a value indicating whether the control can accept data that the user drags onto it.","When overriding the System.Windows.Forms.Control.AllowDrop property in a derived class, use the base class's System.Windows.Forms.Control.AllowDrop property to extend the base implementation. Otherwise, you must provide all the implementation. You are not required to override both the get and set methods of the System.Windows.Forms.Control.AllowDrop property; you can override only one if needed.","x) Anchor","y) ToString","[C#] public virtual AnchorStyles Anchor {get; set;}","[C++] public: _property virtual AnchorStyles get_Anchor( ); public: _property virtual void set_Anchor(AnchorStyles);","[VB] Overridable Public Property Anchor As AnchorStyles","[JScript] public function get Anchor( ): AnchorStyles; public function set","Anchor(AnchorStyles);","Description","Gets or sets which edges of the control are anchored to the edges of its container.","A control can be docked to one edge of its parent container or can dock to all edges and fill the parent container. For example, if you set this property to System.Windows.Forms.DockStyle.Left, the left edge of the control will be docked to the left edge of its parent control. Additionally, the docked edge of the control is resized to match that of its container control. Controls are docked in order of their z-order.","z) BackColor","aa) ToString","[C#] public virtual Color BackColor {get; set;}","[C++] public: _property virtual Color get_BackColor( ); public: _property virtual void set_BackColor(Color);","[VB] Overridable Public Property BackColor As Color","[JScript] public function get BackColor( ): Color; public function set BackColor(Color);","Description","Gets or sets the background color for the control.","The System.Windows.Forms.Control.BackColor property does not support transparent colors unless the System.Windows.Forms.ControlStyles.SupportsTransparentBackColor style bit is set to true","bb) BackgroundImage","cc) ToString","[C#] public virtual Image BackgroundImage {get; set;}","[C++] public: _property virtual Image* get_BackgroundImage( ); public: _property virtual void set_BackgroundImage(Image*);","[VB] Overridable Public Property BackgroundImage As Image","[JScript] public function get BackgroundImage( ): Image; public function set BackgroundImage(Image);","Description","Gets or sets the background image displayed in the control.","Images with translucent or transparent colors are not supported by Windows Forms controls as background images.","dd) BindingContext","ee) ToString","[C#] public virtual BindingContext BindingContext {get; set;}","[C++] public: _property virtual BindingContext* get_BindingContext( ); public: _property virtual void set_BindingContext(BindingContext*);","[VB] Overridable Public Property BindingContext As BindingContext","[JScript] public function get BindingContext( ): BindingContext; public function set BindingContext(BindingContext);","Description","Gets or sets the System.Windows.Forms.BindingContext for the control.","The System.Windows.Forms.BindingContext object of a System.Windows.Forms.Control is used to return a single System.Windows.Forms.BindingManagerBase object for all data-bound controls contained by the System.Windows.Forms.Control. The System.Windows.Forms.BindingManagerBase object keeps all controls that are bound to the same data source synchronized. For example, setting the System.Windows.Forms.BindingManagerBase.Position property of the System.Windows.Forms.BindingManagerBase specifies the item in the underlying list that all data-bound controls point to.","ff) Bottom","gg) ToString","[C#] public int Bottom {get;}","[C++] public: _property int get_Bottom( );","[VB] Public ReadOnly Property Bottom As Integer","[JScript] public function get Bottom( ): int;","Description","Gets the distance between the bottom edge of the control and the top edge of its container's client area.","The value of this property is equal to the sum of the System.Windows.Forms.Control.Top property value, plus the System.Windows.Forms.Control.Height property value.","hh) Bounds","ii) ToString","[C#] public Rectangle Bounds {get; set;}","[C++] public: _property Rectangle get_Bounds( ); public: _property void set_Bounds(Rectangle);","[VB] Public Property Bounds As Rectangle","[JScript] public function get Bounds( ): Rectangle; public function set Bounds(Rectangle);","Description","Gets or sets the size and location of the control.","jj) CanFocus","kk) ToString","[C#] public bool CanFocus {get;}","[C++] public: _property bool get_CanFocus( );","[VB] Public ReadOnly Property CanFocus As Boolean","[JScript] public function get CanFocus( ): Boolean;","Description","Gets a value indicating whether the control can receive focus.","In order for a control to receive input focus, the control must have a handle assigned to it, and the System.Windows.Forms.Control.Visible and System.Windows.Forms.Control.Enabled properties must both be set to true.","ll) CanSelect","mm) ToString","[C#] public bool CanSelect {get;}","[C++] public: _property bool get_CanSelect( );","[VB] Public ReadOnly Property CanSelect As Boolean","[JScript] public function get CanSelect( ): Boolean;","Description","Gets a value indicating whether the control can be selected.","This property returns true if the control has System.Windows.Forms.ControlStyles.Selectable set to true, is contained in another control, and all of its parent controls are both visible and enabled.","nn) Capture","oo) ToString","[C#] public bool Capture {get; set;}","[C++] public: _property bool get_Capture( ); public: _property void set_Capture(bool);","[VB] Public Property Capture As Boolean","[JScript] public function get Capture( ): Boolean; public function set Capture(Boolean);","Description","Gets or sets a value indicating whether the control has captured the mouse.","When a control has captured the mouse, it receives mouse input whether or not the cursor is within its borders. The mouse is typically only captured during drag operations.","pp) Causes Validation","qq) ToString","[C#] public bool CausesValidation {get; set;}","[C++] public: _property bool get_CausesValidation( ); public: _property void set_CausesValidation(bool);","[VB] Public Property CausesValidation As Boolean","[JScript] public function get CausesValidation( ): Boolean; public function set CausesValidation(Boolean);","Description","Gets or sets a value indicating whether the control causes validation to be performed on all controls that require validation when it receives focus.","The System.Windows.Forms.Control.CausesValidation property value is typically set to false for controls such as a Help button.","rr) ClientRectangle","ss) ToString","[C#] public Rectangle ClientRectangle {get;}","[C++] public: _property Rectangle get_ClientRectangle( );","[VB] Public ReadOnly Property ClientRectangle As Rectangle","[JScript] public function get ClientRectangle( ): Rectangle;","Description","Gets the rectangle that represents the client area of the control.","The client area of a control is the bounds of the control, minus the non-client elements such as scroll bars, borders, title bars and menus.","tt) ClientSize","uu) ToString","[C#] public Size ClientSize {get; set;}","[C++] public: _property Size get_ClientSize( ); public: _property void set_ClientSize(Size);","[VB] Public Property ClientSize As Size","[JScript] public function get ClientSize( ): Size; public function set ClientSize(Size);","Description","Gets or sets the height and width of the client area of the control.","The client area of a control is the bounds of the control, minus the non-client elements such as scroll bars, borders, title bars and menus.","vv) CompanyName","ww) ToString","[C#] public string CompanyName {get;}","[C++] public: _property String* get_CompanyName( );","[VB] Public ReadOnly Property CompanyName As String","[JScript] public function get CompanyName( ): String;","Description","Gets the name of the company or creator of the application containing the control.","The System.Windows.Forms.Control.CompanyName property is a read-only property. In order to change the value of this property, set the System.Reflection.AssemblyCompanyAttribute.Company property value of the System.Reflection.AssemblyCompanyAttribute.","xx) Container","yy) ContainsFocus","zz) ToString","Description","Gets a value indicating whether the control, or one of its child controls, currently has the input focus.","You can use this property to determine whether a control or any of the controls contained within it has the input focus. To determine whether the control has focus, regardless of whether any of its child controls have focus, use the System.Windows.Forms.Control.Focused property. To give a control the input focus, use the System.Windows.Forms.Control.Focus or System.Windows.Forms.Control.Select methods.","aaa) ContextMenu","bbb) ToString","[C#] public virtual ContextMenu ContextMenu {get; set;}","[C++] public: _property virtual ContextMenu* get_ContextMenu( ); public: _property virtual void set_ContextMenu(ContextMenu*);","[VB] Overridable Public Property ContextMenu As ContextMenu","[JScript] public function get ContextMenu( ): ContextMenu; public function set ContextMenu(ContextMenu);","Description","Gets or sets the shortcut menu associated with the control.","A shortcut menu is also known as a context menu. Shortcut menus are used to give context specific menu options to users when they right-click on the control.","ccc) Controls","ddd) ToString","[C#] public Control.ControlCollection Controls {get;}","[C++] public: _property Control.ControlCollection* get_Controls( );","[VB] Public ReadOnly Property Controls As Control.ControlCollection","[JScript] public function get Controls( ): Control.ControlCollection;","Description","Gets the collection of controls contained within the control.","A System.Windows.Forms.Control can act as a parent to a collection of controls. For example, when several controls are added to a System.Windows.Forms.Form, each of the controls is a member of the System.Windows.Forms.Control.ControlCollection object assigned to the System.Windows.Forms.Control.Controls property of the form, which is derived from the System.Windows.Forms.Control class.","eee) Created","[C#] public bool Created {get;}","[C++] public: _property bool get_Created( );","[VB] Public ReadOnly Property Created As Boolean","[JScript] public function get Created( ): Boolean;","Description","Gets a value indicating whether the control has been created.","The System.Windows.Forms.Control.Created property returns true if the System.Windows.Forms.Control was successfully created even though the control's handle may not have been created or recreated yet.","ggg) CreateParams","hhh) ToString","[C#] protected virtual CreateParams CreateParams {get;}","[C++] protected: _property virtual CreateParams* get_CreateParams( );","[VB] Overridable Protected ReadOnly Property CreateParams As CreateParams","[JScript] protected function get CreateParams( ): CreateParams;","Description","Gets the required creation parameters when the control handle is created.","The System.Windows.Forms.Control.CreateParams property should not be overridden and used to adjust the properties of your derived control. Properties such as the System.Windows.Forms.CreateParams.Caption System.Windows.Forms.CreateParams.Width, and System.Windows.Forms.CreateParams.Height should be set by the corresponding properties in your control such as System.Windows.Forms.Control.Text System.Windows.Forms.Control.Width and System.Windows.Forms.Control.Height. The System.Windows.Forms.CreateParams object should only be extended when you are wrapping a standard Windows control class or to set styles not provided by the Windows Forms namespace. For more information about creating control parameters, see the CreateWindow and CreateWindowEx functions and the CREATESTRUCT structure documentation in the Windows Platform SDK reference located in the MSDN Library.","iii) Cursor","jjj) ToString","[C#] public virtual Cursor Cursor {get; set;}","[C++] public: _property virtual Cursor* get_Cursor( ); public: _property virtual void set_Cursor(Cursor*);","[VB] Overridable Public Property Cursor As Cursor","[JScript] public function get Cursor( ): Cursor; public function set Cursor(Cursor);","Description","Gets or sets the cursor that is displayed when the mouse pointer is over the control.","When overriding the System.Windows.Forms.Control.Cursor property in a derived class, use the base class's System.Windows.Forms.Control.Cursor property to extend the base implementation. Otherwise, you must provide all the implementation. You are not required to override both the get and set methods of the System.Windows.Forms.Control.Cursor property; you can override only one if needed.","kkk) DataBindings","lll) Tostring","[C#] public ControlBindingsCollection DataBindings {get;}","[C++] public: _property ControlBindingsCollection* get_DataBindings( );","[VB] Public ReadOnly Property DataBindings As ControlBindingsCollection","[JScript] public function get DataBindings( ): ControlBindingsCollection;","Description","Gets the data bindings for the control.","Use the System.Windows.Forms.Control.DataBindings property to access the System.Windows.Forms.ControlBindingsCollection. By adding System.Windows.Forms.Binding objects to the collection, you can bind any property of a control to the property of an object.","mmm) DefaultBackColor","nnn) ToString","[C#] public static Color DefaultBackColor {get;}","[C++] public: _property static Color get_DefaultBackColor( );","[VB] Public Shared ReadOnly Property DefaultBackColor As Color","[JScript] public static function get DefaultBackColor( ): Color;","Description","Gets the default background color of the control.","This is the default System.Windows.Forms.Control.BackColor property value of a generic top-level control. Derived classes may have different defaults.","ooo) DefaultFont","ppp) ToString","[C#] public static Font DefaultFont {get;}","[C++] public: _property static Font* get_DefaultFont( );","[VB] Public Shared ReadOnly Property DefaultFont As Font","[JScript] public static function get DefaultFont( ): Font;","Description","Gets the default font of the control.","If no System.Drawing.FontFamily.GenericSansSerif fonts are installed on the user's computer, the DEFAULT_GUI_FONT is used. The DEFAULT_GUI_FONT is the default font used by user interface objects such as menus and dialog boxes.","qqq) DefauitForeColor","rrr) ToString","[C#] public static Color DefaultForeColor {get;}","[C++] public: _property static Color get_DefaultForeColor( );","[VB] Public Shared ReadOnly Property DefaultForeColor As Color","[JScript] public static function get DefaultForeColor( ): Color;","Description","Gets the default foreground color of the control.","This is the default System.Windows.Forms.Control.ForeColor property value of a non-parented control. Derived classes may have different defaults.","sss) DefaultlmeMode","ttt) ToString","[C#] protected virtual ImeMode DefaultlmeMode {get;}","[C++] protected: _property virtual ImeMode get_DefaultlmeMode( );","[VB] Overridable Protected ReadOnly Property DefaultlmeMode As ImeMode","[JScript] protected function get DefaultlmeMode( ): ImeMode;","Description","Gets the default Input Method Editor (IME) mode supported by this control.","An input method editor (IME) is a program that allows users to enter complex characters and symbols, such as Japanese Kanji characters, by using a standard keyboard.","uuu) DefaultSize","vvv) ToString","[C#] protected virtual Size DefaultSize {get;}","[C++] protected: _property virtual Size get_DefaultSize( );","[VB] Overidable Protected ReadOnly Property DefaultSize As Size","[JScript] protected function get DefaultSize( ): Size;","Description","Gets the default size of the control.","The System.Windows.Forms.Control.DefaultSize property represents the System.Drawing.Size of the control when it is initially created. You may adjust the size of the control by setting its System.Windows.Forms.Control.Size property value.","www) DesignMode","xxx) DisplayRectangle","yyy) ToString","Description","Gets the rectangle that represents the display area of the control.","The System.Windows.Forms.Control.DisplayRectangle property returns the client rectangle of the display area of the control. For the base control class, this is equal to the client rectangle. However, inheriting controls may want to change this if their client area differs from their display area. The display rectangle is the smallest System.Drawing.Rectangle that encloses a control and is used used to layout controls. If When overriding the System.Windows.Forms.Control.DisplayRectangle property in a derived class, use the base class's System.Windows.Forms.Control.DisplayRectangle property to extend the base implementation. Alternatively, you must provide all the implementation.","zzz) Disposing","aaaa) ToString","[C#] public bool Disposing {get;}","[C++] public: _property bool get_Disposing( );","[VB] Public ReadOnly Property Disposing As Boolean","[JScript] public function get Disposing( ): Boolean;","Description","Gets a value indicating whether the control is in the process of being disposed.","When this property returns true, the control is in the process of being disposed. After the control is disposed, it can no longer be referenced as a valid Windows control. Even though the instance of a control is disposed, it is still maintained in memory until it is removed from memory through garbage collection. When a control is disposed, you can not call its System.Windows.Forms.Control.RecreateHandle method.","bbbb) Dock","cccc) ToString","[C#] public virtual DockStyle Dock {get; set;}","[C++] public: _property virtual DockStyle get_Dock( ); public: _property virtual void set_Dock(DockStyle);","[VB] Overridable Public Property Dock As DockStyle","[JScript] public function get Dock( ): DockStyle; public function set Dock(DockStyle);","Description","Gets or sets which edge of the parent container a control is docked to.","A control can be docked to one edge of its parent container or can dock to all edges and fill the parent container. For example, if you set this property to System.Windows.Forms.DockStyle.Left, the left edge of the control will be docked to the left edge of its parent control. Additionally, the docked edge of the control is resized to match that of its container control. Controls are docked in order of their z-order.","dddd) Enabled","eeee) ToString","[C#] public bool Enabled {get; set;}","[C++] public: _property bool get_Enabled( ); public: _property void set_Enabled(bool);","[VB] Public Property Enabled As Boolean","[JScript] public function get Enabled( ): Boolean; public function set Enabled(Boolean);","Description","Gets or sets a value indicating whether the control can respond to user interaction.","The System.Windows.Forms.Control.Enabled property allows controls to be enabled or disabled at run time. For example, you can disable controls that do not apply to the current state of the application. You can also disable a control to restrict its use. For example, a button can be disabled to prevent the user from clicking it. If a control is disabled, it cannot be selected.","ffff) Events","gggg) Focused","hhhh) ToString","Description","Gets a value indicating whether the control has input focus.","When overriding the System.Windows.Forms.Control.Focused property in a derived class, use the base class's System.Windows.Forms.Control.Focused property to extend the base implementation. Otherwise, you must provide all the implementation.","iiii) Font","jjjj) ToString","[C#] public virtual Font Font {get; set;}","[C++] public: _property virtual Font* get_Font( ); public: _property virtual void set_Font(Font*);","[VB] Overridable Public Property Font As Font","[JScript] public function get Font( ): Font; public function set Font(Font);","Description","Gets or sets the font of the text displayed by the control.","Because the System.Drawing.Font object is immutable (meaning that you cannot adjust any of it's properties), you can only assign the System.Windows.Forms.Control.Font property a new System.Drawing.Font object. However, you can base the new font on the existing font. The following is an example of how to adjust the existing font to make it bold: myControl.Font=new Font(myControl.Font, myControl.Font.Style|FontStyle.Bold); MyControl.Font=New Font(MyControl.Font, _MyControl.Font.Style Or FontStyle.Bold) When overriding the System.Windows.Forms.Control.Font property in a derived class, use the base class's System.Windows.Forms.Control.Font property to extend the base implementation. Otherwise, you must provide all the implementation. You are not required to override both the get and set methods of the System.Windows.Forms.Control.Font property; you can override only one if needed.","kkkk) FontHeight","llll) ToString","[C#] protected int FontHeight {get; set;}","[C++] protected: _property int get_FontHeight( ); protected: _property void set_FontHeight(int);","[VB] Protected Property FontHeight As Integer","[JScript] protected function get FontHeight( ): int; protected function set FontHeight(int);","Description","Gets or sets the height of the font of the control.","The System.Windows.Forms.Control.FontHeight property should not be set to any value other than the control's System.Drawing.Font.Height value, or \u22121. Setting System.Windows.Forms.Control.FontHeight to \u22121 has the effect of clearing the cached height value, and the value is recalculated the next time the property is referenced.","mmmm) ForeColor","nnnn) ToString","[C#] public virtual Color ForeColor {get; set;}","[C++] public: _property virtual Color get_ForeColor( ); public: _property virtual void set_ForeColor(Color);","[VB] Overridable Public Property ForeColor As Color","[JScript] public function get ForeColor( ): Color; public function set ForeColor(Color);","Description","Gets or sets the foreground color of the control.","When overriding the System.Windows.Forms.Control.ForeColor property in a derived class, use the base class's System.Windows.Forms.Control.ForeColor property to extend to the base implementation. Otherwise, you must provide all the implementation. You are not required to override both the get and set methods of the System.Windows.Forms.Control.ForeColor property; you can override only one if needed.","oooo) Handle","pppp) ToString","[C#] public IntPtr Handle {get;}","[C++] public: _property IntPtr get_Handle( );","[VB] Public ReadOnly Property Handle As IntPtr","[JScript] public function get Handle( ): IntPtr;","Description","Gets the window handle that the control is bound to.","The value of the System.Windows.Forms.Control.Handle property is a Windows HWND. If the handle has not yet been created, referencing this property will force the handle to be created.","qqqq) HasChildren","rrrr) ToString","[C#] public bool HasChildren {get;}","[C++] public: _property bool get_HasChildren( );","[VB] Public ReadOnly Property HasChildren As Boolean","[JScript] public function get HasChildren( ): Boolean;","Description","Gets a value indicating whether the control contains one or more child controls.","If the System.Windows.Forms.Control.Controls collection has a System.Windows.Forms.Control.ControlCollection.Count greater than zero, the System.Windows.Forms.Control.HasChildren property will return true. Accessing the System.Windows.Forms.Control.HasChildren property does not force the creation of a System.Windows.Forms.Control.ControlCollection if the control has no children, so referencing this property can provide a performance benefit when walking a tree of controls.","ssss) Height","tttt) ToString","[C#] public int Height {get; set;}","[C++] public: _property int get_Height( ); public: _property void set_Height(int);","[VB] Public Property Height As Integer","[JScript] public function get Height( ): int; public function set Height(int);","Description","Gets or sets the height of the control.","The minimum height for the derived control System.Windows.Forms.Splitter is one pixel. The default height for the System.Windows.Forms.Splitter control is three pixels.Setting the height of the System.Windows.Forms.Splitter control to a value less than one will reset the property value to the default height.","uuuu) ImeMode","vvvv) ToString","[C#] public ImeMode ImeMode {get; set;}","[C++] public: _property ImeMode get_ImeMode( ); public: _property void set_ImeMode(ImeMode);","[VB] Public Property ImeMode As ImeMode","[JScript] public function get ImeMode( ): ImeMode; public function set ImeMode(ImeMode);","Description","Gets or sets the Input Method Editor (IME) mode of the control.","An input method editor (IME) is a program that allows users to enter complex characters and symbols, such as Japanese Kanji characters, using a standard keyboard. The System.Windows.Forms.Control.ImeMode property is typically set to System.Windows.Forms.ImeMode.Off for a System.Windows.Forms.TextBox that is intended to only enter numeric values.","wwww) InvokeRequired","xxxx) ToString","[C#] public bool InvokeRequired {get;}","[C++] public: _property bool get_InvokeRequired( );","[VB] Public ReadOnly Property InvokeRequired As Boolean","[JScript] public function get InvokeRequired( ): Boolean;","Description","Gets a value indicating whether the caller must call invoke when making method calls to this control because the caller is on a different thread than the control was created on.","Controls in Windows Forms are bound to a specific thread and are not thread-safe. Therefore, if you are calling a control's method from a different thread, you must use the control's invoke method to marshal the call to the proper thread. This function can be used to determine if you must call invoke, which can be useful if you do not know what thread owns a control. There are four methods on a control that are safe to call from any thread: System.Windows.Forms.Control.Invoke(System.Delegate), System.Windows.Forms.Control.BeginInvoke(System.Delegate), System.Windows.Forms.Control.EndInvoke(System.IAsyncResult) and System.Windows.Forms.Control.CreateGraphics. For all other method calls, you should use one of the invoke methods when calling from a different thread.","yyyy) IsAccessible","zzzz) ToString","[C#] public bool IsAccessible {get; set;}","[C++] public: _property bool get_IsAccessible( ); public: _property void set_IsAccessible(bool);","[VB] Public Property IsAccessible As Boolean","[JScript] public function get IsAccessible( ): Boolean; public function set IsAccessible(Boolean);","Description","Gets or sets a value indicating whether the control is visible to accessibility applications.","aaaaa) IsDisposed","bbbbb) ToString","[C#] public bool IsDisposed {get;}","[C++] public: _property bool get_IsDisposed( );","[VB] Public ReadOnly Property IsDisposed As Boolean","[JScript] public function get IsDisposed( ): Boolean;","Description","Gets a value indicating whether the control has been disposed of.","When this property returns true, the control is disposed of and can no longer a be referenced as a valid Windows control. Even though the instance of a control is disposed of, it is still maintained in memory until it is removed from memory through garbage collection. When a control is disposed, you can not call its System.Windows.Forms.Control.RecreateHandle method.","ccccc) IsHandleCreated","ddddd) ToString","[C#] public bool IsHandleCreated {get;}","[C++] public: _property bool get_IsHandleCreated( );","[VB] Public ReadOnly Property IsHandleCreated As Boolean","[JScript] public function get IsHandleCreated( ): Boolean;","Description","Gets a value indicating whether the control has a handle associated with it.","eeeee) Left","fffff) ToString","[C#] public int Left {get; set;}","[C++] public: _property int get_Left( ); public: _property void set_Left(int);","[VB] Public Property Left As Integer","[JScript] public function get Left( ): int; public function set Left(int);","Description","Gets or sets the x-coordinate of a control's left edge in pixels.","The System.Windows.Forms.Control.Left property value is equivalent to the System.Drawing.Point.X property of the System.Windows.Forms.Control.Location property value of the control.","ggggg) Location","hhhhh) ToString","[C#] public Point Location {get; set;}","[C++] public: _property Point get_Location( ); public: _property void set_Location(Point);","[VB] Public Property Location As Point","[JScript] public function get Location( ): Point; public function set Location(Point);","Description","Gets or sets the coordinates of the upper-left corner of the control relative to the upper-left corner of its container.","Since the System.Drawing.Point class is a value type (structure in VB, struct in C#) it is returned by value, meaning accessing the property returns a copy of the upper-left point of the control. So, adjusting the System.Drawing.Point.X or System.Drawing.Point.Y properties of the System.Drawing.Point object returned from this property will not affect the System.Windows.Forms.Control.Left, System.Windows.Forms.Control.Right, System.Windows.Forms.Control.Top, or System.Windows.Forms.Control.Bottom property values of the control. To adjust these properties set each property value individually, or set the System.Windows.Forms.Control.Location property with a new System.Drawing.Point object.","iiiii) ModifierKeys","jjjjj) ToString","[C#] public static Keys ModifierKeys {get;}","[C++] public: _property static Keys get_ModifierKeys( );","[VB] Public Shared ReadOnly Property ModifierKeys As Keys","[JScript] public static function get ModifierKeys( ): Keys;","Description","Gets a value indicating which of the modifier keys (SHIFT, CTRL, and ALT) is in a pressed state.","kkkkk) MouseButtons","lllll) ToString","[C#] public static MouseButtons MouseButtons {get;}","[C++] public: _property static MouseButtons get_MouseButtons( );","[VB] Public Shared ReadOnly Property MouseButtons As MouseButtons","[JScript] public static function get MouseButtons( ): MouseButtons;","Description","Gets a value indicating which of the mouse buttons is in a pressed state.","mmmmm) MousePosition","nnnnn) ToString","[C#] public static Point MousePosition {get;}","[C++] public: _property static Point get_MousePosition( );","[VB] Public Shared ReadOnly Property MousePosition As Point","[JScript] public static function get MousePosition( ): Point;","Description","Gets the position of the mouse cursor in screen coordinates.","The System.Windows.Forms.Control.MousePosition property returns a System.Drawing.Point that represents the mouse cursor position at the time the property was referenced.","ooooo) Name","ppppp) ToString","[C#] public string Name {get; set;}","[C++] public: _property String* get_Name( ); public: _property void set_Name(String*);","[VB] Public Property Name As String","[JScript] public function get Name( ): String; public function set Name(String);","Description","Gets or sets the name of the control.","The System.Windows.Forms.Control.Name property can be used at run time to evaluate the object by name rather than type and programmatic name. Because the System.Windows.Forms.Control.Name property returns a System.String type, it can be evaluated in case-style logic statements (Select statement in Visual Basic, switch statement in C# and C++).","qqqqq) Parent","rrrrr) ToString","[C#] public Control Parent {get; set;}","[C++] public: _property Control* get_Parent( ); public: _property void set_Parent(Control*);","[VB] Public Property Parent As Control","[JScript] public function get Parent( ): Control; public function set Parent(Control);","Description","Gets or sets the parent container of the control.","Setting the System.Windows.Forms.Control.Parent property value to null removes this control from the","System.Windows.Forms.Control.ControlCollection of its current parent control.","sssss) ProductName","ttttt) ToString","[C#] public string ProductName {get;}","[C++] public: _property String* get_ProductName( );","[VB] Public ReadOnly Property ProductName As String","[JScript] public function get ProductName( ): String;","Description","Gets the product name of the assembly containing the control.","The System.Windows.Forms.Control.ProductName property is a read-only property. In order to change the value of this property, set the System.Reflection.AssemblyProductAttribute.Product property value of the System.Reflection.AssemblyProductAttribute.","uuuuu) ProductVersion","vvvvv) ToString","[C#] public string ProductVersion {get;}","[C++] public: _property String* get_ProductVersion( );","[VB] Public ReadOnly Property ProductVersion As String","[JScript] public function get ProductVersion( ): String;","Description","Gets the version of the assembly containing the control.","The System.Windows.Forms.Control.ProductVersion property is a read-only property. In order to change the value of this property, set the System.Reflection.AssemblyVersionAttribute.Version property value of the System.Reflection.AssemblyVersionAttribute.","wwwww) RecreatingHandle","xxxxx) ToString","[C#] public bool RecreatingHandle {get;}","[C++] public: _property bool get_RecreatingHandle( );","[VB] Public ReadOnly Property RecreatingHandle As Boolean","[JScript] public function get RecreatingHandle( ): Boolean;","Description","Gets a value indicating whether the control is currently re-creating its handle.","yyyyy) Region","zzzzz) ToString","[C#] public Region Region {get; set;}","[C++] public: _property Region* get Region( ); public: _property void set_Region(Region*);","[VB] Public Property Region As Region","[JScript] public function get Region( ): Region; public function set Region(Region);","Description","Gets or sets the window region associated with the control.","The window region is an elliptical or polygonal area within the window where the operating system permits drawing. The operating system does not display any portion of a window that lies outside of the window region. The coordinates of a control's region are relative to the upper-left corner of the control, not the client area of the control.","aaaaaa) RenderRightToLeft","bbbbbb) ToString","[C#] protected bool RenderRightToLeft {get;}","[C++] protected: _property bool get_RenderRightToLeft( );","[VB] Protected ReadOnly Property RenderRightToLeft As Boolean [JScript] protected function get RenderRightToLeft( ): Boolean;","cccccc) ResizeRedraw","dddddd) ToString","[C#] protected bool ResizeRedraw {get; set;}","[C++] protected: _property bool get_ResizeRedraw( ); protected: _property void set_ResizeRedraw(bool);","[VB] Protected Property ResizeRedraw As Boolean","[JScript] protected function get ResizeRedraw( ): Boolean; protected function set ResizeRedraw(Boolean);","Description","Gets or sets a value indicating whether the control redraws itself when resized.","The System.Windows.Forms.Control.ResizeRedraw property value is equivalent to the return value of the System.Windows.Forms.Control.GetStyle(System.Windows.Forms.ControlStyles) method when passing in the System.Windows.Forms.ControlStyles.ResizeRedraw value as a parameter.","eeeeee) Right","ffffff) ToString","[C#] public int Right {get;}","[C++] public: _property int get_Right( );","[VB] Public ReadOnly Property Right As Integer","[JScript] public function get Right( ): int;","Description","Gets the distance between the right edge of the control and the left edge of its container.","The value of the System.Windows.Forms.Control.Right property is equal to the sum of the System.Windows.Forms.Control.Left property value and the System.Windows.Forms.Control.Width property value.","gggggg) RightToLeft","hhhhhh) ToString","[C#] public virtual RightToLeft RightToLeft {get; set;}","[C++] public: _property virtual RightToLeft get_RightToLeft( ); public: _property virtual void set_RightToLeft(RightToLeft);","[VB] Overridable Public Property RightToLeft As RightToLeft","[JScript] public function get RightToLeft( ): RightToLeft; public function set RightToLeft(RightToLeft);","Description","Gets or sets a value indicating whether control's elements are aligned to support locales using right-to-left fonts.","The System.Windows.Forms.Control.RightToLeft property is used for international applications where the language is written from right to left, such as Hebrew or Arabic. When this property is set to System.Windows.Forms.RightToLeft.Yes, control elements that include text are displayed from right to left.","iiiiii) ShowFocusCues","jjjjjj) ToString","[C#] protected virtual bool ShowFocusCues {get;}","[C++] protected: _property virtual bool get_ShowFocusCues( );","[VB] Overridable Protected ReadOnly Property ShowFocusCues As Boolean","[JScript] protected function get ShowFocusCues( ): Boolean;","Description","Gets a value indicating whether the control should display focus rectangles.","For more information on this feature see the WM_CHANGEUISTATE, WM_QUERYUISTATE, and WM_UPDATEUISTATE topics located in the Windows Platform SDK in the MSDN Library.","kkkkkk) ShowKeyboardCues","llllll) ToString","[C#] protected bool ShowKeyboardCues {get;}","[C++] protected: _property bool get_ShowKeyboardCues( );","[VB] Protected ReadOnly Property ShowKeyboardCues As Boolean","[JScript] protected function get ShowKeyboardCues( ): Boolean;","Description","Gets a value indicating whether the control should display keyboard shortcuts.","For more information on this feature see the WM_CHANGEUISTATE, WM_QUERYUISTATE, and WM_UPDATEUISTATE topics located in the Windows Platform SDK in the MSDN Library.","mmmmmm) Site","nnnnnn) ToString","[C#] public override ISite Site {get; set;}","[C++] public: _property virtual ISite* get_Site( ); public: _property virtual void set_Site(ISite*);","[VB] Overrides Public Property Site As ISite","[JScript] public function get Site( ): ISite; public function set Site(ISite);","Description","Gets or sets the site of the control.","oooooo) Size","pppppp) ToString","[C#] public Size Size {get; set;}","[C++] public: _property Size get_Size( ); public: _property void set_Size(Size);","[VB] Public Property Size As Size","[JScript] public function get Size( ): Size; public function set Size(Size);","Description","Gets or sets the height and width of the control.","Since the System.Drawing.Size class is a value type (structure in VB, struct in C#) it is returned by value, meaning accessing the property returns a copy of the size of the control. So, adjusting the System.Drawing.Size.Width or System.Drawing.Size.Height properties of the System.Drawing.Size object returned from this property will not affect the System.Windows.Forms.Control.Width and System.Windows.Forms.Control.Height of the control. To adjust the System.Windows.Forms.Control.Width or System.Windows.Forms.Control.Height of the control you must use the System.Windows.Forms.Control.Width or System.Windows.Forms.Control.Height property, or set the System.Windows.Forms.Control.Size property with a new System.Drawing.Size object.","qqqqqq) TabIndex","rrrrrr) ToString","[C#] public int TabIndex {get; set;}","[C++] public: _property int get_TabIndex( ); public: _property void set_TabIndex(int);","[VB] Public Property TabIndex As Integer","[JScript] public function get TabIndex( ): int; public function set TabIndex(int);","Description","Gets or sets the tab order of the control within its container.","A tab index may consist of any valid integer greater than or equal to zero, lower numbers being earlier in the tab order. If more than one control on the same parent control has the same tab index, the z-order of the controls determines the order to cycle through the controls.","ssssss) TabStop","tttttt) ToString","[C#] public bool TabStop {get; set;}","[C++] public: _property bool get_TabStop( ); public: _property void set_TabStop(bool);","[VB] Public Property TabStop As Boolean","[JScript] public function get TabStop( ): Boolean; public function set TabStop(Boolean);","Description","Gets or sets a value indicating whether the user can give the focus to this control using the TAB key.","When the user presses the TAB key, the input focus is set to the next control in the tab order. Controls with the System.Windows.Forms.Control.TabStop property value of false are not included in the collection of controls in the tab order. The tab order can be manipulated by setting the control's System.Windows.Forms.Control.TabIndex property value.","uuuuuu) Tag","vvvvvv) ToString","[C#] public object Tag {get; set;}","[C++] public: _property Object* get_Tag( ); public: _property void set_Tag(Object*);","[VB] Public Property Tag As Object","[JScript] public function get Tag( ): Object; public function set Tag(Object);","Description","Gets or sets the object that contains data about the control.","Any type derived from the System.Object class can be assigned to this property. If the System.Windows.Forms.Control.Tag property is set through the Windows Forms designer, only text may be assigned.","wwwwww) Text","xxxxxx) ToString","[C#] public virtual string Text {get; set;}","[C++] public: _property virtual String* get_Text( ); public: _property virtual void set_Text(String*);","[VB] Overridable Public Property Text As String","[JScript] public function get Text( ): String; public function set Text(String);","Description","Gets or sets the text associated with this control.","The System.Windows.Forms.Control.Text property of the control is used differently by each derived class. For example the System.Windows.Forms.Control.Text property of a System.Windows.Forms.Form is displayed in the title bar at the top of the form, is fairly small in character count, and usually displays the application or document name. However, the System.Windows.Forms.Control.Text property of a System.Windows.Forms.RichTextBox can be great in size and can include numerous nonvisual characters used to format the text. For example, the text displayed in a System.Windows.Forms.RichTextBox can be formatted by adjusting the System.Drawing.Font properties, or by the addition of spaces or tab characters to align the text.","yyyyyy) Top","zzzzzz) ToString","[C#] public int Top {get; set;}","[C++] public: _property int get_Top( ); public: _property void set_Top(int);","[VB] Public Property Top As Integer","[JScript] public function get Top( ): int; public function set Top(int);","Description","Gets or sets the y-coordinate of a control's top edge in pixels.","The System.Windows.Forms.Control.Top property value is equivalent to the System.Drawing.Point.Y property of the System.Windows.Forms.Control.Location property value of the control.","aaaaaaa) TopLevelControl","bbbbbbb) ToString","[C#] public Control TopLevelControl {get;}","[C++] public: _property Control* get_TopLevelControl( );","[VB] Public ReadOnly Property TopLevelControl As Control","[JScript] public function get TopLevelControl( ): Control;","Description","Gets the control that is not parented to another Windows Form control. Typically, this is the outermost System.Windows.Forms.Form that the control is contained in.","The top-level control is defined as the control that is not parented to another Windows Form control. Typically, this is the outermost System.Windows.Forms.Form that the control is contained in. For example, if the control is contained on an MDI child System.Windows.Forms.Form, then the top-level control is the MDI parent System.Windows.Forms.Form.","ccccccc) Visible","ddddddd) ToString","[C#] public bool Visible {get; set;}","[C++] public: _property bool get_Visible( ); public: _property void set_Visible(bool);","[VB] Public Property Visible As Boolean","[JScript] public function get Visible( ): Boolean; public function set Visible(Boolean);","Description","Gets or sets a value indicating whether the control is displayed.","eeeeeee) Width","fffffff) ToString","[C#] public int Width {get; set;}","[C++] public: _property int get_Width( ); public: _property void set_Width(int);","[VB] Public Property Width As Integer","[JScript] public function get Width( ): int; public function set Width(int);","Description","Gets or sets the width of the control.","ggggggg) WindowTarget","hhhhhhh) ToString","[C#] public IWindowTarget WindowTarget {get; set;}","[C++] public: _property IWindowTarget* get_WindowTarget( ); public: _property void set_WindowTarget(IWindowTarget*);","[VB] Public Property WindowTarget As IWindowTarget","[JScript] public function get WindowTarget( ): IWindowTarget; public function set WindowTarget(IWindowTarget);","Description","The target of Win32 window messages.","iiiiiii) ToString","[C#] public event EventHandler BackColorChanged;","[C++] public: _event EventHandler* BackColorChanged;","[VB] Public Event BackColorChanged As EventHandler","Description","Occurs when the value of the System.Windows.Forms.Control.BackColor property changes.","This event will be raised if the System.Windows.Forms.Control.BackColor property is changed either through a programmatic change or through runtime user interaction.","jjjjjj) ToString","[C++] public event EventHandler BackgroundImageChanged;","[C++] public: _event EventHandler* BackgroundImageChanged;","[VB] Public Event BackgroundImageChanged As EventHandler","Description","Occurs when the value of the System.Windows.Forms.Control.BackgroundImage property changes.","This event will be raised if the System.Windows.Forms.Control.BackgroundImage property is changed either through a programmatic change or through runtime user interaction.","kkkkkkk) ToString","[C#] public event EventHandler BindingContextChanged;","[C++] public: _event EventHandler* BindingContextChanged;","[VB] Public Event BindingContextChanged As EventHandler","Description","Occurs when the value of the System.Windows.Forms.BindingContext property changes.","To add a new System.Windows.Forms.BindingContext to the System.Windows.Forms.Control through the System.Windows.Forms.Control.BindingContext property, see the System.Windows.Forms.BindingContext.#ctor constructor.","lllllll) ToString","[C#] public event EventHandler CausesValidationChanged;","[C++] public: _event EventHandler* CausesValidationChanged;","[VB] Public Event CausesValidationChanged As EventHandler","Description","Occurs when the value of the System.Windows.Forms.Control.CausesValidation property changes.","This event will be raised if the System.Windows.Forms.Control.CausesValidation property is changed either through a programmatic change or through runtime user interaction.","mmmmmmm) ToString","[C#] public event UICuesEventHandler ChangeUICues;","[C++] public: _event UICuesEventHandler* ChangeUICues;","[VB] Public Event ChangeUICues As UICuesEventHandler","Description","Occurs when the focus or keyboard user interface (UI) cues change.","For more information about handling events, see.","nnnnnnn) ToString","[C#] public event EventHandler Click;","[C++] public: _event EventHandler* Click;","[VB] Public Event Click As EventHandler","Description","Occurs when the control is clicked.","The System.Windows.Forms.ControlStyles.StandardClick style must be set for this event to be raised.","ooooooo) ToString","[C#] public event EventHandler ContextMenuChanged;","[C++] public: _event EventHandler* ContextMenuChanged;","[VB] Public Event ContextMenuChanged As EventHandler","Description","Occurs when the value of the System.Windows.Forms.Control.ContextMenu property changes.","This event will be raised if the System.Windows.Forms.Control.ContextMenu property is changed either through a programmatic change or through runtime user interaction.","ppppppp) ToString","[C#] public event ControlEventHandler ControlAdded;","[C++] public: _event ControlEventHandler* ControlAdded;","[VB] Public Event ControlAdded As ControlEventHandler","Description","Occurs when a new control is added to the System.Windows.Forms.Control.ControlCollection.","For more information about handling events, see","qqqqqqq) ToString","[C#] public event ControlEventHandler ControlRemoved;","[C++] public: _event ControlEventHandler* ControlRemoved;","[VB] Public Event ControlRemoved As ControlEventHandler","Description","Occurs when a control is removed from the System.Windows.Forms.Control.ControlCollection.","For more information about handling events, see.","rrrrrrr) ToString","[C#] public event EventHandler CursorChanged;","[C++] public: _event EventHandler* CursorChanged;","[VB] Public Event CursorChanged As EventHandler","Description","Occurs when the value of the System.Windows.Forms.Control.Cursor property changes.","This event will be raised if the System.Windows.Forms.Control.Cursor property is changed either through a programmatic changed or through runtime user interaction.","sssssss) ToString","Description","Occurs when the value of the System.Windows.Forms.Control.Dock property changes.","This event will be raised if the System.Windows.Forms.Control.Dock property is changed either through a programmatic changed or through runtime user interaction.","ttttttt) ToString","[C#] public event EventHandler DoubleClick;","[C++] public: _event EventHandler* DoubleClick;","[VB] Public Event DoubleClick As EventHandler","Description","Occurs when the control is double-clicked.","The System.Windows.Forms.ControlStyles.StandardClick style must be set for this event to be raised.","uuuuuuu) ToString","[C#] public event DragEventHandler DragDrop;","[C++] public: _event DragEventHandler* DragDrop;","[VB] Public Event DragDrop As DragEventHandler","Description","Occurs when a drag-and-drop operation is completed.","For more information about handling events, see.","vvvvvvv) ToString","[C#] public event DragEventHandler DragEnter;","[C++] public: _event DragEventHandler* DragEnter;","[VB] Public Event DragEnter As DragEventHandler","Description","Occurs when an object is dragged into the control's bounds.","wwwwwww) ToString","[C#] public event EventHandler DragLeave;","[C++] public: _event EventHandler* DragLeave;","[VB] Public Event DragLeave As EventHandler","Description","Occurs when an object is dragged out of the control's bounds.","xxxxxxx) ToString","[C#] public event DragEventHandler DragOver;","[C++] public: _event DragEventHandler* DragOver;","[VB] Public Event DragOver As DragEventHandler","Description","Occurs when an object is dragged over the control's bounds.","yyyyyyy) ToString","[C#] public event EventHandler EnabledChanged;","[C++] public: _event EventHandler* EnabledChanged;","[VB] Public Event EnabledChanged As EventHandler","Description","Occurs when the System.Windows.Forms.Control.Enabled property value has changed.","This event will be raised if the System.Windows.Forms.Control.Enabled property is changed either through a programmatic changed or through runtime user interaction.","zzzzzzz) ToString","[C#] public event EventHandler Enter;","[C++] public: _event EventHandler* Enter;","[VB] Public Event Enter As EventHandler","Description","Occurs when the control is entered.","For more information about handling events, see.","aaaaaaaa) ToString","[C#] public event EventHandler FontChanged;","[C++] public: _event EventHandler* FontChanged;","[VB] Public Event FontChanged As EventHandler","Description","Occurs when the System.Windows.Forms.Control.Font property value has changed.","This event will be raised if the System.Windows.Forms.Control.Font property is changed either through a programmatic changed or through runtime user interaction.","bbbbbbbb) ToString","[C#] public event EventHandler ForeColorChanged;","[C++] public: _event EventHandler* ForeColorChanged;","[VB] Public Event ForeColorChanged As EventHandler","Description","Occurs when the System.Windows.Forms.Control.ForeColor property value has changed.","This event will be raised if the System.Windows.Forms.Control.ForeColor property is changed either through a programmatic changed or through runtime user interaction.","cccccccc) ToString","[C#] public event GiveFeedbackEventHandler GiveFeedback;","[C++] public: _event GiveFeedbackEventHandler* GiveFeedback;","[VB] Public Event GiveFeedback As GiveFeedbackEventHandler","Description","Occurs during a drag operation.","The System.Windows.Forms.Control.GiveFeedback event allows the source of a drag event to modify the appearance of the mouse pointer in order to give the user visual feedback during a drag-and-drop operation.","dddddddd) ToString","[C#] public event EventHandler GotFocus;","[C++] public: _event EventHandler* GotFocus;","[VB] Public Event GotFocus As EventHandler","Description","Occurs when the control receives focus.","Focus events occur in the following order: System.Windows.Forms.Control.EnterSystem.Windows.Forms.Control. GotFocusSystem.Windows.Forms.Control.LeaveSystem.Windows.Forms.Control.ValidatingSystem.Windows.Forms.Control.ValidatedSystem.Windows.Forms.Control.LostFocus If the System.Windows.Forms.Control.CausesValidation property is set to false, the System.Windows.Forms.Control.Validating and System.Windows.Forms.Control.Validated events are suppressed.","eeeeeeee) ToString","[C#] public event EventHandler HandleCreated;","[C++] public: _event EventHandler* HandleCreated;","[VB] Public Event HandleCreated As EventHandler","Description","Occurs when a handle is created for the control.","For more information about handling events, see.","ffffffff) ToString","[C#] public event EventHandler HandleDestroyed;","[C++] public: _event EventHandler* HandleDestroyed;","[VB] Public Event HandleDestroyed As EventHandler","Description","Occurs when the control's handle is in the process of being destroyed.","For more information about handling events, see.","gggggggg) ToString","[C#] public event HelpEventHandler HelpRequested;","[C++] public: _event HelpEventHandler* HelpRequested;","[VB] Public Event HelpRequested As HelpEventHandler","Description","Occurs when the user requests help for a control.","For more information about handling events, see.","hhhhhhhh) ToString","[C#] public event EventHandler ImeModeChanged;","[C++] public: _event EventHandler* ImeModeChanged;","[VB] Public Event ImeModeChanged As EventHandler","Description","Occurs when the System.Windows.Forms.Control.ImeMode property has changed.","This event will be raised if the System.Windows.Forms.Control.ImeMode property is changed either through a programmatic changed or through runtime user interaction.","iiiiiiii) ToString","[C#] public event InvalidateEventHandler Invalidated;","[C++] public: _event InvalidateEventHandler* Invalidated;","[VB] Public Event Invalidated As InvalidateEventHandler","Description","Occurs when a control's display requires redrawing.","For more information about handling events, see.","jjjjjjjj) ToString","[C#] public event KeyEventHandler KeyDown;","[C++] public: _event KeyEventHandler* KeyDown;","[VB] Public Event KeyDown As KeyEventHandler","Description","Occurs when a key is pressed while the control has focus.","For more information about handling events, see.","kkkkkkkk) ToString","[C#] public event KeyPressEventHandler KeyPress;","[C++] public: _event KeyPressEventHandler* KeyPress;","[VB] Public Event KeyPress As KeyPressEventHandler","Description","Occurs when a key is pressed while the control has focus.","For more information about handling events, see.","llllllll) ToString","[C#] public event KeyEventHandler KeyUp;","[C++] public: _event KeyEventHandler* KeyUp;","[VB] Public Event KeyUp As KeyEventHandler","Description","Occurs when a key is released while the control has focus.","For more information about handling events, see.","mmmmmmmm) ToString","[C#] public event LayoutEventHandler Layout;","[C++] public: _event LayoutEventHandler* Layout;","[VB] Public Event Layout As LayoutEventHandler","Description","Occurs when a control should reposition its child controls.","The System.Windows.Forms.Control.Layout event occurs when child controls are added or removed, when the bounds of the control changes, and when other changes occur that may affect the layout of the control. The layout event can be suppressed using the System.Windows.Forms.Control.SuspendLayout and System.Windows.Forms.Control.ResumeLayout methods. Suspending layout allows for multiple actions to be performed on a control without having to perform a layout for each change. For example, if you resize and move a control, each operation would raise a System.Windows.Forms.Control.Layout event.","nnnnnnnn) ToString","[C#] public event EventHandler Leave;","[C++] public: _event EventHandler* Leave;","[VB] Public Event Leave As EventHandler","Description","Occurs when the control is left.","For more information about handling events, see.","oooooooo) ToString","[C#] public event EventHandler LocationChanged;","[C++] public: _event EventHandler* LocationChanged;","[VB] Public Event LocationChanged As EventHandler","Description","Occurs when the System.Windows.Forms.Control.Location property value has changed.","This event will be raised if the System.Windows.Forms.Control.Location property is changed either through a programmatic changed or through runtime user interaction.","pppppppp) ToString","[C#] public event EventHandler LostFocus;","[C++] public: _event EventHandler* LostFocus;","[VB] Public Event LostFocus As EventHandler","Description","Occurs when the control loses focus.","Focus events occur in the following order: System.Windows.Forms.Control.EnterSystem.Windows.Forms.Control.GotFocusSystem.Windows.Forms.Control.LeaveSystem.Windows.Forms.Control.ValidatingSystem.Windows.Forms.Control.ValidatedSystem.Windows.Forms.Control.LostFocus If the System.Windows.Forms.Control.CausesValidation property is set to false the System.Windows.Forms.Control.Validating and System.Windows.Forms.Control.Validated events are suppressed.","qqqqqqqq) ToString","[C#] public event MouseEventHandler MouseDown;","[C++] public: _event MouseEventHandler* MouseDown;","[VB] Public Event MouseDown As MouseEventHandler","Description","Occurs when the mouse pointer is over the control and a mouse button is pressed.","For more information about handling events, see.","rrrrrrrr) ToString","[C#] public event EventHandler MouseEnter;","[C++] public: _event EventHandler* MouseEnter;","[VB] Public Event MouseEnter As EventHandler","Description","Occurs when the mouse pointer enters the control.","For more information about handling events, see.","ssssssss) ToString","[C#] public event EventHandler MouseHover;","[C++] public: _event EventHandler* MouseHover;","[VB] Public Event MouseHover As EventHandler","Description","Occurs when the mouse pointer hovers over the control.","For more information about handling events, see.","tttttttt) Tostring","[C#] public event EventHandler MouseLeave;","[C++] public: _event EventHandler* MouseLeave;","[VB] Public Event MouseLeave As EventHandler","Description","Occurs when the mouse pointer leaves the control.","For more information about handling events, see","uuuuuuuu) ToString","[C#] public event MouseEventHandler MouseMove;","[C++] public: _event MouseEventHandler* MouseMove;","[VB] Public Event MouseMove As MouseEventHandler","Description","Occurs when the mouse pointer is moved over the control.","For more information about handling events, see.","vvvvvvvv) ToString","[C#] public event MouseEventHandler MouseUp;","[C++] public: _event MouseEventHandler* MouseUp;","[VB] Public Event MouseUp As MouseEventHandler","Description","Occurs when the mouse pointer is over the control and a mouse button is released.","For more information about handling events, see.","wwwwwwww) ToString","[C#] public event MouseEventHandler MouseWheel;","[C++] public: _event MouseEventHandler* MouseWheel;","[VB] Public Event MouseWheel As MouseEventHandler","Description","Occurs when the mouse wheel moves while the control has focus.","When handling the System.Windows.Forms.Control.MouseWheel event it is important to follow the user interface (UI) standards associated with the mouse wheel. The System.Windows.Forms.MouseEventArgs.Delta property value indicates the amount the mouse wheel has been moved. The UI should scroll when the accumulated delta is plus or minus 120. The UI should scroll the number of logical lines returned by the System.Windows.Forms.SystemInformation.MouseWheelScrollLines property for every delta value reached. You can also scroll more smoothly in smaller that 120 unit increments, however the ratio should remain constant, that is System.Windows.Forms.SystemInformation.MouseWheelScrollLines lines scrolled per 120 delta units of wheel movement.","xxxxxxxx) ToString","[C#] public event EventHandler Move;","[C++] public: _event EventHandler* Move;","[VB] Public Event Move As EventHandler","Description","Occurs when the control is moved.","For more information about handling events, see","yyyyyyyy) ToString","[C#] public event PaintEventHandler Paint;","[C++] public: _event PaintEventHandler* Paint;","[VB] Public Event Paint As PaintEventHandler","Description","Occurs when the control is redrawn.","For more information about handling events, see.","zzzzzzzz) ToString","[C#] public event EventHandler ParentChanged;","[C++] public: _event EventHandler* ParentChanged;","[VB] Public Event ParentChanged As EventHandler","Description","Occurs when the System.Windows.Forms.Control.Parent property value has changed.","This event will be raised if the System.Windows.Forms.Control.Parent property is changed either through a programmatic changed or through runtime user interaction.","aaaaaaaaa) ToString","[C#] public event QueryAccessibilityHelpEventHandler QueryAccessibilityHelp;","[C++] public: _event QueryAccessibilityHelpEventHandler* QueryAccessibilityHelp;","[VB] Public Event QueryAccessibilityHelp As QueryAccessibilityHelpEventHandler","Description","Occurs when System.Windows.Forms.AccessibleObject is providing help to accessibility applications.","For more information about handling events, see.","bbbbbbbbb) ToString","[C#] public event QueryContinueDragEventHandler QueryContinueDrag;","[C++] public: _event QueryContinueDragEventHandler* QueryContinueDrag;","[VB] Public Event QueryContinueDrag As QueryContinueDragEventHandler","Description","Occurs during a drag-and-drop operation and allows the drag source to determine whether the drag-and-drop operation should be canceled.","For more information about handling events, see.","cccccccc) ToString","[C#] public event EventHandler Resize;","[C++] public: _event EventHandler* Resize;","[VB] Public Event Resize As EventHandler","Description","Occurs when the control is resized.","It is preferrable to use the System.Windows.Forms.Control.Layout event to handle custom layouts. The System.Windows.Forms.Control.Layout event is raised in response to System.Windows.Forms.Control.Resize events, but also in other conditions when layout may need to be applied.","ddddddddd) ToString","[C#] public event EventHandler RightToLeftChanged;","[C++] public: _event EventHandler* RightToLeftChanged;","[VB] Public Event RightToLeftChanged As EventHandler","Description","Occurs when the System.Windows.Forms.Control.RightToLeft property value has changed.","This event will be raised if the System.Windows.Forms.Control.RightToLeft property is changed either through a programmatic changed or through runtime user interaction.","eeeeeeeee) ToString","[C#] public event EventHandler SizeChanged;","[C++] public: _event EventHandler* SizeChanged;","[VB] Public Event SizeChanged As EventHandler","Description","Occurs when the System.Windows.Forms.Control.Size property value has changed.","This event will be raised if the System.Windows.Forms.Control.Size property is changed either through a programmatic changed or through runtime user interaction.","ffffffff) ToString","[C#] public event EventHandler StyleChanged;","[C++] public: _event EventHandler* StyleChanged;","[VB] Public Event StyleChanged As EventHandler","Description","Occurs when the control style has changed.","The System.Windows.Forms.Control.StyleChanged event occurs when System.Windows.Forms.ControIStyles flags have been added or changed.","[C#] public event EventHandler SystemColorsChanged;","[C++] public: _event EventHandler* SystemColorsChanged;","[VB] Public Event SystemColorsChanged As EventHandler","Description","Occurs when the system colors have changed.","This event will be raised if the System.Drawing.SystemColors is changed either through a programmatic changed or through runtime user interaction.","hhhhhhhhh) ToString","[C#] public event EventHandler TabIndexChanged;","[C++] public: _event EventHandler* TabIndexChanged;","[VB] Public Event TabIndexChanged As EventHandler","Description","Occurs when the System.Windows.Forms.Control.TabIndex property value has changed.","This event will be raised if the System.Windows.Forms.Control.TabIndex property is changed either through a programmatic changed or through runtime user interaction.","iiiiiiiii) ToString","[C#] public event EventHandler TabStopChanged;","[C++] public: _event EventHandler* TabStopChanged;","[VB] Public Event TabStopChanged As EventHandler","Description","Occurs when the System.Windows.Forms.Control.TabStop property value has changed.","This event will be raised if the System.Windows.Forms.Control.TabStop property is changed either through a programmatic changed or through runtime user interaction.","[C#] public event EventHandler TextChanged;","[C++] public: _event EventHandler* TextChanged;","[VB] Public Event TextChanged As EventHandler","Description","Occurs when the System.Windows.Forms.Control.Text property value has changed.","This event will be raised if the System.Windows.Forms.Control.Text property is changed either through a programmatic changed or through runtime user interaction.","kkkkkkkkk) ToString","[C#] public event EventHandler Validated;","[C++] public: _event EventHandler* Validated;","[VB] Public Event Validated As EventHandler","Description","Occurs when the control is done validating.","For more information about handling events, see.","lllllllll) ToString","[C#] public event CancelEventHandler Validating;","[C++] public: _event CancelEventHandler* Validating;","[VB] Public Event Validating As CancelEventHandler","Description","Occurs when the control is validating.","For more information about handling events, see.","mmmmmmmmm) ToString","[C#] public event EventHandler VisibleChanged;","[C++] public: _event EventHandler* VisibleChanged;","[VB] Public Event VisibleChanged As EventHandler","Description","Occurs when the System.Windows.Forms.Control.Visible property value has changed.","This event will be raised if the System.Windows.Forms.Control.Visible property is changed either through a programmatic changed or through runtime user interaction.","nnnnnnnnn) AccessibilityNotifyClients","[C#] protected void AccessibilityNotifyClients(AccessibleEvents accEvent, int childID);","[C++] protected: void AccessibilityNotifyClients(AccessibleEvents accEvent, int childID);","[VB] Protected Sub AccessibilityNotifyClients(ByVal accEvent As AccessibleEvents, ByVal childID As Integer)","[JScript] protected function AccessibilityNotifyClients(accEventAccessibleEvents, childID int);","Description","Notifies the accessibility client applications of the specified System.Windows.Forms.AccessibleEvents for the specified child control. You must call the System.Windows.Forms.Control.ControlAccessibleObject.NotifyClients(System.Windows.Forms.AccessibleEvents) method for each System.Windows.Forms.AccessibleEvents object the accessibility client applications are to be notified of. The System.Windows.Forms.Control.ControlAccessibleObject.NotifyClients(System.Windows.Forms.AccessibleEvents) method is typically called when a property is set or from within an event handler. For example, you might call the System.Windows.Forms.Control.ControlAccessibleObject.NotifyEvents method and pass in System.Windows.Forms.AccessibleEvents.Hide from within the event handler for the System.Windows.Forms.Control.VisibleChanged event. The System.Windows.Forms.AccessibleEvents object to notify the accessibility client applications of. The child System.Windows.Forms.Control to notify of the accessible event.","ooooooooo) BeginInvoke","[C#] public IAsyncResult BeginInvoke(Delegate method);","[C++] public: IAsyncResult* BeginInvoke(Delegate* method);","[VB] Public Function BeginInvoke(ByVal method As Delegate) As IAsyncResult","[JScript] public function BeginInvoke(method: Delegate): IAsyncResult; Executes a delegate asynchronously on the thread that the control's underlying handle was created on","Description","Executes the specified delegate asynchronously on the thread that the control's underlying handle was created on","Return Value: An System.IAsyncResult object that represents the result of the System.Windows.Forms.Control.BeginInvoke(System.Delegate) operation.","The delegate is called asynchronously and this method returns immediately. You may call this from any thread, even the thread that owns the control's handle. If the control's handle does not exist yet, this will follow up the control's parent chain until it finds a control or form that does have a window handle. If no appropriate handle can be found, System.Windows.Forms.Control.BeginInvoke(System.Delegate) will throw an exception. Exceptions within the delegate method are considered untrapped and will be sent to the application's untrapped exception handler. A delegate to a method that takes no parameters.","ppppppppp) BeginInvoke","[C#] public IAsyncResult BeginInvoke(Delegate method, object[ ] args);","[C++] public: _sealed IAsyncResult* BeginInvoke(Delegate* method, Object* args _gc[ ]);","[VB] NotOverridable Public Function BeginInvoke(ByVal method As Delegate, ByVal args( ) As Object) As IAsyncResult","[JScript] public function BeginInvoke(method: Delegate, args: Object[ ]): IAsyncResult;","Description","Executes the specified delegate asynchronously with the specified arguments, on the thread that the control's underlying handle was created on.","Return Value: An System.IAsyncResult object that represents the result of the System.Windows.Forms.Control.BeginInvoke(System.Delegate) operation.","The delegate is called asynchronously and this method returns immediately. You may call this from any thread, even the thread that owns the control's handle. If the control's handle does not exist yet, this will follow up the control's parent chain until it finds a control or form that does have a window handle. If no appropriate handle can be found, System.Windows.Forms.Control.BeginInvoke(System.Delegate) will throw an exception. Exceptions within the delegate method are considered untrapped and will be sent to the application's untrapped exception handler. A delegate to a method that takes parameters of the same number and type that are contained in the args parameter. An array of objects to pass as arguments to the given method. This can be null if no arguments are needed.","qqqqqqqqq) BringToFront","[C#] public void BringToFront( );","[C++] public: void BringToFront( );","[VB] Public Sub BringToFront( )","[JScript] public function BringToFront( );","Description","Brings the control to the front of the z-order.","The control is moved to the top of the z-order. If the control is a child of another control, the child control is moved to the top of the z-order.","rrrrrrrrr) Contains","[C#] public bool Contains(Control ctl);","[C++] public: bool Contains(Control* ctl);","[VB] Public Function Contains(ByVal ctl As Control) As Boolean","[JScript] public function Contains(ctl: Control): Boolean;","Description","Retrieves a value indicating whether the specified control is a child of the control.","Return Value: true if the specified control is a child of the control; otherwise, false. The System.Windows.Forms.Control to evaluate.","sssssssss) CreateAccessibilityInstance","[C#] protected virtual AccessibleObject CreateAccessibilityInstance( );","[C++] protected: virtual AccessibleObject* CreateAccessibilityInstance( );","[VB] Overridable Protected Function CreateAccessibilityInstance( ) As AccessibleObject","[JScript] protected function CreateAccessibilityInstance( ): AccessibleObject;","Description","Creates a new instance of the accessibility object for the control.","Return Value: A new instance of the System.Windows.Forms.AccessibleObject assigned to the control.","If you do not explicitly call the System.Windows.Forms.Control.CreateAccessibilityInstance method it will be called when the System.Windows.Forms.Control.AccessibilityObject property is referenced.","ttttttttt) CreateControl","[C#] public void CreateControl( );","[C++] public: void CreateControl( );","[VB] Public Sub CreateControl( )","[JScript] public function CreateControl( );","Description","Forces the creation of the control including the creation of the handle and any child controls.","uuuuuuuuu) CreateControlsInstance","[C#] protected virtual ControlCollection CreateControlsInstance( );","[C++] protected: virtual ControlCollection* CreateControlsInstance( );","[VB] Overridable Protected Function CreateControlsInstance( ) As ControlCollection","[JScript] protected function CreateControlsInstance( ): ControlCollection;","Description","Creates a new instance of the control collection for the control.","Return Value: A new instance of System.Windows.Forms.Control.ControlCollection assigned to the control.","The base class version of this method should not be called by a derived class.","vvvvvvvvv) CreateGraphics","[C#] public Graphics CreateGraphics( );","[C++] public: Graphics* CreateGraphics( );","[VB] Public Function CreateGraphics( ) As Graphics","[JScript] public function CreateGraphics( ): Graphics; Creates the System.Drawing.Graphics object for the control.","Description","Creates the System.Drawing.Graphics object for the control.","Return Value: The System.Drawing.Graphics object for the control.","The control's brush, font, foreground color, and background color become the default values for the System.Drawing.Graphics object. The returned System.Drawing.Graphics object must be disposed through a call to its System.Drawing.Graphics.Dispose method when it is no longer needed. The System.Drawing.Graphics object is only valid for the duration of the current window's message.","wwwwwwwww) CreateHandle","[C#] protected virtual void CreateHandle( );","[C++] protected: virtual void CreateHandle( );","[VB] Overridable Protected Sub CreateHandle( )","[JScript] protected function CreateHandle( );","Description","Creates a handle for this control.","When overriding System.Windows.Forms.Control.CreateHandle in a derived class, be sure to call the base class's System.Windows.Forms.Control.CreateHandle method.","xxxxxxxxx) DefWndProc","[C#] protected virtual void DefWndProc(ref Message* m);","[C++] protected: virtual void DefWndProc(Message* m)","[VB] Overridable Protected Sub DefWndProc(ByRef m As Message)","[JScript] protected function DefWndProc(m: Message);","Description","Sends the specified message to the default window procedure.","For more information about processing Windows messages, see the WindowProc function documentation in the Windows Platform SDK reference located in the MSDN Library. The System.Windows.Forms.Message to process.","yyyyyyyyy) DestroyHandle","[C#] protected virtual void DestroyHandle( );","[C++] protected: virtual void DestroyHandle( );","[VB] Overridable Protected Sub DestroyHandle( )","[JScript] protected function DestroyHandle( );","Description","Destroys the handle associated with this control.","When overriding System.Windows.Forms.Control.DestroyHandle in a derived class, be sure to call the base class's System.Windows.Forms.Control.DestroyHandle method.","zzzzzzzzz) Dispose","[C#] protected override void Dispose(bool disposing);","[C++] protected: void Dispose(bool disposing);","[VB] Overrides Protected Sub Dispose(ByVal disposing As Boolean)","[JScript] protected override function Dispose(disposing: Boolean); Releases all resources used by the System.Windows.Forms.Control","Description","Releases the unmanaged resources used by the System.Windows.Forms.Control and optionally releases the managed resources.","This method is called by the public method and the System.Object.Finalize method. true to release both managed and unmanaged resources; false to release only unmanaged resources.","aaaaaaaaaa) DoDragDrop","[C#] public DragDropEffects DoDragDrop(object data, DragDropEffects allowedEffects);","[C++] public: DragDropEffects DoDragDrop(Object* data, DragDropEffects allowedEffects);","[VB] Public Function DoDragDrop(ByVal data As Object, ByVal allowedEffects As DragDropEffects) As DragDropEffects","[JScript] public function DoDragDrop(data: Object, allowedEffects: DragDropEffects): DragDropEffects;","Description","Begins a drag and drop operation.","Return Value: A value from the System.Windows.Forms.DragDropEffects enumeration that represents the final effect that was performed during the drag and drop operation.","The allowedEffects parameter determines which drag operations can occur. If the drag operation needs to interoperate with applications in another process, data should either be a base managed class (System.String, System.Drawing.Bitmap, or System.Drawing.Imaging.Metafile), or an object that implements System.Runtime.Serialization.ISerializable or System.Windows.Forms.IDataObject. The data to drag. One of the System.Windows.Forms.DragDropEffects values.","bbbbbbbbbb) EndInvoke","[C#] public object EndInvoke(IAsyncResult asyncResult);","[C++] public: sealed Object* EndInvoke(IAsyncResult* asyncResult);","[VB] NotOverridable Public Function EndInvoke(ByVal asyncResult As IAsyncResult) As Object","[JScript] public function EndInvoke(asyncResult: IAsyncResult): Object;","Description","Retrieves the return value of the asynchronous operation represented by the IAsyncResult interface passed.","Return Value: The System.Object generated by the asynchronous operation.","If the async operation has not been completed, this function will block until the result is available. The System.IAsyncResult interface that represents a specific invoke asynchronous operation, returned when calling System.Windows.Forms.Control.BeginInvoke(System.Delegate).","cccccccccc) FindForm","[C#] public Form FindForm( );","[C++] public: Form* FindForm( );","[VB] Public Function FindForm( ) As Form","[JScript] public function FindForm( ): Form;","Description","Retrieves the form that the control is on.","Return Value: The System.Windows.Forms.Form that the control is on.","The control's System.Windows.Forms.Control.Parent property value may not be the same as the System.Windows.Forms.Form returned by System.Windows.Forms.Control.FindForm method.","dddddddddd) Focus","[C#] public bool Focus( );","[C++] public: bool Focus( );","[VB] Public Function Focus( ) As Boolean","[JScript] public function Focus( ): Boolean;","Description","Sets input focus to the control.","Return Value: true if the input focus request was successful; otherwise, false.","The System.Windows.Forms.Control.Focus method returns true if the control successfully received input focus. The control can have the input focus while not displaying any visual cues of having the focus. This behavior is primarily observed by the nonselectable controls listed below, or any controls derived from them.","eeeeeeeeee) From ChildHandle","[C#] public static Control FromChildHandle(IntPtr handle);","[C++] public: static Control* FromChildHandle(IntPtr handle);","[VB] Public Shared Function FromChildHandle(ByVal handle As IntPtr) As Control","[JScript] public static function FromChildHandle(handle: IntPtr): Control;","Description","Retrieves the control that contains the specified handle.","Return Value: The System.Windows.Forms.Control that represents the control associated with the specified handle; returns null if no control with the specified handle is found.","This method searches up the window handle parent chain until it finds a handle that is associated with a control. This method is more robust than the System.Windows.Forms.Control.FromHandle(System.IntPtr) method, because it correctly returns controls that own more than one handle. The window handle (HWND) to search for.","ffffffffff) FromHandle","[C#] public static Control FromHandle(IntPtr handle);","[C++] public: static Control* FromHandle(IntPtr handle);","[VB] Public Shared Function FromHandle(ByVal handle As IntPtr) As Control","[JScript] public static function FromHandle(handle: IntPtr): Control;","Description","Returns the control that is currently associated with the specified handle.","Return Value: A System.Windows.Forms.Control that represents the control associated with the specified handle; returns null if no control with the specified handle is found.","Use the System.Windows.Forms.Control.fromChildHandle(System.IntPtr) method if you need to correctly return controls that own more than one handle. The window handle (HWND) to search for.","gggggggggg) GetChildAtPoint","[C#] public Control GetChildAtPoint(Point pt);","[C++] public: Control* GetChildAtPoint(Point Pt);","[VB] Public Function GetChildAtPoint(ByVal pt As Point) As Control","[JScript] public function GetChildAtPoint(pt: Point): Control;","Description","Retrieves the child control that is located at the specified coordinates.","Return Value: A System.Windows.Forms.Control that represents the control that is located at the specified point.","If there is no control at the specified point other than this control, the System.Windows.Forms.Control.GetChildAtPoint(System.Drawing.Point) method returns returns null. A System.Drawing.Point that contains the coordinates where you want to look for a control. Coordinates are expressed relative to the upper-left corner of the control's client area.","hhhhhhhhhh) GetContainerControl","[C#] public IContainerControl GetContainerControl( );","[C++] public: IContainerControl* GetContainerControl( );","[VB] Public Function GetContainerControl( ) As IContainerControl","[JScript] public function GetContainerControl( ): IContainerControl;","Description","Returns the next System.Windows.Forms.ContainerControl up the control's chain of parent controls.","Return Value: An object implementing the System.Windows.Forms.IContainerControl interface, that represents the parent of the System.Windows.Forms.Control","iiiiiiiiii) GetNextControl","[C#] public Control GetNextControl(Control ctl, bool forward);","[C++] public: Control* GetNextControl(Control* ctl, bool forward);","[VB] Public Function GetNextControl(ByVal ctl As Control, ByVal forward As Boolean) As Control","[JScript] public function GetNextControl(ctl: Control, forward: Boolean):Control;","Description","Retrieves the next control forward, or back, in the tab order of child controls.","Return Value: The next System.Windows.Forms.Control in the tab order. The System.Windows.Forms.Control to start the search with. true to search forward in the tab order; otherwise, false.","jjjjjjjjjj) GetStyle","[C#] protected bool GetStyle(ControlStyles flag);","[C++] protected: bool GetStyle(ControlStyles flag);","[VB] Protected Function GetStyle(ByVal flag As ControlStyles) As Boolean","[JScript] protected function GetStyle(flag: ControlStyles): A Boolean;","Description","Retrieves the value of the specified control style bit for the control.","Return Value: true if specified control style bit is set to true; otherwise, false.","Control style bit flags are used to categorize supported behavior. A control can enable a style by calling the System.Windows.Forms.Control.SetStyle(System.Windows.Forms.ControlStyles,System.Boolean) method and passing in the appropriate System.Windows.Forms.ControlStyles bit and the boolean value set the bit to. To determine the value assigned to a specified System.Windows.Forms.ControlStyles bit, use the System.Windows.Forms.Control.GetStyle(System.Windows.Forms.ControlStyles) method and pass in the System.Windows.Forms.ControlStyles member to evaluate. The System.Windows.Forms.ControlStyles bit to return the value from.","kkkkkkkkkk) GetTopLevel","[C#] protected bool GetTopLevel( );","[C++] protected: bool GetTopLevel( );","[VB] Protected Function GetTopLevel( ) As Boolean","[JScript] protected function GetTopLevel( ): Boolean;","Description","Determines if the control is a top-level control.","Return Value: true if the System.Windows.Forms.Control is a top-level control; otherwise, false","[C#] public void Hide( );","[C++] public: void Hide( );","[VB] Public Sub Hideo","[JScript] public function Hide( );","Description","Conceals the control from the user.","Hiding the control is equal to setting the System.Windows.Forms.Control.Visible property to false. After the System.Windows.Forms.Control.Hide method is called the System.Windows.Forms.Control.Visible property returns a value of false until the System.Windows.Forms.Control.Show method is called.","mmmmmmmmmm) InitLayout","[C#] protected virtual void InitLayout( );","[C++] protected: virtual void InitLayout( );","[VB] Overridable Protected Sub InitLayout( )","[JScript] protected function InitLayout( );","Description","Called after the control has been added to another container.","nnnnnnnnnn) Invalidate","[C#] public void Invalidate( );","[C++] public: void Invalidate( );","[VB] Public Sub Invalidate( )","[JScript] public function Invalidate( );","Description","Invalidates a specific region of the control and causes a paint message to be sent to the control.","oooooooooo) Invalidate","[C#] public void Invalidate(bool invalidateChildren);","[C++] public: void Invalidate(bool invalidateChildren);","[VB] Public Sub Invalidate(ByVal invalidateChildren As Boolean)","[JScript] public function Invalidate(invalidateChildren: Boolean);","Description","Invalidates a specific region of the control and causes a paint message to be sent to the control. Optionally, invalidates the child controls assigned to the control. true to invalidate the control's child controls; otherwise, false.","pppppppppp) Invalidate","[C#] public void Invalidate(Rectangle rc);","[C++] public: void Invalidate(Rectangle rc);","[VB] Public Sub Invalidate(ByVal rc As Rectangle)","[JScript] public function Invalidate(rc: Rectangle);","Description","Invalidates the specified region of the control (adds it to the control's update region, which is the area that will be repainted at the next paint operation), and causes a paint message to be sent to the control. A System.Drawing.Rectangle object that represents the region to invalidate.","qqqqqqqqqq) Invalidate","[C#] public void Invalidate(Region region);","[C++] public: void Invalidate(Region* region);","[VB] Public Sub Invalidate(ByVal region As Region)","[JScript] public function Invalidate(region: Region); Invalidates a specific region of the control and causes a paint message to be sent to the control.","Description","Invalidates the specified region of the control (adds it to the control's update region, which is the area that will be repainted at the next paint operation), and causes a paint message to be sent to the control.","Calling this method does not force a synchronous paint; to force a synchronous paint, call the System.Windows.Forms.Control.Update method after calling the System.Windows.Forms.Control.Invalidate(System.Drawing.Region) method. If this method is called with no parameters, the entire client area is added to the update region. The System.Drawing.Region to invalidate.","rrrrrrrrrr) In validate","[C#] public void Invalidate(Rectangle rc, bool invalidateChildren);","[C++] public: void Invalidate(Rectangle rc, bool invalidateChildren);","[VB] Public Sub Invalidate(ByVal rc As Rectangle, ByVal invalidateChildren As Boolean)","[JScript] public function Invalidate(rc: Rectangle, invalidateChildren: Boolean);","Description","Invalidates the specified region of the control (adds it to the control's update region, which is the area that will be repainted at the next paint operation), and causes a paint message to be sent to the control. Optionally, invalidates the child controls assigned to the control. A System.Drawing.Rectangle object that represents the region to invalidate. true to invalidate the control's child controls; otherwise, false.","ssssssssss) Invalidate","[C#] public void Invalidate(Region region, bool invalidateChildren);","[C++] public: void Invalidate(Region* region, bool invalidateChildren);","[VB] Public Sub Invalidate(ByVal region As Region, ByVal invalidateChildren As Boolean)","[JScript] public function Invalidate(region: Region, invalidateChildren: Boolean);","Description","Invalidates the specified region of the control (adds it to the control's update 14 region, which is the area that will be repainted at the next paint operation), and causes a paint message to be sent to the control. Optionally, invalidates the child controls assigned to the control. The System.Drawing.Region to invalidate. true to invalidate the control's child controls; otherwise, false.","tttttttttt) Invoke","[C#] public object Invoke(Delegate method);","[C++] public: Object* Invoke(Delegate* method);","[VB] Public Function Invoke(ByVal method As Delegate) As Object","[JScript] public function Invoke(method: Delegate): Object; Executes a delegate on the thread that owns this control's underlying window handle.","Description","Executes the specified delegate on the thread that owns this control's underlying window handle.","Return Value: The return value from the delegate being invoked, or null if the delegate has no return value.","It is an error to call this on the same thread that the control belongs to. If the control's handle does not exist yet, this will follow up the control's parent chain until it finds a control or form that does have a window handle. If no appropriate handle can be found, the System.Windows.Forms.Control.Invoke(System.Delegate) method will throw an exception. Exceptions that are raised during the call will be propagated back to the caller. A delegate that contains a method to be called in in the control's thread context.","uuuuuuuuuu) Invoke","[C#] public object Invoke(Delegate method, object[ ] args);","[C++] public: _sealed Object* Invoke(Delegate* method, Object* args _gc[ ]);","[VB] NotOverridable Public Function Invoke(ByVal method As Delegate, ByVal args( ) As Object) As Object","[JScript] public function Invoke(method: Delegate, args: Object[ ]): Object;","Description","Executes the specified delegate, on the thread that owns this control's underlying window handle, with the specified list of arguments.","Return Value: The return value from the delegate being invoked, or null if the delegate has no return value.","It is an error to call this on the same thread that the control belongs to. If the control's handle does not exist yet, this will follow up the control's parent chain until it finds a control or form that does have a window handle. If no appropriate handle can be found, the System.Windows.Forms.Control.Invoke(System.Delegate) method will throw an exception. Exceptions that are raised during the call will be propagated back to the caller. A delegate to a method that takes parameters of the same number and type that are contained in args. An array of objects to pass as arguments to the given method. This can be null if no arguments are needed.","vvvvvvvvvv) InvokeGotFocus","[C#] protected void InvokeGotFocus(Control toInvoke, EventArgs e);","[C++] protected: void InvokeGotFocus(Control* toInvoke, EventArgs* e);","[VB] Protected Sub InvokeGotFocus(ByVal toInvoke As Control, ByVal e As EventArgs)","[JScript] protected function InvokeGotFocus(toInvoke: Control, e: EventArgs);","Description","Raises the System.Windows.Forms.Control.GotFocus event. The System.Windows.Forms.Control to assign the event to. An System.EventArgs that contains the event data.","wwwwwwwwww) InvokeLostFocus","[C#] protected void InvokeLostFocus(Control toInvoke, EventArgs e);","[C++] protected: void InvokeLostFocus(Control* toInvoke, EventArgs* e);","[VB] Protected Sub InvokeLostFocus(ByVal toInvoke As Control, ByVal e As EventArgs)","[JScript] protected function InvokeLostFocus(toInvoke: Control, e: EventArgs);","Description","Raises the System.Windows.Forms.Control.LostFocus event. The System.Windows.Forms.Control to assign the event to. An System.EventArgs that contains the event data.","xxxxxxxxxxx) InvokeOn Click","[C#] protected void InvokeOnClick(Control toInvoke, EventArgs e);","[C++] protected: void InvokeOnClick(Control* toInvoke, EventArgs* e);","[VB] Protected Sub InvokeOnClick(ByVal toInvoke As Control, ByVal e As EventArgs)","[JScript] protected function InvokeOnClick(toInvoke: Control, e: EventArgs);","Description","Raises the System.Windows.Forms.Control.Click event for a specific control. The System.Windows.Forms.Control to assign the System.Windows.Forms.Control.Click event to. An System.EventArgs that contains the event data.","yyyyyyyyyy) InvokePaint","[C#] protected void InvokePaint(Control c, PaintEventArgs e);","[C++] protected: void InvokePaint(Control* c, PaintEventArgs* e);","[VB] Protected Sub InvokePaint(ByVal c As Control, ByVal e As PaintEventArgs)","[JScript] protected function InvokePaint(c: Control, e: PaintEventArgs);","Description","Raises the System.Windows.Forms.Control.Paint event for a specific control. The System.Windows.Forms.Control to assign the System.Windows.Forms.Control.Paint event to. An System.Windows.Forms.PaintEventArgs that contains the event data.","zzzzzzzzzz) InvokePaintBackground","[C#] protected void InvokePaintBackground(Control c, PaintEventArgs e);","[C++] protected: void InvokePaintBackground(Control* c, PaintEventArgs* e);","[VB] Protected Sub InvokePaintBackground(ByVal c As Control, ByVal e As PaintEventArgs)","[JScript] protected function InvokePaintBackground(c: Control, e: PaintEventArgs);","Description","Raises the PaintBackground event for a specific control. The System.Windows.Forms.Control to assign the System.Windows.Forms.Control.Paint event to. An System.Windows.Forms.PaintEventArgs that contains the event data.","aaaaaaaaaaa) IsInputChar","[C#] protected virtual bool IsInputChar(char charCode);","[C++] protected: virtual bool IsInputChar(_wchar_t charCode);","[VB] Overridable Protected Function IsInputChar(ByVal charCode As Char) As Boolean","[JScript] protected function IsInputChar(charCode: Char): Boolean;","Description","Determines if a character is an input character that the control recognizes.","Return Value: true if the character should be sent directly to control and not preprocessed; otherwise, false.","This method is called during window message preprocessing to determine whether the given input character should be preprocessed or sent directly to the control. If the System.Windows.Forms.Control.IsInputChar(System.Char) method returns true, the specified character is sent directly to the control. However, if the method returns false, the character is preprocessed and only sent to the control if it is not consumed by the preprocessing phase. The preprocessing of a character includes checking whether the character is a mnemonic of another control. The character to test.","bbbbbbbbbbb) IsInputKey","[C#] protected virtual bool IsInputKey(Keys keyData);","[C++] protected: virtual bool IsInputKey(Keys keyData);","[VB] Overridable Protected Function IsInputKey(ByVal keyData As Keys) As Boolean","[JScript] protected function IsInputKey(keyData: Keys): Boolean;","Description","Determines whether the specified key is a regular input key or a special key that requires preprocessing.","Return Value: true if the specified key is a regular input key; otherwise, false.","Call this method during window-message preprocessing to determine whether the specified key is a regular input key that should be sent directly to the control or a special key (such as PAGE UP and PAGE DOWN) that should preprocessed. In the latter case, send the key to the control only if it is not consumed by the preprocessing phase. One of the System.Windows.Forms.Keys values.","ccccccccccc) IsMnemonic","[C#] public static bool IsMnemonic(char charCode, string text);","[C++] public: static bool IsMnemonic(_wchar_t charCode, String* text);","[VB] Public Shared Function IsMnemonic(ByVal charCode As Char, ByVal text As String) As Boolean","[JScript] public static function IsMnemonic(charCode: Char, text: String):Boolean;","Description","Determines if the specified character is the mnemonic character assigned to the control in the specified string.","Return Value: true if the charCode character is the mnemonic character assigned to the control; otherwise, false.","The mnemonic character is the character immediately following the first instance of \u201c&\u201d in a System.String. The character to test. The System.String to search.","ddddddddddd) NotifyInvalidate","[C#] protected virtual void NotifyInvalidate(Rectangle invalidatedArea);","[C++] protected: virtual void NotifyInvalidate(Rectangle invalidatedArea);","[VB] Overridable Protected Sub NotifyInvalidate(ByVal invalidatedArea As Rectangle)","[JScript] protected function NotifyInvalidate(invalidatedArea: Rectangle);","Description","Raises the System.Windows.Forms.Control.Invalidated event with a specified region of the control to invalidate. A System.Drawing.Rectangle representing the area to invalidate.","eeeeeeeeeee) OnBackColorChanged","[C#] protected virtual void OnBackColorChanged(EventArgs e);","[C++] protected: virtual void OnBackColorChanged(EventArgs* e);","[VB] Overridable Protected Sub OnBackColorChanged(ByVal e As EventArgs)","[JScript] protected function OnBackColorChanged(e: EventArgs);","Description","Raises the System.Windows.Forms.Control.BackColorChanged event.","Raising an event invokes the event handler through a delegate. For more information, see. An System.EventArgs that contains the event data.","fffffffffff) OnBackgroundImageChanged","[C#] protected virtual void OnBackgroundImageChanged(EventArgs e);","[C++] protected: virtual void OnBackgroundImageChanged(EventArgs* e);","[VB] Overridable Protected Sub OnBackgroundImageChanged(ByVal e As EventArgs)","[JScript] protected function OnBackgroundImageChanged(e: EventArgs);","Description","Raises the System.Windows.Forms.Control.BackgroundImageChanged event.","Raising an event invokes the event handler through a delegate. For more information, see. An System.EventArgs that contains the event data.","ggggggggggg) OnBindingContextChanged","[C#] protected virtual void OnBindingContextChanged(EventArgs e);","[C++] protected: virtual void OnBindingContextChanged(EventArgs* e);","[VB] Overridable Protected Sub OnBindingContextChanged(ByVal e As EventArgs)","[JScript] protected function OnBindingContextChanged(e: EventArgs);","Description","Raises the System.Windows.Forms.Control.BindingContextChanged event.","Raising an event invokes the event handler through a delegate. For more information, see. An System.EventArgs that contains the event data.","hhhhhhhhhhh) On Causes Validation Changed","[C#] protected virtual void OnCausesValidationChanged(EventArgs e);","[C++] protected: virtual void OnCausesValidationChanged(EventArgs* e);","[VB] Overridable Protected Sub OnCausesValidationChanged(ByVal e As EventArgs)","[JScript] protected function OnCausesValidationChanged(e: EventArgs);","Description","Raises the System.Windows.Forms.Control.CausesValidationChanged event.","Raising an event invokes the event handler through a delegate. For more information, see. An System.EventArgs that contains the event data.","iiiiiiiiiii) On ChangeUICues","[C#] protected virtual void OnChangeUICues(UICuesEventArgs e);","[C++] protected: virtual void OnChangeUICues(UICuesEventArgs* e);","[VB] Overridable Protected Sub OnChangeUICues(ByVal e As UICuesEventArgs)","[JScript] protected function OnChangeUICues(e: UICuesEventArgs);","Description","Raises the System.Windows.Forms.Control.ChangeUICues event.","Raising an event invokes the event handler through a delegate. For more information, see. A System.Windows.Forms.UICuesEventArgs that contains the event data.","jjjjjjjjjjj) OnClick","[C#] protected virtual void OnClick(EventArgs e);","[C++] protected: virtual void OnClick(EventArgs* e);","[VB] Overridable Protected Sub OnClick(ByVal e As EventArgs)","[JScript] protected function OnClick(e: EventArgs);","Description","Raises the System.Windows.Forms.Control.Click event.","Raising an event invokes the event handler through a delegate. For more information, see. An System.EventArgs that contains the event data.","kkkkkkkkkkk) OnContextMenuChanged","[C#] protected virtual void OnContextMenuChanged(EventArgs e);","[C++] protected: virtual void OnContextMenuChanged(EventArgs* e);","[VB] Overridable Protected Sub OnContextMenuChanged(ByVal e As","EventArgs)","[JScript] protected function OnContextMenuChanged(e: EventArgs);","Description","Raises the System.Windows.Forms.Control.ContextMenuChanged event.","Raising an event invokes the event handler through a delegate. For more information, see. An System.EventArgs that contains the event data.","llllllllll) On ControlAdded","[C#] protected virtual void OnControlAdded(ControlEventArgs e);","[C++] protected: virtual void OnControlAdded(ControlEventArgs* e);","[VB] Overridable Protected Sub OnControlAdded(ByVal e As ControlEventArgs)","[JScript] protected function OnControlAdded(e: ControlEventArgs);","Description","Raises the System.Windows.Forms.Control.ControlAdded event.","Called when a child control is added to this control. A System.Windows.Forms.ControlEventArgs that contains the event data.","mmmmmmmmmm) OnControlRemoved","[C#] protected virtual void OnControlRemoved(ControlEventArgs e);","[C++] protected: virtual void OnControlRemoved(ControlEventArgs* e);","[VB] Overridable Protected Sub OnControlRemoved(ByVal e As ControlEventArgs)","[JScript] protected function OnControlRemoved(e: ControlEventArgs);","Description","Raises the System.Windows.Forms.Control.ControlRemoved event.","Called when a child control is removed from this control. A System.Windows.Forms.ControlEventArgs that contains the event data.","nnnnnnnnnnn) OnCreateControl","[C#] protected virtual void OnCreateControl( );","[C++] protected: virtual void OnCreateControl( );","[VB] Overridable Protected Sub OnCreateControl( )","[JScript] protected function OnCreateControl( );","Description","Raises the System.Windows.Forms.Control.CreateControl event.","Called when the control is first created.","ooooooooooo) OnCursorChanged","[C#] protected virtual void OnCursorChanged(EventArgs e);","[C++] protected: virtual void OnCursorChanged(EventArgs* e);","[VB] Overridable Protected Sub OnCursorChanged(ByVal e As EventArgs)","[JScript] protected function OnCursorChanged(e: EventArgs);","Description","Raises the System.Windows.Forms.Control.CursorChanged event.","Raising an event invokes the event handler through a delegate. For more information, see. An System.EventArgs that contains the event data.","ppppppppppp) OnDockChanged","[C#] protected virtual void OnDockChanged(EventArgs e);","[C++] protected: virtual void OnDockChanged(EventArgs* e);","[VB] Overridable Protected Sub OnDockChanged(ByVal e As EventArgs)","[JScript] protected function OnDockChanged(e: EventArgs);","Description","Raises the System.Windows.Forms.Control.DockChanged event.","Raising an event invokes the event handler through a delegate. For more information, see. An System.EventArgs that contains the event data.","qqqqqqqqqqq) OnDoubleClick","[C#] protected virtual void OnDoubleClick(EventArgs e);","[C++] protected: virtual void OnDoubleClick(EventArgs* e);","[VB] Overridable Protected Sub OnDoubleClick(ByVal e As EventArgs)","[JScript] protected function OnDoubleClick(e: EventArgs);","Description","Raises the System.Windows.Forms.Control.DoubleClick event.","Raising an event invokes the event handler through a delegate. For more information, see. An System.EventArgs that contains the event data.","rrrrrrrrrrr) OnDragDrop","[C#] protected virtual void OnDragDrop(DragEventArgs drgevent);","[C++] protected: virtual void OnDragDrop(DragEventArgs* drgevent);","[VB] Overridable Protected Sub OnDragDrop(ByVal drgevent As DragEventArgs)","[JScript] protected function OnDragDrop(drgevent: DragEventArgs);","Description","Raises the System.Windows.Forms.Control.DragDrop event.","Raising an event invokes the event handler through a delegate. For more information, see. A System.Windows.Forms.DragEventArgs that contains the event data.","sssssssssss) OnDragEnter","[C#] protected virtual void OnDragEnter(DragEventArgs drgevent);","[C++] protected: virtual void on DragEnter(DragEventArgs* drgevent);","[VB] Overridable Protected Sub OnDragEnter(ByVal drgevent As DragEventArgs)","[JScript] protected function OnDragEnter(drgevent: DragEventArgs);","Description","Raises the System.Windows.Forms.Control.DragEnter event.","Raising an event invokes the event handler through a delegate. For more information, see. A System.Windows.Forms.DragEventArgs that contains the event data.","ttttttttttt) OnDragLeave","[C#] protected virtual void OnDragLeave(EventArgs e);","[C++] protected: virtual void OnDragLeave(EventArgs* e);","[VB] Overridable Protected Sub OnDragLeave(ByVal e As EventArgs)","[JScript] protected function OnDragLeave(e: EventArgs);","Description","Raises the System.Windows.Forms.Control.DragLeave event.","Raising an event invokes the event handler through a delegate. For more information, see. An System.EventArgs that contains the event data.","uuuuuuuuuuu) OnDragOver","[C#] protected virtual void OnDragOver(DragEventArgs drgevent);","[C++] protected: virtual void OnDragOver(DragEventArgs* drgevent);","[VB] Overridable Protected Sub OnDragOver(ByVal drgevent As","DragEventArgs)","[JScript] protected function OnDragOver(drgevent: DragEventArgs);","Description","Raises the System.Windows.Forms.Control.DragOver event.","Raising an event invokes the event handler through a delegate. For more information, see. A System.Windows.Forms.DragEventArgs that contains the event data.","vvvvvvvvvvv) OnEnabledChanged","[C#] protected virtual void OnEnabledChanged(EventArgs e);","[C++] protected: virtual void OnEnabledChanged(EventArgs* e);","[VB] Overridable Protected Sub OnEnabledChanged(ByVal e As EventArgs)","[JScript] protected unction OnEnabledChanged(e: EventArgs);","Description","Raises the System.Windows.Forms.Control.EnabledChanged event.","Raising an event invokes the event handler through a delegate. For more information, see. An System.EventArgs that contains the event data.","wwwwwwwwwww) OnEnter","[C#] protected virtual void OnEnter(EventArgs e);","[C++] protected: virtual void OnEnter(EventArgs* e);","[VB] Overridable Protected Sub OnEnter(ByVal e As EventArgs)","[JScript] protected function OnEnter(e: EventArgs);","Description","Raises the System.Windows.Forms.Control.Enter event.","Raising an event invokes the event handler through a delegate. For more information, see. An System.EventArgs that contains the event data.","xxxxxxxxxxx) OnFontChanged","[C#] protected virtual void OnFontChanged(EventArgs e);","[C++] protected: virtual void OnFontChanged(EventArgs* e);","[VB] Overridable Protected Sub OnFontChanged(ByVal e As EventArgs)","[JScript] protected function OnFontChanged(e: EventArgs);","Description","Raises the System.Windows.Forms.Control.FontChanged event.","Raising an event invokes the event handler through a delegate. For more information, see. An System.EventArgs that contains the event data.","yyyyyyyyyyy) OnForeColorChanged","[C#] protected virtual void OnForeColorChanged(EventArgs e);","[C++] protected: virtual void OnForeColorChanged(EventArgs* e);","[VB] Overridable Protected Sub OnForeColorChanged(ByVal e As EventArgs)","[JScript] protected function OnForeColorChanged(e: EventArgs);","Description","Raises the System.Windows.Forms.Control.ForeColorChanged event.","Raising an event invokes the event handler through a delegate. For more information, see. An System.EventArgs that contains the event data.","zzzzzzzzzzz) On GiveFeedback","[C#] protected virtual void OnGiveFeedback(GiveFeedbackEventArgs gfbevent);","[C++] protected: virtual void OnGiveFeedback(GiveFeedbackEventArgs* gfbevent);","[VB] Overridable Protected Sub OnGiveFeedback(ByVal gfbevent As","GiveFeedbackEventArgs)","[JScript] protected function OnGiveFeedback(gfbevent: GiveFeedbackEventArgs);","Description","Raises the System.Windows.Forms.Control.GiveFeedback event.","Raising an event invokes the event handler through a delegate. For more information, see. A System.Windows.Forms.GiveFeedbackEventArgs that contains the event data.","aaaaaaaaaaaa) On GotFocus","[C#] protected virtual void OnGotFocus(EventArgs e);","[C++] protected: virtual void OnGotFocus(EventArgs* e);","[VB] Overridable Protected Sub OnGotFocus(ByVal e As EventArgs)","[JScript] protected function OnGotFocus(e: EventArgs);","Description","Raises the System.Windows.Forms.Control.GotFocus event.","Raising an event invokes the event handler through a delegate. For more information, see. An System.EventArgs that contains the event data.","bbbbbbbbbbbb) OnHandleCreated","[C#] protected virtual void OnHandleCreated(EventArgs e);","[C++] protected: virtual void OnHandleCreated(EventArgs* e);","[VB] Overridable Protected Sub OnHandleCreated(ByVal e As EventArgs)","[JScript] protected function OnHandleCreated(e: EventArgs);","Description","Raises the System.Windows.Forms.Control.HandleCreated event.","Raising an event invokes the event handler through a delegate. For more information, see. An System.EventArgs that contains the event data.","cccccccccccc) OnHandleDestroyed","[C#] protected virtual void OnHandleDestroyed(EventArgs e);","[C++] protected: virtual void OnHandleDestroyed(EventArgs* e);","[VB] Overridable Protected Sub OnHandleDestroyed(ByVal e As EventArgs)","[JScript] protected function OnHandleDestroyed(e: EventArgs);","Description","Raises the System.Windows.Forms.Control.HandleDestroyed event.","Raising an event invokes the event handler through a delegate. For more information, see. An System.EventArgs that contains the event data.","dddddddddddd) OnHelpRequested","[C#] protected virtual void OnHelpRequested(HelpEventArgs hevent);","[C++] protected: virtual void OnHelpRequested(HelpEventArgs* hevent);","[VB] Overridable Protected Sub OnHelpRequested(ByVal hevent As HelpEventArgs)","[JScript] protected function OnHelpRequested(hevent: HelpEventArgs);","Description","Raises the System.Windows.Forms.Control.HelpRequested event.","Raising an event invokes the event handler through a delegate. For more information, see. A System.Windows.Forms.HelpEventArgs that contains the event data.","eeeeeeeeeeee) OnImeModeChanged","[C#] protected virtual void OnImeModeChanged(EventArgs e);","[C++] protected: virtual void OnImeModeChanged(EventArgs* e);","[VB] Overridable Protected Sub OnImeModeChanged(ByVal e As EventArgs)","[JScript] protected function OnImeModeChanged(e: EventArgs);","Description","Raises the System.Windows.Forms.Control.ImeModeChanged event.","Raising an event invokes the event handler through a delegate. For more information, see. An System.EventArgs that contains the event data.","ffffffffffff) OnInvalidated","[C#] protected virtual void OnInvalidated(InvalidateEventArgs e);","[C++] protected: virtual void OnInvalidated(InvalidateEventArgs* e);","[VB] Overridable Protected Sub OnInvalidated(ByVal e As InvalidateEventArgs)","[JScript] protected function OnInvalidated(e: InvalidateEventArgs);","Description","Raises the System.Windows.Forms.Control.Invalidated event.","Raising an event invokes the event handler through a delegate. For more information, see. An System.Windows.Forms.InvalidateEventArgs that contains the event data.","[C#] protected virtual void OnKeyDown(KeyEventArgs e);","[C++] protected: virtual void OnKeyDown(KeyEventArgs* e);","[VB] Overridable Protected Sub OnKeyDown(ByVal e As KeyEventArgs)","[JScript] protected function OnKeyDown(e: KeyEventArgs);","Description","Raises the System.Windows.Forms.Control.KeyDown event.","Raising an event invokes the event handler through a delegate. For more information, see. A System.Windows.Forms.KeyEventArgs that contains the event data.","hhhhhhhhhhhh) OnKeyPress","[C#] protected virtual void OnKeyPress(KeyPressEventArgs e);","[C++] protected: virtual void OnKeyPress(KeyPressEventArgs* e);","[VB] Overridable Protected Sub OnKeyPress(ByVal e As KeyPressEventArgs)","[JScript] protected function OnKeyPress(e: KeyPressEventArgs);","Description","Raises the System.Windows.Forms.Control.KeyPress event.","Raising an event invokes the event handler through a delegate. For more information, see. A System.Windows.Forms.KeyPressEventArgs that contains the event data.","iiiiiiiiiiii) OnKeyUp","[C#] protected virtual void OnKeyUp(KeyEventArgs e);","[C++] protected: virtual void OnKeyUp(KeyEventArgs* e);","[VB] Overridable Protected Sub OnKeyUp(ByVal e As KeyEventArgs)","[JScript] protected function OnKeyUp(e: KeyEventArgs);","Description","Raises the System.Windows.Forms.Control.KeyUp event.","Raising an event invokes the event handler through a delegate. For more information, see. A System.Windows.Forms.KeyEventArgs that contains the event data.","jjjjjjjjjjjj) OnLayout","[C#] protected virtual void OnLayout(LayoutEventArgs levent);","[C++] protected: virtual void OnLayout(LayoutEventArgs* levent);","[VB] Overridable Protected Sub OnLayout(ByVal levent As LayoutEventArgs)","[JScript] protected function OnLayout(levent: LayoutEventArgs);","Description","Raises the System.Windows.Forms.Control.Layout event.","Raising an event invokes the event handler through a delegate. For more information, see. A System.Windows.Forms.LayoutEventArgs that contains the event data.","kkkkkkkkkkkk) OnLeave","[C#] protected virtual void OnLeave(EventArgs e);","[C++] protected: virtual void OnLeave(EventArgs* e);","[VB] Overridable Protected Sub OnLeave(ByVal e As EventArgs)","[JScript] protected function OnLeave(e: EventArgs);","Description","Raises the System.Windows.Forms.Control.Leave event.","Raising an event invokes the event handler through a delegate. For more information, see. An System.EventArgs that contains the event data.","llllllllllll) OnLocation Changed","[C#] protected virtual void OnLocationChanged(EventArgs e);","[C++] protected: virtual void OnLocationChanged(EventArgs* e);","[VB] Overridable Protected Sub OnLocationChanged(ByVal e As EventArgs)","[JScript] protected function OnLocationChanged(e: EventArgs);","Description","Raises the System.Windows.Forms.Control.LocationChanged event.","Raising an event invokes the event handler through a delegate. For more information, see. An System.EventArgs that contains the event data.","mmmmmmmmmmm) OnLostFocus","[C++] protected virtual void OnLostFocus(EventArgs e);","[C++] protected: virtual void OnLostFocus(EventArgs* e);","[VB] Overridable Protected Sub OnLostFocus(ByVal e As EventArgs)","[JScript] protected function OnLostFocus(e: EventArgs);","Description","Raises the System.Windows.Forms.Control.LostFocus event.","Raising an event invokes the event handler through a delegate. For more information, see. An System.EventArgs that contains the event data.","nnnnnnnnnnnn) OnMouseDown","[C#] protected virtual void OnMouseDown(MouseEventArgs e);","[C++] protected: virtual void OnMouseDown(MouseEventArgs* e);","[VB] Overridable Protected Sub OnMouseDown(ByVal e As MouseEventArgs)","[JScript] protected function OnMouseDown(e: MouseEventArgs);","Description","Raises the System.Windows.Forms.Control.MouseDown event.","Raising an event invokes the event handler through a delegate. For more information, see. A System.Windows.Forms.MouseEventArgs that contains the event data.","oooooooooooo) OnMouseEnter","[C#] protected virtual void OnMouseEnter(EventArgs e);","[C++] protected: virtual void OnMouseEnter(EventArgs* e);","[VB] Overridable Protected Sub OnMouseEnter(ByVal e As EventArgs)","[JScript] protected function OnMouseEnter(e: EventArgs);","Description","Raises the System.Windows.Forms.Control.MouseEnter event.","Raising an event invokes the event handler through a delegate. For more information, see. An System.EventArgs that contains the event data.","pppppppppppp) OnMouseHover","[C#] protected virtual void OnMouseHover(EventArgs e);","[C++] protected: virtual void OnMouseHover(EventArgs* e);","[VB] Overridable Protected Sub OnMouseHover(ByVal e As EventArgs)","[JScript] protected function OnMouseHover(e: EventArgs);","Description","Raises the System.Windows.Forms.Control.MouseHover event.","Raising an event invokes the event handler through a delegate. For more information, see. An System.EventArgs that contains the event data.","qqqqqqqqqqqq) OnMouseLeave","[C#] protected virtual void OnMouseLeave(EventArgs e);","[C++] protected: virtual void OnMouseLeave(EventArgs* e);","[VB] Overridable Protected Sub OnMouseLeave(ByVal e As EventArgs)","[JScript] protected function OnMouseLeave(e: EventArgs);","Description","Raises the System.Windows.Forms.Control.MouseLeave event.","Raising an event invokes the event handler through a delegate. For more information, see. An System.EventArgs that contains the event data.","rrrrrrrrrrrr) OnMouseMove","[C#] protected virtual void OnMouseMove(MouseEventArgs e);","[C++] protected: virtual void OnMouseMove(MouseEventArgs* e);","[VB] Overridable Protected Sub OnMouseMove(ByVal e As MouseEventArgs)","[JScript] protected function OnMouseMove(e: MouseEventArgs);","Description","Raises the System.Windows.Forms.Control.MouseMove event.","Raising an event invokes the event handler through a delegate. For more information, see. A System.Windows.Forms.MouseEventArgs that contains the event data.","ssssssssssss) OnMouseUp","[C#] protected virtual void OnMouseUp(MouseEventArgs e);","[C++] protected: virtual void OnMouseUp(MouseEventArgs* e);","[VB] Overridable Protected Sub OnMouseUp(ByVal e As MouseEventArgs)","[JScript] protected function OnMouseUp(e: MouseEventArgs);","Description","Raises the System.Windows.Forms.Control.MouseUp event.","Raising an event invokes the event handler through a delegate. For more information, see. A System.Windows.Forms.MouseEventArgs that contains the event data.","tttttttttttt) OnMouseWheel","[C#] protected virtual void OnMouseWheel(MouseEventArgs e);","[C++] protected: virtual void OnMouseWheel(MouseEventArgs* e);","[VB] Overridable Protected Sub OnMouseWheel(ByVal e As MouseEventArgs)","[JScript] protected function OnMouseWheel(e: MouseEventArgs);","Description","Raises the System.Windows.Forms.Control.MouseWheel event.","Raising an event invokes the event handler through a delegate. For more information, see. A System.Windows.Forms.MouseEventArgs that contains the event data.","uuuuuuuuuuuu) OnMove","[C#] protected virtual void OnMove(EventArgs e);","[C++] protected: virtual void OnMove(EventArgs* e);","[VB] Overridable Protected Sub OnMove(ByVal e As EventArgs)","[JScript] protected function OnMove(e: EventArgs);","Description","Raises the System.Windows.Forms.Control.Move event.","Raising an event invokes the event handler through a delegate. For more information, see. An System.EventArgs that contains the event data.","vvvvvvvvvvvv) OnNotifyMessage","[C#] protected virtual void OnNotifyMessage(Message m);","[C++] protected: virtual void OnNotifyMessage(Message m);","[VB] Overridable Protected Sub OnNotifyMessage(ByVal m As Message)","[JScript] protected function OnNotifyMessage(m: Message);","Description","Notifies the control of Windows messages.","The System.Windows.Forms.Control.OnNotifyMessage(System.Windows.Forms.Message) method is called if the control's System.Windows.Forms.ControlStyles.EnableNotifyMessage style bit is set. The System.Windows.Forms.ControlStyles.EnableNotifyMessage style allows the control to be notified when the System.Windows.Forms.Control.WndProc(System.Windows.Forms.Message@) method receives a Windows message. This method allows semi-trusted controls to listen for Windows messages without allowing them to modify the message. A System.Windows.Forms.Message that represents the Windows message.","wwwwwwwwwwww) OnPaint","[C#] protected virtual void OnPaint(PaintEventArgs e);","[C++] protected: virtual void OnPaint(PaintEventArgs* e);","[VB] Overridable Protected Sub OnPaint(ByVal e As PaintEventArgs)","[JScript] protected function OnPaint(e: PaintEventArgs);","Description","Raises the System.Windows.Forms.Control.Paint event.","Raising an event invokes the event handler through a delegate. For more information, see. A System.Windows.Forms.PaintEventArgs that contains the event data.","xxxxxxxxxxxx) OnPaintBackground","[C#] protected virtual void OnPaintBackground(PaintEventArgs pevent);","[C++] protected: virtual void OnPaintBackground(PaintEventArgs* pevent);","[VB] Overridable Protected Sub OnPaintBackground(ByVal pevent As PaintEventArgs)","[JScript] protected function OnPaintBackground(pevent: PaintEventArgs);","Description","Paints the background of the control.","Inheriting classes should override this method to handle the erase background request from windows. When overriding System.Windows.Forms.Control.OnPaintBackground(System.Windows. Forms.PaintEventArgs) in a derived class it is not necessary to call the base class's System.Windows.Forms.Control.OnPaintBackground(System.Windows. Forms.PaintEventArgs) method. A System.Windows.Forms.PaintEventArgs that contains information about the control to paint.","yyyyyyyyyyyy) OnParentBackColorChanged","[C#] protected virtual void OnParentBackColorChanged(EventArgs e);","[C++] protected: virtual void OnParentBackColorChanged(EventArgs* e);","[VB] Overridable Protected Sub OnParentBackColorChanged(ByVal e As EventArgs)","[JScript] protected function OnParentBackColorChanged(e: EventArgs);","Description","Raises the System.Windows.Forms.Control.BackColorChanged event when the System.Windows.Forms.Control.BackColor property value of the control's container changes.","Raising an event invokes the event handier through a delegate. For more information, see. An System.EventArgs that contains the event data.","zzzzzzzzzzzz) OnParentBackgroundImageChanged","[C#] protected virtual void OnParentBackgroundImageChanged(EventArgs e);","[C++] protected: virtual void OnParentBackgroundImageChanged(EventArgs* e);","[VB] Overridable Protected Sub OnParentBackgroundImageChanged(ByVal e As EventArgs)","[JScript] protected function OnParentBackgroundImageChanged(e: EventArgs);","Description","Raises the System.Windows.Forms.Control.BackgroundImageChanged event when the System.Windows.Forms.Control.BackColor property value of the control's container changes.","Raising an event invokes the event handler through a delegate. For more information, see. An System.EventArgs that contains the event data.","aaaaaaaaaaaaa) OnParentBindingContextChanged","[C#] protected virtual void OnParentBindingContextChanged(EventArgs e);","[C++] protected: virtual void OnParentBindingContextChanged(EventArgs* e);","[VB] Overridable Protected Sub OnParentBindingContextChanged(ByVal e As EventArgs)","[JScript] protected function OnParentBindingContextChanged(e: EventArgs);","Description","Raises the System.Windows.Forms.Control.BindingContextChanged event when the System.Windows.Forms.Control.BindingContext property value of the control's container changes.","Raising an event invokes the event handler through a delegate. For more information, see. An System.EventArgs that contains the event data.","bbbbbbbbbbbbb) OnParentChanged","[C#] protected virtual void OnParentChanged(EventArgs e);","[C++] protected: virtual void OnParentChanged(EventArgs* e);","[VB] Overridable Protected Sub OnParentChanged(ByVal e As EventArgs)","[JScript] protected function OnParentChanged(e: EventArgs);","Description","Raises the System.Windows.Forms.Control.ParentChanged event.","Raising an event invokes the event handler through a delegate. For more information, see. An System.EventArgs that contains the event data.","ccccccccccccc) OnParentEnabledChanged","[C#] protected virtual void OnParentEnabledChanged(EventArgs e);","[C++] protected: virtual void OnParentEnabledChanged(EventArgs* e);","[VB] Overridable Protected Sub OnParentEnabledChanged(ByVal e As EventArgs)","[JScript] protected function OnParentEnabledChanged(e: EventArgs);","Description","Raises the System.Windows.Forms.Control.EnabledChanged event when the System.Windows.Forms.Control.Enabled property value of the control's container changes.","Raising an event invokes the event handler through a delegate. For more information, see. An System.EventArgs that contains the event data.","ddddddddddddd) OnParentFontChanged","[C#] protected virtual void OnParentFontChanged(EventArgs e);","[C++] protected: virtual void OnParentFontChanged(EventArgs* e);","[VB] Overridable Protected Sub OnParentFontChanged(ByVal e As EventArgs)","[JScript] protected function OnParentFontChanged(e: EventArgs);","Description","Raises the System.Windows.Forms.Control.FontChanged event when the System.Windows.Forms.Control.Font property value of the control's container changes.","Raising an event invokes the event handler through a delegate. For more information, see. An System.EventArgs that contains the event data.","eeeeeeeeeeeee) OnParentForeColorChanged","[C#] protected virtual void OnParentForeColorChanged(EventArgs e);","[C++] protected: virtual void OnParentForeColorChanged(EventArgs* e);","[VB] Overridable Protected Sub OnParentForeColorChanged(ByVal e As EventArgs)","[JScript] protected function OnParentForeColorChanged(e: EventArgs);","Description","Raises the System.Windows.Forms.Control.ForeColorChanged event when the System.Windows.Forms.Control.ForeColor property value of the control's container changes.","Raising an event invokes the event handler through a delegate. For more information, see. An System.EventArgs that contains the event data.","fffffffffffff) OnParentRightToLeftChanged","[C#] protected virtual void OnParentRightToLeftChanged(EventArgs e);","[C++] protected: virtual void OnParentRightToLeftChanged(EventArgs* e);","[VB] Overridable Protected Sub OnParentRightToLeftChanged(ByVal e As EventArgs)","[JScript] protected function OnParentRightToLeftChanged(e: EventArgs);","Description","Raises the System.Windows.Forms.Control.RightToLeftChanged event when the System.Windows.Forms.Control.RightToLeft property value of the control's container changes.","Raising an event invokes the event handler through a delegate. For more information, see. An System.EventArgs that contains the event data.","ggggggggggggg) OnParentVisibleChanged","[C#] protected virtual void OnParentVisibleChanged(EventArgs e);","[C++] protected: virtual void OnParentVisibleChanged(EventArgs* e);","[VB] Overridable Protected Sub OnParentVisibleChanged(ByVal e As","EventArgs)","[JScript] protected function OnParentVisibleChanged(e: EventArgs);","Description","Raises the System.Windows.Forms.Control.VisibleChanged event when the System.Windows.Forms.Control.Visible property value of the control's container changes.","Raising an event invokes the event handler through a delegate. For more information, see. An System.EventArgs that contains the event data.","hhhhhhhhhhhhh) OnQueryContinueDrag","[C#] protected virtual void OnQueryContinueDrag(QueryContinueDragEventArgs qcdevent);","[C++] protected: virtual void OnQueryContinueDrag(QueryContinueDragEventArgs* qcdevent);","[VB] Overridable Protected Sub OnQueryContinueDrag(ByVal qcdevent As QueryContinueDragEventArgs)","[JScript] protected function OnQueryContinueDrag(qcdevent QueryContinueDragEventArgs);","Description","Raises the System.Windows.Forms.Control.QueryContinueDrag event.","Raising an event invokes the event handler through a delegate. For more information, see. A System.Windows.Forms.QueryContinueDragEventArgs that contains the event data.","iiiiiiiiiiiii) OnResize","[C#] protected virtual void OnResize(EventArgs e);","[C++] protected: virtual void OnResize(EventArgs* e);","[VB] Overridable Protected Sub OnResize(ByVal e As EventArgs)","[JScript] protected function OnResize(e: EventArgs);","Description","Raises the System.Windows.Forms.Control.Resize event.","Raising an event invokes the event handler through a delegate. For more information, see. An System.EventArgs that contains the event data.","jjjjjjjjjjjjj) OnRightToLeftChanged","[C#] protected virtual void OnRightToLeftChanged(EventArgs e);","[C++] protected: virtual void OnRightToLeftChanged(EventArgs* e);","[VB] Overridable Protected Sub OnRightToLeftChanged(ByVal e As EventArgs)","[JScript] protected function OnRightToLeftChanged(e: EventArgs);","Description","Raises the System.Windows.Forms.Control.RightToLeftChanged event.","Raising an event invokes the event handler through a delegate. For more information, see. An System.EventArgs that contains the event data.","kkkkkkkkkkkkk) OnSizeChanged","[C#] protected virtual void OnSizeChanged(EventArgs e);","[C++] protected: virtual void OnSizeChanged(EventArgs* e);","[VB] Overridable Protected Sub OnSizeChanged(ByVal e As EventArgs)","[JScript] protected function OnSizeChanged(e: EventArgs);","Description","Raises the System.Windows.Forms.Control.SizeChanged event.","Raising an event invokes the event handler through a delegate. For more information, see. An System.EventArgs that contains the event data.","lllllllllllll) OnStyleChanged","[C#] protected virtual void OnStyleChanged(EventArgs e);","[C++] protected: virtual void OnStyleChanged(EventArgs* e);","[VB] Overridable Protected Sub OnStyleChanged(ByVal e As EventArgs)","[JScript] protected function OnStyleChanged(e: EventArgs);","Description","Raises the System.Windows.Forms.Control.StyleChanged event.","Raising an event invokes the event handler through a delegate. For more information, see. An System.EventArgs that contains the event data.","mmmmmmmmmmmm) OnSystemColorsChanged","[C#] protected virtual void OnSystemColorsChanged(EventArgs e);","[C++] protected: virtual void OnSystemColorsChanged(EventArgs* e);","[VB] Overridable Protected Sub OnSystemColorsChanged(ByVal e As EventArgs)","[JScript] protected function OnSystemColorsChanged(e: EventArgs);","Description","Raises the System.Windows.Forms.Control.SystemColorsChanged event.","Raising an event invokes the event handler through a delegate. For more information, see. An System.EventArgs that contains the event data.","nnmmnnnnnnnn) OnTabIndexChanged","[C#] protected virtual void OnTabIndexChanged(EventArgs e);","[C++] protected: virtual void OnTabIndexChanged(EventArgs* e);","[VB] Overridable Protected Sub OnTabIndexChanged(ByVal e As EventArgs)","[JScript] protected function OnTabIndexChanged(e: EventArgs);","Description","Raises the System.Windows.Forms.Control.TabIndexChanged event.","Raising an event invokes the event handler through a delegate. For more information, see. An System.EventArgs that contains the event data.","ooooooooooooo) OnTabStopChanged","[C#] protected virtual void OnTabStopChanged(EventArgs e);","[C++] protected: virtual void OnTabStopChanged(EventArgs* e);","[VB] Overridable Protected Sub OnTabStopChanged(ByVal e As EventArgs)","[JScript] protected function OnTabStopChanged(e: EventArgs);","Description","Raises the System.Windows.Forms.Control.TabStopChanged event.","Raising an event invokes the event handler through a delegate. For more information, see. An System.EventArgs that contains the event data.","ppppppppppppp) On TextChanged","[C#] protected virtual void OnTextChanged(EventArgs e);","[C++] protected: virtual void OnTextChanged(EventArgs* e);","[VB] Overridable Protected Sub OnTextChanged(ByVal e As EventArgs)","[JScript] protected function OnTextChanged(e: EventArgs);","Description","Raises the System.Windows.Forms.Control.TextChanged event.","Raising an event invokes the event handler through a delegate. For more information, see. An System.EventArgs that contains the event data.","qqqqqqqqqqqqq) OnValidated","[C#] protected virtual void OnValidated(EventArgs e);","[C++] protected: virtual void OnValidated(EventArgs* e);","[VB] Overridable Protected Sub OnValidated(ByVal e As EventArgs)","[JScript] protected function OnValidated(e: EventArgs);","Description","Raises the System.Windows.Forms.Control.Validated event.","Raising an event invokes the event handler through a delegate. For more information, see. An System.EventArgs that contains the event data.","rrrrrrrrrrrrr) OnValidating","[C#] protected virtual void OnValidating(CancelEventArgs e);","[C++] protected: virtual void OnValidating(CancelEventArgs* e);","[VB] Overridable Protected Sub OnValidating(ByVal e As CancelEventArgs)","[JScript] protected function OnValidating(e: CancelEventArgs);","Description","Raises the System.Windows.Forms.Control.Validating event.","Raising an event invokes the event handler through a delegate. For more information, see. A System.ComponentModel.CancelEventArgs that contains the event data.","sssssssssssss) OnVisibleChanged","[C#] protected virtual void OnVisibleChanged(EventArgs e);","[C++] protected: virtual void OnVisibleChanged(EventArgs* e);","[VB] Overridable Protected Sub OnVisibleChanged(ByVal e As EventArgs)","[JScript] protected function OnVisibleChanged(e: EventArgs);","Description","Raises the System.Windows.Forms.Control.VisibleChanged event.","Raising an event invokes the event handler through a delegate. For more information, see. An System.EventArgs that contains the event data.","ttttttttttttt) PerformLayout","[C#] public void PerformLayout( );","[C++] public: void PerformLayout( );","[VB] Public Sub PerformLayout( )","[JScript] public function PerformLayout( ); Forces the control to apply layout logic to child controls.","Description","Forces the control to apply layout logic to all its child controls.","uuuuuuuuuuuuu) PerformLayout","[C#] public void PerformLayout(Control affectedControl, string affectedProperty);","[C++] public: void PerformLayout(Control* affectedControl, String* affectedProperty);","[VB] Public Sub PerformLayout(ByVal affectedControl As Control, ByVal affectedProperty As String)","[JScript] public function PerformLayout(affectedControl: Control, affectedProperty String);","Description","Forces the control to apply layout logic to all of the child controls. A System.Windows.Forms.Control that represents the most recently changed control. The name of the most recently changed property on the control.","vvvvvvvvvvvvv) PointToClient","[C#] public Point PointToClient(Point p);","[C++] public: Point PointToClient(Point p);","[VB] Public Function PointToClient(ByVal p As Point) As Point","[JScript] public function PointToClient(p: Point): Point;","Description Computes the location of the specified screen point to client coordinates.","Return Value: A System.Drawing.Point that represents the converted System.Drawing.Point, p, in client coordinates. The screen coordinate System.Drawing.Point to convert.","wwwwwwwwwwwww) PointToScreen","[C#] public Point PointToScreen(Point p);","[C++] public: Point PointToScreen(Point p);","[VB] Public Function PointToScreen(ByVal p As Point) As Point","[JScript] public function PointToScreen(p: Point): Point;","Description","Computes the location of the specified client point to screen coordinates.","Return Value: A System.Drawing.Point that represents the converted System.Drawing.Point, p, in screen coordinates. The screen coordinate System.Drawing.Point to convert.","xxxxxxxxxxxxx) PreProcessMessage","[C#] public virtual bool PreProcessMessage(ref Message msg);","[C++] public: virtual bool PreProcessMessage(Message* msg);","[VB] Overridable Public Function PreProcessMessage(ByRef msg As Message) As Boolean","[JScript] public function PreProcessMessage(msg: Message): Boolean;","Description","Preprocesses input messages within the message loop before they are dispatched.","Return Value: true if the message was processed by the control; otherwise, false.","This method is only called when the control is hosted inside of a Windows Forms application or as an ActiveX control. A System.Windows.Forms.Message, passed by reference, that represents the message to process.","yyyyyyyyyyyyy) ProcessCmdKey","[C#] protected virtual bool ProcessCmdKey(ref Message msg, Keys keyData);","[C++] protected: virtual bool ProcessCmdKey(Message* msg, Keys keyData);","[VB] Overridable Protected Function ProcessCmdKey(ByRef msg As Message, ByVal keyData As Keys) As Boolean","[JScript] protected function ProcessCmdKey(msg: Message, keyData: Keys) Boolean;","Description","Processes a command key.","Return Value: true if the character was processed by the control; otherwise, false.","This method is called during message preprocessing to handle command keys. Command keys are keys that always take precedence over regular input keys. Examples of command keys include accelerators and menu shortcuts. The method must return true to indicate that it has processed the command key, or false to indicate that the key is not a command key. This method is only called when the control is hosted inside of a Windows Forms application or as an ActiveX control. A System.Windows.Forms.Message, passed by reference, that represents the window message to process. The key code for the key the user presses.","zzzzzzzzzzzzz) ProcessDialogChar","[C#] protected virtual bool ProcessDialogChar(char charCode);","[C++] protected: virtual bool ProcessDialogChar(_wchar_t charCode);","[VB] Overridable Protected Function ProcessDialogChar(ByVal charCode As Char) As Boolean","[JScript] protected function ProcessDialogChar(charCode: Char): Boolean;","Description","Processes a dialog character.","Return Value: true if the character was processed by the control; otherwise, false.","This method is called during message preprocessing to handle dialog characters, such as control mnemonics. This method is called only if the System.Windows.Forms.Control.IsInputChar(System.Char) method indicates that the control is not processing the character. The System.Windows.Forms.Control.ProcessDialogChar(System.Char) method simply sends the character to the parent's System.Windows.Forms.Control.ProcessDialogChar(System.Char) method, or returns false if the control has no parent. The System.Windows.Forms.Form class overrides this method to perform actual processing of dialog characters. This method is only called when the control is hosted inside of a Windows Forms application or as an ActiveX control. The character to process.","aaaaaaaaaaaaaa) ProcessDialogKey","[C#] protected virtual bool ProcessDialogKey(Keys keyData);","[C++] protected: virtual bool ProcessDialogKey(Keys keyData);","[VB] Overridable Protected Function ProcessDialogKey(ByVal keyData As Keys) As Boolean","[JScript] protected function ProcessDialogKey(keyData: Keys): Boolean;","Description","Processes a dialog key.","Return Value: true if the key was processed by the control; otherwise, false.","This method is called during message preprocessing to handle dialog characters, such as TAB, RETURN, ESCAPE, and arrow keys. This method is called only if the System.Windows.Forms.Control.IsInputKey(System.Windows.Forms.Keys) method indicates that the control is not processing the key. The System.Windows.Forms.Control.ProcessDialogKey(System.Windows.Forms.Keys) simply sends the character to the parent's System.Windows.Forms.Control.ProcessDialogKey(System.Windows.Forms.Keys) method, or returns false if the control has no parent. The System.Windows.Forms.Form class overrides this method to perform actual processing of dialog keys. This method is only called when the control is hosted inside of a Windows Forms application or as an ActiveX control. One of the","bbbbbbbbbbbbbb) ProcessKeyEventArgs","[C#] protected virtual bool ProcessKeyEventArgs(ref Message m);","[C++] protected: virtual bool ProcessKeyEventArgs(Message* m);","[VB] Overridable Protected Function ProcessKeyEventArgs(ByRef m As Message) As Boolean","[JScript] protected function ProcessKeyEventArgs(m: Message): Boolean;","Description","Processes a key message and generates the appropriate control events.","Return Value: true if the message was processed by the control; otherwise, false.","This method is called when a control receives a keyboard message. The method is responsible for generating the appropriate key events for the message by calling the System.Windows.Forms.Control.OnKeyPress(System.Windows.Forms.KeyPressEventArgs), System.Windows.Forms.Control.OnKeyDown(System.Windows.Forms. KeyEventArgs), or System.Windows.Forms.Control.OnKeyUp(System.Windows.Forms.KeyEventArgs) methods. The m parameter contains the window message that must be processed. Possible values for the System.Windows.Forms.Message.Msg property are WM_CHAR, WM_KEYDOWN, WM_SYSKEYDOWN, WM_KEYUP, WM_SYSKEYUP, and WM_IMECHAR. A System.Windows.Forms.Message, passed by reference, that represents the window message to process.","cccccccccccccc) ProcessKeyMessage","[C#] protected internal virtual bool ProcessKeyMessage(ref Message m);","[C++] protected public: virtual bool ProcessKeyMessage(Message* m);","[VB] Overridable Protected Friend Dim Function ProcessKeyMessage(ByRef m As Message) As Boolean","[JScript] package function ProcessKeyMessage(m: Message): Boolean;","Description","Processes a keyboard message.","Return Value: true if the message was processed by the control; otherwise, false.","This method is called when a control receives a keyboard message. The method first checks if the control has a parent, and if so calls the parent's System.Windows.Forms.Control.ProcessKeyMessage(System.Windows.Forms.Message@) method. If the parent's System.Windows.Forms.Control.ProcessKeyMessage(System.Windows.Forms.Message@) method does not process the message then the System.Windows.Forms.Control.ProcessKeyEventArgs(System.Windows.Forms.Message@) method is called to generate the appropriate keyboard events. The m parameter contains the window message that must be processed. Possible values for the System.Windows.Forms.Message.Msg property are WM_CHAR, WM_KEYDOWN, WM_SYSKEYDOWN, WM_KEYUP, and WM_SYSKEYUP. A System.Windows.Forms.Message, passed by reference, that represents the window message to process.","dddddddddddddd) ProcessKeyPreview","[C#] protected virtual bool ProcessKeyPreview(ref Message m);","[C++] protected: virtual bool ProcessKeyPreview(Message* m);","[VB] Overridable Protected Function ProcessKeyPreview(ByRef m As Message) As Boolean","[JScript] protected function ProcessKeyPreview(m: Message): Boolean;","Description","Previews a keyboard message.","Return Value: true if the message was processed by the control; otherwise, false.","This method is called by a child control when the child control receives a keyboard message. The child control calls this method before generating any keyboard events for the message. If this method returns true, the child control considers the message processed and does not generate any keyboard events.\n\nThe m parameter contains the window message to preview. Possible values for the System.Windows.Forms.Message.Msg property are WM_CHAR, WM_KEYDOWN, WM_SYSKEYDOWN, WM_KEYUP, and WM_SYSKEYUP. The System.Windows.Forms.Control.ProcessKeyPreview(System.Windows. Forms.Message@) method simply sends the character to the parent's System.Windows.Forms.Control.ProcessKeyPreview(System.Windows. Forms.Message@) method, or returns false if the control has no parent. The System.Windows.Forms.Form class overrides this method to perform actual processing of dialog keys. A System.Windows.Forms.Message, passed by reference, that represents the window message to process.\n","eeeeeeeeeeeeee) ProcessMnemonic","[C#] protected virtual bool ProcessMnemonic(char charCode);","[C++] protected: virtual bool ProcessMnemonic(_wchar_t charCode);","[VB] Overridable Protected Function ProcessMnemonic(ByVal charCode As Char) As Boolean","[JScript] protected function ProcessMnemonic(charCode: Char): Boolean;","Description","Processes a mnemonic character.","Return Value: true if the character was processed as a mnemonic by the control; otherwise, false.","This method is called to give a control the opportunity to process a mnemonic character. The method should check if the control is in a state to process mnemonics and if the given character represents a mnemonic. If so, the method should perform the action associated with the mnemonic and return true. If not, the method should return false. Implementations of this method often use the System.Windows.Forms.Control.IsMnemonic(System.Char,System.String) method to check if the given character matches a mnemonic in the control's text, for example: if (CanSelect && IsMnemonic(charCode, MyControl.Text) {\/\/perform action associated with mnemonic} This default implementation of the System.Windows.Forms.Control.ProcessMnemonic(System.Char) method simply returns false to indicate that the control has no mnemonic. The character to process.","ffffffffffffff) RaiseDragEvent","[C#] protected void RaiseDragEvent(object key, DragEventArgs e);","[C++] protected: void RaiseDragEvent(Object* key, DragEventArgs* e);","[VB] Protected Sub RaiseDragEvent(ByVal key As Object, ByVal e As DragEventArgs)","[JScript] protected function RaiseDragEvent(key: Object, e: DragEventArgs);","Description","Raises the appropriate drag event. The event to raise. A System.Windows.Forms.DragEventArgs that contains the event data.","gggggggggggggg) RaiseKeyEvent","[C#] protected void RaiseKeyEvent(object key, KeyEventArgs e);","[C++] protected: void RaiseKeyEvent(Object* key, KeyEventArgs* e);","[VB] Protected Sub RaiseKeyEvent(ByVal key As Object, ByVal e As KeyEventArgs)","[JScript] protected function RaiseKeyEvent(key: Object, e: KeyEventArgs);","Description","Raises the appropriate key event. The event to raise. A System.Windows.Forms.KeyEventArgs that contains the event data.","hhhhhhhhhhhhhh) RaiseMouseEvent","[C#] protected void RaiseMouseEvent(object key, MouseEventArgs e);","[C++] protected: void RaiseMouseEvent(Object* key, MouseEventArgs* e);","[VB] Protected Sub RaiseMouseEvent(ByVal key As Object, ByVal e As MouseEventArgs)","[JScript] protected function RaiseMouseEvent(key: Object, e: MouseEventArgs);","Description","Raises the appropriate mouse event. The event to raise. A System.Windows.Forms.MouseEventArgs that contains the event data.","iiiiiiiiiiiiii) RaisePaintEvent","[C#] protected void RaisePaintEvent(object key, PaintEventArgs e);","[C++] protected: void RaisePaintEvent(Object* key, PaintEventArgs* e);","[VB] Protected Sub RaisePaintEvent(ByVal key As Object, ByVal e As PaintEventArgs)","[JScript] protected function RaisePaintEvent(key: Object, e: PaintEventArgs);","Description","Raises the appropriate paint event. The event to raise. A System.Windows.Forms.PaintEventArgs that contains the event data.","jjjjjjjjjjjjjj) RecreateHandle","[C#] protected void RecreateHandle( );","[C++] protected: void RecreateHandle( );","[VB] Protected Sub RecreateHandle( )","[JScript] protected function RecreateHandle( );","Description","Forces the re-creation of the handle for the control.","When overriding this method, you must call the base class implementation of this method.","kkkkkkkkkkkkkk) RectangleTo Client","[C#] public Rectangle RectangleToClient(Rectangle r);","[C++] public: Rectangle RectangleToClient(Rectangle r);","[VB] Public Function RectangleToClient(ByVal r As Rectangle) As Rectangle","[JScript] public function RectangleToClient(r: Rectangle): Rectangle;","Description","Computes the size and location of the specified screen rectangle to client coordinates.","Return Value: A System.Drawing.Rectangle that represents the converted System.Drawing.Rectangle, r, in client coordinates. The screen coordinate System.Drawing.Rectangle to convert.","llllllllllllll) RectangleToScreen","[C#] public Rectangle RectangleToScreen(Rectangle r);","[C++] public: Rectangle RectangleToScreen(Rectangle r);","[VB] Public Function RectangleToScreen(ByVal r As Rectangle) As Rectangle","[JScript] public function RectangleToScreen(r: Rectangle): Rectangle;","Description","Computes the size and location of the specified client rectangle to screen coordinates.","Return Value: A System.Drawing.Rectangle that represents the converted System.Drawing.Rectangle, p, in screen coordinates. The screen coordinate System.Drawing.Rectangle to convert.","mmmmmmmmmmmmmm) ReflectMessage","[C#] protected static bool ReflectMessage(IntPtr hWnd, ref Message m);","[C++] protected: static bool ReflectMessage(IntPtr hWnd, Message* m);","[VB] Protected Shared Function ReflectMessage(ByVal hWnd As IntPtr, ByRef m As Message) As Boolean","[JScript] protected static function ReflectMessage(hWnd: IntPtr, m: Message): Boolean;","Description","Reflects the specified message to the control that is bound to the specified handle.","Return Value: true if the message was reflected; otherwise, false. An System.IntPtr representing the handle to reflect the message to. A System.Windows.Forms.Message representing the windows message to reflectWin32 message to reflect","nnnnnnnnnnnnn) Refresh","[C#] public virtual void Refresh( );","[C++] public: virtual void Refresh( );","[VB] Overridable Public Sub Refresh( )","[JScript] public function Refresh( );","Description","Forces the control to invalidate its client area and immediately redraw itself and any child controls.","When overriding System.Windows.Forms.Control.Refresh in a derived class, be sure to call the base class's System.Windows.Forms.Control.Refresh method so that control and its child controls are invaludated and redrawn.","oooooooooooooo) ResetBackColor","[C#] public virtual void ResetBackColor( );","[C++] public: virtual void ResetBackColor( );","[VB] Overridable Public Sub ResetBackColor( )","[JScript] public function ResetBackColor( );","Description","Resets the System.Windows.Forms.Control.BackColor property to its default value.","You typically use this method if you are either creating a designer for the System.Windows.Forms.Control or creating your own control incorporating the System.Windows.Forms.Control.","pppppppppppppp) ResetBindings","[C#] public void ResetBindings( );","[C++] public: void ResetBindings( );","[VB] Public Sub ResetBindings( )","[JScript] public function ResetBindings( );","Description","Resets the System.Windows.Forms.Control.DataBindings property to its default value.","You typically use this method if you are either creating a designer for the System.Windows.Forms.Control or creating your own control incorporating the System.Windows.Forms.Control.","qqqqqqqqqqqqqq) ResetCursor( )","[C#] public virtual void ResetCursor( );","[C++] public: virtual void ResetCursor( );","[VB] Overridable Public Sub ResetCursor( )","[JScript] public function ResetCursor( );","Description","Resets the System.Windows.Forms.Control.Cursor property to its default value.","You typically use this method if you are either creating a designer for the System.Windows.Forms.Control or creating your own control incorporating the System.Windows.Forms.Control.","rrrrrrrrrrrrrr) ResetFont","[C#] public virtual void ResetFont( );","[C++] public: virtual void ResetFont( );","[VB] Overridable Public Sub ResetFont( )","[JScript] public function ResetFont( );","Description","Resets the System.Windows.Forms.Control.Font property to its default value.","You typically use this method if you are either creating a designer for the System.Windows.Forms.Control or creating your own control incorporating the System.Windows.Forms.Control.","ssssssssssssss) ResetForeColor","[C#] public virtual void ResetForeColor( );","[C++] public: virtual void ResetForeColor( );","[VB] Overridable Public Sub ResetForeColor( )","[JScript] public function ResetForeColor( );","Description","Resets the System.Windows.Forms.Control.ForeColor property to its default value.","You typically use this method if you are either creating a designer for the System.Windows.Forms.Control or creating your own control incorporating the System.Windows.Forms.Control.","ttttttttttt) ResetImeMode","[C#] public void ResetImeMode( );","[C++] public: void ResetImeMode( );","[VB] Public Sub ResetImeMode( )","[JScript] public function ResetImeMode( );","Description","Resets the System.Windows.Forms.Control.ImeMode property to its default value.","You typically use this method if you are either creating a designer for the System.Windows.Forms.Control or creating your own control incorporating the System.Windows.Forms.Control","uuuuuuuuuuuuuu) ResetMouseEventArgs","[C#] protected void ResetMouseEventArgs( );","[C++] protected: void ResetMouseEventArgs( );","[VB] Protected Sub ResetMouseEventArgs( )","[JScript] protected function ResetMouseEventArgs( );","Description","Resets the mouse leave listeners.","vvvvvvvvvvvvvv) ResetRightToLeft","[C++] public: virtual void ResetRightToLeft( );","[VB] Overridable Public Sub ResetRightToLeft( )","[JScript] public function ResetRightToLeft( );","Description","Resets the System.Windows.Forms.Control.RightToLeft property to its default value.","You typically use this method if you are either creating a designer for the System.Windows.Forms.Control or creating your own control incorporating the System.Windows.Forms.Control.","wwwwwwwwwwwwww) ResetText","[C#] public virtual void ResetText( );","[C++] public: virtual void ResetText( );","[VB] Overridable Public Sub ResetText( )","[JScript] public function ResetText( );","Description","Resets the System.Windows.Forms.Control.Text property to its default value.","You typically use this method if you are either creating a designer for the System.Windows.Forms.Control or creating your own control incorporating the System.Windows.Forms.Control.","xxxxxxxxxxxxxx) Resume Layout","[C#] public void ResumeLayout( );","[C++] public: void ResumeLayout( );","[VB] Public Sub ResumeLayout( )","[JScript] public function ResumeLayout( ); Resumes normal layout logic.","Description","Resumes normal layout logic.","Calling the System.Windows.Forms.Control.ResumeLayout method forces an immediate layout if there are any pending layout requests.","yyyyyyyyyyyyyy) ResumeLayout","[C#] public void ResumeLayout(bool performLayout);","[C++] public: void ResumeLayout(bool performLayout);","[VB] Public Sub ResumeLayout(ByVal performLayout As Boolean)","[JScript] public function ResumeLayout(performLayout: Boolean);","Description","Resumes normal layout logic. Optionally forces an immediate layout of pending layout requests.","Calling the System.Windows.Forms.Control.ResumeLayout method forces an immediate layout if there are any pending layout requests. When the performLayout parameter is set to true, an immediate layout occurs if there are any pending layout requests. true to execute pending layout requests; otherwise, false.","zzzzzzzzzzzzzz) RtlTranslateAlignment","[C#] protected ContentAlignment RtlTranslateAlignment(ContentAlignment align);","[C++] protected: ContentAlignment RtlTranslateAlignment(ContentAlignment align);","[VB] Protected Function RtlTranslateAlignment(ByVal align As ContentAlignment) As ContentAlignment","[JScript] protected function RtlTranslateAlignment(align: ContentAlignment): ContentAlignment;","Description","Converts the specified System.Drawing.ContentAlignment to the appropriate System.Drawing.ContentAlignment to support right to left text.","Return Value: One of the System.Drawing.ContentAlignment values. One of the System.Drawing.ContentAlignment values.","aaaaaaaaaaaaaaa) RtlTranslateAlignment","[C#] protected HorizontalAlignment RtlTranslateAlignment(HorizontalAlignment align);","[C++] protected: HorizontalAlignment","RtlTranslateAlignment(HorizontalAlignment align);","[VB] Protected Function RtlTranslateAlignment(ByVal align As HorizontalAlignment) As HorizontalAlignment","[JScript] protected function RtlTranslateAlignment(align: HorizontalAlignment): HorizontalAlignment; Converts the current alignment to the appropriate alignment to support right to left text.","Description","Converts the specified System.Windows.Forms.HorizontalAlignment to the appropriate System.Windows.Forms.HorizontaIAlignment to support right to left text.","Return Value: One of the System.Windows.Forms.HorizontalAlignment values. One of the System.Windows.Forms.HorizontaIAlignment values.","bbbbbbbbbbbbbbb) RtlTranslateAlignment","[C#] protected LeftRightAlignment RtlTranslateAlignment(LeftRightAlignment align);","[C++] protected: LeftRightAlignment RtlTranslateAlignment(LeftRightAlignment align);","[VB] Protected Function RtlTranslateAlignment(ByVal align As LeftRightAlignment) As LeftRightAlignment","[JScript] protected function RtlTranslateAlignment(align: LeftRightAlignment):LeftRightAlignment;","Description","Converts the specified System.Windows.Forms.LeftRightAlignment to the appropriate System.Windows.Forms.LeftRightAlignment to support right to left text.","Return Value: One of the System.Windows.Forms.LeftRightAlignment values. One of the System.Windows.Forms.LeftRightAlignment values.","ccccccccccccccc) RtlTranslateContent","[C#] protected ContentAlignment RtlTranslateContent(ContentAlignment align);","[C++] protected: ContentAlignment RtlTranslateContent(ContentAlignment align);","[VB] Protected Function RtlTranslateContent(ByVal align As ContentAlignment) As ContentAlignment","[JScript] protected function RtlTranslateContent(align: ContentAlignment): ContentAlignment;","Description","Converts the specified System.Drawing.ContentAlignment to the appropriate System.Drawing.ContentAlignment to support right to left text.","Return Value: One of the System.Drawing.ContentAlignment values. One of the System.Drawing.ContentAlignment values.","ddddddddddddddd) RtlTranslateHorizontal","[C#] protected HorizontalAlignment RtlTranslateHorizontal(HorizontalAlignment align);","[C++] protected: HorizontalAlignment RtlTranslateHorizontal(HorizontalAlignment align);","[VB] Protected Function RtlTranslateHorizontal(ByVal align As HorizontalAlignment) As HorizontalAlignment","[JScript] protected function RtlTranslateHorizontal(align: HorizontalAlignment): HorizontalAlignment;","Description","Converts the specified System.Windows.Forms.HorizontaIAlignment to the appropriate System.Windows.Forms.HorizontaIAlignment to support right to left text.","Return Value: One of the System.Windows.Forms.HorizontalAlignment values. One of the System.Windows.Forms.HorizontaIAlignment values.","eeeeeeeeeeeeeee) RtlTranslateLeftRight","[C#] protected LeftRightAlignment RtlTranslateLeftRight(LeftRightAlignment align);","[C++] protected: LeftRightAlignment RtlTranslateLeftRight(LeftRightAlignment align);","[VB] Protected Function RtlTranslateLeftRight(ByVal align As LeftRightAlignment) As LeftRightAlignment","[JScript] protected function RtlTranslateLeftRight(align: LeftRightAlignment): LeftRightAlignment;","Description","Converts the specified System.Windows.Forms.LeftRightAlignment to the appropriate System.Windows.Forms.LeftRightAlignment to support right to left text.","Return Value: One of the System.Windows.Forms.LeftRightAlignment values. One of the System.Windows.Forms.LeftRightAlignment values.","fffffffffffffff) Scale","[C#] public void Scale(float ratio);","[C++] public: void Scale(float ratio);","[VB] Public Sub Scale(ByVal ratio As Single)","[JScript] public function Scale(ratio: float); Scales the entire control and any child controls.","Description","Scales the entire control and any child controls to the specified ratio horizontally and vertically. The ratio by which to scale the control horizontally and vertically.","ggggggggggggggg) Scale","[C#] public void Scale(float dx, float dy);","[C++] public: void Scale(float dx, float dy);","[VB] Public Sub Scale(ByVal dx As Single, ByVal dy As Single)","[JScript] public function Scale(dx: float, dy: float);","Description","Scales the control and any child controls to the specified horizontal ratio and vertical ratio. The ratio by which to scale the control horizontally. The ratio by which to scale the control vertically.","hhhhhhhhhhhhhhh) ScaleCore","[C#] protected virtual void ScaleCore(float dx, float dy);","[C++] protected: virtual void ScaleCore(float dx, float dy);","[VB] Overridable Protected Sub ScaleCore(ByVal dx As Single, ByVal dy As Single)","[JScript] protected function ScaleCore(dx: float, dy: float);","Description","Performs the work of scaling the entire control and any child controls. Ratio to scale the control horizontally. Ratio to scale the control vertically.","iiiiiiiiiiiiiii) Select","[C#] public void Select( );","[C++] public: void Select( );","[VB] Public Sub Select( )","[JScript] public function Select( ); Activates a control.","Description","Activates this control.","The System.Windows.Forms.Control.Select method activates the control if the control has the System.Windows.Forms.ControIStyles.Selectable style bit set to true, is contained in another control, and all of its parent controls are both visible and enabled.","jjjjjjjjjjjjjjj) Select","[C#] protected virtual void Select(bool directed, bool forward);","[C++] protected: virtual void Select(bool directed, bool forward);","[VB] Overridable Protected Sub Select(ByVal directed As Boolean, ByVal forward As Boolean)[JScript] protected function Select(directed: Boolean, forward: Boolean);","Description","Activates a child control. Optionally specifies the direction in the tab order to select the control from.","The directed and forward parameters are used by container-style controls. When the directed parameter is set to true, the forward parameter is evaluated to determine which control to select. When forward is set to true the next control in the tab order is selected, when false, the previous control in the tab order is selected. true to specify the direction of the control to select; otherwise, false. true to select the next control forward in the tab order; otherwise, false.","kkkkkkkkkkkkkkk) SelectNextControl","[C#] public bool SelectNextControl(Control ctl, bool forward, bool tabStopOnly, bool nested, bool wrap);","[C++] public: bool SelectNextControl(Control* ctl, bool forward, bool tabStopOnly, bool nested, bool wrap);","[VB] Public Function SelectNextControl(ByVal ctl As Control, ByVal forward As Boolean, ByVal tabStopOnly As Boolean, ByVal nested As Boolean, ByVal wrap As Boolean) As Boolean","[JScript] public function SelectNextControl(ctl: Control, forward: Boolean, tabStopOnly: Boolean, nested: Boolean, wrap: Boolean): Boolean;","Description","Activates the next control.","Return Value: true if a control was activated; otherwise, false.","This activates the control if the control has System.Windows.Forms.ControlStyles.Selectable set to true, is contained in another control, and all of its parent controls are both visible and enabled. Examples of controls that are not selectable are System.Windows.Forms.Label, System.Windows.Forms.Panel, System.Windows.Forms.PictureBox, and System.Windows.Forms.GroupBox. The System.Windows.Forms.Control where to start the search. true to select the next control forward in the tab order; otherwise, false. true to ignore the controls with the System.Windows.Forms.Control.TabStopproperty set to false; otherwise, false. true to include nested (children of child controls) child controls; otherwise, false. true to start searching from the first control in the tab order after the last control has been reached; otherwise, false","lllllllllllllll) SendToBack","[C#] public void SendToBack( );","[C++] public: void SendToBack( );","[VB] Public Sub SendToBack( )","[JScript] public function SendToBack( );","Description","Sends the control to the back of the z-order.","The control is moved to the bottom of the z-order. If the control is a child of another control, the child control is moved to the bottom of the z-order.","mmmmmmnmmnmmm) SetBounds","[C#] public void SetBounds(int x, int y, int width, int height);","[C++] public: void SetBounds(int x, int y, int width, int height);","[VB] Public Sub SetBounds(ByVal x As Integer, ByVal y As Integer, ByVal width As Integer, ByVal height As Integer)","[JScript] public function SetBounds(x: int, y: int, width: int, height: int); Sets the bounds of the control.","Description","Sets the bounds of the control to the specified location and size. The new System.Windows.Forms.Control.Left property value of the control. The new System.Windows.Forms.Control.Right property value of the control. The new System.Windows.Forms.Control.Width property value of the control. The new System.Windows.Forms.Control.Height property value of the control.","nnnnnnnnnnnnnnn) SetBounds","[C#] public void SetBounds(int x, int y, int width, int height, BoundsSpecified specified);","[C++] public: void SetBounds(int x, int y, int width, int height, BoundsSpecified specified);","[VB] Public Sub SetBounds(ByVal x As Integer, ByVal y As Integer, ByVal width As Integer, ByVal height As Integer, ByVal specified As BoundsSpecified)","[JScript] public function SetBounds(x: int, y: int, width: int, height: int, specified: BoundsSpecified);","Description","Sets the specified bounds of the control to the specified location and size. The new System.Windows.Forms.Control.Left property value of the control. The new System.Windows.Forms.Control.Right property value of the control. The new System.Windows.Forms.Control.Width property value of the control. The new System.Windows.Forms.Control.Height property value of the control. A bitwise combination of the System.Windows.Forms.BoundsSpecified values. For any parameter not specified, the current value will be used.","ooooooooooooooo) SetBoundsCore","[C#] protected virtual void SetBoundsCore(int x, int y, int width, int height, BoundsSpecified specified);","[C++] protected: virtual void SetBoundsCore(int x, int y, int width, int height, BoundsSpecified specified);","[VB] Overridable Protected Sub SetBoundsCore(ByVal x As Integer, ByVal y As Integer, ByVal width As Integer, ByVal height As Integer, ByVal specified As BoundsSpecified)","[JScript] protected function SetBoundsCore(x: int, y: int, width: int, height: int, specified BoundsSpecified);","Description","Performs the work of setting the specified bounds of this control.","Typically, the parameters that correspond to the bounds not included in the specified parameter are passed in with their current values. For example, the System.Windows.Forms.Control.Height, System.Windows.Forms.Control.Width, or the System.Drawing.Point.X or System.Drawing.Point.Y properties of the System.Windows.Forms.Control.Location property can be passed in with a reference to the current instance of the control. The new System.Windows.Forms.Control.Left property value of the control. The new System.Windows.Forms.Control.Right property value of the control. The new System.Windows.Forms.Control.Width property value of the control. The new System.Windows.Forms.Control.Height property value of the control. A bitwise combination of the System.Windows.Forms.BoundsSpecified values.","ppppppppppppppp) SetClientSizeCore","[C#] protected virtual void SetClientSizeCore(int x, int y);","[C++] protected: virtual void SetClientSizeCore(int x, int y);","[VB] Overridable Protected Sub SetClientSizeCore(ByVal x As Integer, ByVal y As Integer)","[JScript] protected function SetClientSizeCore(x: int, y: int);","Description","Sets the size of the client area of the control.","The client area starts at (0, 0) location and extends to the (x, y) location. The client area width, in pixels. The client area height, in pixels.","qqqqqqqqqqqqqqq) SetStyle","[C#] protected void SetStyle(ControlStyles flag, bool value);","[C++] protected: void SetStyle(ControlStyles flag, bool value);","[VB] Protected Sub SetStyle(ByVal flag As ControlStyles, ByVal value As Boolean)","[JScript] protected function SetStyle(flag: ControlStyles, value: Boolean);","Description","Sets the specified style bit to the specified value.","Control style bit flags are used to categorize supported behavior. A control can enable a style by calling the System.Windows.Forms.Control.SetStyle(System.Windows.Forms.ControlStyles,System.Boolean) method and passing in the appropriate System.Windows.Forms.ControlStyles bit and the boolean value set the bit to. To determine the value assigned to a specified System.Windows.Forms.ControlStyles bit, use the System.Windows.Forms.Control.GetStyle(System.Windows.Forms.ControlStyles) method and pass in the System.Windows.Forms.ControIStyles member to evaluate. The System.Windows.Forms.ControlStyles bit to set. true to apply the specified style to the control; otherwise, false.","rrrrrrrrrrrrrrr) SetTopLevel","[C#] protected void SetTopLevel(bool value);","[C++] protected: void SetTopLevel(bool value);","[VB] Protected Sub SetTopLevel(ByVal value As Boolean)","[JScript] protected function SetTopLevel(value: Boolean);","Description","Sets the control as the top-level control. true to set the control as the top-level control; otherwise, false.","sssssssssssssss) SetVisibleCore","[C#] protected virtual void SetVisibleCore(bool value);","[C++] protected: virtual void SetVisibleCore(bool value);","[VB] Overridable Protected Sub SetVisibleCore(ByVal value As Boolean)","[JScript] protected function SetVisibleCore(value: Boolean);","Description","Sets the control to the specified visible state. true to make the control visible; otherwise, false.","ttttttttttttttt) Show","[C#] public void Show( );","[C++] public: void Show( );","[VB] Public Sub Show( )","[JScript] public function Show( );","Description","Displays the control to the user.","Showing the control is equal to setting the System.Windows.Forms.Control.Visible property to true. After the System.Windows.Forms.Control.Show method is called the System.Windows.Forms.Control.Visible property returns a value of true until the System.Windows.Forms.Control.Hide method is called.","uuuuuuuuuuuuuuu) SuspendLayout","[C#] public void SuspendLayout( );","[C++] public: void SuspendLayout( );","[VB] Public Sub SuspendLayout( )","[JScript] public function SuspendLayout( );","Description","Temporarily suspends the layout logic for the control.","The layout logic of the control is suspended until a call the System.Windows.Forms.Control.ResumeLayout method is called.","vvvvvvvvvvvvvvv) UnsafeNativeMethods.IOleControl.FreezeEvents","[C#] int UnsafeNativeMethods.IOleControl.FreezeEvents(int bFreeze);","[C++] int UnsafeNativeMethods.IOeControl::FreezeEvents(int bFreeze);","[VB] Function IOleControl.FreezeEvents(ByVal bFreeze As Integer) As Integer Implements UnsafeNativeMethods.IOleControl.FreezeEvents","[JScript] function UnsafeNativeMethods.IOleControl.FreezeEvents(bFreeze: int): int;","wwwwwwwwwwwwwww) UnsafeNativeMethods.IOleControl.GetControlInfo","[C#] int UnsafeNativeMethods.IOleControl.GetControlInfo(NativeMethods.tagCONTROL INFO pCI);","[C++] int UnsafeNativeMethods::IOleControl::GetControlInfo(NativeMethods.tagCONTROLINFO* pCI);","[VB] Function IOleControl.GetControlInfo(ByVal pCI As NativeMethods.tagCONTROLINFO) As Integer Implements UnsafeNativeMethods.IOleControl.GetControlInfo","[JScript] function UnsafeNativeMethods.IOleControl.GetControlInfo(pCI NativeMethods.tagCONTROLINFO): int;","xxxxxxxxxxxxxxx) UnsafeNativeMethods.IOleControl.OnAmbientPropertyChange","[C#] int UnsafeNativeMethods.IOleControl.OnAmbientPropertyChange(int dispID);","[C++] int UnsafeNativeMethods::IOleControl::OnAmbientPropertyChange(int dispID);","[VB] Function IOleControl.OnAmbientPropertyChange(ByVal dispID As Integer) As Integer Implements UnsafeNativeMethods.IOleControl.OnAmbientPropertyChange","[JScript] function UnsafeNativeMethods.IOleControl.OnAmbientPropertyChange(dispID: int): int;","yyyyyyyyyyyyyyy) UnsafeNativeMethods.IOleControl.OnMnemonic","[C#] int UnsafeNativeMethods.IOleControl.OnMnemonic(ref NativeMethods.MSG pMsg);","[C++] int UnsafeNativeMethods::IOleControl::OnMnemonic(NativeMethods.MSG* pMsg);","[VB] Function IOleControl.OnMnemonic(ByRef pMsg As NativeMethods.MSG) As Integer Implements UnsafeNativeMethods.IOleControl.OnMnemonic","[JScript] function UnsafeNativeMethods.IOleControl.OnMnemonic(pMsg: NativeMethods.MSG): int;","zzzzzzzzzzzzzzz) UnsafeNativeMethods.IOleInPlaceActiveObject.ContextSensitive Help","[C#] void UnsafeNativeMethods.IOleInPlaceActiveObject.ContextSensitiveHelp(int fEnterMode);","[C++] void UnsafeNativeMethods::IOleInPlaceActiveObject::ContextSensitiveHelp(int fEnterMode);","[VB] Sub IOleInPlaceActiveObject.ContextSensitiveHelp(ByVal fEnterMode As Integer) ImplementsUnsafeNativeMethods.IOleInPlaceActiveObject.ContextSensitiveHelp","[JScript] function UnsafeNativeMethods.IOleInPlaceActiveObject.ContextSensitiveHelp(fEnterMode: int);","aaaaaaaaaaaaaaaa) UnsafeNativeMethods.IOleInPlaceActiveObject.EnableModeless","[C#] void UnsafeNativeMethods.IOleInPlaceActiveObject.EnableModeless(int fEnable);","[C++] void UnsafeNativeMethods::IOleInPlaceActiveObject::EnableModeless(int fEnable);","[VB] Sub IOleInPlaceActiveObject.EnableModeless(ByVal fEnable As Integer) Implements UnsafeNativeMethods.IOleInPlaceActiveObject.EnableModeless","[JScript] function UnsafeNativeMethods.IOleInPlaceActiveObject.EnableModeless(fEnable: int);","bbbbbbbbbbbbbbbb) UnsafeNativeMethods.IOleInPlaceActiveObject.Get Window","[C#] int UnsafeNativeMethods.IOleInPlaceActiveObject.GetWindow(out IntPtr hwnd);","[C++] int UnsafeNativeMethods::IOleInPlaceActiveObject::GetWindow(IntPtr* hwnd);","[VB] Function IOleInPlaceActiveObject.GetWindow(ByRef hwnd As IntPtr) As Integer Implements UnsafeNativeMethods.IOleInPlaceActiveObject.GetWindow","[JScript] function UnsafeNativeMethods.IOleInPlaceActiveObject.GetWindow(hwnd: IntPtr): int;","cccccccccccccccc) UnsafeNativeMethods.IOleInPlaceActiveObject.OnDocWindowActivate","[C#] void UnsafeNativeMethods.IOleInPlaceActiveObject.OnDocWindowActivate(int fActivate);","[C++] void UnsafeNativeMethods::IOleInPlaceActiveObject::OnDocWindowActivate(int fActivate);","[VB] Sub IOleInPlaceActiveObject.OnDocWindowActivate(ByVal fActivate As Integer) ImplementsUnsafeNativeMethods.IOleInPlaceActiveObject.OnDocWindowActivate","[JScript] function UnsafeNativeMethods.IOleInPlaceActiveObject.OnDocWindowActivate(fActivate: int);","dddddddddddddddd) UnsafeNativeMethods.IOleInPlaceActiveObject. OnFrame WindowActivate","[C#] void UnsafeNativeMethods.IOleInPlaceActiveObject.OnFrameWindowActivate(int fActivate);","[C++] void UnsafeNativeMethods::IOleInPlaceActiveObject::OnFrameWindowActivate(int fActivate);","[VB] Sub IOleInPlaceActiveObject.OnFrameWindowActivate(ByVal fActivateAs Integer) Implements UnsafeNativeMethods.IOleInPlaceActiveObject.OnFrameWindowActivate","[JScript] function UnsafeNativeMethods.IOleInPlaceActiveObject.OnFrameWindowActivate(fActivate: int);","eeeeeeeeeeeeeeee) UnsafeNativeMethods.IOleInPlaceActiveObject.ResizeBorder","[C#] void UnsafeNativeMethods.IOleInPlaceActiveObject.ResizeBorder(NativeMethods.CO MRECT prcBorder, UnsafeNativeMethods.IOleInPlaceUIWindow pUIWindow, int fFrameWindow);","[C++] void UnsafeNativeMethods::IOleInPlaceActiveObject::ResizeBorder(NativeMethods.COMRECT* prcBorder, UnsafeNativeMethods.IOleInPlaceUIWindow* pUIWindow, int frameWindow);","[VB] Sub IOleInPlaceActiveObject.ResizeBorder(ByVal prcBorder As NativeMethods.COMRECT, ByVal pUIWindow As UnsafeNativeMethods.IOleInPlaceUIWindow, ByVal fFrameWindow As Integer) Implements UnsafeNativeMethods.IOleInPlaceActiveObject.ResizeBorder","[JScript] function UnsafeNativeMethods.IOleInPlaceActiveObject.ResizeBorder(prcBorder NativeMethods.COMRECT, pUIWindow UnsafeNativeMethods.OleInPlaceUIWindow, fFrameWindow: int);","ffffffffffffffff) UnsafeNativeMethods.IOleInPlaceActiveObject.TranslateAccelerator","[C#] int UnsafeNativeMethods.IOleInPlaceActiveObject.TranslateAccelerator(ref NativeMethods.MSG lpmsg);","[C++] int UnsafeNativeMethods::IOleInPlaceActiveObject::TranslateAccelerator(NativeMethods.MSG* lpmsg);","[VB] Function IOleInPlaceActiveObject.TranslateAccelerator(ByRef lpmsg As NativeMethods.MSG) As Integer Implements UnsafeNativeMethods.IOleInPlaceActiveObject.TranslateAccelerator","[JScript] function UnsafeNativeMethods.IOleInPlaceActiveObject.TranslateAccelerator(lpmsg NativeMethods.MSG): int;","gggggggggggggggg) UnsafeNativeMethods.IOleInPlaceObject. ContextSensitive Help","[C#] void UnsafeNativeMethods.IOleInPlaceObject.ContextSensitiveHelp(int fEnterMode);","[C++] void UnsafeNativeMethods::IOleInPlaceObject::ContextSensitiveHelp(int fEnterMode);","[VB] Sub IOleInPlaceObject.ContextSensitiveHelp(ByVal fEnterMode As Integer) Implements UnsafeNativeMethods.IOleInPlaceObject.ContextSensitiveHelp","[JScript] function UnsafeNativeMethods.IOleInPlaceObject.ContextSensitiveHelp(fEnterMode: int);","hhhhhhhhhhhhhhhhh) UnsafeNativeMethods.IOleInPlaceObject.Get Window","[C#] int UnsafeNativeMethods.IOleInPlaceObject.GetWindow(out IntPtr hwnd);","[C++] int UnsafeNativeMethods::IOleInPlaceObject::GetWindow(IntPtr* hwnd);","[VB] Function IOleInPlaceObject.GetWindow(ByRef hwnd As IntPtr) As Integer Implements UnsafeNativeMethods.IOleInPlaceObject.GetWindow","[JScript] function UnsafeNativeMethods.IOleInPlaceObject.GetWindow(hwnd IntPtr): int;","iiiiiiiiiiiiiiii) UnsafeNativeMethods.IOleInPlaceObject.InPlaceDeactivate","[C#] void UnsafeNativeMethods.IOleInPlaceObject.InPlaceDeactivate( );","[C++] void UnsafeNativeMethods::IOleInPlaceObject::InPlaceDeactivate( );","[VB] Sub IOleInPlaceObject.InPlaceDeactivate( ) Implements UnsafeNativeMethods.IOleInPlaceObject.InPlaceDeactivate","[JScript] function UnsafeNativeMethods.IOleInPlaceObject.InPlaceDeactivate( );","jjjjjjjjjjjjjjjj) UnsafeNativeMethods.IOleInPlaceObject.ReactivateAndUndo","[C#] void UnsafeNativeMethods.IOleInPlaceObject.ReactivateAndUndo( );","[C++] void UnsafeNativeMethods::IOleInPlaceObject::ReactivateAndUndo( );","[VB] Sub IOleInPlaceObject.ReactivateAndUndo( ) Implements UnsafeNativeMethods.IOleInPlaceObject.ReactivateAndUndo","[JScript] function UnsafeNativeMethods.IOleInPlaceObject.ReactivateAndUndo( );","kkkkkkkkkkkkkkkk) UnsafeNativeMethods.IOleInPlaceObject.SetObjectRects","[C#] void UnsafeNativeMethods.IOleInPlaceObject.SetObjectRects(NativeMethods.COMRECT lprcPosRect, NativeMethods.COMRECT lprcClipRect);","[C++] void UnsafeNativeMethods::IOleInPlaceObject::SetObjectRects(NativeMethods.COMRECT* lprcPosRect, NativeMethods.COMRECT* lprcClipRect);","[VB] Sub IOleInPlaceObject.SetObjectRects(ByVal lprcPosRect As NativeMethods.COMRECT, ByVal lprcClipRect As NativeMethods.COMRECT) Implements UnsafeNativeMethods.IOleInPlaceObject.SetObjectRects","[JScript] function UnsafeNativeMethods.IOleInPlaceObject.SetObjectRects(lprcPosRect NativeMethods.COMRECT, lprcClipRect: NativeMethods.COMRECT);","llllllllllllllll) UnsafeNativeMethods.IOleInPlaceObject UIDeactivate","[C#] int UnsafeNativeMethods.IOleInPlaceObject.UIDeactivate( );","[C++] int UnsafeNativeMethods::IOleInPlaceObject::UIDeactivate( );","[VB] Function IOleInPlaceObject.UIDeactivate( ) As Integer Implements UnsafeNativeMethods.IOleInPlaceObject.UIDeactivate","[JScript] function UnsafeNativeMethods.IOleInPlaceObject.UIDeactivate( ): int;","mmmmmmmmmmmmmmmm) Unsafe NativeMethods.IOleObject.Advise","[C#] int UnsafeNativeMethods.IOleObject.Advise(UnsafeNativeMethods.IAdviseSink pAdvSink, out int cookie);","[C++] int UnsafeNativeMethods::IOleObject::Advise(UnsafeNativeMethods.IAdviseSink* pAdvSink, int* cookie);","[VB] Function IOleObject.Advise(ByVal pAdvSink As UnsafeNativeMethods.IAdviseSink, ByRef cookie As Integer) As Integer Implements UnsafeNativeMethods.IOleObject.Advise","[JScript] function UnsafeNativeMethods.IOleObject.Advise(pAdvSink: UnsafeNativeMethods.IAdviseSink, cookie: int): int;","nnnnnnnnnnnnnnnn) UnsafeNativeMethods.IOleObject. Close","[C#] int UnsafeNativeMethods.IOleObject.Close(int dwSaveOption);","[C++] int UnsafeNativeMethods::IOleObject::Close(int dwSaveOption);","[VB] Function IOleObject.Close(ByVal dwSaveOption As Integer) As Integer Implements UnsafeNativeMethods.IOleObject.Close","[JScript] function UnsafeNativeMethods.IOleObject.Close(dwSaveOption: int): int;","oooooooooooooooo) UnsafreNativeMethods.IOleObject.DoVerb","[C#] int UnsafeNativeMethods.IOleObject.DoVerb(int iVerb, IntPtr lpmsg, UnsafeNativeMethods.IOleClientSite pActiveSite, int lindex, IntPtr hwndparent, NativeMethods.COMRECT lprcPosRect);","[C++] int UnsafeNativeMethods::IOleObject::DoVerb(int iVerb, IntPtr lpmsg, UnsafeNativeMethods.IOleClientSite* pActiveSite, int lindex, IntPtr hwndparent, NativeMethods.COMRECT* lprcPosRect);","[VB] Function IOleObject.DoVerb(ByVal iVerb As Integer, ByVal lpmsg As IntPtr, ByVal pActiveSite As UnsafeNativeMethods.IOleClientSite, ByVal lindex As Integer, ByVal hwndParent As IntPtr, ByVal lprcPosRect As NativeMethods.COMRECT) As Integer Implements UnsafeNativeMethods.IOleObject.DoVerb\n\n[JScript] function UnsafeNativeMethods.IOleObject.DoVerb(iVerb: int, lpmsg IntPtr, pActiveSite: UnsafeNativeMethods.IOleClientSite, lindex: int, hwndParent: IntPtr, lprcPosRect: NativeMethods.COMRECT): int;\n","pppppppppppppppp) UnsafeNativeMethods.IOleObject.EnumAdvise","[C#] int UnsafeNativeMethods.IOleObject.EnumAdvise(out UnsafeNativeMethods.IEnumSTATDATAu e);","[C++] int UnsafeNativeMethods::IOleObject::EnumAdvise(UnsafeNativeMethods.IEnumSTATDATA** e);","[VB] Function IOleObject.EnumAdvise(ByRef e As UnsafeNativeMethods.IEnumSTATDATA) As Integer Implements UnsafeNativeMethods.IOleObject.EnumAdvise","[JScript] function UnsafeNativeMethods.IOleObject.EnumAdvise(e: UnsafeNativeMethods.IEnumSTATDATA): int;","qqqqqqqqqqqqqqqq) UnsafeNativeMethods.IOleObject.Enum Verbs","[C#] int UnsafeNativeMethods.IOleObject.EnumVerbs(out UnsafeNativeMethods.IEnumOLEVERB e);","[C++] int UnsafeNativeMethods::IOleObject::EnumVerbs(UnsafeNativeMethods.lEnumOLEVERB** e);","[VB] Function IOleObject.EnumVerbs(ByRef e As UnsafeNativeMethods.IEnumOLEVERB) As Integer Implements UnsafeNativeMethods.IOleObject.EnumVerbs","[JScript] function UnsafeNativeMethods.IOleObject.EnumVerbs(e: UnsafeNativeMethods.IEnumOLEVERB): int;","rrrrrrrrrrrrrrrr) UnsafeNativeMethods.IOleObject.GetClientSite","[C#] int UnsafeNativeMethods.IOleObject.GetClientSite(out UnsafeNativeMethods.IOleClientSite site);","[C++] int UnsafeNativeMethods::IOleObject::GetClientSite(UnsafeNativeMethods.IOleClientSite** site);","[VB] Function IOleObject.GetClientSite(ByRef site As UnsafeNativeMethods.IOleClientSite) As Integer Implements UnsafeNativeMethods.IOleObject.GetClientSite","[JScript] function UnsafeNativeMethods.IOleObject.GetClientSite(site: UnsafeNativeMethods.IOleClientSite): int;","ssssssssssssssss) UnsafeNativeMethods.IOleObject.GetClipboardData","[C#] int UnsafeNativeMethods.IOleObject.GetClipboardData(int dwReserved, out UnsafeNativeMethods.IOleDataObject data);","[C++] int UnsafeNativeMethods::IOleObject::GetClipboardData(int dwReserved, UnsafeNativeMethods.IOleDataObject** data);","[VB] Function IOleObject.GetClipboardData(ByVal dwReserved As Integer, ByRef data As UnsafeNativeMethods.IOleDataObject) As Integer Implements UnsafeNativeMethods.IOleObject.GetClipboardData","[JScript] function UnsafeNativeMethods.IOleObject.GetClipboardData(dwReserved: int, data: UnsafeNativeMethods.IOleDataObject): int;","tttttttttttttttt) UnsafeNativeMethods.IOleObject.GetExtent","[C#] int UnsafeNativeMethods.IOleObject.GetExtent(int dwDrawAspect, NativeMethods.tagSIZEL pSizel);","[C++] int UnsafeNativeMethods::IOleObject::GetExtent(int dwDrawAspect, NativeMethods.tagSIZEL* pSizel);","[VB] Function IOleObject.GetExtent(ByVal dwDrawAspect As Integer, ByVal pSizel As NativeMethods.tagSIZEL) As Integer Implements UnsafeNativeMethods.IOleObject.GetExtent","[JScript] function UnsafeNativeMethods.IOleObject.GetExtent(dwDrawAspect: int, pSizel: NativeMethods.tagSIZEL): it;","uuuuuuuuuuuuuuuu) UnsafeNativeMethods.IOleObject.GetMiscStatus","[C#] int UnsafeNativeMethods.IOleObject.GetMiscStatus(int dwAspect, out int cookie);","[C++] int UnsafeNativeMethods::IOeObject.GetMiscStatus(int dwAspect, int* cookie);","[VB] Function IOleObject.Get MiscStatus(ByVal dwAspect As Integer, ByRef cookie As Integer) As Integer Implements UnsafeNativeMethods.IOleObject.GetMiscStatus","[JScript] function UnsafeNativeMethods.IOleObject.GetMiscStatus(dwAspect: int, cookie: int): int;","vvvvvvvvvvvvvvvv) UnsafeNativeMethods.IOleObject.GetMoniker","[C#] int UnsafeNativeMethods.IOleObject.GetMoniker(int dwAssign, int dwWhichMoniker, out object moniker);","[C++] int UnsafeNativeMethods::IOleObject::GetMoniker(int dwAssign, int dwWhichMoniker, Object** moniker);","[VB] Function IOleObject.GetMoniker(ByVal dwAssign As Integer, ByVal dwWhichMoniker As Integer, ByRef moniker As Object) As Integer Implements UnsafeNativeMethods.IOleObject.GetMoniker","[JScript] function UnsafeNativeMethods.IOleObject.GetMoniker(dwAssign: int, dwWhichMoniker: int, moniker: Object): int;","wwwwwwwwwwwwwwww) UnsafeNativeMethods.IOleObject.GetUserClassID","[C#] int UnsafeNativeMethods.IOleObject.GetUserClassID(ref Guid pClsid);","[C++] int UnsafeNativeMethods::IOleObject::GetUserClassID(Guid* pClsid);","[VB] Function IOleObject.GetUserClassID(ByRef pClsid As Guid) As Integer Implements UnsafeNativeMethods.IOleObject.GetUserClassID","[JScript] function UnsafeNativeMethods.IOleObject.GetUserClassID(pClsid: Guid): int;","xxxxxxxxxxxxxxxx) UnsafeNativeMethods.IOleObject.GetUserType","[C#] int UnsafeNativeMethods.IOleObject.GetUserType(int dwFormOfType, out string userType);","[C++] int UnsafeNativeMethods::IOleObject::GetUserType(int dwFormOfType, String** userType);","[VB] Function IOleObject.GetUserType(ByVal dwFormOfType As Integer, ByRef userType As String) As Integer Implements UnsafeNativeMethods.IOleObject.GetUserType","[JScript] function UnsafeNativeMethods.IOleObject.GetUserType(dwFormOfType: int, userType: String): int;","yyyyyyyyyyyyyyyyy) UnsafeNativeMethods.IOleObject.InitFromData","[C#] int UnsafeNativeMethods.IOleObject.InitFromData(UnsafeNativeMethods.IOleData Object pDataObject, int fCreation, int dwReserved);","[C++] int UnsafeNativeMethods::IOleObject::InitFromData(UnsafeNativeMethods.IOleDataObject* pDataObject, int fCreation, int dwReserved);","[VB] Function IOleObject.InitFromData(ByVal pDataObject As UnsafeNativeMethods.IOleDataObject, ByVal fCreation As Integer, ByVal dwReserved As Integer) As Integer Implements UnsafeNativeMethods.IOleObject.InitFromData","[JScript] function UnsafeNativeMethods.IOleObject.InitFromData(pDataObject: UnsafeNativeMethods.IOleDataObject, fCreation: int, dwReserved: int): int;","zzzzzzzzzzzzzz) UnsafeNativeMethods.IOleObject.IsUpToDate","[C#] int UnsafeNativeMethods.IOleObject.IsUpToDate( );","[C++] int UnsafeNativeMethods::IOleObject::IsUpToDate( );","[VB] Function IOleObject.IsUpToDate( ) As Integer Implements UnsafeNativeMethods.IOleObject.IsUpToDate","[JScript] function UnsafeNativeMethods.IOleObject.IsUpToDate( ): int;","aaaaaaaaaaaaaaaaa) UnsafeNativeMethods.IOleObject.OleUpdate","[C#] int UnsafeNativeMethods.IOleObject.OleUpdate( );","[C++] int UnsafeNativeMethods::IOleObject::OleUpdate( );","[VB] Function IOleObject.OleUpdate( ) As Integer Implements UnsafeNativeMethods.IOleObject.OleUpdate","[JScript] function UnsafeNativeMethods.IOleObject.OleUpdate( ): int;","bbbbbbbbbbbbbbbbb) UnsafeNativeMethods.IOeObject.SetClientSite","[C#] int UnsafeNativeMethods.IOleObject.SetClientSite(UnsafeNativeMethods.IOleClientSite pClientSite);","[C++] int UnsafeNativeMethods::IOleObject::SetClientSite(UnsafeNativeMethods.IOeClientSite* pClientSite);","[VB] Function IOleObject.SetClientSite(ByVal pClientSite As UnsafeNativeMethods.IOleClientSite) As Integer Implements UnsafeNativeMethods.IOleObject.SetClientSite","[JScript] function UnsafeNativeMethods.IOleObject.SetClientSite(pCientSite: UnsafeNativeMethods.IOleClientSite): int;","ccccccccccccccccc) UnsafeNativeMethods.IOleObject.SetColorScheme","[C#] int UnsafeNativeMethods.IOleObject.SetColorScheme(NativeMethods.tagLOGPALETTE pLogpal);","[C++] int UnsafeNativeMethods::IOleObject::SetColorScheme(NativeMethods.tagLOGPALETTE* pLogpal);","[VB] Function IOleObject.SetColorScheme(ByVal pLogpal As NativeMethods.tagLOGPALETTE) As Integer Implements UnsafeNativeMethods.IOleObject.SetColorScheme","[JScript] function UnsafeNativeMethods.IOleObject.SetColorScheme(pLogpal: NativeMethods.tagLOGPALETTE): int;","ddddddddddddddddd) UnsafeNativeMethods.IOleObject.SetExtent","[C#] int UnsafeNativeMethods.IOleObject.SetExtent(int dwDrawAspect, NativeMethods.tagSIZEL pSizel);","[C++] int UnsafeNativeMethods::IOleObject::SetExtent(int dwDrawAspect, NativeMethods.tagSIZEL* pSizel);","[VB] Function IOleObject.SetExtent(ByVal dwDrawAspect As Integer, ByVal pSizel As NativeMethods.tagSIZEL) As Integer Implements UnsafeNativeMethods.IOleObject.SetExtent","[JScript] function UnsafeNativeMethods.IOleObject.SetExtent(dwDrawAspect: int, pSizel: NativeMethods.tagSIZEL): int;","eeeeeeeeeeeeeeeee) UnsafeNativeMethods.IOleObject.SetHostNames","[C#] int UnsafeNativeMethods.IOleObject.SetHostNames(string szContainerApp, string szContainerObj);","[C++] int UnsafeNativeMethods::IOleObject::SetHostNames(String* szContainerApp, String* szContainerObj);","[VB] Function IOleObject.SetHostNames(ByVal szContainerApp As String, ByVal szContainerObj As String) As Integer Implements UnsafeNativeMethods.IOleObject.SetHostNames","[JScript] function UnsafeNativeMethods.IOleObject.SetHostNames(szContainerApp: String, szContainerObj: String): int;","fffffffffffffffff) UnsafeNativeMethods.IOleObject.SetMoniker","[C#] int UnsafeNativeMethods.IOleObject.SetMoniker(int dwWhichMoniker, object pmk);","[C++] int UnsafeNativeMethods::IOleObject::SetMoniker(int dwWhichMoniker, Object* pmk);","[VB] Function IOleObject.SetMoniker(ByVal dwWhichMoniker As Integer, ByVal pmk As Object) As Integer Implements UnsafeNativeMethods.IOleObject.SetMoniker","[JScript] function UnsafeNativeMethods.IOleObject.SetMoniker(dwWhichMoniker: int, pmk: Object): int;","ggggggggggggggggg) UnsafeNativeMethods.IOleObject.Unadvise","[C#] int UnsafeNativeMethods.IOieObject.Unadvise(int dwConnection);","[C++] int UnsafeNativeMethods::IOleObject::Unadvise(int dwConnection);","[VB] Function IOleObject.Unadvise(ByVal dwConnection As Integer) As Integer Implements UnsafeNativeMethods.IOleObject.Unadvise","[JScript] function UnsafeNativeMethods.IOleObject.Unadvise(dwConnection: int): int;","hhhhhhhhhhhhhhhhh) UnsafeNativeMethods.IOleWindow.ContextSensitiveHelp","[C#] void UnsafeNativeMethods.IOleWindow.ContextSensitiveHelp(int fEnterMode);","[C++] void UnsafeNativeMethods::IOleWindow::ContextSensitiveHelp(int fEnterMode);","[VB] Sub IOleWindow.ContextSensitiveHelp(ByVal fEnterMode As Integer) Implements UnsafeNativeMethods.IOleWindow.ContextSensitiveHelp","[JScript] function UnsafeNativeMethods.IOleWindow.ContextSensitiveHelp(fEnterMode: int);","iiiiiiiiiiiiiiiii) UnsafeNativeMethods.IOleWindow.Get Window","[C#] int UnsafeNativeMethods.OleWindow.GetWindow(out IntPtr hwnd);","[C++] int UnsafeNativeMethods::IOleWindow::GetWindow(IntPtr* hwnd);","[VB] Function IOleWindow.GetWindow(ByRef hwnd As IntPtr) As Integer Implements UnsafeNativeMethods.IOleWindow.GetWindow","[JScript] function UnsafeNativeMethods.IOleWindow.GetWindow(hwnd: IntPtr): int;","jjjjjjjjjjjjjjjjj) UnsafeNativeMethods.IPersist.GetClassID","[C#] void UnsafeNativeMethods.IPersist.GetClassID(out Guid pClassID);","[C++] void UnsafeNativeMethods::IPersist::GetClassID(Guid* pClassID);","[VB] Sub IPersist.GetClassID(ByRef pClassID As Guid) Implements UnsafeNativeMethods.IPersist.GetClassID","[JScript] function UnsafeNativeMethods.IPersist.GetClassID(pClassID: Guid);","kkkkkkkkkkkkkkkkk) UnsafeNativeMethods.IPersistPropertyBag.GetClassID","[C#] void UnsafeNativeMethods.IPersistPropertyBag.GetClassID(out Guid pClassID);","[C++] void UnsafeNativeMethods::IPersistPropertyBag::GetClassID(Guid* pClassID);","[VB] Sub IPersistPropertyBag.GetClassID(ByRef pClassID As Guid) Implements UnsafeNativeMethods.IPersistPropertyBag.GetClassID","[JScript] function UnsafeNativeMethods.IPersistPropertyBag.GetClassID(pClassID: Guid);","llllllllllllllll) UnsafeNativeMethods.IPersistPropertyBag.InitNew","[C#] void UnsafeNativeMethods.IPersistPropertyBag.InitNew( );","[C++] void UnsafeNativeMethods::IPersistPropertyBag::InitNew( );","[VB] Sub IPersistPropertyBag.InitNew( ) Implements UnsafeNativeMethods.IPersistPropertyBag.InitNew","[JScript] function UnsafeNativeMethods.IPersistPropertyBag.InitNew( );","mmmmmmmmmmmmmmmmm) UnsafeNativeMethods.IPersistPropertyBag.Load","[C#] void UnsafeNativeMethods.IPersistPropertyBag.Load(UnsafeNativeMethods.IProperty Bag pPropBag, UnsafeNativeMethods.IErrorLog pErrorLog);","[C++] void UnsafeNativeMethods::IPersistPropertyBag::Load(UnsafeNativeMethods.IPropert yBag* pPropBag, UnsafeNativeMethods.IErrorLog* pErrorLog);","[VB] Sub IPersistPropertyBag.Load(ByVal pPropBag As UnsafeNativeMethods.IPropertyBag, ByVal pErrorLog As UnsafeNativeMethods.IErrorLog) Implements UnsafeNativeMethods.IPersistPropertyBag.Load","[JScript] function UnsafeNativeMethods.IPersistPropertyBag.Load(pPropBag: UnsafeNativeMethods.IPropertyBag, pErrorLog: UnsafeNativeMethods.lErrorLog);","nnnnnnnnnnnnnnnnn) UnsafeNativeMethods.IPersistPropertyBag.Save","[C#] void UnsafeNativeMethods.IPersistPropertyBag.Save(UnsafeNativeMethods.IProperty Bag pPropBag, bool fClearDirty, bool fSaveAllProperties);","[C++] void UnsafeNativeMethods::IPersistPropertyBag::Save(UnsafeNativeMethods.IPropert yBag* pPropBag, bool fClearDirty, bool fSaveAllProperties);","[VB] Sub IPersistPropertyBag.Save(ByVal pPropBag As UnsafeNativeMethods.IPropertyBag, ByVal fClearDirty As Boolean, ByVal fSaveAllProperties As Boolean) Implements UnsafeNativeMethods.IPersistPropertyBag. Save","[JScript] function UnsafeNativeMethods.IPersistPropertyBag.Save(pPropBag: UnsafeNativeMethods.IPropertyBag, fClearDirty: Boolean, fSaveAllProperties: Boolean);","ooooooooooooooooo) UnsafeNativeMethods.IPersistStorage.GetClassID","[C#] void UnsafeNativeMethods.IPersistStorage.GetClassID(out Guid pClassID);","[C++] void UnsafeNativeMethods::IPersistStorage::GetClassID(Guid* pClassID);","[VB] Sub IPersistStorage.GetClassID(ByRef pClassID As Guid) Implements UnsafeNativeMethods.IPersistStorage.GetClassID","[JScript] function UnsafeNativeMethods.IPersistStorage.GetClassID(pClassID: Guid);","ppppppppppppppppp) UnsafeNativeMethods.IPersistStorage.HandsOfJStorage","[C#] void UnsafeNativeMethods.IPersistStorage.HandsOffStorage( );","[C++] void UnsafeNativeMethods::IPersistStorage::HandsOffStorage( );","[VB] Sub IPersistStorage.HandsOffStorage( ) Implements UnsafeNativeMethods.IPersistStorage.HandsOffStorage","[JScript] function UnsafeNativeMethods.IPersistStorage.HandsOffStorage( );","qqqqqqqqqqqqqqqqq) UnsafeNativeMethods.IPersistStorage.InitNew","[C#] void UnsafeNativeMethods.IPersistStorage.InitNew(UnsafeNativeMethods.IStorage pstg);","[C++] void UnsafeNativeMethods::IPersistStorage::InitNew(UnsafeNativeMethods.IStorage* pstg);","[VB] Sub IPersistStorage.InitNew(ByVal pstg As UnsafeNativeMethods.IStorage) Implements UnsafeNativeMethods.IPersistStorage.InitNew","[JScript] function UnsafeNativeMethods.IPersistStorage.InitNew(pstg: UnsafeNativeMethods.IStorage);","rrrrrrrrrrrrrrrrr) UnsafeNativeMethods.IPersistStorage.IsDirty","[C#] int UnsafeNativeMethods.IPersistStorage.IsDirty( );","[C++] int UnsafeNativeMethods::IPersistStorage::IsDirty( );","[VB] Function IPersistStorage.IsDirtyo As Integer Implements UnsafeNativeMethods.IPersistStorage.IsDirty","[JScript] function UnsafeNativeMethods.IPersistStorage.IsDirty( ): int;","sssssssssssssssss) UnsafeNativeMethods.IPersistStorage.Load","[C#] int UnsafeNativeMethods.IPersistStorage.Load(UnsafeNativeMethods.IStorage pstg);","[C++] int UnsafeNativeMethods::IPersistStorage::Load(UnsafeNativeMethods.IStorage* pstg);","[VB] Function IPersistStorage.Load(ByVal pstg As UnsafeNativeMethods.IStorage) As Integer Implements UnsafeNativeMethods.IPersistStorage.Load","[JScript] function UnsafeNativeMethods.IPersistStorage.Load(pstg: UnsafeNativeMethods.IStorage): int;","ttttttttttttttttt) UnsafeNativeMethods.IPersiststorage.Save","[C#] void UnsafeNativeMethods.IPersistStorage.Save(UnsafeNativeMethods.IStorage pstg, int fSameAsLoad);","[C++] void UnsafeNativeMethods::IPersistStorage:: Save(UnsafeNativeMethods.IStorage* pstg, int fSameAsLoad);","[VB] Sub IPersistStorage.Save(ByVal pstg As UnsafeNativeMethods.IStorage, ByVal fSameAsLoad As Integer) Implements UnsafeNativeMethods.IPersistStorage.Save","[JScript] function UnsafeNativeMethods.IPersistStorage.Save(pstg: UnsafeNativeMethods.IStorage, fSameAsLoad: int);","uuuuuuuuuuuuuuuuu) UnsafeNativeMethods.IPersistStorage.SaveCompleted","[C#] void UnsafeNativeMethods.IPersistStorage.SaveCompleted(UnsafeNativeMethods.IStorage pStgNew);","[C++] void UnsafeNativeMethods::IPersistStorage:: SaveCompleted(UnsafeNativeMethods.IStorage* pStgNew);","[VB] Sub IPersistStorage.SaveCompleted(ByVal pStgNew As UnsafeNativeMethods.IStorage) Implements UnsafeNativeMethods.IPersistStorage.SaveCompleted","[JScript] function UnsafeNativeMethods.IPersistStorage.SaveCompleted(pStgNew: UnsafeNativeMethods.IStorage);","vvvvvvvvvvvvvvvvv) UnsafeNativeMethods.IPersistStreamInit.GetClassID","[C#] void UnsafeNativeMethods.IPersistStreamInit.GetClassID(out Guid pClassID);","[C++] void UnsafeNativeMethods::IPersistStreamInit::GetClassID(Guid* pClassID);","[VB] Sub IPersistStreamInit.GetClassID(ByRef pClassID As Guid) Implements UnsafeNativeMethods.IPersistStreamInit.GetClassID","[JScript] function UnsafeNativeMethods.IPersistStreamInit.GetClassID(pClassID: Guid);","wwwwwwwwwwwwwwwww) UnsafeNativeMethods.IPersistStreamInit.GetSizeMax","[C#] void UnsafeNativeMethods.IPersistStreamInit.GetSizeMax(long pcbSize);","[C++] void UnsafeNativeMethods::IPersistStreamInit::GetSizeMax(_int64 pcbSize);","[VB] Sub IPersistStreamInit.GetSizeMax(ByVal pcbSize As Long) Implements UnsafeNativeMethods.IPersistStreamInit.GetSizeMax","[JScript] function UnsafeNativeMethods.IPersistStreamInit.GetSizeMax(pcbSize long);","xxxxxxxxxxxxxxxxx) UnsafeNativeMethods.IPersistStreamInit.InitNew","[C#] void UnsafeNativeMethods.IPersistStreamInit.InitNew( );","[C++] void UnsafeNativeMethods::IPersistStreamInit::InitNew( );","[VB] Sub IPersistStreamInit.InitNew( ) Implements UnsafeNativeMethods.IPersistStreamInit.InitNew [JScript] function UnsafeNativeMethods.IPersistStreamInit.InitNew( );","yyyyyyyyyyyyyyyyy) UnsafeNativeMethods.IPersistStreamInit.IsDirty","[C#] int UnsafeNativeMethods.IPersistStreamInit.IsDirty( );","[C++] int UnsafeNativeMethods::IPersistStreamInit::IsDirty( );","[VB] Function IPersistStreamInit.IsDirty( ) As Integer Implements UnsafeNativeMethods.IPersistStreamInit.IsDirty","[JScript] function UnsafeNativeMethods.IPersistStreamInit.IsDirty( ): int;","zzzzzzzzzzzzzzzzz) UnsafeNativeMethods.IPersistStreamInit.Load","[C#] void UnsafeNativeMethods.IPersistStreamInit.Load(UnsafeNativeMethods.IStream pstm);","[C++] void UnsafeNativeMethods::IPersistStreamInit::Load(UnsafeNativeMethods.IStream* pstm);","[VB] Sub IPersistStreamInit.Load(ByVal pstm As UnsafeNativeMethods.IStream) Implements UnsafeNativeMethods.IPersistStreamInit.Load","[JScript] function UnsafeNativeMethods.IPersistStreamInit.Load(pstm: UnsafeNativeMethods.IStream);","aaaaaaaaaaaaaaaaaa) UnsafeNativeMethods.IPersistStreamInit.Save","[C#] void UnsafeNativeMethods.IPersistStreamInit.Save(UnsafeNativeMethods.IStream pstm, bool fClearDirty);","[C++] void UnsafeNativeMethods::IPersistStreamInit::Save(UnsafeNativeMethods.IStream* pstm, bool fClearDirty);","[VB] Sub IPersistStreamInit.Save(ByVal pstm As UnsafeNativeMethods.IStream, ByVal fClearDirty As Boolean) Implements UnsafeNativeMethods.IPersistStreamInit.Save","[JScript] function UnsafeNativeMethods.IPersistStreamInit.Save(pstm: UnsafeNativeMethods.IStream, fClearDirty: Boolean);","bbbbbbbbbbbbbbbbbb) UnsafeNativeMethods.IQuickActivate.GetContentExtent","[C#] void UnsafeNativeMethods.IQuickActivate.GetContentExtent(NativeMethods.tagSIZE L pSizel);","[C++] void UnsafeNativeMethods::IQuickActivate::GetContentExtent(NativeMethods.tagSIZ EL* pSizel);","[VB] Sub IQuickActivate.GetContentExtent(ByVal pSizel As NativeMethods.tagSIZEL) Implements UnsafeNativeMethods.IQuickActivate.GetContentExtent","[JScript] function UnsafeNativeMethods.IQuickActivate.GetContentExtent(pSizel: NativeMethods.tagSIZEL);","cccccccccccccccccc) UnsafeNativeMethods.IQuickActivate.QuickActivate","[C#] void UnsafeNativeMethods.IQuickActivate.QuickActivate(UnsafeNativeMethods.tagQ ACONTAINER pQaContainer, UnsafeNativeMethods.tagQACONTROL pQaControl);","[C++] void UnsafeNativeMethods::IQuickActivate::QuickActivate(UnsafeNativeMethods.tag QACONTAINER* pQaContainer, UnsafeNativeMethods.tagQACONTROL* pQaControl);","[VB] Sub IQuickActivate.QuickActivate(ByVal pQaContainer As UnsafeNativeMethods.tagQACONTAINER, ByVal pQaControl As UnsafeNativeMethods.tagQACONTROL) Implements UnsafeNativeMethods.IQuickActivate.QuickActivate","[JScript] function UnsafeNativeMethods.IQuickActivate.QuickActivate(pQaContainer: UnsafeNativeMethods.tagQACONTAINER, pQaControl: UnsafeNativeMethods.tagQACONTROL);","dddddddddddddddddd) UnsafeNativeMethods.IQuickActivate.SetContentExtent","[C#] void UnsafeNativeMethods.IQuickActivate.SetContentExtent(NativeMethods.tagSIZE L pSizel);","[C++] void UnsafeNativeMethods::IQuickActivate::SetContentExtent(NativeMethods.tagSIZ EL* pSizel);","[VB] Sub IQuickActivate.SetContentExtent(ByVal pSizel As NativeMethods.tagSIZEL) Implements UnsafeNativeMethods.IQuickActivate.SetContentExtent","[JScript] function UnsafeNativeMethods.IQuickActivate.SetContentExtent(pSizel: NativeMethods.tagSIZEL);","eeeeeeeeeeeeeeeeee) UnsafeNativeMethods.IViewObject.Draw","[C#] void UnsafeNativeMethods.IViewObject.Draw(int dwDrawAspect, int lindex, IntPtr pvAspect, NativeMethods.tagDVTARGETDEVICE ptd, IntPtr hdcTargetDev, IntPtr hdcDraw, NativeMethods.COMRECT lprcBounds, NativeMethods.COMRECT lprcWBounds, IntPtr pfnContinue, int dwContinue);\n\n[C++] void UnsafeNativeMethods::IViewObject::Draw(int dwDrawAspect, int lindex, IntPtr pvAspect, NativeMethods.tagDVTARGETDEVICE* ptd, IntPtr hdcTargetDev, IntPtr hdcDraw, NativeMethods.COMRECT* lprcBounds, NativeMethods.COMRECT* lprcWBounds, IntPtr pfnContinue, int dwContinue);\n\n[VB] Sub IViewObject.Draw(ByVal dwDrawAspect As Integer, ByVal lindex As Integer, ByVal pvAspect As IntPtr, ByVal ptd As NativeMethods.tagDVTARGETDEVICE, ByVal hdcTargetDev As IntPtr, ByVal hdcDraw As IntPtr, ByVal lprcBounds As NativeMethods.COMRECT, ByVal lprcWBounds As NativeMethods.COMRECT, ByVal pfnContinue As IntPtr, ByVal dwContinue As Integer) Implements UnsafeNativeMethods.IViewObject.Draw\n\n[JScript] function UnsafeNativeMethods.IViewObject.Draw(dwDrawAspect: int, lindex: int, pvAspect: IntPtr, ptd: NativeMethods.tagDVTARGETDEVICE, hdcTargetDev: IntPtr, hdcDraw: IntPtr, lprcBounds NativeMethods.COMRECT, lpreWBounds: NativeMethods.COMRECT, pfnContinue: IntPtr, dwContinue: int);\n","ffffffffffffffffff) UnsafeNativeMethods.IViewObject.Freeze","[C#] int UnsafeNativeMethods.IViewObject.Freeze(int dwDrawAspect, int lindex, IntPtr pvAspect, IntPtr pdwFreeze);","[C++] int UnsafeNativeMethods::IViewObject::Freeze(int dwDrawAspect, int lindex, IntPtr pvAspect, IntPtr pdwFreeze);","[VB] Function IViewObject.Freeze(ByVal dwDrawAspect As Integer, ByVal lindex As Integer, ByVal pvAspect As IntPtr, ByVal pdwFreeze As IntPtr) As Integer Implements UnsafeNativeMethods.IViewObject.Freeze","[JScript] function UnsafeNativeMethods.IViewObject.Freeze(dwDrawAspect: int, lindex: int, pvAspect: IntPtr, pdwFreeze: IntPtr): int;","gggggggggggggggggg) UnsafeNativeMethods.IViewObject.GetAdvise","[C#] void UnsafeNativeMethods.IViewObject.GetAdvise(int[ ] paspects, int[ ] padvf, UnsafeNativeMethods.IAdviseSink[ ] pAdvSink);","[C++] void UnsafeNativeMethods::IViewObject::GetAdvise(int paspects _gc[ ], int padvf _gc[ ], UnsafeNativeMethods.IAdviseSink* pAdvSink[ ]);","[VB] Sub IViewObject.GetAdvise(ByVal paspects( ) As Integer, ByVal padvf( ) As Integer, ByVal pAdvSink( ) As UnsafeNativeMethods.IAdviseSink) Implements UnsafeNativeMethods.IViewObject.GetAdvise","[JScript] function UnsafeNativeMethods.IViewObject.GetAdvise(paspects: int[ ], padvf: int[ ], pAdvSink: UnsafeNativeMethods.IAdviseSink[ ]);","hhhhhhhhhhhhhhhhhh) UnsafeNativeMethods.IViewObject.GetColorSet","[C#] int UnsafeNativeMethods.IViewObject.GetColorSet(int dwDrawAspect, int lindex, IntPtr pvAspect, NativeMethods.tagDVTARGETDEVICE ptd, IntPtr hicTargetDev, NativeMethods.tagLOGPALETTE ppColorSet);","[C++] int UnsafeNativeMethods::IViewObject::GetColorSet(int dwDrawAspect, int lindex, IntPtr pvAspect, NativeMethods.tagDVTARGETDEVICE* ptd, IntPtr hicTargetDev, NativeMethods.tagLOGPALETTE* ppColorSet);","[VB] Function IViewObject.GetColorSet(ByVal dwDrawAspect As Integer, ByVal lindex As Integer, ByVal pvAspect As IntPtr, ByVal ptd As NativeMethods.tagDVTARGETDEVICE, ByVal hicTargetDev As IntPtr, ByVal ppColorSet As NativeMethods.tagLOGPALETTE) As Integer Implements UnsafeNativeMethods.IViewObject.GetColorSet\n\n[JScript] function UnsafeNativeMethods.IViewObject.GetColorSet(dwDrawAspect: int, lindex: int, pvAspect: IntPtr, ptd: NativeMethods.tagDVTARGETDEVICE, hicTargetDev: IntPtr, ppColorSet: NativeMethods.tagLOGPALETTE): int;\n\niiiiiiiiiiiiiiiiii) UnsafeNativeMethods.IViewObject.SetAdvise\n\n[C#] void UnsafeNativeMethods.IViewObject.SetAdvise(int aspects, int advf, UnsafeNativeMethods.IAdviseSink pAdvSink);\n\n[C++] void UnsafeNativeMethods::IViewObject::SetAdvise(int aspects, int advf, UnsafeNativeMethods.IAdviseSink* pAdvSink);\n\n[VB] Sub IViewObject.SetAdvise(ByVal aspects As Integer, ByVal advf As Integer, ByVal pAdvSink As UnsafeNativeMethods.IAdviseSink) Implements UnsafeNativeMethods.IViewObject.SetAdvise\n\n[JScript] function UnsafeNativeMethods.IViewObject.SetAdvise(aspects: int, advf: int, pAdvSink: UnsafeNativeMethods.IAdviseSink);\n","jjjjjjjjjjjjjjjjjj) UnsafeNativeMethods.IViewObject.Unfreeze","[C#] int UnsafeNativeMethods.IViewObject.Unfreeze(int dwFreeze);","[C++] int UnsafeNativeMethods::IViewObject::Unfreeze(int dwFreeze);","[VB] Function IViewObject.Unfreeze(ByVal dwFreeze As Integer) As Integer Implements UnsafeNativeMethods.IViewObject.Unfreeze","[JScript] function UnsafeNativeMethods.IViewObject.Unfreeze(dwFreeze: int): int;","kkkkkkkkkkkkkkkkkk) UnsafeNativeMethods.IViewObject2.Draw","[C#] void UnsafeNativeMethods.IViewObject2.Draw(int dwDrawAspect, int lindex, IntPtr pvAspect, NativeMethods.tagDVTARGETDEVICE ptd, IntPtr hdcTargetDev, IntPtr hdcDraw, NativeMethods.COMRECT lprcBounds, NativeMethods.COMRECT lprcWBounds, IntPtr pfnContinue, int dwContinue);\n\n[C++] void UnsafeNativeMethods::IViewObject2::Draw(int dwDrawAspect, int lindex, IntPtr pvAspect, NativeMethods.tagDVTARGETDEVICE* ptd, IntPtr hdcTargetDev, IntPtr hdcDraw, NativeMethods.COMRECT* lprcBounds, NativeMethods.COMRECT* lprcWBounds, IntPtr pfnContinue, int dwContinue);\n\n[VB] Sub IViewObject2.Draw(ByVal dwDrawAspect As Integer, ByVal lindex As Integer, ByVal pvAspect As IntPtr, ByVal ptd As NativeMethods.tagDVTARGETDEVICE, ByVal hdcTargetDev As IntPtr, ByVal hdcDraw As IntPtr, ByVal lprcBounds As NativeMethods.COMRECT, ByVal lprcWBounds As NativeMethods.COMRECT, ByVal pfnContinue As IntPtr, ByVal dwContinue As Integer) Implements UnsafeNativeMethods.IViewObject2.Draw [JScript] function UnsafeNativeMethods.IViewObject2.Draw(dwDrawAspect int, lindex: int, pvAspect: IntPtr, ptd: NativeMethods.tagDVTARGETDEVICE, hdcTargetDev: IntPtr, hdcDraw: IntPtr, lprcBounds NativeMethods.COMRECT, lprcWBounds: NativeMethods.COMRECT, pfnContinue: IntPtr, dwContinue: int);\n","lllllllllllllllll) UnsafeNativeMethods.IViewObject2.Freeze","[C#] int UnsafeNativeMethods.IViewObject2.Freeze(int dwDrawAspect, int lindex, IntPtr pvAspect, IntPtr pdwFreeze);","[C++] int UnsafeNativeMethods::IViewObject2::Freeze(int dwDrawAspect, int lindex, IntPtr pvAspect, IntPtr pdwFreeze);","[VB] Function IViewObject2.Freeze(ByVal dwDrawAspect As Integer, ByVal lindex As Integer, ByVal pvAspect As IntPtr, ByVal pdwFreeze As IntPtr) As Integer Implements UnsafeNativeMethods.IViewObject2.Freeze","[JScript] function UnsafeNativeMethods.IViewObject2.Freeze(dwDrawAspect: int, lindex: int, pvAspect: IntPtr, pdwFreeze: IntPtr): int;","mmmmmmmmmmmmmmmmmm) UnsafeNativeMethods.IViewObject2.GetAdvise","[C#] void UnsafeNativeMethods.IViewObject2.GetAdvise(int[ ] paspects, int[ ] padvf, UnsafeNativeMethods.IAdviseSink[ ] pAdvSink);","[C++] void UnsafeNativeMethods::IViewObject2::GetAdvise(int paspects _gc[ ], int padvf _gc[ ], UnsafeNativeMethods.IAdviseSink* pAdvSink[ ]);","[VB] Sub IViewObject2.GetAdvise(ByVal paspects( ) As Integer, ByVal padvf( ) As Integer, ByVal pAdvSink( ) As UnsafeNativeMethods.lAdviseSink) Implements UnsafeNativeMethods.IViewObject2.GetAdvise","[JScript] function UnsafeNativeMethods.IViewObject2.GetAdvise(paspects: int[ ], padvf: int[ ], pAdvSink: UnsafeNativeMethods.IAdviseSink[ ]);","nnnnnnnnnnnnnnnnnn) UnsafeNativeMethods.IViewObject2.GetColorSet","[C#] int UnsafeNativeMethods.IViewObject2.GetColorSet(int dwDrawAspect, int lindex, IntPtr pvAspect, NativeMethods.tagDVTARGETDEVICE ptd, IntPtr hicTargetDev, NativeMethods.tagLOGPALETTE ppColorSet);","[C++] int UnsafeNativeMethods::IViewObject2::GetColorSet(int dwDrawAspect, int lindex, IntPtr pvAspect, NativeMethods.tagDVTARGETDEVICE* ptd, IntPtr hicTargetDev, NativeMethods.tagLOGPALETTE* ppColorSet);","[VB] Function IViewObject2.GetColorSet(ByVal dwDrawAspect As Integer, ByVal lindex As Integer, ByVal pvAspect As IntPtr, ByVal ptd As NativeMethods.tagDVTARGETDEVICE, ByVal hicTargetDev As IntPtr, ByVal ppColorSet As NativeMethods.tagLOGPALETTE) As Integer Implements UnsafeNativeMethods.IViewObject2.GetColorSet\n\n[JScript] function UnsafeNativeMethods.IViewObject2.GetColorSet(dwDrawAspect: int, lindex: int, pvAspect: IntPtr, ptd: NativeMethods.tagDVTARGETDEVICE, hicTargetDev: IntPtr, ppColorSet: NativeMethods.tagLOGPALETTE): int;\n","oooooooooooooooooo) UnsafeNativeMethods.IViewObject2.GetExtent","[C#] void UnsafeNativeMethods.IViewObject2.GetExtent(int dwDrawAspect, int lindex, NativeMethods.tagDVTARGETDEVICE ptd, NativeMethods.tagSIZEL lpsizel);","[C++] void UnsafeNativeMethods::IViewObject2::GetExtent(int dwDrawAspect, int lindex, NativeMethods.tagDVTARGETDEVICE* ptd, NativeMethods.tagSIZEL* lpsizel);","[VB] Sub IViewObject2.GetExtent(ByVal dwDrawAspect As Integer, ByVal lindex As Integer, ByVal ptd As NativeMethods.tagDVTARGETDEVICE, ByVal lpsizel As NativeMethods.tagSIZEL) Implements UnsafeNativeMethods.IViewObject2.GetExtent","[JScript] function UnsafeNativeMethods.IViewObject2.GetExtent(dwDrawAspect: int, lindex: int, ptd: NativeMethods.tagDVTARGETDEVICE, lpsizel: NativeMethods.tagSIZEL);","pppppppppppppppppp) UnsafeNativeMethods.IViewObject2.SetAdvise","[C#] void UnsafeNativeMethods.IViewObject2.SetAdvise(int aspects, int advf, UnsafeNativeMethods.lAdviseSink pAdvSink);","[C++] void UnsafeNativeMethods::IViewObject2::SetAdvise(int aspects, int advf, UnsafeNativeMethods.IAdviseSink* pAdvSink);","[VB] Sub IViewObject2.SetAdvise(ByVal aspects As Integer, ByVal advf As Integer, ByVal pAdvSink As UnsafeNativeMethods.IAdviseSink) Implements UnsafeNativeMethods.IViewObject2.SetAdvise","[JScript] function UnsafeNativeMethods.IViewObject2.SetAdvise(aspects: int, advf: int, pAdvSink: UnsafeNativeMethods.lAdviseSink);","qqqqqqqqqqqqqqqqqq) UnsafeNativeMethods.IViewObject2. Unfreeze","[C#] t UnsafeNativeMethods.IViewObject2.Unfreeze(int dwFreeze);","[C++] int UnsafeNativeMethods::IViewObject2::Unfreeze(int dwFreeze);","[VB] Function IViewObject2.Unfreeze(ByVal dwfreeze As Integer) As Integer Implements UnsafeNativeMethods.IViewObject2.Unfreeze","[JScript] function UnsafeNativeMethods.IViewObject2.Unfreeze(dwFreeze int): int;","rrrrrrrrrrrrrrrrrr) Update","[C#] public void Update( );","[C++] public: void Update( );","[VB] Public Sub Update( )","[JScript] public function Update( );","Description","Causes the control to redraw the invalidated regions with its client area.","ssssssssssssssssss) UpdateBounds","[C#] protected void UpdateBounds( );","[C++] protected: void UpdateBounds( );","[VB] Protected Sub UpdateBounds( )","[JScript] protected function UpdateBounds( ); Updates the bounds of the control.","Description","Updates the bounds of the control with the current size and location.","If the new System.Windows.Forms.Control.Size of the control is different from the previous System.Drawing.Size, the System.Windows.Forms.Control.SizeChanged event is raised. Likewise, if the System.Windows.Forms.Control.Location of the control changes, the System.Windows.Forms.Control.LocationChanged event is raised.","tttttttttttttttttt) UpdateBounds","[C#] protected void UpdateBounds(int x, int y, int width, int height);","[C++] protected: void UpdateBounds(int x, int y, int width, int height);","[VB] Protected Sub UpdateBounds(ByVal x As Integer, ByVal y As Integer, ByVal width As Integer, ByVal height As Integer)","[JScript] protected function UpdateBounds(x: int, y: int, width: int, height: int);","Description","Updates the bounds of the control with the specified size and location.","If the new System.Windows.Forms.Control.Size of the control if different from the previous System.Drawing.Size, the System.Windows.Forms.Control.SizeChanged event is raised. Likewise, is the System.Windows.Forms.Control.Location of the control changes, the System.Windows.Forms.Control.LocationChanged event is raised. The System.Drawing.Point.X coordinate of the control. The System.Drawing.Point.Y coordinate of the control. The System.Drawing.Size.Width of the control. The System.Drawing.Size.Height of the control.","uuuuuuuuuuuuuuuuuu) UpdateBounds","[C#] protected void UpdateBounds(int x, int y, int width, int height, int clientWidth, int clientHeight);","[C++] protected: void UpdateBounds(int x, int y, int width, int height, int clientWidth, int clientHeight);","[VB] Protected Sub UpdateBounds(ByVal x As Integer, ByVal y As Integer, ByVal width As Integer, ByVal height As Integer, ByVal clientWidth As Integer, ByVal clientHeight As Integer)","[JScript] protected function UpdateBounds(x: int, y: int, width: int, height: int, clientWidth int, clientHeight: int);","Description","Updates the bounds of the control with the specified size, location, and client size.","If the new System.Windows.Forms.Control.Size of the control is different from the previous System.Drawing.Size, the System.Windows.Forms.Control.SizeChanged event is raised. Likewise, if the System.Windows.Forms.Control.Location of the control changes, the System.Windows.Forms.Control.LocationChanged event is raised. The System.Drawing.Point.X coordinate of the control. The System.Drawing.Point.Y coordinate of the control. The System.Drawing.Size.Width of the control. The System.Drawing.Size.Height of the control. The client System.Drawing.Size.Width of the control. The client System.Drawing.Size.Height of the control.","vvvvvvvvvvvvvvvvvv) UpdateStyles","[C#] protected void UpdateStyles( );","[C++] protected: void UpdateStyles( );","[VB] Protected Sub UpdateStyles( )","[JScript] protected function UpdateStyles( );","Description","Forces the assigned styles to be reapplied to the control.","This method calls the System.Windows.Forms.Control.CreateParams method to get the styles to apply. The styles assigned to the System.Windows.Forms.CreateParams.Style and System.Windows.Forms.CreateParams.ExStyle properties of the System.Windows.Forms.CreateParams object assigned to the control's System.Windows.Forms.Control.CreateParams property are reapplied. The control is repainted to reflect the style changes if necessary.","wwwwwwwwwwwwwwwwww) UpdateZOrder","[C#] protected void UpdateZOrder( );","[C++] protected: void UpdateZOrder( );","[VB] Protected Sub UpdateZOrder( )","[JScript] protected function UpdateZOrder( );","Description","Updates control in its parent's z-order.","The System.Windows.Forms.Control.UpdateZOrder method updates the position of the control in its parent control's z-order. For example, if this control is a newly created control that was added to a System.Windows.Forms.Control.ControlCollection, the z-order is updated with the new control added to the bottom.","xxxxxxxxxxxxxxxxxx) WndProc","[C#] protected virtual void WndProc(ref Message m);","[C++] protected: virtual void WndProc(Message* m);","[VB] Overridable Protected Sub WndProc(ByRef m As Message)","[JScript] protected function WndProc(m: Message);","Description","Processes Windows messages.","All messages are sent to the System.Windows.Forms.Control.WndProc(System.Windows.Forms. Message@) method after getting filtered through the System.Windows.Forms.Control.PreProcessMessage(System.Windows.Forms.Message@) method. The Windows System.Windows.Forms.Message to process.","Control.ControlAccessibleObject class (System.Windows.Forms)","a) WndProc","Description","Provides information about a control so it can be inspected by an accessibility application.","Windows Forms has accessibility support built in, and provides information about your application which allows it to work with accessibility client applications. Examples of accessibility client applications are: screen enlarger and reviewer utilities, voice input utilities, on-screen keyboards, alternative input devices, and keyboard enhancement utilities. There are instances when you will want to provide additional information to accessibility client applications. There are two ways of providing this additional information. To provide limited accessibility information for existing controls, set the System.Windows.Forms.Control.AccessibleName, System.Windows.Forms.Control.AccessibleDescription, System.Windows.Forms.Control.AccessibleDefaultActionDescription, and System.Windows.Forms.Control.AccessibleRole property values of the control, which will be reported to accessibility client applications. Alternatively, if you require more accessibility information to be included with your control, you can write your own class deriving from the System.Windows.Forms.AccessibleObject or System.Windows.Forms.Control.ControlAccessibleObject classes. For example, if you are writing your own control that is not derived from the common controls or you require such operations as hit testing within your control, you should create a System.Windows.Forms.Control.ControlAccessibleObject for your control. You can create a System.Windows.Forms.Control.ControlAccessibleObject for your control by calling the System.Windows.Forms.Control.CreateAccessibilityInstance method.","b) Control.ControlAccessibleObject","Example Syntax:","c) WndProc","[C#] public Control.ControlAccessibleObject(Control ownerControl);","[C++] public: ControlAccessibleObject(Control* ownerControl);","[VB] Public Sub New(ByVal ownerControl As Control)","[JScript] public function Control.ControlAccessibleObject(ownerControl: Control);","Description","Initializes a new instance of the System.Windows.Forms.Control.ControlAccessibleObject class. The System.Windows.Forms.Control that owns the System.Windows.Forms.Control.ControlAccessibleObject.","d) Bounds","e) DefaultAction","f) WndProc","Description","Gets the default action of the System.Windows.Forms.Control.ControlAccessibleObject.","g) Description","h) WndProc","[C#] public override string Description {get;}","[C++] public: _property virtual String* get_Description( );","[VB] Overrides Public ReadOnly Property Description As String","[JScript] public function get Description( ): String;","Description","Gets the description of the System.Windows.Forms.Control.ControlAccessibleObject.","i) Handle","j) WndProc","[C#] public IntPtr Handle {get; set;}","[C++] public: _property IntPtr get_Handle( ); public: _property void set_Handle(IntPtr);","[VB] Public Property Handle As IntPtr","[JScript] public function get Handle( ): IntPtr; public function set Handle(IntPtr);","Description","Gets or sets the handle of the System.Windows.Forms.Control.ControlAccessibleObject.","The value of the System.Windows.Forms.Control.ControlAccessibleObject.Handle property for the System.Windows.Forms.Control.ControlAccessibleObject is equal to the System.Windows.Forms.Control.Handle property of the System.Windows.Forms.Control it is associated with.","k) Help","l) WndProc","[C#] public override string Help {get;}","[C++] public: _property virtual String* get_Help( );","[VB] Overrides Public ReadOnly Property Help As String","[JScript] public function get Help( ): String;","Description","Gets the description of what the object does or how the object is used.","m) KeyboardShortcut","n) WndProc","[C#] public override string KeyboardShortcut {get;}","[C++] public: _property virtual String* get_KeyboardShortcut( );","[VB] Overrides Public ReadOnly Property KeyboardShortcut As String","[JScript] public function get KeyboardShortcut( ): String;","Description","Gets the object shortcut key or access key for an accessible object. All objects that have a shortcut key or access key should support this property.","o) Name","p) WndProc","[C#] public override string Name {get; set;}","[C++] public: _property virtual String* get_Name( ); public: _property virtual void set_Name(String*);","[VB] Overrides Public Property Name As String","[JScript] public function get Name( ): String; public function set Name(String);","Description","Gets or sets the accessible object name.","q) Owner","r) WndProc","[C#] public Control Owner {get;}","[C++] public: _property Control* get_Owner( );","[VB] Public ReadOnly Property Owner As Control","[JScript] public function get Owner( ): Control;","Description","Gets the owner of the System.Windows.Forms.Control.ControlAccessibleObject.","s) Parent","t) Role","u) WndProc","Description","Gets the role of this accessible object.","v) State","w) Value","x) GetHelpTopic","[C#] public override int GetHelpTopic(out string fileName);","[C++] public: int GetHelpTopic(String** fileName);","[VB] Overrides Public Function GetHelpTopic(ByRef fileName As String) As Integer","[JScript] public override function GetHelpTopic(fileName: String): int;","Description","Gets an identifier for a Help topic and the path to the Help file associated with this accessible object.","Return Value: An identifier for a Help topic, or \u22121 if there is no Help topic. On return, the fileName parameter will contain the path to the Help file associated with this accessible object, or null if there is no IAccessible interface specified. Pass the identifier to the WinHelp file specified by the fileName parameter to identify the desired Help topic. When this method returns, contains a string that represents the path to the Help file associated with this accessible object. This parameter is passed uninitialized.","y) NotifyClients","[C#] public void NotifyClients(AccessibleEvents accEvent);","[C++] public: void NotifyClients(AccessibleEvents accEvent);","[VB] Public Sub NotifyClients(ByVal accEvent As AccessibleEvents)","[JScript] public function NotifyClients(accEvent: AccessibleEvents); Notifies accessibility client applications of System.Windows.Forms.AccessibleEvents","Description","Notifies accessibility client applications of the specified System.Windows.Forms.AccessibleEvents.","You must call the System.Windows.Forms.Control.ControlAccessibleObject.NotifyClients(System.Windows.Forms.AccessibleEvents) method for each System.Windows.Forms.AccessibleEvents object the accessibility client applications are to be notified of. The System.Windows.Forms.Control.ControlAccessibleObject.NotifyClients(System.Windows.Forms.AccessibleEvents) method is typically called when a property is set or from within an event handler. For example, you might call the System.Windows.Forms.Control.ControlAccessibleObject.NotifyEvents method and pass in System.Windows.Forms.AccessibleEvents.Hide from within the event handler for the System.Windows.Forms.Control.VisibleChanged event. The System.Windows.Forms.AccessibleEvents object to notify the accessibility client applications of.","z) NotifyClients","[C#] public void NotifyClients(AccessibleEvents accEvent, int childID);","[C++] public: void NotifyClients(AccessibleEvents accEvent, int childID);","[VB] Public Sub NotifyClients(ByVal accEvent As AccessibleEvents, ByVal childID As Integer)","[JScript] public function NotifyClients(accEvent: AccessibleEvents, childID: int);","Description","Notifies the accessibility client applications of the specified System.Windows.Forms.AccessibleEvents for the specified child control.","You must call the System.Windows.Forms.Control.ControlAccessibleObject.NotifyClients(System.Windows.Forms.AccessibleEvents) method for each System.Windows.Forms.AccessibleEvents object the accessibility client applications are to be notified of. The System.Windows.Forms.Control.ControlAccessibleObject.NotifyClients(System.Windows.Forms.AccessibleEvents) method is typically called when a property is set or from within an event handler. For example, you might call the System.Windows.Forms.Control.ControlAccessibleObject.NotifyEvents method and pass in System.Windows.Forms.AccessibleEvents.Hide from within the event handler for the System.Windows.Forms.Control.VisibleChanged event. The System.Windows.Forms.AccessibleEvents object to notify the accessibility client applications of. The child System.Windows.Forms.Control to notify of the accessible event.","aa) ToString","[C#] public override string ToString( );","[C++] public: String* ToString( );","[VB] Overrides Public Function ToString( ) As String","[JScript] public override function ToString( ): String;","Description","ControlBindingsCollection class (System.Windows.Forms)","a) UseStdAccessibleObjects","Description","Represents the collection of data bindings for a control.","Simple data binding is accomplished by adding System.Windows.Forms.Binding objects to a System.Windows.Forms.ControIBindingsCollection. Any object that inherits from the System.Windows.Forms.Control class can access the System.Windows.Forms.ControlBindingsCollection through the System.Windows.Forms.Control.DataBindings property. For a list of Windows controls that support data binding, see the System.Windows.Forms.Binding class.","b) Control","c) UseStdAccessibleObjects","[C#] public Control Control {get;}","[C++] public: _property Control* get_Control( );","[VB] Public ReadOnly Property Control As Control","[JScript] public function get Control( ): Control;","Description","Gets the control that the collection belongs to.","d) Count","e) IsReadOnly","f) IsSynchronized","g) Item","h) UseStdAccessibleObjects","System.Windows.Forms.Binding","Description","Gets the System.Windows.Forms.Binding specified by the control's property name.","private void PrintValue( ) {ControlBindingsCollection myControlBindings; myControlBindings=textBox1.DataBindings; \/\/Get the Binding for the Text property. Binding myBinding=myControlBindings[\u201cText\u201d]; \/\/Assuming the data source is a DataTable. DataRowView drv; drv=(DataRowView)myBinding.BindingManagerBase.Current; \/\/Assuming a column named \u201ccustName\u201d exists, print the value. Console.WriteLine(drv[\u201ccustName\u201d]);} The following example uses the System.Windows.Forms.ControlBindingsCollection.Item(System.String) property to return the System.Windows.Forms.Binding for a System.Windows.Forms.TextBox control's System.Windows.Forms.Control.Text property. The name of the property on the data-bound control.","i) Item","j) List","k) SyncRoot","System.Windows.Forms.Binding","Description","Adds the specified System.Windows.Forms.Binding to the collection.","The System.Windows.Forms.BindingsCollection.CollectionChanged event occurs when the change is complete. The System.Windows.Forms.Binding to add.","l) Add","[C#] public void Add(Binding binding);","[C++] public: void Add(Binding* binding);","[VB] Public Sub Add(ByVal binding As Binding)","[JScript] public function Add(binding: Binding); Adds a System.Windows.Forms.Binding to the collection.","Description","Adds the specified System.Windows.Forms.Binding to the collection.","The System.Windows.Forms.BindingsCollection.CollectionChanged event occurs when the change is complete. The System.Windows.Forms.Binding to add.","m) Add","[C#] public Binding Add(string propertyName, object dataSource, string dataMember);","[C++] public: Binding* Add(String* propertyName, Object* dataSource, String* dataMember);","[VB] Public Function Add(ByVal propertyName As String, ByVal dataSource As Object, ByVal dataMember As String) As Binding","[JScript] public function Add(propertyName: String, dataSource: Object, dataMember: String): Binding;","Description","Creates a System.Windows.Forms.Binding using the specified control property name, data source, and data member, and adds it to the collection.","Return Value: The newly-created System.Windows.Forms.Binding.","Adding a System.Windows.Forms.Binding causes the System.Windows.Forms.BindingsCollection.CollectionChanged event to occur. The name of the control property to bind. An System.Object that represents the data source. The property or list to bind to.","n) AddCore","[C#] protected override void AddCore(Binding dataBinding);","[C++] protected: void AddCore(Binding* dataBinding);","[VB] Overrides Protected Sub AddCore(ByVal dataBinding As Binding)","[JScript] protected override function AddCore(dataBinding: Binding);","Description","Adds a binding to the collection. The System.Windows.Forms.Binding to add.","Description","Clears the collection of any bindings.","The System.Windows.Forms.BindingsCollection.CollectionChanged event occurs when the collection is cleared.","o) Clear","[C#] public void Clear( );","[C++] public: void Clear( );","[VB] Public Sub Clear( )","[JScript] public function Clear( ); Clears the collection of any bindings.","Description","Clears the collection of any bindings.","The System.Windows.Forms.BindingsCollection.CollectionChanged event occurs when the collection is cleared.","p) ClearCore","[C#] protected override void ClearCore( );","[C++] protected: void ClearCore( );","[VB] Overrides Protected Sub ClearCore( )","[JScript] protected override function ClearCore( );","Description","System.Windows.Forms.Binding","Description","Deletes the specified System.Windows.Forms.Binding from the collection. The System.Windows.Forms.Binding to remove.","q) Remove","[C#] public void Remove(Binding binding);","[C++] public: void Remove(Binding* binding);","[VB] Public Sub Remove(ByVal binding As Binding)","[JScript] public function Remove(binding: Binding); Deletes the specified System.Windows.Forms.Binding from the collection.","Description","Deletes the specified System.Windows.Forms.Binding from the collection. The System.Windows.Forms.Binding to remove.","Description","Deletes the System.Windows.Forms.Binding at the specified index.","The System.Windows.Forms.BindingsCollection.CollectionChanged event occurs if the removal succeeds. The zero-based index of the item to remove.","r) RemoveAt","[C#] public void RemoveAt(int index);","[C++] public: void RemoveAt(int index);","[VB] Public Sub RemoveAt(ByVal index As Integer)","[JScript] public function RemoveAt(index: int);","Description","Deletes the System.Windows.Forms.Binding at the specified index.","The System.Windows.Forms.BindingsCollection.CollectionChanged event occurs if the removal succeeds. The zero-based index of the item to remove.","s) RemoveCore","[C#] protected override void RemoveCore(Binding dataBinding);","[C++] protected: void RemoveCore(Binding* dataBinding);","[VB] Overrides Protected Sub RemoveCore(ByVal dataBinding As Binding)","[JScript] protected override function RemoveCore(dataBinding: Binding);","Description","TabControl.ControlCollection class (System.Windows.Forms)","a) ToString","Description","Contains a collection of System.Windows.Forms.Control objects.","b) TabControl.ControlCollection","Example Syntax:","c) ToString","[C#] public TabControl.ControlCollection(TabControl owner);","[C++] public: ControlCollection(TabControl* owner);","[VB] Public Sub New(ByVal owner As TabControl)","[JScript] public function TabControl.ControlCollection(owner: TabControl);","Description","Initializes a new instance of the System.Windows.Forms.TabControl.ControlCollection class. The System.Windows.Forms.TabControl that this collection belongs to.","d) Count","e) IsReadOnly","f) Item","g) Add","[C#] public override void Add(Control value);","[C++] public: void Add(Control* value);","[VB] Overrides Public Sub Add(ByVal value As Control)","[JScript] public override function Add(value: Control);","Description","Adds a System.Windows.Forms.Control to the collection.","You cannot add a System.Windows.Forms.TabPage to a System.Windows.Forms.TabPage. The System.Windows.Forms.Control to add.","h) Remove","[C#] public override void Remove(Control value);","[C++] public: void Remove(Control* value);","[VB] Overrides Public Sub Remove(ByVal value As Control)","[JScript] public override function Remove(value: Control);","Description","Removes a System.Windows.Forms.Control from the collection. The System.Windows.Forms.Control to remove.","Control.ControlCollection class (System.Windows.Forms)","a) ToString","Description","Represents a collection of System.Windows.Forms.Control objects","The System.Windows.Forms.Control.ControlCollection.Add(System.Windows.Forms.Control), System.Windows.Forms.Control.ControlCollection.Remove(System.Windows.Forms.Control), and System.Windows.Forms.Control.ControlCollection.RemoveAt(System.Int32) methods enable you to add and remove individual controls from the collection. You can also use the System.Windows.Forms.Control.ControlCollection.AddRange(System.Windows.Forms.Control[ ]) or System.Windows.Forms.Control.ControlCollection.Clear methods to add or remove all the controls from the collection.","b) Control.ControlCollection","Example Syntax:","c) ToString","[C#] public Control.ControlCollection(Control owner);","[C++] public: ControlCollection(Control* owner);","[VB] Public Sub New(ByVal owner As Control)","[JScript] public function Control.ControlCollection(owner: Control);","Description","Initializes a new instance of the System.Windows.Forms.Control.ControlCollection class. A System.Windows.Forms.Control representing the control that owns the control collection.","d) Count","e) ToString","[C#] public int Count {get;}","[C++] public: _property int get_Count( );","[VB] Public ReadOnly Property Count As Integer","[JScript] public function get Count( ): int;","Description","Gets the total number of System.Windows.Forms.Control objects in the collection.","The System.Windows.Forms.Control.ControlCollection.Count property holds the number of System.Windows.Forms.Control objects assigned to the collection. You can use the System.Windows.Forms.Control.ControlCollection.Count property value as the upper bounds of a loop to iterate through a collection.","f) IsReadOnly","g) ToString","[C#] public bool IsReadOnly {get;}","[C++] public: _property bool get_IsReadOnly( );","[VB] Public ReadOnly Property IsReadOnly As Boolean","[JScript] public function get IsReadOnly( ): Boolean;","Description","Gets a value indicating whether the control collection is read-only.","h) Item","i) ToString","[C#] public virtual Control this[int index] {get;}","[C++] public: _property virtual Control* get_Item(int index);","[VB] Overridable Public Default ReadOnly Property Item(ByVal index As Integer) As Control","[JScript] returnValue=ControlCollectionObject.Item(index);","Description","Indicates the System.Windows.Forms.Control at the specified indexed location in the collection.","To retrieve a System.Windows.Forms.Control from the System.Windows.Forms.Control.ControlCollection, reference the collection object with a specific index value. The index value of the System.Windows.Forms.Control.ControlCollection is a zero-based index. The index of the control to retrieve from the control collection.","j) Add","[C#] public virtual void Add(Control value);","[C++] public: virtual void Add(Control* value);","[VB] Overridable Public Sub Add(ByVal value As Control)","[JScript] public function Add(value: Control);","Description","Adds the specified control to the control collection.","The System.Windows.Forms.Control.ControlCollection.Add(System.Windows.Forms.Control) method allows you to add System.Windows.Forms.Control objects to the end of the control collection. The System.Windows.Forms.Control to add to the control collection.","k) AddRange","[C#] public virtual void AddRange(Control[ ] controls);","[C++] public: virtual void AddRange(Control* controls[ ]);","[VB] Overridable Public Sub AddRange(ByVal controls( ) As Control)","[JScript] public function AddRange(controls: Control[ ]);","Description","Adds an array of control objects to the collection.","The System.Windows.Forms.Control objects contained in the controls array are appended to the end of the collection. An array of System.Windows.Forms.Control objects to add to the collection.","l) Clear","[C#] public virtual void Clear( );","[C++] public: virtual void Clear( );","[VB] Overridable Public Sub Clear( )","[JScript] public function Clear( );","Description","Removes all controls from the collection.","You can use the System.Windows.Forms.Control.ControlCollection.Clear method to remove the entire collection of controls from a parent control.","m) Contains","[C#] public bool Contains(Control control);","[C++] public: bool Contains(Control* control);","[VB] Public Function Contains(ByVal control As Control) As Boolean","[JScript] public function Contains(control: Control): Boolean;","Description","Determines whether the specified control is a member of the collection.","Return Value: true if the System.Windows.Forms.Control is a member of the collection; otherwise, false","This method enables you to determine whether a System.Windows.Forms.Control is a member of the collection before attempting to perform operations on the System.Windows.Forms.Control. You can use this method to confirm that a System.Windows.Forms.Control has been added to or is still a member of the collection. The System.Windows.Forms.Control to locate in the collection.","n) CopyTo","[C#] public void CopyTo(Array dest, int index);","[C++] public: _sealed void CopyTo(Array* dest, int index);","[VB] NotOverridable Public Sub CopyTo(ByVal dest As Array, ByVal index As Integer)","[JScript] public function CopyTo(dest: Array, index: int);","Description","Copies the entire collection into an existing array at a specified location within the array.","All the controls in the collection are copied into the array starting at the specified indexed location, overwriting any existing data within the range of objects copied into the array. The destination array. The index in the destination array at which storing begins.","o) Equals","[C#] public override bool Equals(object other);","[C++] public: bool Equals(Object* other);","[VB] Overrides Public Function Equals(ByVal other As Object) As Boolean","[JScript] public override function Equals(other: Object): Boolean;","Description","p) GetChildIndex","[C#] public int GetChildIndex(Control child);","[C++] public: int GetChildIndex(Control* child);","[VB] Public Function GetChildIndex(ByVal child As Control) As Integer","[JScript] public function GetChildIndex(child: Control): int; Retrieves the index of a control within the control collection.","Description","Retrieves the index of the specified child control within the control collection.","Return Value: A zero-based index value that represents the location of the specified child control within the control collection.","The control with an index value of zero is at the top of the z-order, and higher numbers are closer to the bottom. The System.Windows.Forms.Control to search for in the control collection.","q) GetChildIndex","[C#] public int GetChildIndex(Control child, bool throwException);","[C++] public: int GetChildIndex(Control* child, bool throwException);","[VB] Public Function GetChildIndex(ByVal child As Control, ByVal throwException As Boolean) As Integer","[JScript] public function GetChildIndex(child: Control, throwException Boolean) int;","Description","Retrieves the index of the specified child control within the control collection, and optionally raises an exception if the specified control is not within the control collection.","Return Value: A zero-based index value that represents the location of the specified child control within the control collection.","The control with an index value of zero is at the top of the z-order, and higher numbers are closer to the bottom. The System.Windows.Forms.Control to search for in the control collection. true to throw an exception if the System.Windows.Forms.Control specified in the child parameter is not a control in the System.Windows.Forms.Control.ControlCollection; otherwise, false","r) GetEnumerator","[C#] public IEnumerator GetEnumerator( );","[C++] public: _sealed IEnumerator* GetEnumerator( );","[VB] NotOverridable Public Function GetEnumerator( ) As lEnumerator","[JScript] public function GetEnumerator( ): lEnumerator;","Description","Returns an enumerator that can be used to iterate through the control collection.","Return Value: An System.Collections.IEnumerator object that represents the control collection.","s) GetHashCode","[C#] public override int GetHashCode( );","[C++] public: int GetHashCode( );","[VB] Overrides Public Function GetHashCode( ) As Integer","[JScript] public override function GetHashCode( ): int;","Description","t) IndexOf","[C#] public int IndexOf(Control control);","[C++] public: int IndexOf(Control* control);","[VB] Public Function IndexOf(ByVal control As Control) As Integer","[JScript] public function IndexOf(control: Control): int;","Description","Retrieves the index of the specified control in the control collection.","Return Value: A zero-based index value that represents the position of the specified System.Windows.Forms.Control in the System.Windows.Forms.Control.ControlCollection.","If the control is not found in the collection, the System.Windows.Forms.Control.ControlCollection.IndexOf(System.Windows.Forms.Control) method return value is \u22121. The System.Windows.Forms.Control to locate in the collection.","u) Remove","[C#] public virtual void Remove(Control value);","[C++] public: virtual void Remove(Control* value);","[VB] Overridable Public Sub Remove(ByVal value As Control)","[JScript] public function Remove(value: Control);","Description","Removes the specified control from the control collection.","When a System.Windows.Forms.Control is removed from the control collection, all subsequent controls are moved up one position in the collection. The System.Windows.Forms.Control to remove from the System.Windows.Forms.Control.ControlCollection.","v) RemoveAt","[C#] public void RemoveAt(int index);","[C++] public: sealed void RemoveAt(int index);","[VB] NotOverridable Public Sub RemoveAt(ByVal index As Integer)","[JScript] public function RemoveAt(index: int);","Description","Removes a control from the control collection at the specified indexed location.","When a System.Windows.Forms.Control is removed from the control collection, all subsequent controls are moved up one position in the collection. The index value of the System.Windows.Forms.Control to remove.","w) SetChildIndex","[C#] public void SetChildIndex(Control child, int newIndex);","[C++] public: void SetChildIndex(Control* child, int newIndex);","[VB] Public Sub SetChildIndex(ByVal child As Control, ByVal newIndex As Integer)","[JScript] public function SetChildIndex(child: Control, newIndex: int);","Description","Sets the index of the specified child control in the collection to the specified index value.","The control with an index value of zero is at the top of the z-order, and higher numbers are closer to the bottom. The child System.Windows.Forms.Control to search for. The new index value of the control.","x) IList.Add","[C#] int IList.Add(object control);","[C++] int IList::Add(Object* control);","[VB] Function Add(ByVal control As Object) As Integer Implements IList.Add","[JScript] function IList.Add(control: Object): int;","y) IList. Contains","[C#] bool IList.Contains(object control);","[C++] bool IList::Contains(Object* control);","[VB] Function Contains(ByVal control As Object) As Boolean Implements List.Contains","[JScript] function IList.Contains(control: Object): Boolean;","z) IList.IndexOf","[C#] int IList.IndexOf(object control);","[C++] int IList::IndexOf(Object* control);","[VB] Function IndexOf(ByVal control As Object) As Integer Implements IList.IndexOf","[JScript] function IList.IndexOf(control: Object): int;","aa) IList.Insert","[C#] void IList.Insert(int index, object value);","[C++] void IList::Insert(int index, Object* value);","[VB] Sub Insert(ByVal index As Integer, ByVal value As Object) Implements IList.Insert","[JScript] function IList.Insert(index: int, value: Object);","bb) IList.Remove","[C#] void IList.Remove(object control);","[C++] void IList::Remove(Object* control);","[VB] Sub Remove(ByVal control As Object) Implements IList.Remove","[JScript] function IList.Remove(control: Object);","cc) ICloneable.Clone","[C#] object ICloneable.Clone( );","[C++] Object* ICloneable::Clone( );","[VB] Function Clone( ) As Object Implements ICloneable.Clone","[JScript] function ICloneable.Clone( ): Object;","MdiClient.ControlCollection class (System.Windows.Forms)","a) ToString","Description","Collection of controls . . .","b) MdiClient.ControlCollection","Example Syntax:","c) ToString","[C#] public MdiClient.ControlCollection(MdiClient owner);","[C++] public: ControlCollection(MdiClient* owner);","[VB] Public Sub New(ByVal owner As MdiClient)","[JScript] public function MdiClient.ControlCollection(owner: MdiClient);","Description","d) Count","e) IsReadOnly","f) Item","g) Add","[C#] public override void Add(Control value);","[C++] public: void Add(Control* value);","[VB] Overrides Public Sub Add(ByVal value As Control)","[JScript] public override function Add(value: Control);","Description","Adds a control to the MDI Container. This child must be a Form that is marked as an MDI Child to be added to the container. You should not call this directly, but rather set the child form's (ctl) MDIParent property: \/\/wrong Form child=new ChildForm( ); this.getMdiClient( ).add(child); \/\/right Form child=new ChildForm( ); child.setMdiParent(this); Adds a control to the MDI Container. This child must be a Form that is marked as an MDI Child to be added to the container. You should not call this directly, but rather set the child form's (ctl) MDIParent property: \/\/wrong Form child=new ChildForm( ); this.getMdiClient( ).add(child); \/\/right Form child=new ChildForm( ); child.setMdiParent(this); MdiChild Form to add.","h) Remove","[C#] public override void Remove(Control value);","[C++] public: void Remove(Control* value);","[VB] Overrides Public Sub Remove(ByVal value As Control)","[JScript] public override function Remove(value: Control);","Description","Removes a child control. MDIChild Form to remove.","Form.ControlCollection class (System.Windows.Forms)","a) To String","Description","Represents a collection of controls on the form.","This class represents the collection of controls contained within a form. You can use the System.Windows.Forms.Form.ControlCollection.Add(System.Windows.Forms.Control) method to add a control to the form and the System.Windows.Forms.Form.ControlCollection.Remove(System.Windows.Forms.Control) method to remove the method from the form. The control collection represented by this class cannot be created without binding it to a specific form. As a result, you cannot create multiple instances of this control collection and interchange them with an active form to provide different control layouts.","b) Form.ControlCollection","Example Syntax:","c) ToString","[C#] public Form.ControlCollection(Form owner);","[C++] public: ControlCollection(Form* owner);","[VB] Public Sub New(ByVal owner As Form)","[JScript] public function Form.ControlCollection(owner: Form);","Description","Initializes a new instance of the System.Windows.Forms.Form.ControlCollection class.","This constructor allows you to properly bind the control collection to the form to enable controls to be added to the form. The System.Windows.Forms.Form to contain the controls added to the control collection.","d) Count","e) IsReadOnly","f) Item","g) Add","[C#] public override void Add(Control value);","[C++] public: void Add(Control* value);","[VB] Overrides Public Sub Add(ByVal value As Control)","[JScript] public override function Add(value: Control);","Description","Adds a control to the form.","You can use this method to adds controls to the form. If you want to add a group of already created controls to the form, use the System.Windows.Forms.Control.ControlCollection.AddRange(System.Windows.Forms.Control[ ]) method of the System.Windows.Forms.Control.ControlCollection class. The System.Windows.Forms.Control to add to the form.","h) Remove","[C#] public override void Remove(Control value);","[C++] public: void Remove(Control* value);","[VB] Overrides Public Sub Remove(ByVal value As Control)","[JScript] public override function Remove(value: Control);","Description","Removes a control from the form.","You can use this method to remove controls that you no longer need in your form. If you want to display a control after it is removed, you will need to add the control back to the form using the System.Windows.Forms.Form.ControlCollection.Add(System.Windows.Forms.Control) method. To have a control remain on the form but not displayed, use the System.Windows.Forms.Control.Visible property of the control. A System.Windows.Forms.Control to remove from the form.","ControlEventArgs class (System.Windows.Forms)","a) ToString","Description","Provides data for the System.Windows.Forms.Control.ControlAdded and System.Windows.Forms.Control.ControlRemoved events.","For more information about handling events, see.","b) ControlEventArgs","Example Syntax:","c) ToString","[C#] public ControlEventArgs(Control control);","[C++] public: ControlEventArgs(Control* control);","[VB] Public Sub New(ByVal control As Control)","[JScript] public function ControlEventArgs(control: Control);","Description","Initializes a new instance of the System.Windows.Forms.ControlEventArgs class for the specified control. The System.Windows.Forms.Control to store in this event.","d) Control","e) ToString","[C#] public Control Control {get;}","[C++] public: _property Control* get_Control( );","[VB] Public ReadOnly Property Control As Control","[JScript] public function get Control( ): Control;","Description","Gets the control object used by this event.","ControlEventHandler delegate (System.Windows.Forms)","a) ToString","Description","Represents the method that will handle the System.Windows.Forms.Control.ControlAdded and System.Windows.Forms.Control.ControlRemoved events of the System.Windows.Forms.Control class. The source of the event. A System.Windows.Forms.ControlEventArgs that contains the event data.\n\nWhen you create a System.Windows.Forms.ControlEventArgs delegate, you identify the method that will handle the event. To associate the event with your event handler, add an instance of the delegate to the event. The event handler is called whenever the event occurs, unless you remove the delegate. For more information about event handler delegates, see.\n","ControlPaint class (System.Windows.Forms)","a) ToString","Description","Provides methods used to paint common Windows controls and their elements.","The methods contained in the System.Windows.Forms.ControlPaint class allow you to draw your own controls or elements of controls. You may control the drawing of your own controls if the System.Windows.Forms.ControlStyles.UserPaint bit is set to true for the control. You can get or set the style bits by calling the System.Windows.Forms.Control.GetStyle(System.Windows.Forms.ControlStyles) or System.Windows.Forms.Control.SetStyle(System.Windows.Forms.ControlStyles,System.Boolean) methods. You can set multiple style bits for any control. The System.Windows.Forms.ControlStyles enumeration members can be combined with bitwise operations.","b) ContrastControlDark","c) ToString","[C#] public static Color ContrastControlDark {get;}","[C++] public: _property static Color get_ContrastControlDark( );","[VB] Public Shared ReadOnly Property ContrastControlDark As Color","[JScript] public static function get ContrastControlDark( ): Color;","Description","Gets the color to use as the System.Drawing.SystemColors.ControlDark color.","If the user has enabled the System.Windows.Forms.SystemInformation.HighContrast mode, this property is set to System.Drawing.SystemColors.WindowFrame; otherwise, it is set to System.Drawing.SystemColors.ControlDark.","d) CreateHBitimap16Bit","[C#] public static IntPtr CreateHBitmap16Bit(Bitmap bitmap, Color background);","[C++] public: static IntPtr CreateHBitmap16Bit(Bitmap* bitmap, Color background);","[VB] Public Shared Function CreateHBitmap16Bit(ByVal bitmap As Bitmap, ByVal background As Color) As IntPtr","[JScript] public static function CreateHBitmap16Bit(bitmap: Bitmap, background Color) IntPtr;","Description","e) CreateHBitmapColorMask","[C#] public static IntPtr CreateHBitmapColorMask(Bitmap bitmap, IntPtr monochromeMask);","[C++] public: static IntPtr CreateHBitmapColorMask(Bitmap* bitmap, IntPtr monochromeMask);","[VB] Public Shared Function CreateHBitmapColorMask(ByVal bitmap As Bitmap, ByVal monochromeMask As IntPtr) As IntPtr","[JScript] public static function CreateHBitmapColorMask(bitmap: Bitmap, monochromeMask: IntPtr): IntPtr;","Description","Creates a Win32 HBITMAP out of the image. You are responsible for de-allocating the HBITMAP with Windows.DeleteObject(handle). If the image uses transparency, the background will be filled with the specified color.","f) CreateHBitmapTransparencyMask","[C#] public static IntPtr CreateHBitmapTransparencyMask(Bitmap bitmap);","[C++] public: static IntPtr CreateHBitmapTransparencyMask(Bitmap* bitmap);","[VB] Public Shared Function CreateHBitmapTransparencyMask(ByVal bitmap As Bitmap) As IntPtr","[JScript] public static function CreateHBitmapTransparencyMask(bitmap: Bitmap): IntPtr;","Description","Creates a color mask for the specified bitmap that indicates which color should be displayed as transparent.","Return Value: The handle to the System.Drawing.Bitmap mask.","You are responsible for de-allocating the bitmap with Windows.DeleteObject(handle). The System.Drawing.Bitmap to create the trancparency mask for.","g) Dark","[C#] public static Color Dark(Color baseColor);","[C++] public: static Color Dark(Color baseColor);","[VB] Public Shared Function Dark(ByVal baseColor As Color) As Color","[JScript] public static function Dark(baseColor: Color): Color;","Description","Creates a new dark color object for the control from the specified color.","Return Value: A System.Drawing.Color that represents the dark color on the control.","If the specified System.Drawing.Color is one of the System.Drawing.SystemColors, the color is converted to a System.Drawing.SystemColors.ControlDark color; otherwise, the color's luminosity value is decreased. The System.Drawing.Color to be darkened.","h) Dark","[C#] public static Color Dark(Color baseColor, float percOfDarkDark);","[C++] public: static Color Dark(Color baseColor, float percOfDarkDark);","[VB] Public Shared Function Dark(ByVal baseColor As Color, ByVal percOfDarkDark As Single) As Color","[JScript] public static function Dark(baseColor: Color, percOfDarkDark: float) Color; Creates a new dark color object for the control.","Description","Creates a new dark color object for the control from the specified color and darkens it by the specified percentage.","Return Value: A System.Drawing.Color that represent the dark color on the control.","If the specified System.Drawing.Color is one of the System.Drawing.SystemColors, the color is converted to a System.Drawing.SystemColors.ControlDark color; otherwise, the color's luminosity value is decreased. The System.Drawing.Color to be darkened. The percentage to darken the specified System.Drawing.Color.","i) DarkDark","[C#] public static Color DarkDark(Color baseColor);","[C++] public: static Color DarkDark(Color baseColor);","[VB] Public Shared Function DarkDark(ByVal baseColor As Color) As Color","[JScript] public static function DarkDark(baseColor: Color): Color;","Description","Creates a new dark color object for the control from the specified color.","Return Value: A System.Drawing.Color that represents the dark color on the control.","If the specified System.Drawing.Color is one of the System.Drawing.SystemColors, the color is converted to the System.Drawing.SystemColors.ControlDarkDark color; otherwise, the color's luminosity value is increased. The System.Drawing.Color to be darkened.","j) DrawBorder","[C#] public static void DrawBorder(Graphics graphics, Rectangle bounds, Color color, ButtonBorderStyle style);","[C++] public: static void DrawBorder(Graphics* graphics, Rectangle bounds, Color color, ButtonBorderStyle style);","[VB] Public Shared Sub DrawBorder(ByVal graphics As Graphics, ByVal bounds As Rectangle, ByVal color As Color, ByVal style As ButtonBorderStyle)","[JScript] public static function DrawBorder(graphics: Graphics, bounds: Rectangle, color: Color, style: ButtonBorderStyle); Draws a border on a button-style control.","Description","Draws a border with the specified style and color, on the specified graphics surface, and within the specified bounds on a button-style control. The System.Drawing.Graphics object to draw on. The System.Drawing.Rectangle that represents the dimensions of the border. The System.Drawing.Color of the border. The System.Windows.Forms.ButtonBorderStyle of the border.","k) DrawBorder","[C#] public static void DrawBorder(Graphics graphics, Rectangle bounds, Color leftColor, int leftWidth, ButtonBorderStyle leftStyle, Color topColor, int topWidth, ButtonBorderStyle topStyle, Color rightColor, int rightWidth, ButtonBorderStyle rightStyle, Color bottomColor, int bottomWidth, ButtonBorderStyle bottomStyle);\n\n[C++] public: static void DrawBorder(Graphics* graphics, Rectangle bounds, Color leftColor, int leftWidth, ButtonBorderStyle leftStyle, Color topColor, int topWidth, ButtonBorderStyle topStyle, Color rightColor, int rightWidth, ButtonBorderStyle rightStyle, Color bottomColor, int bottomWidth, ButtonBorderStyle bottomStyle);\n\n[VB] Public Shared Sub DrawBorder(ByVal graphics As Graphics, ByVal bounds As Rectangle, ByVal leftColor As Color, ByVal leftWidth As Integer, ByVal leftStyle As ButtonBorderStyle, ByVal topColor As Color, ByVal topWidth As Integer, ByVal topStyle As ButtonBorderStyle, ByVal rightColor As Color, ByVal rightWidth As Integer, ByVal rightStyle As ButtonBorderStyle, ByVal bottomColor As Color, ByVal bottomWidth As Integer, ByVal bottomStyle As ButtonBorderStyle)\n\n[JScript] public static function DrawBorder(graphics: Graphics, bounds: Rectangle, leftColor: Color, leftWidth: int, leftStyle: ButtonBorderStyle, topColor: Color, topWidth: int, topStyle: ButtonBorderStyle, rightColor: Color, rightWidth: int, rightStyle: ButtonBorderStyle, bottomColor: Color, bottomWidth: int, bottomStyle: ButtonBorderStyle);\n\nDescription\n\nDraws a border on a button-style control with the specified styles, colors, and border widths, on the specified graphics surface, and within the specified bounds. The System.Drawing.Graphics object to draw on. The System.Drawing.Rectangle that represents the dimensions of the border. The System.Drawing.Color of the left of the border. The System.Drawing.Pen.Width of the left border. The System.Windows.Forms.ButtonBorderStyle of the left border. The System.Drawing.Color of the top of the border. The System.Drawing.Pen.Width of the top border. The System.Windows.Forms.ButtonBorderStyle of the top border. The System.Drawing.Color of the right of the border. The System.Drawing.Pen.Width of the right border. The System.Windows.Forms.ButtonBorderStyle of the right border. The System.Drawing.Color of the bottom of the border. The System.Drawing.Pen.Width of the left border. The System.Windows.Forms.ButtonBorderStyle of the bottom border.\n","l) DrawBorder3D","[C#] public static void DrawBorder3D(Graphics graphics, Rectangle rectangle);","[C++] public: static void DrawBorder3D(Graphics* graphics, Rectangle rectangle);","[VB] Public Shared Sub DrawBorder3D(ByVal graphics As Graphics, ByVal rectangle As Rectangle)","[JScript] public static function DrawBorder3D(graphics: Graphics, rectangle Rectangle); Draws a three-dimensional style border on a control.","Description","Draws a three-dimensional style border on the specified graphics surface and within the specified bounds on a control.","The System.Windows.Forms.Border3DStyle.Etched style is used by default to draw the border. The System.Drawing.Graphics object to draw on. The System.Drawing.Rectangle that represents the dimensions of the border.","m) DrawBorder3D","[C#] public static void DrawBorder3D(Graphics graphics, Rectangle rectangle, Border3DStyle style);","[C++] public: static void DrawBorder3D(Graphics* graphics, Rectangle rectangle, Border3DStyle style);","[VB] Public Shared Sub DrawBorder3D(ByVal graphics As Graphics, ByVal rectangle As Rectangle, ByVal style As Border3DStyle)","[JScript] public static function DrawBorder3D(graphics: Graphics, rectangle Rectangle, style Border3DStyle);","Description","Draws a three-dimensional style border with the specified style, on the specified graphics surface, and within the specified bounds on a control. The System.Drawing.Graphics object to draw on. The System.Drawing.Rectangle that represents the dimensions of the border. The System.Windows.Forms.Border3DStyle to use when drawing the border.","n) DrawBorder3D","[C#] public static void DrawBorder3D(Graphics graphics, Rectangle rectangle, Border3DStyle style, Border3DSide sides);","[C++] public: static void DrawBorder3D(Graphics* graphics, Rectangle rectangle, Border3DStyle style, Border3DSide sides);","[VB] Public Shared Sub DrawBorder3D(ByVal graphics As Graphics, ByVal rectangle As Rectangle, ByVal style As Border3DStyle, ByVal sides As Border3DSide)","[JScript] public static function DrawBorder3D(graphics: Graphics, rectangle: Rectangle, style: Border3DStyle, sides: Border3DSide);","Description","Draws a three-dimensional style border with the specified style, on the specified graphics surface and sides, and within the specified bounds on a control. The System.Drawing.Graphics object to draw on. The System.Drawing.Rectangle that represents the dimensions of the border. The System.Windows.Forms.Border3DStyle to use when drawing the border. The System.Windows.Forms.Border3DSide of the rectangle to draw the border on.","o) DrawBorder3D","[C#] public static void DrawBorder3D(Graphics graphics, int x, int y, int width, int height);","[C++] public: static void DrawBorder3D(Graphics* graphics, int x, int y, int width, int height);","[VB] Public Shared Sub DrawBorder3D(ByVal graphics As Graphics, ByVal x As Integer, ByVal y As Integer, ByVal width As Integer, ByVal height As Integer)","[JScript] public static function DrawBorder3D(graphics: Graphics, x: int, y: int, width int, height: int);","Description","Draws a three-dimensional style border on the specified graphics surface and within the specified bounds on a control.","The System.Windows.Forms.Border3DStyle.Etched style is used by default to draw the border. The System.Drawing.Graphics object to draw on. The System.Drawing.Rectangle.X coordinate of the top left of the border rectangle. The System.Drawing.Rectangle.Y coordinate of the top left of the border rectangle. The System.Drawing.Rectangle.Width of the border rectangle. The System.Drawing.Rectangle.Height of the border rectangle.","p) DrawBorder3D","[C#] public static void DrawBorder3D(Graphics graphics, int x, int y, int width, int height, Border3DStyle style);","[C++] public: static void DrawBorder3D(Graphics* graphics, int x, int y, int width, int height, Border3DStyle style);","[VB] Public Shared Sub DrawBorder3D(ByVal graphics As Graphics, ByVal x As Integer, ByVal y As Integer, ByVal width As Integer, ByVal height As Integer, ByVal style As Border3DStyle)","[JScript] public static function DrawBorder3D(graphics: Graphics, x: int, y: int, width: int, height: int, style: Border3DStyle);","Description","Draws a three-dimensional style border with the specified style, on the specified graphics surface, and within the specified bounds on a control. The System.Drawing.Graphics object to draw on. The System.Drawing.Rectangle.X coordinate of the top left of the border rectangle. The System.Drawing.Rectangle.Y coordinate of the top left of the border rectangle. The System.Drawing.Rectangle.Width of the border rectangle. The System.Drawing.Rectangle.Height of the border rectangle. The System.Windows.Forms.Border3DStyle to use when drawing the border.","q) DrawBorder3D","[C#] public static void DrawBorder3D(Graphics graphics, int x, int y, int width, int height, Border3DStyle style, Border3DSide sides);","[C++] public: static void DrawBorder3D(Graphics* graphics, int x, int y, int width, int height, Border3DStyle style, Border3DSide sides);","[VB] Public Shared Sub DrawBorder3D(ByVal graphics As Graphics, ByVal x As Integer, ByVal y As Integer, ByVal width As Integer, ByVal height As Integer,","ByVal style As Border3DStyle, ByVal sides As Border3DSide)","[JScript] public static function DrawBorder3D(graphics: Graphics, x: it, y: int, width: int, height: int, style: Border3DStyle, sides: Border3DSide);","Description","Draws a three-dimensional style border with the specified style, on the specified graphics surface and side, and within the specified bounds on a control. The System.Drawing.Graphics object to draw on. The System.Drawing.Rectangle.X coordinate of the top left of the border rectangle. The System.Drawing.Rectangle.Y coordinate of the top left of the border rectangle. The System.Drawing.Rectangle.Width of the border rectangle. The System.Drawing.Rectangle.Height of the border rectangle. The System.Windows.Forms.Border3DStyle to use when drawing the border. The System.Windows.Forms.Border3DSide of the rectangle to draw the border on.","r) DrawButton","[C#] public static void DrawButton(Graphics graphics, Rectangle rectangle, ButtonState state);","[C++] public: static void DrawButton(Graphics* graphics, Rectangle rectangle, ButtonState state);","[VB] Public Shared Sub DrawButton(ByVal graphics As Graphics, ByVal rectangle As Rectangle, ByVal state As ButtonState)","[JScript] public static function DrawButton(graphics: Graphics, rectangle: Rectangle, state: ButtonState); Draws a button control.","Description","Draws a button control in the specified state, on the specified graphics surface, and within the specified bounds. The System.Drawing.Graphics object to draw on. The System.Drawing.Rectangle that represents the dimensions of the button. The System.Windows.Forms.ButtonState to draw the button in.","s) DrawButton","[C#] public static void DrawButton(Graphics graphics, int x, int y, int width, int height, ButtonState state);","[C++] public: static void DrawButton(Graphics* graphics, int x, int y, int width, int height, ButtonState state);","[VB] Public Shared Sub DrawButton(ByVal graphics As Graphics, ByVal x As Integer, ByVal y As Integer, ByVal width As Integer, ByVal height As Integer, ByVal state As ButtonState)","[JScript] public static function DrawButton(graphics: Graphics, x: int, y: int, width: int, height: int, state: ButtonState);","Description","Draws a button control in the specified state, on the specified graphics surface, and within the specified bounds. The System.Drawing.Graphics object to draw on. The System.Drawing.Rectangle.X coordinate of the upper left corner of the drawing rectangle. The System.Drawing.Rectangle.Y coordinate of the upper left corner of the drawing rectangle. The System.Drawing.Rectangle.Width of the button. The System.Drawing.Rectangle.Height of the button. The System.Windows.Forms.ButtonState to the button in.","t) DrawCaptionButton","[C#] public static void DrawCaptionButton(Graphics graphics, Rectangle rectangle, CaptionButton button, ButtonState state);","[C++] public: static void DrawCaptionButton(Graphics* graphics, Rectangle rectangle, CaptionButton button, ButtonState state);","[VB] Public Shared Sub DrawCaptionButton(ByVal graphics As Graphics, ByVal rectangle As Rectangle, ByVal button As CaptionButton, ByVal state As ButtonState)","[JScript] public static function DrawCaptionButton(graphics: Graphics, rectangle Rectangle, button: CaptionButton, state: ButtonState); Draws a caption button control.","Description","Draws the specified caption button control in the specified state, on the specified graphics surface, and within the specified bounds. The System.Drawing.Graphics object to draw on. The System.Drawing.Rectangle that represents the dimensions of the caption button. The System.Windows.Forms.CaptionButton to draw. The System.Windows.Forms.ButtonState to draw the caption button in.","u) DrawCaptionButton","[C#] public static void DrawCaptionButton(Graphics graphics, int x, int y, int width, int height, CaptionButton button, ButtonState state);","[C++] public: static void DrawCaptionButton(Graphics* graphics, int x, int y, int width, int height, CaptionButton button, ButtonState state);","[VB] Public Shared Sub DrawCaptionButton(ByVal graphics As Graphics, ByVal x As Integer, ByVal y As Integer, ByVal width As Integer, ByVal height As Integer, ByVal button As CaptionButton, ByVal state As ButtonState)","[JScript] public static function DrawCaptionButton(graphics: Graphics, x: int, y: int, width: int, height: int, button: CaptionButton, state: ButtonState);","Description","Draws the specified caption button control in the specified state, on the specified graphics surface, and within the specified bounds. The System.Drawing.Graphics object to draw on. The System.Drawing.Rectangle.X coordinate of the top left of the drawing rectangle. The System.Drawing.Rectangle.Y coordinate of the top left of the drawing rectangle. The System.Drawing.Rectangle.Width of the drawing rectangle. The System.Drawing.Rectangle.Height of the drawing rectangle. The System.Windows.Forms.CaptionButton to draw. The System.Windows.Forms.ButtonState to draw the caption button in.","v) DrawCheckBox","[C#] public static void DrawCheckBox(Graphics graphics, Rectangle rectangle, ButtonState state);","[C++] public: static void DrawCheckBox(Graphics* graphics, Rectangle rectangle, ButtonState state);","[VB] Public Shared Sub DrawCheckBox(ByVal graphics As Graphics, ByVal rectangle As Rectangle, ByVal state As ButtonState)","[JScript] public static function DrawCheckBox(graphics: Graphics, rectangle: Rectangle, state: BuffonState); Draws a check box control.","Description","Draws a check box control in the specified state, on the specified graphics surface, and within the specified bounds. The System.Drawing.Graphics object to draw on. The System.Drawing.Rectangle that represents the dimensions of the check box. The System.Windows.Forms.ButtonState to draw the check box in.","w) DrawCheckBox","[C#] public static void DrawCheckBox(Graphics graphics, int x, int y, int width, int height, ButtonState state);","[C++] public: static void DrawCheckBox(Graphics* graphics, int x, int y, int width, int height, ButtonState state);","[VB] Public Shared Sub DrawCheckBox(ByVal graphics As Graphics, ByVal x As Integer, ByVal y As Integer, ByVal width As Integer, ByVal height As Integer, ByVal state As ButtonState)","[JScript] public static function DrawCheckBox(graphics: Graphics, x: int, y: int, width: int, height: int, state: ButtonState);","Description","Draws a check box control in the specified state, on the specified graphics surface, and within the specified bounds. The System.Drawing.Graphics object to draw on. The System.Drawing.Rectangle.X coordinate of the upper left corner of the drawing rectangle. The System.Drawing.Rectangle.Y coordinate of the upper left corner of the drawing rectangle. The System.Drawing.Rectangle.Width of the check box. The System.Drawing.Rectangle.Height of the check box. The System.Windows.Forms.ButtonState to draw the check box in.","x) DrawComboButton","[C#] public static void DrawComboButton(Graphics graphics, Rectangle rectangle, ButtonState state);","[C++] public: static void DrawComboButton(Graphics* graphics, Rectangle rectangle, ButtonState state);","[VB] Public Shared Sub DrawComboButton(ByVal graphics As Graphics, ByVal rectangle As Rectangle, ByVal state As ButtonState)","[JScript] public static function DrawComboButton(graphics: Graphics, rectangle: Rectangle, state: ButtonState); Draws a drop-down button on a combo box control.","Description","Draws a drop-down button on a combo box control in the specified state, on the specified graphics surface, and within the specified bounds. The System.Drawing.Graphics object to draw on. The System.Drawing.Rectangle that represents the dimensions of the combo box. The System.Windows.Forms.ButtonState to draw the combo box in.","y) DrawComboButton","[C#] public static void DrawComboButton(Graphics graphics, int x, int y, int width, int height, ButtonState state);","[C++] public: static void DrawComboButton(Graphics* graphics, int x, int y, int width, int height, ButtonState state);","[VB] Public Shared Sub DrawComboButton(ByVal graphics As Graphics, ByVal x As Integer, ByVal y As Integer, ByVal width As Integer, ByVal height As Integer, ByVal state As ButtonState)","[JScript] public static function DrawComboButton(graphics: Graphics, x: int, y: int, width: int, height: int, state: ButtonState);","Description","Draws a drop-down button on a combo box control in the specified state, on the specified graphics surface, and within the specified bounds. The System.Drawing.Graphics object to draw on. The System.Drawing.Rectangle.X coordinate of the top left of the border rectangle. The System.Drawing.Rectangle.Y coordinate of the top left of the border rectangle. The System.Windows.Forms.Control.Width of the combo box. The System.Windows.Forms.Control.Height of the combo box. The System.Windows.Forms.ButtonState to draw the combo box in.","z) DrawContainerGrabHandle","[C#] public static void DrawContainerGrabHandle(Graphics graphics, Rectangle bounds);","[C++] public: static void DrawContainerGrabHandle(Graphics* graphics, Rectangle bounds);","[VB] Public Shared Sub DrawContainerGrabHandle(ByVal graphics As Graphics, ByVal bounds As Rectangle)","[JScript] public static function DrawContainerGrabHandle(graphics: Graphics, bounds: Rectangle);","Description","Draws a container control grab handle glyph on the specified graphics surface and within the specified bounds.","Grab handles are used by containers to indicate to the user that the user can directly manipulate the containers. The manipulation can consist of actions such as sizing and moving. The System.Drawing.Graphics object to draw on. The System.Drawing.Rectangle that represents the dimensions of the grab handle glyph.","aa) DrawFocusRectangle","[C#] public static void DrawFocusRectangle(Graphics graphics, Rectangle rectangle);","[C++] public: static void DrawFocusRectangle(Graphics* graphics, Rectangle rectangle);","[VB] Public Shared Sub DrawFocusRectangle(ByVal graphics As Graphics, ByVal rectangle As Rectangle)","[JScript] public static function DrawFocusRectangle(graphics: Graphics, rectangle: Rectangle); Draws a focus rectangle.","Description","Draws a focus rectangle on the specified graphics surface and within the specified bounds.","A focus rectangle is a dotted rectangle that Windows uses to indicate what control has the current keyboard focus. The System.Drawing.Graphics object to draw on. The System.Drawing.Rectangle that represents the dimensions of the grab handle glyph.","bb) DrawFocusRectangle","[C#] public static void DrawFocusRectangle(Graphics graphics, Rectangle rectangle, Color foreColor, Color backColor);","[C++] public: static void DrawFocusRectangle(Graphics* graphics, Rectangle rectangle, Color foreColor, Color backColor);","[VB] Public Shared Sub DrawFocusRectangle(ByVal graphics As Graphics, ByVal rectangle As Rectangle, ByVal foreColor As Color, ByVal backColor As Color)","[JScript] public static function DrawFocusRectangle(graphics: Graphics, rectangle: Rectangle, foreColor: Color, backColor: Color);","Description","Draws a focus rectangle on the specified graphics surface and within the specified bounds.","A focus rectangle is a dotted rectangle that Windows uses to indicate what control has the current keyboard focus. The System.Drawing.Graphics object to draw on. The System.Drawing.Rectangle that represents the dimensions of the grab handle glyph. The System.Windows.Forms.Control.ForeColor of the object to draw the focus rectangle on. The System.Windows.Forms.Control.BackColor of the object to draw the focus rectangle on.","cc) DrawGrabHandle","[C#] public static void DrawGrabHandle(Graphics graphics, Rectangle rectangle, bool primary, bool enabled);","[C++] public: static void DrawGrabHandle(Graphics* graphics, Rectangle rectangle, bool primary, bool enabled);","[VB] Public Shared Sub DrawGrabHandle(ByVal graphics As Graphics, ByVal rectangle As Rectangle, ByVal primary As Boolean, ByVal enabled As Boolean)","[JScript] public static function DrawGrabHandle(graphics: Graphics, rectangle: Rectangle, primary: Boolean, enabled: Boolean);","Description","Draws a standard selection grab handle glyph on the specified graphics surface, within the specified bounds, and in the specified state and style. Grab handles are used by objects to indicate to the user that the user can directly manipulate the object. The manipulation can consist of actions such as sizing and moving. The System.Drawing.Graphics object to draw on. The System.Drawing.Rectangle that represents the dimensions of the grab handle glyph. true to draw the handle as a primary grab handle; otherwise, false. true to draw the handle in an enabled state; otherwise, false.","dd) DrawGrid","[C#] public static void DrawGrid(Graphics graphics, Rectangle area, Size pixelsBetweenDots, Color backColor);","[C++] public: static void DrawGrid(Graphics* graphics, Rectangle area, Size pixelsBetweenDots, Color backColor);","[VB] Public Shared Sub DrawGrid(ByVal graphics As Graphics, ByVal area As Rectangle, ByVal pixelsBetweenDots As Size, ByVal backColor As Color)","[JScript] public static function DrawGrid(graphics: Graphics, area: Rectangle, pixelsBetweenDots: Size, backColor: Color);","Description","Draws a grid of one-pixel dots with the specified spacing, within the specified bounds, on the specified graphics surface, and in the specified color.","The backColor parameter is used to calculate the fill color of the dots so that the grid is always visible against the background. The System.Drawing.Graphics object to draw on. The System.Drawing.Rectangle that represents the dimensions of the grab handle glyph. The System.Drawing.Size.Height and System.Drawing.Size.Width between the dots of the grid. The System.Drawing.Color of the background behind the grid.","ee) DrawImageDisabled","[C#] public static void DrawImageDisabled(Graphics graphics, Image image, int x, int y, Color background);","[C++] public: static void DrawImageDisabled(Graphics* graphics, Image* image, int x, int y, Color background);","[VB] Public Shared Sub DrawImageDisabled(ByVal graphics As Graphics, ByVal image As Image, ByVal x As Integer, ByVal y As Integer, ByVal background As Color)","[JScript] public static function DrawImageDisabled(graphics: Graphics, image: Image, x int, y: int, background: Color);","Description","Draws the specified image in a disabled state.","The background parameter is used to calculate the fill color of the disabled image so that it is always visible against the background. The System.Drawing.Graphics object to draw on. The System.Drawing.Image to draw. The System.Drawing.Rectangle.X coordinate of the top left of the border image. The System.Drawing.Rectangle.Y coordinate of the top left of the border image. The System.Drawing.Color of the background behind the image.","ff) DrawLockedErame","[C#] public static void DrawLockedFrame(Graphics graphics, Rectangle rectangle, bool primary);","[C++] public: static void DrawLockedFrame(Graphics* graphics, Rectangle rectangle, bool primary);","[VB] Public Shared Sub DrawLockedFrame(ByVal graphics As Graphics, ByVal rectangle As Rectangle, ByVal primary As Boolean)","[JScript] public static function DrawLockedFrame(graphics: Graphics, rectangle: Rectangle, primary Boolean);","Description","Draws a locked selection frame on the screen within the specified bounds and on the specified graphics surface. Specifies whether to draw the frame with the primary selected colors. The System.Drawing.Graphics object to draw on. The System.Drawing.Rectangle that represents the dimensions of the frame. true to draw this frame with the colors used for the primary selection; otherwise, false.","gg) DrawMenuGlyph","[C#] public static void DrawMenuGlyph(Graphics graphics, Rectangle rectangle, MenuGlyph glyph);","[C++] public: static void DrawMenuGlyph(Graphics* graphics, Rectangle rectangle, MenuGlyph glyph);","[VB] Public Shared Sub DrawMenuGlyph(ByVal graphics As Graphics, ByVal rectangle As Rectangle, ByVal glyph As MenuGlyph)","[JScript] public static function DrawMenuGlyph(graphics: Graphics, rectangle Rectangle, glyph: MenuGlyph); Draws a menu glyph on a menu item control.","Description","Draws the specified menu glyph on a menu item control within the specified bounds and on the specified surface.","When owner-drawing System.Windows.Forms.MenuItem controls, you need to verify property values to determine the correct glyph to draw or remove. For example, when the System.Windows.Forms.MenuItem.Checked property is set to true, you need to draw a System.Windows.Forms.MenuGlyph.Checkmark glyph on the System.Windows.Forms.MenuItem. The System.Drawing.Graphics object to draw on. The System.Drawing.Rectangle that represents the dimensions of the glyph. The System.Windows.Forms.MenuGlyph to draw.","hh) DrawMenuGlyph","[C#] public static void DrawMenuGlyph(Graphics graphics, int x, int y, int width, int height, MenuGlyph glyph);","[C++] public: static void DrawMenuGlyph(Graphics* graphics, int x, int y, int width, int height, MenuGlyph glyph);","[VB] Public Shared Sub DrawMenuGlyph(ByVal graphics As Graphics, ByVal x As Integer, ByVal y As Integer, ByVal width As Integer, ByVal height As Integer, ByVal glyph As MenuGlyph)","[JScript] public static function DrawMenuGlyph(graphics: Graphics, x: int, y: int, width: int, height: int, glyph: MenuGlyph);","Description","Draws the specified menu glyph on a menu item control with the specified bounds and on the specified surface.","When owner-drawing System.Windows.Forms.MenuItem controls, you need to verify property values to determine the correct glyph to draw or remove. For example, when the System.Windows.Forms.MenuItem.Checked property is set to true, you need to draw a System.Windows.Forms.MenuGlyph.Checkmark glyph on the System.Windows.Forms.MenuItem. The System.Drawing.Graphics object to draw on. The System.Drawing.Rectangle.X coordinate of the upper left corner of the drawing rectangle. The System.Drawing.Rectangle.Y coordinate of the upper left corner of the drawing rectangle. The System.Drawing.Rectangle.Width of the menu glyph. The System.Drawing.Rectangle.Height of the menu glyph. The System.Windows.Forms.MenuGlyph to draw.","ii) DrawMixedCheckBox","[C#] public static void DrawMixedCheckBox(Graphics graphics, Rectangle rectangle, BuftonState state);","[C++] public: static void DrawMixedCheckBox(Graphics* graphics, Rectangle rectangle, ButtonState state);","[VB] Public Shared Sub DrawMixedCheckBox(ByVal graphics As Graphics, ByVal rectangle As Rectangle, ByVal state As ButtonState)","[JScript] public static function DrawMixedCheckBox(graphics: Graphics, rectangle: Rectangle, state: BuftonState); Draws a three-state check box control.","Description","Draws a three-state check box control in the specified state, on the specified graphics surface, and within the specified bounds. The System.Drawing.Graphics object to draw on. The System.Drawing.Rectangle that represents the dimensions of the check box. The System.Windows.Forms.ButtonState to draw the check box in.","jj) DrawMixedCheckBox","[C#] public static void DrawMixedCheckBox(Graphics graphics, int x, int y, int width, int height, ButtonState state);","[C++] public: static void DrawMixedCheckBox(Graphics* graphics, int x, int y, int width, int height, ButtonState state);","[VB] Public Shared Sub DrawMixedCheckBox(ByVal graphics As Graphics, ByVal x As Integer, ByVal y As Integer, ByVal width As Integer, ByVal height As Integer, ByVal state As ButtonState)","[JScript] public static function DrawMixedCheckBox(graphics: Graphics, x: int, y: int, width int, height int, state ButtonState);","Description","Draws a three-state check box control in the specified state, on the specified graphics surface, and within the specified bounds. The System.Drawing.Graphics object to draw on. The System.Drawing.Rectangle.X coordinate of the upper left corner of the drawing rectangle. The System.Drawing.Rectangle.Y coordinate of the upper left corner of the drawing rectangle. The System.Drawing.Rectangle.Width of the check box. The System.Drawing.Rectangle.Height of the check box. The System.Windows.Forms.ButtonState to draw the check box in.","kk) DrawRadioButton","[C#] public static void DrawRadioButton(Graphics graphics, Rectangle rectangle, ButtonState state);","[C++] public: static void DrawRadioButton(Graphics* graphics, Rectangle rectangle, ButtonState state);","[VB] Public Shared Sub DrawRadioButton(ByVal graphics As Graphics, ByVal rectangle As Rectangle, ByVal state As ButtonState)","[JScript] public static function DrawRadioButton(graphics: Graphics, rectangle Rectangle, state: ButtonState); Draws a radio button control.","Description","Draws a radio button control in the specified state, on the specified graphics surface, and within the specified bounds. The System.Drawing.Graphics object to draw on. The System.Drawing.Rectangle that represents the dimensions of the radio button. The System.Windows.Forms.ButtonState to draw the radio button in.\n\nll) DrawRadioButton\n\n[C#] public static void DrawRadioButton(Graphics graphics, int x, int y, int width, int height, ButtonState state);\n\n[C++] public: static void DrawRadioButton(Graphics* graphics, int x, int y, int width, int height, ButtonState state);\n\n[VB] Public Shared Sub DrawRadioButton(ByVal graphics As Graphics, ByVal x As Integer, ByVal y As Integer, ByVal width As Integer, ByVal height As Integer, ByVal state As ButtonState)\n\n[JScript] public static function DrawRadioButton(graphics: Graphics, x: int, y: int, width: int, height: int, state: ButtonState);\n\nDescription\n\nDraws a radio button control in the specified state, on the specified graphics surface, and within the specified bounds. The System.Drawing.Graphics object to draw on. The System.Drawing.Rectangle.X coordinate of the upper left corner of the drawing rectangle. The System.Drawing.Rectangle.Y coordinate of the upper left corner of the drawing rectangle. The System.Windows.Forms.Control.Width of the radio button. The System.Windows.Forms.Control.Height of the radio button. The System.Windows.Forms.ButtonState to draw the radio button in.\n","mm) DrawReversibleFrame","[C#] public static void DrawReversibleFrame(Rectangle rectangle, Color backColor, FrameStyle style);","[C++] public: static void DrawReversibleFrame(Rectangle rectangle, Color backColor, FrameStyle style);","[VB] Public Shared Sub DrawReversibleFrame(ByVal rectangle As Rectangle, ByVal backColor As Color, ByVal style As FrameStyle)","[JScript] public static function DrawReversibleFrame(rectangle: Rectangle, backColor: Color, style: FrameStyle);","Description","Draws a reversible frame on the screen within the specified bounds, with the specified background color, and in the specified state.","The backColor parameter is used to calculate the fill color of the frame so that it is always visible against the background. The System.Drawing.Rectangle that represents the dimensions of the rectangle to draw, in screen coordinates. The System.Drawing.Color of the background behind the frame. The System.Windows.Forms.FrameStyle of the frame.","nn) DrawReversibleLine","[C#] public static void DrawReversibleLine(Point start, Point end, Color backColor);","[C++] public: static void DrawReversibleLine(Point start, Point end, Color backColor);","[VB] Public Shared Sub DrawReversibleLine(ByVal start As Point, ByVal end As Point, ByVal backColor As Color)","[JScript] public static function DrawReversibleLine(start: Point, end: Point, backColor Color);","Description","Draws a reversible line on the screen within the specified starting and ending points and with the specified background color.","The backcolor parameter is used to calculate the fill color of the line so that it is always visible against the background. The starting System.Drawing.Point of the line, in screen coordinates. The ending System.Drawing.Point of the line, in screen coordinates. The System.Drawing.Color of the background behind the line.","oo) DrawScrollButton","[C#] public static void DrawScrollButton(Graphics graphics, Rectangle rectangle, ScrollButton button, ButtonState state);","[C++] public: static void DrawScrollButton(Graphics* graphics, Rectangle rectangle, ScrollButton button, ButtonState state);","[VB] Public Shared Sub DrawScrollButton(ByVal graphics As Graphics, ByVal rectangle As Rectangle, ByVal button As ScrollButton, ByVal state As ButtonState)","[JScript] public static function DrawScrollButton(graphics: Graphics, rectangle: Rectangle, button: ScrollButton, state: ButtonState); Draws a scroll button on a scroll bar control.","Description","Draws the specified scroll button on a scroll bar control in the specified state, on the specified graphics surface, and within the specified bounds. The System.Drawing.Graphics object to draw on. The System.Drawing.Rectangle that represents the dimensions of the glyph. The System.Windows.Forms.ScrolIButton to draw. The System.Windows.Forms.ButtonState that represents the state to draw the scroll button in.","pp) DrawScrollButton","[C#] public static void DrawScrollButton(Graphics graphics, int x, int y, int width, int height, ScrollButton button, ButtonState state);","[C++] public: static void DrawScrollButton(Graphics* graphics, int x, int y, int width, int height, ScrollButton button, ButtonState state);","[VB] Public Shared Sub DrawScrollButton(ByVal graphics As Graphics, ByVal x As Integer, ByVal y As Integer, ByVal width As Integer, ByVal height As Integer, ByVal button As ScrollButton, ByVal state As ButtonState)","[JScript] public static function DrawScrollButton(graphics: Graphics, x: int, y: int, width: int, height: int, button: ScrollButton, state: ButtonState);","Description","Draws the specified scroll button on a scroll bar control in the specified state, on the specified graphics surface, and within the specified bounds. The System.Drawing.Graphics object to draw on. The System.Drawing.Rectangle.X coordinate of the upper left corner of the drawing rectangle. The System.Drawing.Rectangle.Y coordinate of the upper left corner of the drawing rectangle. The System.Drawing.Rectangle.Width of the scroll button. The System.Drawing.Rectangle.Height of the scroll button. The System.Windows.Forms.ScrollButton to draw. The System.Windows.Forms.ButtonState that represents the state to draw the scroll button in.","qq) DrawSelectionFrame","[C#] public static void DrawSelectionFrame(Graphics graphics, bool active, Rectangle outsideRect, Rectangle insideRect, Color backColor);","[C++] public: static void DrawSelectionFrame(Graphics* graphics, bool active, Rectangle outsideRect, Rectangle insideRect, Color backColor);","[VB] Public Shared Sub DrawSelectionFrame(ByVal graphics As Graphics, ByVal active As Boolean, ByVal outsideRect As Rectangle, ByVal insideRect As Rectangle, ByVal backColor As Color)","[JScript] public static function DrawSelectionFrame(graphics: Graphics, active: Boolean, outsideRect: Rectangle, insideRect: Rectangle, backColor: Color);","Description","Draws a standard selection frame in the specified state, on the specified graphics surface, with the specified inner and outer dimensions, and with the specified background color.","A selection frame is a frame that is drawn around a selected component at design-time. The System.Drawing.Graphics object to draw on. true to draw the selection frame in an active state; otherwise, false. The System.Drawing.Rectangle that represents the outer boundary of the selection frame. The System.Drawing.Rectangle that represents the inner boundary of the selection frame. The System.Drawing.Color of the background behind the frame.","rr) DrawSizeGrip","[C#] public static void DrawSizeGrip(Graphics graphics, Color backColor, Rectangle bounds);","[C++] public: static void DrawSizeGrip(Graphics* graphics, Color backColor, Rectangle bounds);","[VB] Public Shared Sub DrawSizeGrip(ByVal graphics As Graphics, ByVal backColor As Color, ByVal bounds As Rectangle)","[JScript] public static function DrawSizeGrip(graphics: Graphics, backColor: Color, bounds: Rectangle); Draws a size grip on a form.","Description","Draws a size grip on a form with the specified bounds and background color and on the specified graphics surface.","The backColor parameter is used to calculate the color of the size grip so that it is always visible against the background. The System.Drawing.Graphics object to draw on. The System.Drawing.Color of the background used to determine the colors of the size grip. The System.Drawing.Rectangle that represents the dimensions of the size grip.","ss) DrawSizeGrip","[C#] public static void DrawSizeGrip(Graphics graphics, Color backColor, int x, int y, int width, int height);","[C++] public: static void DrawSizeGrip(Graphics* graphics, Color backColor, int x, int y, int width, int height);","[VB] Public Shared Sub DrawSizeGrip(ByVal graphics As Graphics, ByVal backColor As Color, ByVal x As Integer, ByVal y As Integer, ByVal width As Integer, ByVal height As Integer)","[JScript] public static function DrawSizeGrip(graphics: Graphics, backColor Color, x: int, y: int, width: int, height: int);","Description","Draws a size grip on a form with the specified bounds and background color and on the specified graphics surface.","The backColor parameter is used to calculate the color of the size grip so that it is always visible against the background. The System.Drawing.Graphics object to draw on. The System.Drawing.Color of the background used to determine the colors of the size grip. The System.Drawing.Rectangle.X coordinate of the upper left corner of the size grip. The System.Drawing.Rectangle.Y coordinate of the upper left corner of the size grip. The System.Drawing.Rectangle.Width of the size grip. The System.Drawing.Rectangle.Height of the size grip.","tt) DrawStringDisabled","[C#] public static void DrawStringDisabled(Graphics graphics, string s, Font font, Color color, RectangleF layoutRectangle, StringFormat format);","[C++] public: static void DrawStringDisabled(Graphics* graphics, String* s, Font* font, Color color, RectangleF layoutRectangle, StringFormat* format);","[VB] Public Shared Sub DrawStringDisabled(ByVal graphics As Graphics, ByVal s As String, ByVal font As Font, ByVal color As Color, ByVal layoutRectangle As RectangleF, ByVal format As StringFormat)","[JScript] public static function DrawStringDisabled(graphics: Graphics, s: String, font: Font, color: Color, layoutRectangle: RectangleF, format: StringFormat);","Description","Draws the specified string in a disabled state on the specified graphics surface, within the specified bounds, and in the specified font, color, and format. The System.Drawing.Graphics object to draw on. The System.String to draw. The System.Drawing.Font to draw the string with. The System.Drawing.Color to draw the string with. The System.Drawing.RectangleF object that represents the dimensions of the string. The System.Drawing.StringFormat to apply to the string.","uu) FillReversibleRectangle","[C#] public static void FillReversibleRectangle(Rectangle rectangle, Color backColor);","[C++] public: static void FillReversibleRectangle(Rectangle rectangle, Color backColor);","[VB] Public Shared Sub FillReversibleRectangle(ByVal rectangle As Rectangle, ByVal backColor As Color)","[JScript] public static function FillReversibleRectangle(rectangle: Rectangle, backColor: Color);","Description","Draws a filled, reversible rectangle on the screen.","The backColor parameter is used to calculate the fill color of the rectangle so that it is always visible against the background. The System.Drawing.Rectangle that represents the dimensions of the rectangle to fill, in screen coordinates. The System.Drawing.Color of the background behind the fill.","vv) Light","[C#] public static Color Light(Color baseColor);","[C++] public: static Color Light(Color baseColor);","[VB] Public Shared Function Light(ByVal baseColor As Color) As Color","[JScript] public static function Light(baseColor: Color): Color;","Description","Creates a new light color object for the control from the specified color.","Return Value: A System.Drawing.Color that represents the light color on the control.","If the specified System.Drawing.Color is one of the System.Drawing.SystemColors, the color is converted to a System.Drawing.SystemColors.ControlLight color; otherwise, the color's luminosity value is decreased. The System.Drawing.Color to be lightened.","ww) Light","[C#] public static Color Light(Color baseColor, float percOfLightLight);","[C++] public: static Color Light(Color baseColor, float percOfLightLight);","[VB] Public Shared Function Light(ByVal baseColor As Color, ByVal percOfLightLight As Single) As Color","[JScript] public static function Light(baseColor: Color, percOfLightLight: float): Color; Creates a new light color object for the control.","Description","Creates a new light color object for the control from the specified color and lightens it by the specified percentage.","Return Value: A System.Drawing.Color that represents the light color on the control.","If the specified System.Drawing.Color is one of the System.Drawing.SystemColors, the color is converted to a System.Drawing.SystemColors.ControlLight color; otherwise, the color's luminosity value is decreased. The System.Drawing.Color to be lightened. The percentage to lighten the specified System.Drawing.Color.","xx) LightLight","[C#] public static Color LightLight(Color basecolor);","[C++] public: static Color LightLight(Color baseColor);","[VB] Public Shared Function LightLight(ByVal baseColor As Color) As Color","[JScript] public static function LightLight(baseColor: Color): Color;","Description","Creates a new light color object for the control from the specified color.","Return Value: A System.Drawing.Color that represents the light color on the control.","If the specified System.Drawing.Color is one of the System.Drawing.SystemColors, the color is converted to the System.Drawing.SystemColors.ControlLightLight color; otherwise, the color's luminosity value is increased. The System.Drawing.Color to be lightened.","ControlStyles enumeration (System.Windows.Forms)","a) ToString","Description","Specifies the style and behavior of the control.","Controls use this enumeration in various properties and methods to specify functionality.","b) ToString","[C#] public const ControlStyles AllPaintingInWmPaint;","[C++] public: const ControlStyles AllPaintingInWmPaint;","[VB] Public Const AllPaintingInWmPaint As ControlStyles","[JScript] public var AllPaintingInWmPaint: ControlStyles;","Description","The control ignores the window message WM_ERASEBKGND to reduce flicker.","This style should only be used if System.Windows.Forms.ControlStyles.UserPaint is set to true.","c) ToString","[C#] public const ControlStyles CacheText;","[C++] public: const ControlStyles CacheText;","[VB] Public Const CacheText As ControlStyles","[JScript] public var CacheText: ControlStyles;","Description","The control keeps a copy of the text rather than getting it from the System.Windows.Forms.Control.Handle each time it is needed. This style defaults to false. This behavior improves performance, but makes it difficult to keep the text synchronized.","d) ToString","[C#] public const ControlStyles ContainerControl;","[C++] public: const ControlStyles ContainerControl;","[VB] Public Const ContainerControl As ControlStyles","[JScript] public var ContainerControl: ControlStyles;","Description","The control is a container-like control.","e) ToString","[C#] public const ControlStyles DoubleBuffer;","[C++] public: const ControlStyles DoubleBuffer;","[VB] Public Const DoubleBuffer As ControlStyles","[JScript] public var DoubleBuffer: ControlStyles;","Description","Drawing is performed in a buffer, and after it completes, the result is output to the screen. Double-buffering prevents flicker caused by the redrawing of the control.","f) ToString","[C#] public const ControlStyles EnableNotifyMessage;","[C++] public: const ControlStyles EnableNotifyMessage;","[VB] Public Const EnableNotifyMessage As ControlStyles","[JScript] public var EnableNotifyMessage: ControlStyles;","Description","If true, the System.Windows.Forms.Control.OnNotifyMessage(System.Windows.Forms.Message) method is called for every message sent to the control's System.Windows.Forms.Control.WndProc(System.Windows.Forms.Message@). This style defaults to false.","g) ToString","[C#] public const ControlStyles FixedHeight;","[C++] public: const ControlStyles FixedHeight;","[VB] Public Const FixedHeight As ControlStyles","[JScript] public var FixedHeight: ControlStyles;","Description","The control has a fixed height.","h) ToString","[C#] public const ControlStyles FixedWidth;","[C++] public: const ControlStyles FixedWidth;","[VB] Public Const FixedWidth As ControlStyles","[JScript] public var FixedWidth: ControlStyles;","Description","The control has a fixed width.","i) ToString","[C#] public const ControlStyles Opaque;","[C++] public: const ControlStyles Opaque;","[VB] Public Const Opaque As ControlStyles","[JScript] public var Opaque: ControlStyles;","Description","The control is drawn opaque and the background is not painted.","j) ToString","[C#] public const ControlStyles ResizeRedraw;","[C++] public: const ControlStyles ResizeRedraw;","[VB] Public Const ResizeRedraw As ControlStyles","[JScript] public var ResizeRedraw: ControlStyles;","Description","The control is redrawn when it is resized.","k) ToString","[C#] public const ControlStyles Selectable;","[C++] public: const ControlStyles Selectable;","[VB] Public Const Selectable As ControlStyles","[JScript] public var Selectable ControlStyles;","Description","The control can receive focus.","l) ToString","[C#] public const ControlStyles StandardClick;","[C++] public: const ControlStyles StandardClick;","[VB] Public Const StandardClick As ControlStyles","[JScript] public var StandardClick: ControlStyles;","Description","The control implements the standard System.Windows.Forms.Control.Click behavior.","m) ToString","[C#] public const ControlStyles StandardDoubleClick;","[C++] public: const ControlStyles StandardDoubleClick;","[VB] Public Const StandardDoubleClick As ControlStyles","[JScript] public var StandardDoubleClick: ControlStyles;","Description","The control implements the standard System.Windows.Forms.Control.DoubleClick behavior. This style is ignored if System.Windows.Forms.ControlStyles.StandardClick is not set.","n) ToString","[C#] public const ControlStyles SupportsTransparentBackColor;","[C++] public: const ControlStyles SupportsTransparentBackColor;","[VB] Public Const SupportsTransparentBackColor As ControlStyles","[JScript] public var SupportsTransparentBackColor: ControlStyles;","Description","The control accepts a System.Windows.Forms.Control.BackColor with an alpha component of less than 255 to simulate transparency. Transparency will be simulated only if the System.Windows.Forms.ControlStyles.UserPaint bit is set to true and the parent control is derived from System.Windows.Forms.Control.","o) ToString","[C#] public const ControlStyles UserMouse;","[C++] public: const ControlStyles UserMouse;","[VB] Public Const UserMouse As ControlStyles","[JScript] public var UserMouse: ControlStyles;","Description","The control does its own mouse processing, and mouse events are not handled by the operating system.","p) ToString","[C#] public const ControlStyles UserPaint;","[C++] public: const ControlStyles UserPaint;","[VB] Public Const UserPaint As ControlStyles","[JScript] public var UserPaint ControlStyles;","Description","The control paints itself rather than the operating system doing so. This style only applies to classes derived from System.Windows.Forms.Control","ConvertEventArgs class (System.Windows.Forms)","a) ToString","Description","Provides data for the System.Windows.Forms.Binding.Format and System.Windows.Forms.Binding.Parse events.","The System.Windows.Forms.ConvertEventArgs is used to format and unformat values displayed by a Windows Forms control that is databound through a System.Windows.Forms.Binding object. The System.Windows.Forms.Binding.Format event occurs whenever a control property is bound to a value, and the System.Windows.Forms.Binding.Parse event occurs whenever the bound value changes.","b) ConvertEventArgs","Example Syntax:","c) ToString","[C#] public ConvertEventArgs(object value, Type desiredType);","[C++] public: ConvertEventArgs(Object* value, Type* desiredType);","[VB] Public Sub New(ByVal value As Object, ByVal desiredType As Type)","[JScript] public function ConvertEventArgs(value: Object, desiredType: Type);","Description","Initializes a new instance of the System.Windows.Forms.ConvertEventArgs class. An System.Object that contains the value of the current property. The System.Type of the value.","d) DesiredType","e) ToString","[C#] public Type DesiredType {get;}","[C++] public: _property Type* get DesiredType( );","[VB] Public ReadOnly Property DesiredType As Type","[JScript] public function get DesiredType( ): Type;","Description","Gets the data type of the desired value.","The System.Windows.Forms.ConvertEvenArgs.DesiredType property enables you to check the type of the property that the value is being converted to.","f) Value","g) ToString","[C#] public object Value {get; set;}","[C++] public: _property Object* get_Value( ); public: _property void set_Value(Object*);","[VB] Public Property Value As Object","[JScript] public function get Value( ): Object; public function set Value(Object);","Description","Gets or sets the value of the System.Windows.Forms.ConvertEventArgs object.","The value contained by the System.Windows.Forms.ConvertEventArgs.Value property depends on the event in which the System.Windows.Forms.ConvertEventArgs object is returned. The System.Windows.Forms.ConvertEventArgs object can be returned in either the System.Windows.Forms.Binding.Format event, or the System.Windows.Forms.Binding.Parse event.","ConvertEventHandler delegate (System.Windows.Forms)","a) ToString","Description","Represents the method that will handle the System.Windows.Forms.Binding.Parse and System.Windows.Forms.Binding.Format events of a System.Windows.Forms.Binding object. The source of the event. A System.Windows.Forms.ConvertEventArgs that contains the event data.\n\nWhen you create a(n) System.Windows.Forms.ConvertEventHandler delegate, you identify the method that will handle the event. To associate the event with your event handler, add an instance of the delegate to the event. The event handler is called whenever the event occurs, unless you remove the delegate. For more information about event handler delegates, see.\n","CreateParams class (System.Windows.Forms)","a) ToString","Description","Encapsulates the information needed when creating a control.","The information in a System.Windows.Forms.CreateParams object can be used to pass information about the initial state and appearance of a control. Most System.Windows.Forms.Control derived controls override the System.Windows.Forms.Control.CreateParams property to pass in the appropriate values or include additional information in the System.Windows.Forms.CreateParams object.","b) CreateParams","Example Syntax:","c) ToString","[C#] public CreateParams( );","[C++] public: CreateParams( );","[VB] Public Sub New( )","[JScript] public function CreateParams( );","d) Caption","e) ToString","[C#] public string Caption {get; set;}","[C++] public: _property String* get_Caption( ); public: _property void set_Caption(String*);","[VB] Public Property Caption As String","[JScript] public function get Caption( ): String; public function set Caption(String);","Description","Gets or sets the control's initial text.","f) ClassName","g) ToString","[C#] public string ClassName {get; set;}","[C++] public: _property String* get_ClassName( ); public: _property void set_ClassName(String*);","[VB] Public Property ClassName As String","[JScript] public function get ClassName( ): String; public function set ClassName(String);","Description","Gets or sets the name of the class to derive the control from.","The default value for this property is null, indicating that the control is not derived from an existing control class. To derive from an existing control class, store the system class name in this property. For example, to derive from the standard System.Windows.Forms.Button control, set this property to \u201cBUTTON\u201d.","h) ClassStyle","i) ToString","[C#] public int ClassStyle {get; set;}","[C++] public: _property int get_ClassStyle( ); public: _property void set_ClassStyle(int);","[VB] Public Property ClassStyle As Integer","[JScript] public function get ClassStyle( ): int; public function set ClassStyle(int);","Description","Gets or sets a bitwise combination of class style values.","The System.Windows.Forms.CreateParams.ClassStyle property is ignored if the System.Windows.Forms.CreateParams.ClassName property is not null.","j) ExStyle","k) ToString PS [C#] public int ExStyle {get; set;}","[C++] public: _property int get_ExStyle( ); public: _property void set_ExStyle(int);","[VB] Public Property ExStyle As Integer","[JScript] public function get ExStyle( ): int; public function set ExStyle(int);","Description","Gets or sets a bitwise combination of extended window style values.","The System.Windows.Forms.CreateParams.ExStyle property supports extended appearance and initial state values to apply to the control.","l) Height","m) ToString","[C#] public int Height {get; set;}","[C++] public: _property int get_Height( ); public: _property void set_Height(int);","[VB] Public Property Height As Integer","[JScript] public function get Height( ): int; public function set Height(int);","Description","Gets or sets the initial height of the control.","n) Param","o) ToString","[C#] public object Param {get; set;}","[C++] public: _property Object* get_Param( ); public: _property void set_Param(Object*);","[VB] Public Property Param As Object","[JScript] public function get Param( ): Object; public function set Param(Object);","Description","Gets or sets additional parameter information needed to create the control.","If you are creating a multiple document interface (MDI) client window, the System.Windows.Forms.CreateParams.Param property must reference a CLIENTCREATESTRUCT structure.","p) Parent","q) ToString","[C#] public IntPtr Parent {get; set;}","[C++] public: _property IntPtr get_Parent( ); public: _property void set_Parent(IntPtr);","[VB] Public Property Parent As IntPtr","[JScript] public function get Parent( ): IntPtr; public function set Parent(IntPtr);","Description","Gets or sets the control's parent.","r) Style","s) ToString","[C#] public Mt Style {get; set;}","[C++] public: _property int get Style( ); public: _property void set_Style(int);","[VB] Public Property Style As Integer","[JScript] public function get Style( ): int; public function set Style(int);","Description","Gets or sets a bitwise combination of window style values.","The System.Windows.Forms.CreateParams.Style property controls the appearance of the control and its initial state.","t) Width","u) ToString","[C#] public int Width {get; set;}","[C++] public: _property int get_Width( ); public: _property void set_Width(int);","[VB] Public Property Width As Integer","[JScript] public function get Width( ): int; public function set Width(int);","Description","Gets or sets the initial width of the control.","v) X","w) ToString","[C#] public int X {get; set;}","[C++] public: _property int get_X( ); public: _property void set_X(int);","[VB] Public Property X As Integer","[JScript] public function get X( ): int; public function set X(int);","Description","Gets or sets the initial left position of the control.","x) Y","y) ToString","[C#] public int Y {get; set;}","[C++] public: _property int get_Y( ); public: _property void set Y(int);","[VB] Public Property Y As Integer","[JScript] public function get Y( ): int; public function set Y(int);","Description","Gets or sets the top position of the initial location of the control.","z) ToString","[C#] public override string ToString( );","[C++] public: String* ToString( );","[VB] Overrides Public Function ToString( ) As String","[JScript] public override function ToString( ): String;","Description","CurrencyManager class (System.Windows.Forms)","a) ToString","Description","Manages a list of System.Windows.Forms.Binding objects.","The System.Windows.Forms.CurrencyManager derives from the System.Windows.Forms.BindingManagerBase class. Use the System.Windows.Forms.BindingContext to return either a System.Windows.Forms.CurrencyManager or a System.Windows.Forms.PropertyManager. The actual object returned depends on the data source and data member passed to the System.Windows.Forms.BindingContext.Item(System.Object) property of the System.Windows.Forms.BindingContext. If the data source is an object that can only return a single property (instead of a list of objects), the type will be a System.Windows.Forms.PropertyManager. For example, if you specify a System.Windows.Forms.TextBox as the data source, a System.Windows.Forms.PropertyManager will be returned. If, on the other hand, the data source is an object that implements System.Collections.IList, System.ComponentModel.IListSource, or System.ComponentModel.IBindingList, a System.Windows.Forms.CurrencyManager will be returned.","b) ToString","[C#] protected Type finalType;","[C++] protected: Type* finalType;","[VB] Protected finalType As Type","[JScript] protected var finalType: Type;","Description","Specifies the data type of the list.","c) ToString","[C#] protected int listposition;","[C++] protected: int listposition;","[VB] Protected listposition As Integer","[JScript] protected var listposition: int;","Description","Specifies that there are no list members.","d) Bindings","e) Count","f) ToString","Description","Gets the number of items in the list.","Use the count property to determine when the end of a list has been reached. Because the System.Windows.Forms.CurrencyManager maintains a 0-based array of items, the end of the list is always System.Windows.Forms.CurrencyManager.Count minus one.","g) Current","h) ToString","[C#] public override object Current {get;}","[C++] public: _property virtual Object* get_Current( );","[VB] Overrides Public ReadOnly Property Current As Object","[JScript] public function get Current( ): Object;","Description","Gets the current item in the list.","In order to get the current item, you must know its data type in order to cast it correctly. For example, if the data source is a System.Data.DataView or System.Data.DataTable, you must cast the current item as a System.Data.DataRowView object.","i) List","j) ToString","[C#] public IList List {get;}","[C++] public: _property IList* get_List( );","[VB] Public ReadOnly Property List As IList","[JScript] public function get List( ): IList;","Description","Gets the IList for this System.Windows.Forms.CurrencyManager.","If the returned IList is of type Gets the list as an object.","k) Position","l) ToString","[C#] public override int Position {get; set;}","[C++] public: _property virtual int get_Position( ); public: _property virtual void set_Position(int);","[VB] Overrides Public Property Position As Integer","[JScript] public function get Position( ): int; public function set Position(int);","Description","Gets or sets the position you are at within the list.","An important property of the System.Windows.Forms.CurrencyManager is the System.Windows.Forms.CurrencyManager.Position property. In a list of items, you can only view one item out of the entire list. To determine which item is viewed, set the System.Windows.Forms.CurrencyManager.Position to a number between 0 (the beginning of the list) and System.Windows.Forms.CurrencyManager.Count minus one (the end of the list).","m) ToString","Description","Occurs when the current item has been altered.","The System.Windows
