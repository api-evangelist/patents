---
title: Apparatus and method for contacting a customer support line on customer's behalf and having a customer support representative contact the customer
abstract: A method is provided in an application server configured for responding to hypertext transport protocol (HTTP) requests. The method includes storing, in response to a first HTTP request, an XML document that specifies for a user, a call number of a second party. The stored XML document is retrieved based on a second HTTP request by the user. A first HTML document is generated based on the retrieved XML document. The first HTML document has instructions including the call number for accessing the second party. A second HTML document is generated based on a prescribed input received from the second party. The second HTML document has instructions for connecting the second party with the user. Hence, a user may speak with a called party without ever having to remain on hold.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=06973617&OS=06973617&RS=06973617
owner: Cisco Technology, Inc.
number: 06973617
owner_city: San Jose
owner_country: US
publication_date: 20000524
---

{"@attributes":{"id":"description"},"BRFSUM":[{},{}],"heading":["BACKGROUND OF THE INVENTION","SUMMARY OF THE INVENTION","BEST MODE FOR CARRYING OUT THE INVENTION"],"p":["1. Field of the Invention","The present invention relates to generating and executing voice enabled web applications within a hypertext markup language (HTML) and hypertext transport protocol (HTTP) framework.","2. Description of Related Art","The evolution of the public switched telephone network has resulted in a variety of voice applications and services that can be provided to individual subscribers and business subscribers. Such services include voice messaging systems that enable landline or wireless subscribers to record, playback, and forward voice mail messages. However, the ability to provide enhanced services to subscribers of the public switched telephone network is directly affected by the limitations of the public switched telephone network. In particular, the public switched telephone network operates according to a protocol that is specifically designed for the transport of voice signals; hence any modifications necessary to provide enhanced services can only be done by switch vendors that have sufficient know-how of the existing public switched telephone network infrastructure.","An IP network, such as the World Wide Web, the Internet, or a corporate intranet, provides client-server type application services for clients by enabling the clients to request application services from remote servers using standardized protocols, for example hypertext transport protocol (HTTP). The web server application environment can include web server software, such as Apache, implemented on a computer system attached to the IP network. Web-based applications are composed of HTML pages, logic, and database functions. In addition, the web server may provide logging and monitoring capabilities.","In contrast to the public switched telephone network, the open standards-based IP network has enabled the proliferation of web based applications written by web application developers using ever increasing web development tools. Hence, the ever increasing popularity of web applications and web development tools provides substantial resources for application developers to develop robust web applications in a relatively short time and an economical manner. However, one important distinction between telephony-based applications and web-based applications is that telephony-based applications are state aware, whereas web-based applications are stateless.","In particular, telephony applications are state aware to ensure that prescribed operations between the telephony application servers and the user telephony devices occur in a prescribed sequence. For example, operations such as call processing operations, voicemail operations, call forwarding, etc., require that specific actions occur in a specific sequence to enable the multiple components of the public switched telephone network to complete the prescribed operations.","The web-based applications running in the IP network, however, are state-less and transient in nature, and do not maintain application state because application state requires an interactive communication between the browser and back-end database servers accessed by the browsers via a HTTP-based web server. However, an HTTP server provides asynchronous execution of HTML applications, where the web applications in response to reception of a specific request in the form of a URL from a client, instantiate a program configured for execution of the specific request, send an HTML web page back to the client, and terminate the program instance that executed the specific request. Storage of application state information in the form of a \u201ccookie\u201d is not practical because some users prefer not to enable cookies on their browser, and because the passing of a large amount of state information as would normally be required for voice-type applications between the browser and the web application would substantially reduce the bandwidth available for the client.","Commonly-assigned, copending application Ser. No. 09\/480,485, filed Jan. 11, 2000, entitled Application Server Configured for Dynamically Generating Web Pages for Voice Enabled Web Applications, the disclosure of which is incorporated in its entirety herein by reference, discloses an application server that executes a voice-enabled web application by runtime execution of extensible markup language (XML) documents that define the voice-enabled web application to be executed. The application server includes a runtime environment that establishes an efficient, high-speed connection to a web server. The application server, in response to receiving a user request from a user, accesses a selected XML page that defines at least a part of the voice application to be executed for the user. The XML page may describe any one of a user interface such as dynamic generation of a menu of options or a prompt for a password, an application logic operation, or a function capability such as generating a function call to an external resource. The application server then parses the XML page, and executes the operation described by the XML page, for example dynamically generating an HTML page having voice application control content, or fetching another XML page to continue application processing. In addition, the application server may access an XML page that stores application state information, enabling the application server to be state-aware relative to the user interaction. Hence, the XML page, which can be written using a conventional editor or word processor, defines the application to be executed by the application server within the runtime environment, enabling voice enabled web applications to be generated and executed without the necessity of programming language environments.","Hence, web programmers can write voice-enabled web applications, using the teachings of the above-incorporated application Ser. No. 09\/480,485, by writing XML pages that specify respective voice application operations to be performed.","When using a public switched telephone network to call a customer support line, typically the caller or customer is placed on hold and the call is placed in a queue. When the caller reaches the top of the queue, often after waiting 15\u201320 minutes, the call is answered by the customer service representative. Hence, the caller wastes time and network resources in trying to contact the support representative.","Conventional callback systems have been employed to call a caller back when the called party is available. However, such systems must be present at the called party's premises and require knowledge of the public switch telephone network to implement.","There is a need for an arrangement that enables voice applications to be implemented on an IP packet switched network using the open standards-based flexibility of the IP network.","There is also a need for an arrangement that enables voice applications to be implemented using HTTP and HTML open standards, enabling development of voice applications by individuals that do not have expertise in the public switched telephone network. For example, there is a need for arrangement that enables voice applications to be designed by web programmers.","There is also a need for an arrangement that enables voice applications to be implemented using an IP network.","There is also a need for an arrangement that enables an application server to call a second party on behalf of a caller, to call back the caller when the second party is available, and to bridge the calls connecting the second party and the caller so that the caller need not wait on hold in order to speak with the second party.","These and other needs are attained by the present invention, where an application server is configured for executing an executable voice application. The application server includes an application runtime environment which generates a first hypertext markup language (HTML)=document based on an XML document. The first HTML document has instructions including the call number for accessing the second party. The application runtime environment generates a second HTML document based in a prescribed input received from the second party. The second HTML document has instructions for connecting the second party with the user. A storage medium is configured for storing the XML document.","According to one aspect of the present invention, a method is provided in an application server configured for responding to hypertext transport protocol (HTTP) requests. The method includes storing, in response to a first HTTP request, an XML document that specifies for a user, a call number of a second party. The stored XML document is retrieved based on a second HTTP request by the user. A first HTML document is generated based on the retrieved XML document. The first HTML document has instructions including the call number for accessing the second party. A second HTML document is generated based on a prescribed input received from the second party. The second HTML document has instructions for connecting the second party with the user. Hence, a user may speak with a called party without ever having to remain on hold.","Additional advantages and novel features of the invention will be set forth in part in the description which follows and in part will become apparent to those skilled in the art upon examination of the following or may be learned by practice of the invention. The advantages of the present invention may be realized and attained by means of instrumentalities and combinations particularly pointed out in the appended claims.","The disclosed embodiment is directed to an arrangement for providing unified voice messaging services and data services via an IP network using a web browser having audio control for voice enabled web applications. The ability to provide unified voice messaging services via an IP network enables existing web servers on the World Wide Web or in corporate intranets to support telephone applications on a scalable and economic platform. Moreover, providing unified voice messaging services via an IP network enables use of open standards that permits web programmers to use existing web programming techniques to design and implement voice telephone applications.",{"@attributes":{"id":"p-0029","num":"0028"},"figref":["FIG. 1","FIG. 1"],"b":["60","42","42","56","42","42"],"i":["a ","b ","a ","b "]},"The skinny clients , , and and the tiny clients , , and also have access to the unified voice messaging services in the unified network  by accessing a proxy browser , configured for providing an IP and HTTP interface for the skinny clients and the tiny clients. In particular, browsers operate by interpreting tags within a web page supplied via an HTTP connection, and presenting to a user media content information (e.g., text, graphics, streaming video, sound, etc.) based on the browser capabilities; if a browser is unable to the interpreting a tag, for example because the browser does not have the appropriate executable plug-in resource, then the browser typically will ignore the unknown tag. Hence, the proxy browser  can provide to each of the skinny clients and tiny clients the appropriate media content based on the capabilities of the corresponding client, such that the cordless telephone and telephone would receive analog audio signals played by the proxy browser  and no text information (unless a display is available); the fax machine and pager would only receive data\/text information, and the cellular telephone and the handheld computing device would receive both voice and data information. Hence, the proxy browser  interfaces between the IP network and the respective local access devices for the skinny clients and the tiny clients to provide access to the unified messaging network .","The proxy browser  and the web browsers  within the fat client and the thin client execute voice enabled web applications by sending data and requests to a web server , and receiving hypertext markup language (HTML) web pages from the web server , according to hypertext transport protocol (HTTP). The web server  serves as an interface between the browsers and an application server  that provides an executable runtime environment for XML voice applications . For example, the web server  may access the application server  across a common Gateway Interface (CGI), by issuing a function call across an application programming interface (API), or by requesting a published XML document or an audio file requested by one of the browsers  or . The application server , in response to receiving a request from the web server , may either supply the requested information in the form of an HTML page having XML tags for audio control by a voice resource within the browser, or may perform processing and return a calculated value to enable the browser  or  to perform additional processing. In particular, the application server  may either access static XML pages, or the application server  may access stored XML application pages (i.e., pages that define an application) and in response generate new XML pages during runtime and supply the generated XML pages to the web server .",{"@attributes":{"id":"p-0032","num":"0031"},"figref":["FIG. 2","FIG. 1","FIG. 2"],"b":["60","70","72","74","76","78"]},{"@attributes":{"id":"p-0033","num":"0032"},"figref":"FIG. 2","b":["42","42","64","82","84","42","64","42","56","86","42","64","10","87","88","64","89","90"],"i":["b ","a","b ","b ","b ","a "]},"Since the skinny clients and tiny clients  do not have browser resources, the skinny clients and tiny clients  access the proxy browser  via the PSTN  and the IP gateway . The IP gateway includes both a proxy browser  and a voice resource , enabling the IP gateway  the to provide all audio control service for the skinny clients and tiny clients . Hence, the PSTN  is used merely for transfer of analog audio signals, with intelligent application processing being provided by the proxy browser . Note that if one of the telephones \u2032 is an IP telephone, then it can access the server  via an IP connection ; in this case, the browser internal to the IP telephone \u2032 would process only audio functions, and would ignore any tags associated with text or image content.","As shown in , the web server , the application server , and the voice web applications  reside within a gateserver . The gateserver  includes a browser based XML editor tool  that enables a web programmer to design voice applications using XML pages, described below. The XML pages are stored as XML applications and functions , for example within a database accessible by the application server . The XML pages stored within the XML application and functions  may be stored as static pages to be fetched by the web server  and supplied to a browser, however the XML pages may also define the actual application to be executed by the application server  in runtime. Hence, the application server  may execute stored XML applications and functions , and in response generate dynamic HTML having XML tags, also referred to as HTML\/XML pages.","According to the disclosed embodiment, the browsers  and  provide audio control for voice enabled web applications based on the HTML-XML pages supplied by the application server  to the web server  for transport across an HTTP connection. The application server  executes stored XML applications, also referred to generally as a web applications, in response to HTML requests from the user. During execution of the stored XML applications, the application server  stores in a separate registry  () a data record, also referred to as a \u201cbrownie\u201d, that specifies the application state for at least one XML application instance. As described in commonly assigned, copending application Ser. No. 09\/538,899, filed Mar. 30, 2000, entitled \u201cApparatus And Method For Providing Server State And Attribute Management For Multiple-Threaded Voice Enabled Web Applications\u201d, the disclosure of which is incorporated in its entirety herein by reference, the \u201cbrownie\u201d is configured for storing user attribute information and application state information for multiple users associated with a given voice applications session. Hence, the application server  may simultaneously and independently control voice application operations for multiple users that may be associated according to a prescribed application condition, for example the possibility of bridging the users together for a phone call or a phone conference.","Hence, the use of a \u201cbrownie\u201d configured for storing attributes and state information for multiple users enables the application server to effectively control multiple \u201clines\u201d for the proxy browser  controlling, for example, a voice over IP telephony switch.","As described above, conventional application development techniques involving writing application code using a conventional word processor require a user to have familiarity with executable code syntax. Although use of XML documents to define voice application operations eliminates the necessity of writing programming code, use of a conventional word processor for development of the XML documents still requires the application developer to have substantial knowledge of XML syntax, limiting the ability of a typical user lacking expertise in application development or XML syntax to personalize a voice application.","Certain development tools having direct access to the application server  can be used to establish context information used by the application runtime environment within the application server  for execution application operations based on parsing of XML documents. In particular, development tools  such as a graphic based development system, a forms-based development system, an editor-based development system, or an outline-based development system may be used to define XML tags and procedure calls for the application runtime environment. The development tools  may be used to establish an application and resource database  to define low-level operations for prescribed XML tags, for example dynamically generating an XML menu page using executable functions specified by a menu rule set in response to detecting a menu tag, performing a logical operation using executable functions specified by a logic rule set in response to a decision tag, or fetching an audio (.wav) file in response to detecting a sound tag.","The development tools  may be used to establish an application programming interface (API) library  (e.g., a SQL interface) for the application runtime environment, enabling the application server  to issue prescribed function calls to established services, such as IMAP, LDAP, or SMTP. The library  may be implemented as dynamically linked libraries (DLLs) or application programming interface (API) libraries. If desired, the development tools  may also be used to generate an XML application as a stored text file , without the use of the forms generated by the application server , described below.","A user of the browser  typically sends a request to the application server  (via the web server ) for a voice application operation , for example using an interface executable by a browser  or , for accessing new voice mail messages, new facsimile messages, new e-mail messages, and the like. A user of the browser  also can send a request to the application server  for creating or modifying an XML document defining a voice application operation, via a development tool common gateway interface (CGI). In particular, the web browser  posts a user input for an application operation (i.e., an HTTP request) to a first URL for the voice application operation. In contrast, the web browser  posts to another URL for accessing the development tool CGI. Accessing the application server via the CGI enables the application server  to access a selected XML document, for example the XML document  illustrated in , in order to dynamically generate a form , illustrated in , that specifies selected application parameters of the XML document . Hence, accessing the application server by posting the user input according to a first URL causes execution of the XML document , whereas accessing the application server via the CGI causes the application server  to generate a form that specifies the contents of the XML document .","Hence, accessing the application server  via the CGI enables the web browser to perform different operations on the selected XML document , described in further detail in commonly-assigned, copending application Ser. No. 09\/559,637, filed Apr. 28, 2000, entitled \u201cBrowser-Based Arrangement For Developing Voice Enabled Web Applications Using Extensible Markup Language Documents\u201d, the disclosure of which is incorporated in its entirely herein by reference.",{"@attributes":{"id":"p-0043","num":"0042"},"figref":["FIG. 4","FIG. 4"],"b":["106","108","66","102","56","66","104","104","104","104","106","106","106","106","108","108","108","108","66","104","102","108","106","104","108","102","66","108","106","110","102","81","56","102"],"i":["a","b","c","g ","a","b","c","g ","a","b","c","g","a","a ","a","g ","g","b "]},"The application server  also parses the XML option tags  for insertion of menu application parameters  into the respective menu entry fields . For example, the application server  inserts the menu application parameters , , and into the respective menu entry fields , , and , and inserts the menu application parameters , , and into the respective menu entry fields , , and generated by the HTML document.","The application server  also specifies an entry field  that enables the browser user to specify the filename  of the XML document (i.e., the designation used by the application server  when referring to the \u201ccurrent state\u201d). In addition, the application server  specifies an addition button  that enables users to add menu options  to an XML document; hence, if the user enters a new file name within the entry field  and presses the addition button , the browser  posts to a prescribed URL to cause the application server to generate a new XML document having a name specified in the field , and to generate another HTML form having an additional menu entry field  for the new prompt.","The application server also specifies within the HTML form  prescribed URLs associated with command hyperlinks , such that posting the form  by the browser  to a corresponding one of the URLs  results in a corresponding operation performed by the application server .","Hence, the HTML entry form  generated by the application server  provides all the fields and command functions necessary for a user to create or modify a new or existing XML document, regardless of whether the XML document is a menu-based XML document or a non-menu XML document.",{"@attributes":{"id":"p-0048","num":"0047"},"figref":["FIG. 5","FIG. 5"],"b":["66","66","66","220","100","96","83","66","222","66","64"]},"The application server  also includes a runtime environment  for execution of the parsed XML documents. As described above, the runtime environment  may selectively execute any one of user interface operation , a logic operation , or a procedure call  as specified by the parsed XML document by executing a corresponding set of executable functions based on the a rule set for the corresponding operation. In particular, the application runtime environment  includes a tag implementation module  that implements the XML tags parsed by the XML parser . The tag implementation module  performs relatively low-level operations, for example dynamically generating an XML menu page using executable functions specified by a menu rule set in response to detecting a menu tag, performing a logical operation using executable functions specified by a logic rule set in response to a decision tag, or fetching an audio (.wav) file in response to detecting a sound tag. Hence, the tag implementation module  implements the tag operations that are specified within the XML framework of the stored XML documents.","The application server  also includes a set of libraries  that may be implemented as dynamically linked libraries (DLLs) or application programming interface (API) libraries. The libraries  enable the runtime environment  to implement the procedures  as specified by the appropriate XML document.","The arrangement for executing a personalized voice-enabled web application will now be described. As described above with respect to ,  and , a user is able to personalize his or her voice application by sending an HTTP request to the application server , for example via a CGI interface, for generation of an HTML document that specifies the form  for modifying application parameters of a prescribed XML document. The application server  responds to the HTTP request by accessing application document database  for retrieval of the selected generic XML document, and by generating the HTML document having the form  with the selected application parameters. Once the user modifies (i.e., personalizes) the application parameters within the form  and posts the completed form  to a prescribed URL via the CGI interface, the application server  generates a new user-specific XML document that specifies the voice application operations as personalized by the corresponding user, and stores the user-specific XML document in a user-specific database.",{"@attributes":{"id":"p-0052","num":"0051"},"figref":["FIG. 6","FIG. 6"],"b":["66","56","62","66","56","62"]},"The method begins in step , wherein the user by use of the browser , sends a request for an HTML form to create a new XML document. The application server , in response to receiving the request, outputs in step  an HTML form to the browser . The user inputs a customer support call number and optionally, the user's call number on the form in step . The user's call number may otherwise be stored in a brownie. Optionally, in step , the user inputs digits corresponding to menu options and\/or account numbers which the user knows will be required prior to speaking with the customer support representative. The proper wait stages may also be entered to ensure the data is processed properly. For example, the user may enter his or her Social Security Number as 123456789 and then press 2 to wait two seconds, and then enter his or her account no. as 34567. The form  may also have a record function so that the user can record a message to be played as an audio (.wav) file, for example, \u201cYour important customer, Mary Smith would like to speak with you. To connect, press 1\u201d. Alternatively, a pre-recorded message can be created using the editor tool .","The completed form  is sent to the application server  using an HTTP post (e.g., an HTTP put to a prescribed URL) in step . The application server  in step  parses the HTML form and inserts input application parameters as XML tags into an XML document and stores the XML document in the database .","In step , the user employs the browser to send a second HTTP request for the voice application operation specified by the stored XML. In step , the application server generates an HTML page with XML tags and outputs the HTML page to the proxy browser . The HTML page contains tags for dialing the second party and, if necessary, for dialing the digits in response to the prompt sequence. In step , the proxy browser  parses the HTML page and XML tags for application parameters, and executes the operations specified by the XML tags. In particular, the proxy browser  sends a command to the associated telephony device (e.g., PBX or voice over IP gateway) to connect with the customer support line via the PSTN  in step . In response to any prompt sequence, the digits provided step  are dialed. In step , the proxy browser  plays the pre-recorded or personalized message such as \u201cYour important customer would like to speak with you. To connect, press 1\u201d. An input waiting period is provided in step .","Step  determines if an input is made and if an input is detected, in step , the proxy browser send a response to the application server which generates a second HTML document having instructions for connecting the second party with the user. Hence, based on the second HTML document, the proxy browser  sends a command to the telephony device to connect with the user and the call is bridged by using the brownies as disclosed in the above-incorporated application Ser. No. 09\/538,899. If no input is detected, the messages is played repeatedly. A time-out period may be set to terminate the session if no input is received, for example, in 30 minutes. Thus, in the disclosed embodiment, a customer may speak with a customer support representative without ever having to remain on hold. As disclosed, the customer support line is contacted and the line is maintained until a customer support representative indicates that he or she is willing to talk to the customer and if so, the customer is called, and the call is bridged.","While this invention has been described in connection with what is presently considered to be the most practical and preferred embodiment, it is to be understood that the invention is not limited to the disclosed embodiments, but, on the contrary, is intended to cover various modifications and equivalent arrangements included within the spirit and scope of the appended claims."],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"BRIEF DESCRIPTION OF THE DRAWINGS","p":["Reference is made to the attached drawings, wherein elements having the same reference numeral designations represent like elements throughout and wherein:",{"@attributes":{"id":"p-0022","num":"0021"},"figref":"FIG. 1"},{"@attributes":{"id":"p-0023","num":"0022"},"figref":["FIG. 2","FIG. 1"]},{"@attributes":{"id":"p-0024","num":"0023"},"figref":["FIG. 3","FIGS. 1 and 2"]},{"@attributes":{"id":"p-0025","num":"0024"},"figref":"FIG. 4"},{"@attributes":{"id":"p-0026","num":"0025"},"figref":["FIG. 5","FIGS. 1 and 2"]},{"@attributes":{"id":"p-0027","num":"0026"},"figref":"FIG. 6"}]},"DETDESC":[{},{}]}
